# Production Docker Compose Configuration for Odoo 17
version: '3.8'

services:
  db:
    image: postgres:13
    container_name: odoo17_db_prod
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - odoo-db-data:/var/lib/postgresql/data/pgdata
      - ./pg_config/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - odoo-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

  odoo:
    build: .
    container_name: odoo17_app_prod
    depends_on:
      db:
        condition: service_healthy
    environment:
      - HOST=db
      - USER=${POSTGRES_USER}
      - PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ODOO_RC=/opt/odoo/odoo.conf
    volumes:
      - ./custom_addons:/opt/odoo/custom_addons:ro
      - ./addons:/opt/odoo/addons:ro
      - ./odoo.conf:/opt/odoo/odoo.conf:ro
      - odoo-web-data:/var/lib/odoo
      - odoo-log-data:/var/log/odoo
      - ./backup:/opt/odoo/backup:rw
    ports:
      - "${SERVER_IP}:${ODOO_HTTP_PORT}:8069"
      - "${SERVER_IP}:${ODOO_LONGPOLLING_PORT}:8072"
    restart: unless-stopped
    command: ["odoo", "-c", "/opt/odoo/odoo.conf"]
    networks:
      - odoo-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8069/web/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'

  redis:
    image: redis:7-alpine
    container_name: odoo17_redis_prod
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - odoo-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  nginx:
    image: nginx:alpine
    container_name: odoo17_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - odoo-log-data:/var/log/odoo:ro
    ports:
      - "${SERVER_IP}:80:80"
      - "${SERVER_IP}:443:443"
    depends_on:
      - odoo
    restart: unless-stopped
    networks:
      - odoo-network

  # Backup service
  backup:
    build:
      context: .
      dockerfile: Dockerfile.backup
    container_name: odoo17_backup
    depends_on:
      - db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BACKUP_DIR=${BACKUP_DIR}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS}
    volumes:
      - ./backup:/backup:rw
      - odoo-web-data:/var/lib/odoo:ro
    restart: unless-stopped
    networks:
      - odoo-network

volumes:
  odoo-db-data:
    driver: local
  odoo-web-data:
    driver: local
  odoo-log-data:
    driver: local
  redis-data:
    driver: local

networks:
  odoo-network:
    driver: bridge