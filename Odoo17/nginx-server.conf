# Nginx configuration for Odoo17 Server
# Server Environment - External Access Ready
# Place this in /etc/nginx/sites-available/odoo17-server

upstream odoo {
    server 127.0.0.1:8069;
}

upstream odoochat {
    server 127.0.0.1:8072;
}

# Main HTTP server
server {
    listen 80;
    server_name _;  # Accept all server names
    
    # Server identification
    add_header X-Server-Info "Odoo17-Server" always;
    
    # Main Odoo application
    location / {
        proxy_pass http://odoo;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_redirect off;

        # Essential headers for Odoo
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Server-specific headers
        proxy_set_header X-Server-Port $server_port;

        # Timeout settings (server optimized)
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;

        # Buffer settings for better performance
        proxy_buffering off;
        proxy_buffer_size 64k;
        proxy_buffers 8 64k;
        proxy_busy_buffers_size 64k;
        
        # Request size for file uploads
        client_max_body_size 100M;
    }

    # Handle longpolling for chat/notifications
    location /longpolling {
        proxy_pass http://odoochat;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_redirect off;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Longpolling specific settings
        proxy_connect_timeout 3600;
        proxy_send_timeout 3600;
        proxy_read_timeout 3600;
        send_timeout 3600;
        proxy_buffering off;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Serve static files with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://odoo;
        
        # Aggressive caching for static assets
        proxy_cache_valid 200 24h;
        proxy_buffering on;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Compression for static files
        gzip_static on;
    }
    
    # Handle web assets specifically
    location /web/static/ {
        proxy_pass http://odoo;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Security and performance settings
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Hide nginx version
    server_tokens off;
    
    # Rate limiting (basic protection)
    limit_req_zone $binary_remote_addr zone=odoo:10m rate=10r/s;
    limit_req zone=odoo burst=20 nodelay;
    
    # Connection limits
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 10;

    # Logging
    access_log /var/log/nginx/odoo_access.log;
    error_log /var/log/nginx/odoo_error.log;
    
    # Error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        add_header Content-Type text/html;
        return 502 "Odoo Server Temporarily Unavailable";
    }
}

# Optional HTTPS server (uncomment and configure for SSL)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#
#     # SSL configuration
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers off;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     
#     # Same location blocks as HTTP server above
#     # ... (copy all location blocks from HTTP server)
# }