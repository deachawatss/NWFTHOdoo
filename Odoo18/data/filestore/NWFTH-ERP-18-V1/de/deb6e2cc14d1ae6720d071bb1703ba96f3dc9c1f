
/* /web/static/src/views/graph/graph_model.js */
odoo.define('@web/views/graph/graph_model',['@web/core/l10n/translation','@web/core/utils/arrays','@web/core/utils/concurrency','@web/search/utils/dates','@web/search/utils/group_by','@web/search/utils/misc','@web/model/model','@web/views/utils','@web/core/domain'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{sortBy,groupBy,unique}=require("@web/core/utils/arrays");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{rankInterval}=require("@web/search/utils/dates");const{getGroupBy}=require("@web/search/utils/group_by");const{GROUPABLE_TYPES}=require("@web/search/utils/misc");const{addPropertyFieldDefs,Model}=require("@web/model/model");const{computeReportMeasures,processMeasure}=require("@web/views/utils");const{Domain}=require("@web/core/domain");const SEP=__exports.SEP=" / ";const DATA_LIMIT=80;const SEQUENTIAL_TYPES=__exports.SEQUENTIAL_TYPES=["date","datetime"];const GraphModel=__exports.GraphModel=class GraphModel extends Model{setup(params){this.keepLast=new KeepLast();this.race=new Race();const _fetchDataPoints=this._fetchDataPoints.bind(this);this._fetchDataPoints=(...args)=>this.race.add(_fetchDataPoints(...args));this.initialGroupBy=null;this.metaData=params;this.data=null;this.searchParams=null;this.lineOverlayDataset=null;}
async load(searchParams){this.searchParams=searchParams;if(!this.initialGroupBy){this.initialGroupBy=searchParams.context.graph_groupbys||this.metaData.groupBy;}
const metaData=this._buildMetaData();await addPropertyFieldDefs(this.orm,metaData.resModel,searchParams.context,metaData.fields,metaData.groupBy.map((gb)=>gb.fieldName));await this._fetchDataPoints(metaData);}
async forceLoadAll(){const metaData=this._buildMetaData();await this._fetchDataPoints(metaData,true);this.notify();}
hasData(){return this.dataPoints?.length>0;}
async updateMetaData(params){if("measure"in params){const metaData=this._buildMetaData(params);await this._fetchDataPoints(metaData);this.useSampleModel=false;}else{await this.race.getCurrentProm();this.metaData=Object.assign({},this.metaData,params);this._prepareData();}
this.notify();}
_buildMetaData(params){const{domain,context,groupBy}=this.searchParams;const metaData=Object.assign({},this.metaData,{context});metaData.domains=[{arrayRepr:domain,description:null}];metaData.measure=context.graph_measure||metaData.measure;metaData.mode=context.graph_mode||metaData.mode;metaData.groupBy=groupBy.length?groupBy:this.initialGroupBy;if(metaData.mode!=="pie"){metaData.order="graph_order"in context?context.graph_order:metaData.order;if("graph_stacked"in context){metaData.stacked=context.graph_stacked;}
if(metaData.mode==="line"){metaData.cumulated="graph_cumulated"in context?context.graph_cumulated:metaData.cumulated;}}
this._normalize(metaData);metaData.measures=computeReportMeasures(metaData.fields,metaData.fieldAttrs,[...(metaData.viewMeasures||[]),metaData.measure,]);return Object.assign(metaData,params);}
async _fetchDataPoints(metaData,forceUseAllDataPoints=false){[this.dataPoints,this.currencyState]=await this.keepLast.add(this._loadDataPoints(metaData));this.metaData=metaData;this._prepareData(forceUseAllDataPoints);}
_getData(dataPoints,forceUseAllDataPoints){const{mode}=this.metaData;const dataPtMapping=new WeakMap();const datasetsTmp={};let exceeds=false;const labels=[];const labelMap={};for(const dataPt of dataPoints){const datasetLabel=this._getDatasetLabel(dataPt);if(!(datasetLabel in datasetsTmp)){if(!forceUseAllDataPoints&&Object.keys(datasetsTmp).length>=DATA_LIMIT){exceeds=true;continue;}
datasetsTmp[datasetLabel]={label:datasetLabel,originIndex:dataPt.originIndex,};}
dataPtMapping.set(dataPt,datasetsTmp[datasetLabel]);const x=dataPt.labels.slice(0,mode==="pie"?undefined:1);const trueLabel=x.length?x.join(SEP):_t("Total");const key=JSON.stringify(x);if(labelMap[key]===undefined){labelMap[key]=labels.length;const label=x.length?x.join(SEP):_t("Total");labels.push(label);}
dataPt.labelIndex=labelMap[key];dataPt.trueLabel=trueLabel;}
for(const dataPt of dataPoints){if(!dataPtMapping.has(dataPt)){continue;}
const{domain,labelIndex,trueLabel,value,identifier,cumulatedStart,currencyId}=dataPt;const dataset=dataPtMapping.get(dataPt);if(!dataset.data){const dataLength=labels.length;Object.assign(dataset,{data:new Array(dataLength).fill(0),cumulatedStart,trueLabels:labels.slice(0,dataLength),domains:new Array(dataLength).fill([]),identifiers:new Set(),currencyIds:new Array(dataLength).fill(),});}
dataset.data[labelIndex]=value;dataset.domains[labelIndex]=domain;dataset.trueLabels[labelIndex]=trueLabel;dataset.identifiers.add(identifier);dataset.currencyIds[labelIndex]=currencyId;}
const datasets=sortBy(Object.values(datasetsTmp),"originIndex");return{datasets,labels,exceeds,};}
_getLabel(description){if(!description){return _t("Sum");}else{return _t("Sum (%s)",description);}}
_getLineOverlayDataset(){const{domains,stacked}=this.metaData;const data=this.data;let lineOverlayDataset=null;if(stacked){const stacks=groupBy(data.datasets,(dataset)=>dataset.originIndex);if(Object.keys(stacks).length==1){const[[originIndex,datasets]]=Object.entries(stacks);if(datasets.length>1){const data=[];const currencyIds=[];for(const dataset of datasets){for(let i=0;i<dataset.data.length;i++){data[i]=(data[i]||0)+dataset.data[i];currencyIds[i]=dataset.currencyIds[i]||currencyIds[i];}}
lineOverlayDataset={label:this._getLabel(domains[originIndex].description),data,currencyIds,trueLabels:datasets[0].trueLabels,};}}}
return lineOverlayDataset;}
_getDatasetLabel(dataPoint){const{measure,measures,domains,mode}=this.metaData;const{labels,originIndex}=dataPoint;if(mode==="pie"){return domains[originIndex].description||"";}
let datasetLabel=labels.slice(1).join(SEP);if(domains.length>1){datasetLabel=domains[originIndex].description+(datasetLabel?SEP+datasetLabel:"");}
datasetLabel=datasetLabel||measures[measure].string;return datasetLabel;}
_getDefaultFilterLabel(gb){return this.metaData.fields[gb?.fieldName]?.falsy_value_label||_t("None");}
_getProcessedDataPoints(){const{domains,groupBy,mode,order}=this.metaData;let processedDataPoints=[];if(mode==="line"){processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.labels[0]!==this._getDefaultFilterLabel(groupBy[0]));}else if(mode==="pie"){processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.value>0&&dataPoint.count!==0);}else{processedDataPoints=this.dataPoints.filter((dataPoint)=>dataPoint.count!==0);}
if(order!==null&&mode!=="pie"&&domains.length===1&&groupBy.length>0){const groupedDataPoints={};for(const dataPt of processedDataPoints){const key=dataPt.labels[0];if(!groupedDataPoints[key]){groupedDataPoints[key]=[];}
groupedDataPoints[key].push(dataPt);}
const groups=Object.values(groupedDataPoints);const groupTotal=(group)=>group.reduce((sum,dataPt)=>sum+dataPt.value,0);processedDataPoints=sortBy(groups,groupTotal,order.toLowerCase()).flat();}
return processedDataPoints;}
async _loadDataPoints(metaData){const{measure,domains,fields,groupBy,resModel,cumulatedStart}=metaData;const fieldName=groupBy[0]?.fieldName;const sequential_field=cumulatedStart&&SEQUENTIAL_TYPES.includes(fields[fieldName]?.type)?fieldName:null;const sequential_spec=sequential_field&&groupBy[0].spec;const measures=["__count"];let currencyState;if(measure!=="__count"){let{aggregator,type,currency_field}=fields[measure];if(type==="many2one"){aggregator="count_distinct";}
if(aggregator===undefined){throw new Error(`No aggregate function has been provided for the measure '${measure}'`);}
if(type==="monetary"&&currency_field){currencyState={currencyField:currency_field,currencies:[],};measures.push(`${currency_field}:array_agg_distinct`);}
measures.push(`${measure}:${aggregator}`);}
const numbering={};const proms=domains.map(async(domain,originIndex)=>{const groups=await this.orm.formattedReadGroup(resModel,domain.arrayRepr,groupBy.map((gb)=>gb.spec),measures,{context:{fill_temporal:true,...this.searchParams.context},});let start_groups=false;if(cumulatedStart&&sequential_field&&groups.length&&domain.arrayRepr.some((leaf)=>leaf.length===3&&leaf[0]==sequential_field)){const first_date=groups[0][sequential_spec][0];const new_domain=Domain.combine([new Domain([[sequential_field,"<",first_date]]),Domain.removeDomainLeaves(domain.arrayRepr,[sequential_field]),],"AND").toList();start_groups=await this.orm.formattedReadGroup(resModel,new_domain,groupBy.filter((gb)=>gb.fieldName!=sequential_field).map((gb)=>gb.spec),measures,{context:{...this.searchParams.context},});}
const dataPoints=[];const cumulatedStartValue={};if(start_groups){for(const group of start_groups){const rawValues=[];for(const gb of groupBy.filter((gb)=>gb.fieldName!=sequential_field)){rawValues.push({[gb.spec]:group[gb.spec]});}
cumulatedStartValue[JSON.stringify(rawValues)]=group[measures.slice(-1)];}}
for(const group of groups){const{__domain,__count}=group;const labels=[];const rawValues=[];for(const gb of groupBy){let label;const val=group[gb.spec];rawValues.push({[gb.spec]:val});const fieldName=gb.fieldName;const{type}=fields[fieldName];if(type==="boolean"){label=`${val}`;}else if(type==="integer"){label=val===false?"0":`${val}`;}else if(val===false){label=this._getDefaultFilterLabel(gb);}else if(["many2many","many2one"].includes(type)){const[id,name]=val;const key=JSON.stringify([fieldName,name]);if(!numbering[key]){numbering[key]={};}
const numbers=numbering[key];if(!numbers[id]){numbers[id]=Object.keys(numbers).length+1;}
const num=numbers[id];label=num===1?name:`${name} (${num})`;}else if(type==="selection"){const selected=fields[fieldName].selection.find((s)=>s[0]===val);label=selected[1];}else if(["date","datetime"].includes(type)){label=val[1];}else{label=val;}
labels.push(label);}
const value=group[measures.at(-1)];if(!Number.isInteger(value)){metaData.allIntegers=false;}
const group_id=JSON.stringify(rawValues.slice(1));const dataPoint={count:__count,domain:__domain,value,labels,originIndex,identifier:JSON.stringify(rawValues),cumulatedStart:cumulatedStartValue[group_id]||0,};if(measures.length>2){const currencies=group[measures[1]];currencyState.currencies=unique(currencyState.currencies.concat(currencies));dataPoint.currencyId=currencies.length>1?false:currencies[0];}
dataPoints.push(dataPoint);}
return dataPoints;});const promResults=await Promise.all(proms);return[promResults.flat(),currencyState];}
_normalize(metaData){const{fields}=metaData;const groupBy=[];for(const gb of metaData.groupBy){let ngb=gb;if(typeof gb==="string"){ngb=getGroupBy(gb,fields);}
groupBy.push(ngb);}
const processedGroupBy=[];for(const gb of groupBy){const{fieldName,interval}=gb;if(!fieldName.includes(".")){const{groupable,type}=fields[fieldName];if(!groupable||["id","__count"].includes(fieldName)||!GROUPABLE_TYPES.includes(type)){continue;}}
const index=processedGroupBy.findIndex((gb)=>gb.fieldName===fieldName);if(index===-1){processedGroupBy.push(gb);}else if(interval){const registeredInterval=processedGroupBy[index].interval;if(rankInterval(registeredInterval)<rankInterval(interval)){processedGroupBy.splice(index,1,gb);}}}
metaData.groupBy=processedGroupBy;metaData.measure=processMeasure(metaData.measure);}
_prepareData(forceUseAllDataPoints=false){const processedDataPoints=this._getProcessedDataPoints();this.data=this._getData(processedDataPoints,forceUseAllDataPoints);this.lineOverlayDataset=null;if(this.metaData.mode==="bar"){this.lineOverlayDataset=this._getLineOverlayDataset();}}}
return __exports;});;

/* /web/static/src/views/pivot/pivot_model.js */
odoo.define('@web/views/pivot/pivot_model',['@web/core/l10n/translation','@web/core/domain','@web/core/utils/arrays','@web/core/utils/concurrency','@web/search/utils/dates','@web/model/model','@web/views/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{cartesian,sections,sortBy,symmetricalDifference}=require("@web/core/utils/arrays");const{KeepLast,Race}=require("@web/core/utils/concurrency");const{DEFAULT_INTERVAL}=require("@web/search/utils/dates");const{addPropertyFieldDefs,Model}=require("@web/model/model");const{computeReportMeasures,processMeasure}=require("@web/views/utils");function computeVariation(value,comparisonValue){if(isNaN(value)||isNaN(comparisonValue)){return NaN;}
if(comparisonValue===0){if(value===0){return 0;}else if(value>0){return 1;}else{return-1;}}
return(value-comparisonValue)/Math.abs(comparisonValue);}
const PivotModel=__exports.PivotModel=class PivotModel extends Model{setup(params){this.keepLast=new KeepLast();this.race=new Race();const _loadData=this._loadData.bind(this);this._loadData=(...args)=>this.race.add(_loadData(...args));let sortedColumn=params.metaData.sortedColumn||null;if(!sortedColumn&&params.metaData.defaultOrder){const defaultOrder=params.metaData.defaultOrder.split(" ");sortedColumn={groupId:[[],[]],measure:defaultOrder[0],order:defaultOrder[1]?defaultOrder[1]:"asc",};}
this.searchParams={context:{},domain:[],domains:[],groupBy:[],};this.data=params.data||{colGroupTree:null,rowGroupTree:null,groupDomains:{},measurements:{},currencyIds:{},counts:{},numbering:{},};const metaData=Object.assign({},params.metaData,{customGroupBys:params.metaData.customGroupBys||new Map(),expandedRowGroupBys:params.metaData.expandedRowGroupBys||[],expandedColGroupBys:params.metaData.expandedColGroupBys||[],sortedColumn,});this.metaData=this._buildMetaData(metaData);this.reload=false;this.nextActiveMeasures=null;}
async addGroupBy(params){if(this.race.getCurrentProm()){return;}
const{groupId,fieldName,type,custom}=params;let{interval}=params;const metaData=this._buildMetaData();if(custom&&!metaData.customGroupBys.has(fieldName)){const field=metaData.fields[fieldName];if(!interval&&["date","datetime"].includes(field.type)){interval=DEFAULT_INTERVAL;}
metaData.customGroupBys.set(fieldName,{...field,id:fieldName,});}
let groupBy=fieldName;if(interval){groupBy=`${groupBy}:${interval}`;}
if(type==="row"){metaData.expandedRowGroupBys.push(groupBy);}else{metaData.expandedColGroupBys.push(groupBy);}
const config={metaData,data:this.data};await this._expandGroup(groupId,type,config);this.metaData=metaData;this.notify();}
closeGroup(groupId,type){if(this.race.getCurrentProm()){return;}
let groupBys;let expandedGroupBys;let keyPart;let group;let tree;if(type==="row"){groupBys=this.metaData.rowGroupBys;expandedGroupBys=this.metaData.expandedRowGroupBys;tree=this.data.rowGroupTree;group=this._findGroup(this.data.rowGroupTree,groupId[0]);keyPart=0;}else{groupBys=this.metaData.colGroupBys;expandedGroupBys=this.metaData.expandedColGroupBys;tree=this.data.colGroupTree;group=this._findGroup(this.data.colGroupTree,groupId[1]);keyPart=1;}
const groupIdPart=groupId[keyPart];const range=groupIdPart.map((_,index)=>index);function keep(key){const idPart=JSON.parse(key)[keyPart];return(range.some((index)=>groupIdPart[index]!==idPart[index])||idPart.length===groupIdPart.length);}
function omitKeys(object){const newObject={};for(const key in object){if(keep(key)){newObject[key]=object[key];}}
return newObject;}
this.data.measurements=omitKeys(this.data.measurements);this.data.currencyIds=omitKeys(this.data.currencyIds);this.data.counts=omitKeys(this.data.counts);this.data.groupDomains=omitKeys(this.data.groupDomains);group.directSubTrees.clear();delete group.sortedKeys;var newGroupBysLength=this._getTreeHeight(tree)-1;if(newGroupBysLength<=groupBys.length){expandedGroupBys.splice(0);groupBys.splice(newGroupBysLength);}else{expandedGroupBys.splice(newGroupBysLength-groupBys.length);}
this.notify();}
async expandAll(){const config={metaData:this.metaData,data:this.data};await this._loadData(config,false);this.notify();}
async expandGroup(groupId,type){if(this.race.getCurrentProm()){return;}
const config={metaData:this.metaData,data:this.data};await this._expandGroup(groupId,type,config);this.notify();}
exportData(){const measureCount=this.metaData.activeMeasures.length;const originCount=this.metaData.origins.length;const table=this.getTable();const headers=table.headers;let colGroupHeaderRows;let measureRow=[];let originRow=[];function processHeader(header){const inTotalColumn=header.groupId[1].length===0;return{title:header.title,width:header.width,height:header.height,is_bold:!!header.measure&&inTotalColumn,};}
if(originCount>1){colGroupHeaderRows=headers.slice(0,headers.length-2);measureRow=headers[headers.length-2].map(processHeader);originRow=headers[headers.length-1].map(processHeader);}else{colGroupHeaderRows=headers.slice(0,headers.length-1);measureRow=headers[headers.length-1].map(processHeader);}
colGroupHeaderRows[0].splice(0,1);colGroupHeaderRows=colGroupHeaderRows.map((headerRow)=>headerRow.map(processHeader));const tableRows=table.rows.map((row)=>({title:row.title,indent:row.indent,values:row.subGroupMeasurements.map((measurement)=>{let value=measurement.value;if(value===undefined){value="";}else if(measurement.originIndexes.length>1){value=value*100;}
return{is_bold:measurement.isBold,value:value,};}),}));return{model:this.metaData.resModel,title:this.metaData.title,col_group_headers:colGroupHeaderRows,measure_headers:measureRow,origin_headers:originRow,rows:tableRows,measure_count:measureCount,origin_count:originCount,};}
async flip(){await this.race.getCurrentProm();let temp=this.data.rowGroupTree;this.data.rowGroupTree=this.data.colGroupTree;this.data.colGroupTree=temp;temp=this.metaData.rowGroupBys;this.metaData.rowGroupBys=this.metaData.colGroupBys;this.metaData.colGroupBys=temp;temp=this.metaData.expandedColGroupBys;this.metaData.expandedColGroupBys=this.metaData.expandedRowGroupBys;this.metaData.expandedRowGroupBys=temp;function twistKey(key){return JSON.stringify(JSON.parse(key).reverse());}
function twist(object){const newObject={};Object.keys(object).forEach((key)=>{const value=object[key];newObject[twistKey(key)]=value;});return newObject;}
this.data.measurements=twist(this.data.measurements);this.data.currencyIds=twist(this.data.currencyIds);this.data.counts=twist(this.data.counts);this.data.groupDomains=twist(this.data.groupDomains);this.notify();}
getGroupDomain(group){const config={metaData:this.metaData,data:this.data};return this._getGroupDomain(group,config);}
getTable(){const headers=this._getTableHeaders();return{headers:headers,rows:this._getTableRows(this.data.rowGroupTree,headers[headers.length-1]),};}
getTableWidth(){var leafCounts=this._getLeafCounts(this.data.colGroupTree);return leafCounts[JSON.stringify(this.data.colGroupTree.root.values)]+2;}
hasData(){return this._hasData(this.data);}
async load(searchParams){this.searchParams=searchParams;const processedMeasures=processMeasure(searchParams.context.pivot_measures);const activeMeasures=processedMeasures||this.metaData.activeMeasures;const metaData=this._buildMetaData({activeMeasures});if(!this.reload){metaData.rowGroupBys=searchParams.context.pivot_row_groupby||(searchParams.groupBy.length?searchParams.groupBy:metaData.rowGroupBys);this.reload=true;}else{metaData.rowGroupBys=searchParams.groupBy.length?searchParams.groupBy:searchParams.context.pivot_row_groupby||metaData.rowGroupBys;}
metaData.colGroupBys=searchParams.context.pivot_column_groupby||this.metaData.colGroupBys;if(JSON.stringify(metaData.rowGroupBys)!==JSON.stringify(this.metaData.rowGroupBys)){metaData.expandedRowGroupBys=[];}
if(JSON.stringify(metaData.colGroupBys)!==JSON.stringify(this.metaData.colGroupBys)){metaData.expandedColGroupBys=[];}
const allActivesMeasures=new Set(this.metaData.activeMeasures);if(processedMeasures){processedMeasures.forEach((e)=>allActivesMeasures.add(e));}
metaData.measures=computeReportMeasures(metaData.fields,metaData.fieldAttrs,[...allActivesMeasures,]);const config={metaData,data:this.data};await addPropertyFieldDefs(this.orm,metaData.resModel,searchParams.context,metaData.fields,new Set([...metaData.rowGroupBys,...metaData.colGroupBys]));return this._loadData(config);}
sortRows(sortedColumn){if(this.race.getCurrentProm()){return;}
const config={metaData:this.metaData,data:this.data};this._sortRows(sortedColumn,config);this.notify();}
async toggleMeasure(fieldName){const metaData=this._buildMetaData();this.nextActiveMeasures=this.nextActiveMeasures||metaData.activeMeasures;metaData.activeMeasures=this.nextActiveMeasures;const index=metaData.activeMeasures.indexOf(fieldName);if(index!==-1){metaData.activeMeasures.splice(index,1);await Promise.resolve(this.race.getCurrentProm());this.metaData=metaData;}else{metaData.activeMeasures.push(fieldName);const config={metaData,data:this.data};await this._loadData(config);this.useSampleModel=false;}
this.nextActiveMeasures=null;this.notify();}
_addGroup(groupTree,labels,values){let tree=groupTree;values.slice(0,values.length-1).forEach(function(value){tree=tree.directSubTrees.get(value);});const value=values[values.length-1];if(tree.directSubTrees.has(value)){return;}
tree.directSubTrees.set(value,{root:{labels:labels,values:values,},directSubTrees:new Map(),});}
_buildMetaData(params){const metaData=Object.assign({},this.metaData,params);metaData.activeMeasures=[...metaData.activeMeasures];metaData.colGroupBys=[...metaData.colGroupBys];metaData.rowGroupBys=[...metaData.rowGroupBys];metaData.expandedColGroupBys=[...metaData.expandedColGroupBys];metaData.expandedRowGroupBys=[...metaData.expandedRowGroupBys];metaData.customGroupBys=new Map([...metaData.customGroupBys]);metaData.sortedColumn=metaData.sortedColumn?{...metaData.sortedColumn}:null;metaData.domains=[this.searchParams.domain];metaData.origins=[""];Object.defineProperty(metaData,"fullColGroupBys",{get(){return metaData.colGroupBys.concat(metaData.expandedColGroupBys);},});Object.defineProperty(metaData,"fullRowGroupBys",{get(){return metaData.rowGroupBys.concat(metaData.expandedRowGroupBys);},});return metaData;}
async _expandGroup(groupId,type,config){const{metaData}=config;const group={rowValues:groupId[0],colValues:groupId[1],type:type,};const groupValues=type==="row"?groupId[0]:groupId[1];const groupBys=type==="row"?metaData.fullRowGroupBys:metaData.fullColGroupBys;if(groupValues.length>=groupBys.length){throw new Error("Cannot expand group");}
const groupBy=groupBys[groupValues.length];let leftDivisors;let rightDivisors;if(group.type==="row"){leftDivisors=[[groupBy]];rightDivisors=sections(metaData.fullColGroupBys);}else{leftDivisors=sections(metaData.fullRowGroupBys);rightDivisors=[[groupBy]];}
const divisors=cartesian(leftDivisors,rightDivisors);delete group.type;await this._subdivideGroup(group,divisors,config);}
_findGroup(groupTree,values){let tree=groupTree;values.slice(0,values.length).forEach((value)=>{tree=tree.directSubTrees.get(value);});return tree;}
_getCellValue(groupId,measure,originIndexes,config){var key=JSON.stringify(groupId);if(!config.data.measurements[key]){return;}
var values=originIndexes.map((originIndex)=>config.data.measurements[key][originIndex][measure]);if(originIndexes.length>1){return computeVariation(values[1],values[0]);}else{return values[0];}}
_getCellCurrency(groupId,measure,config){var key=JSON.stringify(groupId);if(!config.data.currencyIds[key]){return;}
return config.data.currencyIds[key][0][measure];}
_getGroupBySpecs(rowGroupBy,colGroupBy){const set=rowGroupBy.concat(colGroupBy).reduce((acc,gb)=>{acc.add(this._normalize(gb));return acc;},new Set());return[...set];}
_getGroupDomain(group,config){const{data}=config;var key=JSON.stringify([group.rowValues,group.colValues]);return data.groupDomains[key][group.originIndex];}
_getGroupLabels(group,groupBys,config){return groupBys.map((gb)=>{const groupBy=this._normalize(gb);return this._sanitizeLabel(group[groupBy],groupBy,config);});}
async _getGroupsSubdivision(params,groupInfo){const{resModel,groupDomain,groupingSets,measureSpecs,kwargs}=params;const result=await this.orm.formattedReadGroupingSets(resModel,groupDomain,groupingSets,measureSpecs,kwargs);return groupInfo.map((info,index)=>({...info,subGroups:result[index]}));}
_getGroupValues(group,groupBys){return groupBys.map((gb)=>{const groupBy=this._normalize(gb);return this._sanitizeValue(group[groupBy]);});}
_getLeafCounts(tree){const leafCounts={};let leafCount;if(!tree.directSubTrees.size){leafCount=1;}else{leafCount=[...tree.directSubTrees.values()].reduce((acc,subTree)=>{const subLeafCounts=this._getLeafCounts(subTree);Object.assign(leafCounts,subLeafCounts);return acc+leafCounts[JSON.stringify(subTree.root.values)];},0);}
leafCounts[JSON.stringify(tree.root.values)]=leafCount;return leafCounts;}
_getMeasurements(group,config){const{metaData}=config;return this._getMeasureSpecs(config).reduce((measurements,measureName)=>{var measurement=group[measureName];const[fieldName,aggregator]=measureName.split(":");if(aggregator==="array_agg_distinct"){return measurements;}
if(metaData.measures[fieldName].type==="boolean"&&measurement instanceof Boolean){measurement=measurement?1:0;}
if(metaData.origins.length>1&&!measurement){measurement=0;}
measurements[fieldName]=measurement;return measurements;},{});}
_getCurrencyIds(group,config){const{metaData}=config;return this._getMeasureSpecs(config).reduce((currencyIds,measureName)=>{const[fieldName,aggregator]=measureName.split(":");if(aggregator==="array_agg_distinct"){return currencyIds;}
const measureField=metaData.measures[fieldName];if(measureField.type==="monetary"&&measureField.currency_field){const currencies=group[measureField.currency_field+":array_agg_distinct"];currencyIds[fieldName]=currencies?.length===1?currencies[0]:false;}
return currencyIds;},{});}
_getMeasuresRow(columns){const sortedColumn=this.metaData.sortedColumn||{};const measureRow=[];columns.forEach((column)=>{this.metaData.activeMeasures.forEach((measureName)=>{const measureCell={groupId:column.groupId,height:1,measure:measureName,title:this.metaData.measures[measureName].string,width:2*this.metaData.origins.length-1,};if(sortedColumn.measure===measureName&&JSON.stringify(sortedColumn.groupId)===JSON.stringify(column.groupId)){measureCell.order=sortedColumn.order;}
measureRow.push(measureCell);});});return measureRow;}
_getMeasureSpecs(config){const{metaData}=config;return metaData.activeMeasures.reduce((acc,measure)=>{if(measure==="__count"){acc.push(measure);return acc;}
const field=this.metaData.fields[measure];if(field.type==="many2one"){field.aggregator="count_distinct";}
if(field.aggregator===undefined){throw new Error("No aggregate function has been provided for the measure '"+measure+"'");}
if(field.currency_field){acc.push(field.currency_field+":array_agg_distinct");}
acc.push(measure+":"+field.aggregator);return acc;},[]);}
_getNumberedLabel(label,fieldName,config){const{data}=config;const id=label[0];const name=label[1];data.numbering[fieldName]=data.numbering[fieldName]||{};data.numbering[fieldName][name]=data.numbering[fieldName][name]||{};const numbers=data.numbering[fieldName][name];numbers[id]=numbers[id]||Object.keys(numbers).length+1;return name+(numbers[id]>1?"  ("+numbers[id]+")":"");}
_getOriginsRow(columns){const sortedColumn=this.metaData.sortedColumn||{};const originRow=[];columns.forEach((column)=>{const groupId=column.groupId;const measure=column.measure;const isSorted=sortedColumn.measure===measure&&JSON.stringify(sortedColumn.groupId)===JSON.stringify(groupId);const isSortedByOrigin=isSorted&&!sortedColumn.originIndexes[1];const isSortedByVariation=isSorted&&sortedColumn.originIndexes[1];this.metaData.origins.forEach((origin,originIndex)=>{const originCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex],title:origin,width:1,};if(isSortedByOrigin&&sortedColumn.originIndexes[0]===originIndex){originCell.order=sortedColumn.order;}
originRow.push(originCell);if(originIndex>0){const variationCell={groupId:groupId,height:1,measure:measure,originIndexes:[originIndex-1,originIndex],title:_t("Variation"),width:1,};if(isSortedByVariation&&sortedColumn.originIndexes[1]===originIndex){variationCell.order=sortedColumn.order;}
originRow.push(variationCell);}});});return originRow;}
_getTableHeaders(){const colGroupBys=this.metaData.fullColGroupBys;const height=colGroupBys.length+1;const measureCount=this.metaData.activeMeasures.length;const originCount=this.metaData.origins.length;const leafCounts=this._getLeafCounts(this.data.colGroupTree);let headers=[];const measureColumns=[];const colGroupRows=new Array(height).fill(0).map(()=>[]);colGroupRows[0].push({height:height+1+(originCount>1?1:0),title:"",width:1,});function generateTreeHeaders(tree,fields){const group=tree.root;const rowIndex=group.values.length;const row=colGroupRows[rowIndex];const groupId=[[],group.values];const isLeaf=!tree.directSubTrees.size;const leafCount=leafCounts[JSON.stringify(tree.root.values)];const cell={groupId:groupId,height:isLeaf?colGroupBys.length+1-rowIndex:1,isLeaf:isLeaf,isFolded:isLeaf&&colGroupBys.length>group.values.length,label:rowIndex===0?undefined:fields[colGroupBys[rowIndex-1].split(":")[0]].string,title:group.labels.length?group.labels[group.labels.length-1]:_t("Total"),width:leafCount*measureCount*(2*originCount-1),};row.push(cell);if(isLeaf){measureColumns.push(cell);}
[...tree.directSubTrees.values()].forEach((subTree)=>{generateTreeHeaders(subTree,fields);});}
generateTreeHeaders(this.data.colGroupTree,this.metaData.fields);if(leafCounts[JSON.stringify(this.data.colGroupTree.root.values)]>1){var groupId=[[],[]];var totalTopRightCell={groupId:groupId,height:height,title:"",width:measureCount*(2*originCount-1),};colGroupRows[0].push(totalTopRightCell);measureColumns.push(totalTopRightCell);}
headers=headers.concat(colGroupRows);var measuresRow=this._getMeasuresRow(measureColumns);headers.push(measuresRow);if(originCount>1){headers.push(this._getOriginsRow(measuresRow));}
return headers;}
_getTableRows(tree,columns){let rows=[];const group=tree.root;const rowGroupId=[group.values,[]];const title=group.labels.length?group.labels[group.labels.length-1]:_t("Total");const indent=group.labels.length;const isLeaf=!tree.directSubTrees.size;const rowGroupBys=this.metaData.fullRowGroupBys;const subGroupMeasurements=columns.map((column)=>{const colGroupId=column.groupId;const groupIntersectionId=[rowGroupId[0],colGroupId[1]];const measure=column.measure;const originIndexes=column.originIndexes||[0];const value=this._getCellValue(groupIntersectionId,measure,originIndexes,{data:this.data,});const currencyId=this._getCellCurrency(groupIntersectionId,measure,{data:this.data,});const measurement={groupId:groupIntersectionId,originIndexes:originIndexes,measure:measure,value:value,currencyId:currencyId,isBold:!groupIntersectionId[0].length||!groupIntersectionId[1].length,};return measurement;});rows.push({title:title,label:indent===0?undefined:this.metaData.fields[rowGroupBys[indent-1].split(":")[0]].string,groupId:rowGroupId,indent:indent,isLeaf:isLeaf,isFolded:isLeaf&&rowGroupBys.length>group.values.length,subGroupMeasurements:subGroupMeasurements,});const subTreeKeys=tree.sortedKeys||[...tree.directSubTrees.keys()];subTreeKeys.forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);rows=rows.concat(this._getTableRows(subTree,columns));});return rows;}
_getTreeHeight(tree){const subTreeHeights=[...tree.directSubTrees.values()].map(this._getTreeHeight.bind(this));return Math.max(0,Math.max.apply(null,subTreeHeights))+1;}
_hasData(data){return(data.counts[JSON.stringify([[],[]])]||[]).some((count)=>count>0);}
async _loadData(config,prune=true){config.data={};const{data,metaData}=config;data.rowGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};data.colGroupTree={root:{labels:[],values:[]},directSubTrees:new Map()};data.measurements={};data.currencyIds={};data.counts={};data.groupDomains={};data.numbering={};const key=JSON.stringify([[],[]]);data.groupDomains[key]=metaData.domains.slice(0);const group={rowValues:[],colValues:[]};const leftDivisors=sections(metaData.fullRowGroupBys);const rightDivisors=sections(metaData.fullColGroupBys);const divisors=cartesian(leftDivisors,rightDivisors);await this._subdivideGroup(group,divisors,config);if(prune&&this._hasData(data)&&this._hasData(this.data)){if(symmetricalDifference(metaData.rowGroupBys,this.metaData.rowGroupBys).length===0){this._pruneTree(data.rowGroupTree,this.data.rowGroupTree);}
if(symmetricalDifference(metaData.colGroupBys,this.metaData.colGroupBys).length===0){this._pruneTree(data.colGroupTree,this.data.colGroupTree);}}
this.data=config.data;this.metaData=config.metaData;}
_normalize(gb){const[fieldName,interval]=gb.split(":");const field=this.metaData.fields[fieldName];if(["date","datetime"].includes(field.type)){return`${fieldName}:${interval || "month"}`;}else{return fieldName;}}
_prepareData(group,groupSubdivisions,config){const{data,metaData}=config;const groupRowValues=group.rowValues;let groupRowLabels=[];let rowSubTree=data.rowGroupTree;let root;if(groupRowValues.length){rowSubTree=this._findGroup(data.rowGroupTree,groupRowValues);root=rowSubTree.root;groupRowLabels=root.labels;}
const groupColValues=group.colValues;let groupColLabels=[];if(groupColValues.length){root=this._findGroup(data.colGroupTree,groupColValues).root;groupColLabels=root.labels;}
groupSubdivisions.forEach((groupSubdivision)=>{groupSubdivision.subGroups.forEach((subGroup)=>{const rowValues=groupRowValues.concat(this._getGroupValues(subGroup,groupSubdivision.rowGroupBy));const rowLabels=groupRowLabels.concat(this._getGroupLabels(subGroup,groupSubdivision.rowGroupBy,config));const colValues=groupColValues.concat(this._getGroupValues(subGroup,groupSubdivision.colGroupBy));const colLabels=groupColLabels.concat(this._getGroupLabels(subGroup,groupSubdivision.colGroupBy,config));if(!colValues.length&&rowValues.length){this._addGroup(data.rowGroupTree,rowLabels,rowValues);}
if(colValues.length&&!rowValues.length){this._addGroup(data.colGroupTree,colLabels,colValues);}
const key=JSON.stringify([rowValues,colValues]);const originIndex=groupSubdivision.group.originIndex;if(!(key in data.measurements)){data.measurements[key]=metaData.origins.map(()=>this._getMeasurements({},config));data.currencyIds[key]=metaData.origins.map(()=>this._getCurrencyIds({},config));}
data.measurements[key][originIndex]=this._getMeasurements(subGroup,config);data.currencyIds[key][originIndex]=this._getCurrencyIds(subGroup,config);if(!(key in data.counts)){data.counts[key]=metaData.origins.map(function(){return 0;});}
data.counts[key][originIndex]=subGroup.__count;if(!(key in data.groupDomains)){data.groupDomains[key]=metaData.origins.map(function(){return Domain.FALSE.toList();});}
if(subGroup.__domain){data.groupDomains[key][originIndex]=subGroup.__domain;}});});if(metaData.sortedColumn){this._sortRows(metaData.sortedColumn,config);}}
_pruneTree(tree,oldTree){if(!oldTree.directSubTrees.size){tree.directSubTrees.clear();delete tree.sortedKeys;return;}
[...tree.directSubTrees.keys()].forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);if(!oldTree.directSubTrees.has(subTreeKey)){subTree.directSubTrees.clear();delete subTree.sortedKeys;}else{const oldSubTree=oldTree.directSubTrees.get(subTreeKey);this._pruneTree(subTree,oldSubTree);}});}
_sanitizeLabel(value,groupBy,config){const{metaData}=config;const fieldName=groupBy.split(":")[0];if(fieldName&&metaData.fields[fieldName]){if(metaData.fields[fieldName].type==="boolean"){return value===undefined?_t("None"):value?_t("Yes"):_t("No");}else if(metaData.fields[fieldName].type==="integer"){return value||"0";}}
if(value===false){return metaData.fields[fieldName].falsy_value_label||_t("None");}
if(value instanceof Array){return this._getNumberedLabel(value,fieldName,config);}
if(fieldName&&metaData.fields[fieldName]&&metaData.fields[fieldName].type==="selection"){const selected=metaData.fields[fieldName].selection.find((o)=>o[0]===value);return selected?selected[1]:value;}
return value;}
_sanitizeValue(value){if(value instanceof Array){return value[0];}
return value;}
async _subdivideGroup(group,divisors,config){const{data,metaData}=config;const key=JSON.stringify([group.rowValues,group.colValues]);const proms=metaData.origins.reduce((acc,origin,originIndex)=>{if(!data.counts[key]||data.counts[key][originIndex]>0){const subGroup={rowValues:group.rowValues,colValues:group.colValues,originIndex:originIndex,};const groupDomain=this._getGroupDomain(subGroup,config);const measureSpecs=this._getMeasureSpecs(config);if(!measureSpecs.includes("__count")){measureSpecs.push("__count");}
const resModel=config.metaData.resModel;const kwargs={context:this.searchParams.context};const mapping={};const groupingSets=[];const groupInfo=[];divisors.forEach((divisor)=>{const groupBy=this._getGroupBySpecs(divisor[0],divisor[1]);const key=JSON.stringify(groupBy);if(!mapping[key]){groupingSets.push(groupBy);groupInfo.push({group:subGroup,rowGroupBy:divisor[0],colGroupBy:divisor[1],originIndex,});}});const params={resModel,groupDomain,measureSpecs,kwargs,mapping,groupingSets,};acc.push(this._getGroupsSubdivision(params,groupInfo));}
return acc;},[]);const groupSubdivisionsArray=await this.keepLast.add(Promise.all(proms));const groupSubdivisions=groupSubdivisionsArray.flat();if(groupSubdivisions.length){this._prepareData(group,groupSubdivisions,config);}}
_sortRows(sortedColumn,config){const metaData=config.metaData||this.metaData;const data=config.data||this.data;const colGroupValues=sortedColumn.groupId[1];sortedColumn.originIndexes=sortedColumn.originIndexes||[0];metaData.sortedColumn=sortedColumn;const sortFunction=(tree)=>(subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);const groupIntersectionId=[subTree.root.values,colGroupValues];const value=this._getCellValue(groupIntersectionId,sortedColumn.measure,sortedColumn.originIndexes,{data})||0;return sortedColumn.order==="asc"?value:-value;};this._sortTree(sortFunction,data.rowGroupTree);}
_sortTree(sortFunction,tree){tree.sortedKeys=sortBy([...tree.directSubTrees.keys()],sortFunction(tree));[...tree.directSubTrees.values()].forEach((subTree)=>{this._sortTree(sortFunction,subTree);});}}
return __exports;});;

/* /web/static/src/polyfills/clipboard.js */
odoo.define('@web/polyfills/clipboard',[],function(require){'use strict';let __exports={};class ClipboardItemImpl{constructor(items,options={}){this.items=items;this.options=options;}
get presentationStyle(){return this.options.presentationStyle;}
get types(){return Object.keys(this.items);}
getType(type){return this.items[type];}}
function blobToStr(blob){return new Promise((resolve,reject)=>{const reader=new FileReader();reader.addEventListener("load",()=>{const{result}=reader;if(typeof result==="string"){resolve(result);}else{reject("Cannot read Blob as String");}});reader.addEventListener("error",()=>{reject("Cannot read Blob");});reader.readAsText(blob);});}
async function stringify(item){const strItem={};for(const type of item.types){strItem[type]=await blobToStr(item.getType(type));}
return strItem;}
async function write(items){if(!items[0].getType("text/plain")){throw new Error(`Calling clipboard.write() without a "text/plain" type may result in an empty clipboard on some platforms.`);}
const strItem=await stringify(items[0]);const stubContainer=document.createElement("div");const shadowContainer=stubContainer.attachShadow({mode:"open"});const stub=document.createElement("span");stub.innerText=strItem["text/plain"];shadowContainer.appendChild(stub);document.body.appendChild(stubContainer);const selection=document.getSelection();const range=document.createRange();range.selectNodeContents(stub);selection.removeAllRanges();selection.addRange(range);const onCopy=(ev)=>{for(const type in strItem){ev.clipboardData.setData(type,strItem[type]);}
ev.preventDefault();};document.addEventListener("copy",onCopy);let result;try{result=document.execCommand("copy");}finally{document.removeEventListener("copy",onCopy);}
selection.removeAllRanges();document.body.removeChild(stubContainer);return result;}
if(window.navigator.clipboard){if(!window.navigator.clipboard.write){window.navigator.clipboard.write=write.bind(window);}
if(!window.ClipboardItem){window.ClipboardItem=ClipboardItemImpl;}}
return __exports;});;

/* /web/static/lib/Chart/Chart.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,global.Chart=factory());})(this,(function(){'use strict';var plugins=Object.freeze({__proto__:null,get Colors(){return plugin_colors;},get Decimation(){return plugin_decimation;},get Filler(){return index;},get Legend(){return plugin_legend;},get SubTitle(){return plugin_subtitle;},get Title(){return plugin_title;},get Tooltip(){return plugin_tooltip;}});function noop(){}
const uid=(()=>{let id=0;return()=>id++;})();function isNullOrUndef(value){return value===null||typeof value==='undefined';}
function isArray(value){if(Array.isArray&&Array.isArray(value)){return true;}
const type=Object.prototype.toString.call(value);if(type.slice(0,7)==='[object'&&type.slice(-6)==='Array]'){return true;}
return false;}
function isObject(value){return value!==null&&Object.prototype.toString.call(value)==='[object Object]';}
function isNumberFinite(value){return(typeof value==='number'||value instanceof Number)&&isFinite(+value);}
function finiteOrDefault(value,defaultValue){return isNumberFinite(value)?value:defaultValue;}
function valueOrDefault(value,defaultValue){return typeof value==='undefined'?defaultValue:value;}
const toPercentage=(value,dimension)=>typeof value==='string'&&value.endsWith('%')?parseFloat(value)/100:+value/dimension;const toDimension=(value,dimension)=>typeof value==='string'&&value.endsWith('%')?parseFloat(value)/100*dimension:+value;function callback(fn,args,thisArg){if(fn&&typeof fn.call==='function'){return fn.apply(thisArg,args);}}
function each(loopable,fn,thisArg,reverse){let i,len,keys;if(isArray(loopable)){len=loopable.length;if(reverse){for(i=len-1;i>=0;i--){fn.call(thisArg,loopable[i],i);}}else{for(i=0;i<len;i++){fn.call(thisArg,loopable[i],i);}}}else if(isObject(loopable)){keys=Object.keys(loopable);len=keys.length;for(i=0;i<len;i++){fn.call(thisArg,loopable[keys[i]],keys[i]);}}}
function _elementsEqual(a0,a1){let i,ilen,v0,v1;if(!a0||!a1||a0.length!==a1.length){return false;}
for(i=0,ilen=a0.length;i<ilen;++i){v0=a0[i];v1=a1[i];if(v0.datasetIndex!==v1.datasetIndex||v0.index!==v1.index){return false;}}
return true;}
function clone$1(source){if(isArray(source)){return source.map(clone$1);}
if(isObject(source)){const target=Object.create(null);const keys=Object.keys(source);const klen=keys.length;let k=0;for(;k<klen;++k){target[keys[k]]=clone$1(source[keys[k]]);}
return target;}
return source;}
function isValidKey(key){return['__proto__','prototype','constructor'].indexOf(key)===-1;}
function _merger(key,target,source,options){if(!isValidKey(key)){return;}
const tval=target[key];const sval=source[key];if(isObject(tval)&&isObject(sval)){merge(tval,sval,options);}else{target[key]=clone$1(sval);}}
function merge(target,source,options){const sources=isArray(source)?source:[source];const ilen=sources.length;if(!isObject(target)){return target;}
options=options||{};const merger=options.merger||_merger;let current;for(let i=0;i<ilen;++i){current=sources[i];if(!isObject(current)){continue;}
const keys=Object.keys(current);for(let k=0,klen=keys.length;k<klen;++k){merger(keys[k],target,current,options);}}
return target;}
function mergeIf(target,source){return merge(target,source,{merger:_mergerIf});}
function _mergerIf(key,target,source){if(!isValidKey(key)){return;}
const tval=target[key];const sval=source[key];if(isObject(tval)&&isObject(sval)){mergeIf(tval,sval);}else if(!Object.prototype.hasOwnProperty.call(target,key)){target[key]=clone$1(sval);}}
function _deprecated(scope,value,previous,current){if(value!==undefined){console.warn(scope+': "'+previous+'" is deprecated. Please use "'+current+'" instead');}}
const keyResolvers={'':(v)=>v,x:(o)=>o.x,y:(o)=>o.y};function _splitKey(key){const parts=key.split('.');const keys=[];let tmp='';for(const part of parts){tmp+=part;if(tmp.endsWith('\\')){tmp=tmp.slice(0,-1)+'.';}else{keys.push(tmp);tmp='';}}
return keys;}
function _getKeyResolver(key){const keys=_splitKey(key);return(obj)=>{for(const k of keys){if(k===''){break;}
obj=obj&&obj[k];}
return obj;};}
function resolveObjectKey(obj,key){const resolver=keyResolvers[key]||(keyResolvers[key]=_getKeyResolver(key));return resolver(obj);}
function _capitalize(str){return str.charAt(0).toUpperCase()+str.slice(1);}
const defined=(value)=>typeof value!=='undefined';const isFunction=(value)=>typeof value==='function';const setsEqual=(a,b)=>{if(a.size!==b.size){return false;}
for(const item of a){if(!b.has(item)){return false;}}
return true;};function _isClickEvent(e){return e.type==='mouseup'||e.type==='click'||e.type==='contextmenu';}
const PI=Math.PI;const TAU=2*PI;const PITAU=TAU+PI;const INFINITY=Number.POSITIVE_INFINITY;const RAD_PER_DEG=PI/180;const HALF_PI=PI/2;const QUARTER_PI=PI/4;const TWO_THIRDS_PI=PI*2/3;const log10=Math.log10;const sign=Math.sign;function almostEquals(x,y,epsilon){return Math.abs(x-y)<epsilon;}
function niceNum(range){const roundedRange=Math.round(range);range=almostEquals(range,roundedRange,range/1000)?roundedRange:range;const niceRange=Math.pow(10,Math.floor(log10(range)));const fraction=range/niceRange;const niceFraction=fraction<=1?1:fraction<=2?2:fraction<=5?5:10;return niceFraction*niceRange;}
function _factorize(value){const result=[];const sqrt=Math.sqrt(value);let i;for(i=1;i<sqrt;i++){if(value%i===0){result.push(i);result.push(value/i);}}
if(sqrt===(sqrt|0)){result.push(sqrt);}
result.sort((a,b)=>a-b).pop();return result;}
function isNumber(n){return!isNaN(parseFloat(n))&&isFinite(n);}
function almostWhole(x,epsilon){const rounded=Math.round(x);return rounded-epsilon<=x&&rounded+epsilon>=x;}
function _setMinAndMaxByKey(array,target,property){let i,ilen,value;for(i=0,ilen=array.length;i<ilen;i++){value=array[i][property];if(!isNaN(value)){target.min=Math.min(target.min,value);target.max=Math.max(target.max,value);}}}
function toRadians(degrees){return degrees*(PI/180);}
function toDegrees(radians){return radians*(180/PI);}
function _decimalPlaces(x){if(!isNumberFinite(x)){return;}
let e=1;let p=0;while(Math.round(x*e)/e!==x){e*=10;p++;}
return p;}
function getAngleFromPoint(centrePoint,anglePoint){const distanceFromXCenter=anglePoint.x-centrePoint.x;const distanceFromYCenter=anglePoint.y-centrePoint.y;const radialDistanceFromCenter=Math.sqrt(distanceFromXCenter*distanceFromXCenter+distanceFromYCenter*distanceFromYCenter);let angle=Math.atan2(distanceFromYCenter,distanceFromXCenter);if(angle<-0.5*PI){angle+=TAU;}
return{angle,distance:radialDistanceFromCenter};}
function distanceBetweenPoints(pt1,pt2){return Math.sqrt(Math.pow(pt2.x-pt1.x,2)+Math.pow(pt2.y-pt1.y,2));}
function _angleDiff(a,b){return(a-b+PITAU)%TAU-PI;}
function _normalizeAngle(a){return(a%TAU+TAU)%TAU;}
function _angleBetween(angle,start,end,sameAngleIsFullCircle){const a=_normalizeAngle(angle);const s=_normalizeAngle(start);const e=_normalizeAngle(end);const angleToStart=_normalizeAngle(s-a);const angleToEnd=_normalizeAngle(e-a);const startToAngle=_normalizeAngle(a-s);const endToAngle=_normalizeAngle(a-e);return a===s||a===e||sameAngleIsFullCircle&&s===e||angleToStart>angleToEnd&&startToAngle<endToAngle;}
function _limitValue(value,min,max){return Math.max(min,Math.min(max,value));}
function _int16Range(value){return _limitValue(value,-32768,32767);}
function _isBetween(value,start,end,epsilon=1e-6){return value>=Math.min(start,end)-epsilon&&value<=Math.max(start,end)+epsilon;}
function _lookup(table,value,cmp){cmp=cmp||((index)=>table[index]<value);let hi=table.length-1;let lo=0;let mid;while(hi-lo>1){mid=lo+hi>>1;if(cmp(mid)){lo=mid;}else{hi=mid;}}
return{lo,hi};}
const _lookupByKey=(table,key,value,last)=>_lookup(table,value,last?(index)=>{const ti=table[index][key];return ti<value||ti===value&&table[index+1][key]===value;}:(index)=>table[index][key]<value);const _rlookupByKey=(table,key,value)=>_lookup(table,value,(index)=>table[index][key]>=value);function _filterBetween(values,min,max){let start=0;let end=values.length;while(start<end&&values[start]<min){start++;}
while(end>start&&values[end-1]>max){end--;}
return start>0||end<values.length?values.slice(start,end):values;}
const arrayEvents=['push','pop','shift','splice','unshift'];function listenArrayEvents(array,listener){if(array._chartjs){array._chartjs.listeners.push(listener);return;}
Object.defineProperty(array,'_chartjs',{configurable:true,enumerable:false,value:{listeners:[listener]}});arrayEvents.forEach((key)=>{const method='_onData'+_capitalize(key);const base=array[key];Object.defineProperty(array,key,{configurable:true,enumerable:false,value(...args){const res=base.apply(this,args);array._chartjs.listeners.forEach((object)=>{if(typeof object[method]==='function'){object[method](...args);}});return res;}});});}
function unlistenArrayEvents(array,listener){const stub=array._chartjs;if(!stub){return;}
const listeners=stub.listeners;const index=listeners.indexOf(listener);if(index!==-1){listeners.splice(index,1);}
if(listeners.length>0){return;}
arrayEvents.forEach((key)=>{delete array[key];});delete array._chartjs;}
function _arrayUnique(items){const set=new Set(items);if(set.size===items.length){return items;}
return Array.from(set);}
function fontString(pixelSize,fontStyle,fontFamily){return fontStyle+' '+pixelSize+'px '+fontFamily;}
const requestAnimFrame=function(){if(typeof window==='undefined'){return function(callback){return callback();};}
return window.requestAnimationFrame;}();function throttled(fn,thisArg){let argsToUse=[];let ticking=false;return function(...args){argsToUse=args;if(!ticking){ticking=true;requestAnimFrame.call(window,()=>{ticking=false;fn.apply(thisArg,argsToUse);});}};}
function debounce(fn,delay){let timeout;return function(...args){if(delay){clearTimeout(timeout);timeout=setTimeout(fn,delay,args);}else{fn.apply(this,args);}
return delay;};}
const _toLeftRightCenter=(align)=>align==='start'?'left':align==='end'?'right':'center';const _alignStartEnd=(align,start,end)=>align==='start'?start:align==='end'?end:(start+end)/2;const _textX=(align,left,right,rtl)=>{const check=rtl?'left':'right';return align===check?right:align==='center'?(left+right)/2:left;};function _getStartAndCountOfVisiblePoints(meta,points,animationsDisabled){const pointCount=points.length;let start=0;let count=pointCount;if(meta._sorted){const{iScale,_parsed}=meta;const axis=iScale.axis;const{min,max,minDefined,maxDefined}=iScale.getUserBounds();if(minDefined){start=_limitValue(Math.min(_lookupByKey(_parsed,axis,min).lo,animationsDisabled?pointCount:_lookupByKey(points,axis,iScale.getPixelForValue(min)).lo),0,pointCount-1);}
if(maxDefined){count=_limitValue(Math.max(_lookupByKey(_parsed,iScale.axis,max,true).hi+1,animationsDisabled?0:_lookupByKey(points,axis,iScale.getPixelForValue(max),true).hi+1),start,pointCount)-start;}else{count=pointCount-start;}}
return{start,count};}
function _scaleRangesChanged(meta){const{xScale,yScale,_scaleRanges}=meta;const newRanges={xmin:xScale.min,xmax:xScale.max,ymin:yScale.min,ymax:yScale.max};if(!_scaleRanges){meta._scaleRanges=newRanges;return true;}
const changed=_scaleRanges.xmin!==xScale.min||_scaleRanges.xmax!==xScale.max||_scaleRanges.ymin!==yScale.min||_scaleRanges.ymax!==yScale.max;Object.assign(_scaleRanges,newRanges);return changed;}
class Animator{constructor(){this._request=null;this._charts=new Map();this._running=false;this._lastDate=undefined;}
_notify(chart,anims,date,type){const callbacks=anims.listeners[type];const numSteps=anims.duration;callbacks.forEach((fn)=>fn({chart,initial:anims.initial,numSteps,currentStep:Math.min(date-anims.start,numSteps)}));}
_refresh(){if(this._request){return;}
this._running=true;this._request=requestAnimFrame.call(window,()=>{this._update();this._request=null;if(this._running){this._refresh();}});}
_update(date=Date.now()){let remaining=0;this._charts.forEach((anims,chart)=>{if(!anims.running||!anims.items.length){return;}
const items=anims.items;let i=items.length-1;let draw=false;let item;for(;i>=0;--i){item=items[i];if(item._active){if(item._total>anims.duration){anims.duration=item._total;}
item.tick(date);draw=true;}else{items[i]=items[items.length-1];items.pop();}}
if(draw){chart.draw();this._notify(chart,anims,date,'progress');}
if(!items.length){anims.running=false;this._notify(chart,anims,date,'complete');anims.initial=false;}
remaining+=items.length;});this._lastDate=date;if(remaining===0){this._running=false;}}
_getAnims(chart){const charts=this._charts;let anims=charts.get(chart);if(!anims){anims={running:false,initial:true,items:[],listeners:{complete:[],progress:[]}};charts.set(chart,anims);}
return anims;}
listen(chart,event,cb){this._getAnims(chart).listeners[event].push(cb);}
add(chart,items){if(!items||!items.length){return;}
this._getAnims(chart).items.push(...items);}
has(chart){return this._getAnims(chart).items.length>0;}
start(chart){const anims=this._charts.get(chart);if(!anims){return;}
anims.running=true;anims.start=Date.now();anims.duration=anims.items.reduce((acc,cur)=>Math.max(acc,cur._duration),0);this._refresh();}
running(chart){if(!this._running){return false;}
const anims=this._charts.get(chart);if(!anims||!anims.running||!anims.items.length){return false;}
return true;}
stop(chart){const anims=this._charts.get(chart);if(!anims||!anims.items.length){return;}
const items=anims.items;let i=items.length-1;for(;i>=0;--i){items[i].cancel();}
anims.items=[];this._notify(chart,anims,Date.now(),'complete');}
remove(chart){return this._charts.delete(chart);}}
var animator=new Animator();function round(v){return v+0.5|0;}
const lim=(v,l,h)=>Math.max(Math.min(v,h),l);function p2b(v){return lim(round(v*2.55),0,255);}
function n2b(v){return lim(round(v*255),0,255);}
function b2n(v){return lim(round(v/2.55)/100,0,1);}
function n2p(v){return lim(round(v*100),0,100);}
const map$1={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15,a:10,b:11,c:12,d:13,e:14,f:15};const hex=[...'0123456789ABCDEF'];const h1=b=>hex[b&0xF];const h2=b=>hex[(b&0xF0)>>4]+hex[b&0xF];const eq=b=>((b&0xF0)>>4)===(b&0xF);const isShort=v=>eq(v.r)&&eq(v.g)&&eq(v.b)&&eq(v.a);function hexParse(str){var len=str.length;var ret;if(str[0]==='#'){if(len===4||len===5){ret={r:255&map$1[str[1]]*17,g:255&map$1[str[2]]*17,b:255&map$1[str[3]]*17,a:len===5?map$1[str[4]]*17:255};}else if(len===7||len===9){ret={r:map$1[str[1]]<<4|map$1[str[2]],g:map$1[str[3]]<<4|map$1[str[4]],b:map$1[str[5]]<<4|map$1[str[6]],a:len===9?(map$1[str[7]]<<4|map$1[str[8]]):255};}}
return ret;}
const alpha=(a,f)=>a<255?f(a):'';function hexString(v){var f=isShort(v)?h1:h2;return v?'#'+f(v.r)+f(v.g)+f(v.b)+alpha(v.a,f):undefined;}
const HUE_RE=/^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;function hsl2rgbn(h,s,l){const a=s*Math.min(l,1-l);const f=(n,k=(n+h/30)%12)=>l-a*Math.max(Math.min(k-3,9-k,1),-1);return[f(0),f(8),f(4)];}
function hsv2rgbn(h,s,v){const f=(n,k=(n+h/60)%6)=>v-v*s*Math.max(Math.min(k,4-k,1),0);return[f(5),f(3),f(1)];}
function hwb2rgbn(h,w,b){const rgb=hsl2rgbn(h,1,0.5);let i;if(w+b>1){i=1/(w+b);w*=i;b*=i;}
for(i=0;i<3;i++){rgb[i]*=1-w-b;rgb[i]+=w;}
return rgb;}
function hueValue(r,g,b,d,max){if(r===max){return((g-b)/d)+(g<b?6:0);}
if(g===max){return(b-r)/d+2;}
return(r-g)/d+4;}
function rgb2hsl(v){const range=255;const r=v.r/range;const g=v.g/range;const b=v.b/range;const max=Math.max(r,g,b);const min=Math.min(r,g,b);const l=(max+min)/2;let h,s,d;if(max!==min){d=max-min;s=l>0.5?d/(2-max-min):d/(max+min);h=hueValue(r,g,b,d,max);h=h*60+0.5;}
return[h|0,s||0,l];}
function calln(f,a,b,c){return(Array.isArray(a)?f(a[0],a[1],a[2]):f(a,b,c)).map(n2b);}
function hsl2rgb(h,s,l){return calln(hsl2rgbn,h,s,l);}
function hwb2rgb(h,w,b){return calln(hwb2rgbn,h,w,b);}
function hsv2rgb(h,s,v){return calln(hsv2rgbn,h,s,v);}
function hue(h){return(h%360+360)%360;}
function hueParse(str){const m=HUE_RE.exec(str);let a=255;let v;if(!m){return;}
if(m[5]!==v){a=m[6]?p2b(+m[5]):n2b(+m[5]);}
const h=hue(+m[2]);const p1=+m[3]/100;const p2=+m[4]/100;if(m[1]==='hwb'){v=hwb2rgb(h,p1,p2);}else if(m[1]==='hsv'){v=hsv2rgb(h,p1,p2);}else{v=hsl2rgb(h,p1,p2);}
return{r:v[0],g:v[1],b:v[2],a:a};}
function rotate(v,deg){var h=rgb2hsl(v);h[0]=hue(h[0]+deg);h=hsl2rgb(h);v.r=h[0];v.g=h[1];v.b=h[2];}
function hslString(v){if(!v){return;}
const a=rgb2hsl(v);const h=a[0];const s=n2p(a[1]);const l=n2p(a[2]);return v.a<255?`hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`:`hsl(${h}, ${s}%, ${l}%)`;}
const map$2={x:'dark',Z:'light',Y:'re',X:'blu',W:'gr',V:'medium',U:'slate',A:'ee',T:'ol',S:'or',B:'ra',C:'lateg',D:'ights',R:'in',Q:'turquois',E:'hi',P:'ro',O:'al',N:'le',M:'de',L:'yello',F:'en',K:'ch',G:'arks',H:'ea',I:'ightg',J:'wh'};const names$1={OiceXe:'f0f8ff',antiquewEte:'faebd7',aqua:'ffff',aquamarRe:'7fffd4',azuY:'f0ffff',beige:'f5f5dc',bisque:'ffe4c4',black:'0',blanKedOmond:'ffebcd',Xe:'ff',XeviTet:'8a2be2',bPwn:'a52a2a',burlywood:'deb887',caMtXe:'5f9ea0',KartYuse:'7fff00',KocTate:'d2691e',cSO:'ff7f50',cSnflowerXe:'6495ed',cSnsilk:'fff8dc',crimson:'dc143c',cyan:'ffff',xXe:'8b',xcyan:'8b8b',xgTMnPd:'b8860b',xWay:'a9a9a9',xgYF:'6400',xgYy:'a9a9a9',xkhaki:'bdb76b',xmagFta:'8b008b',xTivegYF:'556b2f',xSange:'ff8c00',xScEd:'9932cc',xYd:'8b0000',xsOmon:'e9967a',xsHgYF:'8fbc8f',xUXe:'483d8b',xUWay:'2f4f4f',xUgYy:'2f4f4f',xQe:'ced1',xviTet:'9400d3',dAppRk:'ff1493',dApskyXe:'bfff',dimWay:'696969',dimgYy:'696969',dodgerXe:'1e90ff',fiYbrick:'b22222',flSOwEte:'fffaf0',foYstWAn:'228b22',fuKsia:'ff00ff',gaRsbSo:'dcdcdc',ghostwEte:'f8f8ff',gTd:'ffd700',gTMnPd:'daa520',Way:'808080',gYF:'8000',gYFLw:'adff2f',gYy:'808080',honeyMw:'f0fff0',hotpRk:'ff69b4',RdianYd:'cd5c5c',Rdigo:'4b0082',ivSy:'fffff0',khaki:'f0e68c',lavFMr:'e6e6fa',lavFMrXsh:'fff0f5',lawngYF:'7cfc00',NmoncEffon:'fffacd',ZXe:'add8e6',ZcSO:'f08080',Zcyan:'e0ffff',ZgTMnPdLw:'fafad2',ZWay:'d3d3d3',ZgYF:'90ee90',ZgYy:'d3d3d3',ZpRk:'ffb6c1',ZsOmon:'ffa07a',ZsHgYF:'20b2aa',ZskyXe:'87cefa',ZUWay:'778899',ZUgYy:'778899',ZstAlXe:'b0c4de',ZLw:'ffffe0',lime:'ff00',limegYF:'32cd32',lRF:'faf0e6',magFta:'ff00ff',maPon:'800000',VaquamarRe:'66cdaa',VXe:'cd',VScEd:'ba55d3',VpurpN:'9370db',VsHgYF:'3cb371',VUXe:'7b68ee',VsprRggYF:'fa9a',VQe:'48d1cc',VviTetYd:'c71585',midnightXe:'191970',mRtcYam:'f5fffa',mistyPse:'ffe4e1',moccasR:'ffe4b5',navajowEte:'ffdead',navy:'80',Tdlace:'fdf5e6',Tive:'808000',TivedBb:'6b8e23',Sange:'ffa500',SangeYd:'ff4500',ScEd:'da70d6',pOegTMnPd:'eee8aa',pOegYF:'98fb98',pOeQe:'afeeee',pOeviTetYd:'db7093',papayawEp:'ffefd5',pHKpuff:'ffdab9',peru:'cd853f',pRk:'ffc0cb',plum:'dda0dd',powMrXe:'b0e0e6',purpN:'800080',YbeccapurpN:'663399',Yd:'ff0000',Psybrown:'bc8f8f',PyOXe:'4169e1',saddNbPwn:'8b4513',sOmon:'fa8072',sandybPwn:'f4a460',sHgYF:'2e8b57',sHshell:'fff5ee',siFna:'a0522d',silver:'c0c0c0',skyXe:'87ceeb',UXe:'6a5acd',UWay:'708090',UgYy:'708090',snow:'fffafa',sprRggYF:'ff7f',stAlXe:'4682b4',tan:'d2b48c',teO:'8080',tEstN:'d8bfd8',tomato:'ff6347',Qe:'40e0d0',viTet:'ee82ee',JHt:'f5deb3',wEte:'ffffff',wEtesmoke:'f5f5f5',Lw:'ffff00',LwgYF:'9acd32'};function unpack(){const unpacked={};const keys=Object.keys(names$1);const tkeys=Object.keys(map$2);let i,j,k,ok,nk;for(i=0;i<keys.length;i++){ok=nk=keys[i];for(j=0;j<tkeys.length;j++){k=tkeys[j];nk=nk.replace(k,map$2[k]);}
k=parseInt(names$1[ok],16);unpacked[nk]=[k>>16&0xFF,k>>8&0xFF,k&0xFF];}
return unpacked;}
let names;function nameParse(str){if(!names){names=unpack();names.transparent=[0,0,0,0];}
const a=names[str.toLowerCase()];return a&&{r:a[0],g:a[1],b:a[2],a:a.length===4?a[3]:255};}
const RGB_RE=/^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;function rgbParse(str){const m=RGB_RE.exec(str);let a=255;let r,g,b;if(!m){return;}
if(m[7]!==r){const v=+m[7];a=m[8]?p2b(v):lim(v*255,0,255);}
r=+m[1];g=+m[3];b=+m[5];r=255&(m[2]?p2b(r):lim(r,0,255));g=255&(m[4]?p2b(g):lim(g,0,255));b=255&(m[6]?p2b(b):lim(b,0,255));return{r:r,g:g,b:b,a:a};}
function rgbString(v){return v&&(v.a<255?`rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`:`rgb(${v.r}, ${v.g}, ${v.b})`);}
const to=v=>v<=0.0031308?v*12.92:Math.pow(v,1.0/2.4)*1.055-0.055;const from=v=>v<=0.04045?v/12.92:Math.pow((v+0.055)/1.055,2.4);function interpolate$1(rgb1,rgb2,t){const r=from(b2n(rgb1.r));const g=from(b2n(rgb1.g));const b=from(b2n(rgb1.b));return{r:n2b(to(r+t*(from(b2n(rgb2.r))-r))),g:n2b(to(g+t*(from(b2n(rgb2.g))-g))),b:n2b(to(b+t*(from(b2n(rgb2.b))-b))),a:rgb1.a+t*(rgb2.a-rgb1.a)};}
function modHSL(v,i,ratio){if(v){let tmp=rgb2hsl(v);tmp[i]=Math.max(0,Math.min(tmp[i]+tmp[i]*ratio,i===0?360:1));tmp=hsl2rgb(tmp);v.r=tmp[0];v.g=tmp[1];v.b=tmp[2];}}
function clone(v,proto){return v?Object.assign(proto||{},v):v;}
function fromObject(input){var v={r:0,g:0,b:0,a:255};if(Array.isArray(input)){if(input.length>=3){v={r:input[0],g:input[1],b:input[2],a:255};if(input.length>3){v.a=n2b(input[3]);}}}else{v=clone(input,{r:0,g:0,b:0,a:1});v.a=n2b(v.a);}
return v;}
function functionParse(str){if(str.charAt(0)==='r'){return rgbParse(str);}
return hueParse(str);}
class Color{constructor(input){if(input instanceof Color){return input;}
const type=typeof input;let v;if(type==='object'){v=fromObject(input);}else if(type==='string'){v=hexParse(input)||nameParse(input)||functionParse(input);}
this._rgb=v;this._valid=!!v;}
get valid(){return this._valid;}
get rgb(){var v=clone(this._rgb);if(v){v.a=b2n(v.a);}
return v;}
set rgb(obj){this._rgb=fromObject(obj);}
rgbString(){return this._valid?rgbString(this._rgb):undefined;}
hexString(){return this._valid?hexString(this._rgb):undefined;}
hslString(){return this._valid?hslString(this._rgb):undefined;}
mix(color,weight){if(color){const c1=this.rgb;const c2=color.rgb;let w2;const p=weight===w2?0.5:weight;const w=2*p-1;const a=c1.a-c2.a;const w1=((w*a===-1?w:(w+a)/(1+w*a))+1)/2.0;w2=1-w1;c1.r=0xFF&w1*c1.r+w2*c2.r+0.5;c1.g=0xFF&w1*c1.g+w2*c2.g+0.5;c1.b=0xFF&w1*c1.b+w2*c2.b+0.5;c1.a=p*c1.a+(1-p)*c2.a;this.rgb=c1;}
return this;}
interpolate(color,t){if(color){this._rgb=interpolate$1(this._rgb,color._rgb,t);}
return this;}
clone(){return new Color(this.rgb);}
alpha(a){this._rgb.a=n2b(a);return this;}
clearer(ratio){const rgb=this._rgb;rgb.a*=1-ratio;return this;}
greyscale(){const rgb=this._rgb;const val=round(rgb.r*0.3+rgb.g*0.59+rgb.b*0.11);rgb.r=rgb.g=rgb.b=val;return this;}
opaquer(ratio){const rgb=this._rgb;rgb.a*=1+ratio;return this;}
negate(){const v=this._rgb;v.r=255-v.r;v.g=255-v.g;v.b=255-v.b;return this;}
lighten(ratio){modHSL(this._rgb,2,ratio);return this;}
darken(ratio){modHSL(this._rgb,2,-ratio);return this;}
saturate(ratio){modHSL(this._rgb,1,ratio);return this;}
desaturate(ratio){modHSL(this._rgb,1,-ratio);return this;}
rotate(deg){rotate(this._rgb,deg);return this;}}
function isPatternOrGradient(value){if(value&&typeof value==='object'){const type=value.toString();return type==='[object CanvasPattern]'||type==='[object CanvasGradient]';}
return false;}
function color(value){return isPatternOrGradient(value)?value:new Color(value);}
function getHoverColor(value){return isPatternOrGradient(value)?value:new Color(value).saturate(0.5).darken(0.1).hexString();}
const numbers=['x','y','borderWidth','radius','tension'];const colors=['color','borderColor','backgroundColor'];function applyAnimationsDefaults(defaults){defaults.set('animation',{delay:undefined,duration:1000,easing:'easeOutQuart',fn:undefined,from:undefined,loop:undefined,to:undefined,type:undefined});defaults.describe('animation',{_fallback:false,_indexable:false,_scriptable:(name)=>name!=='onProgress'&&name!=='onComplete'&&name!=='fn'});defaults.set('animations',{colors:{type:'color',properties:colors},numbers:{type:'number',properties:numbers}});defaults.describe('animations',{_fallback:'animation'});defaults.set('transitions',{active:{animation:{duration:400}},resize:{animation:{duration:0}},show:{animations:{colors:{from:'transparent'},visible:{type:'boolean',duration:0}}},hide:{animations:{colors:{to:'transparent'},visible:{type:'boolean',easing:'linear',fn:(v)=>v|0}}}});}
function applyLayoutsDefaults(defaults){defaults.set('layout',{autoPadding:true,padding:{top:0,right:0,bottom:0,left:0}});}
const intlCache=new Map();function getNumberFormat(locale,options){options=options||{};const cacheKey=locale+JSON.stringify(options);let formatter=intlCache.get(cacheKey);if(!formatter){formatter=new Intl.NumberFormat(locale,options);intlCache.set(cacheKey,formatter);}
return formatter;}
function formatNumber(num,locale,options){return getNumberFormat(locale,options).format(num);}
const formatters={values(value){return isArray(value)?value:''+value;},numeric(tickValue,index,ticks){if(tickValue===0){return'0';}
const locale=this.chart.options.locale;let notation;let delta=tickValue;if(ticks.length>1){const maxTick=Math.max(Math.abs(ticks[0].value),Math.abs(ticks[ticks.length-1].value));if(maxTick<1e-4||maxTick>1e+15){notation='scientific';}
delta=calculateDelta(tickValue,ticks);}
const logDelta=log10(Math.abs(delta));const numDecimal=isNaN(logDelta)?1:Math.max(Math.min(-1*Math.floor(logDelta),20),0);const options={notation,minimumFractionDigits:numDecimal,maximumFractionDigits:numDecimal};Object.assign(options,this.options.ticks.format);return formatNumber(tickValue,locale,options);},logarithmic(tickValue,index,ticks){if(tickValue===0){return'0';}
const remain=ticks[index].significand||tickValue/Math.pow(10,Math.floor(log10(tickValue)));if([1,2,3,5,10,15].includes(remain)||index>0.8*ticks.length){return formatters.numeric.call(this,tickValue,index,ticks);}
return'';}};function calculateDelta(tickValue,ticks){let delta=ticks.length>3?ticks[2].value-ticks[1].value:ticks[1].value-ticks[0].value;if(Math.abs(delta)>=1&&tickValue!==Math.floor(tickValue)){delta=tickValue-Math.floor(tickValue);}
return delta;}
var Ticks={formatters};function applyScaleDefaults(defaults){defaults.set('scale',{display:true,offset:false,reverse:false,beginAtZero:false,bounds:'ticks',clip:true,grace:0,grid:{display:true,lineWidth:1,drawOnChartArea:true,drawTicks:true,tickLength:8,tickWidth:(_ctx,options)=>options.lineWidth,tickColor:(_ctx,options)=>options.color,offset:false},border:{display:true,dash:[],dashOffset:0.0,width:1},title:{display:false,text:'',padding:{top:4,bottom:4}},ticks:{minRotation:0,maxRotation:50,mirror:false,textStrokeWidth:0,textStrokeColor:'',padding:3,display:true,autoSkip:true,autoSkipPadding:3,labelOffset:0,callback:Ticks.formatters.values,minor:{},major:{},align:'center',crossAlign:'near',showLabelBackdrop:false,backdropColor:'rgba(255, 255, 255, 0.75)',backdropPadding:2}});defaults.route('scale.ticks','color','','color');defaults.route('scale.grid','color','','borderColor');defaults.route('scale.border','color','','borderColor');defaults.route('scale.title','color','','color');defaults.describe('scale',{_fallback:false,_scriptable:(name)=>!name.startsWith('before')&&!name.startsWith('after')&&name!=='callback'&&name!=='parser',_indexable:(name)=>name!=='borderDash'&&name!=='tickBorderDash'&&name!=='dash'});defaults.describe('scales',{_fallback:'scale'});defaults.describe('scale.ticks',{_scriptable:(name)=>name!=='backdropPadding'&&name!=='callback',_indexable:(name)=>name!=='backdropPadding'});}
const overrides=Object.create(null);const descriptors=Object.create(null);function getScope$1(node,key){if(!key){return node;}
const keys=key.split('.');for(let i=0,n=keys.length;i<n;++i){const k=keys[i];node=node[k]||(node[k]=Object.create(null));}
return node;}
function set(root,scope,values){if(typeof scope==='string'){return merge(getScope$1(root,scope),values);}
return merge(getScope$1(root,''),scope);}
class Defaults{constructor(_descriptors,_appliers){this.animation=undefined;this.backgroundColor='rgba(0,0,0,0.1)';this.borderColor='rgba(0,0,0,0.1)';this.color='#666';this.datasets={};this.devicePixelRatio=(context)=>context.chart.platform.getDevicePixelRatio();this.elements={};this.events=['mousemove','mouseout','click','touchstart','touchmove'];this.font={family:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",size:12,style:'normal',lineHeight:1.2,weight:null};this.hover={};this.hoverBackgroundColor=(ctx,options)=>getHoverColor(options.backgroundColor);this.hoverBorderColor=(ctx,options)=>getHoverColor(options.borderColor);this.hoverColor=(ctx,options)=>getHoverColor(options.color);this.indexAxis='x';this.interaction={mode:'nearest',intersect:true,includeInvisible:false};this.maintainAspectRatio=true;this.onHover=null;this.onClick=null;this.parsing=true;this.plugins={};this.responsive=true;this.scale=undefined;this.scales={};this.showLine=true;this.drawActiveElementsOnTop=true;this.describe(_descriptors);this.apply(_appliers);}
set(scope,values){return set(this,scope,values);}
get(scope){return getScope$1(this,scope);}
describe(scope,values){return set(descriptors,scope,values);}
override(scope,values){return set(overrides,scope,values);}
route(scope,name,targetScope,targetName){const scopeObject=getScope$1(this,scope);const targetScopeObject=getScope$1(this,targetScope);const privateName='_'+name;Object.defineProperties(scopeObject,{[privateName]:{value:scopeObject[name],writable:true},[name]:{enumerable:true,get(){const local=this[privateName];const target=targetScopeObject[targetName];if(isObject(local)){return Object.assign({},target,local);}
return valueOrDefault(local,target);},set(value){this[privateName]=value;}}});}
apply(appliers){appliers.forEach((apply)=>apply(this));}}
var defaults=new Defaults({_scriptable:(name)=>!name.startsWith('on'),_indexable:(name)=>name!=='events',hover:{_fallback:'interaction'},interaction:{_scriptable:false,_indexable:false}},[applyAnimationsDefaults,applyLayoutsDefaults,applyScaleDefaults]);function _isDomSupported(){return typeof window!=='undefined'&&typeof document!=='undefined';}
function _getParentNode(domNode){let parent=domNode.parentNode;if(parent&&parent.toString()==='[object ShadowRoot]'){parent=parent.host;}
return parent;}
function parseMaxStyle(styleValue,node,parentProperty){let valueInPixels;if(typeof styleValue==='string'){valueInPixels=parseInt(styleValue,10);if(styleValue.indexOf('%')!==-1){valueInPixels=valueInPixels/100*node.parentNode[parentProperty];}}else{valueInPixels=styleValue;}
return valueInPixels;}
const getComputedStyle=(element)=>element.ownerDocument.defaultView.getComputedStyle(element,null);function getStyle(el,property){return getComputedStyle(el).getPropertyValue(property);}
const positions=['top','right','bottom','left'];function getPositionedStyle(styles,style,suffix){const result={};suffix=suffix?'-'+suffix:'';for(let i=0;i<4;i++){const pos=positions[i];result[pos]=parseFloat(styles[style+'-'+pos+suffix])||0;}
result.width=result.left+result.right;result.height=result.top+result.bottom;return result;}
const useOffsetPos=(x,y,target)=>(x>0||y>0)&&(!target||!target.shadowRoot);function getCanvasPosition(e,canvas){const touches=e.touches;const source=touches&&touches.length?touches[0]:e;const{offsetX,offsetY}=source;let box=false;let x,y;if(useOffsetPos(offsetX,offsetY,e.target)){x=offsetX;y=offsetY;}else{const rect=canvas.getBoundingClientRect();x=source.clientX-rect.left;y=source.clientY-rect.top;box=true;}
return{x,y,box};}
function getRelativePosition(event,chart){if('native'in event){return event;}
const{canvas,currentDevicePixelRatio}=chart;const style=getComputedStyle(canvas);const borderBox=style.boxSizing==='border-box';const paddings=getPositionedStyle(style,'padding');const borders=getPositionedStyle(style,'border','width');const{x,y,box}=getCanvasPosition(event,canvas);const xOffset=paddings.left+(box&&borders.left);const yOffset=paddings.top+(box&&borders.top);let{width,height}=chart;if(borderBox){width-=paddings.width+borders.width;height-=paddings.height+borders.height;}
return{x:Math.round((x-xOffset)/width*canvas.width/currentDevicePixelRatio),y:Math.round((y-yOffset)/height*canvas.height/currentDevicePixelRatio)};}
function getContainerSize(canvas,width,height){let maxWidth,maxHeight;if(width===undefined||height===undefined){const container=canvas&&_getParentNode(canvas);if(!container){width=canvas.clientWidth;height=canvas.clientHeight;}else{const rect=container.getBoundingClientRect();const containerStyle=getComputedStyle(container);const containerBorder=getPositionedStyle(containerStyle,'border','width');const containerPadding=getPositionedStyle(containerStyle,'padding');width=rect.width-containerPadding.width-containerBorder.width;height=rect.height-containerPadding.height-containerBorder.height;maxWidth=parseMaxStyle(containerStyle.maxWidth,container,'clientWidth');maxHeight=parseMaxStyle(containerStyle.maxHeight,container,'clientHeight');}}
return{width,height,maxWidth:maxWidth||INFINITY,maxHeight:maxHeight||INFINITY};}
const round1=(v)=>Math.round(v*10)/10;function getMaximumSize(canvas,bbWidth,bbHeight,aspectRatio){const style=getComputedStyle(canvas);const margins=getPositionedStyle(style,'margin');const maxWidth=parseMaxStyle(style.maxWidth,canvas,'clientWidth')||INFINITY;const maxHeight=parseMaxStyle(style.maxHeight,canvas,'clientHeight')||INFINITY;const containerSize=getContainerSize(canvas,bbWidth,bbHeight);let{width,height}=containerSize;if(style.boxSizing==='content-box'){const borders=getPositionedStyle(style,'border','width');const paddings=getPositionedStyle(style,'padding');width-=paddings.width+borders.width;height-=paddings.height+borders.height;}
width=Math.max(0,width-margins.width);height=Math.max(0,aspectRatio?width/aspectRatio:height-margins.height);width=round1(Math.min(width,maxWidth,containerSize.maxWidth));height=round1(Math.min(height,maxHeight,containerSize.maxHeight));if(width&&!height){height=round1(width/2);}
const maintainHeight=bbWidth!==undefined||bbHeight!==undefined;if(maintainHeight&&aspectRatio&&containerSize.height&&height>containerSize.height){height=containerSize.height;width=round1(Math.floor(height*aspectRatio));}
return{width,height};}
function retinaScale(chart,forceRatio,forceStyle){const pixelRatio=forceRatio||1;const deviceHeight=Math.floor(chart.height*pixelRatio);const deviceWidth=Math.floor(chart.width*pixelRatio);chart.height=Math.floor(chart.height);chart.width=Math.floor(chart.width);const canvas=chart.canvas;if(canvas.style&&(forceStyle||!canvas.style.height&&!canvas.style.width)){canvas.style.height=`${chart.height}px`;canvas.style.width=`${chart.width}px`;}
if(chart.currentDevicePixelRatio!==pixelRatio||canvas.height!==deviceHeight||canvas.width!==deviceWidth){chart.currentDevicePixelRatio=pixelRatio;canvas.height=deviceHeight;canvas.width=deviceWidth;chart.ctx.setTransform(pixelRatio,0,0,pixelRatio,0,0);return true;}
return false;}
const supportsEventListenerOptions=function(){let passiveSupported=false;try{const options={get passive(){passiveSupported=true;return false;}};if(_isDomSupported()){window.addEventListener('test',null,options);window.removeEventListener('test',null,options);}}catch(e){}
return passiveSupported;}();function readUsedSize(element,property){const value=getStyle(element,property);const matches=value&&value.match(/^(\d+)(\.\d+)?px$/);return matches?+matches[1]:undefined;}
function toFontString(font){if(!font||isNullOrUndef(font.size)||isNullOrUndef(font.family)){return null;}
return(font.style?font.style+' ':'')+(font.weight?font.weight+' ':'')+font.size+'px '+font.family;}
function _measureText(ctx,data,gc,longest,string){let textWidth=data[string];if(!textWidth){textWidth=data[string]=ctx.measureText(string).width;gc.push(string);}
if(textWidth>longest){longest=textWidth;}
return longest;}
function _longestText(ctx,font,arrayOfThings,cache){cache=cache||{};let data=cache.data=cache.data||{};let gc=cache.garbageCollect=cache.garbageCollect||[];if(cache.font!==font){data=cache.data={};gc=cache.garbageCollect=[];cache.font=font;}
ctx.save();ctx.font=font;let longest=0;const ilen=arrayOfThings.length;let i,j,jlen,thing,nestedThing;for(i=0;i<ilen;i++){thing=arrayOfThings[i];if(thing!==undefined&&thing!==null&&!isArray(thing)){longest=_measureText(ctx,data,gc,longest,thing);}else if(isArray(thing)){for(j=0,jlen=thing.length;j<jlen;j++){nestedThing=thing[j];if(nestedThing!==undefined&&nestedThing!==null&&!isArray(nestedThing)){longest=_measureText(ctx,data,gc,longest,nestedThing);}}}}
ctx.restore();const gcLen=gc.length/2;if(gcLen>arrayOfThings.length){for(i=0;i<gcLen;i++){delete data[gc[i]];}
gc.splice(0,gcLen);}
return longest;}
function _alignPixel(chart,pixel,width){const devicePixelRatio=chart.currentDevicePixelRatio;const halfWidth=width!==0?Math.max(width/2,0.5):0;return Math.round((pixel-halfWidth)*devicePixelRatio)/devicePixelRatio+halfWidth;}
function clearCanvas(canvas,ctx){if(!ctx&&!canvas){return;}
ctx=ctx||canvas.getContext('2d');ctx.save();ctx.resetTransform();ctx.clearRect(0,0,canvas.width,canvas.height);ctx.restore();}
function drawPoint(ctx,options,x,y){drawPointLegend(ctx,options,x,y,null);}
function drawPointLegend(ctx,options,x,y,w){let type,xOffset,yOffset,size,cornerRadius,width,xOffsetW,yOffsetW;const style=options.pointStyle;const rotation=options.rotation;const radius=options.radius;let rad=(rotation||0)*RAD_PER_DEG;if(style&&typeof style==='object'){type=style.toString();if(type==='[object HTMLImageElement]'||type==='[object HTMLCanvasElement]'){ctx.save();ctx.translate(x,y);ctx.rotate(rad);ctx.drawImage(style,-style.width/2,-style.height/2,style.width,style.height);ctx.restore();return;}}
if(isNaN(radius)||radius<=0){return;}
ctx.beginPath();switch(style){default:if(w){ctx.ellipse(x,y,w/2,radius,0,0,TAU);}else{ctx.arc(x,y,radius,0,TAU);}
ctx.closePath();break;case'triangle':width=w?w/2:radius;ctx.moveTo(x+Math.sin(rad)*width,y-Math.cos(rad)*radius);rad+=TWO_THIRDS_PI;ctx.lineTo(x+Math.sin(rad)*width,y-Math.cos(rad)*radius);rad+=TWO_THIRDS_PI;ctx.lineTo(x+Math.sin(rad)*width,y-Math.cos(rad)*radius);ctx.closePath();break;case'rectRounded':cornerRadius=radius*0.516;size=radius-cornerRadius;xOffset=Math.cos(rad+QUARTER_PI)*size;xOffsetW=Math.cos(rad+QUARTER_PI)*(w?w/2-cornerRadius:size);yOffset=Math.sin(rad+QUARTER_PI)*size;yOffsetW=Math.sin(rad+QUARTER_PI)*(w?w/2-cornerRadius:size);ctx.arc(x-xOffsetW,y-yOffset,cornerRadius,rad-PI,rad-HALF_PI);ctx.arc(x+yOffsetW,y-xOffset,cornerRadius,rad-HALF_PI,rad);ctx.arc(x+xOffsetW,y+yOffset,cornerRadius,rad,rad+HALF_PI);ctx.arc(x-yOffsetW,y+xOffset,cornerRadius,rad+HALF_PI,rad+PI);ctx.closePath();break;case'rect':if(!rotation){size=Math.SQRT1_2*radius;width=w?w/2:size;ctx.rect(x-width,y-size,2*width,2*size);break;}
rad+=QUARTER_PI;case'rectRot':xOffsetW=Math.cos(rad)*(w?w/2:radius);xOffset=Math.cos(rad)*radius;yOffset=Math.sin(rad)*radius;yOffsetW=Math.sin(rad)*(w?w/2:radius);ctx.moveTo(x-xOffsetW,y-yOffset);ctx.lineTo(x+yOffsetW,y-xOffset);ctx.lineTo(x+xOffsetW,y+yOffset);ctx.lineTo(x-yOffsetW,y+xOffset);ctx.closePath();break;case'crossRot':rad+=QUARTER_PI;case'cross':xOffsetW=Math.cos(rad)*(w?w/2:radius);xOffset=Math.cos(rad)*radius;yOffset=Math.sin(rad)*radius;yOffsetW=Math.sin(rad)*(w?w/2:radius);ctx.moveTo(x-xOffsetW,y-yOffset);ctx.lineTo(x+xOffsetW,y+yOffset);ctx.moveTo(x+yOffsetW,y-xOffset);ctx.lineTo(x-yOffsetW,y+xOffset);break;case'star':xOffsetW=Math.cos(rad)*(w?w/2:radius);xOffset=Math.cos(rad)*radius;yOffset=Math.sin(rad)*radius;yOffsetW=Math.sin(rad)*(w?w/2:radius);ctx.moveTo(x-xOffsetW,y-yOffset);ctx.lineTo(x+xOffsetW,y+yOffset);ctx.moveTo(x+yOffsetW,y-xOffset);ctx.lineTo(x-yOffsetW,y+xOffset);rad+=QUARTER_PI;xOffsetW=Math.cos(rad)*(w?w/2:radius);xOffset=Math.cos(rad)*radius;yOffset=Math.sin(rad)*radius;yOffsetW=Math.sin(rad)*(w?w/2:radius);ctx.moveTo(x-xOffsetW,y-yOffset);ctx.lineTo(x+xOffsetW,y+yOffset);ctx.moveTo(x+yOffsetW,y-xOffset);ctx.lineTo(x-yOffsetW,y+xOffset);break;case'line':xOffset=w?w/2:Math.cos(rad)*radius;yOffset=Math.sin(rad)*radius;ctx.moveTo(x-xOffset,y-yOffset);ctx.lineTo(x+xOffset,y+yOffset);break;case'dash':ctx.moveTo(x,y);ctx.lineTo(x+Math.cos(rad)*(w?w/2:radius),y+Math.sin(rad)*radius);break;case false:ctx.closePath();break;}
ctx.fill();if(options.borderWidth>0){ctx.stroke();}}
function _isPointInArea(point,area,margin){margin=margin||0.5;return!area||point&&point.x>area.left-margin&&point.x<area.right+margin&&point.y>area.top-margin&&point.y<area.bottom+margin;}
function clipArea(ctx,area){ctx.save();ctx.beginPath();ctx.rect(area.left,area.top,area.right-area.left,area.bottom-area.top);ctx.clip();}
function unclipArea(ctx){ctx.restore();}
function _steppedLineTo(ctx,previous,target,flip,mode){if(!previous){return ctx.lineTo(target.x,target.y);}
if(mode==='middle'){const midpoint=(previous.x+target.x)/2.0;ctx.lineTo(midpoint,previous.y);ctx.lineTo(midpoint,target.y);}else if(mode==='after'!==!!flip){ctx.lineTo(previous.x,target.y);}else{ctx.lineTo(target.x,previous.y);}
ctx.lineTo(target.x,target.y);}
function _bezierCurveTo(ctx,previous,target,flip){if(!previous){return ctx.lineTo(target.x,target.y);}
ctx.bezierCurveTo(flip?previous.cp1x:previous.cp2x,flip?previous.cp1y:previous.cp2y,flip?target.cp2x:target.cp1x,flip?target.cp2y:target.cp1y,target.x,target.y);}
function setRenderOpts(ctx,opts){if(opts.translation){ctx.translate(opts.translation[0],opts.translation[1]);}
if(!isNullOrUndef(opts.rotation)){ctx.rotate(opts.rotation);}
if(opts.color){ctx.fillStyle=opts.color;}
if(opts.textAlign){ctx.textAlign=opts.textAlign;}
if(opts.textBaseline){ctx.textBaseline=opts.textBaseline;}}
function decorateText(ctx,x,y,line,opts){if(opts.strikethrough||opts.underline){const metrics=ctx.measureText(line);const left=x-metrics.actualBoundingBoxLeft;const right=x+metrics.actualBoundingBoxRight;const top=y-metrics.actualBoundingBoxAscent;const bottom=y+metrics.actualBoundingBoxDescent;const yDecoration=opts.strikethrough?(top+bottom)/2:bottom;ctx.strokeStyle=ctx.fillStyle;ctx.beginPath();ctx.lineWidth=opts.decorationWidth||2;ctx.moveTo(left,yDecoration);ctx.lineTo(right,yDecoration);ctx.stroke();}}
function drawBackdrop(ctx,opts){const oldColor=ctx.fillStyle;ctx.fillStyle=opts.color;ctx.fillRect(opts.left,opts.top,opts.width,opts.height);ctx.fillStyle=oldColor;}
function renderText(ctx,text,x,y,font,opts={}){const lines=isArray(text)?text:[text];const stroke=opts.strokeWidth>0&&opts.strokeColor!=='';let i,line;ctx.save();ctx.font=font.string;setRenderOpts(ctx,opts);for(i=0;i<lines.length;++i){line=lines[i];if(opts.backdrop){drawBackdrop(ctx,opts.backdrop);}
if(stroke){if(opts.strokeColor){ctx.strokeStyle=opts.strokeColor;}
if(!isNullOrUndef(opts.strokeWidth)){ctx.lineWidth=opts.strokeWidth;}
ctx.strokeText(line,x,y,opts.maxWidth);}
ctx.fillText(line,x,y,opts.maxWidth);decorateText(ctx,x,y,line,opts);y+=Number(font.lineHeight);}
ctx.restore();}
function addRoundedRectPath(ctx,rect){const{x,y,w,h,radius}=rect;ctx.arc(x+radius.topLeft,y+radius.topLeft,radius.topLeft,1.5*PI,PI,true);ctx.lineTo(x,y+h-radius.bottomLeft);ctx.arc(x+radius.bottomLeft,y+h-radius.bottomLeft,radius.bottomLeft,PI,HALF_PI,true);ctx.lineTo(x+w-radius.bottomRight,y+h);ctx.arc(x+w-radius.bottomRight,y+h-radius.bottomRight,radius.bottomRight,HALF_PI,0,true);ctx.lineTo(x+w,y+radius.topRight);ctx.arc(x+w-radius.topRight,y+radius.topRight,radius.topRight,0,-HALF_PI,true);ctx.lineTo(x+radius.topLeft,y);}
function _createResolver(scopes,prefixes=[''],rootScopes,fallback,getTarget=()=>scopes[0]){const finalRootScopes=rootScopes||scopes;if(typeof fallback==='undefined'){fallback=_resolve('_fallback',scopes);}
const cache={[Symbol.toStringTag]:'Object',_cacheable:true,_scopes:scopes,_rootScopes:finalRootScopes,_fallback:fallback,_getTarget:getTarget,override:(scope)=>_createResolver([scope,...scopes],prefixes,finalRootScopes,fallback)};return new Proxy(cache,{deleteProperty(target,prop){delete target[prop];delete target._keys;delete scopes[0][prop];return true;},get(target,prop){return _cached(target,prop,()=>_resolveWithPrefixes(prop,prefixes,scopes,target));},getOwnPropertyDescriptor(target,prop){return Reflect.getOwnPropertyDescriptor(target._scopes[0],prop);},getPrototypeOf(){return Reflect.getPrototypeOf(scopes[0]);},has(target,prop){return getKeysFromAllScopes(target).includes(prop);},ownKeys(target){return getKeysFromAllScopes(target);},set(target,prop,value){const storage=target._storage||(target._storage=getTarget());target[prop]=storage[prop]=value;delete target._keys;return true;}});}
function _attachContext(proxy,context,subProxy,descriptorDefaults){const cache={_cacheable:false,_proxy:proxy,_context:context,_subProxy:subProxy,_stack:new Set(),_descriptors:_descriptors(proxy,descriptorDefaults),setContext:(ctx)=>_attachContext(proxy,ctx,subProxy,descriptorDefaults),override:(scope)=>_attachContext(proxy.override(scope),context,subProxy,descriptorDefaults)};return new Proxy(cache,{deleteProperty(target,prop){delete target[prop];delete proxy[prop];return true;},get(target,prop,receiver){return _cached(target,prop,()=>_resolveWithContext(target,prop,receiver));},getOwnPropertyDescriptor(target,prop){return target._descriptors.allKeys?Reflect.has(proxy,prop)?{enumerable:true,configurable:true}:undefined:Reflect.getOwnPropertyDescriptor(proxy,prop);},getPrototypeOf(){return Reflect.getPrototypeOf(proxy);},has(target,prop){return Reflect.has(proxy,prop);},ownKeys(){return Reflect.ownKeys(proxy);},set(target,prop,value){proxy[prop]=value;delete target[prop];return true;}});}
function _descriptors(proxy,defaults={scriptable:true,indexable:true}){const{_scriptable=defaults.scriptable,_indexable=defaults.indexable,_allKeys=defaults.allKeys}=proxy;return{allKeys:_allKeys,scriptable:_scriptable,indexable:_indexable,isScriptable:isFunction(_scriptable)?_scriptable:()=>_scriptable,isIndexable:isFunction(_indexable)?_indexable:()=>_indexable};}
const readKey=(prefix,name)=>prefix?prefix+_capitalize(name):name;const needsSubResolver=(prop,value)=>isObject(value)&&prop!=='adapters'&&(Object.getPrototypeOf(value)===null||value.constructor===Object);function _cached(target,prop,resolve){if(Object.prototype.hasOwnProperty.call(target,prop)||prop==='constructor'){return target[prop];}
const value=resolve();target[prop]=value;return value;}
function _resolveWithContext(target,prop,receiver){const{_proxy,_context,_subProxy,_descriptors:descriptors}=target;let value=_proxy[prop];if(isFunction(value)&&descriptors.isScriptable(prop)){value=_resolveScriptable(prop,value,target,receiver);}
if(isArray(value)&&value.length){value=_resolveArray(prop,value,target,descriptors.isIndexable);}
if(needsSubResolver(prop,value)){value=_attachContext(value,_context,_subProxy&&_subProxy[prop],descriptors);}
return value;}
function _resolveScriptable(prop,getValue,target,receiver){const{_proxy,_context,_subProxy,_stack}=target;if(_stack.has(prop)){throw new Error('Recursion detected: '+Array.from(_stack).join('->')+'->'+prop);}
_stack.add(prop);let value=getValue(_context,_subProxy||receiver);_stack.delete(prop);if(needsSubResolver(prop,value)){value=createSubResolver(_proxy._scopes,_proxy,prop,value);}
return value;}
function _resolveArray(prop,value,target,isIndexable){const{_proxy,_context,_subProxy,_descriptors:descriptors}=target;if(typeof _context.index!=='undefined'&&isIndexable(prop)){return value[_context.index%value.length];}else if(isObject(value[0])){const arr=value;const scopes=_proxy._scopes.filter((s)=>s!==arr);value=[];for(const item of arr){const resolver=createSubResolver(scopes,_proxy,prop,item);value.push(_attachContext(resolver,_context,_subProxy&&_subProxy[prop],descriptors));}}
return value;}
function resolveFallback(fallback,prop,value){return isFunction(fallback)?fallback(prop,value):fallback;}
const getScope=(key,parent)=>key===true?parent:typeof key==='string'?resolveObjectKey(parent,key):undefined;function addScopes(set,parentScopes,key,parentFallback,value){for(const parent of parentScopes){const scope=getScope(key,parent);if(scope){set.add(scope);const fallback=resolveFallback(scope._fallback,key,value);if(typeof fallback!=='undefined'&&fallback!==key&&fallback!==parentFallback){return fallback;}}else if(scope===false&&typeof parentFallback!=='undefined'&&key!==parentFallback){return null;}}
return false;}
function createSubResolver(parentScopes,resolver,prop,value){const rootScopes=resolver._rootScopes;const fallback=resolveFallback(resolver._fallback,prop,value);const allScopes=[...parentScopes,...rootScopes];const set=new Set();set.add(value);let key=addScopesFromKey(set,allScopes,prop,fallback||prop,value);if(key===null){return false;}
if(typeof fallback!=='undefined'&&fallback!==prop){key=addScopesFromKey(set,allScopes,fallback,key,value);if(key===null){return false;}}
return _createResolver(Array.from(set),[''],rootScopes,fallback,()=>subGetTarget(resolver,prop,value));}
function addScopesFromKey(set,allScopes,key,fallback,item){while(key){key=addScopes(set,allScopes,key,fallback,item);}
return key;}
function subGetTarget(resolver,prop,value){const parent=resolver._getTarget();if(!(prop in parent)){parent[prop]={};}
const target=parent[prop];if(isArray(target)&&isObject(value)){return value;}
return target||{};}
function _resolveWithPrefixes(prop,prefixes,scopes,proxy){let value;for(const prefix of prefixes){value=_resolve(readKey(prefix,prop),scopes);if(typeof value!=='undefined'){return needsSubResolver(prop,value)?createSubResolver(scopes,proxy,prop,value):value;}}}
function _resolve(key,scopes){for(const scope of scopes){if(!scope){continue;}
const value=scope[key];if(typeof value!=='undefined'){return value;}}}
function getKeysFromAllScopes(target){let keys=target._keys;if(!keys){keys=target._keys=resolveKeysFromAllScopes(target._scopes);}
return keys;}
function resolveKeysFromAllScopes(scopes){const set=new Set();for(const scope of scopes){for(const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){set.add(key);}}
return Array.from(set);}
function _parseObjectDataRadialScale(meta,data,start,count){const{iScale}=meta;const{key='r'}=this._parsing;const parsed=new Array(count);let i,ilen,index,item;for(i=0,ilen=count;i<ilen;++i){index=i+start;item=data[index];parsed[i]={r:iScale.parse(resolveObjectKey(item,key),index)};}
return parsed;}
const EPSILON=Number.EPSILON||1e-14;const getPoint=(points,i)=>i<points.length&&!points[i].skip&&points[i];const getValueAxis=(indexAxis)=>indexAxis==='x'?'y':'x';function splineCurve(firstPoint,middlePoint,afterPoint,t){const previous=firstPoint.skip?middlePoint:firstPoint;const current=middlePoint;const next=afterPoint.skip?middlePoint:afterPoint;const d01=distanceBetweenPoints(current,previous);const d12=distanceBetweenPoints(next,current);let s01=d01/(d01+d12);let s12=d12/(d01+d12);s01=isNaN(s01)?0:s01;s12=isNaN(s12)?0:s12;const fa=t*s01;const fb=t*s12;return{previous:{x:current.x-fa*(next.x-previous.x),y:current.y-fa*(next.y-previous.y)},next:{x:current.x+fb*(next.x-previous.x),y:current.y+fb*(next.y-previous.y)}};}
function monotoneAdjust(points,deltaK,mK){const pointsLen=points.length;let alphaK,betaK,tauK,squaredMagnitude,pointCurrent;let pointAfter=getPoint(points,0);for(let i=0;i<pointsLen-1;++i){pointCurrent=pointAfter;pointAfter=getPoint(points,i+1);if(!pointCurrent||!pointAfter){continue;}
if(almostEquals(deltaK[i],0,EPSILON)){mK[i]=mK[i+1]=0;continue;}
alphaK=mK[i]/deltaK[i];betaK=mK[i+1]/deltaK[i];squaredMagnitude=Math.pow(alphaK,2)+Math.pow(betaK,2);if(squaredMagnitude<=9){continue;}
tauK=3/Math.sqrt(squaredMagnitude);mK[i]=alphaK*tauK*deltaK[i];mK[i+1]=betaK*tauK*deltaK[i];}}
function monotoneCompute(points,mK,indexAxis='x'){const valueAxis=getValueAxis(indexAxis);const pointsLen=points.length;let delta,pointBefore,pointCurrent;let pointAfter=getPoint(points,0);for(let i=0;i<pointsLen;++i){pointBefore=pointCurrent;pointCurrent=pointAfter;pointAfter=getPoint(points,i+1);if(!pointCurrent){continue;}
const iPixel=pointCurrent[indexAxis];const vPixel=pointCurrent[valueAxis];if(pointBefore){delta=(iPixel-pointBefore[indexAxis])/3;pointCurrent[`cp1${indexAxis}`]=iPixel-delta;pointCurrent[`cp1${valueAxis}`]=vPixel-delta*mK[i];}
if(pointAfter){delta=(pointAfter[indexAxis]-iPixel)/3;pointCurrent[`cp2${indexAxis}`]=iPixel+delta;pointCurrent[`cp2${valueAxis}`]=vPixel+delta*mK[i];}}}
function splineCurveMonotone(points,indexAxis='x'){const valueAxis=getValueAxis(indexAxis);const pointsLen=points.length;const deltaK=Array(pointsLen).fill(0);const mK=Array(pointsLen);let i,pointBefore,pointCurrent;let pointAfter=getPoint(points,0);for(i=0;i<pointsLen;++i){pointBefore=pointCurrent;pointCurrent=pointAfter;pointAfter=getPoint(points,i+1);if(!pointCurrent){continue;}
if(pointAfter){const slopeDelta=pointAfter[indexAxis]-pointCurrent[indexAxis];deltaK[i]=slopeDelta!==0?(pointAfter[valueAxis]-pointCurrent[valueAxis])/slopeDelta:0;}
mK[i]=!pointBefore?deltaK[i]:!pointAfter?deltaK[i-1]:sign(deltaK[i-1])!==sign(deltaK[i])?0:(deltaK[i-1]+deltaK[i])/2;}
monotoneAdjust(points,deltaK,mK);monotoneCompute(points,mK,indexAxis);}
function capControlPoint(pt,min,max){return Math.max(Math.min(pt,max),min);}
function capBezierPoints(points,area){let i,ilen,point,inArea,inAreaPrev;let inAreaNext=_isPointInArea(points[0],area);for(i=0,ilen=points.length;i<ilen;++i){inAreaPrev=inArea;inArea=inAreaNext;inAreaNext=i<ilen-1&&_isPointInArea(points[i+1],area);if(!inArea){continue;}
point=points[i];if(inAreaPrev){point.cp1x=capControlPoint(point.cp1x,area.left,area.right);point.cp1y=capControlPoint(point.cp1y,area.top,area.bottom);}
if(inAreaNext){point.cp2x=capControlPoint(point.cp2x,area.left,area.right);point.cp2y=capControlPoint(point.cp2y,area.top,area.bottom);}}}
function _updateBezierControlPoints(points,options,area,loop,indexAxis){let i,ilen,point,controlPoints;if(options.spanGaps){points=points.filter((pt)=>!pt.skip);}
if(options.cubicInterpolationMode==='monotone'){splineCurveMonotone(points,indexAxis);}else{let prev=loop?points[points.length-1]:points[0];for(i=0,ilen=points.length;i<ilen;++i){point=points[i];controlPoints=splineCurve(prev,point,points[Math.min(i+1,ilen-(loop?0:1))%ilen],options.tension);point.cp1x=controlPoints.previous.x;point.cp1y=controlPoints.previous.y;point.cp2x=controlPoints.next.x;point.cp2y=controlPoints.next.y;prev=point;}}
if(options.capBezierPoints){capBezierPoints(points,area);}}
const atEdge=(t)=>t===0||t===1;const elasticIn=(t,s,p)=>-(Math.pow(2,10*(t-=1))*Math.sin((t-s)*TAU/p));const elasticOut=(t,s,p)=>Math.pow(2,-10*t)*Math.sin((t-s)*TAU/p)+1;const effects={linear:(t)=>t,easeInQuad:(t)=>t*t,easeOutQuad:(t)=>-t*(t-2),easeInOutQuad:(t)=>(t/=0.5)<1?0.5*t*t:-0.5*(--t*(t-2)-1),easeInCubic:(t)=>t*t*t,easeOutCubic:(t)=>(t-=1)*t*t+1,easeInOutCubic:(t)=>(t/=0.5)<1?0.5*t*t*t:0.5*((t-=2)*t*t+2),easeInQuart:(t)=>t*t*t*t,easeOutQuart:(t)=>-((t-=1)*t*t*t-1),easeInOutQuart:(t)=>(t/=0.5)<1?0.5*t*t*t*t:-0.5*((t-=2)*t*t*t-2),easeInQuint:(t)=>t*t*t*t*t,easeOutQuint:(t)=>(t-=1)*t*t*t*t+1,easeInOutQuint:(t)=>(t/=0.5)<1?0.5*t*t*t*t*t:0.5*((t-=2)*t*t*t*t+2),easeInSine:(t)=>-Math.cos(t*HALF_PI)+1,easeOutSine:(t)=>Math.sin(t*HALF_PI),easeInOutSine:(t)=>-0.5*(Math.cos(PI*t)-1),easeInExpo:(t)=>t===0?0:Math.pow(2,10*(t-1)),easeOutExpo:(t)=>t===1?1:-Math.pow(2,-10*t)+1,easeInOutExpo:(t)=>atEdge(t)?t:t<0.5?0.5*Math.pow(2,10*(t*2-1)):0.5*(-Math.pow(2,-10*(t*2-1))+2),easeInCirc:(t)=>t>=1?t:-(Math.sqrt(1-t*t)-1),easeOutCirc:(t)=>Math.sqrt(1-(t-=1)*t),easeInOutCirc:(t)=>(t/=0.5)<1?-0.5*(Math.sqrt(1-t*t)-1):0.5*(Math.sqrt(1-(t-=2)*t)+1),easeInElastic:(t)=>atEdge(t)?t:elasticIn(t,0.075,0.3),easeOutElastic:(t)=>atEdge(t)?t:elasticOut(t,0.075,0.3),easeInOutElastic(t){const s=0.1125;const p=0.45;return atEdge(t)?t:t<0.5?0.5*elasticIn(t*2,s,p):0.5+0.5*elasticOut(t*2-1,s,p);},easeInBack(t){const s=1.70158;return t*t*((s+1)*t-s);},easeOutBack(t){const s=1.70158;return(t-=1)*t*((s+1)*t+s)+1;},easeInOutBack(t){let s=1.70158;if((t/=0.5)<1){return 0.5*(t*t*(((s*=1.525)+1)*t-s));}
return 0.5*((t-=2)*t*(((s*=1.525)+1)*t+s)+2);},easeInBounce:(t)=>1-effects.easeOutBounce(1-t),easeOutBounce(t){const m=7.5625;const d=2.75;if(t<1/d){return m*t*t;}
if(t<2/d){return m*(t-=1.5/d)*t+0.75;}
if(t<2.5/d){return m*(t-=2.25/d)*t+0.9375;}
return m*(t-=2.625/d)*t+0.984375;},easeInOutBounce:(t)=>t<0.5?effects.easeInBounce(t*2)*0.5:effects.easeOutBounce(t*2-1)*0.5+0.5};function _pointInLine(p1,p2,t,mode){return{x:p1.x+t*(p2.x-p1.x),y:p1.y+t*(p2.y-p1.y)};}
function _steppedInterpolation(p1,p2,t,mode){return{x:p1.x+t*(p2.x-p1.x),y:mode==='middle'?t<0.5?p1.y:p2.y:mode==='after'?t<1?p1.y:p2.y:t>0?p2.y:p1.y};}
function _bezierInterpolation(p1,p2,t,mode){const cp1={x:p1.cp2x,y:p1.cp2y};const cp2={x:p2.cp1x,y:p2.cp1y};const a=_pointInLine(p1,cp1,t);const b=_pointInLine(cp1,cp2,t);const c=_pointInLine(cp2,p2,t);const d=_pointInLine(a,b,t);const e=_pointInLine(b,c,t);return _pointInLine(d,e,t);}
const LINE_HEIGHT=/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/;const FONT_STYLE=/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;function toLineHeight(value,size){const matches=(''+value).match(LINE_HEIGHT);if(!matches||matches[1]==='normal'){return size*1.2;}
value=+matches[2];switch(matches[3]){case'px':return value;case'%':value/=100;break;}
return size*value;}
const numberOrZero=(v)=>+v||0;function _readValueToProps(value,props){const ret={};const objProps=isObject(props);const keys=objProps?Object.keys(props):props;const read=isObject(value)?objProps?(prop)=>valueOrDefault(value[prop],value[props[prop]]):(prop)=>value[prop]:()=>value;for(const prop of keys){ret[prop]=numberOrZero(read(prop));}
return ret;}
function toTRBL(value){return _readValueToProps(value,{top:'y',right:'x',bottom:'y',left:'x'});}
function toTRBLCorners(value){return _readValueToProps(value,['topLeft','topRight','bottomLeft','bottomRight']);}
function toPadding(value){const obj=toTRBL(value);obj.width=obj.left+obj.right;obj.height=obj.top+obj.bottom;return obj;}
function toFont(options,fallback){options=options||{};fallback=fallback||defaults.font;let size=valueOrDefault(options.size,fallback.size);if(typeof size==='string'){size=parseInt(size,10);}
let style=valueOrDefault(options.style,fallback.style);if(style&&!(''+style).match(FONT_STYLE)){console.warn('Invalid font style specified: "'+style+'"');style=undefined;}
const font={family:valueOrDefault(options.family,fallback.family),lineHeight:toLineHeight(valueOrDefault(options.lineHeight,fallback.lineHeight),size),size,style,weight:valueOrDefault(options.weight,fallback.weight),string:''};font.string=toFontString(font);return font;}
function resolve(inputs,context,index,info){let cacheable=true;let i,ilen,value;for(i=0,ilen=inputs.length;i<ilen;++i){value=inputs[i];if(value===undefined){continue;}
if(context!==undefined&&typeof value==='function'){value=value(context);cacheable=false;}
if(index!==undefined&&isArray(value)){value=value[index%value.length];cacheable=false;}
if(value!==undefined){if(info&&!cacheable){info.cacheable=false;}
return value;}}}
function _addGrace(minmax,grace,beginAtZero){const{min,max}=minmax;const change=toDimension(grace,(max-min)/2);const keepZero=(value,add)=>beginAtZero&&value===0?0:value+add;return{min:keepZero(min,-Math.abs(change)),max:keepZero(max,change)};}
function createContext(parentContext,context){return Object.assign(Object.create(parentContext),context);}
const getRightToLeftAdapter=function(rectX,width){return{x(x){return rectX+rectX+width-x;},setWidth(w){width=w;},textAlign(align){if(align==='center'){return align;}
return align==='right'?'left':'right';},xPlus(x,value){return x-value;},leftForLtr(x,itemWidth){return x-itemWidth;}};};const getLeftToRightAdapter=function(){return{x(x){return x;},setWidth(w){},textAlign(align){return align;},xPlus(x,value){return x+value;},leftForLtr(x,_itemWidth){return x;}};};function getRtlAdapter(rtl,rectX,width){return rtl?getRightToLeftAdapter(rectX,width):getLeftToRightAdapter();}
function overrideTextDirection(ctx,direction){let style,original;if(direction==='ltr'||direction==='rtl'){style=ctx.canvas.style;original=[style.getPropertyValue('direction'),style.getPropertyPriority('direction')];style.setProperty('direction',direction,'important');ctx.prevTextDirection=original;}}
function restoreTextDirection(ctx,original){if(original!==undefined){delete ctx.prevTextDirection;ctx.canvas.style.setProperty('direction',original[0],original[1]);}}
function propertyFn(property){if(property==='angle'){return{between:_angleBetween,compare:_angleDiff,normalize:_normalizeAngle};}
return{between:_isBetween,compare:(a,b)=>a-b,normalize:(x)=>x};}
function normalizeSegment({start,end,count,loop,style}){return{start:start%count,end:end%count,loop:loop&&(end-start+1)%count===0,style};}
function getSegment(segment,points,bounds){const{property,start:startBound,end:endBound}=bounds;const{between,normalize}=propertyFn(property);const count=points.length;let{start,end,loop}=segment;let i,ilen;if(loop){start+=count;end+=count;for(i=0,ilen=count;i<ilen;++i){if(!between(normalize(points[start%count][property]),startBound,endBound)){break;}
start--;end--;}
start%=count;end%=count;}
if(end<start){end+=count;}
return{start,end,loop,style:segment.style};}
function _boundSegment(segment,points,bounds){if(!bounds){return[segment];}
const{property,start:startBound,end:endBound}=bounds;const count=points.length;const{compare,between,normalize}=propertyFn(property);const{start,end,loop,style}=getSegment(segment,points,bounds);const result=[];let inside=false;let subStart=null;let value,point,prevValue;const startIsBefore=()=>between(startBound,prevValue,value)&&compare(startBound,prevValue)!==0;const endIsBefore=()=>compare(endBound,value)===0||between(endBound,prevValue,value);const shouldStart=()=>inside||startIsBefore();const shouldStop=()=>!inside||endIsBefore();for(let i=start,prev=start;i<=end;++i){point=points[i%count];if(point.skip){continue;}
value=normalize(point[property]);if(value===prevValue){continue;}
inside=between(value,startBound,endBound);if(subStart===null&&shouldStart()){subStart=compare(value,startBound)===0?i:prev;}
if(subStart!==null&&shouldStop()){result.push(normalizeSegment({start:subStart,end:i,loop,count,style}));subStart=null;}
prev=i;prevValue=value;}
if(subStart!==null){result.push(normalizeSegment({start:subStart,end,loop,count,style}));}
return result;}
function _boundSegments(line,bounds){const result=[];const segments=line.segments;for(let i=0;i<segments.length;i++){const sub=_boundSegment(segments[i],line.points,bounds);if(sub.length){result.push(...sub);}}
return result;}
function findStartAndEnd(points,count,loop,spanGaps){let start=0;let end=count-1;if(loop&&!spanGaps){while(start<count&&!points[start].skip){start++;}}
while(start<count&&points[start].skip){start++;}
start%=count;if(loop){end+=start;}
while(end>start&&points[end%count].skip){end--;}
end%=count;return{start,end};}
function solidSegments(points,start,max,loop){const count=points.length;const result=[];let last=start;let prev=points[start];let end;for(end=start+1;end<=max;++end){const cur=points[end%count];if(cur.skip||cur.stop){if(!prev.skip){loop=false;result.push({start:start%count,end:(end-1)%count,loop});start=last=cur.stop?end:null;}}else{last=end;if(prev.skip){start=end;}}
prev=cur;}
if(last!==null){result.push({start:start%count,end:last%count,loop});}
return result;}
function _computeSegments(line,segmentOptions){const points=line.points;const spanGaps=line.options.spanGaps;const count=points.length;if(!count){return[];}
const loop=!!line._loop;const{start,end}=findStartAndEnd(points,count,loop,spanGaps);if(spanGaps===true){return splitByStyles(line,[{start,end,loop}],points,segmentOptions);}
const max=end<start?end+count:end;const completeLoop=!!line._fullLoop&&start===0&&end===count-1;return splitByStyles(line,solidSegments(points,start,max,completeLoop),points,segmentOptions);}
function splitByStyles(line,segments,points,segmentOptions){if(!segmentOptions||!segmentOptions.setContext||!points){return segments;}
return doSplitByStyles(line,segments,points,segmentOptions);}
function doSplitByStyles(line,segments,points,segmentOptions){const chartContext=line._chart.getContext();const baseStyle=readStyle(line.options);const{_datasetIndex:datasetIndex,options:{spanGaps}}=line;const count=points.length;const result=[];let prevStyle=baseStyle;let start=segments[0].start;let i=start;function addStyle(s,e,l,st){const dir=spanGaps?-1:1;if(s===e){return;}
s+=count;while(points[s%count].skip){s-=dir;}
while(points[e%count].skip){e+=dir;}
if(s%count!==e%count){result.push({start:s%count,end:e%count,loop:l,style:st});prevStyle=st;start=e%count;}}
for(const segment of segments){start=spanGaps?start:segment.start;let prev=points[start%count];let style;for(i=start+1;i<=segment.end;i++){const pt=points[i%count];style=readStyle(segmentOptions.setContext(createContext(chartContext,{type:'segment',p0:prev,p1:pt,p0DataIndex:(i-1)%count,p1DataIndex:i%count,datasetIndex})));if(styleChanged(style,prevStyle)){addStyle(start,i-1,segment.loop,prevStyle);}
prev=pt;prevStyle=style;}
if(start<i-1){addStyle(start,i-1,segment.loop,prevStyle);}}
return result;}
function readStyle(options){return{backgroundColor:options.backgroundColor,borderCapStyle:options.borderCapStyle,borderDash:options.borderDash,borderDashOffset:options.borderDashOffset,borderJoinStyle:options.borderJoinStyle,borderWidth:options.borderWidth,borderColor:options.borderColor};}
function styleChanged(style,prevStyle){if(!prevStyle){return false;}
const cache=[];const replacer=function(key,value){if(!isPatternOrGradient(value)){return value;}
if(!cache.includes(value)){cache.push(value);}
return cache.indexOf(value);};return JSON.stringify(style,replacer)!==JSON.stringify(prevStyle,replacer);}
var helpers=Object.freeze({__proto__:null,HALF_PI:HALF_PI,INFINITY:INFINITY,PI:PI,PITAU:PITAU,QUARTER_PI:QUARTER_PI,RAD_PER_DEG:RAD_PER_DEG,TAU:TAU,TWO_THIRDS_PI:TWO_THIRDS_PI,_addGrace:_addGrace,_alignPixel:_alignPixel,_alignStartEnd:_alignStartEnd,_angleBetween:_angleBetween,_angleDiff:_angleDiff,_arrayUnique:_arrayUnique,_attachContext:_attachContext,_bezierCurveTo:_bezierCurveTo,_bezierInterpolation:_bezierInterpolation,_boundSegment:_boundSegment,_boundSegments:_boundSegments,_capitalize:_capitalize,_computeSegments:_computeSegments,_createResolver:_createResolver,_decimalPlaces:_decimalPlaces,_deprecated:_deprecated,_descriptors:_descriptors,_elementsEqual:_elementsEqual,_factorize:_factorize,_filterBetween:_filterBetween,_getParentNode:_getParentNode,_getStartAndCountOfVisiblePoints:_getStartAndCountOfVisiblePoints,_int16Range:_int16Range,_isBetween:_isBetween,_isClickEvent:_isClickEvent,_isDomSupported:_isDomSupported,_isPointInArea:_isPointInArea,_limitValue:_limitValue,_longestText:_longestText,_lookup:_lookup,_lookupByKey:_lookupByKey,_measureText:_measureText,_merger:_merger,_mergerIf:_mergerIf,_normalizeAngle:_normalizeAngle,_parseObjectDataRadialScale:_parseObjectDataRadialScale,_pointInLine:_pointInLine,_readValueToProps:_readValueToProps,_rlookupByKey:_rlookupByKey,_scaleRangesChanged:_scaleRangesChanged,_setMinAndMaxByKey:_setMinAndMaxByKey,_splitKey:_splitKey,_steppedInterpolation:_steppedInterpolation,_steppedLineTo:_steppedLineTo,_textX:_textX,_toLeftRightCenter:_toLeftRightCenter,_updateBezierControlPoints:_updateBezierControlPoints,addRoundedRectPath:addRoundedRectPath,almostEquals:almostEquals,almostWhole:almostWhole,callback:callback,clearCanvas:clearCanvas,clipArea:clipArea,clone:clone$1,color:color,createContext:createContext,debounce:debounce,defined:defined,distanceBetweenPoints:distanceBetweenPoints,drawPoint:drawPoint,drawPointLegend:drawPointLegend,each:each,easingEffects:effects,finiteOrDefault:finiteOrDefault,fontString:fontString,formatNumber:formatNumber,getAngleFromPoint:getAngleFromPoint,getHoverColor:getHoverColor,getMaximumSize:getMaximumSize,getRelativePosition:getRelativePosition,getRtlAdapter:getRtlAdapter,getStyle:getStyle,isArray:isArray,isFinite:isNumberFinite,isFunction:isFunction,isNullOrUndef:isNullOrUndef,isNumber:isNumber,isObject:isObject,isPatternOrGradient:isPatternOrGradient,listenArrayEvents:listenArrayEvents,log10:log10,merge:merge,mergeIf:mergeIf,niceNum:niceNum,noop:noop,overrideTextDirection:overrideTextDirection,readUsedSize:readUsedSize,renderText:renderText,requestAnimFrame:requestAnimFrame,resolve:resolve,resolveObjectKey:resolveObjectKey,restoreTextDirection:restoreTextDirection,retinaScale:retinaScale,setsEqual:setsEqual,sign:sign,splineCurve:splineCurve,splineCurveMonotone:splineCurveMonotone,supportsEventListenerOptions:supportsEventListenerOptions,throttled:throttled,toDegrees:toDegrees,toDimension:toDimension,toFont:toFont,toFontString:toFontString,toLineHeight:toLineHeight,toPadding:toPadding,toPercentage:toPercentage,toRadians:toRadians,toTRBL:toTRBL,toTRBLCorners:toTRBLCorners,uid:uid,unclipArea:unclipArea,unlistenArrayEvents:unlistenArrayEvents,valueOrDefault:valueOrDefault});function binarySearch(metaset,axis,value,intersect){const{controller,data,_sorted}=metaset;const iScale=controller._cachedMeta.iScale;if(iScale&&axis===iScale.axis&&axis!=='r'&&_sorted&&data.length){const lookupMethod=iScale._reversePixels?_rlookupByKey:_lookupByKey;if(!intersect){return lookupMethod(data,axis,value);}else if(controller._sharedOptions){const el=data[0];const range=typeof el.getRange==='function'&&el.getRange(axis);if(range){const start=lookupMethod(data,axis,value-range);const end=lookupMethod(data,axis,value+range);return{lo:start.lo,hi:end.hi};}}}
return{lo:0,hi:data.length-1};}
function evaluateInteractionItems(chart,axis,position,handler,intersect){const metasets=chart.getSortedVisibleDatasetMetas();const value=position[axis];for(let i=0,ilen=metasets.length;i<ilen;++i){const{index,data}=metasets[i];const{lo,hi}=binarySearch(metasets[i],axis,value,intersect);for(let j=lo;j<=hi;++j){const element=data[j];if(!element.skip){handler(element,index,j);}}}}
function getDistanceMetricForAxis(axis){const useX=axis.indexOf('x')!==-1;const useY=axis.indexOf('y')!==-1;return function(pt1,pt2){const deltaX=useX?Math.abs(pt1.x-pt2.x):0;const deltaY=useY?Math.abs(pt1.y-pt2.y):0;return Math.sqrt(Math.pow(deltaX,2)+Math.pow(deltaY,2));};}
function getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible){const items=[];if(!includeInvisible&&!chart.isPointInArea(position)){return items;}
const evaluationFunc=function(element,datasetIndex,index){if(!includeInvisible&&!_isPointInArea(element,chart.chartArea,0)){return;}
if(element.inRange(position.x,position.y,useFinalPosition)){items.push({element,datasetIndex,index});}};evaluateInteractionItems(chart,axis,position,evaluationFunc,true);return items;}
function getNearestRadialItems(chart,position,axis,useFinalPosition){let items=[];function evaluationFunc(element,datasetIndex,index){const{startAngle,endAngle}=element.getProps(['startAngle','endAngle'],useFinalPosition);const{angle}=getAngleFromPoint(element,{x:position.x,y:position.y});if(_angleBetween(angle,startAngle,endAngle)){items.push({element,datasetIndex,index});}}
evaluateInteractionItems(chart,axis,position,evaluationFunc);return items;}
function getNearestCartesianItems(chart,position,axis,intersect,useFinalPosition,includeInvisible){let items=[];const distanceMetric=getDistanceMetricForAxis(axis);let minDistance=Number.POSITIVE_INFINITY;function evaluationFunc(element,datasetIndex,index){const inRange=element.inRange(position.x,position.y,useFinalPosition);if(intersect&&!inRange){return;}
const center=element.getCenterPoint(useFinalPosition);const pointInArea=!!includeInvisible||chart.isPointInArea(center);if(!pointInArea&&!inRange){return;}
const distance=distanceMetric(position,center);if(distance<minDistance){items=[{element,datasetIndex,index}];minDistance=distance;}else if(distance===minDistance){items.push({element,datasetIndex,index});}}
evaluateInteractionItems(chart,axis,position,evaluationFunc);return items;}
function getNearestItems(chart,position,axis,intersect,useFinalPosition,includeInvisible){if(!includeInvisible&&!chart.isPointInArea(position)){return[];}
return axis==='r'&&!intersect?getNearestRadialItems(chart,position,axis,useFinalPosition):getNearestCartesianItems(chart,position,axis,intersect,useFinalPosition,includeInvisible);}
function getAxisItems(chart,position,axis,intersect,useFinalPosition){const items=[];const rangeMethod=axis==='x'?'inXRange':'inYRange';let intersectsItem=false;evaluateInteractionItems(chart,axis,position,(element,datasetIndex,index)=>{if(element[rangeMethod]&&element[rangeMethod](position[axis],useFinalPosition)){items.push({element,datasetIndex,index});intersectsItem=intersectsItem||element.inRange(position.x,position.y,useFinalPosition);}});if(intersect&&!intersectsItem){return[];}
return items;}
var Interaction={evaluateInteractionItems,modes:{index(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'x';const includeInvisible=options.includeInvisible||false;const items=options.intersect?getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible):getNearestItems(chart,position,axis,false,useFinalPosition,includeInvisible);const elements=[];if(!items.length){return[];}
chart.getSortedVisibleDatasetMetas().forEach((meta)=>{const index=items[0].index;const element=meta.data[index];if(element&&!element.skip){elements.push({element,datasetIndex:meta.index,index});}});return elements;},dataset(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'xy';const includeInvisible=options.includeInvisible||false;let items=options.intersect?getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible):getNearestItems(chart,position,axis,false,useFinalPosition,includeInvisible);if(items.length>0){const datasetIndex=items[0].datasetIndex;const data=chart.getDatasetMeta(datasetIndex).data;items=[];for(let i=0;i<data.length;++i){items.push({element:data[i],datasetIndex,index:i});}}
return items;},point(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'xy';const includeInvisible=options.includeInvisible||false;return getIntersectItems(chart,position,axis,useFinalPosition,includeInvisible);},nearest(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);const axis=options.axis||'xy';const includeInvisible=options.includeInvisible||false;return getNearestItems(chart,position,axis,options.intersect,useFinalPosition,includeInvisible);},x(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);return getAxisItems(chart,position,'x',options.intersect,useFinalPosition);},y(chart,e,options,useFinalPosition){const position=getRelativePosition(e,chart);return getAxisItems(chart,position,'y',options.intersect,useFinalPosition);}}};const STATIC_POSITIONS=['left','top','right','bottom'];function filterByPosition(array,position){return array.filter((v)=>v.pos===position);}
function filterDynamicPositionByAxis(array,axis){return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos)===-1&&v.box.axis===axis);}
function sortByWeight(array,reverse){return array.sort((a,b)=>{const v0=reverse?b:a;const v1=reverse?a:b;return v0.weight===v1.weight?v0.index-v1.index:v0.weight-v1.weight;});}
function wrapBoxes(boxes){const layoutBoxes=[];let i,ilen,box,pos,stack,stackWeight;for(i=0,ilen=(boxes||[]).length;i<ilen;++i){box=boxes[i];({position:pos,options:{stack,stackWeight=1}}=box);layoutBoxes.push({index:i,box,pos,horizontal:box.isHorizontal(),weight:box.weight,stack:stack&&pos+stack,stackWeight});}
return layoutBoxes;}
function buildStacks(layouts){const stacks={};for(const wrap of layouts){const{stack,pos,stackWeight}=wrap;if(!stack||!STATIC_POSITIONS.includes(pos)){continue;}
const _stack=stacks[stack]||(stacks[stack]={count:0,placed:0,weight:0,size:0});_stack.count++;_stack.weight+=stackWeight;}
return stacks;}
function setLayoutDims(layouts,params){const stacks=buildStacks(layouts);const{vBoxMaxWidth,hBoxMaxHeight}=params;let i,ilen,layout;for(i=0,ilen=layouts.length;i<ilen;++i){layout=layouts[i];const{fullSize}=layout.box;const stack=stacks[layout.stack];const factor=stack&&layout.stackWeight/stack.weight;if(layout.horizontal){layout.width=factor?factor*vBoxMaxWidth:fullSize&&params.availableWidth;layout.height=hBoxMaxHeight;}else{layout.width=vBoxMaxWidth;layout.height=factor?factor*hBoxMaxHeight:fullSize&&params.availableHeight;}}
return stacks;}
function buildLayoutBoxes(boxes){const layoutBoxes=wrapBoxes(boxes);const fullSize=sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize),true);const left=sortByWeight(filterByPosition(layoutBoxes,'left'),true);const right=sortByWeight(filterByPosition(layoutBoxes,'right'));const top=sortByWeight(filterByPosition(layoutBoxes,'top'),true);const bottom=sortByWeight(filterByPosition(layoutBoxes,'bottom'));const centerHorizontal=filterDynamicPositionByAxis(layoutBoxes,'x');const centerVertical=filterDynamicPositionByAxis(layoutBoxes,'y');return{fullSize,leftAndTop:left.concat(top),rightAndBottom:right.concat(centerVertical).concat(bottom).concat(centerHorizontal),chartArea:filterByPosition(layoutBoxes,'chartArea'),vertical:left.concat(right).concat(centerVertical),horizontal:top.concat(bottom).concat(centerHorizontal)};}
function getCombinedMax(maxPadding,chartArea,a,b){return Math.max(maxPadding[a],chartArea[a])+Math.max(maxPadding[b],chartArea[b]);}
function updateMaxPadding(maxPadding,boxPadding){maxPadding.top=Math.max(maxPadding.top,boxPadding.top);maxPadding.left=Math.max(maxPadding.left,boxPadding.left);maxPadding.bottom=Math.max(maxPadding.bottom,boxPadding.bottom);maxPadding.right=Math.max(maxPadding.right,boxPadding.right);}
function updateDims(chartArea,params,layout,stacks){const{pos,box}=layout;const maxPadding=chartArea.maxPadding;if(!isObject(pos)){if(layout.size){chartArea[pos]-=layout.size;}
const stack=stacks[layout.stack]||{size:0,count:1};stack.size=Math.max(stack.size,layout.horizontal?box.height:box.width);layout.size=stack.size/stack.count;chartArea[pos]+=layout.size;}
if(box.getPadding){updateMaxPadding(maxPadding,box.getPadding());}
const newWidth=Math.max(0,params.outerWidth-getCombinedMax(maxPadding,chartArea,'left','right'));const newHeight=Math.max(0,params.outerHeight-getCombinedMax(maxPadding,chartArea,'top','bottom'));const widthChanged=newWidth!==chartArea.w;const heightChanged=newHeight!==chartArea.h;chartArea.w=newWidth;chartArea.h=newHeight;return layout.horizontal?{same:widthChanged,other:heightChanged}:{same:heightChanged,other:widthChanged};}
function handleMaxPadding(chartArea){const maxPadding=chartArea.maxPadding;function updatePos(pos){const change=Math.max(maxPadding[pos]-chartArea[pos],0);chartArea[pos]+=change;return change;}
chartArea.y+=updatePos('top');chartArea.x+=updatePos('left');updatePos('right');updatePos('bottom');}
function getMargins(horizontal,chartArea){const maxPadding=chartArea.maxPadding;function marginForPositions(positions){const margin={left:0,top:0,right:0,bottom:0};positions.forEach((pos)=>{margin[pos]=Math.max(chartArea[pos],maxPadding[pos]);});return margin;}
return horizontal?marginForPositions(['left','right']):marginForPositions(['top','bottom']);}
function fitBoxes(boxes,chartArea,params,stacks){const refitBoxes=[];let i,ilen,layout,box,refit,changed;for(i=0,ilen=boxes.length,refit=0;i<ilen;++i){layout=boxes[i];box=layout.box;box.update(layout.width||chartArea.w,layout.height||chartArea.h,getMargins(layout.horizontal,chartArea));const{same,other}=updateDims(chartArea,params,layout,stacks);refit|=same&&refitBoxes.length;changed=changed||other;if(!box.fullSize){refitBoxes.push(layout);}}
return refit&&fitBoxes(refitBoxes,chartArea,params,stacks)||changed;}
function setBoxDims(box,left,top,width,height){box.top=top;box.left=left;box.right=left+width;box.bottom=top+height;box.width=width;box.height=height;}
function placeBoxes(boxes,chartArea,params,stacks){const userPadding=params.padding;let{x,y}=chartArea;for(const layout of boxes){const box=layout.box;const stack=stacks[layout.stack]||{count:1,placed:0,weight:1};const weight=layout.stackWeight/stack.weight||1;if(layout.horizontal){const width=chartArea.w*weight;const height=stack.size||box.height;if(defined(stack.start)){y=stack.start;}
if(box.fullSize){setBoxDims(box,userPadding.left,y,params.outerWidth-userPadding.right-userPadding.left,height);}else{setBoxDims(box,chartArea.left+stack.placed,y,width,height);}
stack.start=y;stack.placed+=width;y=box.bottom;}else{const height=chartArea.h*weight;const width=stack.size||box.width;if(defined(stack.start)){x=stack.start;}
if(box.fullSize){setBoxDims(box,x,userPadding.top,width,params.outerHeight-userPadding.bottom-userPadding.top);}else{setBoxDims(box,x,chartArea.top+stack.placed,width,height);}
stack.start=x;stack.placed+=height;x=box.right;}}
chartArea.x=x;chartArea.y=y;}
var layouts={addBox(chart,item){if(!chart.boxes){chart.boxes=[];}
item.fullSize=item.fullSize||false;item.position=item.position||'top';item.weight=item.weight||0;item._layers=item._layers||function(){return[{z:0,draw(chartArea){item.draw(chartArea);}}];};chart.boxes.push(item);},removeBox(chart,layoutItem){const index=chart.boxes?chart.boxes.indexOf(layoutItem):-1;if(index!==-1){chart.boxes.splice(index,1);}},configure(chart,item,options){item.fullSize=options.fullSize;item.position=options.position;item.weight=options.weight;},update(chart,width,height,minPadding){if(!chart){return;}
const padding=toPadding(chart.options.layout.padding);const availableWidth=Math.max(width-padding.width,0);const availableHeight=Math.max(height-padding.height,0);const boxes=buildLayoutBoxes(chart.boxes);const verticalBoxes=boxes.vertical;const horizontalBoxes=boxes.horizontal;each(chart.boxes,(box)=>{if(typeof box.beforeLayout==='function'){box.beforeLayout();}});const visibleVerticalBoxCount=verticalBoxes.reduce((total,wrap)=>wrap.box.options&&wrap.box.options.display===false?total:total+1,0)||1;const params=Object.freeze({outerWidth:width,outerHeight:height,padding,availableWidth,availableHeight,vBoxMaxWidth:availableWidth/2/visibleVerticalBoxCount,hBoxMaxHeight:availableHeight/2});const maxPadding=Object.assign({},padding);updateMaxPadding(maxPadding,toPadding(minPadding));const chartArea=Object.assign({maxPadding,w:availableWidth,h:availableHeight,x:padding.left,y:padding.top},padding);const stacks=setLayoutDims(verticalBoxes.concat(horizontalBoxes),params);fitBoxes(boxes.fullSize,chartArea,params,stacks);fitBoxes(verticalBoxes,chartArea,params,stacks);if(fitBoxes(horizontalBoxes,chartArea,params,stacks)){fitBoxes(verticalBoxes,chartArea,params,stacks);}
handleMaxPadding(chartArea);placeBoxes(boxes.leftAndTop,chartArea,params,stacks);chartArea.x+=chartArea.w;chartArea.y+=chartArea.h;placeBoxes(boxes.rightAndBottom,chartArea,params,stacks);chart.chartArea={left:chartArea.left,top:chartArea.top,right:chartArea.left+chartArea.w,bottom:chartArea.top+chartArea.h,height:chartArea.h,width:chartArea.w};each(boxes.chartArea,(layout)=>{const box=layout.box;Object.assign(box,chart.chartArea);box.update(chartArea.w,chartArea.h,{left:0,top:0,right:0,bottom:0});});}};class BasePlatform{acquireContext(canvas,aspectRatio){}
releaseContext(context){return false;}
addEventListener(chart,type,listener){}
removeEventListener(chart,type,listener){}
getDevicePixelRatio(){return 1;}
getMaximumSize(element,width,height,aspectRatio){width=Math.max(0,width||element.width);height=height||element.height;return{width,height:Math.max(0,aspectRatio?Math.floor(width/aspectRatio):height)};}
isAttached(canvas){return true;}
updateConfig(config){}}
class BasicPlatform extends BasePlatform{acquireContext(item){return item&&item.getContext&&item.getContext('2d')||null;}
updateConfig(config){config.options.animation=false;}}
const EXPANDO_KEY='$chartjs';const EVENT_TYPES={touchstart:'mousedown',touchmove:'mousemove',touchend:'mouseup',pointerenter:'mouseenter',pointerdown:'mousedown',pointermove:'mousemove',pointerup:'mouseup',pointerleave:'mouseout',pointerout:'mouseout'};const isNullOrEmpty=(value)=>value===null||value==='';function initCanvas(canvas,aspectRatio){const style=canvas.style;const renderHeight=canvas.getAttribute('height');const renderWidth=canvas.getAttribute('width');canvas[EXPANDO_KEY]={initial:{height:renderHeight,width:renderWidth,style:{display:style.display,height:style.height,width:style.width}}};style.display=style.display||'block';style.boxSizing=style.boxSizing||'border-box';if(isNullOrEmpty(renderWidth)){const displayWidth=readUsedSize(canvas,'width');if(displayWidth!==undefined){canvas.width=displayWidth;}}
if(isNullOrEmpty(renderHeight)){if(canvas.style.height===''){canvas.height=canvas.width/(aspectRatio||2);}else{const displayHeight=readUsedSize(canvas,'height');if(displayHeight!==undefined){canvas.height=displayHeight;}}}
return canvas;}
const eventListenerOptions=supportsEventListenerOptions?{passive:true}:false;function addListener(node,type,listener){if(node){node.addEventListener(type,listener,eventListenerOptions);}}
function removeListener(chart,type,listener){if(chart&&chart.canvas){chart.canvas.removeEventListener(type,listener,eventListenerOptions);}}
function fromNativeEvent(event,chart){const type=EVENT_TYPES[event.type]||event.type;const{x,y}=getRelativePosition(event,chart);return{type,chart,native:event,x:x!==undefined?x:null,y:y!==undefined?y:null};}
function nodeListContains(nodeList,canvas){for(const node of nodeList){if(node===canvas||node.contains(canvas)){return true;}}}
function createAttachObserver(chart,type,listener){const canvas=chart.canvas;const observer=new MutationObserver((entries)=>{let trigger=false;for(const entry of entries){trigger=trigger||nodeListContains(entry.addedNodes,canvas);trigger=trigger&&!nodeListContains(entry.removedNodes,canvas);}
if(trigger){listener();}});observer.observe(document,{childList:true,subtree:true});return observer;}
function createDetachObserver(chart,type,listener){const canvas=chart.canvas;const observer=new MutationObserver((entries)=>{let trigger=false;for(const entry of entries){trigger=trigger||nodeListContains(entry.removedNodes,canvas);trigger=trigger&&!nodeListContains(entry.addedNodes,canvas);}
if(trigger){listener();}});observer.observe(document,{childList:true,subtree:true});return observer;}
const drpListeningCharts=new Map();let oldDevicePixelRatio=0;function onWindowResize(){const dpr=window.devicePixelRatio;if(dpr===oldDevicePixelRatio){return;}
oldDevicePixelRatio=dpr;drpListeningCharts.forEach((resize,chart)=>{if(chart.currentDevicePixelRatio!==dpr){resize();}});}
function listenDevicePixelRatioChanges(chart,resize){if(!drpListeningCharts.size){window.addEventListener('resize',onWindowResize);}
drpListeningCharts.set(chart,resize);}
function unlistenDevicePixelRatioChanges(chart){drpListeningCharts.delete(chart);if(!drpListeningCharts.size){window.removeEventListener('resize',onWindowResize);}}
function createResizeObserver(chart,type,listener){const canvas=chart.canvas;const container=canvas&&_getParentNode(canvas);if(!container){return;}
const resize=throttled((width,height)=>{const w=container.clientWidth;listener(width,height);if(w<container.clientWidth){listener();}},window);const observer=new ResizeObserver((entries)=>{const entry=entries[0];const width=entry.contentRect.width;const height=entry.contentRect.height;if(width===0&&height===0){return;}
resize(width,height);});observer.observe(container);listenDevicePixelRatioChanges(chart,resize);return observer;}
function releaseObserver(chart,type,observer){if(observer){observer.disconnect();}
if(type==='resize'){unlistenDevicePixelRatioChanges(chart);}}
function createProxyAndListen(chart,type,listener){const canvas=chart.canvas;const proxy=throttled((event)=>{if(chart.ctx!==null){listener(fromNativeEvent(event,chart));}},chart);addListener(canvas,type,proxy);return proxy;}
class DomPlatform extends BasePlatform{acquireContext(canvas,aspectRatio){const context=canvas&&canvas.getContext&&canvas.getContext('2d');if(context&&context.canvas===canvas){initCanvas(canvas,aspectRatio);return context;}
return null;}
releaseContext(context){const canvas=context.canvas;if(!canvas[EXPANDO_KEY]){return false;}
const initial=canvas[EXPANDO_KEY].initial;['height','width'].forEach((prop)=>{const value=initial[prop];if(isNullOrUndef(value)){canvas.removeAttribute(prop);}else{canvas.setAttribute(prop,value);}});const style=initial.style||{};Object.keys(style).forEach((key)=>{canvas.style[key]=style[key];});canvas.width=canvas.width;delete canvas[EXPANDO_KEY];return true;}
addEventListener(chart,type,listener){this.removeEventListener(chart,type);const proxies=chart.$proxies||(chart.$proxies={});const handlers={attach:createAttachObserver,detach:createDetachObserver,resize:createResizeObserver};const handler=handlers[type]||createProxyAndListen;proxies[type]=handler(chart,type,listener);}
removeEventListener(chart,type){const proxies=chart.$proxies||(chart.$proxies={});const proxy=proxies[type];if(!proxy){return;}
const handlers={attach:releaseObserver,detach:releaseObserver,resize:releaseObserver};const handler=handlers[type]||removeListener;handler(chart,type,proxy);proxies[type]=undefined;}
getDevicePixelRatio(){return window.devicePixelRatio;}
getMaximumSize(canvas,width,height,aspectRatio){return getMaximumSize(canvas,width,height,aspectRatio);}
isAttached(canvas){const container=canvas&&_getParentNode(canvas);return!!(container&&container.isConnected);}}
function _detectPlatform(canvas){if(!_isDomSupported()||typeof OffscreenCanvas!=='undefined'&&canvas instanceof OffscreenCanvas){return BasicPlatform;}
return DomPlatform;}
var platforms=Object.freeze({__proto__:null,BasePlatform:BasePlatform,BasicPlatform:BasicPlatform,DomPlatform:DomPlatform,_detectPlatform:_detectPlatform});const transparent='transparent';const interpolators={boolean(from,to,factor){return factor>0.5?to:from;},color(from,to,factor){const c0=color(from||transparent);const c1=c0.valid&&color(to||transparent);return c1&&c1.valid?c1.mix(c0,factor).hexString():to;},number(from,to,factor){return from+(to-from)*factor;}};class Animation{constructor(cfg,target,prop,to){const currentValue=target[prop];to=resolve([cfg.to,to,currentValue,cfg.from]);const from=resolve([cfg.from,currentValue,to]);this._active=true;this._fn=cfg.fn||interpolators[cfg.type||typeof from];this._easing=effects[cfg.easing]||effects.linear;this._start=Math.floor(Date.now()+(cfg.delay||0));this._duration=this._total=Math.floor(cfg.duration);this._loop=!!cfg.loop;this._target=target;this._prop=prop;this._from=from;this._to=to;this._promises=undefined;}
active(){return this._active;}
update(cfg,to,date){if(this._active){this._notify(false);const currentValue=this._target[this._prop];const elapsed=date-this._start;const remain=this._duration-elapsed;this._start=date;this._duration=Math.floor(Math.max(remain,cfg.duration));this._total+=elapsed;this._loop=!!cfg.loop;this._to=resolve([cfg.to,to,currentValue,cfg.from]);this._from=resolve([cfg.from,currentValue,to]);}}
cancel(){if(this._active){this.tick(Date.now());this._active=false;this._notify(false);}}
tick(date){const elapsed=date-this._start;const duration=this._duration;const prop=this._prop;const from=this._from;const loop=this._loop;const to=this._to;let factor;this._active=from!==to&&(loop||elapsed<duration);if(!this._active){this._target[prop]=to;this._notify(true);return;}
if(elapsed<0){this._target[prop]=from;return;}
factor=elapsed/duration%2;factor=loop&&factor>1?2-factor:factor;factor=this._easing(Math.min(1,Math.max(0,factor)));this._target[prop]=this._fn(from,to,factor);}
wait(){const promises=this._promises||(this._promises=[]);return new Promise((res,rej)=>{promises.push({res,rej});});}
_notify(resolved){const method=resolved?'res':'rej';const promises=this._promises||[];for(let i=0;i<promises.length;i++){promises[i][method]();}}}
class Animations{constructor(chart,config){this._chart=chart;this._properties=new Map();this.configure(config);}
configure(config){if(!isObject(config)){return;}
const animationOptions=Object.keys(defaults.animation);const animatedProps=this._properties;Object.getOwnPropertyNames(config).forEach((key)=>{const cfg=config[key];if(!isObject(cfg)){return;}
const resolved={};for(const option of animationOptions){resolved[option]=cfg[option];}
(isArray(cfg.properties)&&cfg.properties||[key]).forEach((prop)=>{if(prop===key||!animatedProps.has(prop)){animatedProps.set(prop,resolved);}});});}
_animateOptions(target,values){const newOptions=values.options;const options=resolveTargetOptions(target,newOptions);if(!options){return[];}
const animations=this._createAnimations(options,newOptions);if(newOptions.$shared){awaitAll(target.options.$animations,newOptions).then(()=>{target.options=newOptions;},()=>{});}
return animations;}
_createAnimations(target,values){const animatedProps=this._properties;const animations=[];const running=target.$animations||(target.$animations={});const props=Object.keys(values);const date=Date.now();let i;for(i=props.length-1;i>=0;--i){const prop=props[i];if(prop.charAt(0)==='$'){continue;}
if(prop==='options'){animations.push(...this._animateOptions(target,values));continue;}
const value=values[prop];let animation=running[prop];const cfg=animatedProps.get(prop);if(animation){if(cfg&&animation.active()){animation.update(cfg,value,date);continue;}else{animation.cancel();}}
if(!cfg||!cfg.duration){target[prop]=value;continue;}
running[prop]=animation=new Animation(cfg,target,prop,value);animations.push(animation);}
return animations;}
update(target,values){if(this._properties.size===0){Object.assign(target,values);return;}
const animations=this._createAnimations(target,values);if(animations.length){animator.add(this._chart,animations);return true;}}}
function awaitAll(animations,properties){const running=[];const keys=Object.keys(properties);for(let i=0;i<keys.length;i++){const anim=animations[keys[i]];if(anim&&anim.active()){running.push(anim.wait());}}
return Promise.all(running);}
function resolveTargetOptions(target,newOptions){if(!newOptions){return;}
let options=target.options;if(!options){target.options=newOptions;return;}
if(options.$shared){target.options=options=Object.assign({},options,{$shared:false,$animations:{}});}
return options;}
function scaleClip(scale,allowedOverflow){const opts=scale&&scale.options||{};const reverse=opts.reverse;const min=opts.min===undefined?allowedOverflow:0;const max=opts.max===undefined?allowedOverflow:0;return{start:reverse?max:min,end:reverse?min:max};}
function defaultClip(xScale,yScale,allowedOverflow){if(allowedOverflow===false){return false;}
const x=scaleClip(xScale,allowedOverflow);const y=scaleClip(yScale,allowedOverflow);return{top:y.end,right:x.end,bottom:y.start,left:x.start};}
function toClip(value){let t,r,b,l;if(isObject(value)){t=value.top;r=value.right;b=value.bottom;l=value.left;}else{t=r=b=l=value;}
return{top:t,right:r,bottom:b,left:l,disabled:value===false};}
function getSortedDatasetIndices(chart,filterVisible){const keys=[];const metasets=chart._getSortedDatasetMetas(filterVisible);let i,ilen;for(i=0,ilen=metasets.length;i<ilen;++i){keys.push(metasets[i].index);}
return keys;}
function applyStack(stack,value,dsIndex,options={}){const keys=stack.keys;const singleMode=options.mode==='single';let i,ilen,datasetIndex,otherValue;if(value===null){return;}
for(i=0,ilen=keys.length;i<ilen;++i){datasetIndex=+keys[i];if(datasetIndex===dsIndex){if(options.all){continue;}
break;}
otherValue=stack.values[datasetIndex];if(isNumberFinite(otherValue)&&(singleMode||value===0||sign(value)===sign(otherValue))){value+=otherValue;}}
return value;}
function convertObjectDataToArray(data,meta){const{iScale,vScale}=meta;const iAxisKey=iScale.axis==='x'?'x':'y';const vAxisKey=vScale.axis==='x'?'x':'y';const keys=Object.keys(data);const adata=new Array(keys.length);let i,ilen,key;for(i=0,ilen=keys.length;i<ilen;++i){key=keys[i];adata[i]={[iAxisKey]:key,[vAxisKey]:data[key]};}
return adata;}
function isStacked(scale,meta){const stacked=scale&&scale.options.stacked;return stacked||stacked===undefined&&meta.stack!==undefined;}
function getStackKey(indexScale,valueScale,meta){return`${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;}
function getUserBounds(scale){const{min,max,minDefined,maxDefined}=scale.getUserBounds();return{min:minDefined?min:Number.NEGATIVE_INFINITY,max:maxDefined?max:Number.POSITIVE_INFINITY};}
function getOrCreateStack(stacks,stackKey,indexValue){const subStack=stacks[stackKey]||(stacks[stackKey]={});return subStack[indexValue]||(subStack[indexValue]={});}
function getLastIndexInStack(stack,vScale,positive,type){for(const meta of vScale.getMatchingVisibleMetas(type).reverse()){const value=stack[meta.index];if(positive&&value>0||!positive&&value<0){return meta.index;}}
return null;}
function updateStacks(controller,parsed){const{chart,_cachedMeta:meta}=controller;const stacks=chart._stacks||(chart._stacks={});const{iScale,vScale,index:datasetIndex}=meta;const iAxis=iScale.axis;const vAxis=vScale.axis;const key=getStackKey(iScale,vScale,meta);const ilen=parsed.length;let stack;for(let i=0;i<ilen;++i){const item=parsed[i];const{[iAxis]:index,[vAxis]:value}=item;const itemStacks=item._stacks||(item._stacks={});stack=itemStacks[vAxis]=getOrCreateStack(stacks,key,index);stack[datasetIndex]=value;stack._top=getLastIndexInStack(stack,vScale,true,meta.type);stack._bottom=getLastIndexInStack(stack,vScale,false,meta.type);const visualValues=stack._visualValues||(stack._visualValues={});visualValues[datasetIndex]=value;}}
function getFirstScaleId(chart,axis){const scales=chart.scales;return Object.keys(scales).filter((key)=>scales[key].axis===axis).shift();}
function createDatasetContext(parent,index){return createContext(parent,{active:false,dataset:undefined,datasetIndex:index,index,mode:'default',type:'dataset'});}
function createDataContext(parent,index,element){return createContext(parent,{active:false,dataIndex:index,parsed:undefined,raw:undefined,element,index,mode:'default',type:'data'});}
function clearStacks(meta,items){const datasetIndex=meta.controller.index;const axis=meta.vScale&&meta.vScale.axis;if(!axis){return;}
items=items||meta._parsed;for(const parsed of items){const stacks=parsed._stacks;if(!stacks||stacks[axis]===undefined||stacks[axis][datasetIndex]===undefined){return;}
delete stacks[axis][datasetIndex];if(stacks[axis]._visualValues!==undefined&&stacks[axis]._visualValues[datasetIndex]!==undefined){delete stacks[axis]._visualValues[datasetIndex];}}}
const isDirectUpdateMode=(mode)=>mode==='reset'||mode==='none';const cloneIfNotShared=(cached,shared)=>shared?cached:Object.assign({},cached);const createStack=(canStack,meta,chart)=>canStack&&!meta.hidden&&meta._stacked&&{keys:getSortedDatasetIndices(chart,true),values:null};class DatasetController{static defaults={};static datasetElementType=null;static dataElementType=null;constructor(chart,datasetIndex){this.chart=chart;this._ctx=chart.ctx;this.index=datasetIndex;this._cachedDataOpts={};this._cachedMeta=this.getMeta();this._type=this._cachedMeta.type;this.options=undefined;this._parsing=false;this._data=undefined;this._objectData=undefined;this._sharedOptions=undefined;this._drawStart=undefined;this._drawCount=undefined;this.enableOptionSharing=false;this.supportsDecimation=false;this.$context=undefined;this._syncList=[];this.datasetElementType=new.target.datasetElementType;this.dataElementType=new.target.dataElementType;this.initialize();}
initialize(){const meta=this._cachedMeta;this.configure();this.linkScales();meta._stacked=isStacked(meta.vScale,meta);this.addElements();if(this.options.fill&&!this.chart.isPluginEnabled('filler')){console.warn("Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options");}}
updateIndex(datasetIndex){if(this.index!==datasetIndex){clearStacks(this._cachedMeta);}
this.index=datasetIndex;}
linkScales(){const chart=this.chart;const meta=this._cachedMeta;const dataset=this.getDataset();const chooseId=(axis,x,y,r)=>axis==='x'?x:axis==='r'?r:y;const xid=meta.xAxisID=valueOrDefault(dataset.xAxisID,getFirstScaleId(chart,'x'));const yid=meta.yAxisID=valueOrDefault(dataset.yAxisID,getFirstScaleId(chart,'y'));const rid=meta.rAxisID=valueOrDefault(dataset.rAxisID,getFirstScaleId(chart,'r'));const indexAxis=meta.indexAxis;const iid=meta.iAxisID=chooseId(indexAxis,xid,yid,rid);const vid=meta.vAxisID=chooseId(indexAxis,yid,xid,rid);meta.xScale=this.getScaleForId(xid);meta.yScale=this.getScaleForId(yid);meta.rScale=this.getScaleForId(rid);meta.iScale=this.getScaleForId(iid);meta.vScale=this.getScaleForId(vid);}
getDataset(){return this.chart.data.datasets[this.index];}
getMeta(){return this.chart.getDatasetMeta(this.index);}
getScaleForId(scaleID){return this.chart.scales[scaleID];}
_getOtherScale(scale){const meta=this._cachedMeta;return scale===meta.iScale?meta.vScale:meta.iScale;}
reset(){this._update('reset');}
_destroy(){const meta=this._cachedMeta;if(this._data){unlistenArrayEvents(this._data,this);}
if(meta._stacked){clearStacks(meta);}}
_dataCheck(){const dataset=this.getDataset();const data=dataset.data||(dataset.data=[]);const _data=this._data;if(isObject(data)){const meta=this._cachedMeta;this._data=convertObjectDataToArray(data,meta);}else if(_data!==data){if(_data){unlistenArrayEvents(_data,this);const meta=this._cachedMeta;clearStacks(meta);meta._parsed=[];}
if(data&&Object.isExtensible(data)){listenArrayEvents(data,this);}
this._syncList=[];this._data=data;}}
addElements(){const meta=this._cachedMeta;this._dataCheck();if(this.datasetElementType){meta.dataset=new this.datasetElementType();}}
buildOrUpdateElements(resetNewElements){const meta=this._cachedMeta;const dataset=this.getDataset();let stackChanged=false;this._dataCheck();const oldStacked=meta._stacked;meta._stacked=isStacked(meta.vScale,meta);if(meta.stack!==dataset.stack){stackChanged=true;clearStacks(meta);meta.stack=dataset.stack;}
this._resyncElements(resetNewElements);if(stackChanged||oldStacked!==meta._stacked){updateStacks(this,meta._parsed);meta._stacked=isStacked(meta.vScale,meta);}}
configure(){const config=this.chart.config;const scopeKeys=config.datasetScopeKeys(this._type);const scopes=config.getOptionScopes(this.getDataset(),scopeKeys,true);this.options=config.createResolver(scopes,this.getContext());this._parsing=this.options.parsing;this._cachedDataOpts={};}
parse(start,count){const{_cachedMeta:meta,_data:data}=this;const{iScale,_stacked}=meta;const iAxis=iScale.axis;let sorted=start===0&&count===data.length?true:meta._sorted;let prev=start>0&&meta._parsed[start-1];let i,cur,parsed;if(this._parsing===false){meta._parsed=data;meta._sorted=true;parsed=data;}else{if(isArray(data[start])){parsed=this.parseArrayData(meta,data,start,count);}else if(isObject(data[start])){parsed=this.parseObjectData(meta,data,start,count);}else{parsed=this.parsePrimitiveData(meta,data,start,count);}
const isNotInOrderComparedToPrev=()=>cur[iAxis]===null||prev&&cur[iAxis]<prev[iAxis];for(i=0;i<count;++i){meta._parsed[i+start]=cur=parsed[i];if(sorted){if(isNotInOrderComparedToPrev()){sorted=false;}
prev=cur;}}
meta._sorted=sorted;}
if(_stacked){updateStacks(this,parsed);}}
parsePrimitiveData(meta,data,start,count){const{iScale,vScale}=meta;const iAxis=iScale.axis;const vAxis=vScale.axis;const labels=iScale.getLabels();const singleScale=iScale===vScale;const parsed=new Array(count);let i,ilen,index;for(i=0,ilen=count;i<ilen;++i){index=i+start;parsed[i]={[iAxis]:singleScale||iScale.parse(labels[index],index),[vAxis]:vScale.parse(data[index],index)};}
return parsed;}
parseArrayData(meta,data,start,count){const{xScale,yScale}=meta;const parsed=new Array(count);let i,ilen,index,item;for(i=0,ilen=count;i<ilen;++i){index=i+start;item=data[index];parsed[i]={x:xScale.parse(item[0],index),y:yScale.parse(item[1],index)};}
return parsed;}
parseObjectData(meta,data,start,count){const{xScale,yScale}=meta;const{xAxisKey='x',yAxisKey='y'}=this._parsing;const parsed=new Array(count);let i,ilen,index,item;for(i=0,ilen=count;i<ilen;++i){index=i+start;item=data[index];parsed[i]={x:xScale.parse(resolveObjectKey(item,xAxisKey),index),y:yScale.parse(resolveObjectKey(item,yAxisKey),index)};}
return parsed;}
getParsed(index){return this._cachedMeta._parsed[index];}
getDataElement(index){return this._cachedMeta.data[index];}
applyStack(scale,parsed,mode){const chart=this.chart;const meta=this._cachedMeta;const value=parsed[scale.axis];const stack={keys:getSortedDatasetIndices(chart,true),values:parsed._stacks[scale.axis]._visualValues};return applyStack(stack,value,meta.index,{mode});}
updateRangeFromParsed(range,scale,parsed,stack){const parsedValue=parsed[scale.axis];let value=parsedValue===null?NaN:parsedValue;const values=stack&&parsed._stacks[scale.axis];if(stack&&values){stack.values=values;value=applyStack(stack,parsedValue,this._cachedMeta.index);}
range.min=Math.min(range.min,value);range.max=Math.max(range.max,value);}
getMinMax(scale,canStack){const meta=this._cachedMeta;const _parsed=meta._parsed;const sorted=meta._sorted&&scale===meta.iScale;const ilen=_parsed.length;const otherScale=this._getOtherScale(scale);const stack=createStack(canStack,meta,this.chart);const range={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY};const{min:otherMin,max:otherMax}=getUserBounds(otherScale);let i,parsed;function _skip(){parsed=_parsed[i];const otherValue=parsed[otherScale.axis];return!isNumberFinite(parsed[scale.axis])||otherMin>otherValue||otherMax<otherValue;}
for(i=0;i<ilen;++i){if(_skip()){continue;}
this.updateRangeFromParsed(range,scale,parsed,stack);if(sorted){break;}}
if(sorted){for(i=ilen-1;i>=0;--i){if(_skip()){continue;}
this.updateRangeFromParsed(range,scale,parsed,stack);break;}}
return range;}
getAllParsedValues(scale){const parsed=this._cachedMeta._parsed;const values=[];let i,ilen,value;for(i=0,ilen=parsed.length;i<ilen;++i){value=parsed[i][scale.axis];if(isNumberFinite(value)){values.push(value);}}
return values;}
getMaxOverflow(){return false;}
getLabelAndValue(index){const meta=this._cachedMeta;const iScale=meta.iScale;const vScale=meta.vScale;const parsed=this.getParsed(index);return{label:iScale?''+iScale.getLabelForValue(parsed[iScale.axis]):'',value:vScale?''+vScale.getLabelForValue(parsed[vScale.axis]):''};}
_update(mode){const meta=this._cachedMeta;this.update(mode||'default');meta._clip=toClip(valueOrDefault(this.options.clip,defaultClip(meta.xScale,meta.yScale,this.getMaxOverflow())));}
update(mode){}
draw(){const ctx=this._ctx;const chart=this.chart;const meta=this._cachedMeta;const elements=meta.data||[];const area=chart.chartArea;const active=[];const start=this._drawStart||0;const count=this._drawCount||elements.length-start;const drawActiveElementsOnTop=this.options.drawActiveElementsOnTop;let i;if(meta.dataset){meta.dataset.draw(ctx,area,start,count);}
for(i=start;i<start+count;++i){const element=elements[i];if(element.hidden){continue;}
if(element.active&&drawActiveElementsOnTop){active.push(element);}else{element.draw(ctx,area);}}
for(i=0;i<active.length;++i){active[i].draw(ctx,area);}}
getStyle(index,active){const mode=active?'active':'default';return index===undefined&&this._cachedMeta.dataset?this.resolveDatasetElementOptions(mode):this.resolveDataElementOptions(index||0,mode);}
getContext(index,active,mode){const dataset=this.getDataset();let context;if(index>=0&&index<this._cachedMeta.data.length){const element=this._cachedMeta.data[index];context=element.$context||(element.$context=createDataContext(this.getContext(),index,element));context.parsed=this.getParsed(index);context.raw=dataset.data[index];context.index=context.dataIndex=index;}else{context=this.$context||(this.$context=createDatasetContext(this.chart.getContext(),this.index));context.dataset=dataset;context.index=context.datasetIndex=this.index;}
context.active=!!active;context.mode=mode;return context;}
resolveDatasetElementOptions(mode){return this._resolveElementOptions(this.datasetElementType.id,mode);}
resolveDataElementOptions(index,mode){return this._resolveElementOptions(this.dataElementType.id,mode,index);}
_resolveElementOptions(elementType,mode='default',index){const active=mode==='active';const cache=this._cachedDataOpts;const cacheKey=elementType+'-'+mode;const cached=cache[cacheKey];const sharing=this.enableOptionSharing&&defined(index);if(cached){return cloneIfNotShared(cached,sharing);}
const config=this.chart.config;const scopeKeys=config.datasetElementScopeKeys(this._type,elementType);const prefixes=active?[`${elementType}Hover`,'hover',elementType,'']:[elementType,''];const scopes=config.getOptionScopes(this.getDataset(),scopeKeys);const names=Object.keys(defaults.elements[elementType]);const context=()=>this.getContext(index,active,mode);const values=config.resolveNamedOptions(scopes,names,context,prefixes);if(values.$shared){values.$shared=sharing;cache[cacheKey]=Object.freeze(cloneIfNotShared(values,sharing));}
return values;}
_resolveAnimations(index,transition,active){const chart=this.chart;const cache=this._cachedDataOpts;const cacheKey=`animation-${transition}`;const cached=cache[cacheKey];if(cached){return cached;}
let options;if(chart.options.animation!==false){const config=this.chart.config;const scopeKeys=config.datasetAnimationScopeKeys(this._type,transition);const scopes=config.getOptionScopes(this.getDataset(),scopeKeys);options=config.createResolver(scopes,this.getContext(index,active,transition));}
const animations=new Animations(chart,options&&options.animations);if(options&&options._cacheable){cache[cacheKey]=Object.freeze(animations);}
return animations;}
getSharedOptions(options){if(!options.$shared){return;}
return this._sharedOptions||(this._sharedOptions=Object.assign({},options));}
includeOptions(mode,sharedOptions){return!sharedOptions||isDirectUpdateMode(mode)||this.chart._animationsDisabled;}
_getSharedOptions(start,mode){const firstOpts=this.resolveDataElementOptions(start,mode);const previouslySharedOptions=this._sharedOptions;const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions)||sharedOptions!==previouslySharedOptions;this.updateSharedOptions(sharedOptions,mode,firstOpts);return{sharedOptions,includeOptions};}
updateElement(element,index,properties,mode){if(isDirectUpdateMode(mode)){Object.assign(element,properties);}else{this._resolveAnimations(index,mode).update(element,properties);}}
updateSharedOptions(sharedOptions,mode,newOptions){if(sharedOptions&&!isDirectUpdateMode(mode)){this._resolveAnimations(undefined,mode).update(sharedOptions,newOptions);}}
_setStyle(element,index,mode,active){element.active=active;const options=this.getStyle(index,active);this._resolveAnimations(index,mode,active).update(element,{options:!active&&this.getSharedOptions(options)||options});}
removeHoverStyle(element,datasetIndex,index){this._setStyle(element,index,'active',false);}
setHoverStyle(element,datasetIndex,index){this._setStyle(element,index,'active',true);}
_removeDatasetHoverStyle(){const element=this._cachedMeta.dataset;if(element){this._setStyle(element,undefined,'active',false);}}
_setDatasetHoverStyle(){const element=this._cachedMeta.dataset;if(element){this._setStyle(element,undefined,'active',true);}}
_resyncElements(resetNewElements){const data=this._data;const elements=this._cachedMeta.data;for(const[method,arg1,arg2]of this._syncList){this[method](arg1,arg2);}
this._syncList=[];const numMeta=elements.length;const numData=data.length;const count=Math.min(numData,numMeta);if(count){this.parse(0,count);}
if(numData>numMeta){this._insertElements(numMeta,numData-numMeta,resetNewElements);}else if(numData<numMeta){this._removeElements(numData,numMeta-numData);}}
_insertElements(start,count,resetNewElements=true){const meta=this._cachedMeta;const data=meta.data;const end=start+count;let i;const move=(arr)=>{arr.length+=count;for(i=arr.length-1;i>=end;i--){arr[i]=arr[i-count];}};move(data);for(i=start;i<end;++i){data[i]=new this.dataElementType();}
if(this._parsing){move(meta._parsed);}
this.parse(start,count);if(resetNewElements){this.updateElements(data,start,count,'reset');}}
updateElements(element,start,count,mode){}
_removeElements(start,count){const meta=this._cachedMeta;if(this._parsing){const removed=meta._parsed.splice(start,count);if(meta._stacked){clearStacks(meta,removed);}}
meta.data.splice(start,count);}
_sync(args){if(this._parsing){this._syncList.push(args);}else{const[method,arg1,arg2]=args;this[method](arg1,arg2);}
this.chart._dataChanges.push([this.index,...args]);}
_onDataPush(){const count=arguments.length;this._sync(['_insertElements',this.getDataset().data.length-count,count]);}
_onDataPop(){this._sync(['_removeElements',this._cachedMeta.data.length-1,1]);}
_onDataShift(){this._sync(['_removeElements',0,1]);}
_onDataSplice(start,count){if(count){this._sync(['_removeElements',start,count]);}
const newCount=arguments.length-2;if(newCount){this._sync(['_insertElements',start,newCount]);}}
_onDataUnshift(){this._sync(['_insertElements',0,arguments.length]);}}
class Element{static defaults={};static defaultRoutes=undefined;x;y;active=false;options;$animations;tooltipPosition(useFinalPosition){const{x,y}=this.getProps(['x','y'],useFinalPosition);return{x,y};}
hasValue(){return isNumber(this.x)&&isNumber(this.y);}
getProps(props,final){const anims=this.$animations;if(!final||!anims){return this;}
const ret={};props.forEach((prop)=>{ret[prop]=anims[prop]&&anims[prop].active()?anims[prop]._to:this[prop];});return ret;}}
function autoSkip(scale,ticks){const tickOpts=scale.options.ticks;const determinedMaxTicks=determineMaxTicks(scale);const ticksLimit=Math.min(tickOpts.maxTicksLimit||determinedMaxTicks,determinedMaxTicks);const majorIndices=tickOpts.major.enabled?getMajorIndices(ticks):[];const numMajorIndices=majorIndices.length;const first=majorIndices[0];const last=majorIndices[numMajorIndices-1];const newTicks=[];if(numMajorIndices>ticksLimit){skipMajors(ticks,newTicks,majorIndices,numMajorIndices/ticksLimit);return newTicks;}
const spacing=calculateSpacing(majorIndices,ticks,ticksLimit);if(numMajorIndices>0){let i,ilen;const avgMajorSpacing=numMajorIndices>1?Math.round((last-first)/(numMajorIndices-1)):null;skip(ticks,newTicks,spacing,isNullOrUndef(avgMajorSpacing)?0:first-avgMajorSpacing,first);for(i=0,ilen=numMajorIndices-1;i<ilen;i++){skip(ticks,newTicks,spacing,majorIndices[i],majorIndices[i+1]);}
skip(ticks,newTicks,spacing,last,isNullOrUndef(avgMajorSpacing)?ticks.length:last+avgMajorSpacing);return newTicks;}
skip(ticks,newTicks,spacing);return newTicks;}
function determineMaxTicks(scale){const offset=scale.options.offset;const tickLength=scale._tickSize();const maxScale=scale._length/tickLength+(offset?0:1);const maxChart=scale._maxLength/tickLength;return Math.floor(Math.min(maxScale,maxChart));}
function calculateSpacing(majorIndices,ticks,ticksLimit){const evenMajorSpacing=getEvenSpacing(majorIndices);const spacing=ticks.length/ticksLimit;if(!evenMajorSpacing){return Math.max(spacing,1);}
const factors=_factorize(evenMajorSpacing);for(let i=0,ilen=factors.length-1;i<ilen;i++){const factor=factors[i];if(factor>spacing){return factor;}}
return Math.max(spacing,1);}
function getMajorIndices(ticks){const result=[];let i,ilen;for(i=0,ilen=ticks.length;i<ilen;i++){if(ticks[i].major){result.push(i);}}
return result;}
function skipMajors(ticks,newTicks,majorIndices,spacing){let count=0;let next=majorIndices[0];let i;spacing=Math.ceil(spacing);for(i=0;i<ticks.length;i++){if(i===next){newTicks.push(ticks[i]);count++;next=majorIndices[count*spacing];}}}
function skip(ticks,newTicks,spacing,majorStart,majorEnd){const start=valueOrDefault(majorStart,0);const end=Math.min(valueOrDefault(majorEnd,ticks.length),ticks.length);let count=0;let length,i,next;spacing=Math.ceil(spacing);if(majorEnd){length=majorEnd-majorStart;spacing=length/Math.floor(length/spacing);}
next=start;while(next<0){count++;next=Math.round(start+count*spacing);}
for(i=Math.max(start,0);i<end;i++){if(i===next){newTicks.push(ticks[i]);count++;next=Math.round(start+count*spacing);}}}
function getEvenSpacing(arr){const len=arr.length;let i,diff;if(len<2){return false;}
for(diff=arr[0],i=1;i<len;++i){if(arr[i]-arr[i-1]!==diff){return false;}}
return diff;}
const reverseAlign=(align)=>align==='left'?'right':align==='right'?'left':align;const offsetFromEdge=(scale,edge,offset)=>edge==='top'||edge==='left'?scale[edge]+offset:scale[edge]-offset;const getTicksLimit=(ticksLength,maxTicksLimit)=>Math.min(maxTicksLimit||ticksLength,ticksLength);function sample(arr,numItems){const result=[];const increment=arr.length/numItems;const len=arr.length;let i=0;for(;i<len;i+=increment){result.push(arr[Math.floor(i)]);}
return result;}
function getPixelForGridLine(scale,index,offsetGridLines){const length=scale.ticks.length;const validIndex=Math.min(index,length-1);const start=scale._startPixel;const end=scale._endPixel;const epsilon=1e-6;let lineValue=scale.getPixelForTick(validIndex);let offset;if(offsetGridLines){if(length===1){offset=Math.max(lineValue-start,end-lineValue);}else if(index===0){offset=(scale.getPixelForTick(1)-lineValue)/2;}else{offset=(lineValue-scale.getPixelForTick(validIndex-1))/2;}
lineValue+=validIndex<index?offset:-offset;if(lineValue<start-epsilon||lineValue>end+epsilon){return;}}
return lineValue;}
function garbageCollect(caches,length){each(caches,(cache)=>{const gc=cache.gc;const gcLen=gc.length/2;let i;if(gcLen>length){for(i=0;i<gcLen;++i){delete cache.data[gc[i]];}
gc.splice(0,gcLen);}});}
function getTickMarkLength(options){return options.drawTicks?options.tickLength:0;}
function getTitleHeight(options,fallback){if(!options.display){return 0;}
const font=toFont(options.font,fallback);const padding=toPadding(options.padding);const lines=isArray(options.text)?options.text.length:1;return lines*font.lineHeight+padding.height;}
function createScaleContext(parent,scale){return createContext(parent,{scale,type:'scale'});}
function createTickContext(parent,index,tick){return createContext(parent,{tick,index,type:'tick'});}
function titleAlign(align,position,reverse){let ret=_toLeftRightCenter(align);if(reverse&&position!=='right'||!reverse&&position==='right'){ret=reverseAlign(ret);}
return ret;}
function titleArgs(scale,offset,position,align){const{top,left,bottom,right,chart}=scale;const{chartArea,scales}=chart;let rotation=0;let maxWidth,titleX,titleY;const height=bottom-top;const width=right-left;if(scale.isHorizontal()){titleX=_alignStartEnd(align,left,right);if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];titleY=scales[positionAxisID].getPixelForValue(value)+height-offset;}else if(position==='center'){titleY=(chartArea.bottom+chartArea.top)/2+height-offset;}else{titleY=offsetFromEdge(scale,position,offset);}
maxWidth=right-left;}else{if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];titleX=scales[positionAxisID].getPixelForValue(value)-width+offset;}else if(position==='center'){titleX=(chartArea.left+chartArea.right)/2-width+offset;}else{titleX=offsetFromEdge(scale,position,offset);}
titleY=_alignStartEnd(align,bottom,top);rotation=position==='left'?-HALF_PI:HALF_PI;}
return{titleX,titleY,maxWidth,rotation};}
class Scale extends Element{constructor(cfg){super();this.id=cfg.id;this.type=cfg.type;this.options=undefined;this.ctx=cfg.ctx;this.chart=cfg.chart;this.top=undefined;this.bottom=undefined;this.left=undefined;this.right=undefined;this.width=undefined;this.height=undefined;this._margins={left:0,right:0,top:0,bottom:0};this.maxWidth=undefined;this.maxHeight=undefined;this.paddingTop=undefined;this.paddingBottom=undefined;this.paddingLeft=undefined;this.paddingRight=undefined;this.axis=undefined;this.labelRotation=undefined;this.min=undefined;this.max=undefined;this._range=undefined;this.ticks=[];this._gridLineItems=null;this._labelItems=null;this._labelSizes=null;this._length=0;this._maxLength=0;this._longestTextCache={};this._startPixel=undefined;this._endPixel=undefined;this._reversePixels=false;this._userMax=undefined;this._userMin=undefined;this._suggestedMax=undefined;this._suggestedMin=undefined;this._ticksLength=0;this._borderValue=0;this._cache={};this._dataLimitsCached=false;this.$context=undefined;}
init(options){this.options=options.setContext(this.getContext());this.axis=options.axis;this._userMin=this.parse(options.min);this._userMax=this.parse(options.max);this._suggestedMin=this.parse(options.suggestedMin);this._suggestedMax=this.parse(options.suggestedMax);}
parse(raw,index){return raw;}
getUserBounds(){let{_userMin,_userMax,_suggestedMin,_suggestedMax}=this;_userMin=finiteOrDefault(_userMin,Number.POSITIVE_INFINITY);_userMax=finiteOrDefault(_userMax,Number.NEGATIVE_INFINITY);_suggestedMin=finiteOrDefault(_suggestedMin,Number.POSITIVE_INFINITY);_suggestedMax=finiteOrDefault(_suggestedMax,Number.NEGATIVE_INFINITY);return{min:finiteOrDefault(_userMin,_suggestedMin),max:finiteOrDefault(_userMax,_suggestedMax),minDefined:isNumberFinite(_userMin),maxDefined:isNumberFinite(_userMax)};}
getMinMax(canStack){let{min,max,minDefined,maxDefined}=this.getUserBounds();let range;if(minDefined&&maxDefined){return{min,max};}
const metas=this.getMatchingVisibleMetas();for(let i=0,ilen=metas.length;i<ilen;++i){range=metas[i].controller.getMinMax(this,canStack);if(!minDefined){min=Math.min(min,range.min);}
if(!maxDefined){max=Math.max(max,range.max);}}
min=maxDefined&&min>max?max:min;max=minDefined&&min>max?min:max;return{min:finiteOrDefault(min,finiteOrDefault(max,min)),max:finiteOrDefault(max,finiteOrDefault(min,max))};}
getPadding(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0};}
getTicks(){return this.ticks;}
getLabels(){const data=this.chart.data;return this.options.labels||(this.isHorizontal()?data.xLabels:data.yLabels)||data.labels||[];}
getLabelItems(chartArea=this.chart.chartArea){const items=this._labelItems||(this._labelItems=this._computeLabelItems(chartArea));return items;}
beforeLayout(){this._cache={};this._dataLimitsCached=false;}
beforeUpdate(){callback(this.options.beforeUpdate,[this]);}
update(maxWidth,maxHeight,margins){const{beginAtZero,grace,ticks:tickOpts}=this.options;const sampleSize=tickOpts.sampleSize;this.beforeUpdate();this.maxWidth=maxWidth;this.maxHeight=maxHeight;this._margins=margins=Object.assign({left:0,right:0,top:0,bottom:0},margins);this.ticks=null;this._labelSizes=null;this._gridLineItems=null;this._labelItems=null;this.beforeSetDimensions();this.setDimensions();this.afterSetDimensions();this._maxLength=this.isHorizontal()?this.width+margins.left+margins.right:this.height+margins.top+margins.bottom;if(!this._dataLimitsCached){this.beforeDataLimits();this.determineDataLimits();this.afterDataLimits();this._range=_addGrace(this,grace,beginAtZero);this._dataLimitsCached=true;}
this.beforeBuildTicks();this.ticks=this.buildTicks()||[];this.afterBuildTicks();const samplingEnabled=sampleSize<this.ticks.length;this._convertTicksToLabels(samplingEnabled?sample(this.ticks,sampleSize):this.ticks);this.configure();this.beforeCalculateLabelRotation();this.calculateLabelRotation();this.afterCalculateLabelRotation();if(tickOpts.display&&(tickOpts.autoSkip||tickOpts.source==='auto')){this.ticks=autoSkip(this,this.ticks);this._labelSizes=null;this.afterAutoSkip();}
if(samplingEnabled){this._convertTicksToLabels(this.ticks);}
this.beforeFit();this.fit();this.afterFit();this.afterUpdate();}
configure(){let reversePixels=this.options.reverse;let startPixel,endPixel;if(this.isHorizontal()){startPixel=this.left;endPixel=this.right;}else{startPixel=this.top;endPixel=this.bottom;reversePixels=!reversePixels;}
this._startPixel=startPixel;this._endPixel=endPixel;this._reversePixels=reversePixels;this._length=endPixel-startPixel;this._alignToPixels=this.options.alignToPixels;}
afterUpdate(){callback(this.options.afterUpdate,[this]);}
beforeSetDimensions(){callback(this.options.beforeSetDimensions,[this]);}
setDimensions(){if(this.isHorizontal()){this.width=this.maxWidth;this.left=0;this.right=this.width;}else{this.height=this.maxHeight;this.top=0;this.bottom=this.height;}
this.paddingLeft=0;this.paddingTop=0;this.paddingRight=0;this.paddingBottom=0;}
afterSetDimensions(){callback(this.options.afterSetDimensions,[this]);}
_callHooks(name){this.chart.notifyPlugins(name,this.getContext());callback(this.options[name],[this]);}
beforeDataLimits(){this._callHooks('beforeDataLimits');}
determineDataLimits(){}
afterDataLimits(){this._callHooks('afterDataLimits');}
beforeBuildTicks(){this._callHooks('beforeBuildTicks');}
buildTicks(){return[];}
afterBuildTicks(){this._callHooks('afterBuildTicks');}
beforeTickToLabelConversion(){callback(this.options.beforeTickToLabelConversion,[this]);}
generateTickLabels(ticks){const tickOpts=this.options.ticks;let i,ilen,tick;for(i=0,ilen=ticks.length;i<ilen;i++){tick=ticks[i];tick.label=callback(tickOpts.callback,[tick.value,i,ticks],this);}}
afterTickToLabelConversion(){callback(this.options.afterTickToLabelConversion,[this]);}
beforeCalculateLabelRotation(){callback(this.options.beforeCalculateLabelRotation,[this]);}
calculateLabelRotation(){const options=this.options;const tickOpts=options.ticks;const numTicks=getTicksLimit(this.ticks.length,options.ticks.maxTicksLimit);const minRotation=tickOpts.minRotation||0;const maxRotation=tickOpts.maxRotation;let labelRotation=minRotation;let tickWidth,maxHeight,maxLabelDiagonal;if(!this._isVisible()||!tickOpts.display||minRotation>=maxRotation||numTicks<=1||!this.isHorizontal()){this.labelRotation=minRotation;return;}
const labelSizes=this._getLabelSizes();const maxLabelWidth=labelSizes.widest.width;const maxLabelHeight=labelSizes.highest.height;const maxWidth=_limitValue(this.chart.width-maxLabelWidth,0,this.maxWidth);tickWidth=options.offset?this.maxWidth/numTicks:maxWidth/(numTicks-1);if(maxLabelWidth+6>tickWidth){tickWidth=maxWidth/(numTicks-(options.offset?0.5:1));maxHeight=this.maxHeight-getTickMarkLength(options.grid)-tickOpts.padding-getTitleHeight(options.title,this.chart.options.font);maxLabelDiagonal=Math.sqrt(maxLabelWidth*maxLabelWidth+maxLabelHeight*maxLabelHeight);labelRotation=toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height+6)/tickWidth,-1,1)),Math.asin(_limitValue(maxHeight/maxLabelDiagonal,-1,1))-Math.asin(_limitValue(maxLabelHeight/maxLabelDiagonal,-1,1))));labelRotation=Math.max(minRotation,Math.min(maxRotation,labelRotation));}
this.labelRotation=labelRotation;}
afterCalculateLabelRotation(){callback(this.options.afterCalculateLabelRotation,[this]);}
afterAutoSkip(){}
beforeFit(){callback(this.options.beforeFit,[this]);}
fit(){const minSize={width:0,height:0};const{chart,options:{ticks:tickOpts,title:titleOpts,grid:gridOpts}}=this;const display=this._isVisible();const isHorizontal=this.isHorizontal();if(display){const titleHeight=getTitleHeight(titleOpts,chart.options.font);if(isHorizontal){minSize.width=this.maxWidth;minSize.height=getTickMarkLength(gridOpts)+titleHeight;}else{minSize.height=this.maxHeight;minSize.width=getTickMarkLength(gridOpts)+titleHeight;}
if(tickOpts.display&&this.ticks.length){const{first,last,widest,highest}=this._getLabelSizes();const tickPadding=tickOpts.padding*2;const angleRadians=toRadians(this.labelRotation);const cos=Math.cos(angleRadians);const sin=Math.sin(angleRadians);if(isHorizontal){const labelHeight=tickOpts.mirror?0:sin*widest.width+cos*highest.height;minSize.height=Math.min(this.maxHeight,minSize.height+labelHeight+tickPadding);}else{const labelWidth=tickOpts.mirror?0:cos*widest.width+sin*highest.height;minSize.width=Math.min(this.maxWidth,minSize.width+labelWidth+tickPadding);}
this._calculatePadding(first,last,sin,cos);}}
this._handleMargins();if(isHorizontal){this.width=this._length=chart.width-this._margins.left-this._margins.right;this.height=minSize.height;}else{this.width=minSize.width;this.height=this._length=chart.height-this._margins.top-this._margins.bottom;}}
_calculatePadding(first,last,sin,cos){const{ticks:{align,padding},position}=this.options;const isRotated=this.labelRotation!==0;const labelsBelowTicks=position!=='top'&&this.axis==='x';if(this.isHorizontal()){const offsetLeft=this.getPixelForTick(0)-this.left;const offsetRight=this.right-this.getPixelForTick(this.ticks.length-1);let paddingLeft=0;let paddingRight=0;if(isRotated){if(labelsBelowTicks){paddingLeft=cos*first.width;paddingRight=sin*last.height;}else{paddingLeft=sin*first.height;paddingRight=cos*last.width;}}else if(align==='start'){paddingRight=last.width;}else if(align==='end'){paddingLeft=first.width;}else if(align!=='inner'){paddingLeft=first.width/2;paddingRight=last.width/2;}
this.paddingLeft=Math.max((paddingLeft-offsetLeft+padding)*this.width/(this.width-offsetLeft),0);this.paddingRight=Math.max((paddingRight-offsetRight+padding)*this.width/(this.width-offsetRight),0);}else{let paddingTop=last.height/2;let paddingBottom=first.height/2;if(align==='start'){paddingTop=0;paddingBottom=first.height;}else if(align==='end'){paddingTop=last.height;paddingBottom=0;}
this.paddingTop=paddingTop+padding;this.paddingBottom=paddingBottom+padding;}}
_handleMargins(){if(this._margins){this._margins.left=Math.max(this.paddingLeft,this._margins.left);this._margins.top=Math.max(this.paddingTop,this._margins.top);this._margins.right=Math.max(this.paddingRight,this._margins.right);this._margins.bottom=Math.max(this.paddingBottom,this._margins.bottom);}}
afterFit(){callback(this.options.afterFit,[this]);}
isHorizontal(){const{axis,position}=this.options;return position==='top'||position==='bottom'||axis==='x';}
isFullSize(){return this.options.fullSize;}
_convertTicksToLabels(ticks){this.beforeTickToLabelConversion();this.generateTickLabels(ticks);let i,ilen;for(i=0,ilen=ticks.length;i<ilen;i++){if(isNullOrUndef(ticks[i].label)){ticks.splice(i,1);ilen--;i--;}}
this.afterTickToLabelConversion();}
_getLabelSizes(){let labelSizes=this._labelSizes;if(!labelSizes){const sampleSize=this.options.ticks.sampleSize;let ticks=this.ticks;if(sampleSize<ticks.length){ticks=sample(ticks,sampleSize);}
this._labelSizes=labelSizes=this._computeLabelSizes(ticks,ticks.length,this.options.ticks.maxTicksLimit);}
return labelSizes;}
_computeLabelSizes(ticks,length,maxTicksLimit){const{ctx,_longestTextCache:caches}=this;const widths=[];const heights=[];const increment=Math.floor(length/getTicksLimit(length,maxTicksLimit));let widestLabelSize=0;let highestLabelSize=0;let i,j,jlen,label,tickFont,fontString,cache,lineHeight,width,height,nestedLabel;for(i=0;i<length;i+=increment){label=ticks[i].label;tickFont=this._resolveTickFontOptions(i);ctx.font=fontString=tickFont.string;cache=caches[fontString]=caches[fontString]||{data:{},gc:[]};lineHeight=tickFont.lineHeight;width=height=0;if(!isNullOrUndef(label)&&!isArray(label)){width=_measureText(ctx,cache.data,cache.gc,width,label);height=lineHeight;}else if(isArray(label)){for(j=0,jlen=label.length;j<jlen;++j){nestedLabel=label[j];if(!isNullOrUndef(nestedLabel)&&!isArray(nestedLabel)){width=_measureText(ctx,cache.data,cache.gc,width,nestedLabel);height+=lineHeight;}}}
widths.push(width);heights.push(height);widestLabelSize=Math.max(width,widestLabelSize);highestLabelSize=Math.max(height,highestLabelSize);}
garbageCollect(caches,length);const widest=widths.indexOf(widestLabelSize);const highest=heights.indexOf(highestLabelSize);const valueAt=(idx)=>({width:widths[idx]||0,height:heights[idx]||0});return{first:valueAt(0),last:valueAt(length-1),widest:valueAt(widest),highest:valueAt(highest),widths,heights};}
getLabelForValue(value){return value;}
getPixelForValue(value,index){return NaN;}
getValueForPixel(pixel){}
getPixelForTick(index){const ticks=this.ticks;if(index<0||index>ticks.length-1){return null;}
return this.getPixelForValue(ticks[index].value);}
getPixelForDecimal(decimal){if(this._reversePixels){decimal=1-decimal;}
const pixel=this._startPixel+decimal*this._length;return _int16Range(this._alignToPixels?_alignPixel(this.chart,pixel,0):pixel);}
getDecimalForPixel(pixel){const decimal=(pixel-this._startPixel)/this._length;return this._reversePixels?1-decimal:decimal;}
getBasePixel(){return this.getPixelForValue(this.getBaseValue());}
getBaseValue(){const{min,max}=this;return min<0&&max<0?max:min>0&&max>0?min:0;}
getContext(index){const ticks=this.ticks||[];if(index>=0&&index<ticks.length){const tick=ticks[index];return tick.$context||(tick.$context=createTickContext(this.getContext(),index,tick));}
return this.$context||(this.$context=createScaleContext(this.chart.getContext(),this));}
_tickSize(){const optionTicks=this.options.ticks;const rot=toRadians(this.labelRotation);const cos=Math.abs(Math.cos(rot));const sin=Math.abs(Math.sin(rot));const labelSizes=this._getLabelSizes();const padding=optionTicks.autoSkipPadding||0;const w=labelSizes?labelSizes.widest.width+padding:0;const h=labelSizes?labelSizes.highest.height+padding:0;return this.isHorizontal()?h*cos>w*sin?w/cos:h/sin:h*sin<w*cos?h/cos:w/sin;}
_isVisible(){const display=this.options.display;if(display!=='auto'){return!!display;}
return this.getMatchingVisibleMetas().length>0;}
_computeGridLineItems(chartArea){const axis=this.axis;const chart=this.chart;const options=this.options;const{grid,position,border}=options;const offset=grid.offset;const isHorizontal=this.isHorizontal();const ticks=this.ticks;const ticksLength=ticks.length+(offset?1:0);const tl=getTickMarkLength(grid);const items=[];const borderOpts=border.setContext(this.getContext());const axisWidth=borderOpts.display?borderOpts.width:0;const axisHalfWidth=axisWidth/2;const alignBorderValue=function(pixel){return _alignPixel(chart,pixel,axisWidth);};let borderValue,i,lineValue,alignedLineValue;let tx1,ty1,tx2,ty2,x1,y1,x2,y2;if(position==='top'){borderValue=alignBorderValue(this.bottom);ty1=this.bottom-tl;ty2=borderValue-axisHalfWidth;y1=alignBorderValue(chartArea.top)+axisHalfWidth;y2=chartArea.bottom;}else if(position==='bottom'){borderValue=alignBorderValue(this.top);y1=chartArea.top;y2=alignBorderValue(chartArea.bottom)-axisHalfWidth;ty1=borderValue+axisHalfWidth;ty2=this.top+tl;}else if(position==='left'){borderValue=alignBorderValue(this.right);tx1=this.right-tl;tx2=borderValue-axisHalfWidth;x1=alignBorderValue(chartArea.left)+axisHalfWidth;x2=chartArea.right;}else if(position==='right'){borderValue=alignBorderValue(this.left);x1=chartArea.left;x2=alignBorderValue(chartArea.right)-axisHalfWidth;tx1=borderValue+axisHalfWidth;tx2=this.left+tl;}else if(axis==='x'){if(position==='center'){borderValue=alignBorderValue((chartArea.top+chartArea.bottom)/2+0.5);}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];borderValue=alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));}
y1=chartArea.top;y2=chartArea.bottom;ty1=borderValue+axisHalfWidth;ty2=ty1+tl;}else if(axis==='y'){if(position==='center'){borderValue=alignBorderValue((chartArea.left+chartArea.right)/2);}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];borderValue=alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));}
tx1=borderValue-axisHalfWidth;tx2=tx1-tl;x1=chartArea.left;x2=chartArea.right;}
const limit=valueOrDefault(options.ticks.maxTicksLimit,ticksLength);const step=Math.max(1,Math.ceil(ticksLength/limit));for(i=0;i<ticksLength;i+=step){const context=this.getContext(i);const optsAtIndex=grid.setContext(context);const optsAtIndexBorder=border.setContext(context);const lineWidth=optsAtIndex.lineWidth;const lineColor=optsAtIndex.color;const borderDash=optsAtIndexBorder.dash||[];const borderDashOffset=optsAtIndexBorder.dashOffset;const tickWidth=optsAtIndex.tickWidth;const tickColor=optsAtIndex.tickColor;const tickBorderDash=optsAtIndex.tickBorderDash||[];const tickBorderDashOffset=optsAtIndex.tickBorderDashOffset;lineValue=getPixelForGridLine(this,i,offset);if(lineValue===undefined){continue;}
alignedLineValue=_alignPixel(chart,lineValue,lineWidth);if(isHorizontal){tx1=tx2=x1=x2=alignedLineValue;}else{ty1=ty2=y1=y2=alignedLineValue;}
items.push({tx1,ty1,tx2,ty2,x1,y1,x2,y2,width:lineWidth,color:lineColor,borderDash,borderDashOffset,tickWidth,tickColor,tickBorderDash,tickBorderDashOffset});}
this._ticksLength=ticksLength;this._borderValue=borderValue;return items;}
_computeLabelItems(chartArea){const axis=this.axis;const options=this.options;const{position,ticks:optionTicks}=options;const isHorizontal=this.isHorizontal();const ticks=this.ticks;const{align,crossAlign,padding,mirror}=optionTicks;const tl=getTickMarkLength(options.grid);const tickAndPadding=tl+padding;const hTickAndPadding=mirror?-padding:tickAndPadding;const rotation=-toRadians(this.labelRotation);const items=[];let i,ilen,tick,label,x,y,textAlign,pixel,font,lineHeight,lineCount,textOffset;let textBaseline='middle';if(position==='top'){y=this.bottom-hTickAndPadding;textAlign=this._getXAxisLabelAlignment();}else if(position==='bottom'){y=this.top+hTickAndPadding;textAlign=this._getXAxisLabelAlignment();}else if(position==='left'){const ret=this._getYAxisLabelAlignment(tl);textAlign=ret.textAlign;x=ret.x;}else if(position==='right'){const ret=this._getYAxisLabelAlignment(tl);textAlign=ret.textAlign;x=ret.x;}else if(axis==='x'){if(position==='center'){y=(chartArea.top+chartArea.bottom)/2+tickAndPadding;}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];y=this.chart.scales[positionAxisID].getPixelForValue(value)+tickAndPadding;}
textAlign=this._getXAxisLabelAlignment();}else if(axis==='y'){if(position==='center'){x=(chartArea.left+chartArea.right)/2-tickAndPadding;}else if(isObject(position)){const positionAxisID=Object.keys(position)[0];const value=position[positionAxisID];x=this.chart.scales[positionAxisID].getPixelForValue(value);}
textAlign=this._getYAxisLabelAlignment(tl).textAlign;}
if(axis==='y'){if(align==='start'){textBaseline='top';}else if(align==='end'){textBaseline='bottom';}}
const labelSizes=this._getLabelSizes();for(i=0,ilen=ticks.length;i<ilen;++i){tick=ticks[i];label=tick.label;const optsAtIndex=optionTicks.setContext(this.getContext(i));pixel=this.getPixelForTick(i)+optionTicks.labelOffset;font=this._resolveTickFontOptions(i);lineHeight=font.lineHeight;lineCount=isArray(label)?label.length:1;const halfCount=lineCount/2;const color=optsAtIndex.color;const strokeColor=optsAtIndex.textStrokeColor;const strokeWidth=optsAtIndex.textStrokeWidth;let tickTextAlign=textAlign;if(isHorizontal){x=pixel;if(textAlign==='inner'){if(i===ilen-1){tickTextAlign=!this.options.reverse?'right':'left';}else if(i===0){tickTextAlign=!this.options.reverse?'left':'right';}else{tickTextAlign='center';}}
if(position==='top'){if(crossAlign==='near'||rotation!==0){textOffset=-lineCount*lineHeight+lineHeight/2;}else if(crossAlign==='center'){textOffset=-labelSizes.highest.height/2-halfCount*lineHeight+lineHeight;}else{textOffset=-labelSizes.highest.height+lineHeight/2;}}else{if(crossAlign==='near'||rotation!==0){textOffset=lineHeight/2;}else if(crossAlign==='center'){textOffset=labelSizes.highest.height/2-halfCount*lineHeight;}else{textOffset=labelSizes.highest.height-lineCount*lineHeight;}}
if(mirror){textOffset*=-1;}
if(rotation!==0&&!optsAtIndex.showLabelBackdrop){x+=lineHeight/2*Math.sin(rotation);}}else{y=pixel;textOffset=(1-lineCount)*lineHeight/2;}
let backdrop;if(optsAtIndex.showLabelBackdrop){const labelPadding=toPadding(optsAtIndex.backdropPadding);const height=labelSizes.heights[i];const width=labelSizes.widths[i];let top=textOffset-labelPadding.top;let left=0-labelPadding.left;switch(textBaseline){case'middle':top-=height/2;break;case'bottom':top-=height;break;}
switch(textAlign){case'center':left-=width/2;break;case'right':left-=width;break;case'inner':if(i===ilen-1){left-=width;}else if(i>0){left-=width/2;}
break;}
backdrop={left,top,width:width+labelPadding.width,height:height+labelPadding.height,color:optsAtIndex.backdropColor};}
items.push({label,font,textOffset,options:{rotation,color,strokeColor,strokeWidth,textAlign:tickTextAlign,textBaseline,translation:[x,y],backdrop}});}
return items;}
_getXAxisLabelAlignment(){const{position,ticks}=this.options;const rotation=-toRadians(this.labelRotation);if(rotation){return position==='top'?'left':'right';}
let align='center';if(ticks.align==='start'){align='left';}else if(ticks.align==='end'){align='right';}else if(ticks.align==='inner'){align='inner';}
return align;}
_getYAxisLabelAlignment(tl){const{position,ticks:{crossAlign,mirror,padding}}=this.options;const labelSizes=this._getLabelSizes();const tickAndPadding=tl+padding;const widest=labelSizes.widest.width;let textAlign;let x;if(position==='left'){if(mirror){x=this.right+padding;if(crossAlign==='near'){textAlign='left';}else if(crossAlign==='center'){textAlign='center';x+=widest/2;}else{textAlign='right';x+=widest;}}else{x=this.right-tickAndPadding;if(crossAlign==='near'){textAlign='right';}else if(crossAlign==='center'){textAlign='center';x-=widest/2;}else{textAlign='left';x=this.left;}}}else if(position==='right'){if(mirror){x=this.left+padding;if(crossAlign==='near'){textAlign='right';}else if(crossAlign==='center'){textAlign='center';x-=widest/2;}else{textAlign='left';x-=widest;}}else{x=this.left+tickAndPadding;if(crossAlign==='near'){textAlign='left';}else if(crossAlign==='center'){textAlign='center';x+=widest/2;}else{textAlign='right';x=this.right;}}}else{textAlign='right';}
return{textAlign,x};}
_computeLabelArea(){if(this.options.ticks.mirror){return;}
const chart=this.chart;const position=this.options.position;if(position==='left'||position==='right'){return{top:0,left:this.left,bottom:chart.height,right:this.right};}
if(position==='top'||position==='bottom'){return{top:this.top,left:0,bottom:this.bottom,right:chart.width};}}
drawBackground(){const{ctx,options:{backgroundColor},left,top,width,height}=this;if(backgroundColor){ctx.save();ctx.fillStyle=backgroundColor;ctx.fillRect(left,top,width,height);ctx.restore();}}
getLineWidthForValue(value){const grid=this.options.grid;if(!this._isVisible()||!grid.display){return 0;}
const ticks=this.ticks;const index=ticks.findIndex((t)=>t.value===value);if(index>=0){const opts=grid.setContext(this.getContext(index));return opts.lineWidth;}
return 0;}
drawGrid(chartArea){const grid=this.options.grid;const ctx=this.ctx;const items=this._gridLineItems||(this._gridLineItems=this._computeGridLineItems(chartArea));let i,ilen;const drawLine=(p1,p2,style)=>{if(!style.width||!style.color){return;}
ctx.save();ctx.lineWidth=style.width;ctx.strokeStyle=style.color;ctx.setLineDash(style.borderDash||[]);ctx.lineDashOffset=style.borderDashOffset;ctx.beginPath();ctx.moveTo(p1.x,p1.y);ctx.lineTo(p2.x,p2.y);ctx.stroke();ctx.restore();};if(grid.display){for(i=0,ilen=items.length;i<ilen;++i){const item=items[i];if(grid.drawOnChartArea){drawLine({x:item.x1,y:item.y1},{x:item.x2,y:item.y2},item);}
if(grid.drawTicks){drawLine({x:item.tx1,y:item.ty1},{x:item.tx2,y:item.ty2},{color:item.tickColor,width:item.tickWidth,borderDash:item.tickBorderDash,borderDashOffset:item.tickBorderDashOffset});}}}}
drawBorder(){const{chart,ctx,options:{border,grid}}=this;const borderOpts=border.setContext(this.getContext());const axisWidth=border.display?borderOpts.width:0;if(!axisWidth){return;}
const lastLineWidth=grid.setContext(this.getContext(0)).lineWidth;const borderValue=this._borderValue;let x1,x2,y1,y2;if(this.isHorizontal()){x1=_alignPixel(chart,this.left,axisWidth)-axisWidth/2;x2=_alignPixel(chart,this.right,lastLineWidth)+lastLineWidth/2;y1=y2=borderValue;}else{y1=_alignPixel(chart,this.top,axisWidth)-axisWidth/2;y2=_alignPixel(chart,this.bottom,lastLineWidth)+lastLineWidth/2;x1=x2=borderValue;}
ctx.save();ctx.lineWidth=borderOpts.width;ctx.strokeStyle=borderOpts.color;ctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.stroke();ctx.restore();}
drawLabels(chartArea){const optionTicks=this.options.ticks;if(!optionTicks.display){return;}
const ctx=this.ctx;const area=this._computeLabelArea();if(area){clipArea(ctx,area);}
const items=this.getLabelItems(chartArea);for(const item of items){const renderTextOptions=item.options;const tickFont=item.font;const label=item.label;const y=item.textOffset;renderText(ctx,label,0,y,tickFont,renderTextOptions);}
if(area){unclipArea(ctx);}}
drawTitle(){const{ctx,options:{position,title,reverse}}=this;if(!title.display){return;}
const font=toFont(title.font);const padding=toPadding(title.padding);const align=title.align;let offset=font.lineHeight/2;if(position==='bottom'||position==='center'||isObject(position)){offset+=padding.bottom;if(isArray(title.text)){offset+=font.lineHeight*(title.text.length-1);}}else{offset+=padding.top;}
const{titleX,titleY,maxWidth,rotation}=titleArgs(this,offset,position,align);renderText(ctx,title.text,0,0,font,{color:title.color,maxWidth,rotation,textAlign:titleAlign(align,position,reverse),textBaseline:'middle',translation:[titleX,titleY]});}
draw(chartArea){if(!this._isVisible()){return;}
this.drawBackground();this.drawGrid(chartArea);this.drawBorder();this.drawTitle();this.drawLabels(chartArea);}
_layers(){const opts=this.options;const tz=opts.ticks&&opts.ticks.z||0;const gz=valueOrDefault(opts.grid&&opts.grid.z,-1);const bz=valueOrDefault(opts.border&&opts.border.z,0);if(!this._isVisible()||this.draw!==Scale.prototype.draw){return[{z:tz,draw:(chartArea)=>{this.draw(chartArea);}}];}
return[{z:gz,draw:(chartArea)=>{this.drawBackground();this.drawGrid(chartArea);this.drawTitle();}},{z:bz,draw:()=>{this.drawBorder();}},{z:tz,draw:(chartArea)=>{this.drawLabels(chartArea);}}];}
getMatchingVisibleMetas(type){const metas=this.chart.getSortedVisibleDatasetMetas();const axisID=this.axis+'AxisID';const result=[];let i,ilen;for(i=0,ilen=metas.length;i<ilen;++i){const meta=metas[i];if(meta[axisID]===this.id&&(!type||meta.type===type)){result.push(meta);}}
return result;}
_resolveTickFontOptions(index){const opts=this.options.ticks.setContext(this.getContext(index));return toFont(opts.font);}
_maxDigits(){const fontSize=this._resolveTickFontOptions(0).lineHeight;return(this.isHorizontal()?this.width:this.height)/fontSize;}}
class TypedRegistry{constructor(type,scope,override){this.type=type;this.scope=scope;this.override=override;this.items=Object.create(null);}
isForType(type){return Object.prototype.isPrototypeOf.call(this.type.prototype,type.prototype);}
register(item){const proto=Object.getPrototypeOf(item);let parentScope;if(isIChartComponent(proto)){parentScope=this.register(proto);}
const items=this.items;const id=item.id;const scope=this.scope+'.'+id;if(!id){throw new Error('class does not have id: '+item);}
if(id in items){return scope;}
items[id]=item;registerDefaults(item,scope,parentScope);if(this.override){defaults.override(item.id,item.overrides);}
return scope;}
get(id){return this.items[id];}
unregister(item){const items=this.items;const id=item.id;const scope=this.scope;if(id in items){delete items[id];}
if(scope&&id in defaults[scope]){delete defaults[scope][id];if(this.override){delete overrides[id];}}}}
function registerDefaults(item,scope,parentScope){const itemDefaults=merge(Object.create(null),[parentScope?defaults.get(parentScope):{},defaults.get(scope),item.defaults]);defaults.set(scope,itemDefaults);if(item.defaultRoutes){routeDefaults(scope,item.defaultRoutes);}
if(item.descriptors){defaults.describe(scope,item.descriptors);}}
function routeDefaults(scope,routes){Object.keys(routes).forEach((property)=>{const propertyParts=property.split('.');const sourceName=propertyParts.pop();const sourceScope=[scope].concat(propertyParts).join('.');const parts=routes[property].split('.');const targetName=parts.pop();const targetScope=parts.join('.');defaults.route(sourceScope,sourceName,targetScope,targetName);});}
function isIChartComponent(proto){return'id'in proto&&'defaults'in proto;}
class Registry{constructor(){this.controllers=new TypedRegistry(DatasetController,'datasets',true);this.elements=new TypedRegistry(Element,'elements');this.plugins=new TypedRegistry(Object,'plugins');this.scales=new TypedRegistry(Scale,'scales');this._typedRegistries=[this.controllers,this.scales,this.elements];}
add(...args){this._each('register',args);}
remove(...args){this._each('unregister',args);}
addControllers(...args){this._each('register',args,this.controllers);}
addElements(...args){this._each('register',args,this.elements);}
addPlugins(...args){this._each('register',args,this.plugins);}
addScales(...args){this._each('register',args,this.scales);}
getController(id){return this._get(id,this.controllers,'controller');}
getElement(id){return this._get(id,this.elements,'element');}
getPlugin(id){return this._get(id,this.plugins,'plugin');}
getScale(id){return this._get(id,this.scales,'scale');}
removeControllers(...args){this._each('unregister',args,this.controllers);}
removeElements(...args){this._each('unregister',args,this.elements);}
removePlugins(...args){this._each('unregister',args,this.plugins);}
removeScales(...args){this._each('unregister',args,this.scales);}
_each(method,args,typedRegistry){[...args].forEach((arg)=>{const reg=typedRegistry||this._getRegistryForType(arg);if(typedRegistry||reg.isForType(arg)||reg===this.plugins&&arg.id){this._exec(method,reg,arg);}else{each(arg,(item)=>{const itemReg=typedRegistry||this._getRegistryForType(item);this._exec(method,itemReg,item);});}});}
_exec(method,registry,component){const camelMethod=_capitalize(method);callback(component['before'+camelMethod],[],component);registry[method](component);callback(component['after'+camelMethod],[],component);}
_getRegistryForType(type){for(let i=0;i<this._typedRegistries.length;i++){const reg=this._typedRegistries[i];if(reg.isForType(type)){return reg;}}
return this.plugins;}
_get(id,typedRegistry,type){const item=typedRegistry.get(id);if(item===undefined){throw new Error('"'+id+'" is not a registered '+type+'.');}
return item;}}
var registry=new Registry();class PluginService{constructor(){this._init=[];}
notify(chart,hook,args,filter){if(hook==='beforeInit'){this._init=this._createDescriptors(chart,true);this._notify(this._init,chart,'install');}
const descriptors=filter?this._descriptors(chart).filter(filter):this._descriptors(chart);const result=this._notify(descriptors,chart,hook,args);if(hook==='afterDestroy'){this._notify(descriptors,chart,'stop');this._notify(this._init,chart,'uninstall');}
return result;}
_notify(descriptors,chart,hook,args){args=args||{};for(const descriptor of descriptors){const plugin=descriptor.plugin;const method=plugin[hook];const params=[chart,args,descriptor.options];if(callback(method,params,plugin)===false&&args.cancelable){return false;}}
return true;}
invalidate(){if(!isNullOrUndef(this._cache)){this._oldCache=this._cache;this._cache=undefined;}}
_descriptors(chart){if(this._cache){return this._cache;}
const descriptors=this._cache=this._createDescriptors(chart);this._notifyStateChanges(chart);return descriptors;}
_createDescriptors(chart,all){const config=chart&&chart.config;const options=valueOrDefault(config.options&&config.options.plugins,{});const plugins=allPlugins(config);return options===false&&!all?[]:createDescriptors(chart,plugins,options,all);}
_notifyStateChanges(chart){const previousDescriptors=this._oldCache||[];const descriptors=this._cache;const diff=(a,b)=>a.filter((x)=>!b.some((y)=>x.plugin.id===y.plugin.id));this._notify(diff(previousDescriptors,descriptors),chart,'stop');this._notify(diff(descriptors,previousDescriptors),chart,'start');}}
function allPlugins(config){const localIds={};const plugins=[];const keys=Object.keys(registry.plugins.items);for(let i=0;i<keys.length;i++){plugins.push(registry.getPlugin(keys[i]));}
const local=config.plugins||[];for(let i=0;i<local.length;i++){const plugin=local[i];if(plugins.indexOf(plugin)===-1){plugins.push(plugin);localIds[plugin.id]=true;}}
return{plugins,localIds};}
function getOpts(options,all){if(!all&&options===false){return null;}
if(options===true){return{};}
return options;}
function createDescriptors(chart,{plugins,localIds},options,all){const result=[];const context=chart.getContext();for(const plugin of plugins){const id=plugin.id;const opts=getOpts(options[id],all);if(opts===null){continue;}
result.push({plugin,options:pluginOpts(chart.config,{plugin,local:localIds[id]},opts,context)});}
return result;}
function pluginOpts(config,{plugin,local},opts,context){const keys=config.pluginScopeKeys(plugin);const scopes=config.getOptionScopes(opts,keys);if(local&&plugin.defaults){scopes.push(plugin.defaults);}
return config.createResolver(scopes,context,[''],{scriptable:false,indexable:false,allKeys:true});}
function getIndexAxis(type,options){const datasetDefaults=defaults.datasets[type]||{};const datasetOptions=(options.datasets||{})[type]||{};return datasetOptions.indexAxis||options.indexAxis||datasetDefaults.indexAxis||'x';}
function getAxisFromDefaultScaleID(id,indexAxis){let axis=id;if(id==='_index_'){axis=indexAxis;}else if(id==='_value_'){axis=indexAxis==='x'?'y':'x';}
return axis;}
function getDefaultScaleIDFromAxis(axis,indexAxis){return axis===indexAxis?'_index_':'_value_';}
function idMatchesAxis(id){if(id==='x'||id==='y'||id==='r'){return id;}}
function axisFromPosition(position){if(position==='top'||position==='bottom'){return'x';}
if(position==='left'||position==='right'){return'y';}}
function determineAxis(id,...scaleOptions){if(idMatchesAxis(id)){return id;}
for(const opts of scaleOptions){const axis=opts.axis||axisFromPosition(opts.position)||id.length>1&&idMatchesAxis(id[0].toLowerCase());if(axis){return axis;}}
throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);}
function getAxisFromDataset(id,axis,dataset){if(dataset[axis+'AxisID']===id){return{axis};}}
function retrieveAxisFromDatasets(id,config){if(config.data&&config.data.datasets){const boundDs=config.data.datasets.filter((d)=>d.xAxisID===id||d.yAxisID===id);if(boundDs.length){return getAxisFromDataset(id,'x',boundDs[0])||getAxisFromDataset(id,'y',boundDs[0]);}}
return{};}
function mergeScaleConfig(config,options){const chartDefaults=overrides[config.type]||{scales:{}};const configScales=options.scales||{};const chartIndexAxis=getIndexAxis(config.type,options);const scales=Object.create(null);Object.keys(configScales).forEach((id)=>{const scaleConf=configScales[id];if(!isObject(scaleConf)){return console.error(`Invalid scale configuration for scale: ${id}`);}
if(scaleConf._proxy){return console.warn(`Ignoring resolver passed as options for scale: ${id}`);}
const axis=determineAxis(id,scaleConf,retrieveAxisFromDatasets(id,config),defaults.scales[scaleConf.type]);const defaultId=getDefaultScaleIDFromAxis(axis,chartIndexAxis);const defaultScaleOptions=chartDefaults.scales||{};scales[id]=mergeIf(Object.create(null),[{axis},scaleConf,defaultScaleOptions[axis],defaultScaleOptions[defaultId]]);});config.data.datasets.forEach((dataset)=>{const type=dataset.type||config.type;const indexAxis=dataset.indexAxis||getIndexAxis(type,options);const datasetDefaults=overrides[type]||{};const defaultScaleOptions=datasetDefaults.scales||{};Object.keys(defaultScaleOptions).forEach((defaultID)=>{const axis=getAxisFromDefaultScaleID(defaultID,indexAxis);const id=dataset[axis+'AxisID']||axis;scales[id]=scales[id]||Object.create(null);mergeIf(scales[id],[{axis},configScales[id],defaultScaleOptions[defaultID]]);});});Object.keys(scales).forEach((key)=>{const scale=scales[key];mergeIf(scale,[defaults.scales[scale.type],defaults.scale]);});return scales;}
function initOptions(config){const options=config.options||(config.options={});options.plugins=valueOrDefault(options.plugins,{});options.scales=mergeScaleConfig(config,options);}
function initData(data){data=data||{};data.datasets=data.datasets||[];data.labels=data.labels||[];return data;}
function initConfig(config){config=config||{};config.data=initData(config.data);initOptions(config);return config;}
const keyCache=new Map();const keysCached=new Set();function cachedKeys(cacheKey,generate){let keys=keyCache.get(cacheKey);if(!keys){keys=generate();keyCache.set(cacheKey,keys);keysCached.add(keys);}
return keys;}
const addIfFound=(set,obj,key)=>{const opts=resolveObjectKey(obj,key);if(opts!==undefined){set.add(opts);}};class Config{constructor(config){this._config=initConfig(config);this._scopeCache=new Map();this._resolverCache=new Map();}
get platform(){return this._config.platform;}
get type(){return this._config.type;}
set type(type){this._config.type=type;}
get data(){return this._config.data;}
set data(data){this._config.data=initData(data);}
get options(){return this._config.options;}
set options(options){this._config.options=options;}
get plugins(){return this._config.plugins;}
update(){const config=this._config;this.clearCache();initOptions(config);}
clearCache(){this._scopeCache.clear();this._resolverCache.clear();}
datasetScopeKeys(datasetType){return cachedKeys(datasetType,()=>[[`datasets.${datasetType}`,'']]);}
datasetAnimationScopeKeys(datasetType,transition){return cachedKeys(`${datasetType}.transition.${transition}`,()=>[[`datasets.${datasetType}.transitions.${transition}`,`transitions.${transition}`],[`datasets.${datasetType}`,'']]);}
datasetElementScopeKeys(datasetType,elementType){return cachedKeys(`${datasetType}-${elementType}`,()=>[[`datasets.${datasetType}.elements.${elementType}`,`datasets.${datasetType}`,`elements.${elementType}`,'']]);}
pluginScopeKeys(plugin){const id=plugin.id;const type=this.type;return cachedKeys(`${type}-plugin-${id}`,()=>[[`plugins.${id}`,...plugin.additionalOptionScopes||[]]]);}
_cachedScopes(mainScope,resetCache){const _scopeCache=this._scopeCache;let cache=_scopeCache.get(mainScope);if(!cache||resetCache){cache=new Map();_scopeCache.set(mainScope,cache);}
return cache;}
getOptionScopes(mainScope,keyLists,resetCache){const{options,type}=this;const cache=this._cachedScopes(mainScope,resetCache);const cached=cache.get(keyLists);if(cached){return cached;}
const scopes=new Set();keyLists.forEach((keys)=>{if(mainScope){scopes.add(mainScope);keys.forEach((key)=>addIfFound(scopes,mainScope,key));}
keys.forEach((key)=>addIfFound(scopes,options,key));keys.forEach((key)=>addIfFound(scopes,overrides[type]||{},key));keys.forEach((key)=>addIfFound(scopes,defaults,key));keys.forEach((key)=>addIfFound(scopes,descriptors,key));});const array=Array.from(scopes);if(array.length===0){array.push(Object.create(null));}
if(keysCached.has(keyLists)){cache.set(keyLists,array);}
return array;}
chartOptionScopes(){const{options,type}=this;return[options,overrides[type]||{},defaults.datasets[type]||{},{type},defaults,descriptors];}
resolveNamedOptions(scopes,names,context,prefixes=['']){const result={$shared:true};const{resolver,subPrefixes}=getResolver(this._resolverCache,scopes,prefixes);let options=resolver;if(needContext(resolver,names)){result.$shared=false;context=isFunction(context)?context():context;const subResolver=this.createResolver(scopes,context,subPrefixes);options=_attachContext(resolver,context,subResolver);}
for(const prop of names){result[prop]=options[prop];}
return result;}
createResolver(scopes,context,prefixes=[''],descriptorDefaults){const{resolver}=getResolver(this._resolverCache,scopes,prefixes);return isObject(context)?_attachContext(resolver,context,undefined,descriptorDefaults):resolver;}}
function getResolver(resolverCache,scopes,prefixes){let cache=resolverCache.get(scopes);if(!cache){cache=new Map();resolverCache.set(scopes,cache);}
const cacheKey=prefixes.join();let cached=cache.get(cacheKey);if(!cached){const resolver=_createResolver(scopes,prefixes);cached={resolver,subPrefixes:prefixes.filter((p)=>!p.toLowerCase().includes('hover'))};cache.set(cacheKey,cached);}
return cached;}
const hasFunction=(value)=>isObject(value)&&Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));function needContext(proxy,names){const{isScriptable,isIndexable}=_descriptors(proxy);for(const prop of names){const scriptable=isScriptable(prop);const indexable=isIndexable(prop);const value=(indexable||scriptable)&&proxy[prop];if(scriptable&&(isFunction(value)||hasFunction(value))||indexable&&isArray(value)){return true;}}
return false;}
var version="4.4.5";const KNOWN_POSITIONS=['top','bottom','left','right','chartArea'];function positionIsHorizontal(position,axis){return position==='top'||position==='bottom'||KNOWN_POSITIONS.indexOf(position)===-1&&axis==='x';}
function compare2Level(l1,l2){return function(a,b){return a[l1]===b[l1]?a[l2]-b[l2]:a[l1]-b[l1];};}
function onAnimationsComplete(context){const chart=context.chart;const animationOptions=chart.options.animation;chart.notifyPlugins('afterRender');callback(animationOptions&&animationOptions.onComplete,[context],chart);}
function onAnimationProgress(context){const chart=context.chart;const animationOptions=chart.options.animation;callback(animationOptions&&animationOptions.onProgress,[context],chart);}
function getCanvas(item){if(_isDomSupported()&&typeof item==='string'){item=document.getElementById(item);}else if(item&&item.length){item=item[0];}
if(item&&item.canvas){item=item.canvas;}
return item;}
const instances={};const getChart=(key)=>{const canvas=getCanvas(key);return Object.values(instances).filter((c)=>c.canvas===canvas).pop();};function moveNumericKeys(obj,start,move){const keys=Object.keys(obj);for(const key of keys){const intKey=+key;if(intKey>=start){const value=obj[key];delete obj[key];if(move>0||intKey>start){obj[intKey+move]=value;}}}}
function determineLastEvent(e,lastEvent,inChartArea,isClick){if(!inChartArea||e.type==='mouseout'){return null;}
if(isClick){return lastEvent;}
return e;}
function getSizeForArea(scale,chartArea,field){return scale.options.clip?scale[field]:chartArea[field];}
function getDatasetArea(meta,chartArea){const{xScale,yScale}=meta;if(xScale&&yScale){return{left:getSizeForArea(xScale,chartArea,'left'),right:getSizeForArea(xScale,chartArea,'right'),top:getSizeForArea(yScale,chartArea,'top'),bottom:getSizeForArea(yScale,chartArea,'bottom')};}
return chartArea;}
class Chart{static defaults=defaults;static instances=instances;static overrides=overrides;static registry=registry;static version=version;static getChart=getChart;static register(...items){registry.add(...items);invalidatePlugins();}
static unregister(...items){registry.remove(...items);invalidatePlugins();}
constructor(item,userConfig){const config=this.config=new Config(userConfig);const initialCanvas=getCanvas(item);const existingChart=getChart(initialCanvas);if(existingChart){throw new Error('Canvas is already in use. Chart with ID \''+existingChart.id+'\''+' must be destroyed before the canvas with ID \''+existingChart.canvas.id+'\' can be reused.');}
const options=config.createResolver(config.chartOptionScopes(),this.getContext());this.platform=new(config.platform||_detectPlatform(initialCanvas))();this.platform.updateConfig(config);const context=this.platform.acquireContext(initialCanvas,options.aspectRatio);const canvas=context&&context.canvas;const height=canvas&&canvas.height;const width=canvas&&canvas.width;this.id=uid();this.ctx=context;this.canvas=canvas;this.width=width;this.height=height;this._options=options;this._aspectRatio=this.aspectRatio;this._layers=[];this._metasets=[];this._stacks=undefined;this.boxes=[];this.currentDevicePixelRatio=undefined;this.chartArea=undefined;this._active=[];this._lastEvent=undefined;this._listeners={};this._responsiveListeners=undefined;this._sortedMetasets=[];this.scales={};this._plugins=new PluginService();this.$proxies={};this._hiddenIndices={};this.attached=false;this._animationsDisabled=undefined;this.$context=undefined;this._doResize=debounce((mode)=>this.update(mode),options.resizeDelay||0);this._dataChanges=[];instances[this.id]=this;if(!context||!canvas){console.error("Failed to create chart: can't acquire context from the given item");return;}
animator.listen(this,'complete',onAnimationsComplete);animator.listen(this,'progress',onAnimationProgress);this._initialize();if(this.attached){this.update();}}
get aspectRatio(){const{options:{aspectRatio,maintainAspectRatio},width,height,_aspectRatio}=this;if(!isNullOrUndef(aspectRatio)){return aspectRatio;}
if(maintainAspectRatio&&_aspectRatio){return _aspectRatio;}
return height?width/height:null;}
get data(){return this.config.data;}
set data(data){this.config.data=data;}
get options(){return this._options;}
set options(options){this.config.options=options;}
get registry(){return registry;}
_initialize(){this.notifyPlugins('beforeInit');if(this.options.responsive){this.resize();}else{retinaScale(this,this.options.devicePixelRatio);}
this.bindEvents();this.notifyPlugins('afterInit');return this;}
clear(){clearCanvas(this.canvas,this.ctx);return this;}
stop(){animator.stop(this);return this;}
resize(width,height){if(!animator.running(this)){this._resize(width,height);}else{this._resizeBeforeDraw={width,height};}}
_resize(width,height){const options=this.options;const canvas=this.canvas;const aspectRatio=options.maintainAspectRatio&&this.aspectRatio;const newSize=this.platform.getMaximumSize(canvas,width,height,aspectRatio);const newRatio=options.devicePixelRatio||this.platform.getDevicePixelRatio();const mode=this.width?'resize':'attach';this.width=newSize.width;this.height=newSize.height;this._aspectRatio=this.aspectRatio;if(!retinaScale(this,newRatio,true)){return;}
this.notifyPlugins('resize',{size:newSize});callback(options.onResize,[this,newSize],this);if(this.attached){if(this._doResize(mode)){this.render();}}}
ensureScalesHaveIDs(){const options=this.options;const scalesOptions=options.scales||{};each(scalesOptions,(axisOptions,axisID)=>{axisOptions.id=axisID;});}
buildOrUpdateScales(){const options=this.options;const scaleOpts=options.scales;const scales=this.scales;const updated=Object.keys(scales).reduce((obj,id)=>{obj[id]=false;return obj;},{});let items=[];if(scaleOpts){items=items.concat(Object.keys(scaleOpts).map((id)=>{const scaleOptions=scaleOpts[id];const axis=determineAxis(id,scaleOptions);const isRadial=axis==='r';const isHorizontal=axis==='x';return{options:scaleOptions,dposition:isRadial?'chartArea':isHorizontal?'bottom':'left',dtype:isRadial?'radialLinear':isHorizontal?'category':'linear'};}));}
each(items,(item)=>{const scaleOptions=item.options;const id=scaleOptions.id;const axis=determineAxis(id,scaleOptions);const scaleType=valueOrDefault(scaleOptions.type,item.dtype);if(scaleOptions.position===undefined||positionIsHorizontal(scaleOptions.position,axis)!==positionIsHorizontal(item.dposition)){scaleOptions.position=item.dposition;}
updated[id]=true;let scale=null;if(id in scales&&scales[id].type===scaleType){scale=scales[id];}else{const scaleClass=registry.getScale(scaleType);scale=new scaleClass({id,type:scaleType,ctx:this.ctx,chart:this});scales[scale.id]=scale;}
scale.init(scaleOptions,options);});each(updated,(hasUpdated,id)=>{if(!hasUpdated){delete scales[id];}});each(scales,(scale)=>{layouts.configure(this,scale,scale.options);layouts.addBox(this,scale);});}
_updateMetasets(){const metasets=this._metasets;const numData=this.data.datasets.length;const numMeta=metasets.length;metasets.sort((a,b)=>a.index-b.index);if(numMeta>numData){for(let i=numData;i<numMeta;++i){this._destroyDatasetMeta(i);}
metasets.splice(numData,numMeta-numData);}
this._sortedMetasets=metasets.slice(0).sort(compare2Level('order','index'));}
_removeUnreferencedMetasets(){const{_metasets:metasets,data:{datasets}}=this;if(metasets.length>datasets.length){delete this._stacks;}
metasets.forEach((meta,index)=>{if(datasets.filter((x)=>x===meta._dataset).length===0){this._destroyDatasetMeta(index);}});}
buildOrUpdateControllers(){const newControllers=[];const datasets=this.data.datasets;let i,ilen;this._removeUnreferencedMetasets();for(i=0,ilen=datasets.length;i<ilen;i++){const dataset=datasets[i];let meta=this.getDatasetMeta(i);const type=dataset.type||this.config.type;if(meta.type&&meta.type!==type){this._destroyDatasetMeta(i);meta=this.getDatasetMeta(i);}
meta.type=type;meta.indexAxis=dataset.indexAxis||getIndexAxis(type,this.options);meta.order=dataset.order||0;meta.index=i;meta.label=''+dataset.label;meta.visible=this.isDatasetVisible(i);if(meta.controller){meta.controller.updateIndex(i);meta.controller.linkScales();}else{const ControllerClass=registry.getController(type);const{datasetElementType,dataElementType}=defaults.datasets[type];Object.assign(ControllerClass,{dataElementType:registry.getElement(dataElementType),datasetElementType:datasetElementType&&registry.getElement(datasetElementType)});meta.controller=new ControllerClass(this,i);newControllers.push(meta.controller);}}
this._updateMetasets();return newControllers;}
_resetElements(){each(this.data.datasets,(dataset,datasetIndex)=>{this.getDatasetMeta(datasetIndex).controller.reset();},this);}
reset(){this._resetElements();this.notifyPlugins('reset');}
update(mode){const config=this.config;config.update();const options=this._options=config.createResolver(config.chartOptionScopes(),this.getContext());const animsDisabled=this._animationsDisabled=!options.animation;this._updateScales();this._checkEventBindings();this._updateHiddenIndices();this._plugins.invalidate();if(this.notifyPlugins('beforeUpdate',{mode,cancelable:true})===false){return;}
const newControllers=this.buildOrUpdateControllers();this.notifyPlugins('beforeElementsUpdate');let minPadding=0;for(let i=0,ilen=this.data.datasets.length;i<ilen;i++){const{controller}=this.getDatasetMeta(i);const reset=!animsDisabled&&newControllers.indexOf(controller)===-1;controller.buildOrUpdateElements(reset);minPadding=Math.max(+controller.getMaxOverflow(),minPadding);}
minPadding=this._minPadding=options.layout.autoPadding?minPadding:0;this._updateLayout(minPadding);if(!animsDisabled){each(newControllers,(controller)=>{controller.reset();});}
this._updateDatasets(mode);this.notifyPlugins('afterUpdate',{mode});this._layers.sort(compare2Level('z','_idx'));const{_active,_lastEvent}=this;if(_lastEvent){this._eventHandler(_lastEvent,true);}else if(_active.length){this._updateHoverStyles(_active,_active,true);}
this.render();}
_updateScales(){each(this.scales,(scale)=>{layouts.removeBox(this,scale);});this.ensureScalesHaveIDs();this.buildOrUpdateScales();}
_checkEventBindings(){const options=this.options;const existingEvents=new Set(Object.keys(this._listeners));const newEvents=new Set(options.events);if(!setsEqual(existingEvents,newEvents)||!!this._responsiveListeners!==options.responsive){this.unbindEvents();this.bindEvents();}}
_updateHiddenIndices(){const{_hiddenIndices}=this;const changes=this._getUniformDataChanges()||[];for(const{method,start,count}of changes){const move=method==='_removeElements'?-count:count;moveNumericKeys(_hiddenIndices,start,move);}}
_getUniformDataChanges(){const _dataChanges=this._dataChanges;if(!_dataChanges||!_dataChanges.length){return;}
this._dataChanges=[];const datasetCount=this.data.datasets.length;const makeSet=(idx)=>new Set(_dataChanges.filter((c)=>c[0]===idx).map((c,i)=>i+','+c.splice(1).join(',')));const changeSet=makeSet(0);for(let i=1;i<datasetCount;i++){if(!setsEqual(changeSet,makeSet(i))){return;}}
return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({method:a[1],start:+a[2],count:+a[3]}));}
_updateLayout(minPadding){if(this.notifyPlugins('beforeLayout',{cancelable:true})===false){return;}
layouts.update(this,this.width,this.height,minPadding);const area=this.chartArea;const noArea=area.width<=0||area.height<=0;this._layers=[];each(this.boxes,(box)=>{if(noArea&&box.position==='chartArea'){return;}
if(box.configure){box.configure();}
this._layers.push(...box._layers());},this);this._layers.forEach((item,index)=>{item._idx=index;});this.notifyPlugins('afterLayout');}
_updateDatasets(mode){if(this.notifyPlugins('beforeDatasetsUpdate',{mode,cancelable:true})===false){return;}
for(let i=0,ilen=this.data.datasets.length;i<ilen;++i){this.getDatasetMeta(i).controller.configure();}
for(let i=0,ilen=this.data.datasets.length;i<ilen;++i){this._updateDataset(i,isFunction(mode)?mode({datasetIndex:i}):mode);}
this.notifyPlugins('afterDatasetsUpdate',{mode});}
_updateDataset(index,mode){const meta=this.getDatasetMeta(index);const args={meta,index,mode,cancelable:true};if(this.notifyPlugins('beforeDatasetUpdate',args)===false){return;}
meta.controller._update(mode);args.cancelable=false;this.notifyPlugins('afterDatasetUpdate',args);}
render(){if(this.notifyPlugins('beforeRender',{cancelable:true})===false){return;}
if(animator.has(this)){if(this.attached&&!animator.running(this)){animator.start(this);}}else{this.draw();onAnimationsComplete({chart:this});}}
draw(){let i;if(this._resizeBeforeDraw){const{width,height}=this._resizeBeforeDraw;this._resizeBeforeDraw=null;this._resize(width,height);}
this.clear();if(this.width<=0||this.height<=0){return;}
if(this.notifyPlugins('beforeDraw',{cancelable:true})===false){return;}
const layers=this._layers;for(i=0;i<layers.length&&layers[i].z<=0;++i){layers[i].draw(this.chartArea);}
this._drawDatasets();for(;i<layers.length;++i){layers[i].draw(this.chartArea);}
this.notifyPlugins('afterDraw');}
_getSortedDatasetMetas(filterVisible){const metasets=this._sortedMetasets;const result=[];let i,ilen;for(i=0,ilen=metasets.length;i<ilen;++i){const meta=metasets[i];if(!filterVisible||meta.visible){result.push(meta);}}
return result;}
getSortedVisibleDatasetMetas(){return this._getSortedDatasetMetas(true);}
_drawDatasets(){if(this.notifyPlugins('beforeDatasetsDraw',{cancelable:true})===false){return;}
const metasets=this.getSortedVisibleDatasetMetas();for(let i=metasets.length-1;i>=0;--i){this._drawDataset(metasets[i]);}
this.notifyPlugins('afterDatasetsDraw');}
_drawDataset(meta){const ctx=this.ctx;const clip=meta._clip;const useClip=!clip.disabled;const area=getDatasetArea(meta,this.chartArea);const args={meta,index:meta.index,cancelable:true};if(this.notifyPlugins('beforeDatasetDraw',args)===false){return;}
if(useClip){clipArea(ctx,{left:clip.left===false?0:area.left-clip.left,right:clip.right===false?this.width:area.right+clip.right,top:clip.top===false?0:area.top-clip.top,bottom:clip.bottom===false?this.height:area.bottom+clip.bottom});}
meta.controller.draw();if(useClip){unclipArea(ctx);}
args.cancelable=false;this.notifyPlugins('afterDatasetDraw',args);}
isPointInArea(point){return _isPointInArea(point,this.chartArea,this._minPadding);}
getElementsAtEventForMode(e,mode,options,useFinalPosition){const method=Interaction.modes[mode];if(typeof method==='function'){return method(this,e,options,useFinalPosition);}
return[];}
getDatasetMeta(datasetIndex){const dataset=this.data.datasets[datasetIndex];const metasets=this._metasets;let meta=metasets.filter((x)=>x&&x._dataset===dataset).pop();if(!meta){meta={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null,order:dataset&&dataset.order||0,index:datasetIndex,_dataset:dataset,_parsed:[],_sorted:false};metasets.push(meta);}
return meta;}
getContext(){return this.$context||(this.$context=createContext(null,{chart:this,type:'chart'}));}
getVisibleDatasetCount(){return this.getSortedVisibleDatasetMetas().length;}
isDatasetVisible(datasetIndex){const dataset=this.data.datasets[datasetIndex];if(!dataset){return false;}
const meta=this.getDatasetMeta(datasetIndex);return typeof meta.hidden==='boolean'?!meta.hidden:!dataset.hidden;}
setDatasetVisibility(datasetIndex,visible){const meta=this.getDatasetMeta(datasetIndex);meta.hidden=!visible;}
toggleDataVisibility(index){this._hiddenIndices[index]=!this._hiddenIndices[index];}
getDataVisibility(index){return!this._hiddenIndices[index];}
_updateVisibility(datasetIndex,dataIndex,visible){const mode=visible?'show':'hide';const meta=this.getDatasetMeta(datasetIndex);const anims=meta.controller._resolveAnimations(undefined,mode);if(defined(dataIndex)){meta.data[dataIndex].hidden=!visible;this.update();}else{this.setDatasetVisibility(datasetIndex,visible);anims.update(meta,{visible});this.update((ctx)=>ctx.datasetIndex===datasetIndex?mode:undefined);}}
hide(datasetIndex,dataIndex){this._updateVisibility(datasetIndex,dataIndex,false);}
show(datasetIndex,dataIndex){this._updateVisibility(datasetIndex,dataIndex,true);}
_destroyDatasetMeta(datasetIndex){const meta=this._metasets[datasetIndex];if(meta&&meta.controller){meta.controller._destroy();}
delete this._metasets[datasetIndex];}
_stop(){let i,ilen;this.stop();animator.remove(this);for(i=0,ilen=this.data.datasets.length;i<ilen;++i){this._destroyDatasetMeta(i);}}
destroy(){this.notifyPlugins('beforeDestroy');const{canvas,ctx}=this;this._stop();this.config.clearCache();if(canvas){this.unbindEvents();clearCanvas(canvas,ctx);this.platform.releaseContext(ctx);this.canvas=null;this.ctx=null;}
delete instances[this.id];this.notifyPlugins('afterDestroy');}
toBase64Image(...args){return this.canvas.toDataURL(...args);}
bindEvents(){this.bindUserEvents();if(this.options.responsive){this.bindResponsiveEvents();}else{this.attached=true;}}
bindUserEvents(){const listeners=this._listeners;const platform=this.platform;const _add=(type,listener)=>{platform.addEventListener(this,type,listener);listeners[type]=listener;};const listener=(e,x,y)=>{e.offsetX=x;e.offsetY=y;this._eventHandler(e);};each(this.options.events,(type)=>_add(type,listener));}
bindResponsiveEvents(){if(!this._responsiveListeners){this._responsiveListeners={};}
const listeners=this._responsiveListeners;const platform=this.platform;const _add=(type,listener)=>{platform.addEventListener(this,type,listener);listeners[type]=listener;};const _remove=(type,listener)=>{if(listeners[type]){platform.removeEventListener(this,type,listener);delete listeners[type];}};const listener=(width,height)=>{if(this.canvas){this.resize(width,height);}};let detached;const attached=()=>{_remove('attach',attached);this.attached=true;this.resize();_add('resize',listener);_add('detach',detached);};detached=()=>{this.attached=false;_remove('resize',listener);this._stop();this._resize(0,0);_add('attach',attached);};if(platform.isAttached(this.canvas)){attached();}else{detached();}}
unbindEvents(){each(this._listeners,(listener,type)=>{this.platform.removeEventListener(this,type,listener);});this._listeners={};each(this._responsiveListeners,(listener,type)=>{this.platform.removeEventListener(this,type,listener);});this._responsiveListeners=undefined;}
updateHoverStyle(items,mode,enabled){const prefix=enabled?'set':'remove';let meta,item,i,ilen;if(mode==='dataset'){meta=this.getDatasetMeta(items[0].datasetIndex);meta.controller['_'+prefix+'DatasetHoverStyle']();}
for(i=0,ilen=items.length;i<ilen;++i){item=items[i];const controller=item&&this.getDatasetMeta(item.datasetIndex).controller;if(controller){controller[prefix+'HoverStyle'](item.element,item.datasetIndex,item.index);}}}
getActiveElements(){return this._active||[];}
setActiveElements(activeElements){const lastActive=this._active||[];const active=activeElements.map(({datasetIndex,index})=>{const meta=this.getDatasetMeta(datasetIndex);if(!meta){throw new Error('No dataset found at index '+datasetIndex);}
return{datasetIndex,element:meta.data[index],index};});const changed=!_elementsEqual(active,lastActive);if(changed){this._active=active;this._lastEvent=null;this._updateHoverStyles(active,lastActive);}}
notifyPlugins(hook,args,filter){return this._plugins.notify(this,hook,args,filter);}
isPluginEnabled(pluginId){return this._plugins._cache.filter((p)=>p.plugin.id===pluginId).length===1;}
_updateHoverStyles(active,lastActive,replay){const hoverOptions=this.options.hover;const diff=(a,b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex===y.datasetIndex&&x.index===y.index));const deactivated=diff(lastActive,active);const activated=replay?active:diff(active,lastActive);if(deactivated.length){this.updateHoverStyle(deactivated,hoverOptions.mode,false);}
if(activated.length&&hoverOptions.mode){this.updateHoverStyle(activated,hoverOptions.mode,true);}}
_eventHandler(e,replay){const args={event:e,replay,cancelable:true,inChartArea:this.isPointInArea(e)};const eventFilter=(plugin)=>(plugin.options.events||this.options.events).includes(e.native.type);if(this.notifyPlugins('beforeEvent',args,eventFilter)===false){return;}
const changed=this._handleEvent(e,replay,args.inChartArea);args.cancelable=false;this.notifyPlugins('afterEvent',args,eventFilter);if(changed||args.changed){this.render();}
return this;}
_handleEvent(e,replay,inChartArea){const{_active:lastActive=[],options}=this;const useFinalPosition=replay;const active=this._getActiveElements(e,lastActive,inChartArea,useFinalPosition);const isClick=_isClickEvent(e);const lastEvent=determineLastEvent(e,this._lastEvent,inChartArea,isClick);if(inChartArea){this._lastEvent=null;callback(options.onHover,[e,active,this],this);if(isClick){callback(options.onClick,[e,active,this],this);}}
const changed=!_elementsEqual(active,lastActive);if(changed||replay){this._active=active;this._updateHoverStyles(active,lastActive,replay);}
this._lastEvent=lastEvent;return changed;}
_getActiveElements(e,lastActive,inChartArea,useFinalPosition){if(e.type==='mouseout'){return[];}
if(!inChartArea){return lastActive;}
const hoverOptions=this.options.hover;return this.getElementsAtEventForMode(e,hoverOptions.mode,hoverOptions,useFinalPosition);}}
function invalidatePlugins(){return each(Chart.instances,(chart)=>chart._plugins.invalidate());}
function abstract(){throw new Error('This method is not implemented: Check that a complete date adapter is provided.');}
class DateAdapterBase{static override(members){Object.assign(DateAdapterBase.prototype,members);}
options;constructor(options){this.options=options||{};}
init(){}
formats(){return abstract();}
parse(){return abstract();}
format(){return abstract();}
add(){return abstract();}
diff(){return abstract();}
startOf(){return abstract();}
endOf(){return abstract();}}
var _adapters={_date:DateAdapterBase};function getAllScaleValues(scale,type){if(!scale._cache.$bar){const visibleMetas=scale.getMatchingVisibleMetas(type);let values=[];for(let i=0,ilen=visibleMetas.length;i<ilen;i++){values=values.concat(visibleMetas[i].controller.getAllParsedValues(scale));}
scale._cache.$bar=_arrayUnique(values.sort((a,b)=>a-b));}
return scale._cache.$bar;}
function computeMinSampleSize(meta){const scale=meta.iScale;const values=getAllScaleValues(scale,meta.type);let min=scale._length;let i,ilen,curr,prev;const updateMinAndPrev=()=>{if(curr===32767||curr===-32768){return;}
if(defined(prev)){min=Math.min(min,Math.abs(curr-prev)||min);}
prev=curr;};for(i=0,ilen=values.length;i<ilen;++i){curr=scale.getPixelForValue(values[i]);updateMinAndPrev();}
prev=undefined;for(i=0,ilen=scale.ticks.length;i<ilen;++i){curr=scale.getPixelForTick(i);updateMinAndPrev();}
return min;}
function computeFitCategoryTraits(index,ruler,options,stackCount){const thickness=options.barThickness;let size,ratio;if(isNullOrUndef(thickness)){size=ruler.min*options.categoryPercentage;ratio=options.barPercentage;}else{size=thickness*stackCount;ratio=1;}
return{chunk:size/stackCount,ratio,start:ruler.pixels[index]-size/2};}
function computeFlexCategoryTraits(index,ruler,options,stackCount){const pixels=ruler.pixels;const curr=pixels[index];let prev=index>0?pixels[index-1]:null;let next=index<pixels.length-1?pixels[index+1]:null;const percent=options.categoryPercentage;if(prev===null){prev=curr-(next===null?ruler.end-ruler.start:next-curr);}
if(next===null){next=curr+curr-prev;}
const start=curr-(curr-Math.min(prev,next))/2*percent;const size=Math.abs(next-prev)/2*percent;return{chunk:size/stackCount,ratio:options.barPercentage,start};}
function parseFloatBar(entry,item,vScale,i){const startValue=vScale.parse(entry[0],i);const endValue=vScale.parse(entry[1],i);const min=Math.min(startValue,endValue);const max=Math.max(startValue,endValue);let barStart=min;let barEnd=max;if(Math.abs(min)>Math.abs(max)){barStart=max;barEnd=min;}
item[vScale.axis]=barEnd;item._custom={barStart,barEnd,start:startValue,end:endValue,min,max};}
function parseValue(entry,item,vScale,i){if(isArray(entry)){parseFloatBar(entry,item,vScale,i);}else{item[vScale.axis]=vScale.parse(entry,i);}
return item;}
function parseArrayOrPrimitive(meta,data,start,count){const iScale=meta.iScale;const vScale=meta.vScale;const labels=iScale.getLabels();const singleScale=iScale===vScale;const parsed=[];let i,ilen,item,entry;for(i=start,ilen=start+count;i<ilen;++i){entry=data[i];item={};item[iScale.axis]=singleScale||iScale.parse(labels[i],i);parsed.push(parseValue(entry,item,vScale,i));}
return parsed;}
function isFloatBar(custom){return custom&&custom.barStart!==undefined&&custom.barEnd!==undefined;}
function barSign(size,vScale,actualBase){if(size!==0){return sign(size);}
return(vScale.isHorizontal()?1:-1)*(vScale.min>=actualBase?1:-1);}
function borderProps(properties){let reverse,start,end,top,bottom;if(properties.horizontal){reverse=properties.base>properties.x;start='left';end='right';}else{reverse=properties.base<properties.y;start='bottom';end='top';}
if(reverse){top='end';bottom='start';}else{top='start';bottom='end';}
return{start,end,reverse,top,bottom};}
function setBorderSkipped(properties,options,stack,index){let edge=options.borderSkipped;const res={};if(!edge){properties.borderSkipped=res;return;}
if(edge===true){properties.borderSkipped={top:true,right:true,bottom:true,left:true};return;}
const{start,end,reverse,top,bottom}=borderProps(properties);if(edge==='middle'&&stack){properties.enableBorderRadius=true;if((stack._top||0)===index){edge=top;}else if((stack._bottom||0)===index){edge=bottom;}else{res[parseEdge(bottom,start,end,reverse)]=true;edge=top;}}
res[parseEdge(edge,start,end,reverse)]=true;properties.borderSkipped=res;}
function parseEdge(edge,a,b,reverse){if(reverse){edge=swap(edge,a,b);edge=startEnd(edge,b,a);}else{edge=startEnd(edge,a,b);}
return edge;}
function swap(orig,v1,v2){return orig===v1?v2:orig===v2?v1:orig;}
function startEnd(v,start,end){return v==='start'?start:v==='end'?end:v;}
function setInflateAmount(properties,{inflateAmount},ratio){properties.inflateAmount=inflateAmount==='auto'?ratio===1?0.33:0:inflateAmount;}
class BarController extends DatasetController{static id='bar';static defaults={datasetElementType:false,dataElementType:'bar',categoryPercentage:0.8,barPercentage:0.9,grouped:true,animations:{numbers:{type:'number',properties:['x','y','base','width','height']}}};static overrides={scales:{_index_:{type:'category',offset:true,grid:{offset:true}},_value_:{type:'linear',beginAtZero:true}}};parsePrimitiveData(meta,data,start,count){return parseArrayOrPrimitive(meta,data,start,count);}
parseArrayData(meta,data,start,count){return parseArrayOrPrimitive(meta,data,start,count);}
parseObjectData(meta,data,start,count){const{iScale,vScale}=meta;const{xAxisKey='x',yAxisKey='y'}=this._parsing;const iAxisKey=iScale.axis==='x'?xAxisKey:yAxisKey;const vAxisKey=vScale.axis==='x'?xAxisKey:yAxisKey;const parsed=[];let i,ilen,item,obj;for(i=start,ilen=start+count;i<ilen;++i){obj=data[i];item={};item[iScale.axis]=iScale.parse(resolveObjectKey(obj,iAxisKey),i);parsed.push(parseValue(resolveObjectKey(obj,vAxisKey),item,vScale,i));}
return parsed;}
updateRangeFromParsed(range,scale,parsed,stack){super.updateRangeFromParsed(range,scale,parsed,stack);const custom=parsed._custom;if(custom&&scale===this._cachedMeta.vScale){range.min=Math.min(range.min,custom.min);range.max=Math.max(range.max,custom.max);}}
getMaxOverflow(){return 0;}
getLabelAndValue(index){const meta=this._cachedMeta;const{iScale,vScale}=meta;const parsed=this.getParsed(index);const custom=parsed._custom;const value=isFloatBar(custom)?'['+custom.start+', '+custom.end+']':''+vScale.getLabelForValue(parsed[vScale.axis]);return{label:''+iScale.getLabelForValue(parsed[iScale.axis]),value};}
initialize(){this.enableOptionSharing=true;super.initialize();const meta=this._cachedMeta;meta.stack=this.getDataset().stack;}
update(mode){const meta=this._cachedMeta;this.updateElements(meta.data,0,meta.data.length,mode);}
updateElements(bars,start,count,mode){const reset=mode==='reset';const{index,_cachedMeta:{vScale}}=this;const base=vScale.getBasePixel();const horizontal=vScale.isHorizontal();const ruler=this._getRuler();const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);for(let i=start;i<start+count;i++){const parsed=this.getParsed(i);const vpixels=reset||isNullOrUndef(parsed[vScale.axis])?{base,head:base}:this._calculateBarValuePixels(i);const ipixels=this._calculateBarIndexPixels(i,ruler);const stack=(parsed._stacks||{})[vScale.axis];const properties={horizontal,base:vpixels.base,enableBorderRadius:!stack||isFloatBar(parsed._custom)||index===stack._top||index===stack._bottom,x:horizontal?vpixels.head:ipixels.center,y:horizontal?ipixels.center:vpixels.head,height:horizontal?ipixels.size:Math.abs(vpixels.size),width:horizontal?Math.abs(vpixels.size):ipixels.size};if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,bars[i].active?'active':mode);}
const options=properties.options||bars[i].options;setBorderSkipped(properties,options,stack,index);setInflateAmount(properties,options,ruler.ratio);this.updateElement(bars[i],i,properties,mode);}}
_getStacks(last,dataIndex){const{iScale}=this._cachedMeta;const metasets=iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);const stacked=iScale.options.stacked;const stacks=[];const currentParsed=this._cachedMeta.controller.getParsed(dataIndex);const iScaleValue=currentParsed&&currentParsed[iScale.axis];const skipNull=(meta)=>{const parsed=meta._parsed.find((item)=>item[iScale.axis]===iScaleValue);const val=parsed&&parsed[meta.vScale.axis];if(isNullOrUndef(val)||isNaN(val)){return true;}};for(const meta of metasets){if(dataIndex!==undefined&&skipNull(meta)){continue;}
if(stacked===false||stacks.indexOf(meta.stack)===-1||stacked===undefined&&meta.stack===undefined){stacks.push(meta.stack);}
if(meta.index===last){break;}}
if(!stacks.length){stacks.push(undefined);}
return stacks;}
_getStackCount(index){return this._getStacks(undefined,index).length;}
_getStackIndex(datasetIndex,name,dataIndex){const stacks=this._getStacks(datasetIndex,dataIndex);const index=name!==undefined?stacks.indexOf(name):-1;return index===-1?stacks.length-1:index;}
_getRuler(){const opts=this.options;const meta=this._cachedMeta;const iScale=meta.iScale;const pixels=[];let i,ilen;for(i=0,ilen=meta.data.length;i<ilen;++i){pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis],i));}
const barThickness=opts.barThickness;const min=barThickness||computeMinSampleSize(meta);return{min,pixels,start:iScale._startPixel,end:iScale._endPixel,stackCount:this._getStackCount(),scale:iScale,grouped:opts.grouped,ratio:barThickness?1:opts.categoryPercentage*opts.barPercentage};}
_calculateBarValuePixels(index){const{_cachedMeta:{vScale,_stacked,index:datasetIndex},options:{base:baseValue,minBarLength}}=this;const actualBase=baseValue||0;const parsed=this.getParsed(index);const custom=parsed._custom;const floating=isFloatBar(custom);let value=parsed[vScale.axis];let start=0;let length=_stacked?this.applyStack(vScale,parsed,_stacked):value;let head,size;if(length!==value){start=length-value;length=value;}
if(floating){value=custom.barStart;length=custom.barEnd-custom.barStart;if(value!==0&&sign(value)!==sign(custom.barEnd)){start=0;}
start+=value;}
const startValue=!isNullOrUndef(baseValue)&&!floating?baseValue:start;let base=vScale.getPixelForValue(startValue);if(this.chart.getDataVisibility(index)){head=vScale.getPixelForValue(start+length);}else{head=base;}
size=head-base;if(Math.abs(size)<minBarLength){size=barSign(size,vScale,actualBase)*minBarLength;if(value===actualBase){base-=size/2;}
const startPixel=vScale.getPixelForDecimal(0);const endPixel=vScale.getPixelForDecimal(1);const min=Math.min(startPixel,endPixel);const max=Math.max(startPixel,endPixel);base=Math.max(Math.min(base,max),min);head=base+size;if(_stacked&&!floating){parsed._stacks[vScale.axis]._visualValues[datasetIndex]=vScale.getValueForPixel(head)-vScale.getValueForPixel(base);}}
if(base===vScale.getPixelForValue(actualBase)){const halfGrid=sign(size)*vScale.getLineWidthForValue(actualBase)/2;base+=halfGrid;size-=halfGrid;}
return{size,base,head,center:head+size/2};}
_calculateBarIndexPixels(index,ruler){const scale=ruler.scale;const options=this.options;const skipNull=options.skipNull;const maxBarThickness=valueOrDefault(options.maxBarThickness,Infinity);let center,size;if(ruler.grouped){const stackCount=skipNull?this._getStackCount(index):ruler.stackCount;const range=options.barThickness==='flex'?computeFlexCategoryTraits(index,ruler,options,stackCount):computeFitCategoryTraits(index,ruler,options,stackCount);const stackIndex=this._getStackIndex(this.index,this._cachedMeta.stack,skipNull?index:undefined);center=range.start+range.chunk*stackIndex+range.chunk/2;size=Math.min(maxBarThickness,range.chunk*range.ratio);}else{center=scale.getPixelForValue(this.getParsed(index)[scale.axis],index);size=Math.min(maxBarThickness,ruler.min*ruler.ratio);}
return{base:center-size/2,head:center+size/2,center,size};}
draw(){const meta=this._cachedMeta;const vScale=meta.vScale;const rects=meta.data;const ilen=rects.length;let i=0;for(;i<ilen;++i){if(this.getParsed(i)[vScale.axis]!==null&&!rects[i].hidden){rects[i].draw(this._ctx);}}}}
class BubbleController extends DatasetController{static id='bubble';static defaults={datasetElementType:false,dataElementType:'point',animations:{numbers:{type:'number',properties:['x','y','borderWidth','radius']}}};static overrides={scales:{x:{type:'linear'},y:{type:'linear'}}};initialize(){this.enableOptionSharing=true;super.initialize();}
parsePrimitiveData(meta,data,start,count){const parsed=super.parsePrimitiveData(meta,data,start,count);for(let i=0;i<parsed.length;i++){parsed[i]._custom=this.resolveDataElementOptions(i+start).radius;}
return parsed;}
parseArrayData(meta,data,start,count){const parsed=super.parseArrayData(meta,data,start,count);for(let i=0;i<parsed.length;i++){const item=data[start+i];parsed[i]._custom=valueOrDefault(item[2],this.resolveDataElementOptions(i+start).radius);}
return parsed;}
parseObjectData(meta,data,start,count){const parsed=super.parseObjectData(meta,data,start,count);for(let i=0;i<parsed.length;i++){const item=data[start+i];parsed[i]._custom=valueOrDefault(item&&item.r&&+item.r,this.resolveDataElementOptions(i+start).radius);}
return parsed;}
getMaxOverflow(){const data=this._cachedMeta.data;let max=0;for(let i=data.length-1;i>=0;--i){max=Math.max(max,data[i].size(this.resolveDataElementOptions(i))/2);}
return max>0&&max;}
getLabelAndValue(index){const meta=this._cachedMeta;const labels=this.chart.data.labels||[];const{xScale,yScale}=meta;const parsed=this.getParsed(index);const x=xScale.getLabelForValue(parsed.x);const y=yScale.getLabelForValue(parsed.y);const r=parsed._custom;return{label:labels[index]||'',value:'('+x+', '+y+(r?', '+r:'')+')'};}
update(mode){const points=this._cachedMeta.data;this.updateElements(points,0,points.length,mode);}
updateElements(points,start,count,mode){const reset=mode==='reset';const{iScale,vScale}=this._cachedMeta;const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);const iAxis=iScale.axis;const vAxis=vScale.axis;for(let i=start;i<start+count;i++){const point=points[i];const parsed=!reset&&this.getParsed(i);const properties={};const iPixel=properties[iAxis]=reset?iScale.getPixelForDecimal(0.5):iScale.getPixelForValue(parsed[iAxis]);const vPixel=properties[vAxis]=reset?vScale.getBasePixel():vScale.getPixelForValue(parsed[vAxis]);properties.skip=isNaN(iPixel)||isNaN(vPixel);if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,point.active?'active':mode);if(reset){properties.options.radius=0;}}
this.updateElement(point,i,properties,mode);}}
resolveDataElementOptions(index,mode){const parsed=this.getParsed(index);let values=super.resolveDataElementOptions(index,mode);if(values.$shared){values=Object.assign({},values,{$shared:false});}
const radius=values.radius;if(mode!=='active'){values.radius=0;}
values.radius+=valueOrDefault(parsed&&parsed._custom,radius);return values;}}
function getRatioAndOffset(rotation,circumference,cutout){let ratioX=1;let ratioY=1;let offsetX=0;let offsetY=0;if(circumference<TAU){const startAngle=rotation;const endAngle=startAngle+circumference;const startX=Math.cos(startAngle);const startY=Math.sin(startAngle);const endX=Math.cos(endAngle);const endY=Math.sin(endAngle);const calcMax=(angle,a,b)=>_angleBetween(angle,startAngle,endAngle,true)?1:Math.max(a,a*cutout,b,b*cutout);const calcMin=(angle,a,b)=>_angleBetween(angle,startAngle,endAngle,true)?-1:Math.min(a,a*cutout,b,b*cutout);const maxX=calcMax(0,startX,endX);const maxY=calcMax(HALF_PI,startY,endY);const minX=calcMin(PI,startX,endX);const minY=calcMin(PI+HALF_PI,startY,endY);ratioX=(maxX-minX)/2;ratioY=(maxY-minY)/2;offsetX=-(maxX+minX)/2;offsetY=-(maxY+minY)/2;}
return{ratioX,ratioY,offsetX,offsetY};}
class DoughnutController extends DatasetController{static id='doughnut';static defaults={datasetElementType:false,dataElementType:'arc',animation:{animateRotate:true,animateScale:false},animations:{numbers:{type:'number',properties:['circumference','endAngle','innerRadius','outerRadius','startAngle','x','y','offset','borderWidth','spacing']}},cutout:'50%',rotation:0,circumference:360,radius:'100%',spacing:0,indexAxis:'r'};static descriptors={_scriptable:(name)=>name!=='spacing',_indexable:(name)=>name!=='spacing'&&!name.startsWith('borderDash')&&!name.startsWith('hoverBorderDash')};static overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(chart){const data=chart.data;if(data.labels.length&&data.datasets.length){const{labels:{pointStyle,color}}=chart.legend.options;return data.labels.map((label,i)=>{const meta=chart.getDatasetMeta(0);const style=meta.controller.getStyle(i);return{text:label,fillStyle:style.backgroundColor,strokeStyle:style.borderColor,fontColor:color,lineWidth:style.borderWidth,pointStyle:pointStyle,hidden:!chart.getDataVisibility(i),index:i};});}
return[];}},onClick(e,legendItem,legend){legend.chart.toggleDataVisibility(legendItem.index);legend.chart.update();}}}};constructor(chart,datasetIndex){super(chart,datasetIndex);this.enableOptionSharing=true;this.innerRadius=undefined;this.outerRadius=undefined;this.offsetX=undefined;this.offsetY=undefined;}
linkScales(){}
parse(start,count){const data=this.getDataset().data;const meta=this._cachedMeta;if(this._parsing===false){meta._parsed=data;}else{let getter=(i)=>+data[i];if(isObject(data[start])){const{key='value'}=this._parsing;getter=(i)=>+resolveObjectKey(data[i],key);}
let i,ilen;for(i=start,ilen=start+count;i<ilen;++i){meta._parsed[i]=getter(i);}}}
_getRotation(){return toRadians(this.options.rotation-90);}
_getCircumference(){return toRadians(this.options.circumference);}
_getRotationExtents(){let min=TAU;let max=-TAU;for(let i=0;i<this.chart.data.datasets.length;++i){if(this.chart.isDatasetVisible(i)&&this.chart.getDatasetMeta(i).type===this._type){const controller=this.chart.getDatasetMeta(i).controller;const rotation=controller._getRotation();const circumference=controller._getCircumference();min=Math.min(min,rotation);max=Math.max(max,rotation+circumference);}}
return{rotation:min,circumference:max-min};}
update(mode){const chart=this.chart;const{chartArea}=chart;const meta=this._cachedMeta;const arcs=meta.data;const spacing=this.getMaxBorderWidth()+this.getMaxOffset(arcs)+this.options.spacing;const maxSize=Math.max((Math.min(chartArea.width,chartArea.height)-spacing)/2,0);const cutout=Math.min(toPercentage(this.options.cutout,maxSize),1);const chartWeight=this._getRingWeight(this.index);const{circumference,rotation}=this._getRotationExtents();const{ratioX,ratioY,offsetX,offsetY}=getRatioAndOffset(rotation,circumference,cutout);const maxWidth=(chartArea.width-spacing)/ratioX;const maxHeight=(chartArea.height-spacing)/ratioY;const maxRadius=Math.max(Math.min(maxWidth,maxHeight)/2,0);const outerRadius=toDimension(this.options.radius,maxRadius);const innerRadius=Math.max(outerRadius*cutout,0);const radiusLength=(outerRadius-innerRadius)/this._getVisibleDatasetWeightTotal();this.offsetX=offsetX*outerRadius;this.offsetY=offsetY*outerRadius;meta.total=this.calculateTotal();this.outerRadius=outerRadius-radiusLength*this._getRingWeightOffset(this.index);this.innerRadius=Math.max(this.outerRadius-radiusLength*chartWeight,0);this.updateElements(arcs,0,arcs.length,mode);}
_circumference(i,reset){const opts=this.options;const meta=this._cachedMeta;const circumference=this._getCircumference();if(reset&&opts.animation.animateRotate||!this.chart.getDataVisibility(i)||meta._parsed[i]===null||meta.data[i].hidden){return 0;}
return this.calculateCircumference(meta._parsed[i]*circumference/TAU);}
updateElements(arcs,start,count,mode){const reset=mode==='reset';const chart=this.chart;const chartArea=chart.chartArea;const opts=chart.options;const animationOpts=opts.animation;const centerX=(chartArea.left+chartArea.right)/2;const centerY=(chartArea.top+chartArea.bottom)/2;const animateScale=reset&&animationOpts.animateScale;const innerRadius=animateScale?0:this.innerRadius;const outerRadius=animateScale?0:this.outerRadius;const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);let startAngle=this._getRotation();let i;for(i=0;i<start;++i){startAngle+=this._circumference(i,reset);}
for(i=start;i<start+count;++i){const circumference=this._circumference(i,reset);const arc=arcs[i];const properties={x:centerX+this.offsetX,y:centerY+this.offsetY,startAngle,endAngle:startAngle+circumference,circumference,outerRadius,innerRadius};if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,arc.active?'active':mode);}
startAngle+=circumference;this.updateElement(arc,i,properties,mode);}}
calculateTotal(){const meta=this._cachedMeta;const metaData=meta.data;let total=0;let i;for(i=0;i<metaData.length;i++){const value=meta._parsed[i];if(value!==null&&!isNaN(value)&&this.chart.getDataVisibility(i)&&!metaData[i].hidden){total+=Math.abs(value);}}
return total;}
calculateCircumference(value){const total=this._cachedMeta.total;if(total>0&&!isNaN(value)){return TAU*(Math.abs(value)/total);}
return 0;}
getLabelAndValue(index){const meta=this._cachedMeta;const chart=this.chart;const labels=chart.data.labels||[];const value=formatNumber(meta._parsed[index],chart.options.locale);return{label:labels[index]||'',value};}
getMaxBorderWidth(arcs){let max=0;const chart=this.chart;let i,ilen,meta,controller,options;if(!arcs){for(i=0,ilen=chart.data.datasets.length;i<ilen;++i){if(chart.isDatasetVisible(i)){meta=chart.getDatasetMeta(i);arcs=meta.data;controller=meta.controller;break;}}}
if(!arcs){return 0;}
for(i=0,ilen=arcs.length;i<ilen;++i){options=controller.resolveDataElementOptions(i);if(options.borderAlign!=='inner'){max=Math.max(max,options.borderWidth||0,options.hoverBorderWidth||0);}}
return max;}
getMaxOffset(arcs){let max=0;for(let i=0,ilen=arcs.length;i<ilen;++i){const options=this.resolveDataElementOptions(i);max=Math.max(max,options.offset||0,options.hoverOffset||0);}
return max;}
_getRingWeightOffset(datasetIndex){let ringWeightOffset=0;for(let i=0;i<datasetIndex;++i){if(this.chart.isDatasetVisible(i)){ringWeightOffset+=this._getRingWeight(i);}}
return ringWeightOffset;}
_getRingWeight(datasetIndex){return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight,1),0);}
_getVisibleDatasetWeightTotal(){return this._getRingWeightOffset(this.chart.data.datasets.length)||1;}}
class LineController extends DatasetController{static id='line';static defaults={datasetElementType:'line',dataElementType:'point',showLine:true,spanGaps:false};static overrides={scales:{_index_:{type:'category'},_value_:{type:'linear'}}};initialize(){this.enableOptionSharing=true;this.supportsDecimation=true;super.initialize();}
update(mode){const meta=this._cachedMeta;const{dataset:line,data:points=[],_dataset}=meta;const animationsDisabled=this.chart._animationsDisabled;let{start,count}=_getStartAndCountOfVisiblePoints(meta,points,animationsDisabled);this._drawStart=start;this._drawCount=count;if(_scaleRangesChanged(meta)){start=0;count=points.length;}
line._chart=this.chart;line._datasetIndex=this.index;line._decimated=!!_dataset._decimated;line.points=points;const options=this.resolveDatasetElementOptions(mode);if(!this.options.showLine){options.borderWidth=0;}
options.segment=this.options.segment;this.updateElement(line,undefined,{animated:!animationsDisabled,options},mode);this.updateElements(points,start,count,mode);}
updateElements(points,start,count,mode){const reset=mode==='reset';const{iScale,vScale,_stacked,_dataset}=this._cachedMeta;const{sharedOptions,includeOptions}=this._getSharedOptions(start,mode);const iAxis=iScale.axis;const vAxis=vScale.axis;const{spanGaps,segment}=this.options;const maxGapLength=isNumber(spanGaps)?spanGaps:Number.POSITIVE_INFINITY;const directUpdate=this.chart._animationsDisabled||reset||mode==='none';const end=start+count;const pointsCount=points.length;let prevParsed=start>0&&this.getParsed(start-1);for(let i=0;i<pointsCount;++i){const point=points[i];const properties=directUpdate?point:{};if(i<start||i>=end){properties.skip=true;continue;}
const parsed=this.getParsed(i);const nullData=isNullOrUndef(parsed[vAxis]);const iPixel=properties[iAxis]=iScale.getPixelForValue(parsed[iAxis],i);const vPixel=properties[vAxis]=reset||nullData?vScale.getBasePixel():vScale.getPixelForValue(_stacked?this.applyStack(vScale,parsed,_stacked):parsed[vAxis],i);properties.skip=isNaN(iPixel)||isNaN(vPixel)||nullData;properties.stop=i>0&&Math.abs(parsed[iAxis]-prevParsed[iAxis])>maxGapLength;if(segment){properties.parsed=parsed;properties.raw=_dataset.data[i];}
if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,point.active?'active':mode);}
if(!directUpdate){this.updateElement(point,i,properties,mode);}
prevParsed=parsed;}}
getMaxOverflow(){const meta=this._cachedMeta;const dataset=meta.dataset;const border=dataset.options&&dataset.options.borderWidth||0;const data=meta.data||[];if(!data.length){return border;}
const firstPoint=data[0].size(this.resolveDataElementOptions(0));const lastPoint=data[data.length-1].size(this.resolveDataElementOptions(data.length-1));return Math.max(border,firstPoint,lastPoint)/2;}
draw(){const meta=this._cachedMeta;meta.dataset.updateControlPoints(this.chart.chartArea,meta.iScale.axis);super.draw();}}
class PolarAreaController extends DatasetController{static id='polarArea';static defaults={dataElementType:'arc',animation:{animateRotate:true,animateScale:true},animations:{numbers:{type:'number',properties:['x','y','startAngle','endAngle','innerRadius','outerRadius']}},indexAxis:'r',startAngle:0};static overrides={aspectRatio:1,plugins:{legend:{labels:{generateLabels(chart){const data=chart.data;if(data.labels.length&&data.datasets.length){const{labels:{pointStyle,color}}=chart.legend.options;return data.labels.map((label,i)=>{const meta=chart.getDatasetMeta(0);const style=meta.controller.getStyle(i);return{text:label,fillStyle:style.backgroundColor,strokeStyle:style.borderColor,fontColor:color,lineWidth:style.borderWidth,pointStyle:pointStyle,hidden:!chart.getDataVisibility(i),index:i};});}
return[];}},onClick(e,legendItem,legend){legend.chart.toggleDataVisibility(legendItem.index);legend.chart.update();}}},scales:{r:{type:'radialLinear',angleLines:{display:false},beginAtZero:true,grid:{circular:true},pointLabels:{display:false},startAngle:0}}};constructor(chart,datasetIndex){super(chart,datasetIndex);this.innerRadius=undefined;this.outerRadius=undefined;}
getLabelAndValue(index){const meta=this._cachedMeta;const chart=this.chart;const labels=chart.data.labels||[];const value=formatNumber(meta._parsed[index].r,chart.options.locale);return{label:labels[index]||'',value};}
parseObjectData(meta,data,start,count){return _parseObjectDataRadialScale.bind(this)(meta,data,start,count);}
update(mode){const arcs=this._cachedMeta.data;this._updateRadius();this.updateElements(arcs,0,arcs.length,mode);}
getMinMax(){const meta=this._cachedMeta;const range={min:Number.POSITIVE_INFINITY,max:Number.NEGATIVE_INFINITY};meta.data.forEach((element,index)=>{const parsed=this.getParsed(index).r;if(!isNaN(parsed)&&this.chart.getDataVisibility(index)){if(parsed<range.min){range.min=parsed;}
if(parsed>range.max){range.max=parsed;}}});return range;}
_updateRadius(){const chart=this.chart;const chartArea=chart.chartArea;const opts=chart.options;const minSize=Math.min(chartArea.right-chartArea.left,chartArea.bottom-chartArea.top);const outerRadius=Math.max(minSize/2,0);const innerRadius=Math.max(opts.cutoutPercentage?outerRadius/100*opts.cutoutPercentage:1,0);const radiusLength=(outerRadius-innerRadius)/chart.getVisibleDatasetCount();this.outerRadius=outerRadius-radiusLength*this.index;this.innerRadius=this.outerRadius-radiusLength;}
updateElements(arcs,start,count,mode){const reset=mode==='reset';const chart=this.chart;const opts=chart.options;const animationOpts=opts.animation;const scale=this._cachedMeta.rScale;const centerX=scale.xCenter;const centerY=scale.yCenter;const datasetStartAngle=scale.getIndexAngle(0)-0.5*PI;let angle=datasetStartAngle;let i;const defaultAngle=360/this.countVisibleElements();for(i=0;i<start;++i){angle+=this._computeAngle(i,mode,defaultAngle);}
for(i=start;i<start+count;i++){const arc=arcs[i];let startAngle=angle;let endAngle=angle+this._computeAngle(i,mode,defaultAngle);let outerRadius=chart.getDataVisibility(i)?scale.getDistanceFromCenterForValue(this.getParsed(i).r):0;angle=endAngle;if(reset){if(animationOpts.animateScale){outerRadius=0;}
if(animationOpts.animateRotate){startAngle=endAngle=datasetStartAngle;}}
const properties={x:centerX,y:centerY,innerRadius:0,outerRadius,startAngle,endAngle,options:this.resolveDataElementOptions(i,arc.active?'active':mode)};this.updateElement(arc,i,properties,mode);}}
countVisibleElements(){const meta=this._cachedMeta;let count=0;meta.data.forEach((element,index)=>{if(!isNaN(this.getParsed(index).r)&&this.chart.getDataVisibility(index)){count++;}});return count;}
_computeAngle(index,mode,defaultAngle){return this.chart.getDataVisibility(index)?toRadians(this.resolveDataElementOptions(index,mode).angle||defaultAngle):0;}}
class PieController extends DoughnutController{static id='pie';static defaults={cutout:0,rotation:0,circumference:360,radius:'100%'};}
class RadarController extends DatasetController{static id='radar';static defaults={datasetElementType:'line',dataElementType:'point',indexAxis:'r',showLine:true,elements:{line:{fill:'start'}}};static overrides={aspectRatio:1,scales:{r:{type:'radialLinear'}}};getLabelAndValue(index){const vScale=this._cachedMeta.vScale;const parsed=this.getParsed(index);return{label:vScale.getLabels()[index],value:''+vScale.getLabelForValue(parsed[vScale.axis])};}
parseObjectData(meta,data,start,count){return _parseObjectDataRadialScale.bind(this)(meta,data,start,count);}
update(mode){const meta=this._cachedMeta;const line=meta.dataset;const points=meta.data||[];const labels=meta.iScale.getLabels();line.points=points;if(mode!=='resize'){const options=this.resolveDatasetElementOptions(mode);if(!this.options.showLine){options.borderWidth=0;}
const properties={_loop:true,_fullLoop:labels.length===points.length,options};this.updateElement(line,undefined,properties,mode);}
this.updateElements(points,0,points.length,mode);}
updateElements(points,start,count,mode){const scale=this._cachedMeta.rScale;const reset=mode==='reset';for(let i=start;i<start+count;i++){const point=points[i];const options=this.resolveDataElementOptions(i,point.active?'active':mode);const pointPosition=scale.getPointPositionForValue(i,this.getParsed(i).r);const x=reset?scale.xCenter:pointPosition.x;const y=reset?scale.yCenter:pointPosition.y;const properties={x,y,angle:pointPosition.angle,skip:isNaN(x)||isNaN(y),options};this.updateElement(point,i,properties,mode);}}}
class ScatterController extends DatasetController{static id='scatter';static defaults={datasetElementType:false,dataElementType:'point',showLine:false,fill:false};static overrides={interaction:{mode:'point'},scales:{x:{type:'linear'},y:{type:'linear'}}};getLabelAndValue(index){const meta=this._cachedMeta;const labels=this.chart.data.labels||[];const{xScale,yScale}=meta;const parsed=this.getParsed(index);const x=xScale.getLabelForValue(parsed.x);const y=yScale.getLabelForValue(parsed.y);return{label:labels[index]||'',value:'('+x+', '+y+')'};}
update(mode){const meta=this._cachedMeta;const{data:points=[]}=meta;const animationsDisabled=this.chart._animationsDisabled;let{start,count}=_getStartAndCountOfVisiblePoints(meta,points,animationsDisabled);this._drawStart=start;this._drawCount=count;if(_scaleRangesChanged(meta)){start=0;count=points.length;}
if(this.options.showLine){if(!this.datasetElementType){this.addElements();}
const{dataset:line,_dataset}=meta;line._chart=this.chart;line._datasetIndex=this.index;line._decimated=!!_dataset._decimated;line.points=points;const options=this.resolveDatasetElementOptions(mode);options.segment=this.options.segment;this.updateElement(line,undefined,{animated:!animationsDisabled,options},mode);}else if(this.datasetElementType){delete meta.dataset;this.datasetElementType=false;}
this.updateElements(points,start,count,mode);}
addElements(){const{showLine}=this.options;if(!this.datasetElementType&&showLine){this.datasetElementType=this.chart.registry.getElement('line');}
super.addElements();}
updateElements(points,start,count,mode){const reset=mode==='reset';const{iScale,vScale,_stacked,_dataset}=this._cachedMeta;const firstOpts=this.resolveDataElementOptions(start,mode);const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions);const iAxis=iScale.axis;const vAxis=vScale.axis;const{spanGaps,segment}=this.options;const maxGapLength=isNumber(spanGaps)?spanGaps:Number.POSITIVE_INFINITY;const directUpdate=this.chart._animationsDisabled||reset||mode==='none';let prevParsed=start>0&&this.getParsed(start-1);for(let i=start;i<start+count;++i){const point=points[i];const parsed=this.getParsed(i);const properties=directUpdate?point:{};const nullData=isNullOrUndef(parsed[vAxis]);const iPixel=properties[iAxis]=iScale.getPixelForValue(parsed[iAxis],i);const vPixel=properties[vAxis]=reset||nullData?vScale.getBasePixel():vScale.getPixelForValue(_stacked?this.applyStack(vScale,parsed,_stacked):parsed[vAxis],i);properties.skip=isNaN(iPixel)||isNaN(vPixel)||nullData;properties.stop=i>0&&Math.abs(parsed[iAxis]-prevParsed[iAxis])>maxGapLength;if(segment){properties.parsed=parsed;properties.raw=_dataset.data[i];}
if(includeOptions){properties.options=sharedOptions||this.resolveDataElementOptions(i,point.active?'active':mode);}
if(!directUpdate){this.updateElement(point,i,properties,mode);}
prevParsed=parsed;}
this.updateSharedOptions(sharedOptions,mode,firstOpts);}
getMaxOverflow(){const meta=this._cachedMeta;const data=meta.data||[];if(!this.options.showLine){let max=0;for(let i=data.length-1;i>=0;--i){max=Math.max(max,data[i].size(this.resolveDataElementOptions(i))/2);}
return max>0&&max;}
const dataset=meta.dataset;const border=dataset.options&&dataset.options.borderWidth||0;if(!data.length){return border;}
const firstPoint=data[0].size(this.resolveDataElementOptions(0));const lastPoint=data[data.length-1].size(this.resolveDataElementOptions(data.length-1));return Math.max(border,firstPoint,lastPoint)/2;}}
var controllers=Object.freeze({__proto__:null,BarController:BarController,BubbleController:BubbleController,DoughnutController:DoughnutController,LineController:LineController,PieController:PieController,PolarAreaController:PolarAreaController,RadarController:RadarController,ScatterController:ScatterController});function clipArc(ctx,element,endAngle){const{startAngle,pixelMargin,x,y,outerRadius,innerRadius}=element;let angleMargin=pixelMargin/outerRadius;ctx.beginPath();ctx.arc(x,y,outerRadius,startAngle-angleMargin,endAngle+angleMargin);if(innerRadius>pixelMargin){angleMargin=pixelMargin/innerRadius;ctx.arc(x,y,innerRadius,endAngle+angleMargin,startAngle-angleMargin,true);}else{ctx.arc(x,y,pixelMargin,endAngle+HALF_PI,startAngle-HALF_PI);}
ctx.closePath();ctx.clip();}
function toRadiusCorners(value){return _readValueToProps(value,['outerStart','outerEnd','innerStart','innerEnd']);}
function parseBorderRadius$1(arc,innerRadius,outerRadius,angleDelta){const o=toRadiusCorners(arc.options.borderRadius);const halfThickness=(outerRadius-innerRadius)/2;const innerLimit=Math.min(halfThickness,angleDelta*innerRadius/2);const computeOuterLimit=(val)=>{const outerArcLimit=(outerRadius-Math.min(halfThickness,val))*angleDelta/2;return _limitValue(val,0,Math.min(halfThickness,outerArcLimit));};return{outerStart:computeOuterLimit(o.outerStart),outerEnd:computeOuterLimit(o.outerEnd),innerStart:_limitValue(o.innerStart,0,innerLimit),innerEnd:_limitValue(o.innerEnd,0,innerLimit)};}
function rThetaToXY(r,theta,x,y){return{x:x+r*Math.cos(theta),y:y+r*Math.sin(theta)};}
function pathArc(ctx,element,offset,spacing,end,circular){const{x,y,startAngle:start,pixelMargin,innerRadius:innerR}=element;const outerRadius=Math.max(element.outerRadius+spacing+offset-pixelMargin,0);const innerRadius=innerR>0?innerR+spacing+offset+pixelMargin:0;let spacingOffset=0;const alpha=end-start;if(spacing){const noSpacingInnerRadius=innerR>0?innerR-spacing:0;const noSpacingOuterRadius=outerRadius>0?outerRadius-spacing:0;const avNogSpacingRadius=(noSpacingInnerRadius+noSpacingOuterRadius)/2;const adjustedAngle=avNogSpacingRadius!==0?alpha*avNogSpacingRadius/(avNogSpacingRadius+spacing):alpha;spacingOffset=(alpha-adjustedAngle)/2;}
const beta=Math.max(0.001,alpha*outerRadius-offset/PI)/outerRadius;const angleOffset=(alpha-beta)/2;const startAngle=start+angleOffset+spacingOffset;const endAngle=end-angleOffset-spacingOffset;const{outerStart,outerEnd,innerStart,innerEnd}=parseBorderRadius$1(element,innerRadius,outerRadius,endAngle-startAngle);const outerStartAdjustedRadius=outerRadius-outerStart;const outerEndAdjustedRadius=outerRadius-outerEnd;const outerStartAdjustedAngle=startAngle+outerStart/outerStartAdjustedRadius;const outerEndAdjustedAngle=endAngle-outerEnd/outerEndAdjustedRadius;const innerStartAdjustedRadius=innerRadius+innerStart;const innerEndAdjustedRadius=innerRadius+innerEnd;const innerStartAdjustedAngle=startAngle+innerStart/innerStartAdjustedRadius;const innerEndAdjustedAngle=endAngle-innerEnd/innerEndAdjustedRadius;ctx.beginPath();if(circular){const outerMidAdjustedAngle=(outerStartAdjustedAngle+outerEndAdjustedAngle)/2;ctx.arc(x,y,outerRadius,outerStartAdjustedAngle,outerMidAdjustedAngle);ctx.arc(x,y,outerRadius,outerMidAdjustedAngle,outerEndAdjustedAngle);if(outerEnd>0){const pCenter=rThetaToXY(outerEndAdjustedRadius,outerEndAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,outerEnd,outerEndAdjustedAngle,endAngle+HALF_PI);}
const p4=rThetaToXY(innerEndAdjustedRadius,endAngle,x,y);ctx.lineTo(p4.x,p4.y);if(innerEnd>0){const pCenter=rThetaToXY(innerEndAdjustedRadius,innerEndAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,innerEnd,endAngle+HALF_PI,innerEndAdjustedAngle+Math.PI);}
const innerMidAdjustedAngle=(endAngle-innerEnd/innerRadius+(startAngle+innerStart/innerRadius))/2;ctx.arc(x,y,innerRadius,endAngle-innerEnd/innerRadius,innerMidAdjustedAngle,true);ctx.arc(x,y,innerRadius,innerMidAdjustedAngle,startAngle+innerStart/innerRadius,true);if(innerStart>0){const pCenter=rThetaToXY(innerStartAdjustedRadius,innerStartAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,innerStart,innerStartAdjustedAngle+Math.PI,startAngle-HALF_PI);}
const p8=rThetaToXY(outerStartAdjustedRadius,startAngle,x,y);ctx.lineTo(p8.x,p8.y);if(outerStart>0){const pCenter=rThetaToXY(outerStartAdjustedRadius,outerStartAdjustedAngle,x,y);ctx.arc(pCenter.x,pCenter.y,outerStart,startAngle-HALF_PI,outerStartAdjustedAngle);}}else{ctx.moveTo(x,y);const outerStartX=Math.cos(outerStartAdjustedAngle)*outerRadius+x;const outerStartY=Math.sin(outerStartAdjustedAngle)*outerRadius+y;ctx.lineTo(outerStartX,outerStartY);const outerEndX=Math.cos(outerEndAdjustedAngle)*outerRadius+x;const outerEndY=Math.sin(outerEndAdjustedAngle)*outerRadius+y;ctx.lineTo(outerEndX,outerEndY);}
ctx.closePath();}
function drawArc(ctx,element,offset,spacing,circular){const{fullCircles,startAngle,circumference}=element;let endAngle=element.endAngle;if(fullCircles){pathArc(ctx,element,offset,spacing,endAngle,circular);for(let i=0;i<fullCircles;++i){ctx.fill();}
if(!isNaN(circumference)){endAngle=startAngle+(circumference%TAU||TAU);}}
pathArc(ctx,element,offset,spacing,endAngle,circular);ctx.fill();return endAngle;}
function drawBorder(ctx,element,offset,spacing,circular){const{fullCircles,startAngle,circumference,options}=element;const{borderWidth,borderJoinStyle,borderDash,borderDashOffset}=options;const inner=options.borderAlign==='inner';if(!borderWidth){return;}
ctx.setLineDash(borderDash||[]);ctx.lineDashOffset=borderDashOffset;if(inner){ctx.lineWidth=borderWidth*2;ctx.lineJoin=borderJoinStyle||'round';}else{ctx.lineWidth=borderWidth;ctx.lineJoin=borderJoinStyle||'bevel';}
let endAngle=element.endAngle;if(fullCircles){pathArc(ctx,element,offset,spacing,endAngle,circular);for(let i=0;i<fullCircles;++i){ctx.stroke();}
if(!isNaN(circumference)){endAngle=startAngle+(circumference%TAU||TAU);}}
if(inner){clipArc(ctx,element,endAngle);}
if(!fullCircles){pathArc(ctx,element,offset,spacing,endAngle,circular);ctx.stroke();}}
class ArcElement extends Element{static id='arc';static defaults={borderAlign:'center',borderColor:'#fff',borderDash:[],borderDashOffset:0,borderJoinStyle:undefined,borderRadius:0,borderWidth:2,offset:0,spacing:0,angle:undefined,circular:true};static defaultRoutes={backgroundColor:'backgroundColor'};static descriptors={_scriptable:true,_indexable:(name)=>name!=='borderDash'};circumference;endAngle;fullCircles;innerRadius;outerRadius;pixelMargin;startAngle;constructor(cfg){super();this.options=undefined;this.circumference=undefined;this.startAngle=undefined;this.endAngle=undefined;this.innerRadius=undefined;this.outerRadius=undefined;this.pixelMargin=0;this.fullCircles=0;if(cfg){Object.assign(this,cfg);}}
inRange(chartX,chartY,useFinalPosition){const point=this.getProps(['x','y'],useFinalPosition);const{angle,distance}=getAngleFromPoint(point,{x:chartX,y:chartY});const{startAngle,endAngle,innerRadius,outerRadius,circumference}=this.getProps(['startAngle','endAngle','innerRadius','outerRadius','circumference'],useFinalPosition);const rAdjust=(this.options.spacing+this.options.borderWidth)/2;const _circumference=valueOrDefault(circumference,endAngle-startAngle);const nonZeroBetween=_angleBetween(angle,startAngle,endAngle)&&startAngle!==endAngle;const betweenAngles=_circumference>=TAU||nonZeroBetween;const withinRadius=_isBetween(distance,innerRadius+rAdjust,outerRadius+rAdjust);return betweenAngles&&withinRadius;}
getCenterPoint(useFinalPosition){const{x,y,startAngle,endAngle,innerRadius,outerRadius}=this.getProps(['x','y','startAngle','endAngle','innerRadius','outerRadius'],useFinalPosition);const{offset,spacing}=this.options;const halfAngle=(startAngle+endAngle)/2;const halfRadius=(innerRadius+outerRadius+spacing+offset)/2;return{x:x+Math.cos(halfAngle)*halfRadius,y:y+Math.sin(halfAngle)*halfRadius};}
tooltipPosition(useFinalPosition){return this.getCenterPoint(useFinalPosition);}
draw(ctx){const{options,circumference}=this;const offset=(options.offset||0)/4;const spacing=(options.spacing||0)/2;const circular=options.circular;this.pixelMargin=options.borderAlign==='inner'?0.33:0;this.fullCircles=circumference>TAU?Math.floor(circumference/TAU):0;if(circumference===0||this.innerRadius<0||this.outerRadius<0){return;}
ctx.save();const halfAngle=(this.startAngle+this.endAngle)/2;ctx.translate(Math.cos(halfAngle)*offset,Math.sin(halfAngle)*offset);const fix=1-Math.sin(Math.min(PI,circumference||0));const radiusOffset=offset*fix;ctx.fillStyle=options.backgroundColor;ctx.strokeStyle=options.borderColor;drawArc(ctx,this,radiusOffset,spacing,circular);drawBorder(ctx,this,radiusOffset,spacing,circular);ctx.restore();}}
function setStyle(ctx,options,style=options){ctx.lineCap=valueOrDefault(style.borderCapStyle,options.borderCapStyle);ctx.setLineDash(valueOrDefault(style.borderDash,options.borderDash));ctx.lineDashOffset=valueOrDefault(style.borderDashOffset,options.borderDashOffset);ctx.lineJoin=valueOrDefault(style.borderJoinStyle,options.borderJoinStyle);ctx.lineWidth=valueOrDefault(style.borderWidth,options.borderWidth);ctx.strokeStyle=valueOrDefault(style.borderColor,options.borderColor);}
function lineTo(ctx,previous,target){ctx.lineTo(target.x,target.y);}
function getLineMethod(options){if(options.stepped){return _steppedLineTo;}
if(options.tension||options.cubicInterpolationMode==='monotone'){return _bezierCurveTo;}
return lineTo;}
function pathVars(points,segment,params={}){const count=points.length;const{start:paramsStart=0,end:paramsEnd=count-1}=params;const{start:segmentStart,end:segmentEnd}=segment;const start=Math.max(paramsStart,segmentStart);const end=Math.min(paramsEnd,segmentEnd);const outside=paramsStart<segmentStart&&paramsEnd<segmentStart||paramsStart>segmentEnd&&paramsEnd>segmentEnd;return{count,start,loop:segment.loop,ilen:end<start&&!outside?count+end-start:end-start};}
function pathSegment(ctx,line,segment,params){const{points,options}=line;const{count,start,loop,ilen}=pathVars(points,segment,params);const lineMethod=getLineMethod(options);let{move=true,reverse}=params||{};let i,point,prev;for(i=0;i<=ilen;++i){point=points[(start+(reverse?ilen-i:i))%count];if(point.skip){continue;}else if(move){ctx.moveTo(point.x,point.y);move=false;}else{lineMethod(ctx,prev,point,reverse,options.stepped);}
prev=point;}
if(loop){point=points[(start+(reverse?ilen:0))%count];lineMethod(ctx,prev,point,reverse,options.stepped);}
return!!loop;}
function fastPathSegment(ctx,line,segment,params){const points=line.points;const{count,start,ilen}=pathVars(points,segment,params);const{move=true,reverse}=params||{};let avgX=0;let countX=0;let i,point,prevX,minY,maxY,lastY;const pointIndex=(index)=>(start+(reverse?ilen-index:index))%count;const drawX=()=>{if(minY!==maxY){ctx.lineTo(avgX,maxY);ctx.lineTo(avgX,minY);ctx.lineTo(avgX,lastY);}};if(move){point=points[pointIndex(0)];ctx.moveTo(point.x,point.y);}
for(i=0;i<=ilen;++i){point=points[pointIndex(i)];if(point.skip){continue;}
const x=point.x;const y=point.y;const truncX=x|0;if(truncX===prevX){if(y<minY){minY=y;}else if(y>maxY){maxY=y;}
avgX=(countX*avgX+x)/++countX;}else{drawX();ctx.lineTo(x,y);prevX=truncX;countX=0;minY=maxY=y;}
lastY=y;}
drawX();}
function _getSegmentMethod(line){const opts=line.options;const borderDash=opts.borderDash&&opts.borderDash.length;const useFastPath=!line._decimated&&!line._loop&&!opts.tension&&opts.cubicInterpolationMode!=='monotone'&&!opts.stepped&&!borderDash;return useFastPath?fastPathSegment:pathSegment;}
function _getInterpolationMethod(options){if(options.stepped){return _steppedInterpolation;}
if(options.tension||options.cubicInterpolationMode==='monotone'){return _bezierInterpolation;}
return _pointInLine;}
function strokePathWithCache(ctx,line,start,count){let path=line._path;if(!path){path=line._path=new Path2D();if(line.path(path,start,count)){path.closePath();}}
setStyle(ctx,line.options);ctx.stroke(path);}
function strokePathDirect(ctx,line,start,count){const{segments,options}=line;const segmentMethod=_getSegmentMethod(line);for(const segment of segments){setStyle(ctx,options,segment.style);ctx.beginPath();if(segmentMethod(ctx,line,segment,{start,end:start+count-1})){ctx.closePath();}
ctx.stroke();}}
const usePath2D=typeof Path2D==='function';function draw(ctx,line,start,count){if(usePath2D&&!line.options.segment){strokePathWithCache(ctx,line,start,count);}else{strokePathDirect(ctx,line,start,count);}}
class LineElement extends Element{static id='line';static defaults={borderCapStyle:'butt',borderDash:[],borderDashOffset:0,borderJoinStyle:'miter',borderWidth:3,capBezierPoints:true,cubicInterpolationMode:'default',fill:false,spanGaps:false,stepped:false,tension:0};static defaultRoutes={backgroundColor:'backgroundColor',borderColor:'borderColor'};static descriptors={_scriptable:true,_indexable:(name)=>name!=='borderDash'&&name!=='fill'};constructor(cfg){super();this.animated=true;this.options=undefined;this._chart=undefined;this._loop=undefined;this._fullLoop=undefined;this._path=undefined;this._points=undefined;this._segments=undefined;this._decimated=false;this._pointsUpdated=false;this._datasetIndex=undefined;if(cfg){Object.assign(this,cfg);}}
updateControlPoints(chartArea,indexAxis){const options=this.options;if((options.tension||options.cubicInterpolationMode==='monotone')&&!options.stepped&&!this._pointsUpdated){const loop=options.spanGaps?this._loop:this._fullLoop;_updateBezierControlPoints(this._points,options,chartArea,loop,indexAxis);this._pointsUpdated=true;}}
set points(points){this._points=points;delete this._segments;delete this._path;this._pointsUpdated=false;}
get points(){return this._points;}
get segments(){return this._segments||(this._segments=_computeSegments(this,this.options.segment));}
first(){const segments=this.segments;const points=this.points;return segments.length&&points[segments[0].start];}
last(){const segments=this.segments;const points=this.points;const count=segments.length;return count&&points[segments[count-1].end];}
interpolate(point,property){const options=this.options;const value=point[property];const points=this.points;const segments=_boundSegments(this,{property,start:value,end:value});if(!segments.length){return;}
const result=[];const _interpolate=_getInterpolationMethod(options);let i,ilen;for(i=0,ilen=segments.length;i<ilen;++i){const{start,end}=segments[i];const p1=points[start];const p2=points[end];if(p1===p2){result.push(p1);continue;}
const t=Math.abs((value-p1[property])/(p2[property]-p1[property]));const interpolated=_interpolate(p1,p2,t,options.stepped);interpolated[property]=point[property];result.push(interpolated);}
return result.length===1?result[0]:result;}
pathSegment(ctx,segment,params){const segmentMethod=_getSegmentMethod(this);return segmentMethod(ctx,this,segment,params);}
path(ctx,start,count){const segments=this.segments;const segmentMethod=_getSegmentMethod(this);let loop=this._loop;start=start||0;count=count||this.points.length-start;for(const segment of segments){loop&=segmentMethod(ctx,this,segment,{start,end:start+count-1});}
return!!loop;}
draw(ctx,chartArea,start,count){const options=this.options||{};const points=this.points||[];if(points.length&&options.borderWidth){ctx.save();draw(ctx,this,start,count);ctx.restore();}
if(this.animated){this._pointsUpdated=false;this._path=undefined;}}}
function inRange$1(el,pos,axis,useFinalPosition){const options=el.options;const{[axis]:value}=el.getProps([axis],useFinalPosition);return Math.abs(pos-value)<options.radius+options.hitRadius;}
class PointElement extends Element{static id='point';parsed;skip;stop;static defaults={borderWidth:1,hitRadius:1,hoverBorderWidth:1,hoverRadius:4,pointStyle:'circle',radius:3,rotation:0};static defaultRoutes={backgroundColor:'backgroundColor',borderColor:'borderColor'};constructor(cfg){super();this.options=undefined;this.parsed=undefined;this.skip=undefined;this.stop=undefined;if(cfg){Object.assign(this,cfg);}}
inRange(mouseX,mouseY,useFinalPosition){const options=this.options;const{x,y}=this.getProps(['x','y'],useFinalPosition);return Math.pow(mouseX-x,2)+Math.pow(mouseY-y,2)<Math.pow(options.hitRadius+options.radius,2);}
inXRange(mouseX,useFinalPosition){return inRange$1(this,mouseX,'x',useFinalPosition);}
inYRange(mouseY,useFinalPosition){return inRange$1(this,mouseY,'y',useFinalPosition);}
getCenterPoint(useFinalPosition){const{x,y}=this.getProps(['x','y'],useFinalPosition);return{x,y};}
size(options){options=options||this.options||{};let radius=options.radius||0;radius=Math.max(radius,radius&&options.hoverRadius||0);const borderWidth=radius&&options.borderWidth||0;return(radius+borderWidth)*2;}
draw(ctx,area){const options=this.options;if(this.skip||options.radius<0.1||!_isPointInArea(this,area,this.size(options)/2)){return;}
ctx.strokeStyle=options.borderColor;ctx.lineWidth=options.borderWidth;ctx.fillStyle=options.backgroundColor;drawPoint(ctx,options,this.x,this.y);}
getRange(){const options=this.options||{};return options.radius+options.hitRadius;}}
function getBarBounds(bar,useFinalPosition){const{x,y,base,width,height}=bar.getProps(['x','y','base','width','height'],useFinalPosition);let left,right,top,bottom,half;if(bar.horizontal){half=height/2;left=Math.min(x,base);right=Math.max(x,base);top=y-half;bottom=y+half;}else{half=width/2;left=x-half;right=x+half;top=Math.min(y,base);bottom=Math.max(y,base);}
return{left,top,right,bottom};}
function skipOrLimit(skip,value,min,max){return skip?0:_limitValue(value,min,max);}
function parseBorderWidth(bar,maxW,maxH){const value=bar.options.borderWidth;const skip=bar.borderSkipped;const o=toTRBL(value);return{t:skipOrLimit(skip.top,o.top,0,maxH),r:skipOrLimit(skip.right,o.right,0,maxW),b:skipOrLimit(skip.bottom,o.bottom,0,maxH),l:skipOrLimit(skip.left,o.left,0,maxW)};}
function parseBorderRadius(bar,maxW,maxH){const{enableBorderRadius}=bar.getProps(['enableBorderRadius']);const value=bar.options.borderRadius;const o=toTRBLCorners(value);const maxR=Math.min(maxW,maxH);const skip=bar.borderSkipped;const enableBorder=enableBorderRadius||isObject(value);return{topLeft:skipOrLimit(!enableBorder||skip.top||skip.left,o.topLeft,0,maxR),topRight:skipOrLimit(!enableBorder||skip.top||skip.right,o.topRight,0,maxR),bottomLeft:skipOrLimit(!enableBorder||skip.bottom||skip.left,o.bottomLeft,0,maxR),bottomRight:skipOrLimit(!enableBorder||skip.bottom||skip.right,o.bottomRight,0,maxR)};}
function boundingRects(bar){const bounds=getBarBounds(bar);const width=bounds.right-bounds.left;const height=bounds.bottom-bounds.top;const border=parseBorderWidth(bar,width/2,height/2);const radius=parseBorderRadius(bar,width/2,height/2);return{outer:{x:bounds.left,y:bounds.top,w:width,h:height,radius},inner:{x:bounds.left+border.l,y:bounds.top+border.t,w:width-border.l-border.r,h:height-border.t-border.b,radius:{topLeft:Math.max(0,radius.topLeft-Math.max(border.t,border.l)),topRight:Math.max(0,radius.topRight-Math.max(border.t,border.r)),bottomLeft:Math.max(0,radius.bottomLeft-Math.max(border.b,border.l)),bottomRight:Math.max(0,radius.bottomRight-Math.max(border.b,border.r))}}};}
function inRange(bar,x,y,useFinalPosition){const skipX=x===null;const skipY=y===null;const skipBoth=skipX&&skipY;const bounds=bar&&!skipBoth&&getBarBounds(bar,useFinalPosition);return bounds&&(skipX||_isBetween(x,bounds.left,bounds.right))&&(skipY||_isBetween(y,bounds.top,bounds.bottom));}
function hasRadius(radius){return radius.topLeft||radius.topRight||radius.bottomLeft||radius.bottomRight;}
function addNormalRectPath(ctx,rect){ctx.rect(rect.x,rect.y,rect.w,rect.h);}
function inflateRect(rect,amount,refRect={}){const x=rect.x!==refRect.x?-amount:0;const y=rect.y!==refRect.y?-amount:0;const w=(rect.x+rect.w!==refRect.x+refRect.w?amount:0)-x;const h=(rect.y+rect.h!==refRect.y+refRect.h?amount:0)-y;return{x:rect.x+x,y:rect.y+y,w:rect.w+w,h:rect.h+h,radius:rect.radius};}
class BarElement extends Element{static id='bar';static defaults={borderSkipped:'start',borderWidth:0,borderRadius:0,inflateAmount:'auto',pointStyle:undefined};static defaultRoutes={backgroundColor:'backgroundColor',borderColor:'borderColor'};constructor(cfg){super();this.options=undefined;this.horizontal=undefined;this.base=undefined;this.width=undefined;this.height=undefined;this.inflateAmount=undefined;if(cfg){Object.assign(this,cfg);}}
draw(ctx){const{inflateAmount,options:{borderColor,backgroundColor}}=this;const{inner,outer}=boundingRects(this);const addRectPath=hasRadius(outer.radius)?addRoundedRectPath:addNormalRectPath;ctx.save();if(outer.w!==inner.w||outer.h!==inner.h){ctx.beginPath();addRectPath(ctx,inflateRect(outer,inflateAmount,inner));ctx.clip();addRectPath(ctx,inflateRect(inner,-inflateAmount,outer));ctx.fillStyle=borderColor;ctx.fill('evenodd');}
ctx.beginPath();addRectPath(ctx,inflateRect(inner,inflateAmount));ctx.fillStyle=backgroundColor;ctx.fill();ctx.restore();}
inRange(mouseX,mouseY,useFinalPosition){return inRange(this,mouseX,mouseY,useFinalPosition);}
inXRange(mouseX,useFinalPosition){return inRange(this,mouseX,null,useFinalPosition);}
inYRange(mouseY,useFinalPosition){return inRange(this,null,mouseY,useFinalPosition);}
getCenterPoint(useFinalPosition){const{x,y,base,horizontal}=this.getProps(['x','y','base','horizontal'],useFinalPosition);return{x:horizontal?(x+base)/2:x,y:horizontal?y:(y+base)/2};}
getRange(axis){return axis==='x'?this.width/2:this.height/2;}}
var elements=Object.freeze({__proto__:null,ArcElement:ArcElement,BarElement:BarElement,LineElement:LineElement,PointElement:PointElement});const addIfString=(labels,raw,index,addedLabels)=>{if(typeof raw==='string'){index=labels.push(raw)-1;addedLabels.unshift({index,label:raw});}else if(isNaN(raw)){index=null;}
return index;};function findOrAddLabel(labels,raw,index,addedLabels){const first=labels.indexOf(raw);if(first===-1){return addIfString(labels,raw,index,addedLabels);}
const last=labels.lastIndexOf(raw);return first!==last?index:first;}
const validIndex=(index,max)=>index===null?null:_limitValue(Math.round(index),0,max);function _getLabelForValue(value){const labels=this.getLabels();if(value>=0&&value<labels.length){return labels[value];}
return value;}
class CategoryScale extends Scale{static id='category';static defaults={ticks:{callback:_getLabelForValue}};constructor(cfg){super(cfg);this._startValue=undefined;this._valueRange=0;this._addedLabels=[];}
init(scaleOptions){const added=this._addedLabels;if(added.length){const labels=this.getLabels();for(const{index,label}of added){if(labels[index]===label){labels.splice(index,1);}}
this._addedLabels=[];}
super.init(scaleOptions);}
parse(raw,index){if(isNullOrUndef(raw)){return null;}
const labels=this.getLabels();index=isFinite(index)&&labels[index]===raw?index:findOrAddLabel(labels,raw,valueOrDefault(index,raw),this._addedLabels);return validIndex(index,labels.length-1);}
determineDataLimits(){const{minDefined,maxDefined}=this.getUserBounds();let{min,max}=this.getMinMax(true);if(this.options.bounds==='ticks'){if(!minDefined){min=0;}
if(!maxDefined){max=this.getLabels().length-1;}}
this.min=min;this.max=max;}
buildTicks(){const min=this.min;const max=this.max;const offset=this.options.offset;const ticks=[];let labels=this.getLabels();labels=min===0&&max===labels.length-1?labels:labels.slice(min,max+1);this._valueRange=Math.max(labels.length-(offset?0:1),1);this._startValue=this.min-(offset?0.5:0);for(let value=min;value<=max;value++){ticks.push({value});}
return ticks;}
getLabelForValue(value){return _getLabelForValue.call(this,value);}
configure(){super.configure();if(!this.isHorizontal()){this._reversePixels=!this._reversePixels;}}
getPixelForValue(value){if(typeof value!=='number'){value=this.parse(value);}
return value===null?NaN:this.getPixelForDecimal((value-this._startValue)/this._valueRange);}
getPixelForTick(index){const ticks=this.ticks;if(index<0||index>ticks.length-1){return null;}
return this.getPixelForValue(ticks[index].value);}
getValueForPixel(pixel){return Math.round(this._startValue+this.getDecimalForPixel(pixel)*this._valueRange);}
getBasePixel(){return this.bottom;}}
function generateTicks$1(generationOptions,dataRange){const ticks=[];const MIN_SPACING=1e-14;const{bounds,step,min,max,precision,count,maxTicks,maxDigits,includeBounds}=generationOptions;const unit=step||1;const maxSpaces=maxTicks-1;const{min:rmin,max:rmax}=dataRange;const minDefined=!isNullOrUndef(min);const maxDefined=!isNullOrUndef(max);const countDefined=!isNullOrUndef(count);const minSpacing=(rmax-rmin)/(maxDigits+1);let spacing=niceNum((rmax-rmin)/maxSpaces/unit)*unit;let factor,niceMin,niceMax,numSpaces;if(spacing<MIN_SPACING&&!minDefined&&!maxDefined){return[{value:rmin},{value:rmax}];}
numSpaces=Math.ceil(rmax/spacing)-Math.floor(rmin/spacing);if(numSpaces>maxSpaces){spacing=niceNum(numSpaces*spacing/maxSpaces/unit)*unit;}
if(!isNullOrUndef(precision)){factor=Math.pow(10,precision);spacing=Math.ceil(spacing*factor)/factor;}
if(bounds==='ticks'){niceMin=Math.floor(rmin/spacing)*spacing;niceMax=Math.ceil(rmax/spacing)*spacing;}else{niceMin=rmin;niceMax=rmax;}
if(minDefined&&maxDefined&&step&&almostWhole((max-min)/step,spacing/1000)){numSpaces=Math.round(Math.min((max-min)/spacing,maxTicks));spacing=(max-min)/numSpaces;niceMin=min;niceMax=max;}else if(countDefined){niceMin=minDefined?min:niceMin;niceMax=maxDefined?max:niceMax;numSpaces=count-1;spacing=(niceMax-niceMin)/numSpaces;}else{numSpaces=(niceMax-niceMin)/spacing;if(almostEquals(numSpaces,Math.round(numSpaces),spacing/1000)){numSpaces=Math.round(numSpaces);}else{numSpaces=Math.ceil(numSpaces);}}
const decimalPlaces=Math.max(_decimalPlaces(spacing),_decimalPlaces(niceMin));factor=Math.pow(10,isNullOrUndef(precision)?decimalPlaces:precision);niceMin=Math.round(niceMin*factor)/factor;niceMax=Math.round(niceMax*factor)/factor;let j=0;if(minDefined){if(includeBounds&&niceMin!==min){ticks.push({value:min});if(niceMin<min){j++;}
if(almostEquals(Math.round((niceMin+j*spacing)*factor)/factor,min,relativeLabelSize(min,minSpacing,generationOptions))){j++;}}else if(niceMin<min){j++;}}
for(;j<numSpaces;++j){const tickValue=Math.round((niceMin+j*spacing)*factor)/factor;if(maxDefined&&tickValue>max){break;}
ticks.push({value:tickValue});}
if(maxDefined&&includeBounds&&niceMax!==max){if(ticks.length&&almostEquals(ticks[ticks.length-1].value,max,relativeLabelSize(max,minSpacing,generationOptions))){ticks[ticks.length-1].value=max;}else{ticks.push({value:max});}}else if(!maxDefined||niceMax===max){ticks.push({value:niceMax});}
return ticks;}
function relativeLabelSize(value,minSpacing,{horizontal,minRotation}){const rad=toRadians(minRotation);const ratio=(horizontal?Math.sin(rad):Math.cos(rad))||0.001;const length=0.75*minSpacing*(''+value).length;return Math.min(minSpacing/ratio,length);}
class LinearScaleBase extends Scale{constructor(cfg){super(cfg);this.start=undefined;this.end=undefined;this._startValue=undefined;this._endValue=undefined;this._valueRange=0;}
parse(raw,index){if(isNullOrUndef(raw)){return null;}
if((typeof raw==='number'||raw instanceof Number)&&!isFinite(+raw)){return null;}
return+raw;}
handleTickRangeOptions(){const{beginAtZero}=this.options;const{minDefined,maxDefined}=this.getUserBounds();let{min,max}=this;const setMin=(v)=>min=minDefined?min:v;const setMax=(v)=>max=maxDefined?max:v;if(beginAtZero){const minSign=sign(min);const maxSign=sign(max);if(minSign<0&&maxSign<0){setMax(0);}else if(minSign>0&&maxSign>0){setMin(0);}}
if(min===max){let offset=max===0?1:Math.abs(max*0.05);setMax(max+offset);if(!beginAtZero){setMin(min-offset);}}
this.min=min;this.max=max;}
getTickLimit(){const tickOpts=this.options.ticks;let{maxTicksLimit,stepSize}=tickOpts;let maxTicks;if(stepSize){maxTicks=Math.ceil(this.max/stepSize)-Math.floor(this.min/stepSize)+1;if(maxTicks>1000){console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);maxTicks=1000;}}else{maxTicks=this.computeTickLimit();maxTicksLimit=maxTicksLimit||11;}
if(maxTicksLimit){maxTicks=Math.min(maxTicksLimit,maxTicks);}
return maxTicks;}
computeTickLimit(){return Number.POSITIVE_INFINITY;}
buildTicks(){const opts=this.options;const tickOpts=opts.ticks;let maxTicks=this.getTickLimit();maxTicks=Math.max(2,maxTicks);const numericGeneratorOptions={maxTicks,bounds:opts.bounds,min:opts.min,max:opts.max,precision:tickOpts.precision,step:tickOpts.stepSize,count:tickOpts.count,maxDigits:this._maxDigits(),horizontal:this.isHorizontal(),minRotation:tickOpts.minRotation||0,includeBounds:tickOpts.includeBounds!==false};const dataRange=this._range||this;const ticks=generateTicks$1(numericGeneratorOptions,dataRange);if(opts.bounds==='ticks'){_setMinAndMaxByKey(ticks,this,'value');}
if(opts.reverse){ticks.reverse();this.start=this.max;this.end=this.min;}else{this.start=this.min;this.end=this.max;}
return ticks;}
configure(){const ticks=this.ticks;let start=this.min;let end=this.max;super.configure();if(this.options.offset&&ticks.length){const offset=(end-start)/Math.max(ticks.length-1,1)/2;start-=offset;end+=offset;}
this._startValue=start;this._endValue=end;this._valueRange=end-start;}
getLabelForValue(value){return formatNumber(value,this.chart.options.locale,this.options.ticks.format);}}
class LinearScale extends LinearScaleBase{static id='linear';static defaults={ticks:{callback:Ticks.formatters.numeric}};determineDataLimits(){const{min,max}=this.getMinMax(true);this.min=isNumberFinite(min)?min:0;this.max=isNumberFinite(max)?max:1;this.handleTickRangeOptions();}
computeTickLimit(){const horizontal=this.isHorizontal();const length=horizontal?this.width:this.height;const minRotation=toRadians(this.options.ticks.minRotation);const ratio=(horizontal?Math.sin(minRotation):Math.cos(minRotation))||0.001;const tickFont=this._resolveTickFontOptions(0);return Math.ceil(length/Math.min(40,tickFont.lineHeight/ratio));}
getPixelForValue(value){return value===null?NaN:this.getPixelForDecimal((value-this._startValue)/this._valueRange);}
getValueForPixel(pixel){return this._startValue+this.getDecimalForPixel(pixel)*this._valueRange;}}
const log10Floor=(v)=>Math.floor(log10(v));const changeExponent=(v,m)=>Math.pow(10,log10Floor(v)+m);function isMajor(tickVal){const remain=tickVal/Math.pow(10,log10Floor(tickVal));return remain===1;}
function steps(min,max,rangeExp){const rangeStep=Math.pow(10,rangeExp);const start=Math.floor(min/rangeStep);const end=Math.ceil(max/rangeStep);return end-start;}
function startExp(min,max){const range=max-min;let rangeExp=log10Floor(range);while(steps(min,max,rangeExp)>10){rangeExp++;}
while(steps(min,max,rangeExp)<10){rangeExp--;}
return Math.min(rangeExp,log10Floor(min));}
function generateTicks(generationOptions,{min,max}){min=finiteOrDefault(generationOptions.min,min);const ticks=[];const minExp=log10Floor(min);let exp=startExp(min,max);let precision=exp<0?Math.pow(10,Math.abs(exp)):1;const stepSize=Math.pow(10,exp);const base=minExp>exp?Math.pow(10,minExp):0;const start=Math.round((min-base)*precision)/precision;const offset=Math.floor((min-base)/stepSize/10)*stepSize*10;let significand=Math.floor((start-offset)/Math.pow(10,exp));let value=finiteOrDefault(generationOptions.min,Math.round((base+offset+significand*Math.pow(10,exp))*precision)/precision);while(value<max){ticks.push({value,major:isMajor(value),significand});if(significand>=10){significand=significand<15?15:20;}else{significand++;}
if(significand>=20){exp++;significand=2;precision=exp>=0?1:precision;}
value=Math.round((base+offset+significand*Math.pow(10,exp))*precision)/precision;}
const lastTick=finiteOrDefault(generationOptions.max,value);ticks.push({value:lastTick,major:isMajor(lastTick),significand});return ticks;}
class LogarithmicScale extends Scale{static id='logarithmic';static defaults={ticks:{callback:Ticks.formatters.logarithmic,major:{enabled:true}}};constructor(cfg){super(cfg);this.start=undefined;this.end=undefined;this._startValue=undefined;this._valueRange=0;}
parse(raw,index){const value=LinearScaleBase.prototype.parse.apply(this,[raw,index]);if(value===0){this._zero=true;return undefined;}
return isNumberFinite(value)&&value>0?value:null;}
determineDataLimits(){const{min,max}=this.getMinMax(true);this.min=isNumberFinite(min)?Math.max(0,min):null;this.max=isNumberFinite(max)?Math.max(0,max):null;if(this.options.beginAtZero){this._zero=true;}
if(this._zero&&this.min!==this._suggestedMin&&!isNumberFinite(this._userMin)){this.min=min===changeExponent(this.min,0)?changeExponent(this.min,-1):changeExponent(this.min,0);}
this.handleTickRangeOptions();}
handleTickRangeOptions(){const{minDefined,maxDefined}=this.getUserBounds();let min=this.min;let max=this.max;const setMin=(v)=>min=minDefined?min:v;const setMax=(v)=>max=maxDefined?max:v;if(min===max){if(min<=0){setMin(1);setMax(10);}else{setMin(changeExponent(min,-1));setMax(changeExponent(max,+1));}}
if(min<=0){setMin(changeExponent(max,-1));}
if(max<=0){setMax(changeExponent(min,+1));}
this.min=min;this.max=max;}
buildTicks(){const opts=this.options;const generationOptions={min:this._userMin,max:this._userMax};const ticks=generateTicks(generationOptions,this);if(opts.bounds==='ticks'){_setMinAndMaxByKey(ticks,this,'value');}
if(opts.reverse){ticks.reverse();this.start=this.max;this.end=this.min;}else{this.start=this.min;this.end=this.max;}
return ticks;}
getLabelForValue(value){return value===undefined?'0':formatNumber(value,this.chart.options.locale,this.options.ticks.format);}
configure(){const start=this.min;super.configure();this._startValue=log10(start);this._valueRange=log10(this.max)-log10(start);}
getPixelForValue(value){if(value===undefined||value===0){value=this.min;}
if(value===null||isNaN(value)){return NaN;}
return this.getPixelForDecimal(value===this.min?0:(log10(value)-this._startValue)/this._valueRange);}
getValueForPixel(pixel){const decimal=this.getDecimalForPixel(pixel);return Math.pow(10,this._startValue+decimal*this._valueRange);}}
function getTickBackdropHeight(opts){const tickOpts=opts.ticks;if(tickOpts.display&&opts.display){const padding=toPadding(tickOpts.backdropPadding);return valueOrDefault(tickOpts.font&&tickOpts.font.size,defaults.font.size)+padding.height;}
return 0;}
function measureLabelSize(ctx,font,label){label=isArray(label)?label:[label];return{w:_longestText(ctx,font.string,label),h:label.length*font.lineHeight};}
function determineLimits(angle,pos,size,min,max){if(angle===min||angle===max){return{start:pos-size/2,end:pos+size/2};}else if(angle<min||angle>max){return{start:pos-size,end:pos};}
return{start:pos,end:pos+size};}
function fitWithPointLabels(scale){const orig={l:scale.left+scale._padding.left,r:scale.right-scale._padding.right,t:scale.top+scale._padding.top,b:scale.bottom-scale._padding.bottom};const limits=Object.assign({},orig);const labelSizes=[];const padding=[];const valueCount=scale._pointLabels.length;const pointLabelOpts=scale.options.pointLabels;const additionalAngle=pointLabelOpts.centerPointLabels?PI/valueCount:0;for(let i=0;i<valueCount;i++){const opts=pointLabelOpts.setContext(scale.getPointLabelContext(i));padding[i]=opts.padding;const pointPosition=scale.getPointPosition(i,scale.drawingArea+padding[i],additionalAngle);const plFont=toFont(opts.font);const textSize=measureLabelSize(scale.ctx,plFont,scale._pointLabels[i]);labelSizes[i]=textSize;const angleRadians=_normalizeAngle(scale.getIndexAngle(i)+additionalAngle);const angle=Math.round(toDegrees(angleRadians));const hLimits=determineLimits(angle,pointPosition.x,textSize.w,0,180);const vLimits=determineLimits(angle,pointPosition.y,textSize.h,90,270);updateLimits(limits,orig,angleRadians,hLimits,vLimits);}
scale.setCenterPoint(orig.l-limits.l,limits.r-orig.r,orig.t-limits.t,limits.b-orig.b);scale._pointLabelItems=buildPointLabelItems(scale,labelSizes,padding);}
function updateLimits(limits,orig,angle,hLimits,vLimits){const sin=Math.abs(Math.sin(angle));const cos=Math.abs(Math.cos(angle));let x=0;let y=0;if(hLimits.start<orig.l){x=(orig.l-hLimits.start)/sin;limits.l=Math.min(limits.l,orig.l-x);}else if(hLimits.end>orig.r){x=(hLimits.end-orig.r)/sin;limits.r=Math.max(limits.r,orig.r+x);}
if(vLimits.start<orig.t){y=(orig.t-vLimits.start)/cos;limits.t=Math.min(limits.t,orig.t-y);}else if(vLimits.end>orig.b){y=(vLimits.end-orig.b)/cos;limits.b=Math.max(limits.b,orig.b+y);}}
function createPointLabelItem(scale,index,itemOpts){const outerDistance=scale.drawingArea;const{extra,additionalAngle,padding,size}=itemOpts;const pointLabelPosition=scale.getPointPosition(index,outerDistance+extra+padding,additionalAngle);const angle=Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle+HALF_PI)));const y=yForAngle(pointLabelPosition.y,size.h,angle);const textAlign=getTextAlignForAngle(angle);const left=leftForTextAlign(pointLabelPosition.x,size.w,textAlign);return{visible:true,x:pointLabelPosition.x,y,textAlign,left,top:y,right:left+size.w,bottom:y+size.h};}
function isNotOverlapped(item,area){if(!area){return true;}
const{left,top,right,bottom}=item;const apexesInArea=_isPointInArea({x:left,y:top},area)||_isPointInArea({x:left,y:bottom},area)||_isPointInArea({x:right,y:top},area)||_isPointInArea({x:right,y:bottom},area);return!apexesInArea;}
function buildPointLabelItems(scale,labelSizes,padding){const items=[];const valueCount=scale._pointLabels.length;const opts=scale.options;const{centerPointLabels,display}=opts.pointLabels;const itemOpts={extra:getTickBackdropHeight(opts)/2,additionalAngle:centerPointLabels?PI/valueCount:0};let area;for(let i=0;i<valueCount;i++){itemOpts.padding=padding[i];itemOpts.size=labelSizes[i];const item=createPointLabelItem(scale,i,itemOpts);items.push(item);if(display==='auto'){item.visible=isNotOverlapped(item,area);if(item.visible){area=item;}}}
return items;}
function getTextAlignForAngle(angle){if(angle===0||angle===180){return'center';}else if(angle<180){return'left';}
return'right';}
function leftForTextAlign(x,w,align){if(align==='right'){x-=w;}else if(align==='center'){x-=w/2;}
return x;}
function yForAngle(y,h,angle){if(angle===90||angle===270){y-=h/2;}else if(angle>270||angle<90){y-=h;}
return y;}
function drawPointLabelBox(ctx,opts,item){const{left,top,right,bottom}=item;const{backdropColor}=opts;if(!isNullOrUndef(backdropColor)){const borderRadius=toTRBLCorners(opts.borderRadius);const padding=toPadding(opts.backdropPadding);ctx.fillStyle=backdropColor;const backdropLeft=left-padding.left;const backdropTop=top-padding.top;const backdropWidth=right-left+padding.width;const backdropHeight=bottom-top+padding.height;if(Object.values(borderRadius).some((v)=>v!==0)){ctx.beginPath();addRoundedRectPath(ctx,{x:backdropLeft,y:backdropTop,w:backdropWidth,h:backdropHeight,radius:borderRadius});ctx.fill();}else{ctx.fillRect(backdropLeft,backdropTop,backdropWidth,backdropHeight);}}}
function drawPointLabels(scale,labelCount){const{ctx,options:{pointLabels}}=scale;for(let i=labelCount-1;i>=0;i--){const item=scale._pointLabelItems[i];if(!item.visible){continue;}
const optsAtIndex=pointLabels.setContext(scale.getPointLabelContext(i));drawPointLabelBox(ctx,optsAtIndex,item);const plFont=toFont(optsAtIndex.font);const{x,y,textAlign}=item;renderText(ctx,scale._pointLabels[i],x,y+plFont.lineHeight/2,plFont,{color:optsAtIndex.color,textAlign:textAlign,textBaseline:'middle'});}}
function pathRadiusLine(scale,radius,circular,labelCount){const{ctx}=scale;if(circular){ctx.arc(scale.xCenter,scale.yCenter,radius,0,TAU);}else{let pointPosition=scale.getPointPosition(0,radius);ctx.moveTo(pointPosition.x,pointPosition.y);for(let i=1;i<labelCount;i++){pointPosition=scale.getPointPosition(i,radius);ctx.lineTo(pointPosition.x,pointPosition.y);}}}
function drawRadiusLine(scale,gridLineOpts,radius,labelCount,borderOpts){const ctx=scale.ctx;const circular=gridLineOpts.circular;const{color,lineWidth}=gridLineOpts;if(!circular&&!labelCount||!color||!lineWidth||radius<0){return;}
ctx.save();ctx.strokeStyle=color;ctx.lineWidth=lineWidth;ctx.setLineDash(borderOpts.dash||[]);ctx.lineDashOffset=borderOpts.dashOffset;ctx.beginPath();pathRadiusLine(scale,radius,circular,labelCount);ctx.closePath();ctx.stroke();ctx.restore();}
function createPointLabelContext(parent,index,label){return createContext(parent,{label,index,type:'pointLabel'});}
class RadialLinearScale extends LinearScaleBase{static id='radialLinear';static defaults={display:true,animate:true,position:'chartArea',angleLines:{display:true,lineWidth:1,borderDash:[],borderDashOffset:0.0},grid:{circular:false},startAngle:0,ticks:{showLabelBackdrop:true,callback:Ticks.formatters.numeric},pointLabels:{backdropColor:undefined,backdropPadding:2,display:true,font:{size:10},callback(label){return label;},padding:5,centerPointLabels:false}};static defaultRoutes={'angleLines.color':'borderColor','pointLabels.color':'color','ticks.color':'color'};static descriptors={angleLines:{_fallback:'grid'}};constructor(cfg){super(cfg);this.xCenter=undefined;this.yCenter=undefined;this.drawingArea=undefined;this._pointLabels=[];this._pointLabelItems=[];}
setDimensions(){const padding=this._padding=toPadding(getTickBackdropHeight(this.options)/2);const w=this.width=this.maxWidth-padding.width;const h=this.height=this.maxHeight-padding.height;this.xCenter=Math.floor(this.left+w/2+padding.left);this.yCenter=Math.floor(this.top+h/2+padding.top);this.drawingArea=Math.floor(Math.min(w,h)/2);}
determineDataLimits(){const{min,max}=this.getMinMax(false);this.min=isNumberFinite(min)&&!isNaN(min)?min:0;this.max=isNumberFinite(max)&&!isNaN(max)?max:0;this.handleTickRangeOptions();}
computeTickLimit(){return Math.ceil(this.drawingArea/getTickBackdropHeight(this.options));}
generateTickLabels(ticks){LinearScaleBase.prototype.generateTickLabels.call(this,ticks);this._pointLabels=this.getLabels().map((value,index)=>{const label=callback(this.options.pointLabels.callback,[value,index],this);return label||label===0?label:'';}).filter((v,i)=>this.chart.getDataVisibility(i));}
fit(){const opts=this.options;if(opts.display&&opts.pointLabels.display){fitWithPointLabels(this);}else{this.setCenterPoint(0,0,0,0);}}
setCenterPoint(leftMovement,rightMovement,topMovement,bottomMovement){this.xCenter+=Math.floor((leftMovement-rightMovement)/2);this.yCenter+=Math.floor((topMovement-bottomMovement)/2);this.drawingArea-=Math.min(this.drawingArea/2,Math.max(leftMovement,rightMovement,topMovement,bottomMovement));}
getIndexAngle(index){const angleMultiplier=TAU/(this._pointLabels.length||1);const startAngle=this.options.startAngle||0;return _normalizeAngle(index*angleMultiplier+toRadians(startAngle));}
getDistanceFromCenterForValue(value){if(isNullOrUndef(value)){return NaN;}
const scalingFactor=this.drawingArea/(this.max-this.min);if(this.options.reverse){return(this.max-value)*scalingFactor;}
return(value-this.min)*scalingFactor;}
getValueForDistanceFromCenter(distance){if(isNullOrUndef(distance)){return NaN;}
const scaledDistance=distance/(this.drawingArea/(this.max-this.min));return this.options.reverse?this.max-scaledDistance:this.min+scaledDistance;}
getPointLabelContext(index){const pointLabels=this._pointLabels||[];if(index>=0&&index<pointLabels.length){const pointLabel=pointLabels[index];return createPointLabelContext(this.getContext(),index,pointLabel);}}
getPointPosition(index,distanceFromCenter,additionalAngle=0){const angle=this.getIndexAngle(index)-HALF_PI+additionalAngle;return{x:Math.cos(angle)*distanceFromCenter+this.xCenter,y:Math.sin(angle)*distanceFromCenter+this.yCenter,angle};}
getPointPositionForValue(index,value){return this.getPointPosition(index,this.getDistanceFromCenterForValue(value));}
getBasePosition(index){return this.getPointPositionForValue(index||0,this.getBaseValue());}
getPointLabelPosition(index){const{left,top,right,bottom}=this._pointLabelItems[index];return{left,top,right,bottom};}
drawBackground(){const{backgroundColor,grid:{circular}}=this.options;if(backgroundColor){const ctx=this.ctx;ctx.save();ctx.beginPath();pathRadiusLine(this,this.getDistanceFromCenterForValue(this._endValue),circular,this._pointLabels.length);ctx.closePath();ctx.fillStyle=backgroundColor;ctx.fill();ctx.restore();}}
drawGrid(){const ctx=this.ctx;const opts=this.options;const{angleLines,grid,border}=opts;const labelCount=this._pointLabels.length;let i,offset,position;if(opts.pointLabels.display){drawPointLabels(this,labelCount);}
if(grid.display){this.ticks.forEach((tick,index)=>{if(index!==0||index===0&&this.min<0){offset=this.getDistanceFromCenterForValue(tick.value);const context=this.getContext(index);const optsAtIndex=grid.setContext(context);const optsAtIndexBorder=border.setContext(context);drawRadiusLine(this,optsAtIndex,offset,labelCount,optsAtIndexBorder);}});}
if(angleLines.display){ctx.save();for(i=labelCount-1;i>=0;i--){const optsAtIndex=angleLines.setContext(this.getPointLabelContext(i));const{color,lineWidth}=optsAtIndex;if(!lineWidth||!color){continue;}
ctx.lineWidth=lineWidth;ctx.strokeStyle=color;ctx.setLineDash(optsAtIndex.borderDash);ctx.lineDashOffset=optsAtIndex.borderDashOffset;offset=this.getDistanceFromCenterForValue(opts.reverse?this.min:this.max);position=this.getPointPosition(i,offset);ctx.beginPath();ctx.moveTo(this.xCenter,this.yCenter);ctx.lineTo(position.x,position.y);ctx.stroke();}
ctx.restore();}}
drawBorder(){}
drawLabels(){const ctx=this.ctx;const opts=this.options;const tickOpts=opts.ticks;if(!tickOpts.display){return;}
const startAngle=this.getIndexAngle(0);let offset,width;ctx.save();ctx.translate(this.xCenter,this.yCenter);ctx.rotate(startAngle);ctx.textAlign='center';ctx.textBaseline='middle';this.ticks.forEach((tick,index)=>{if(index===0&&this.min>=0&&!opts.reverse){return;}
const optsAtIndex=tickOpts.setContext(this.getContext(index));const tickFont=toFont(optsAtIndex.font);offset=this.getDistanceFromCenterForValue(this.ticks[index].value);if(optsAtIndex.showLabelBackdrop){ctx.font=tickFont.string;width=ctx.measureText(tick.label).width;ctx.fillStyle=optsAtIndex.backdropColor;const padding=toPadding(optsAtIndex.backdropPadding);ctx.fillRect(-width/2-padding.left,-offset-tickFont.size/2-padding.top,width+padding.width,tickFont.size+padding.height);}
renderText(ctx,tick.label,0,-offset,tickFont,{color:optsAtIndex.color,strokeColor:optsAtIndex.textStrokeColor,strokeWidth:optsAtIndex.textStrokeWidth});});ctx.restore();}
drawTitle(){}}
const INTERVALS={millisecond:{common:true,size:1,steps:1000},second:{common:true,size:1000,steps:60},minute:{common:true,size:60000,steps:60},hour:{common:true,size:3600000,steps:24},day:{common:true,size:86400000,steps:30},week:{common:false,size:604800000,steps:4},month:{common:true,size:2.628e9,steps:12},quarter:{common:false,size:7.884e9,steps:4},year:{common:true,size:3.154e10}};const UNITS=Object.keys(INTERVALS);function sorter(a,b){return a-b;}
function parse(scale,input){if(isNullOrUndef(input)){return null;}
const adapter=scale._adapter;const{parser,round,isoWeekday}=scale._parseOpts;let value=input;if(typeof parser==='function'){value=parser(value);}
if(!isNumberFinite(value)){value=typeof parser==='string'?adapter.parse(value,parser):adapter.parse(value);}
if(value===null){return null;}
if(round){value=round==='week'&&(isNumber(isoWeekday)||isoWeekday===true)?adapter.startOf(value,'isoWeek',isoWeekday):adapter.startOf(value,round);}
return+value;}
function determineUnitForAutoTicks(minUnit,min,max,capacity){const ilen=UNITS.length;for(let i=UNITS.indexOf(minUnit);i<ilen-1;++i){const interval=INTERVALS[UNITS[i]];const factor=interval.steps?interval.steps:Number.MAX_SAFE_INTEGER;if(interval.common&&Math.ceil((max-min)/(factor*interval.size))<=capacity){return UNITS[i];}}
return UNITS[ilen-1];}
function determineUnitForFormatting(scale,numTicks,minUnit,min,max){for(let i=UNITS.length-1;i>=UNITS.indexOf(minUnit);i--){const unit=UNITS[i];if(INTERVALS[unit].common&&scale._adapter.diff(max,min,unit)>=numTicks-1){return unit;}}
return UNITS[minUnit?UNITS.indexOf(minUnit):0];}
function determineMajorUnit(unit){for(let i=UNITS.indexOf(unit)+1,ilen=UNITS.length;i<ilen;++i){if(INTERVALS[UNITS[i]].common){return UNITS[i];}}}
function addTick(ticks,time,timestamps){if(!timestamps){ticks[time]=true;}else if(timestamps.length){const{lo,hi}=_lookup(timestamps,time);const timestamp=timestamps[lo]>=time?timestamps[lo]:timestamps[hi];ticks[timestamp]=true;}}
function setMajorTicks(scale,ticks,map,majorUnit){const adapter=scale._adapter;const first=+adapter.startOf(ticks[0].value,majorUnit);const last=ticks[ticks.length-1].value;let major,index;for(major=first;major<=last;major=+adapter.add(major,1,majorUnit)){index=map[major];if(index>=0){ticks[index].major=true;}}
return ticks;}
function ticksFromTimestamps(scale,values,majorUnit){const ticks=[];const map={};const ilen=values.length;let i,value;for(i=0;i<ilen;++i){value=values[i];map[value]=i;ticks.push({value,major:false});}
return ilen===0||!majorUnit?ticks:setMajorTicks(scale,ticks,map,majorUnit);}
class TimeScale extends Scale{static id='time';static defaults={bounds:'data',adapters:{},time:{parser:false,unit:false,round:false,isoWeekday:false,minUnit:'millisecond',displayFormats:{}},ticks:{source:'auto',callback:false,major:{enabled:false}}};constructor(props){super(props);this._cache={data:[],labels:[],all:[]};this._unit='day';this._majorUnit=undefined;this._offsets={};this._normalized=false;this._parseOpts=undefined;}
init(scaleOpts,opts={}){const time=scaleOpts.time||(scaleOpts.time={});const adapter=this._adapter=new _adapters._date(scaleOpts.adapters.date);adapter.init(opts);mergeIf(time.displayFormats,adapter.formats());this._parseOpts={parser:time.parser,round:time.round,isoWeekday:time.isoWeekday};super.init(scaleOpts);this._normalized=opts.normalized;}
parse(raw,index){if(raw===undefined){return null;}
return parse(this,raw);}
beforeLayout(){super.beforeLayout();this._cache={data:[],labels:[],all:[]};}
determineDataLimits(){const options=this.options;const adapter=this._adapter;const unit=options.time.unit||'day';let{min,max,minDefined,maxDefined}=this.getUserBounds();function _applyBounds(bounds){if(!minDefined&&!isNaN(bounds.min)){min=Math.min(min,bounds.min);}
if(!maxDefined&&!isNaN(bounds.max)){max=Math.max(max,bounds.max);}}
if(!minDefined||!maxDefined){_applyBounds(this._getLabelBounds());if(options.bounds!=='ticks'||options.ticks.source!=='labels'){_applyBounds(this.getMinMax(false));}}
min=isNumberFinite(min)&&!isNaN(min)?min:+adapter.startOf(Date.now(),unit);max=isNumberFinite(max)&&!isNaN(max)?max:+adapter.endOf(Date.now(),unit)+1;this.min=Math.min(min,max-1);this.max=Math.max(min+1,max);}
_getLabelBounds(){const arr=this.getLabelTimestamps();let min=Number.POSITIVE_INFINITY;let max=Number.NEGATIVE_INFINITY;if(arr.length){min=arr[0];max=arr[arr.length-1];}
return{min,max};}
buildTicks(){const options=this.options;const timeOpts=options.time;const tickOpts=options.ticks;const timestamps=tickOpts.source==='labels'?this.getLabelTimestamps():this._generate();if(options.bounds==='ticks'&&timestamps.length){this.min=this._userMin||timestamps[0];this.max=this._userMax||timestamps[timestamps.length-1];}
const min=this.min;const max=this.max;const ticks=_filterBetween(timestamps,min,max);this._unit=timeOpts.unit||(tickOpts.autoSkip?determineUnitForAutoTicks(timeOpts.minUnit,this.min,this.max,this._getLabelCapacity(min)):determineUnitForFormatting(this,ticks.length,timeOpts.minUnit,this.min,this.max));this._majorUnit=!tickOpts.major.enabled||this._unit==='year'?undefined:determineMajorUnit(this._unit);this.initOffsets(timestamps);if(options.reverse){ticks.reverse();}
return ticksFromTimestamps(this,ticks,this._majorUnit);}
afterAutoSkip(){if(this.options.offsetAfterAutoskip){this.initOffsets(this.ticks.map((tick)=>+tick.value));}}
initOffsets(timestamps=[]){let start=0;let end=0;let first,last;if(this.options.offset&&timestamps.length){first=this.getDecimalForValue(timestamps[0]);if(timestamps.length===1){start=1-first;}else{start=(this.getDecimalForValue(timestamps[1])-first)/2;}
last=this.getDecimalForValue(timestamps[timestamps.length-1]);if(timestamps.length===1){end=last;}else{end=(last-this.getDecimalForValue(timestamps[timestamps.length-2]))/2;}}
const limit=timestamps.length<3?0.5:0.25;start=_limitValue(start,0,limit);end=_limitValue(end,0,limit);this._offsets={start,end,factor:1/(start+1+end)};}
_generate(){const adapter=this._adapter;const min=this.min;const max=this.max;const options=this.options;const timeOpts=options.time;const minor=timeOpts.unit||determineUnitForAutoTicks(timeOpts.minUnit,min,max,this._getLabelCapacity(min));const stepSize=valueOrDefault(options.ticks.stepSize,1);const weekday=minor==='week'?timeOpts.isoWeekday:false;const hasWeekday=isNumber(weekday)||weekday===true;const ticks={};let first=min;let time,count;if(hasWeekday){first=+adapter.startOf(first,'isoWeek',weekday);}
first=+adapter.startOf(first,hasWeekday?'day':minor);if(adapter.diff(max,min,minor)>100000*stepSize){throw new Error(min+' and '+max+' are too far apart with stepSize of '+stepSize+' '+minor);}
const timestamps=options.ticks.source==='data'&&this.getDataTimestamps();for(time=first,count=0;time<max;time=+adapter.add(time,stepSize,minor),count++){addTick(ticks,time,timestamps);}
if(time===max||options.bounds==='ticks'||count===1){addTick(ticks,time,timestamps);}
return Object.keys(ticks).sort(sorter).map((x)=>+x);}
getLabelForValue(value){const adapter=this._adapter;const timeOpts=this.options.time;if(timeOpts.tooltipFormat){return adapter.format(value,timeOpts.tooltipFormat);}
return adapter.format(value,timeOpts.displayFormats.datetime);}
format(value,format){const options=this.options;const formats=options.time.displayFormats;const unit=this._unit;const fmt=format||formats[unit];return this._adapter.format(value,fmt);}
_tickFormatFunction(time,index,ticks,format){const options=this.options;const formatter=options.ticks.callback;if(formatter){return callback(formatter,[time,index,ticks],this);}
const formats=options.time.displayFormats;const unit=this._unit;const majorUnit=this._majorUnit;const minorFormat=unit&&formats[unit];const majorFormat=majorUnit&&formats[majorUnit];const tick=ticks[index];const major=majorUnit&&majorFormat&&tick&&tick.major;return this._adapter.format(time,format||(major?majorFormat:minorFormat));}
generateTickLabels(ticks){let i,ilen,tick;for(i=0,ilen=ticks.length;i<ilen;++i){tick=ticks[i];tick.label=this._tickFormatFunction(tick.value,i,ticks);}}
getDecimalForValue(value){return value===null?NaN:(value-this.min)/(this.max-this.min);}
getPixelForValue(value){const offsets=this._offsets;const pos=this.getDecimalForValue(value);return this.getPixelForDecimal((offsets.start+pos)*offsets.factor);}
getValueForPixel(pixel){const offsets=this._offsets;const pos=this.getDecimalForPixel(pixel)/offsets.factor-offsets.end;return this.min+pos*(this.max-this.min);}
_getLabelSize(label){const ticksOpts=this.options.ticks;const tickLabelWidth=this.ctx.measureText(label).width;const angle=toRadians(this.isHorizontal()?ticksOpts.maxRotation:ticksOpts.minRotation);const cosRotation=Math.cos(angle);const sinRotation=Math.sin(angle);const tickFontSize=this._resolveTickFontOptions(0).size;return{w:tickLabelWidth*cosRotation+tickFontSize*sinRotation,h:tickLabelWidth*sinRotation+tickFontSize*cosRotation};}
_getLabelCapacity(exampleTime){const timeOpts=this.options.time;const displayFormats=timeOpts.displayFormats;const format=displayFormats[timeOpts.unit]||displayFormats.millisecond;const exampleLabel=this._tickFormatFunction(exampleTime,0,ticksFromTimestamps(this,[exampleTime],this._majorUnit),format);const size=this._getLabelSize(exampleLabel);const capacity=Math.floor(this.isHorizontal()?this.width/size.w:this.height/size.h)-1;return capacity>0?capacity:1;}
getDataTimestamps(){let timestamps=this._cache.data||[];let i,ilen;if(timestamps.length){return timestamps;}
const metas=this.getMatchingVisibleMetas();if(this._normalized&&metas.length){return this._cache.data=metas[0].controller.getAllParsedValues(this);}
for(i=0,ilen=metas.length;i<ilen;++i){timestamps=timestamps.concat(metas[i].controller.getAllParsedValues(this));}
return this._cache.data=this.normalize(timestamps);}
getLabelTimestamps(){const timestamps=this._cache.labels||[];let i,ilen;if(timestamps.length){return timestamps;}
const labels=this.getLabels();for(i=0,ilen=labels.length;i<ilen;++i){timestamps.push(parse(this,labels[i]));}
return this._cache.labels=this._normalized?timestamps:this.normalize(timestamps);}
normalize(values){return _arrayUnique(values.sort(sorter));}}
function interpolate(table,val,reverse){let lo=0;let hi=table.length-1;let prevSource,nextSource,prevTarget,nextTarget;if(reverse){if(val>=table[lo].pos&&val<=table[hi].pos){({lo,hi}=_lookupByKey(table,'pos',val));}
({pos:prevSource,time:prevTarget}=table[lo]);({pos:nextSource,time:nextTarget}=table[hi]);}else{if(val>=table[lo].time&&val<=table[hi].time){({lo,hi}=_lookupByKey(table,'time',val));}
({time:prevSource,pos:prevTarget}=table[lo]);({time:nextSource,pos:nextTarget}=table[hi]);}
const span=nextSource-prevSource;return span?prevTarget+(nextTarget-prevTarget)*(val-prevSource)/span:prevTarget;}
class TimeSeriesScale extends TimeScale{static id='timeseries';static defaults=TimeScale.defaults;constructor(props){super(props);this._table=[];this._minPos=undefined;this._tableRange=undefined;}
initOffsets(){const timestamps=this._getTimestampsForTable();const table=this._table=this.buildLookupTable(timestamps);this._minPos=interpolate(table,this.min);this._tableRange=interpolate(table,this.max)-this._minPos;super.initOffsets(timestamps);}
buildLookupTable(timestamps){const{min,max}=this;const items=[];const table=[];let i,ilen,prev,curr,next;for(i=0,ilen=timestamps.length;i<ilen;++i){curr=timestamps[i];if(curr>=min&&curr<=max){items.push(curr);}}
if(items.length<2){return[{time:min,pos:0},{time:max,pos:1}];}
for(i=0,ilen=items.length;i<ilen;++i){next=items[i+1];prev=items[i-1];curr=items[i];if(Math.round((next+prev)/2)!==curr){table.push({time:curr,pos:i/(ilen-1)});}}
return table;}
_generate(){const min=this.min;const max=this.max;let timestamps=super.getDataTimestamps();if(!timestamps.includes(min)||!timestamps.length){timestamps.splice(0,0,min);}
if(!timestamps.includes(max)||timestamps.length===1){timestamps.push(max);}
return timestamps.sort((a,b)=>a-b);}
_getTimestampsForTable(){let timestamps=this._cache.all||[];if(timestamps.length){return timestamps;}
const data=this.getDataTimestamps();const label=this.getLabelTimestamps();if(data.length&&label.length){timestamps=this.normalize(data.concat(label));}else{timestamps=data.length?data:label;}
timestamps=this._cache.all=timestamps;return timestamps;}
getDecimalForValue(value){return(interpolate(this._table,value)-this._minPos)/this._tableRange;}
getValueForPixel(pixel){const offsets=this._offsets;const decimal=this.getDecimalForPixel(pixel)/offsets.factor-offsets.end;return interpolate(this._table,decimal*this._tableRange+this._minPos,true);}}
var scales=Object.freeze({__proto__:null,CategoryScale:CategoryScale,LinearScale:LinearScale,LogarithmicScale:LogarithmicScale,RadialLinearScale:RadialLinearScale,TimeScale:TimeScale,TimeSeriesScale:TimeSeriesScale});const BORDER_COLORS=['rgb(54, 162, 235)','rgb(255, 99, 132)','rgb(255, 159, 64)','rgb(255, 205, 86)','rgb(75, 192, 192)','rgb(153, 102, 255)','rgb(201, 203, 207)'];const BACKGROUND_COLORS=BORDER_COLORS.map((color)=>color.replace('rgb(','rgba(').replace(')',', 0.5)'));function getBorderColor(i){return BORDER_COLORS[i%BORDER_COLORS.length];}
function getBackgroundColor(i){return BACKGROUND_COLORS[i%BACKGROUND_COLORS.length];}
function colorizeDefaultDataset(dataset,i){dataset.borderColor=getBorderColor(i);dataset.backgroundColor=getBackgroundColor(i);return++i;}
function colorizeDoughnutDataset(dataset,i){dataset.backgroundColor=dataset.data.map(()=>getBorderColor(i++));return i;}
function colorizePolarAreaDataset(dataset,i){dataset.backgroundColor=dataset.data.map(()=>getBackgroundColor(i++));return i;}
function getColorizer(chart){let i=0;return(dataset,datasetIndex)=>{const controller=chart.getDatasetMeta(datasetIndex).controller;if(controller instanceof DoughnutController){i=colorizeDoughnutDataset(dataset,i);}else if(controller instanceof PolarAreaController){i=colorizePolarAreaDataset(dataset,i);}else if(controller){i=colorizeDefaultDataset(dataset,i);}};}
function containsColorsDefinitions(descriptors){let k;for(k in descriptors){if(descriptors[k].borderColor||descriptors[k].backgroundColor){return true;}}
return false;}
function containsColorsDefinition(descriptor){return descriptor&&(descriptor.borderColor||descriptor.backgroundColor);}
function containsDefaultColorsDefenitions(){return defaults.borderColor!=='rgba(0,0,0,0.1)'||defaults.backgroundColor!=='rgba(0,0,0,0.1)';}
var plugin_colors={id:'colors',defaults:{enabled:true,forceOverride:false},beforeLayout(chart,_args,options){if(!options.enabled){return;}
const{data:{datasets},options:chartOptions}=chart.config;const{elements}=chartOptions;const containsColorDefenition=containsColorsDefinitions(datasets)||containsColorsDefinition(chartOptions)||elements&&containsColorsDefinitions(elements)||containsDefaultColorsDefenitions();if(!options.forceOverride&&containsColorDefenition){return;}
const colorizer=getColorizer(chart);datasets.forEach(colorizer);}};function lttbDecimation(data,start,count,availableWidth,options){const samples=options.samples||availableWidth;if(samples>=count){return data.slice(start,start+count);}
const decimated=[];const bucketWidth=(count-2)/(samples-2);let sampledIndex=0;const endIndex=start+count-1;let a=start;let i,maxAreaPoint,maxArea,area,nextA;decimated[sampledIndex++]=data[a];for(i=0;i<samples-2;i++){let avgX=0;let avgY=0;let j;const avgRangeStart=Math.floor((i+1)*bucketWidth)+1+start;const avgRangeEnd=Math.min(Math.floor((i+2)*bucketWidth)+1,count)+start;const avgRangeLength=avgRangeEnd-avgRangeStart;for(j=avgRangeStart;j<avgRangeEnd;j++){avgX+=data[j].x;avgY+=data[j].y;}
avgX/=avgRangeLength;avgY/=avgRangeLength;const rangeOffs=Math.floor(i*bucketWidth)+1+start;const rangeTo=Math.min(Math.floor((i+1)*bucketWidth)+1,count)+start;const{x:pointAx,y:pointAy}=data[a];maxArea=area=-1;for(j=rangeOffs;j<rangeTo;j++){area=0.5*Math.abs((pointAx-avgX)*(data[j].y-pointAy)-(pointAx-data[j].x)*(avgY-pointAy));if(area>maxArea){maxArea=area;maxAreaPoint=data[j];nextA=j;}}
decimated[sampledIndex++]=maxAreaPoint;a=nextA;}
decimated[sampledIndex++]=data[endIndex];return decimated;}
function minMaxDecimation(data,start,count,availableWidth){let avgX=0;let countX=0;let i,point,x,y,prevX,minIndex,maxIndex,startIndex,minY,maxY;const decimated=[];const endIndex=start+count-1;const xMin=data[start].x;const xMax=data[endIndex].x;const dx=xMax-xMin;for(i=start;i<start+count;++i){point=data[i];x=(point.x-xMin)/dx*availableWidth;y=point.y;const truncX=x|0;if(truncX===prevX){if(y<minY){minY=y;minIndex=i;}else if(y>maxY){maxY=y;maxIndex=i;}
avgX=(countX*avgX+point.x)/++countX;}else{const lastIndex=i-1;if(!isNullOrUndef(minIndex)&&!isNullOrUndef(maxIndex)){const intermediateIndex1=Math.min(minIndex,maxIndex);const intermediateIndex2=Math.max(minIndex,maxIndex);if(intermediateIndex1!==startIndex&&intermediateIndex1!==lastIndex){decimated.push({...data[intermediateIndex1],x:avgX});}
if(intermediateIndex2!==startIndex&&intermediateIndex2!==lastIndex){decimated.push({...data[intermediateIndex2],x:avgX});}}
if(i>0&&lastIndex!==startIndex){decimated.push(data[lastIndex]);}
decimated.push(point);prevX=truncX;countX=0;minY=maxY=y;minIndex=maxIndex=startIndex=i;}}
return decimated;}
function cleanDecimatedDataset(dataset){if(dataset._decimated){const data=dataset._data;delete dataset._decimated;delete dataset._data;Object.defineProperty(dataset,'data',{configurable:true,enumerable:true,writable:true,value:data});}}
function cleanDecimatedData(chart){chart.data.datasets.forEach((dataset)=>{cleanDecimatedDataset(dataset);});}
function getStartAndCountOfVisiblePointsSimplified(meta,points){const pointCount=points.length;let start=0;let count;const{iScale}=meta;const{min,max,minDefined,maxDefined}=iScale.getUserBounds();if(minDefined){start=_limitValue(_lookupByKey(points,iScale.axis,min).lo,0,pointCount-1);}
if(maxDefined){count=_limitValue(_lookupByKey(points,iScale.axis,max).hi+1,start,pointCount)-start;}else{count=pointCount-start;}
return{start,count};}
var plugin_decimation={id:'decimation',defaults:{algorithm:'min-max',enabled:false},beforeElementsUpdate:(chart,args,options)=>{if(!options.enabled){cleanDecimatedData(chart);return;}
const availableWidth=chart.width;chart.data.datasets.forEach((dataset,datasetIndex)=>{const{_data,indexAxis}=dataset;const meta=chart.getDatasetMeta(datasetIndex);const data=_data||dataset.data;if(resolve([indexAxis,chart.options.indexAxis])==='y'){return;}
if(!meta.controller.supportsDecimation){return;}
const xAxis=chart.scales[meta.xAxisID];if(xAxis.type!=='linear'&&xAxis.type!=='time'){return;}
if(chart.options.parsing){return;}
let{start,count}=getStartAndCountOfVisiblePointsSimplified(meta,data);const threshold=options.threshold||4*availableWidth;if(count<=threshold){cleanDecimatedDataset(dataset);return;}
if(isNullOrUndef(_data)){dataset._data=data;delete dataset.data;Object.defineProperty(dataset,'data',{configurable:true,enumerable:true,get:function(){return this._decimated;},set:function(d){this._data=d;}});}
let decimated;switch(options.algorithm){case'lttb':decimated=lttbDecimation(data,start,count,availableWidth,options);break;case'min-max':decimated=minMaxDecimation(data,start,count,availableWidth);break;default:throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);}
dataset._decimated=decimated;});},destroy(chart){cleanDecimatedData(chart);}};function _segments(line,target,property){const segments=line.segments;const points=line.points;const tpoints=target.points;const parts=[];for(const segment of segments){let{start,end}=segment;end=_findSegmentEnd(start,end,points);const bounds=_getBounds(property,points[start],points[end],segment.loop);if(!target.segments){parts.push({source:segment,target:bounds,start:points[start],end:points[end]});continue;}
const targetSegments=_boundSegments(target,bounds);for(const tgt of targetSegments){const subBounds=_getBounds(property,tpoints[tgt.start],tpoints[tgt.end],tgt.loop);const fillSources=_boundSegment(segment,points,subBounds);for(const fillSource of fillSources){parts.push({source:fillSource,target:tgt,start:{[property]:_getEdge(bounds,subBounds,'start',Math.max)},end:{[property]:_getEdge(bounds,subBounds,'end',Math.min)}});}}}
return parts;}
function _getBounds(property,first,last,loop){if(loop){return;}
let start=first[property];let end=last[property];if(property==='angle'){start=_normalizeAngle(start);end=_normalizeAngle(end);}
return{property,start,end};}
function _pointsFromSegments(boundary,line){const{x=null,y=null}=boundary||{};const linePoints=line.points;const points=[];line.segments.forEach(({start,end})=>{end=_findSegmentEnd(start,end,linePoints);const first=linePoints[start];const last=linePoints[end];if(y!==null){points.push({x:first.x,y});points.push({x:last.x,y});}else if(x!==null){points.push({x,y:first.y});points.push({x,y:last.y});}});return points;}
function _findSegmentEnd(start,end,points){for(;end>start;end--){const point=points[end];if(!isNaN(point.x)&&!isNaN(point.y)){break;}}
return end;}
function _getEdge(a,b,prop,fn){if(a&&b){return fn(a[prop],b[prop]);}
return a?a[prop]:b?b[prop]:0;}
function _createBoundaryLine(boundary,line){let points=[];let _loop=false;if(isArray(boundary)){_loop=true;points=boundary;}else{points=_pointsFromSegments(boundary,line);}
return points.length?new LineElement({points,options:{tension:0},_loop,_fullLoop:_loop}):null;}
function _shouldApplyFill(source){return source&&source.fill!==false;}
function _resolveTarget(sources,index,propagate){const source=sources[index];let fill=source.fill;const visited=[index];let target;if(!propagate){return fill;}
while(fill!==false&&visited.indexOf(fill)===-1){if(!isNumberFinite(fill)){return fill;}
target=sources[fill];if(!target){return false;}
if(target.visible){return fill;}
visited.push(fill);fill=target.fill;}
return false;}
function _decodeFill(line,index,count){const fill=parseFillOption(line);if(isObject(fill)){return isNaN(fill.value)?false:fill;}
let target=parseFloat(fill);if(isNumberFinite(target)&&Math.floor(target)===target){return decodeTargetIndex(fill[0],index,target,count);}
return['origin','start','end','stack','shape'].indexOf(fill)>=0&&fill;}
function decodeTargetIndex(firstCh,index,target,count){if(firstCh==='-'||firstCh==='+'){target=index+target;}
if(target===index||target<0||target>=count){return false;}
return target;}
function _getTargetPixel(fill,scale){let pixel=null;if(fill==='start'){pixel=scale.bottom;}else if(fill==='end'){pixel=scale.top;}else if(isObject(fill)){pixel=scale.getPixelForValue(fill.value);}else if(scale.getBasePixel){pixel=scale.getBasePixel();}
return pixel;}
function _getTargetValue(fill,scale,startValue){let value;if(fill==='start'){value=startValue;}else if(fill==='end'){value=scale.options.reverse?scale.min:scale.max;}else if(isObject(fill)){value=fill.value;}else{value=scale.getBaseValue();}
return value;}
function parseFillOption(line){const options=line.options;const fillOption=options.fill;let fill=valueOrDefault(fillOption&&fillOption.target,fillOption);if(fill===undefined){fill=!!options.backgroundColor;}
if(fill===false||fill===null){return false;}
if(fill===true){return'origin';}
return fill;}
function _buildStackLine(source){const{scale,index,line}=source;const points=[];const segments=line.segments;const sourcePoints=line.points;const linesBelow=getLinesBelow(scale,index);linesBelow.push(_createBoundaryLine({x:null,y:scale.bottom},line));for(let i=0;i<segments.length;i++){const segment=segments[i];for(let j=segment.start;j<=segment.end;j++){addPointsBelow(points,sourcePoints[j],linesBelow);}}
return new LineElement({points,options:{}});}
function getLinesBelow(scale,index){const below=[];const metas=scale.getMatchingVisibleMetas('line');for(let i=0;i<metas.length;i++){const meta=metas[i];if(meta.index===index){break;}
if(!meta.hidden){below.unshift(meta.dataset);}}
return below;}
function addPointsBelow(points,sourcePoint,linesBelow){const postponed=[];for(let j=0;j<linesBelow.length;j++){const line=linesBelow[j];const{first,last,point}=findPoint(line,sourcePoint,'x');if(!point||first&&last){continue;}
if(first){postponed.unshift(point);}else{points.push(point);if(!last){break;}}}
points.push(...postponed);}
function findPoint(line,sourcePoint,property){const point=line.interpolate(sourcePoint,property);if(!point){return{};}
const pointValue=point[property];const segments=line.segments;const linePoints=line.points;let first=false;let last=false;for(let i=0;i<segments.length;i++){const segment=segments[i];const firstValue=linePoints[segment.start][property];const lastValue=linePoints[segment.end][property];if(_isBetween(pointValue,firstValue,lastValue)){first=pointValue===firstValue;last=pointValue===lastValue;break;}}
return{first,last,point};}
class simpleArc{constructor(opts){this.x=opts.x;this.y=opts.y;this.radius=opts.radius;}
pathSegment(ctx,bounds,opts){const{x,y,radius}=this;bounds=bounds||{start:0,end:TAU};ctx.arc(x,y,radius,bounds.end,bounds.start,true);return!opts.bounds;}
interpolate(point){const{x,y,radius}=this;const angle=point.angle;return{x:x+Math.cos(angle)*radius,y:y+Math.sin(angle)*radius,angle};}}
function _getTarget(source){const{chart,fill,line}=source;if(isNumberFinite(fill)){return getLineByIndex(chart,fill);}
if(fill==='stack'){return _buildStackLine(source);}
if(fill==='shape'){return true;}
const boundary=computeBoundary(source);if(boundary instanceof simpleArc){return boundary;}
return _createBoundaryLine(boundary,line);}
function getLineByIndex(chart,index){const meta=chart.getDatasetMeta(index);const visible=meta&&chart.isDatasetVisible(index);return visible?meta.dataset:null;}
function computeBoundary(source){const scale=source.scale||{};if(scale.getPointPositionForValue){return computeCircularBoundary(source);}
return computeLinearBoundary(source);}
function computeLinearBoundary(source){const{scale={},fill}=source;const pixel=_getTargetPixel(fill,scale);if(isNumberFinite(pixel)){const horizontal=scale.isHorizontal();return{x:horizontal?pixel:null,y:horizontal?null:pixel};}
return null;}
function computeCircularBoundary(source){const{scale,fill}=source;const options=scale.options;const length=scale.getLabels().length;const start=options.reverse?scale.max:scale.min;const value=_getTargetValue(fill,scale,start);const target=[];if(options.grid.circular){const center=scale.getPointPositionForValue(0,start);return new simpleArc({x:center.x,y:center.y,radius:scale.getDistanceFromCenterForValue(value)});}
for(let i=0;i<length;++i){target.push(scale.getPointPositionForValue(i,value));}
return target;}
function _drawfill(ctx,source,area){const target=_getTarget(source);const{line,scale,axis}=source;const lineOpts=line.options;const fillOption=lineOpts.fill;const color=lineOpts.backgroundColor;const{above=color,below=color}=fillOption||{};if(target&&line.points.length){clipArea(ctx,area);doFill(ctx,{line,target,above,below,area,scale,axis});unclipArea(ctx);}}
function doFill(ctx,cfg){const{line,target,above,below,area,scale}=cfg;const property=line._loop?'angle':cfg.axis;ctx.save();if(property==='x'&&below!==above){clipVertical(ctx,target,area.top);fill(ctx,{line,target,color:above,scale,property});ctx.restore();ctx.save();clipVertical(ctx,target,area.bottom);}
fill(ctx,{line,target,color:below,scale,property});ctx.restore();}
function clipVertical(ctx,target,clipY){const{segments,points}=target;let first=true;let lineLoop=false;ctx.beginPath();for(const segment of segments){const{start,end}=segment;const firstPoint=points[start];const lastPoint=points[_findSegmentEnd(start,end,points)];if(first){ctx.moveTo(firstPoint.x,firstPoint.y);first=false;}else{ctx.lineTo(firstPoint.x,clipY);ctx.lineTo(firstPoint.x,firstPoint.y);}
lineLoop=!!target.pathSegment(ctx,segment,{move:lineLoop});if(lineLoop){ctx.closePath();}else{ctx.lineTo(lastPoint.x,clipY);}}
ctx.lineTo(target.first().x,clipY);ctx.closePath();ctx.clip();}
function fill(ctx,cfg){const{line,target,property,color,scale}=cfg;const segments=_segments(line,target,property);for(const{source:src,target:tgt,start,end}of segments){const{style:{backgroundColor=color}={}}=src;const notShape=target!==true;ctx.save();ctx.fillStyle=backgroundColor;clipBounds(ctx,scale,notShape&&_getBounds(property,start,end));ctx.beginPath();const lineLoop=!!line.pathSegment(ctx,src);let loop;if(notShape){if(lineLoop){ctx.closePath();}else{interpolatedLineTo(ctx,target,end,property);}
const targetLoop=!!target.pathSegment(ctx,tgt,{move:lineLoop,reverse:true});loop=lineLoop&&targetLoop;if(!loop){interpolatedLineTo(ctx,target,start,property);}}
ctx.closePath();ctx.fill(loop?'evenodd':'nonzero');ctx.restore();}}
function clipBounds(ctx,scale,bounds){const{top,bottom}=scale.chart.chartArea;const{property,start,end}=bounds||{};if(property==='x'){ctx.beginPath();ctx.rect(start,top,end-start,bottom-top);ctx.clip();}}
function interpolatedLineTo(ctx,target,point,property){const interpolatedPoint=target.interpolate(point,property);if(interpolatedPoint){ctx.lineTo(interpolatedPoint.x,interpolatedPoint.y);}}
var index={id:'filler',afterDatasetsUpdate(chart,_args,options){const count=(chart.data.datasets||[]).length;const sources=[];let meta,i,line,source;for(i=0;i<count;++i){meta=chart.getDatasetMeta(i);line=meta.dataset;source=null;if(line&&line.options&&line instanceof LineElement){source={visible:chart.isDatasetVisible(i),index:i,fill:_decodeFill(line,i,count),chart,axis:meta.controller.options.indexAxis,scale:meta.vScale,line};}
meta.$filler=source;sources.push(source);}
for(i=0;i<count;++i){source=sources[i];if(!source||source.fill===false){continue;}
source.fill=_resolveTarget(sources,i,options.propagate);}},beforeDraw(chart,_args,options){const draw=options.drawTime==='beforeDraw';const metasets=chart.getSortedVisibleDatasetMetas();const area=chart.chartArea;for(let i=metasets.length-1;i>=0;--i){const source=metasets[i].$filler;if(!source){continue;}
source.line.updateControlPoints(area,source.axis);if(draw&&source.fill){_drawfill(chart.ctx,source,area);}}},beforeDatasetsDraw(chart,_args,options){if(options.drawTime!=='beforeDatasetsDraw'){return;}
const metasets=chart.getSortedVisibleDatasetMetas();for(let i=metasets.length-1;i>=0;--i){const source=metasets[i].$filler;if(_shouldApplyFill(source)){_drawfill(chart.ctx,source,chart.chartArea);}}},beforeDatasetDraw(chart,args,options){const source=args.meta.$filler;if(!_shouldApplyFill(source)||options.drawTime!=='beforeDatasetDraw'){return;}
_drawfill(chart.ctx,source,chart.chartArea);},defaults:{propagate:true,drawTime:'beforeDatasetDraw'}};const getBoxSize=(labelOpts,fontSize)=>{let{boxHeight=fontSize,boxWidth=fontSize}=labelOpts;if(labelOpts.usePointStyle){boxHeight=Math.min(boxHeight,fontSize);boxWidth=labelOpts.pointStyleWidth||Math.min(boxWidth,fontSize);}
return{boxWidth,boxHeight,itemHeight:Math.max(fontSize,boxHeight)};};const itemsEqual=(a,b)=>a!==null&&b!==null&&a.datasetIndex===b.datasetIndex&&a.index===b.index;class Legend extends Element{constructor(config){super();this._added=false;this.legendHitBoxes=[];this._hoveredItem=null;this.doughnutMode=false;this.chart=config.chart;this.options=config.options;this.ctx=config.ctx;this.legendItems=undefined;this.columnSizes=undefined;this.lineWidths=undefined;this.maxHeight=undefined;this.maxWidth=undefined;this.top=undefined;this.bottom=undefined;this.left=undefined;this.right=undefined;this.height=undefined;this.width=undefined;this._margins=undefined;this.position=undefined;this.weight=undefined;this.fullSize=undefined;}
update(maxWidth,maxHeight,margins){this.maxWidth=maxWidth;this.maxHeight=maxHeight;this._margins=margins;this.setDimensions();this.buildLabels();this.fit();}
setDimensions(){if(this.isHorizontal()){this.width=this.maxWidth;this.left=this._margins.left;this.right=this.width;}else{this.height=this.maxHeight;this.top=this._margins.top;this.bottom=this.height;}}
buildLabels(){const labelOpts=this.options.labels||{};let legendItems=callback(labelOpts.generateLabels,[this.chart],this)||[];if(labelOpts.filter){legendItems=legendItems.filter((item)=>labelOpts.filter(item,this.chart.data));}
if(labelOpts.sort){legendItems=legendItems.sort((a,b)=>labelOpts.sort(a,b,this.chart.data));}
if(this.options.reverse){legendItems.reverse();}
this.legendItems=legendItems;}
fit(){const{options,ctx}=this;if(!options.display){this.width=this.height=0;return;}
const labelOpts=options.labels;const labelFont=toFont(labelOpts.font);const fontSize=labelFont.size;const titleHeight=this._computeTitleHeight();const{boxWidth,itemHeight}=getBoxSize(labelOpts,fontSize);let width,height;ctx.font=labelFont.string;if(this.isHorizontal()){width=this.maxWidth;height=this._fitRows(titleHeight,fontSize,boxWidth,itemHeight)+10;}else{height=this.maxHeight;width=this._fitCols(titleHeight,labelFont,boxWidth,itemHeight)+10;}
this.width=Math.min(width,options.maxWidth||this.maxWidth);this.height=Math.min(height,options.maxHeight||this.maxHeight);}
_fitRows(titleHeight,fontSize,boxWidth,itemHeight){const{ctx,maxWidth,options:{labels:{padding}}}=this;const hitboxes=this.legendHitBoxes=[];const lineWidths=this.lineWidths=[0];const lineHeight=itemHeight+padding;let totalHeight=titleHeight;ctx.textAlign='left';ctx.textBaseline='middle';let row=-1;let top=-lineHeight;this.legendItems.forEach((legendItem,i)=>{const itemWidth=boxWidth+fontSize/2+ctx.measureText(legendItem.text).width;if(i===0||lineWidths[lineWidths.length-1]+itemWidth+2*padding>maxWidth){totalHeight+=lineHeight;lineWidths[lineWidths.length-(i>0?0:1)]=0;top+=lineHeight;row++;}
hitboxes[i]={left:0,top,row,width:itemWidth,height:itemHeight};lineWidths[lineWidths.length-1]+=itemWidth+padding;});return totalHeight;}
_fitCols(titleHeight,labelFont,boxWidth,_itemHeight){const{ctx,maxHeight,options:{labels:{padding}}}=this;const hitboxes=this.legendHitBoxes=[];const columnSizes=this.columnSizes=[];const heightLimit=maxHeight-titleHeight;let totalWidth=padding;let currentColWidth=0;let currentColHeight=0;let left=0;let col=0;this.legendItems.forEach((legendItem,i)=>{const{itemWidth,itemHeight}=calculateItemSize(boxWidth,labelFont,ctx,legendItem,_itemHeight);if(i>0&&currentColHeight+itemHeight+2*padding>heightLimit){totalWidth+=currentColWidth+padding;columnSizes.push({width:currentColWidth,height:currentColHeight});left+=currentColWidth+padding;col++;currentColWidth=currentColHeight=0;}
hitboxes[i]={left,top:currentColHeight,col,width:itemWidth,height:itemHeight};currentColWidth=Math.max(currentColWidth,itemWidth);currentColHeight+=itemHeight+padding;});totalWidth+=currentColWidth;columnSizes.push({width:currentColWidth,height:currentColHeight});return totalWidth;}
adjustHitBoxes(){if(!this.options.display){return;}
const titleHeight=this._computeTitleHeight();const{legendHitBoxes:hitboxes,options:{align,labels:{padding},rtl}}=this;const rtlHelper=getRtlAdapter(rtl,this.left,this.width);if(this.isHorizontal()){let row=0;let left=_alignStartEnd(align,this.left+padding,this.right-this.lineWidths[row]);for(const hitbox of hitboxes){if(row!==hitbox.row){row=hitbox.row;left=_alignStartEnd(align,this.left+padding,this.right-this.lineWidths[row]);}
hitbox.top+=this.top+titleHeight+padding;hitbox.left=rtlHelper.leftForLtr(rtlHelper.x(left),hitbox.width);left+=hitbox.width+padding;}}else{let col=0;let top=_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-this.columnSizes[col].height);for(const hitbox of hitboxes){if(hitbox.col!==col){col=hitbox.col;top=_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-this.columnSizes[col].height);}
hitbox.top=top;hitbox.left+=this.left+padding;hitbox.left=rtlHelper.leftForLtr(rtlHelper.x(hitbox.left),hitbox.width);top+=hitbox.height+padding;}}}
isHorizontal(){return this.options.position==='top'||this.options.position==='bottom';}
draw(){if(this.options.display){const ctx=this.ctx;clipArea(ctx,this);this._draw();unclipArea(ctx);}}
_draw(){const{options:opts,columnSizes,lineWidths,ctx}=this;const{align,labels:labelOpts}=opts;const defaultColor=defaults.color;const rtlHelper=getRtlAdapter(opts.rtl,this.left,this.width);const labelFont=toFont(labelOpts.font);const{padding}=labelOpts;const fontSize=labelFont.size;const halfFontSize=fontSize/2;let cursor;this.drawTitle();ctx.textAlign=rtlHelper.textAlign('left');ctx.textBaseline='middle';ctx.lineWidth=0.5;ctx.font=labelFont.string;const{boxWidth,boxHeight,itemHeight}=getBoxSize(labelOpts,fontSize);const drawLegendBox=function(x,y,legendItem){if(isNaN(boxWidth)||boxWidth<=0||isNaN(boxHeight)||boxHeight<0){return;}
ctx.save();const lineWidth=valueOrDefault(legendItem.lineWidth,1);ctx.fillStyle=valueOrDefault(legendItem.fillStyle,defaultColor);ctx.lineCap=valueOrDefault(legendItem.lineCap,'butt');ctx.lineDashOffset=valueOrDefault(legendItem.lineDashOffset,0);ctx.lineJoin=valueOrDefault(legendItem.lineJoin,'miter');ctx.lineWidth=lineWidth;ctx.strokeStyle=valueOrDefault(legendItem.strokeStyle,defaultColor);ctx.setLineDash(valueOrDefault(legendItem.lineDash,[]));if(labelOpts.usePointStyle){const drawOptions={radius:boxHeight*Math.SQRT2/2,pointStyle:legendItem.pointStyle,rotation:legendItem.rotation,borderWidth:lineWidth};const centerX=rtlHelper.xPlus(x,boxWidth/2);const centerY=y+halfFontSize;drawPointLegend(ctx,drawOptions,centerX,centerY,labelOpts.pointStyleWidth&&boxWidth);}else{const yBoxTop=y+Math.max((fontSize-boxHeight)/2,0);const xBoxLeft=rtlHelper.leftForLtr(x,boxWidth);const borderRadius=toTRBLCorners(legendItem.borderRadius);ctx.beginPath();if(Object.values(borderRadius).some((v)=>v!==0)){addRoundedRectPath(ctx,{x:xBoxLeft,y:yBoxTop,w:boxWidth,h:boxHeight,radius:borderRadius});}else{ctx.rect(xBoxLeft,yBoxTop,boxWidth,boxHeight);}
ctx.fill();if(lineWidth!==0){ctx.stroke();}}
ctx.restore();};const fillText=function(x,y,legendItem){renderText(ctx,legendItem.text,x,y+itemHeight/2,labelFont,{strikethrough:legendItem.hidden,textAlign:rtlHelper.textAlign(legendItem.textAlign)});};const isHorizontal=this.isHorizontal();const titleHeight=this._computeTitleHeight();if(isHorizontal){cursor={x:_alignStartEnd(align,this.left+padding,this.right-lineWidths[0]),y:this.top+padding+titleHeight,line:0};}else{cursor={x:this.left+padding,y:_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-columnSizes[0].height),line:0};}
overrideTextDirection(this.ctx,opts.textDirection);const lineHeight=itemHeight+padding;this.legendItems.forEach((legendItem,i)=>{ctx.strokeStyle=legendItem.fontColor;ctx.fillStyle=legendItem.fontColor;const textWidth=ctx.measureText(legendItem.text).width;const textAlign=rtlHelper.textAlign(legendItem.textAlign||(legendItem.textAlign=labelOpts.textAlign));const width=boxWidth+halfFontSize+textWidth;let x=cursor.x;let y=cursor.y;rtlHelper.setWidth(this.width);if(isHorizontal){if(i>0&&x+width+padding>this.right){y=cursor.y+=lineHeight;cursor.line++;x=cursor.x=_alignStartEnd(align,this.left+padding,this.right-lineWidths[cursor.line]);}}else if(i>0&&y+lineHeight>this.bottom){x=cursor.x=x+columnSizes[cursor.line].width+padding;cursor.line++;y=cursor.y=_alignStartEnd(align,this.top+titleHeight+padding,this.bottom-columnSizes[cursor.line].height);}
const realX=rtlHelper.x(x);drawLegendBox(realX,y,legendItem);x=_textX(textAlign,x+boxWidth+halfFontSize,isHorizontal?x+width:this.right,opts.rtl);fillText(rtlHelper.x(x),y,legendItem);if(isHorizontal){cursor.x+=width+padding;}else if(typeof legendItem.text!=='string'){const fontLineHeight=labelFont.lineHeight;cursor.y+=calculateLegendItemHeight(legendItem,fontLineHeight)+padding;}else{cursor.y+=lineHeight;}});restoreTextDirection(this.ctx,opts.textDirection);}
drawTitle(){const opts=this.options;const titleOpts=opts.title;const titleFont=toFont(titleOpts.font);const titlePadding=toPadding(titleOpts.padding);if(!titleOpts.display){return;}
const rtlHelper=getRtlAdapter(opts.rtl,this.left,this.width);const ctx=this.ctx;const position=titleOpts.position;const halfFontSize=titleFont.size/2;const topPaddingPlusHalfFontSize=titlePadding.top+halfFontSize;let y;let left=this.left;let maxWidth=this.width;if(this.isHorizontal()){maxWidth=Math.max(...this.lineWidths);y=this.top+topPaddingPlusHalfFontSize;left=_alignStartEnd(opts.align,left,this.right-maxWidth);}else{const maxHeight=this.columnSizes.reduce((acc,size)=>Math.max(acc,size.height),0);y=topPaddingPlusHalfFontSize+_alignStartEnd(opts.align,this.top,this.bottom-maxHeight-opts.labels.padding-this._computeTitleHeight());}
const x=_alignStartEnd(position,left,left+maxWidth);ctx.textAlign=rtlHelper.textAlign(_toLeftRightCenter(position));ctx.textBaseline='middle';ctx.strokeStyle=titleOpts.color;ctx.fillStyle=titleOpts.color;ctx.font=titleFont.string;renderText(ctx,titleOpts.text,x,y,titleFont);}
_computeTitleHeight(){const titleOpts=this.options.title;const titleFont=toFont(titleOpts.font);const titlePadding=toPadding(titleOpts.padding);return titleOpts.display?titleFont.lineHeight+titlePadding.height:0;}
_getLegendItemAt(x,y){let i,hitBox,lh;if(_isBetween(x,this.left,this.right)&&_isBetween(y,this.top,this.bottom)){lh=this.legendHitBoxes;for(i=0;i<lh.length;++i){hitBox=lh[i];if(_isBetween(x,hitBox.left,hitBox.left+hitBox.width)&&_isBetween(y,hitBox.top,hitBox.top+hitBox.height)){return this.legendItems[i];}}}
return null;}
handleEvent(e){const opts=this.options;if(!isListened(e.type,opts)){return;}
const hoveredItem=this._getLegendItemAt(e.x,e.y);if(e.type==='mousemove'||e.type==='mouseout'){const previous=this._hoveredItem;const sameItem=itemsEqual(previous,hoveredItem);if(previous&&!sameItem){callback(opts.onLeave,[e,previous,this],this);}
this._hoveredItem=hoveredItem;if(hoveredItem&&!sameItem){callback(opts.onHover,[e,hoveredItem,this],this);}}else if(hoveredItem){callback(opts.onClick,[e,hoveredItem,this],this);}}}
function calculateItemSize(boxWidth,labelFont,ctx,legendItem,_itemHeight){const itemWidth=calculateItemWidth(legendItem,boxWidth,labelFont,ctx);const itemHeight=calculateItemHeight(_itemHeight,legendItem,labelFont.lineHeight);return{itemWidth,itemHeight};}
function calculateItemWidth(legendItem,boxWidth,labelFont,ctx){let legendItemText=legendItem.text;if(legendItemText&&typeof legendItemText!=='string'){legendItemText=legendItemText.reduce((a,b)=>a.length>b.length?a:b);}
return boxWidth+labelFont.size/2+ctx.measureText(legendItemText).width;}
function calculateItemHeight(_itemHeight,legendItem,fontLineHeight){let itemHeight=_itemHeight;if(typeof legendItem.text!=='string'){itemHeight=calculateLegendItemHeight(legendItem,fontLineHeight);}
return itemHeight;}
function calculateLegendItemHeight(legendItem,fontLineHeight){const labelHeight=legendItem.text?legendItem.text.length:0;return fontLineHeight*labelHeight;}
function isListened(type,opts){if((type==='mousemove'||type==='mouseout')&&(opts.onHover||opts.onLeave)){return true;}
if(opts.onClick&&(type==='click'||type==='mouseup')){return true;}
return false;}
var plugin_legend={id:'legend',_element:Legend,start(chart,_args,options){const legend=chart.legend=new Legend({ctx:chart.ctx,options,chart});layouts.configure(chart,legend,options);layouts.addBox(chart,legend);},stop(chart){layouts.removeBox(chart,chart.legend);delete chart.legend;},beforeUpdate(chart,_args,options){const legend=chart.legend;layouts.configure(chart,legend,options);legend.options=options;},afterUpdate(chart){const legend=chart.legend;legend.buildLabels();legend.adjustHitBoxes();},afterEvent(chart,args){if(!args.replay){chart.legend.handleEvent(args.event);}},defaults:{display:true,position:'top',align:'center',fullSize:true,reverse:false,weight:1000,onClick(e,legendItem,legend){const index=legendItem.datasetIndex;const ci=legend.chart;if(ci.isDatasetVisible(index)){ci.hide(index);legendItem.hidden=true;}else{ci.show(index);legendItem.hidden=false;}},onHover:null,onLeave:null,labels:{color:(ctx)=>ctx.chart.options.color,boxWidth:40,padding:10,generateLabels(chart){const datasets=chart.data.datasets;const{labels:{usePointStyle,pointStyle,textAlign,color,useBorderRadius,borderRadius}}=chart.legend.options;return chart._getSortedDatasetMetas().map((meta)=>{const style=meta.controller.getStyle(usePointStyle?0:undefined);const borderWidth=toPadding(style.borderWidth);return{text:datasets[meta.index].label,fillStyle:style.backgroundColor,fontColor:color,hidden:!meta.visible,lineCap:style.borderCapStyle,lineDash:style.borderDash,lineDashOffset:style.borderDashOffset,lineJoin:style.borderJoinStyle,lineWidth:(borderWidth.width+borderWidth.height)/4,strokeStyle:style.borderColor,pointStyle:pointStyle||style.pointStyle,rotation:style.rotation,textAlign:textAlign||style.textAlign,borderRadius:useBorderRadius&&(borderRadius||style.borderRadius),datasetIndex:meta.index};},this);}},title:{color:(ctx)=>ctx.chart.options.color,display:false,position:'center',text:''}},descriptors:{_scriptable:(name)=>!name.startsWith('on'),labels:{_scriptable:(name)=>!['generateLabels','filter','sort'].includes(name)}}};class Title extends Element{constructor(config){super();this.chart=config.chart;this.options=config.options;this.ctx=config.ctx;this._padding=undefined;this.top=undefined;this.bottom=undefined;this.left=undefined;this.right=undefined;this.width=undefined;this.height=undefined;this.position=undefined;this.weight=undefined;this.fullSize=undefined;}
update(maxWidth,maxHeight){const opts=this.options;this.left=0;this.top=0;if(!opts.display){this.width=this.height=this.right=this.bottom=0;return;}
this.width=this.right=maxWidth;this.height=this.bottom=maxHeight;const lineCount=isArray(opts.text)?opts.text.length:1;this._padding=toPadding(opts.padding);const textSize=lineCount*toFont(opts.font).lineHeight+this._padding.height;if(this.isHorizontal()){this.height=textSize;}else{this.width=textSize;}}
isHorizontal(){const pos=this.options.position;return pos==='top'||pos==='bottom';}
_drawArgs(offset){const{top,left,bottom,right,options}=this;const align=options.align;let rotation=0;let maxWidth,titleX,titleY;if(this.isHorizontal()){titleX=_alignStartEnd(align,left,right);titleY=top+offset;maxWidth=right-left;}else{if(options.position==='left'){titleX=left+offset;titleY=_alignStartEnd(align,bottom,top);rotation=PI*-0.5;}else{titleX=right-offset;titleY=_alignStartEnd(align,top,bottom);rotation=PI*0.5;}
maxWidth=bottom-top;}
return{titleX,titleY,maxWidth,rotation};}
draw(){const ctx=this.ctx;const opts=this.options;if(!opts.display){return;}
const fontOpts=toFont(opts.font);const lineHeight=fontOpts.lineHeight;const offset=lineHeight/2+this._padding.top;const{titleX,titleY,maxWidth,rotation}=this._drawArgs(offset);renderText(ctx,opts.text,0,0,fontOpts,{color:opts.color,maxWidth,rotation,textAlign:_toLeftRightCenter(opts.align),textBaseline:'middle',translation:[titleX,titleY]});}}
function createTitle(chart,titleOpts){const title=new Title({ctx:chart.ctx,options:titleOpts,chart});layouts.configure(chart,title,titleOpts);layouts.addBox(chart,title);chart.titleBlock=title;}
var plugin_title={id:'title',_element:Title,start(chart,_args,options){createTitle(chart,options);},stop(chart){const titleBlock=chart.titleBlock;layouts.removeBox(chart,titleBlock);delete chart.titleBlock;},beforeUpdate(chart,_args,options){const title=chart.titleBlock;layouts.configure(chart,title,options);title.options=options;},defaults:{align:'center',display:false,font:{weight:'bold'},fullSize:true,padding:10,position:'top',text:'',weight:2000},defaultRoutes:{color:'color'},descriptors:{_scriptable:true,_indexable:false}};const map=new WeakMap();var plugin_subtitle={id:'subtitle',start(chart,_args,options){const title=new Title({ctx:chart.ctx,options,chart});layouts.configure(chart,title,options);layouts.addBox(chart,title);map.set(chart,title);},stop(chart){layouts.removeBox(chart,map.get(chart));map.delete(chart);},beforeUpdate(chart,_args,options){const title=map.get(chart);layouts.configure(chart,title,options);title.options=options;},defaults:{align:'center',display:false,font:{weight:'normal'},fullSize:true,padding:0,position:'top',text:'',weight:1500},defaultRoutes:{color:'color'},descriptors:{_scriptable:true,_indexable:false}};const positioners={average(items){if(!items.length){return false;}
let i,len;let xSet=new Set();let y=0;let count=0;for(i=0,len=items.length;i<len;++i){const el=items[i].element;if(el&&el.hasValue()){const pos=el.tooltipPosition();xSet.add(pos.x);y+=pos.y;++count;}}
if(count===0||xSet.size===0){return false;}
const xAverage=[...xSet].reduce((a,b)=>a+b)/xSet.size;return{x:xAverage,y:y/count};},nearest(items,eventPosition){if(!items.length){return false;}
let x=eventPosition.x;let y=eventPosition.y;let minDistance=Number.POSITIVE_INFINITY;let i,len,nearestElement;for(i=0,len=items.length;i<len;++i){const el=items[i].element;if(el&&el.hasValue()){const center=el.getCenterPoint();const d=distanceBetweenPoints(eventPosition,center);if(d<minDistance){minDistance=d;nearestElement=el;}}}
if(nearestElement){const tp=nearestElement.tooltipPosition();x=tp.x;y=tp.y;}
return{x,y};}};function pushOrConcat(base,toPush){if(toPush){if(isArray(toPush)){Array.prototype.push.apply(base,toPush);}else{base.push(toPush);}}
return base;}
function splitNewlines(str){if((typeof str==='string'||str instanceof String)&&str.indexOf('\n')>-1){return str.split('\n');}
return str;}
function createTooltipItem(chart,item){const{element,datasetIndex,index}=item;const controller=chart.getDatasetMeta(datasetIndex).controller;const{label,value}=controller.getLabelAndValue(index);return{chart,label,parsed:controller.getParsed(index),raw:chart.data.datasets[datasetIndex].data[index],formattedValue:value,dataset:controller.getDataset(),dataIndex:index,datasetIndex,element};}
function getTooltipSize(tooltip,options){const ctx=tooltip.chart.ctx;const{body,footer,title}=tooltip;const{boxWidth,boxHeight}=options;const bodyFont=toFont(options.bodyFont);const titleFont=toFont(options.titleFont);const footerFont=toFont(options.footerFont);const titleLineCount=title.length;const footerLineCount=footer.length;const bodyLineItemCount=body.length;const padding=toPadding(options.padding);let height=padding.height;let width=0;let combinedBodyLength=body.reduce((count,bodyItem)=>count+bodyItem.before.length+bodyItem.lines.length+bodyItem.after.length,0);combinedBodyLength+=tooltip.beforeBody.length+tooltip.afterBody.length;if(titleLineCount){height+=titleLineCount*titleFont.lineHeight+(titleLineCount-1)*options.titleSpacing+options.titleMarginBottom;}
if(combinedBodyLength){const bodyLineHeight=options.displayColors?Math.max(boxHeight,bodyFont.lineHeight):bodyFont.lineHeight;height+=bodyLineItemCount*bodyLineHeight+(combinedBodyLength-bodyLineItemCount)*bodyFont.lineHeight+(combinedBodyLength-1)*options.bodySpacing;}
if(footerLineCount){height+=options.footerMarginTop+footerLineCount*footerFont.lineHeight+(footerLineCount-1)*options.footerSpacing;}
let widthPadding=0;const maxLineWidth=function(line){width=Math.max(width,ctx.measureText(line).width+widthPadding);};ctx.save();ctx.font=titleFont.string;each(tooltip.title,maxLineWidth);ctx.font=bodyFont.string;each(tooltip.beforeBody.concat(tooltip.afterBody),maxLineWidth);widthPadding=options.displayColors?boxWidth+2+options.boxPadding:0;each(body,(bodyItem)=>{each(bodyItem.before,maxLineWidth);each(bodyItem.lines,maxLineWidth);each(bodyItem.after,maxLineWidth);});widthPadding=0;ctx.font=footerFont.string;each(tooltip.footer,maxLineWidth);ctx.restore();width+=padding.width;return{width,height};}
function determineYAlign(chart,size){const{y,height}=size;if(y<height/2){return'top';}else if(y>chart.height-height/2){return'bottom';}
return'center';}
function doesNotFitWithAlign(xAlign,chart,options,size){const{x,width}=size;const caret=options.caretSize+options.caretPadding;if(xAlign==='left'&&x+width+caret>chart.width){return true;}
if(xAlign==='right'&&x-width-caret<0){return true;}}
function determineXAlign(chart,options,size,yAlign){const{x,width}=size;const{width:chartWidth,chartArea:{left,right}}=chart;let xAlign='center';if(yAlign==='center'){xAlign=x<=(left+right)/2?'left':'right';}else if(x<=width/2){xAlign='left';}else if(x>=chartWidth-width/2){xAlign='right';}
if(doesNotFitWithAlign(xAlign,chart,options,size)){xAlign='center';}
return xAlign;}
function determineAlignment(chart,options,size){const yAlign=size.yAlign||options.yAlign||determineYAlign(chart,size);return{xAlign:size.xAlign||options.xAlign||determineXAlign(chart,options,size,yAlign),yAlign};}
function alignX(size,xAlign){let{x,width}=size;if(xAlign==='right'){x-=width;}else if(xAlign==='center'){x-=width/2;}
return x;}
function alignY(size,yAlign,paddingAndSize){let{y,height}=size;if(yAlign==='top'){y+=paddingAndSize;}else if(yAlign==='bottom'){y-=height+paddingAndSize;}else{y-=height/2;}
return y;}
function getBackgroundPoint(options,size,alignment,chart){const{caretSize,caretPadding,cornerRadius}=options;const{xAlign,yAlign}=alignment;const paddingAndSize=caretSize+caretPadding;const{topLeft,topRight,bottomLeft,bottomRight}=toTRBLCorners(cornerRadius);let x=alignX(size,xAlign);const y=alignY(size,yAlign,paddingAndSize);if(yAlign==='center'){if(xAlign==='left'){x+=paddingAndSize;}else if(xAlign==='right'){x-=paddingAndSize;}}else if(xAlign==='left'){x-=Math.max(topLeft,bottomLeft)+caretSize;}else if(xAlign==='right'){x+=Math.max(topRight,bottomRight)+caretSize;}
return{x:_limitValue(x,0,chart.width-size.width),y:_limitValue(y,0,chart.height-size.height)};}
function getAlignedX(tooltip,align,options){const padding=toPadding(options.padding);return align==='center'?tooltip.x+tooltip.width/2:align==='right'?tooltip.x+tooltip.width-padding.right:tooltip.x+padding.left;}
function getBeforeAfterBodyLines(callback){return pushOrConcat([],splitNewlines(callback));}
function createTooltipContext(parent,tooltip,tooltipItems){return createContext(parent,{tooltip,tooltipItems,type:'tooltip'});}
function overrideCallbacks(callbacks,context){const override=context&&context.dataset&&context.dataset.tooltip&&context.dataset.tooltip.callbacks;return override?callbacks.override(override):callbacks;}
const defaultCallbacks={beforeTitle:noop,title(tooltipItems){if(tooltipItems.length>0){const item=tooltipItems[0];const labels=item.chart.data.labels;const labelCount=labels?labels.length:0;if(this&&this.options&&this.options.mode==='dataset'){return item.dataset.label||'';}else if(item.label){return item.label;}else if(labelCount>0&&item.dataIndex<labelCount){return labels[item.dataIndex];}}
return'';},afterTitle:noop,beforeBody:noop,beforeLabel:noop,label(tooltipItem){if(this&&this.options&&this.options.mode==='dataset'){return tooltipItem.label+': '+tooltipItem.formattedValue||tooltipItem.formattedValue;}
let label=tooltipItem.dataset.label||'';if(label){label+=': ';}
const value=tooltipItem.formattedValue;if(!isNullOrUndef(value)){label+=value;}
return label;},labelColor(tooltipItem){const meta=tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);const options=meta.controller.getStyle(tooltipItem.dataIndex);return{borderColor:options.borderColor,backgroundColor:options.backgroundColor,borderWidth:options.borderWidth,borderDash:options.borderDash,borderDashOffset:options.borderDashOffset,borderRadius:0};},labelTextColor(){return this.options.bodyColor;},labelPointStyle(tooltipItem){const meta=tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);const options=meta.controller.getStyle(tooltipItem.dataIndex);return{pointStyle:options.pointStyle,rotation:options.rotation};},afterLabel:noop,afterBody:noop,beforeFooter:noop,footer:noop,afterFooter:noop};function invokeCallbackWithFallback(callbacks,name,ctx,arg){const result=callbacks[name].call(ctx,arg);if(typeof result==='undefined'){return defaultCallbacks[name].call(ctx,arg);}
return result;}
class Tooltip extends Element{static positioners=positioners;constructor(config){super();this.opacity=0;this._active=[];this._eventPosition=undefined;this._size=undefined;this._cachedAnimations=undefined;this._tooltipItems=[];this.$animations=undefined;this.$context=undefined;this.chart=config.chart;this.options=config.options;this.dataPoints=undefined;this.title=undefined;this.beforeBody=undefined;this.body=undefined;this.afterBody=undefined;this.footer=undefined;this.xAlign=undefined;this.yAlign=undefined;this.x=undefined;this.y=undefined;this.height=undefined;this.width=undefined;this.caretX=undefined;this.caretY=undefined;this.labelColors=undefined;this.labelPointStyles=undefined;this.labelTextColors=undefined;}
initialize(options){this.options=options;this._cachedAnimations=undefined;this.$context=undefined;}
_resolveAnimations(){const cached=this._cachedAnimations;if(cached){return cached;}
const chart=this.chart;const options=this.options.setContext(this.getContext());const opts=options.enabled&&chart.options.animation&&options.animations;const animations=new Animations(this.chart,opts);if(opts._cacheable){this._cachedAnimations=Object.freeze(animations);}
return animations;}
getContext(){return this.$context||(this.$context=createTooltipContext(this.chart.getContext(),this,this._tooltipItems));}
getTitle(context,options){const{callbacks}=options;const beforeTitle=invokeCallbackWithFallback(callbacks,'beforeTitle',this,context);const title=invokeCallbackWithFallback(callbacks,'title',this,context);const afterTitle=invokeCallbackWithFallback(callbacks,'afterTitle',this,context);let lines=[];lines=pushOrConcat(lines,splitNewlines(beforeTitle));lines=pushOrConcat(lines,splitNewlines(title));lines=pushOrConcat(lines,splitNewlines(afterTitle));return lines;}
getBeforeBody(tooltipItems,options){return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks,'beforeBody',this,tooltipItems));}
getBody(tooltipItems,options){const{callbacks}=options;const bodyItems=[];each(tooltipItems,(context)=>{const bodyItem={before:[],lines:[],after:[]};const scoped=overrideCallbacks(callbacks,context);pushOrConcat(bodyItem.before,splitNewlines(invokeCallbackWithFallback(scoped,'beforeLabel',this,context)));pushOrConcat(bodyItem.lines,invokeCallbackWithFallback(scoped,'label',this,context));pushOrConcat(bodyItem.after,splitNewlines(invokeCallbackWithFallback(scoped,'afterLabel',this,context)));bodyItems.push(bodyItem);});return bodyItems;}
getAfterBody(tooltipItems,options){return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks,'afterBody',this,tooltipItems));}
getFooter(tooltipItems,options){const{callbacks}=options;const beforeFooter=invokeCallbackWithFallback(callbacks,'beforeFooter',this,tooltipItems);const footer=invokeCallbackWithFallback(callbacks,'footer',this,tooltipItems);const afterFooter=invokeCallbackWithFallback(callbacks,'afterFooter',this,tooltipItems);let lines=[];lines=pushOrConcat(lines,splitNewlines(beforeFooter));lines=pushOrConcat(lines,splitNewlines(footer));lines=pushOrConcat(lines,splitNewlines(afterFooter));return lines;}
_createItems(options){const active=this._active;const data=this.chart.data;const labelColors=[];const labelPointStyles=[];const labelTextColors=[];let tooltipItems=[];let i,len;for(i=0,len=active.length;i<len;++i){tooltipItems.push(createTooltipItem(this.chart,active[i]));}
if(options.filter){tooltipItems=tooltipItems.filter((element,index,array)=>options.filter(element,index,array,data));}
if(options.itemSort){tooltipItems=tooltipItems.sort((a,b)=>options.itemSort(a,b,data));}
each(tooltipItems,(context)=>{const scoped=overrideCallbacks(options.callbacks,context);labelColors.push(invokeCallbackWithFallback(scoped,'labelColor',this,context));labelPointStyles.push(invokeCallbackWithFallback(scoped,'labelPointStyle',this,context));labelTextColors.push(invokeCallbackWithFallback(scoped,'labelTextColor',this,context));});this.labelColors=labelColors;this.labelPointStyles=labelPointStyles;this.labelTextColors=labelTextColors;this.dataPoints=tooltipItems;return tooltipItems;}
update(changed,replay){const options=this.options.setContext(this.getContext());const active=this._active;let properties;let tooltipItems=[];if(!active.length){if(this.opacity!==0){properties={opacity:0};}}else{const position=positioners[options.position].call(this,active,this._eventPosition);tooltipItems=this._createItems(options);this.title=this.getTitle(tooltipItems,options);this.beforeBody=this.getBeforeBody(tooltipItems,options);this.body=this.getBody(tooltipItems,options);this.afterBody=this.getAfterBody(tooltipItems,options);this.footer=this.getFooter(tooltipItems,options);const size=this._size=getTooltipSize(this,options);const positionAndSize=Object.assign({},position,size);const alignment=determineAlignment(this.chart,options,positionAndSize);const backgroundPoint=getBackgroundPoint(options,positionAndSize,alignment,this.chart);this.xAlign=alignment.xAlign;this.yAlign=alignment.yAlign;properties={opacity:1,x:backgroundPoint.x,y:backgroundPoint.y,width:size.width,height:size.height,caretX:position.x,caretY:position.y};}
this._tooltipItems=tooltipItems;this.$context=undefined;if(properties){this._resolveAnimations().update(this,properties);}
if(changed&&options.external){options.external.call(this,{chart:this.chart,tooltip:this,replay});}}
drawCaret(tooltipPoint,ctx,size,options){const caretPosition=this.getCaretPosition(tooltipPoint,size,options);ctx.lineTo(caretPosition.x1,caretPosition.y1);ctx.lineTo(caretPosition.x2,caretPosition.y2);ctx.lineTo(caretPosition.x3,caretPosition.y3);}
getCaretPosition(tooltipPoint,size,options){const{xAlign,yAlign}=this;const{caretSize,cornerRadius}=options;const{topLeft,topRight,bottomLeft,bottomRight}=toTRBLCorners(cornerRadius);const{x:ptX,y:ptY}=tooltipPoint;const{width,height}=size;let x1,x2,x3,y1,y2,y3;if(yAlign==='center'){y2=ptY+height/2;if(xAlign==='left'){x1=ptX;x2=x1-caretSize;y1=y2+caretSize;y3=y2-caretSize;}else{x1=ptX+width;x2=x1+caretSize;y1=y2-caretSize;y3=y2+caretSize;}
x3=x1;}else{if(xAlign==='left'){x2=ptX+Math.max(topLeft,bottomLeft)+caretSize;}else if(xAlign==='right'){x2=ptX+width-Math.max(topRight,bottomRight)-caretSize;}else{x2=this.caretX;}
if(yAlign==='top'){y1=ptY;y2=y1-caretSize;x1=x2-caretSize;x3=x2+caretSize;}else{y1=ptY+height;y2=y1+caretSize;x1=x2+caretSize;x3=x2-caretSize;}
y3=y1;}
return{x1,x2,x3,y1,y2,y3};}
drawTitle(pt,ctx,options){const title=this.title;const length=title.length;let titleFont,titleSpacing,i;if(length){const rtlHelper=getRtlAdapter(options.rtl,this.x,this.width);pt.x=getAlignedX(this,options.titleAlign,options);ctx.textAlign=rtlHelper.textAlign(options.titleAlign);ctx.textBaseline='middle';titleFont=toFont(options.titleFont);titleSpacing=options.titleSpacing;ctx.fillStyle=options.titleColor;ctx.font=titleFont.string;for(i=0;i<length;++i){ctx.fillText(title[i],rtlHelper.x(pt.x),pt.y+titleFont.lineHeight/2);pt.y+=titleFont.lineHeight+titleSpacing;if(i+1===length){pt.y+=options.titleMarginBottom-titleSpacing;}}}}
_drawColorBox(ctx,pt,i,rtlHelper,options){const labelColor=this.labelColors[i];const labelPointStyle=this.labelPointStyles[i];const{boxHeight,boxWidth}=options;const bodyFont=toFont(options.bodyFont);const colorX=getAlignedX(this,'left',options);const rtlColorX=rtlHelper.x(colorX);const yOffSet=boxHeight<bodyFont.lineHeight?(bodyFont.lineHeight-boxHeight)/2:0;const colorY=pt.y+yOffSet;if(options.usePointStyle){const drawOptions={radius:Math.min(boxWidth,boxHeight)/2,pointStyle:labelPointStyle.pointStyle,rotation:labelPointStyle.rotation,borderWidth:1};const centerX=rtlHelper.leftForLtr(rtlColorX,boxWidth)+boxWidth/2;const centerY=colorY+boxHeight/2;ctx.strokeStyle=options.multiKeyBackground;ctx.fillStyle=options.multiKeyBackground;drawPoint(ctx,drawOptions,centerX,centerY);ctx.strokeStyle=labelColor.borderColor;ctx.fillStyle=labelColor.backgroundColor;drawPoint(ctx,drawOptions,centerX,centerY);}else{ctx.lineWidth=isObject(labelColor.borderWidth)?Math.max(...Object.values(labelColor.borderWidth)):labelColor.borderWidth||1;ctx.strokeStyle=labelColor.borderColor;ctx.setLineDash(labelColor.borderDash||[]);ctx.lineDashOffset=labelColor.borderDashOffset||0;const outerX=rtlHelper.leftForLtr(rtlColorX,boxWidth);const innerX=rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX,1),boxWidth-2);const borderRadius=toTRBLCorners(labelColor.borderRadius);if(Object.values(borderRadius).some((v)=>v!==0)){ctx.beginPath();ctx.fillStyle=options.multiKeyBackground;addRoundedRectPath(ctx,{x:outerX,y:colorY,w:boxWidth,h:boxHeight,radius:borderRadius});ctx.fill();ctx.stroke();ctx.fillStyle=labelColor.backgroundColor;ctx.beginPath();addRoundedRectPath(ctx,{x:innerX,y:colorY+1,w:boxWidth-2,h:boxHeight-2,radius:borderRadius});ctx.fill();}else{ctx.fillStyle=options.multiKeyBackground;ctx.fillRect(outerX,colorY,boxWidth,boxHeight);ctx.strokeRect(outerX,colorY,boxWidth,boxHeight);ctx.fillStyle=labelColor.backgroundColor;ctx.fillRect(innerX,colorY+1,boxWidth-2,boxHeight-2);}}
ctx.fillStyle=this.labelTextColors[i];}
drawBody(pt,ctx,options){const{body}=this;const{bodySpacing,bodyAlign,displayColors,boxHeight,boxWidth,boxPadding}=options;const bodyFont=toFont(options.bodyFont);let bodyLineHeight=bodyFont.lineHeight;let xLinePadding=0;const rtlHelper=getRtlAdapter(options.rtl,this.x,this.width);const fillLineOfText=function(line){ctx.fillText(line,rtlHelper.x(pt.x+xLinePadding),pt.y+bodyLineHeight/2);pt.y+=bodyLineHeight+bodySpacing;};const bodyAlignForCalculation=rtlHelper.textAlign(bodyAlign);let bodyItem,textColor,lines,i,j,ilen,jlen;ctx.textAlign=bodyAlign;ctx.textBaseline='middle';ctx.font=bodyFont.string;pt.x=getAlignedX(this,bodyAlignForCalculation,options);ctx.fillStyle=options.bodyColor;each(this.beforeBody,fillLineOfText);xLinePadding=displayColors&&bodyAlignForCalculation!=='right'?bodyAlign==='center'?boxWidth/2+boxPadding:boxWidth+2+boxPadding:0;for(i=0,ilen=body.length;i<ilen;++i){bodyItem=body[i];textColor=this.labelTextColors[i];ctx.fillStyle=textColor;each(bodyItem.before,fillLineOfText);lines=bodyItem.lines;if(displayColors&&lines.length){this._drawColorBox(ctx,pt,i,rtlHelper,options);bodyLineHeight=Math.max(bodyFont.lineHeight,boxHeight);}
for(j=0,jlen=lines.length;j<jlen;++j){fillLineOfText(lines[j]);bodyLineHeight=bodyFont.lineHeight;}
each(bodyItem.after,fillLineOfText);}
xLinePadding=0;bodyLineHeight=bodyFont.lineHeight;each(this.afterBody,fillLineOfText);pt.y-=bodySpacing;}
drawFooter(pt,ctx,options){const footer=this.footer;const length=footer.length;let footerFont,i;if(length){const rtlHelper=getRtlAdapter(options.rtl,this.x,this.width);pt.x=getAlignedX(this,options.footerAlign,options);pt.y+=options.footerMarginTop;ctx.textAlign=rtlHelper.textAlign(options.footerAlign);ctx.textBaseline='middle';footerFont=toFont(options.footerFont);ctx.fillStyle=options.footerColor;ctx.font=footerFont.string;for(i=0;i<length;++i){ctx.fillText(footer[i],rtlHelper.x(pt.x),pt.y+footerFont.lineHeight/2);pt.y+=footerFont.lineHeight+options.footerSpacing;}}}
drawBackground(pt,ctx,tooltipSize,options){const{xAlign,yAlign}=this;const{x,y}=pt;const{width,height}=tooltipSize;const{topLeft,topRight,bottomLeft,bottomRight}=toTRBLCorners(options.cornerRadius);ctx.fillStyle=options.backgroundColor;ctx.strokeStyle=options.borderColor;ctx.lineWidth=options.borderWidth;ctx.beginPath();ctx.moveTo(x+topLeft,y);if(yAlign==='top'){this.drawCaret(pt,ctx,tooltipSize,options);}
ctx.lineTo(x+width-topRight,y);ctx.quadraticCurveTo(x+width,y,x+width,y+topRight);if(yAlign==='center'&&xAlign==='right'){this.drawCaret(pt,ctx,tooltipSize,options);}
ctx.lineTo(x+width,y+height-bottomRight);ctx.quadraticCurveTo(x+width,y+height,x+width-bottomRight,y+height);if(yAlign==='bottom'){this.drawCaret(pt,ctx,tooltipSize,options);}
ctx.lineTo(x+bottomLeft,y+height);ctx.quadraticCurveTo(x,y+height,x,y+height-bottomLeft);if(yAlign==='center'&&xAlign==='left'){this.drawCaret(pt,ctx,tooltipSize,options);}
ctx.lineTo(x,y+topLeft);ctx.quadraticCurveTo(x,y,x+topLeft,y);ctx.closePath();ctx.fill();if(options.borderWidth>0){ctx.stroke();}}
_updateAnimationTarget(options){const chart=this.chart;const anims=this.$animations;const animX=anims&&anims.x;const animY=anims&&anims.y;if(animX||animY){const position=positioners[options.position].call(this,this._active,this._eventPosition);if(!position){return;}
const size=this._size=getTooltipSize(this,options);const positionAndSize=Object.assign({},position,this._size);const alignment=determineAlignment(chart,options,positionAndSize);const point=getBackgroundPoint(options,positionAndSize,alignment,chart);if(animX._to!==point.x||animY._to!==point.y){this.xAlign=alignment.xAlign;this.yAlign=alignment.yAlign;this.width=size.width;this.height=size.height;this.caretX=position.x;this.caretY=position.y;this._resolveAnimations().update(this,point);}}}
_willRender(){return!!this.opacity;}
draw(ctx){const options=this.options.setContext(this.getContext());let opacity=this.opacity;if(!opacity){return;}
this._updateAnimationTarget(options);const tooltipSize={width:this.width,height:this.height};const pt={x:this.x,y:this.y};opacity=Math.abs(opacity)<1e-3?0:opacity;const padding=toPadding(options.padding);const hasTooltipContent=this.title.length||this.beforeBody.length||this.body.length||this.afterBody.length||this.footer.length;if(options.enabled&&hasTooltipContent){ctx.save();ctx.globalAlpha=opacity;this.drawBackground(pt,ctx,tooltipSize,options);overrideTextDirection(ctx,options.textDirection);pt.y+=padding.top;this.drawTitle(pt,ctx,options);this.drawBody(pt,ctx,options);this.drawFooter(pt,ctx,options);restoreTextDirection(ctx,options.textDirection);ctx.restore();}}
getActiveElements(){return this._active||[];}
setActiveElements(activeElements,eventPosition){const lastActive=this._active;const active=activeElements.map(({datasetIndex,index})=>{const meta=this.chart.getDatasetMeta(datasetIndex);if(!meta){throw new Error('Cannot find a dataset at index '+datasetIndex);}
return{datasetIndex,element:meta.data[index],index};});const changed=!_elementsEqual(lastActive,active);const positionChanged=this._positionChanged(active,eventPosition);if(changed||positionChanged){this._active=active;this._eventPosition=eventPosition;this._ignoreReplayEvents=true;this.update(true);}}
handleEvent(e,replay,inChartArea=true){if(replay&&this._ignoreReplayEvents){return false;}
this._ignoreReplayEvents=false;const options=this.options;const lastActive=this._active||[];const active=this._getActiveElements(e,lastActive,replay,inChartArea);const positionChanged=this._positionChanged(active,e);const changed=replay||!_elementsEqual(active,lastActive)||positionChanged;if(changed){this._active=active;if(options.enabled||options.external){this._eventPosition={x:e.x,y:e.y};this.update(true,replay);}}
return changed;}
_getActiveElements(e,lastActive,replay,inChartArea){const options=this.options;if(e.type==='mouseout'){return[];}
if(!inChartArea){return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex]&&this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index)!==undefined);}
const active=this.chart.getElementsAtEventForMode(e,options.mode,options,replay);if(options.reverse){active.reverse();}
return active;}
_positionChanged(active,e){const{caretX,caretY,options}=this;const position=positioners[options.position].call(this,active,e);return position!==false&&(caretX!==position.x||caretY!==position.y);}}
var plugin_tooltip={id:'tooltip',_element:Tooltip,positioners,afterInit(chart,_args,options){if(options){chart.tooltip=new Tooltip({chart,options});}},beforeUpdate(chart,_args,options){if(chart.tooltip){chart.tooltip.initialize(options);}},reset(chart,_args,options){if(chart.tooltip){chart.tooltip.initialize(options);}},afterDraw(chart){const tooltip=chart.tooltip;if(tooltip&&tooltip._willRender()){const args={tooltip};if(chart.notifyPlugins('beforeTooltipDraw',{...args,cancelable:true})===false){return;}
tooltip.draw(chart.ctx);chart.notifyPlugins('afterTooltipDraw',args);}},afterEvent(chart,args){if(chart.tooltip){const useFinalPosition=args.replay;if(chart.tooltip.handleEvent(args.event,useFinalPosition,args.inChartArea)){args.changed=true;}}},defaults:{enabled:true,external:null,position:'average',backgroundColor:'rgba(0,0,0,0.8)',titleColor:'#fff',titleFont:{weight:'bold'},titleSpacing:2,titleMarginBottom:6,titleAlign:'left',bodyColor:'#fff',bodySpacing:2,bodyFont:{},bodyAlign:'left',footerColor:'#fff',footerSpacing:2,footerMarginTop:6,footerFont:{weight:'bold'},footerAlign:'left',padding:6,caretPadding:2,caretSize:5,cornerRadius:6,boxHeight:(ctx,opts)=>opts.bodyFont.size,boxWidth:(ctx,opts)=>opts.bodyFont.size,multiKeyBackground:'#fff',displayColors:true,boxPadding:0,borderColor:'rgba(0,0,0,0)',borderWidth:0,animation:{duration:400,easing:'easeOutQuart'},animations:{numbers:{type:'number',properties:['x','y','width','height','caretX','caretY']},opacity:{easing:'linear',duration:200}},callbacks:defaultCallbacks},defaultRoutes:{bodyFont:'font',footerFont:'font',titleFont:'font'},descriptors:{_scriptable:(name)=>name!=='filter'&&name!=='itemSort'&&name!=='external',_indexable:false,callbacks:{_scriptable:false,_indexable:false},animation:{_fallback:false},animations:{_fallback:'animation'}},additionalOptionScopes:['interaction']};Chart.register(controllers,scales,elements,plugins);Chart.helpers={...helpers};Chart._adapters=_adapters;Chart.Animation=Animation;Chart.Animations=Animations;Chart.animator=animator;Chart.controllers=registry.controllers.items;Chart.DatasetController=DatasetController;Chart.Element=Element;Chart.elements=elements;Chart.Interaction=Interaction;Chart.layouts=layouts;Chart.platforms=platforms;Chart.Scale=Scale;Chart.Ticks=Ticks;Object.assign(Chart,controllers,scales,elements,plugins,platforms);Chart.Chart=Chart;if(typeof window!=='undefined'){window.Chart=Chart;}
return Chart;}));;

/* /web/static/lib/chartjs-adapter-luxon/chartjs-adapter-luxon.js */
(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory(require("chart.js"),require("luxon")):typeof define==="function"&&define.amd?define(["chart.js","luxon"],factory):((global=typeof globalThis!=="undefined"?globalThis:global||self),factory(global.Chart,global.luxon));})(this,function(chart_js,luxon){"use strict";const FORMATS={datetime:luxon.DateTime.DATETIME_MED_WITH_SECONDS,millisecond:"h:mm:ss.SSS a",second:luxon.DateTime.TIME_WITH_SECONDS,minute:luxon.DateTime.TIME_SIMPLE,hour:{hour:"numeric"},day:{day:"numeric",month:"short"},week:"DD",month:{month:"short",year:"numeric"},quarter:"'Q'q - yyyy",year:{year:"numeric"},};chart_js._adapters._date.override({_id:"luxon",_create:function(time){return luxon.DateTime.fromMillis(time,this.options);},init(chartOptions){if(!this.options.locale){this.options.locale=chartOptions.locale;}},formats:function(){return FORMATS;},parse:function(value,format){const options=this.options;const type=typeof value;if(value===null||type==="undefined"){return null;}
if(type==="number"){value=this._create(value);}else if(type==="string"){if(typeof format==="string"){value=luxon.DateTime.fromFormat(value,format,options);}else{value=luxon.DateTime.fromISO(value,options);}}else if(value instanceof Date){value=luxon.DateTime.fromJSDate(value,options);}else if(type==="object"&&!(value instanceof luxon.DateTime)){value=luxon.DateTime.fromObject(value,options);}
return value.isValid?value.valueOf():null;},format:function(time,format){const datetime=this._create(time);return typeof format==="string"?datetime.toFormat(format):datetime.toLocaleString(format);},add:function(time,amount,unit){const args={};args[unit]=amount;return this._create(time).plus(args).valueOf();},diff:function(max,min,unit){return this._create(max).diff(this._create(min)).as(unit).valueOf();},startOf:function(time,unit,weekday){if(unit==="isoWeek"){weekday=Math.trunc(Math.min(Math.max(0,weekday),6));const dateTime=this._create(time);return dateTime.minus({days:(dateTime.weekday-weekday+7)%7}).startOf("day").valueOf();}
return unit?this._create(time).startOf(unit).valueOf():time;},endOf:function(time,unit){return this._create(time).endOf(unit).valueOf();},});});;

/* /spreadsheet/static/lib/chartjs-chart-geo/chartjs-chart-geo.js */
(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?factory(exports,require('chart.js'),require('chart.js/helpers')):typeof define==='function'&&define.amd?define(['exports','chart.js','chart.js/helpers'],factory):(global=typeof globalThis!=='undefined'?globalThis:global||self,factory(global.ChartGeo={},global.Chart,global.Chart.helpers));})(this,(function(exports,chart_js,helpers){'use strict';class Adder{constructor(){this._partials=new Float64Array(32);this._n=0;}
add(x){const p=this._partials;let i=0;for(let j=0;j<this._n&&j<32;j++){const y=p[j],hi=x+y,lo=Math.abs(x)<Math.abs(y)?x-(hi-y):y-(hi-x);if(lo)p[i++]=lo;x=hi;}
p[i]=x;this._n=i+1;return this;}
valueOf(){const p=this._partials;let n=this._n,x,y,lo,hi=0;if(n>0){hi=p[--n];while(n>0){x=hi;y=p[--n];hi=x+y;lo=y-(hi-x);if(lo)break;}
if(n>0&&((lo<0&&p[n-1]<0)||(lo>0&&p[n-1]>0))){y=lo*2;x=hi+y;if(y==x-hi)hi=x;}}
return hi;}}
function*flatten(arrays){for(const array of arrays){yield*array;}}
function merge$1(arrays){return Array.from(flatten(arrays));}
function range(start,stop,step){start=+start,stop=+stop,step=(n=arguments.length)<2?(stop=start,start=0,1):n<3?1:+step;var i=-1,n=Math.max(0,Math.ceil((stop-start)/step))|0,range=new Array(n);while(++i<n){range[i]=start+i*step;}
return range;}
var epsilon=1e-6;var epsilon2=1e-12;var pi=Math.PI;var halfPi=pi/2;var quarterPi=pi/4;var tau=pi*2;var degrees$1=180/pi;var radians$1=pi/180;var abs=Math.abs;var atan=Math.atan;var atan2=Math.atan2;var cos=Math.cos;var ceil=Math.ceil;var exp=Math.exp;var log=Math.log;var pow=Math.pow;var sin=Math.sin;var sign=Math.sign||function(x){return x>0?1:x<0?-1:0;};var sqrt=Math.sqrt;var tan=Math.tan;function acos(x){return x>1?0:x<-1?pi:Math.acos(x);}
function asin(x){return x>1?halfPi:x<-1?-halfPi:Math.asin(x);}
function noop(){}
function streamGeometry(geometry,stream){if(geometry&&streamGeometryType.hasOwnProperty(geometry.type)){streamGeometryType[geometry.type](geometry,stream);}}
var streamObjectType={Feature:function(object,stream){streamGeometry(object.geometry,stream);},FeatureCollection:function(object,stream){var features=object.features,i=-1,n=features.length;while(++i<n)streamGeometry(features[i].geometry,stream);}};var streamGeometryType={Sphere:function(object,stream){stream.sphere();},Point:function(object,stream){object=object.coordinates;stream.point(object[0],object[1],object[2]);},MultiPoint:function(object,stream){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)object=coordinates[i],stream.point(object[0],object[1],object[2]);},LineString:function(object,stream){streamLine(object.coordinates,stream,0);},MultiLineString:function(object,stream){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)streamLine(coordinates[i],stream,0);},Polygon:function(object,stream){streamPolygon(object.coordinates,stream);},MultiPolygon:function(object,stream){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)streamPolygon(coordinates[i],stream);},GeometryCollection:function(object,stream){var geometries=object.geometries,i=-1,n=geometries.length;while(++i<n)streamGeometry(geometries[i],stream);}};function streamLine(coordinates,stream,closed){var i=-1,n=coordinates.length-closed,coordinate;stream.lineStart();while(++i<n)coordinate=coordinates[i],stream.point(coordinate[0],coordinate[1],coordinate[2]);stream.lineEnd();}
function streamPolygon(coordinates,stream){var i=-1,n=coordinates.length;stream.polygonStart();while(++i<n)streamLine(coordinates[i],stream,1);stream.polygonEnd();}
function geoStream(object,stream){if(object&&streamObjectType.hasOwnProperty(object.type)){streamObjectType[object.type](object,stream);}else{streamGeometry(object,stream);}}
function spherical(cartesian){return[atan2(cartesian[1],cartesian[0]),asin(cartesian[2])];}
function cartesian(spherical){var lambda=spherical[0],phi=spherical[1],cosPhi=cos(phi);return[cosPhi*cos(lambda),cosPhi*sin(lambda),sin(phi)];}
function cartesianDot(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2];}
function cartesianCross(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]];}
function cartesianAddInPlace(a,b){a[0]+=b[0],a[1]+=b[1],a[2]+=b[2];}
function cartesianScale(vector,k){return[vector[0]*k,vector[1]*k,vector[2]*k];}
function cartesianNormalizeInPlace(d){var l=sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);d[0]/=l,d[1]/=l,d[2]/=l;}
function compose(a,b){function compose(x,y){return x=a(x,y),b(x[0],x[1]);}
if(a.invert&&b.invert)compose.invert=function(x,y){return x=b.invert(x,y),x&&a.invert(x[0],x[1]);};return compose;}
function rotationIdentity(lambda,phi){if(abs(lambda)>pi)lambda-=Math.round(lambda/tau)*tau;return[lambda,phi];}
rotationIdentity.invert=rotationIdentity;function rotateRadians(deltaLambda,deltaPhi,deltaGamma){return(deltaLambda%=tau)?(deltaPhi||deltaGamma?compose(rotationLambda(deltaLambda),rotationPhiGamma(deltaPhi,deltaGamma)):rotationLambda(deltaLambda)):(deltaPhi||deltaGamma?rotationPhiGamma(deltaPhi,deltaGamma):rotationIdentity);}
function forwardRotationLambda(deltaLambda){return function(lambda,phi){lambda+=deltaLambda;if(abs(lambda)>pi)lambda-=Math.round(lambda/tau)*tau;return[lambda,phi];};}
function rotationLambda(deltaLambda){var rotation=forwardRotationLambda(deltaLambda);rotation.invert=forwardRotationLambda(-deltaLambda);return rotation;}
function rotationPhiGamma(deltaPhi,deltaGamma){var cosDeltaPhi=cos(deltaPhi),sinDeltaPhi=sin(deltaPhi),cosDeltaGamma=cos(deltaGamma),sinDeltaGamma=sin(deltaGamma);function rotation(lambda,phi){var cosPhi=cos(phi),x=cos(lambda)*cosPhi,y=sin(lambda)*cosPhi,z=sin(phi),k=z*cosDeltaPhi+x*sinDeltaPhi;return[atan2(y*cosDeltaGamma-k*sinDeltaGamma,x*cosDeltaPhi-z*sinDeltaPhi),asin(k*cosDeltaGamma+y*sinDeltaGamma)];}
rotation.invert=function(lambda,phi){var cosPhi=cos(phi),x=cos(lambda)*cosPhi,y=sin(lambda)*cosPhi,z=sin(phi),k=z*cosDeltaGamma-y*sinDeltaGamma;return[atan2(y*cosDeltaGamma+z*sinDeltaGamma,x*cosDeltaPhi+k*sinDeltaPhi),asin(k*cosDeltaPhi-x*sinDeltaPhi)];};return rotation;}
function rotation(rotate){rotate=rotateRadians(rotate[0]*radians$1,rotate[1]*radians$1,rotate.length>2?rotate[2]*radians$1:0);function forward(coordinates){coordinates=rotate(coordinates[0]*radians$1,coordinates[1]*radians$1);return coordinates[0]*=degrees$1,coordinates[1]*=degrees$1,coordinates;}
forward.invert=function(coordinates){coordinates=rotate.invert(coordinates[0]*radians$1,coordinates[1]*radians$1);return coordinates[0]*=degrees$1,coordinates[1]*=degrees$1,coordinates;};return forward;}
function circleStream(stream,radius,delta,direction,t0,t1){if(!delta)return;var cosRadius=cos(radius),sinRadius=sin(radius),step=direction*delta;if(t0==null){t0=radius+direction*tau;t1=radius-step/2;}else{t0=circleRadius(cosRadius,t0);t1=circleRadius(cosRadius,t1);if(direction>0?t0<t1:t0>t1)t0+=direction*tau;}
for(var point,t=t0;direction>0?t>t1:t<t1;t-=step){point=spherical([cosRadius,-sinRadius*cos(t),-sinRadius*sin(t)]);stream.point(point[0],point[1]);}}
function circleRadius(cosRadius,point){point=cartesian(point),point[0]-=cosRadius;cartesianNormalizeInPlace(point);var radius=acos(-point[1]);return((-point[2]<0?-radius:radius)+tau-epsilon)%tau;}
function clipBuffer(){var lines=[],line;return{point:function(x,y,m){line.push([x,y,m]);},lineStart:function(){lines.push(line=[]);},lineEnd:noop,rejoin:function(){if(lines.length>1)lines.push(lines.pop().concat(lines.shift()));},result:function(){var result=lines;lines=[];line=null;return result;}};}
function pointEqual(a,b){return abs(a[0]-b[0])<epsilon&&abs(a[1]-b[1])<epsilon;}
function Intersection(point,points,other,entry){this.x=point;this.z=points;this.o=other;this.e=entry;this.v=false;this.n=this.p=null;}
function clipRejoin(segments,compareIntersection,startInside,interpolate,stream){var subject=[],clip=[],i,n;segments.forEach(function(segment){if((n=segment.length-1)<=0)return;var n,p0=segment[0],p1=segment[n],x;if(pointEqual(p0,p1)){if(!p0[2]&&!p1[2]){stream.lineStart();for(i=0;i<n;++i)stream.point((p0=segment[i])[0],p0[1]);stream.lineEnd();return;}
p1[0]+=2*epsilon;}
subject.push(x=new Intersection(p0,segment,null,true));clip.push(x.o=new Intersection(p0,null,x,false));subject.push(x=new Intersection(p1,segment,null,false));clip.push(x.o=new Intersection(p1,null,x,true));});if(!subject.length)return;clip.sort(compareIntersection);link(subject);link(clip);for(i=0,n=clip.length;i<n;++i){clip[i].e=startInside=!startInside;}
var start=subject[0],points,point;while(1){var current=start,isSubject=true;while(current.v)if((current=current.n)===start)return;points=current.z;stream.lineStart();do{current.v=current.o.v=true;if(current.e){if(isSubject){for(i=0,n=points.length;i<n;++i)stream.point((point=points[i])[0],point[1]);}else{interpolate(current.x,current.n.x,1,stream);}
current=current.n;}else{if(isSubject){points=current.p.z;for(i=points.length-1;i>=0;--i)stream.point((point=points[i])[0],point[1]);}else{interpolate(current.x,current.p.x,-1,stream);}
current=current.p;}
current=current.o;points=current.z;isSubject=!isSubject;}while(!current.v);stream.lineEnd();}}
function link(array){if(!(n=array.length))return;var n,i=0,a=array[0],b;while(++i<n){a.n=b=array[i];b.p=a;a=b;}
a.n=b=array[0];b.p=a;}
function longitude(point){return abs(point[0])<=pi?point[0]:sign(point[0])*((abs(point[0])+pi)%tau-pi);}
function polygonContains(polygon,point){var lambda=longitude(point),phi=point[1],sinPhi=sin(phi),normal=[sin(lambda),-cos(lambda),0],angle=0,winding=0;var sum=new Adder();if(sinPhi===1)phi=halfPi+epsilon;else if(sinPhi===-1)phi=-halfPi-epsilon;for(var i=0,n=polygon.length;i<n;++i){if(!(m=(ring=polygon[i]).length))continue;var ring,m,point0=ring[m-1],lambda0=longitude(point0),phi0=point0[1]/2+quarterPi,sinPhi0=sin(phi0),cosPhi0=cos(phi0);for(var j=0;j<m;++j,lambda0=lambda1,sinPhi0=sinPhi1,cosPhi0=cosPhi1,point0=point1){var point1=ring[j],lambda1=longitude(point1),phi1=point1[1]/2+quarterPi,sinPhi1=sin(phi1),cosPhi1=cos(phi1),delta=lambda1-lambda0,sign=delta>=0?1:-1,absDelta=sign*delta,antimeridian=absDelta>pi,k=sinPhi0*sinPhi1;sum.add(atan2(k*sign*sin(absDelta),cosPhi0*cosPhi1+k*cos(absDelta)));angle+=antimeridian?delta+sign*tau:delta;if(antimeridian^lambda0>=lambda^lambda1>=lambda){var arc=cartesianCross(cartesian(point0),cartesian(point1));cartesianNormalizeInPlace(arc);var intersection=cartesianCross(normal,arc);cartesianNormalizeInPlace(intersection);var phiArc=(antimeridian^delta>=0?-1:1)*asin(intersection[2]);if(phi>phiArc||phi===phiArc&&(arc[0]||arc[1])){winding+=antimeridian^delta>=0?1:-1;}}}}
return(angle<-epsilon||angle<epsilon&&sum<-epsilon2)^(winding&1);}
function clip(pointVisible,clipLine,interpolate,start){return function(sink){var line=clipLine(sink),ringBuffer=clipBuffer(),ringSink=clipLine(ringBuffer),polygonStarted=false,polygon,segments,ring;var clip={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function(){clip.point=pointRing;clip.lineStart=ringStart;clip.lineEnd=ringEnd;segments=[];polygon=[];},polygonEnd:function(){clip.point=point;clip.lineStart=lineStart;clip.lineEnd=lineEnd;segments=merge$1(segments);var startInside=polygonContains(polygon,start);if(segments.length){if(!polygonStarted)sink.polygonStart(),polygonStarted=true;clipRejoin(segments,compareIntersection,startInside,interpolate,sink);}else if(startInside){if(!polygonStarted)sink.polygonStart(),polygonStarted=true;sink.lineStart();interpolate(null,null,1,sink);sink.lineEnd();}
if(polygonStarted)sink.polygonEnd(),polygonStarted=false;segments=polygon=null;},sphere:function(){sink.polygonStart();sink.lineStart();interpolate(null,null,1,sink);sink.lineEnd();sink.polygonEnd();}};function point(lambda,phi){if(pointVisible(lambda,phi))sink.point(lambda,phi);}
function pointLine(lambda,phi){line.point(lambda,phi);}
function lineStart(){clip.point=pointLine;line.lineStart();}
function lineEnd(){clip.point=point;line.lineEnd();}
function pointRing(lambda,phi){ring.push([lambda,phi]);ringSink.point(lambda,phi);}
function ringStart(){ringSink.lineStart();ring=[];}
function ringEnd(){pointRing(ring[0][0],ring[0][1]);ringSink.lineEnd();var clean=ringSink.clean(),ringSegments=ringBuffer.result(),i,n=ringSegments.length,m,segment,point;ring.pop();polygon.push(ring);ring=null;if(!n)return;if(clean&1){segment=ringSegments[0];if((m=segment.length-1)>0){if(!polygonStarted)sink.polygonStart(),polygonStarted=true;sink.lineStart();for(i=0;i<m;++i)sink.point((point=segment[i])[0],point[1]);sink.lineEnd();}
return;}
if(n>1&&clean&2)ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));segments.push(ringSegments.filter(validSegment));}
return clip;};}
function validSegment(segment){return segment.length>1;}
function compareIntersection(a,b){return((a=a.x)[0]<0?a[1]-halfPi-epsilon:halfPi-a[1])
-((b=b.x)[0]<0?b[1]-halfPi-epsilon:halfPi-b[1]);}
var clipAntimeridian=clip(function(){return true;},clipAntimeridianLine,clipAntimeridianInterpolate,[-pi,-halfPi]);function clipAntimeridianLine(stream){var lambda0=NaN,phi0=NaN,sign0=NaN,clean;return{lineStart:function(){stream.lineStart();clean=1;},point:function(lambda1,phi1){var sign1=lambda1>0?pi:-pi,delta=abs(lambda1-lambda0);if(abs(delta-pi)<epsilon){stream.point(lambda0,phi0=(phi0+phi1)/2>0?halfPi:-halfPi);stream.point(sign0,phi0);stream.lineEnd();stream.lineStart();stream.point(sign1,phi0);stream.point(lambda1,phi0);clean=0;}else if(sign0!==sign1&&delta>=pi){if(abs(lambda0-sign0)<epsilon)lambda0-=sign0*epsilon;if(abs(lambda1-sign1)<epsilon)lambda1-=sign1*epsilon;phi0=clipAntimeridianIntersect(lambda0,phi0,lambda1,phi1);stream.point(sign0,phi0);stream.lineEnd();stream.lineStart();stream.point(sign1,phi0);clean=0;}
stream.point(lambda0=lambda1,phi0=phi1);sign0=sign1;},lineEnd:function(){stream.lineEnd();lambda0=phi0=NaN;},clean:function(){return 2-clean;}};}
function clipAntimeridianIntersect(lambda0,phi0,lambda1,phi1){var cosPhi0,cosPhi1,sinLambda0Lambda1=sin(lambda0-lambda1);return abs(sinLambda0Lambda1)>epsilon?atan((sin(phi0)*(cosPhi1=cos(phi1))*sin(lambda1)
-sin(phi1)*(cosPhi0=cos(phi0))*sin(lambda0))/(cosPhi0*cosPhi1*sinLambda0Lambda1)):(phi0+phi1)/2;}
function clipAntimeridianInterpolate(from,to,direction,stream){var phi;if(from==null){phi=direction*halfPi;stream.point(-pi,phi);stream.point(0,phi);stream.point(pi,phi);stream.point(pi,0);stream.point(pi,-phi);stream.point(0,-phi);stream.point(-pi,-phi);stream.point(-pi,0);stream.point(-pi,phi);}else if(abs(from[0]-to[0])>epsilon){var lambda=from[0]<to[0]?pi:-pi;phi=direction*lambda/2;stream.point(-lambda,phi);stream.point(0,phi);stream.point(lambda,phi);}else{stream.point(to[0],to[1]);}}
function clipCircle(radius){var cr=cos(radius),delta=2*radians$1,smallRadius=cr>0,notHemisphere=abs(cr)>epsilon;function interpolate(from,to,direction,stream){circleStream(stream,radius,delta,direction,from,to);}
function visible(lambda,phi){return cos(lambda)*cos(phi)>cr;}
function clipLine(stream){var point0,c0,v0,v00,clean;return{lineStart:function(){v00=v0=false;clean=1;},point:function(lambda,phi){var point1=[lambda,phi],point2,v=visible(lambda,phi),c=smallRadius?v?0:code(lambda,phi):v?code(lambda+(lambda<0?pi:-pi),phi):0;if(!point0&&(v00=v0=v))stream.lineStart();if(v!==v0){point2=intersect(point0,point1);if(!point2||pointEqual(point0,point2)||pointEqual(point1,point2))
point1[2]=1;}
if(v!==v0){clean=0;if(v){stream.lineStart();point2=intersect(point1,point0);stream.point(point2[0],point2[1]);}else{point2=intersect(point0,point1);stream.point(point2[0],point2[1],2);stream.lineEnd();}
point0=point2;}else if(notHemisphere&&point0&&smallRadius^v){var t;if(!(c&c0)&&(t=intersect(point1,point0,true))){clean=0;if(smallRadius){stream.lineStart();stream.point(t[0][0],t[0][1]);stream.point(t[1][0],t[1][1]);stream.lineEnd();}else{stream.point(t[1][0],t[1][1]);stream.lineEnd();stream.lineStart();stream.point(t[0][0],t[0][1],3);}}}
if(v&&(!point0||!pointEqual(point0,point1))){stream.point(point1[0],point1[1]);}
point0=point1,v0=v,c0=c;},lineEnd:function(){if(v0)stream.lineEnd();point0=null;},clean:function(){return clean|((v00&&v0)<<1);}};}
function intersect(a,b,two){var pa=cartesian(a),pb=cartesian(b);var n1=[1,0,0],n2=cartesianCross(pa,pb),n2n2=cartesianDot(n2,n2),n1n2=n2[0],determinant=n2n2-n1n2*n1n2;if(!determinant)return!two&&a;var c1=cr*n2n2/determinant,c2=-cr*n1n2/determinant,n1xn2=cartesianCross(n1,n2),A=cartesianScale(n1,c1),B=cartesianScale(n2,c2);cartesianAddInPlace(A,B);var u=n1xn2,w=cartesianDot(A,u),uu=cartesianDot(u,u),t2=w*w-uu*(cartesianDot(A,A)-1);if(t2<0)return;var t=sqrt(t2),q=cartesianScale(u,(-w-t)/uu);cartesianAddInPlace(q,A);q=spherical(q);if(!two)return q;var lambda0=a[0],lambda1=b[0],phi0=a[1],phi1=b[1],z;if(lambda1<lambda0)z=lambda0,lambda0=lambda1,lambda1=z;var delta=lambda1-lambda0,polar=abs(delta-pi)<epsilon,meridian=polar||delta<epsilon;if(!polar&&phi1<phi0)z=phi0,phi0=phi1,phi1=z;if(meridian?polar?phi0+phi1>0^q[1]<(abs(q[0]-lambda0)<epsilon?phi0:phi1):phi0<=q[1]&&q[1]<=phi1:delta>pi^(lambda0<=q[0]&&q[0]<=lambda1)){var q1=cartesianScale(u,(-w+t)/uu);cartesianAddInPlace(q1,A);return[q,spherical(q1)];}}
function code(lambda,phi){var r=smallRadius?radius:pi-radius,code=0;if(lambda<-r)code|=1;else if(lambda>r)code|=2;if(phi<-r)code|=4;else if(phi>r)code|=8;return code;}
return clip(visible,clipLine,interpolate,smallRadius?[0,-radius]:[-pi,radius-pi]);}
function clipLine(a,b,x0,y0,x1,y1){var ax=a[0],ay=a[1],bx=b[0],by=b[1],t0=0,t1=1,dx=bx-ax,dy=by-ay,r;r=x0-ax;if(!dx&&r>0)return;r/=dx;if(dx<0){if(r<t0)return;if(r<t1)t1=r;}else if(dx>0){if(r>t1)return;if(r>t0)t0=r;}
r=x1-ax;if(!dx&&r<0)return;r/=dx;if(dx<0){if(r>t1)return;if(r>t0)t0=r;}else if(dx>0){if(r<t0)return;if(r<t1)t1=r;}
r=y0-ay;if(!dy&&r>0)return;r/=dy;if(dy<0){if(r<t0)return;if(r<t1)t1=r;}else if(dy>0){if(r>t1)return;if(r>t0)t0=r;}
r=y1-ay;if(!dy&&r<0)return;r/=dy;if(dy<0){if(r>t1)return;if(r>t0)t0=r;}else if(dy>0){if(r<t0)return;if(r<t1)t1=r;}
if(t0>0)a[0]=ax+t0*dx,a[1]=ay+t0*dy;if(t1<1)b[0]=ax+t1*dx,b[1]=ay+t1*dy;return true;}
var clipMax=1e9,clipMin=-clipMax;function clipRectangle(x0,y0,x1,y1){function visible(x,y){return x0<=x&&x<=x1&&y0<=y&&y<=y1;}
function interpolate(from,to,direction,stream){var a=0,a1=0;if(from==null||(a=corner(from,direction))!==(a1=corner(to,direction))||comparePoint(from,to)<0^direction>0){do stream.point(a===0||a===3?x0:x1,a>1?y1:y0);while((a=(a+direction+4)%4)!==a1);}else{stream.point(to[0],to[1]);}}
function corner(p,direction){return abs(p[0]-x0)<epsilon?direction>0?0:3:abs(p[0]-x1)<epsilon?direction>0?2:1:abs(p[1]-y0)<epsilon?direction>0?1:0:direction>0?3:2;}
function compareIntersection(a,b){return comparePoint(a.x,b.x);}
function comparePoint(a,b){var ca=corner(a,1),cb=corner(b,1);return ca!==cb?ca-cb:ca===0?b[1]-a[1]:ca===1?a[0]-b[0]:ca===2?a[1]-b[1]:b[0]-a[0];}
return function(stream){var activeStream=stream,bufferStream=clipBuffer(),segments,polygon,ring,x__,y__,v__,x_,y_,v_,first,clean;var clipStream={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:polygonStart,polygonEnd:polygonEnd};function point(x,y){if(visible(x,y))activeStream.point(x,y);}
function polygonInside(){var winding=0;for(var i=0,n=polygon.length;i<n;++i){for(var ring=polygon[i],j=1,m=ring.length,point=ring[0],a0,a1,b0=point[0],b1=point[1];j<m;++j){a0=b0,a1=b1,point=ring[j],b0=point[0],b1=point[1];if(a1<=y1){if(b1>y1&&(b0-a0)*(y1-a1)>(b1-a1)*(x0-a0))++winding;}
else{if(b1<=y1&&(b0-a0)*(y1-a1)<(b1-a1)*(x0-a0))--winding;}}}
return winding;}
function polygonStart(){activeStream=bufferStream,segments=[],polygon=[],clean=true;}
function polygonEnd(){var startInside=polygonInside(),cleanInside=clean&&startInside,visible=(segments=merge$1(segments)).length;if(cleanInside||visible){stream.polygonStart();if(cleanInside){stream.lineStart();interpolate(null,null,1,stream);stream.lineEnd();}
if(visible){clipRejoin(segments,compareIntersection,startInside,interpolate,stream);}
stream.polygonEnd();}
activeStream=stream,segments=polygon=ring=null;}
function lineStart(){clipStream.point=linePoint;if(polygon)polygon.push(ring=[]);first=true;v_=false;x_=y_=NaN;}
function lineEnd(){if(segments){linePoint(x__,y__);if(v__&&v_)bufferStream.rejoin();segments.push(bufferStream.result());}
clipStream.point=point;if(v_)activeStream.lineEnd();}
function linePoint(x,y){var v=visible(x,y);if(polygon)ring.push([x,y]);if(first){x__=x,y__=y,v__=v;first=false;if(v){activeStream.lineStart();activeStream.point(x,y);}}else{if(v&&v_)activeStream.point(x,y);else{var a=[x_=Math.max(clipMin,Math.min(clipMax,x_)),y_=Math.max(clipMin,Math.min(clipMax,y_))],b=[x=Math.max(clipMin,Math.min(clipMax,x)),y=Math.max(clipMin,Math.min(clipMax,y))];if(clipLine(a,b,x0,y0,x1,y1)){if(!v_){activeStream.lineStart();activeStream.point(a[0],a[1]);}
activeStream.point(b[0],b[1]);if(!v)activeStream.lineEnd();clean=false;}else if(v){activeStream.lineStart();activeStream.point(x,y);clean=false;}}}
x_=x,y_=y,v_=v;}
return clipStream;};}
var lengthSum$1,lambda0,sinPhi0,cosPhi0;var lengthStream$1={sphere:noop,point:noop,lineStart:lengthLineStart,lineEnd:noop,polygonStart:noop,polygonEnd:noop};function lengthLineStart(){lengthStream$1.point=lengthPointFirst$1;lengthStream$1.lineEnd=lengthLineEnd;}
function lengthLineEnd(){lengthStream$1.point=lengthStream$1.lineEnd=noop;}
function lengthPointFirst$1(lambda,phi){lambda*=radians$1,phi*=radians$1;lambda0=lambda,sinPhi0=sin(phi),cosPhi0=cos(phi);lengthStream$1.point=lengthPoint$1;}
function lengthPoint$1(lambda,phi){lambda*=radians$1,phi*=radians$1;var sinPhi=sin(phi),cosPhi=cos(phi),delta=abs(lambda-lambda0),cosDelta=cos(delta),sinDelta=sin(delta),x=cosPhi*sinDelta,y=cosPhi0*sinPhi-sinPhi0*cosPhi*cosDelta,z=sinPhi0*sinPhi+cosPhi0*cosPhi*cosDelta;lengthSum$1.add(atan2(sqrt(x*x+y*y),z));lambda0=lambda,sinPhi0=sinPhi,cosPhi0=cosPhi;}
function length(object){lengthSum$1=new Adder();geoStream(object,lengthStream$1);return+lengthSum$1;}
var coordinates=[null,null],object$1={type:"LineString",coordinates:coordinates};function distance(a,b){coordinates[0]=a;coordinates[1]=b;return length(object$1);}
var containsObjectType={Feature:function(object,point){return containsGeometry(object.geometry,point);},FeatureCollection:function(object,point){var features=object.features,i=-1,n=features.length;while(++i<n)if(containsGeometry(features[i].geometry,point))return true;return false;}};var containsGeometryType={Sphere:function(){return true;},Point:function(object,point){return containsPoint(object.coordinates,point);},MultiPoint:function(object,point){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)if(containsPoint(coordinates[i],point))return true;return false;},LineString:function(object,point){return containsLine(object.coordinates,point);},MultiLineString:function(object,point){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)if(containsLine(coordinates[i],point))return true;return false;},Polygon:function(object,point){return containsPolygon(object.coordinates,point);},MultiPolygon:function(object,point){var coordinates=object.coordinates,i=-1,n=coordinates.length;while(++i<n)if(containsPolygon(coordinates[i],point))return true;return false;},GeometryCollection:function(object,point){var geometries=object.geometries,i=-1,n=geometries.length;while(++i<n)if(containsGeometry(geometries[i],point))return true;return false;}};function containsGeometry(geometry,point){return geometry&&containsGeometryType.hasOwnProperty(geometry.type)?containsGeometryType[geometry.type](geometry,point):false;}
function containsPoint(coordinates,point){return distance(coordinates,point)===0;}
function containsLine(coordinates,point){var ao,bo,ab;for(var i=0,n=coordinates.length;i<n;i++){bo=distance(coordinates[i],point);if(bo===0)return true;if(i>0){ab=distance(coordinates[i],coordinates[i-1]);if(ab>0&&ao<=ab&&bo<=ab&&(ao+bo-ab)*(1-Math.pow((ao-bo)/ab,2))<epsilon2*ab)
return true;}
ao=bo;}
return false;}
function containsPolygon(coordinates,point){return!!polygonContains(coordinates.map(ringRadians),pointRadians(point));}
function ringRadians(ring){return ring=ring.map(pointRadians),ring.pop(),ring;}
function pointRadians(point){return[point[0]*radians$1,point[1]*radians$1];}
function geoContains(object,point){return(object&&containsObjectType.hasOwnProperty(object.type)?containsObjectType[object.type]:containsGeometry)(object,point);}
function graticuleX(y0,y1,dy){var y=range(y0,y1-epsilon,dy).concat(y1);return function(x){return y.map(function(y){return[x,y];});};}
function graticuleY(x0,x1,dx){var x=range(x0,x1-epsilon,dx).concat(x1);return function(y){return x.map(function(x){return[x,y];});};}
function graticule(){var x1,x0,X1,X0,y1,y0,Y1,Y0,dx=10,dy=dx,DX=90,DY=360,x,y,X,Y,precision=2.5;function graticule(){return{type:"MultiLineString",coordinates:lines()};}
function lines(){return range(ceil(X0/DX)*DX,X1,DX).map(X).concat(range(ceil(Y0/DY)*DY,Y1,DY).map(Y)).concat(range(ceil(x0/dx)*dx,x1,dx).filter(function(x){return abs(x%DX)>epsilon;}).map(x)).concat(range(ceil(y0/dy)*dy,y1,dy).filter(function(y){return abs(y%DY)>epsilon;}).map(y));}
graticule.lines=function(){return lines().map(function(coordinates){return{type:"LineString",coordinates:coordinates};});};graticule.outline=function(){return{type:"Polygon",coordinates:[X(X0).concat(Y(Y1).slice(1),X(X1).reverse().slice(1),Y(Y0).reverse().slice(1))]};};graticule.extent=function(_){if(!arguments.length)return graticule.extentMinor();return graticule.extentMajor(_).extentMinor(_);};graticule.extentMajor=function(_){if(!arguments.length)return[[X0,Y0],[X1,Y1]];X0=+_[0][0],X1=+_[1][0];Y0=+_[0][1],Y1=+_[1][1];if(X0>X1)_=X0,X0=X1,X1=_;if(Y0>Y1)_=Y0,Y0=Y1,Y1=_;return graticule.precision(precision);};graticule.extentMinor=function(_){if(!arguments.length)return[[x0,y0],[x1,y1]];x0=+_[0][0],x1=+_[1][0];y0=+_[0][1],y1=+_[1][1];if(x0>x1)_=x0,x0=x1,x1=_;if(y0>y1)_=y0,y0=y1,y1=_;return graticule.precision(precision);};graticule.step=function(_){if(!arguments.length)return graticule.stepMinor();return graticule.stepMajor(_).stepMinor(_);};graticule.stepMajor=function(_){if(!arguments.length)return[DX,DY];DX=+_[0],DY=+_[1];return graticule;};graticule.stepMinor=function(_){if(!arguments.length)return[dx,dy];dx=+_[0],dy=+_[1];return graticule;};graticule.precision=function(_){if(!arguments.length)return precision;precision=+_;x=graticuleX(y0,y1,90);y=graticuleY(x0,x1,precision);X=graticuleX(Y0,Y1,90);Y=graticuleY(X0,X1,precision);return graticule;};return graticule.extentMajor([[-180,-90+epsilon],[180,90-epsilon]]).extentMinor([[-180,-80-epsilon],[180,80+epsilon]]);}
function graticule10(){return graticule()();}
var identity$1=x=>x;var areaSum=new Adder(),areaRingSum=new Adder(),x00$2,y00$2,x0$3,y0$3;var areaStream={point:noop,lineStart:noop,lineEnd:noop,polygonStart:function(){areaStream.lineStart=areaRingStart;areaStream.lineEnd=areaRingEnd;},polygonEnd:function(){areaStream.lineStart=areaStream.lineEnd=areaStream.point=noop;areaSum.add(abs(areaRingSum));areaRingSum=new Adder();},result:function(){var area=areaSum/2;areaSum=new Adder();return area;}};function areaRingStart(){areaStream.point=areaPointFirst;}
function areaPointFirst(x,y){areaStream.point=areaPoint;x00$2=x0$3=x,y00$2=y0$3=y;}
function areaPoint(x,y){areaRingSum.add(y0$3*x-x0$3*y);x0$3=x,y0$3=y;}
function areaRingEnd(){areaPoint(x00$2,y00$2);}
var x0$2=Infinity,y0$2=x0$2,x1=-x0$2,y1=x1;var boundsStream={point:boundsPoint,lineStart:noop,lineEnd:noop,polygonStart:noop,polygonEnd:noop,result:function(){var bounds=[[x0$2,y0$2],[x1,y1]];x1=y1=-(y0$2=x0$2=Infinity);return bounds;}};function boundsPoint(x,y){if(x<x0$2)x0$2=x;if(x>x1)x1=x;if(y<y0$2)y0$2=y;if(y>y1)y1=y;}
var X0=0,Y0=0,Z0=0,X1=0,Y1=0,Z1=0,X2=0,Y2=0,Z2=0,x00$1,y00$1,x0$1,y0$1;var centroidStream={point:centroidPoint,lineStart:centroidLineStart,lineEnd:centroidLineEnd,polygonStart:function(){centroidStream.lineStart=centroidRingStart;centroidStream.lineEnd=centroidRingEnd;},polygonEnd:function(){centroidStream.point=centroidPoint;centroidStream.lineStart=centroidLineStart;centroidStream.lineEnd=centroidLineEnd;},result:function(){var centroid=Z2?[X2/Z2,Y2/Z2]:Z1?[X1/Z1,Y1/Z1]:Z0?[X0/Z0,Y0/Z0]:[NaN,NaN];X0=Y0=Z0=X1=Y1=Z1=X2=Y2=Z2=0;return centroid;}};function centroidPoint(x,y){X0+=x;Y0+=y;++Z0;}
function centroidLineStart(){centroidStream.point=centroidPointFirstLine;}
function centroidPointFirstLine(x,y){centroidStream.point=centroidPointLine;centroidPoint(x0$1=x,y0$1=y);}
function centroidPointLine(x,y){var dx=x-x0$1,dy=y-y0$1,z=sqrt(dx*dx+dy*dy);X1+=z*(x0$1+x)/2;Y1+=z*(y0$1+y)/2;Z1+=z;centroidPoint(x0$1=x,y0$1=y);}
function centroidLineEnd(){centroidStream.point=centroidPoint;}
function centroidRingStart(){centroidStream.point=centroidPointFirstRing;}
function centroidRingEnd(){centroidPointRing(x00$1,y00$1);}
function centroidPointFirstRing(x,y){centroidStream.point=centroidPointRing;centroidPoint(x00$1=x0$1=x,y00$1=y0$1=y);}
function centroidPointRing(x,y){var dx=x-x0$1,dy=y-y0$1,z=sqrt(dx*dx+dy*dy);X1+=z*(x0$1+x)/2;Y1+=z*(y0$1+y)/2;Z1+=z;z=y0$1*x-x0$1*y;X2+=z*(x0$1+x);Y2+=z*(y0$1+y);Z2+=z*3;centroidPoint(x0$1=x,y0$1=y);}
function PathContext(context){this._context=context;}
PathContext.prototype={_radius:4.5,pointRadius:function(_){return this._radius=_,this;},polygonStart:function(){this._line=0;},polygonEnd:function(){this._line=NaN;},lineStart:function(){this._point=0;},lineEnd:function(){if(this._line===0)this._context.closePath();this._point=NaN;},point:function(x,y){switch(this._point){case 0:{this._context.moveTo(x,y);this._point=1;break;}
case 1:{this._context.lineTo(x,y);break;}
default:{this._context.moveTo(x+this._radius,y);this._context.arc(x,y,this._radius,0,tau);break;}}},result:noop};var lengthSum=new Adder(),lengthRing,x00,y00,x0,y0;var lengthStream={point:noop,lineStart:function(){lengthStream.point=lengthPointFirst;},lineEnd:function(){if(lengthRing)lengthPoint(x00,y00);lengthStream.point=noop;},polygonStart:function(){lengthRing=true;},polygonEnd:function(){lengthRing=null;},result:function(){var length=+lengthSum;lengthSum=new Adder();return length;}};function lengthPointFirst(x,y){lengthStream.point=lengthPoint;x00=x0=x,y00=y0=y;}
function lengthPoint(x,y){x0-=x,y0-=y;lengthSum.add(sqrt(x0*x0+y0*y0));x0=x,y0=y;}
let cacheDigits,cacheAppend,cacheRadius,cacheCircle;class PathString{constructor(digits){this._append=digits==null?append:appendRound(digits);this._radius=4.5;this._="";}
pointRadius(_){this._radius=+_;return this;}
polygonStart(){this._line=0;}
polygonEnd(){this._line=NaN;}
lineStart(){this._point=0;}
lineEnd(){if(this._line===0)this._+="Z";this._point=NaN;}
point(x,y){switch(this._point){case 0:{this._append`M${x},${y}`;this._point=1;break;}
case 1:{this._append`L${x},${y}`;break;}
default:{this._append`M${x},${y}`;if(this._radius!==cacheRadius||this._append!==cacheAppend){const r=this._radius;const s=this._;this._="";this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;cacheRadius=r;cacheAppend=this._append;cacheCircle=this._;this._=s;}
this._+=cacheCircle;break;}}}
result(){const result=this._;this._="";return result.length?result:null;}}
function append(strings){let i=1;this._+=strings[0];for(const j=strings.length;i<j;++i){this._+=arguments[i]+strings[i];}}
function appendRound(digits){const d=Math.floor(digits);if(!(d>=0))throw new RangeError(`invalid digits: ${digits}`);if(d>15)return append;if(d!==cacheDigits){const k=10**d;cacheDigits=d;cacheAppend=function append(strings){let i=1;this._+=strings[0];for(const j=strings.length;i<j;++i){this._+=Math.round(arguments[i]*k)/k+strings[i];}};}
return cacheAppend;}
function geoPath(projection,context){let digits=3,pointRadius=4.5,projectionStream,contextStream;function path(object){if(object){if(typeof pointRadius==="function")contextStream.pointRadius(+pointRadius.apply(this,arguments));geoStream(object,projectionStream(contextStream));}
return contextStream.result();}
path.area=function(object){geoStream(object,projectionStream(areaStream));return areaStream.result();};path.measure=function(object){geoStream(object,projectionStream(lengthStream));return lengthStream.result();};path.bounds=function(object){geoStream(object,projectionStream(boundsStream));return boundsStream.result();};path.centroid=function(object){geoStream(object,projectionStream(centroidStream));return centroidStream.result();};path.projection=function(_){if(!arguments.length)return projection;projectionStream=_==null?(projection=null,identity$1):(projection=_).stream;return path;};path.context=function(_){if(!arguments.length)return context;contextStream=_==null?(context=null,new PathString(digits)):new PathContext(context=_);if(typeof pointRadius!=="function")contextStream.pointRadius(pointRadius);return path;};path.pointRadius=function(_){if(!arguments.length)return pointRadius;pointRadius=typeof _==="function"?_:(contextStream.pointRadius(+_),+_);return path;};path.digits=function(_){if(!arguments.length)return digits;if(_==null)digits=null;else{const d=Math.floor(_);if(!(d>=0))throw new RangeError(`invalid digits: ${_}`);digits=d;}
if(context===null)contextStream=new PathString(digits);return path;};return path.projection(projection).digits(digits).context(context);}
function transformer(methods){return function(stream){var s=new TransformStream;for(var key in methods)s[key]=methods[key];s.stream=stream;return s;};}
function TransformStream(){}
TransformStream.prototype={constructor:TransformStream,point:function(x,y){this.stream.point(x,y);},sphere:function(){this.stream.sphere();},lineStart:function(){this.stream.lineStart();},lineEnd:function(){this.stream.lineEnd();},polygonStart:function(){this.stream.polygonStart();},polygonEnd:function(){this.stream.polygonEnd();}};function fit(projection,fitBounds,object){var clip=projection.clipExtent&&projection.clipExtent();projection.scale(150).translate([0,0]);if(clip!=null)projection.clipExtent(null);geoStream(object,projection.stream(boundsStream));fitBounds(boundsStream.result());if(clip!=null)projection.clipExtent(clip);return projection;}
function fitExtent(projection,extent,object){return fit(projection,function(b){var w=extent[1][0]-extent[0][0],h=extent[1][1]-extent[0][1],k=Math.min(w/(b[1][0]-b[0][0]),h/(b[1][1]-b[0][1])),x=+extent[0][0]+(w-k*(b[1][0]+b[0][0]))/2,y=+extent[0][1]+(h-k*(b[1][1]+b[0][1]))/2;projection.scale(150*k).translate([x,y]);},object);}
function fitSize(projection,size,object){return fitExtent(projection,[[0,0],size],object);}
function fitWidth(projection,width,object){return fit(projection,function(b){var w=+width,k=w/(b[1][0]-b[0][0]),x=(w-k*(b[1][0]+b[0][0]))/2,y=-k*b[0][1];projection.scale(150*k).translate([x,y]);},object);}
function fitHeight(projection,height,object){return fit(projection,function(b){var h=+height,k=h/(b[1][1]-b[0][1]),x=-k*b[0][0],y=(h-k*(b[1][1]+b[0][1]))/2;projection.scale(150*k).translate([x,y]);},object);}
var maxDepth=16,cosMinDistance=cos(30*radians$1);function resample(project,delta2){return+delta2?resample$1(project,delta2):resampleNone(project);}
function resampleNone(project){return transformer({point:function(x,y){x=project(x,y);this.stream.point(x[0],x[1]);}});}
function resample$1(project,delta2){function resampleLineTo(x0,y0,lambda0,a0,b0,c0,x1,y1,lambda1,a1,b1,c1,depth,stream){var dx=x1-x0,dy=y1-y0,d2=dx*dx+dy*dy;if(d2>4*delta2&&depth--){var a=a0+a1,b=b0+b1,c=c0+c1,m=sqrt(a*a+b*b+c*c),phi2=asin(c/=m),lambda2=abs(abs(c)-1)<epsilon||abs(lambda0-lambda1)<epsilon?(lambda0+lambda1)/2:atan2(b,a),p=project(lambda2,phi2),x2=p[0],y2=p[1],dx2=x2-x0,dy2=y2-y0,dz=dy*dx2-dx*dy2;if(dz*dz/d2>delta2||abs((dx*dx2+dy*dy2)/d2-0.5)>0.3||a0*a1+b0*b1+c0*c1<cosMinDistance){resampleLineTo(x0,y0,lambda0,a0,b0,c0,x2,y2,lambda2,a/=m,b/=m,c,depth,stream);stream.point(x2,y2);resampleLineTo(x2,y2,lambda2,a,b,c,x1,y1,lambda1,a1,b1,c1,depth,stream);}}}
return function(stream){var lambda00,x00,y00,a00,b00,c00,lambda0,x0,y0,a0,b0,c0;var resampleStream={point:point,lineStart:lineStart,lineEnd:lineEnd,polygonStart:function(){stream.polygonStart();resampleStream.lineStart=ringStart;},polygonEnd:function(){stream.polygonEnd();resampleStream.lineStart=lineStart;}};function point(x,y){x=project(x,y);stream.point(x[0],x[1]);}
function lineStart(){x0=NaN;resampleStream.point=linePoint;stream.lineStart();}
function linePoint(lambda,phi){var c=cartesian([lambda,phi]),p=project(lambda,phi);resampleLineTo(x0,y0,lambda0,a0,b0,c0,x0=p[0],y0=p[1],lambda0=lambda,a0=c[0],b0=c[1],c0=c[2],maxDepth,stream);stream.point(x0,y0);}
function lineEnd(){resampleStream.point=point;stream.lineEnd();}
function ringStart(){lineStart();resampleStream.point=ringPoint;resampleStream.lineEnd=ringEnd;}
function ringPoint(lambda,phi){linePoint(lambda00=lambda,phi),x00=x0,y00=y0,a00=a0,b00=b0,c00=c0;resampleStream.point=linePoint;}
function ringEnd(){resampleLineTo(x0,y0,lambda0,a0,b0,c0,x00,y00,lambda00,a00,b00,c00,maxDepth,stream);resampleStream.lineEnd=lineEnd;lineEnd();}
return resampleStream;};}
var transformRadians=transformer({point:function(x,y){this.stream.point(x*radians$1,y*radians$1);}});function transformRotate(rotate){return transformer({point:function(x,y){var r=rotate(x,y);return this.stream.point(r[0],r[1]);}});}
function scaleTranslate(k,dx,dy,sx,sy){function transform(x,y){x*=sx;y*=sy;return[dx+k*x,dy-k*y];}
transform.invert=function(x,y){return[(x-dx)/k*sx,(dy-y)/k*sy];};return transform;}
function scaleTranslateRotate(k,dx,dy,sx,sy,alpha){if(!alpha)return scaleTranslate(k,dx,dy,sx,sy);var cosAlpha=cos(alpha),sinAlpha=sin(alpha),a=cosAlpha*k,b=sinAlpha*k,ai=cosAlpha/k,bi=sinAlpha/k,ci=(sinAlpha*dy-cosAlpha*dx)/k,fi=(sinAlpha*dx+cosAlpha*dy)/k;function transform(x,y){x*=sx;y*=sy;return[a*x-b*y+dx,dy-b*x-a*y];}
transform.invert=function(x,y){return[sx*(ai*x-bi*y+ci),sy*(fi-bi*x-ai*y)];};return transform;}
function projection(project){return projectionMutator(function(){return project;})();}
function projectionMutator(projectAt){var project,k=150,x=480,y=250,lambda=0,phi=0,deltaLambda=0,deltaPhi=0,deltaGamma=0,rotate,alpha=0,sx=1,sy=1,theta=null,preclip=clipAntimeridian,x0=null,y0,x1,y1,postclip=identity$1,delta2=0.5,projectResample,projectTransform,projectRotateTransform,cache,cacheStream;function projection(point){return projectRotateTransform(point[0]*radians$1,point[1]*radians$1);}
function invert(point){point=projectRotateTransform.invert(point[0],point[1]);return point&&[point[0]*degrees$1,point[1]*degrees$1];}
projection.stream=function(stream){return cache&&cacheStream===stream?cache:cache=transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream=stream)))));};projection.preclip=function(_){return arguments.length?(preclip=_,theta=undefined,reset()):preclip;};projection.postclip=function(_){return arguments.length?(postclip=_,x0=y0=x1=y1=null,reset()):postclip;};projection.clipAngle=function(_){return arguments.length?(preclip=+_?clipCircle(theta=_*radians$1):(theta=null,clipAntimeridian),reset()):theta*degrees$1;};projection.clipExtent=function(_){return arguments.length?(postclip=_==null?(x0=y0=x1=y1=null,identity$1):clipRectangle(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1]),reset()):x0==null?null:[[x0,y0],[x1,y1]];};projection.scale=function(_){return arguments.length?(k=+_,recenter()):k;};projection.translate=function(_){return arguments.length?(x=+_[0],y=+_[1],recenter()):[x,y];};projection.center=function(_){return arguments.length?(lambda=_[0]%360*radians$1,phi=_[1]%360*radians$1,recenter()):[lambda*degrees$1,phi*degrees$1];};projection.rotate=function(_){return arguments.length?(deltaLambda=_[0]%360*radians$1,deltaPhi=_[1]%360*radians$1,deltaGamma=_.length>2?_[2]%360*radians$1:0,recenter()):[deltaLambda*degrees$1,deltaPhi*degrees$1,deltaGamma*degrees$1];};projection.angle=function(_){return arguments.length?(alpha=_%360*radians$1,recenter()):alpha*degrees$1;};projection.reflectX=function(_){return arguments.length?(sx=_?-1:1,recenter()):sx<0;};projection.reflectY=function(_){return arguments.length?(sy=_?-1:1,recenter()):sy<0;};projection.precision=function(_){return arguments.length?(projectResample=resample(projectTransform,delta2=_*_),reset()):sqrt(delta2);};projection.fitExtent=function(extent,object){return fitExtent(projection,extent,object);};projection.fitSize=function(size,object){return fitSize(projection,size,object);};projection.fitWidth=function(width,object){return fitWidth(projection,width,object);};projection.fitHeight=function(height,object){return fitHeight(projection,height,object);};function recenter(){var center=scaleTranslateRotate(k,0,0,sx,sy,alpha).apply(null,project(lambda,phi)),transform=scaleTranslateRotate(k,x-center[0],y-center[1],sx,sy,alpha);rotate=rotateRadians(deltaLambda,deltaPhi,deltaGamma);projectTransform=compose(project,transform);projectRotateTransform=compose(rotate,projectTransform);projectResample=resample(projectTransform,delta2);return reset();}
function reset(){cache=cacheStream=null;return projection;}
return function(){project=projectAt.apply(this,arguments);projection.invert=project.invert&&invert;return recenter();};}
function conicProjection(projectAt){var phi0=0,phi1=pi/3,m=projectionMutator(projectAt),p=m(phi0,phi1);p.parallels=function(_){return arguments.length?m(phi0=_[0]*radians$1,phi1=_[1]*radians$1):[phi0*degrees$1,phi1*degrees$1];};return p;}
function cylindricalEqualAreaRaw(phi0){var cosPhi0=cos(phi0);function forward(lambda,phi){return[lambda*cosPhi0,sin(phi)/cosPhi0];}
forward.invert=function(x,y){return[x/cosPhi0,asin(y*cosPhi0)];};return forward;}
function conicEqualAreaRaw(y0,y1){var sy0=sin(y0),n=(sy0+sin(y1))/2;if(abs(n)<epsilon)return cylindricalEqualAreaRaw(y0);var c=1+sy0*(2*n-sy0),r0=sqrt(c)/n;function project(x,y){var r=sqrt(c-2*n*sin(y))/n;return[r*sin(x*=n),r0-r*cos(x)];}
project.invert=function(x,y){var r0y=r0-y,l=atan2(x,abs(r0y))*sign(r0y);if(r0y*n<0)
l-=pi*sign(x)*sign(r0y);return[l/n,asin((c-(x*x+r0y*r0y)*n*n)/(2*n))];};return project;}
function geoConicEqualArea(){return conicProjection(conicEqualAreaRaw).scale(155.424).center([0,33.6442]);}
function geoAlbers(){return geoConicEqualArea().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-0.6,38.7]);}
function multiplex(streams){var n=streams.length;return{point:function(x,y){var i=-1;while(++i<n)streams[i].point(x,y);},sphere:function(){var i=-1;while(++i<n)streams[i].sphere();},lineStart:function(){var i=-1;while(++i<n)streams[i].lineStart();},lineEnd:function(){var i=-1;while(++i<n)streams[i].lineEnd();},polygonStart:function(){var i=-1;while(++i<n)streams[i].polygonStart();},polygonEnd:function(){var i=-1;while(++i<n)streams[i].polygonEnd();}};}
function geoAlbersUsa(){var cache,cacheStream,lower48=geoAlbers(),lower48Point,alaska=geoConicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),alaskaPoint,hawaii=geoConicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),hawaiiPoint,point,pointStream={point:function(x,y){point=[x,y];}};function albersUsa(coordinates){var x=coordinates[0],y=coordinates[1];return point=null,(lower48Point.point(x,y),point)||(alaskaPoint.point(x,y),point)||(hawaiiPoint.point(x,y),point);}
albersUsa.invert=function(coordinates){var k=lower48.scale(),t=lower48.translate(),x=(coordinates[0]-t[0])/k,y=(coordinates[1]-t[1])/k;return(y>=0.120&&y<0.234&&x>=-0.425&&x<-0.214?alaska:y>=0.166&&y<0.234&&x>=-0.214&&x<-0.115?hawaii:lower48).invert(coordinates);};albersUsa.stream=function(stream){return cache&&cacheStream===stream?cache:cache=multiplex([lower48.stream(cacheStream=stream),alaska.stream(stream),hawaii.stream(stream)]);};albersUsa.precision=function(_){if(!arguments.length)return lower48.precision();lower48.precision(_),alaska.precision(_),hawaii.precision(_);return reset();};albersUsa.scale=function(_){if(!arguments.length)return lower48.scale();lower48.scale(_),alaska.scale(_*0.35),hawaii.scale(_);return albersUsa.translate(lower48.translate());};albersUsa.translate=function(_){if(!arguments.length)return lower48.translate();var k=lower48.scale(),x=+_[0],y=+_[1];lower48Point=lower48.translate(_).clipExtent([[x-0.455*k,y-0.238*k],[x+0.455*k,y+0.238*k]]).stream(pointStream);alaskaPoint=alaska.translate([x-0.307*k,y+0.201*k]).clipExtent([[x-0.425*k+epsilon,y+0.120*k+epsilon],[x-0.214*k-epsilon,y+0.234*k-epsilon]]).stream(pointStream);hawaiiPoint=hawaii.translate([x-0.205*k,y+0.212*k]).clipExtent([[x-0.214*k+epsilon,y+0.166*k+epsilon],[x-0.115*k-epsilon,y+0.234*k-epsilon]]).stream(pointStream);return reset();};albersUsa.fitExtent=function(extent,object){return fitExtent(albersUsa,extent,object);};albersUsa.fitSize=function(size,object){return fitSize(albersUsa,size,object);};albersUsa.fitWidth=function(width,object){return fitWidth(albersUsa,width,object);};albersUsa.fitHeight=function(height,object){return fitHeight(albersUsa,height,object);};function reset(){cache=cacheStream=null;return albersUsa;}
return albersUsa.scale(1070);}
function azimuthalRaw(scale){return function(x,y){var cx=cos(x),cy=cos(y),k=scale(cx*cy);if(k===Infinity)return[2,0];return[k*cy*sin(x),k*sin(y)];}}
function azimuthalInvert(angle){return function(x,y){var z=sqrt(x*x+y*y),c=angle(z),sc=sin(c),cc=cos(c);return[atan2(x*sc,z*cc),asin(z&&y*sc/z)];}}
var azimuthalEqualAreaRaw=azimuthalRaw(function(cxcy){return sqrt(2/(1+cxcy));});azimuthalEqualAreaRaw.invert=azimuthalInvert(function(z){return 2*asin(z/2);});function geoAzimuthalEqualArea(){return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180-1e-3);}
var azimuthalEquidistantRaw=azimuthalRaw(function(c){return(c=acos(c))&&c/sin(c);});azimuthalEquidistantRaw.invert=azimuthalInvert(function(z){return z;});function geoAzimuthalEquidistant(){return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180-1e-3);}
function mercatorRaw(lambda,phi){return[lambda,log(tan((halfPi+phi)/2))];}
mercatorRaw.invert=function(x,y){return[x,2*atan(exp(y))-halfPi];};function geoMercator(){return mercatorProjection(mercatorRaw).scale(961/tau);}
function mercatorProjection(project){var m=projection(project),center=m.center,scale=m.scale,translate=m.translate,clipExtent=m.clipExtent,x0=null,y0,x1,y1;m.scale=function(_){return arguments.length?(scale(_),reclip()):scale();};m.translate=function(_){return arguments.length?(translate(_),reclip()):translate();};m.center=function(_){return arguments.length?(center(_),reclip()):center();};m.clipExtent=function(_){return arguments.length?((_==null?x0=y0=x1=y1=null:(x0=+_[0][0],y0=+_[0][1],x1=+_[1][0],y1=+_[1][1])),reclip()):x0==null?null:[[x0,y0],[x1,y1]];};function reclip(){var k=pi*scale(),t=m(rotation(m.rotate()).invert([0,0]));return clipExtent(x0==null?[[t[0]-k,t[1]-k],[t[0]+k,t[1]+k]]:project===mercatorRaw?[[Math.max(t[0]-k,x0),y0],[Math.min(t[0]+k,x1),y1]]:[[x0,Math.max(t[1]-k,y0)],[x1,Math.min(t[1]+k,y1)]]);}
return reclip();}
function tany(y){return tan((halfPi+y)/2);}
function conicConformalRaw(y0,y1){var cy0=cos(y0),n=y0===y1?sin(y0):log(cy0/cos(y1))/log(tany(y1)/tany(y0)),f=cy0*pow(tany(y0),n)/n;if(!n)return mercatorRaw;function project(x,y){if(f>0){if(y<-halfPi+epsilon)y=-halfPi+epsilon;}
else{if(y>halfPi-epsilon)y=halfPi-epsilon;}
var r=f/pow(tany(y),n);return[r*sin(n*x),f-r*cos(n*x)];}
project.invert=function(x,y){var fy=f-y,r=sign(n)*sqrt(x*x+fy*fy),l=atan2(x,abs(fy))*sign(fy);if(fy*n<0)
l-=pi*sign(x)*sign(fy);return[l/n,2*atan(pow(f/r,1/n))-halfPi];};return project;}
function geoConicConformal(){return conicProjection(conicConformalRaw).scale(109.5).parallels([30,30]);}
function equirectangularRaw(lambda,phi){return[lambda,phi];}
equirectangularRaw.invert=equirectangularRaw;function geoEquirectangular(){return projection(equirectangularRaw).scale(152.63);}
function conicEquidistantRaw(y0,y1){var cy0=cos(y0),n=y0===y1?sin(y0):(cy0-cos(y1))/(y1-y0),g=cy0/n+y0;if(abs(n)<epsilon)return equirectangularRaw;function project(x,y){var gy=g-y,nx=n*x;return[gy*sin(nx),g-gy*cos(nx)];}
project.invert=function(x,y){var gy=g-y,l=atan2(x,abs(gy))*sign(gy);if(gy*n<0)
l-=pi*sign(x)*sign(gy);return[l/n,g-sign(n)*sqrt(x*x+gy*gy)];};return project;}
function geoConicEquidistant(){return conicProjection(conicEquidistantRaw).scale(131.154).center([0,13.9389]);}
var A1=1.340264,A2=-0.081106,A3=0.000893,A4=0.003796,M=sqrt(3)/2,iterations=12;function equalEarthRaw(lambda,phi){var l=asin(M*sin(phi)),l2=l*l,l6=l2*l2*l2;return[lambda*cos(l)/(M*(A1+3*A2*l2+l6*(7*A3+9*A4*l2))),l*(A1+A2*l2+l6*(A3+A4*l2))];}
equalEarthRaw.invert=function(x,y){var l=y,l2=l*l,l6=l2*l2*l2;for(var i=0,delta,fy,fpy;i<iterations;++i){fy=l*(A1+A2*l2+l6*(A3+A4*l2))-y;fpy=A1+3*A2*l2+l6*(7*A3+9*A4*l2);l-=delta=fy/fpy,l2=l*l,l6=l2*l2*l2;if(abs(delta)<epsilon2)break;}
return[M*x*(A1+3*A2*l2+l6*(7*A3+9*A4*l2))/cos(l),asin(sin(l)/M)];};function geoEqualEarth(){return projection(equalEarthRaw).scale(177.158);}
function gnomonicRaw(x,y){var cy=cos(y),k=cos(x)*cy;return[cy*sin(x)/k,sin(y)/k];}
gnomonicRaw.invert=azimuthalInvert(atan);function geoGnomonic(){return projection(gnomonicRaw).scale(144.049).clipAngle(60);}
function naturalEarth1Raw(lambda,phi){var phi2=phi*phi,phi4=phi2*phi2;return[lambda*(0.8707-0.131979*phi2+phi4*(-0.013791+phi4*(0.003971*phi2-0.001529*phi4))),phi*(1.007226+phi2*(0.015085+phi4*(-0.044475+0.028874*phi2-0.005916*phi4)))];}
naturalEarth1Raw.invert=function(x,y){var phi=y,i=25,delta;do{var phi2=phi*phi,phi4=phi2*phi2;phi-=delta=(phi*(1.007226+phi2*(0.015085+phi4*(-0.044475+0.028874*phi2-0.005916*phi4)))-y)/(1.007226+phi2*(0.015085*3+phi4*(-0.044475*7+0.028874*9*phi2-0.005916*11*phi4)));}while(abs(delta)>epsilon&&--i>0);return[x/(0.8707+(phi2=phi*phi)*(-0.131979+phi2*(-0.013791+phi2*phi2*phi2*(0.003971-0.001529*phi2)))),phi];};function geoNaturalEarth1(){return projection(naturalEarth1Raw).scale(175.295);}
function orthographicRaw(x,y){return[cos(y)*sin(x),sin(y)];}
orthographicRaw.invert=azimuthalInvert(asin);function geoOrthographic(){return projection(orthographicRaw).scale(249.5).clipAngle(90+epsilon);}
function stereographicRaw(x,y){var cy=cos(y),k=1+cos(x)*cy;return[cy*sin(x)/k,sin(y)/k];}
stereographicRaw.invert=azimuthalInvert(function(z){return 2*atan(z);});function geoStereographic(){return projection(stereographicRaw).scale(250).clipAngle(142);}
function transverseMercatorRaw(lambda,phi){return[log(tan((halfPi+phi)/2)),-lambda];}
transverseMercatorRaw.invert=function(x,y){return[-y,2*atan(exp(x))-halfPi];};function geoTransverseMercator(){var m=mercatorProjection(transverseMercatorRaw),center=m.center,rotate=m.rotate;m.center=function(_){return arguments.length?center([-_[1],_[0]]):(_=center(),[_[1],-_[0]]);};m.rotate=function(_){return arguments.length?rotate([_[0],_[1],_.length>2?_[2]+90:90]):(_=rotate(),[_[0],_[1],_[2]-90]);};return rotate([0,0,90]).scale(159.155);}
const lookup$1={geoAzimuthalEqualArea,geoAzimuthalEquidistant,geoGnomonic,geoOrthographic,geoStereographic,geoEqualEarth,geoAlbers,geoAlbersUsa,geoConicConformal,geoConicEqualArea,geoConicEquidistant,geoEquirectangular,geoMercator,geoTransverseMercator,geoNaturalEarth1,};Object.keys(lookup$1).forEach((key)=>{lookup$1[`${key.charAt(3).toLowerCase()}${key.slice(4)}`]=lookup$1[key];});class ProjectionScale extends chart_js.Scale{constructor(cfg){super(cfg);this.outlineBounds=null;this.oldChartBounds=null;this.geoPath=geoPath();}
init(options){options.position='chartArea';super.init(options);if(typeof options.projection==='function'){this.projection=options.projection;}
else{this.projection=(lookup$1[options.projection]||lookup$1.albersUsa)();}
this.geoPath.projection(this.projection);this.outlineBounds=null;this.oldChartBounds=null;}
computeBounds(outline){const bb=geoPath(this.projection.fitWidth(1000,outline)).bounds(outline);const bHeight=Math.ceil(bb[1][1]-bb[0][1]);const bWidth=Math.ceil(bb[1][0]-bb[0][0]);const t=this.projection.translate();this.outlineBounds={width:bWidth,height:bHeight,aspectRatio:bWidth/bHeight,refScale:this.projection.scale(),refX:t[0],refY:t[1],};}
updateBounds(){const area=this.chart.chartArea;const bb=this.outlineBounds;if(!bb){return false;}
const padding=this.options.padding;const paddingTop=typeof padding==='number'?padding:padding.top;const paddingLeft=typeof padding==='number'?padding:padding.left;const paddingBottom=typeof padding==='number'?padding:padding.bottom;const paddingRight=typeof padding==='number'?padding:padding.right;const chartWidth=area.right-area.left-paddingLeft-paddingRight;const chartHeight=area.bottom-area.top-paddingTop-paddingBottom;const bak=this.oldChartBounds;this.oldChartBounds={chartWidth,chartHeight,};const scale=Math.min(chartWidth/bb.width,chartHeight/bb.height);const viewWidth=bb.width*scale;const viewHeight=bb.height*scale;const x=(chartWidth-viewWidth)*0.5+area.left+paddingLeft;const y=(chartHeight-viewHeight)*0.5+area.top+paddingTop;const o=this.options;this.projection.scale(bb.refScale*scale*o.projectionScale).translate([scale*bb.refX+x+o.projectionOffset[0],scale*bb.refY+y+o.projectionOffset[1]]);return(!bak||bak.chartWidth!==this.oldChartBounds.chartWidth||bak.chartHeight!==this.oldChartBounds.chartHeight);}}
ProjectionScale.id='projection';ProjectionScale.defaults={projection:'albersUsa',projectionScale:1,projectionOffset:[0,0],padding:0,};ProjectionScale.descriptors={_scriptable:(name)=>name!=='projection',_indexable:(name)=>name!=='projectionOffset',};function colors(specifier){var n=specifier.length/6|0,colors=new Array(n),i=0;while(i<n)colors[i]="#"+specifier.slice(i*6,++i*6);return colors;}
function define(constructor,factory,prototype){constructor.prototype=factory.prototype=prototype;prototype.constructor=constructor;}
function extend(parent,definition){var prototype=Object.create(parent.prototype);for(var key in definition)prototype[key]=definition[key];return prototype;}
function Color(){}
var darker=0.7;var brighter=1/darker;var reI="\\s*([+-]?\\d+)\\s*",reN="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",reP="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",reHex=/^#([0-9a-f]{3,8})$/,reRgbInteger=new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`),reRgbPercent=new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`),reRgbaInteger=new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`),reRgbaPercent=new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`),reHslPercent=new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`),reHslaPercent=new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);var named={aliceblue:0xf0f8ff,antiquewhite:0xfaebd7,aqua:0x00ffff,aquamarine:0x7fffd4,azure:0xf0ffff,beige:0xf5f5dc,bisque:0xffe4c4,black:0x000000,blanchedalmond:0xffebcd,blue:0x0000ff,blueviolet:0x8a2be2,brown:0xa52a2a,burlywood:0xdeb887,cadetblue:0x5f9ea0,chartreuse:0x7fff00,chocolate:0xd2691e,coral:0xff7f50,cornflowerblue:0x6495ed,cornsilk:0xfff8dc,crimson:0xdc143c,cyan:0x00ffff,darkblue:0x00008b,darkcyan:0x008b8b,darkgoldenrod:0xb8860b,darkgray:0xa9a9a9,darkgreen:0x006400,darkgrey:0xa9a9a9,darkkhaki:0xbdb76b,darkmagenta:0x8b008b,darkolivegreen:0x556b2f,darkorange:0xff8c00,darkorchid:0x9932cc,darkred:0x8b0000,darksalmon:0xe9967a,darkseagreen:0x8fbc8f,darkslateblue:0x483d8b,darkslategray:0x2f4f4f,darkslategrey:0x2f4f4f,darkturquoise:0x00ced1,darkviolet:0x9400d3,deeppink:0xff1493,deepskyblue:0x00bfff,dimgray:0x696969,dimgrey:0x696969,dodgerblue:0x1e90ff,firebrick:0xb22222,floralwhite:0xfffaf0,forestgreen:0x228b22,fuchsia:0xff00ff,gainsboro:0xdcdcdc,ghostwhite:0xf8f8ff,gold:0xffd700,goldenrod:0xdaa520,gray:0x808080,green:0x008000,greenyellow:0xadff2f,grey:0x808080,honeydew:0xf0fff0,hotpink:0xff69b4,indianred:0xcd5c5c,indigo:0x4b0082,ivory:0xfffff0,khaki:0xf0e68c,lavender:0xe6e6fa,lavenderblush:0xfff0f5,lawngreen:0x7cfc00,lemonchiffon:0xfffacd,lightblue:0xadd8e6,lightcoral:0xf08080,lightcyan:0xe0ffff,lightgoldenrodyellow:0xfafad2,lightgray:0xd3d3d3,lightgreen:0x90ee90,lightgrey:0xd3d3d3,lightpink:0xffb6c1,lightsalmon:0xffa07a,lightseagreen:0x20b2aa,lightskyblue:0x87cefa,lightslategray:0x778899,lightslategrey:0x778899,lightsteelblue:0xb0c4de,lightyellow:0xffffe0,lime:0x00ff00,limegreen:0x32cd32,linen:0xfaf0e6,magenta:0xff00ff,maroon:0x800000,mediumaquamarine:0x66cdaa,mediumblue:0x0000cd,mediumorchid:0xba55d3,mediumpurple:0x9370db,mediumseagreen:0x3cb371,mediumslateblue:0x7b68ee,mediumspringgreen:0x00fa9a,mediumturquoise:0x48d1cc,mediumvioletred:0xc71585,midnightblue:0x191970,mintcream:0xf5fffa,mistyrose:0xffe4e1,moccasin:0xffe4b5,navajowhite:0xffdead,navy:0x000080,oldlace:0xfdf5e6,olive:0x808000,olivedrab:0x6b8e23,orange:0xffa500,orangered:0xff4500,orchid:0xda70d6,palegoldenrod:0xeee8aa,palegreen:0x98fb98,paleturquoise:0xafeeee,palevioletred:0xdb7093,papayawhip:0xffefd5,peachpuff:0xffdab9,peru:0xcd853f,pink:0xffc0cb,plum:0xdda0dd,powderblue:0xb0e0e6,purple:0x800080,rebeccapurple:0x663399,red:0xff0000,rosybrown:0xbc8f8f,royalblue:0x4169e1,saddlebrown:0x8b4513,salmon:0xfa8072,sandybrown:0xf4a460,seagreen:0x2e8b57,seashell:0xfff5ee,sienna:0xa0522d,silver:0xc0c0c0,skyblue:0x87ceeb,slateblue:0x6a5acd,slategray:0x708090,slategrey:0x708090,snow:0xfffafa,springgreen:0x00ff7f,steelblue:0x4682b4,tan:0xd2b48c,teal:0x008080,thistle:0xd8bfd8,tomato:0xff6347,turquoise:0x40e0d0,violet:0xee82ee,wheat:0xf5deb3,white:0xffffff,whitesmoke:0xf5f5f5,yellow:0xffff00,yellowgreen:0x9acd32};define(Color,color,{copy(channels){return Object.assign(new this.constructor,this,channels);},displayable(){return this.rgb().displayable();},hex:color_formatHex,formatHex:color_formatHex,formatHex8:color_formatHex8,formatHsl:color_formatHsl,formatRgb:color_formatRgb,toString:color_formatRgb});function color_formatHex(){return this.rgb().formatHex();}
function color_formatHex8(){return this.rgb().formatHex8();}
function color_formatHsl(){return hslConvert(this).formatHsl();}
function color_formatRgb(){return this.rgb().formatRgb();}
function color(format){var m,l;format=(format+"").trim().toLowerCase();return(m=reHex.exec(format))?(l=m[1].length,m=parseInt(m[1],16),l===6?rgbn(m):l===3?new Rgb((m>>8&0xf)|(m>>4&0xf0),(m>>4&0xf)|(m&0xf0),((m&0xf)<<4)|(m&0xf),1):l===8?rgba(m>>24&0xff,m>>16&0xff,m>>8&0xff,(m&0xff)/0xff):l===4?rgba((m>>12&0xf)|(m>>8&0xf0),(m>>8&0xf)|(m>>4&0xf0),(m>>4&0xf)|(m&0xf0),(((m&0xf)<<4)|(m&0xf))/0xff):null):(m=reRgbInteger.exec(format))?new Rgb(m[1],m[2],m[3],1):(m=reRgbPercent.exec(format))?new Rgb(m[1]*255/100,m[2]*255/100,m[3]*255/100,1):(m=reRgbaInteger.exec(format))?rgba(m[1],m[2],m[3],m[4]):(m=reRgbaPercent.exec(format))?rgba(m[1]*255/100,m[2]*255/100,m[3]*255/100,m[4]):(m=reHslPercent.exec(format))?hsla(m[1],m[2]/100,m[3]/100,1):(m=reHslaPercent.exec(format))?hsla(m[1],m[2]/100,m[3]/100,m[4]):named.hasOwnProperty(format)?rgbn(named[format]):format==="transparent"?new Rgb(NaN,NaN,NaN,0):null;}
function rgbn(n){return new Rgb(n>>16&0xff,n>>8&0xff,n&0xff,1);}
function rgba(r,g,b,a){if(a<=0)r=g=b=NaN;return new Rgb(r,g,b,a);}
function rgbConvert(o){if(!(o instanceof Color))o=color(o);if(!o)return new Rgb;o=o.rgb();return new Rgb(o.r,o.g,o.b,o.opacity);}
function rgb(r,g,b,opacity){return arguments.length===1?rgbConvert(r):new Rgb(r,g,b,opacity==null?1:opacity);}
function Rgb(r,g,b,opacity){this.r=+r;this.g=+g;this.b=+b;this.opacity=+opacity;}
define(Rgb,rgb,extend(Color,{brighter(k){k=k==null?brighter:Math.pow(brighter,k);return new Rgb(this.r*k,this.g*k,this.b*k,this.opacity);},darker(k){k=k==null?darker:Math.pow(darker,k);return new Rgb(this.r*k,this.g*k,this.b*k,this.opacity);},rgb(){return this;},clamp(){return new Rgb(clampi(this.r),clampi(this.g),clampi(this.b),clampa(this.opacity));},displayable(){return(-0.5<=this.r&&this.r<255.5)&&(-0.5<=this.g&&this.g<255.5)&&(-0.5<=this.b&&this.b<255.5)&&(0<=this.opacity&&this.opacity<=1);},hex:rgb_formatHex,formatHex:rgb_formatHex,formatHex8:rgb_formatHex8,formatRgb:rgb_formatRgb,toString:rgb_formatRgb}));function rgb_formatHex(){return`#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;}
function rgb_formatHex8(){return`#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;}
function rgb_formatRgb(){const a=clampa(this.opacity);return`${a === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? ")" : `,${a})`}`;}
function clampa(opacity){return isNaN(opacity)?1:Math.max(0,Math.min(1,opacity));}
function clampi(value){return Math.max(0,Math.min(255,Math.round(value)||0));}
function hex(value){value=clampi(value);return(value<16?"0":"")+value.toString(16);}
function hsla(h,s,l,a){if(a<=0)h=s=l=NaN;else if(l<=0||l>=1)h=s=NaN;else if(s<=0)h=NaN;return new Hsl(h,s,l,a);}
function hslConvert(o){if(o instanceof Hsl)return new Hsl(o.h,o.s,o.l,o.opacity);if(!(o instanceof Color))o=color(o);if(!o)return new Hsl;if(o instanceof Hsl)return o;o=o.rgb();var r=o.r/255,g=o.g/255,b=o.b/255,min=Math.min(r,g,b),max=Math.max(r,g,b),h=NaN,s=max-min,l=(max+min)/2;if(s){if(r===max)h=(g-b)/s+(g<b)*6;else if(g===max)h=(b-r)/s+2;else h=(r-g)/s+4;s/=l<0.5?max+min:2-max-min;h*=60;}else{s=l>0&&l<1?0:h;}
return new Hsl(h,s,l,o.opacity);}
function hsl(h,s,l,opacity){return arguments.length===1?hslConvert(h):new Hsl(h,s,l,opacity==null?1:opacity);}
function Hsl(h,s,l,opacity){this.h=+h;this.s=+s;this.l=+l;this.opacity=+opacity;}
define(Hsl,hsl,extend(Color,{brighter(k){k=k==null?brighter:Math.pow(brighter,k);return new Hsl(this.h,this.s,this.l*k,this.opacity);},darker(k){k=k==null?darker:Math.pow(darker,k);return new Hsl(this.h,this.s,this.l*k,this.opacity);},rgb(){var h=this.h%360+(this.h<0)*360,s=isNaN(h)||isNaN(this.s)?0:this.s,l=this.l,m2=l+(l<0.5?l:1-l)*s,m1=2*l-m2;return new Rgb(hsl2rgb(h>=240?h-240:h+120,m1,m2),hsl2rgb(h,m1,m2),hsl2rgb(h<120?h+240:h-120,m1,m2),this.opacity);},clamp(){return new Hsl(clamph(this.h),clampt(this.s),clampt(this.l),clampa(this.opacity));},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&(0<=this.l&&this.l<=1)&&(0<=this.opacity&&this.opacity<=1);},formatHsl(){const a=clampa(this.opacity);return`${a === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? ")" : `,${a})`}`;}}));function clamph(value){value=(value||0)%360;return value<0?value+360:value;}
function clampt(value){return Math.max(0,Math.min(1,value||0));}
function hsl2rgb(h,m1,m2){return(h<60?m1+(m2-m1)*h/60:h<180?m2:h<240?m1+(m2-m1)*(240-h)/60:m1)*255;}
const radians=Math.PI/180;const degrees=180/Math.PI;var A=-0.14861,B=+1.78277,C=-0.29227,D=-0.90649,E=+1.97294,ED=E*D,EB=E*B,BC_DA=B*C-D*A;function cubehelixConvert(o){if(o instanceof Cubehelix)return new Cubehelix(o.h,o.s,o.l,o.opacity);if(!(o instanceof Rgb))o=rgbConvert(o);var r=o.r/255,g=o.g/255,b=o.b/255,l=(BC_DA*b+ED*r-EB*g)/(BC_DA+ED-EB),bl=b-l,k=(E*(g-l)-C*bl)/D,s=Math.sqrt(k*k+bl*bl)/(E*l*(1-l)),h=s?Math.atan2(k,bl)*degrees-120:NaN;return new Cubehelix(h<0?h+360:h,s,l,o.opacity);}
function cubehelix$1(h,s,l,opacity){return arguments.length===1?cubehelixConvert(h):new Cubehelix(h,s,l,opacity==null?1:opacity);}
function Cubehelix(h,s,l,opacity){this.h=+h;this.s=+s;this.l=+l;this.opacity=+opacity;}
define(Cubehelix,cubehelix$1,extend(Color,{brighter(k){k=k==null?brighter:Math.pow(brighter,k);return new Cubehelix(this.h,this.s,this.l*k,this.opacity);},darker(k){k=k==null?darker:Math.pow(darker,k);return new Cubehelix(this.h,this.s,this.l*k,this.opacity);},rgb(){var h=isNaN(this.h)?0:(this.h+120)*radians,l=+this.l,a=isNaN(this.s)?0:this.s*l*(1-l),cosh=Math.cos(h),sinh=Math.sin(h);return new Rgb(255*(l+a*(A*cosh+B*sinh)),255*(l+a*(C*cosh+D*sinh)),255*(l+a*(E*cosh)),this.opacity);}}));function basis(t1,v0,v1,v2,v3){var t2=t1*t1,t3=t2*t1;return((1-3*t1+3*t2-t3)*v0
+(4-6*t2+3*t3)*v1
+(1+3*t1+3*t2-3*t3)*v2
+t3*v3)/6;}
function basis$1(values){var n=values.length-1;return function(t){var i=t<=0?(t=0):t>=1?(t=1,n-1):Math.floor(t*n),v1=values[i],v2=values[i+1],v0=i>0?values[i-1]:2*v1-v2,v3=i<n-1?values[i+2]:2*v2-v1;return basis((t-i/n)*n,v0,v1,v2,v3);};}
var constant=x=>()=>x;function linear(a,d){return function(t){return a+t*d;};}
function exponential(a,b,y){return a=Math.pow(a,y),b=Math.pow(b,y)-a,y=1/y,function(t){return Math.pow(a+t*b,y);};}
function hue(a,b){var d=b-a;return d?linear(a,d>180||d<-180?d-360*Math.round(d/360):d):constant(isNaN(a)?b:a);}
function gamma(y){return(y=+y)===1?nogamma:function(a,b){return b-a?exponential(a,b,y):constant(isNaN(a)?b:a);};}
function nogamma(a,b){var d=b-a;return d?linear(a,d):constant(isNaN(a)?b:a);}
((function rgbGamma(y){var color=gamma(y);function rgb$1(start,end){var r=color((start=rgb(start)).r,(end=rgb(end)).r),g=color(start.g,end.g),b=color(start.b,end.b),opacity=nogamma(start.opacity,end.opacity);return function(t){start.r=r(t);start.g=g(t);start.b=b(t);start.opacity=opacity(t);return start+"";};}
rgb$1.gamma=rgbGamma;return rgb$1;}))(1);function rgbSpline(spline){return function(colors){var n=colors.length,r=new Array(n),g=new Array(n),b=new Array(n),i,color;for(i=0;i<n;++i){color=rgb(colors[i]);r[i]=color.r||0;g[i]=color.g||0;b[i]=color.b||0;}
r=spline(r);g=spline(g);b=spline(b);color.opacity=1;return function(t){color.r=r(t);color.g=g(t);color.b=b(t);return color+"";};};}
var rgbBasis=rgbSpline(basis$1);function cubehelix(hue){return(function cubehelixGamma(y){y=+y;function cubehelix(start,end){var h=hue((start=cubehelix$1(start)).h,(end=cubehelix$1(end)).h),s=nogamma(start.s,end.s),l=nogamma(start.l,end.l),opacity=nogamma(start.opacity,end.opacity);return function(t){start.h=h(t);start.s=s(t);start.l=l(Math.pow(t,y));start.opacity=opacity(t);return start+"";};}
cubehelix.gamma=cubehelixGamma;return cubehelix;})(1);}
cubehelix(hue);var cubehelixLong=cubehelix(nogamma);var ramp$1=scheme=>rgbBasis(scheme[scheme.length-1]);var scheme$q=new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(colors);var interpolateBrBG=ramp$1(scheme$q);var scheme$p=new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(colors);var interpolatePRGn=ramp$1(scheme$p);var scheme$o=new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(colors);var interpolatePiYG=ramp$1(scheme$o);var scheme$n=new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(colors);var interpolatePuOr=ramp$1(scheme$n);var scheme$m=new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(colors);var interpolateRdBu=ramp$1(scheme$m);var scheme$l=new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(colors);var interpolateRdGy=ramp$1(scheme$l);var scheme$k=new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(colors);var interpolateRdYlBu=ramp$1(scheme$k);var scheme$j=new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(colors);var interpolateRdYlGn=ramp$1(scheme$j);var scheme$i=new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(colors);var interpolateSpectral=ramp$1(scheme$i);var scheme$h=new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(colors);var interpolateBuGn=ramp$1(scheme$h);var scheme$g=new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(colors);var interpolateBuPu=ramp$1(scheme$g);var scheme$f=new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(colors);var interpolateGnBu=ramp$1(scheme$f);var scheme$e=new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(colors);var interpolateOrRd=ramp$1(scheme$e);var scheme$d=new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(colors);var interpolatePuBuGn=ramp$1(scheme$d);var scheme$c=new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(colors);var interpolatePuBu=ramp$1(scheme$c);var scheme$b=new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(colors);var interpolatePuRd=ramp$1(scheme$b);var scheme$a=new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(colors);var interpolateRdPu=ramp$1(scheme$a);var scheme$9=new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(colors);var interpolateYlGnBu=ramp$1(scheme$9);var scheme$8=new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(colors);var interpolateYlGn=ramp$1(scheme$8);var scheme$7=new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(colors);var interpolateYlOrBr=ramp$1(scheme$7);var scheme$6=new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(colors);var interpolateYlOrRd=ramp$1(scheme$6);var scheme$5=new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(colors);var interpolateBlues=ramp$1(scheme$5);var scheme$4=new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(colors);var interpolateGreens=ramp$1(scheme$4);var scheme$3=new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(colors);var interpolateGreys=ramp$1(scheme$3);var scheme$2=new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(colors);var interpolatePurples=ramp$1(scheme$2);var scheme$1=new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(colors);var interpolateReds=ramp$1(scheme$1);var scheme=new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(colors);var interpolateOranges=ramp$1(scheme);function interpolateCividis(t){t=Math.max(0,Math.min(1,t));return"rgb("
+Math.max(0,Math.min(255,Math.round(-4.54-t*(35.34-t*(2381.73-t*(6402.7-t*(7024.72-t*2710.57)))))))+", "
+Math.max(0,Math.min(255,Math.round(32.49+t*(170.73+t*(52.82-t*(131.46-t*(176.58-t*67.37)))))))+", "
+Math.max(0,Math.min(255,Math.round(81.24+t*(442.36-t*(2482.43-t*(6167.24-t*(6614.94-t*2475.67)))))))
+")";}
var interpolateCubehelixDefault=cubehelixLong(cubehelix$1(300,0.5,0.0),cubehelix$1(-240,0.5,1.0));var warm=cubehelixLong(cubehelix$1(-100,0.75,0.35),cubehelix$1(80,1.50,0.8));var cool=cubehelixLong(cubehelix$1(260,0.75,0.35),cubehelix$1(80,1.50,0.8));var c$1=cubehelix$1();function interpolateRainbow(t){if(t<0||t>1)t-=Math.floor(t);var ts=Math.abs(t-0.5);c$1.h=360*t-100;c$1.s=1.5-1.5*ts;c$1.l=0.8-0.9*ts;return c$1+"";}
var c=rgb(),pi_1_3=Math.PI/3,pi_2_3=Math.PI*2/3;function interpolateSinebow(t){var x;t=(0.5-t)*Math.PI;c.r=255*(x=Math.sin(t))*x;c.g=255*(x=Math.sin(t+pi_1_3))*x;c.b=255*(x=Math.sin(t+pi_2_3))*x;return c+"";}
function interpolateTurbo(t){t=Math.max(0,Math.min(1,t));return"rgb("
+Math.max(0,Math.min(255,Math.round(34.61+t*(1172.33-t*(10793.56-t*(33300.12-t*(38394.49-t*14825.05)))))))+", "
+Math.max(0,Math.min(255,Math.round(23.31+t*(557.33+t*(1225.33-t*(3574.96-t*(1073.77+t*707.56)))))))+", "
+Math.max(0,Math.min(255,Math.round(27.2+t*(3211.1-t*(15327.97-t*(27814-t*(22569.18-t*6838.66)))))))
+")";}
function ramp(range){var n=range.length;return function(t){return range[Math.max(0,Math.min(n-1,Math.floor(t*n)))];};}
var interpolateViridis=ramp(colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));var magma=ramp(colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));var inferno=ramp(colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));var plasma=ramp(colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));const baseDefaults={position:'chartArea',property:'value',grid:{z:1,drawOnChartArea:false,},ticks:{z:1,},legend:{align:'right',position:'bottom-right',length:100,width:50,margin:8,indicatorWidth:10,},};function computeLegendMargin(legend){const{indicatorWidth,align:pos,margin}=legend;const left=(typeof margin==='number'?margin:margin.left)+(pos==='right'?indicatorWidth:0);const top=(typeof margin==='number'?margin:margin.top)+(pos==='bottom'?indicatorWidth:0);const right=(typeof margin==='number'?margin:margin.right)+(pos==='left'?indicatorWidth:0);const bottom=(typeof margin==='number'?margin:margin.bottom)+(pos==='top'?indicatorWidth:0);return{left,top,right,bottom};}
function computeLegendPosition(chartArea,legend,width,height,legendSize){const{indicatorWidth,align:axisPos,position:pos}=legend;const isHor=axisPos==='top'||axisPos==='bottom';const w=(axisPos==='left'?legendSize.w:width)+(isHor?indicatorWidth:0);const h=(axisPos==='top'?legendSize.h:height)+(!isHor?indicatorWidth:0);const margin=computeLegendMargin(legend);if(typeof pos==='string'){switch(pos){case'top-left':return[margin.left,margin.top];case'top':return[(chartArea.right-w)/2,margin.top];case'left':return[margin.left,(chartArea.bottom-h)/2];case'top-right':return[chartArea.right-w-margin.right,margin.top];case'bottom-right':return[chartArea.right-w-margin.right,chartArea.bottom-h-margin.bottom];case'bottom':return[(chartArea.right-w)/2,chartArea.bottom-h-margin.bottom];case'bottom-left':return[margin.left,chartArea.bottom-h-margin.bottom];default:return[chartArea.right-w-margin.right,(chartArea.bottom-h)/2];}}
return[pos.x,pos.y];}
class LegendScale extends chart_js.LinearScale{constructor(){super(...arguments);this.legendSize={w:0,h:0};}
init(options){options.position='chartArea';super.init(options);this.axis='r';}
parse(raw,index){if(raw&&typeof raw[this.options.property]==='number'){return raw[this.options.property];}
return super.parse(raw,index);}
isHorizontal(){return this.options.legend.align==='top'||this.options.legend.align==='bottom';}
_getNormalizedValue(v){if(v==null||Number.isNaN(v)){return null;}
return(v-this._startValue)/this._valueRange;}
update(maxWidth,maxHeight,margins){const ch=Math.min(maxHeight,this.bottom==null?Number.POSITIVE_INFINITY:this.bottom);const cw=Math.min(maxWidth,this.right==null?Number.POSITIVE_INFINITY:this.right);const l=this.options.legend;const isHor=this.isHorizontal();const factor=(v,full)=>(v<1?full*v:v);const w=Math.min(cw,factor(isHor?l.length:l.width,cw))-(!isHor?l.indicatorWidth:0);const h=Math.min(ch,factor(!isHor?l.length:l.width,ch))-(isHor?l.indicatorWidth:0);this.legendSize={w,h};this.bottom=h;this.height=h;this.right=w;this.width=w;const bak=this.options.position;this.options.position=this.options.legend.align;const r=super.update(w,h,margins);this.options.position=bak;this.height=Math.min(h,this.height);this.width=Math.min(w,this.width);return r;}
_computeLabelArea(){return undefined;}
draw(chartArea){if(!this._isVisible()){return;}
const pos=computeLegendPosition(chartArea,this.options.legend,this.width,this.height,this.legendSize);const{ctx}=this;ctx.save();ctx.translate(pos[0],pos[1]);const bak=this.options.position;this.options.position=this.options.legend.align;super.draw({...chartArea,bottom:this.height+10,right:this.width});this.options.position=bak;const{indicatorWidth}=this.options.legend;switch(this.options.legend.align){case'left':ctx.translate(this.legendSize.w,0);break;case'top':ctx.translate(0,this.legendSize.h);break;case'bottom':ctx.translate(0,-indicatorWidth);break;default:ctx.translate(-indicatorWidth,0);break;}
this._drawIndicator();ctx.restore();}
_drawIndicator(){}}
class LogarithmicLegendScale extends chart_js.LogarithmicScale{constructor(){super(...arguments);this.legendSize={w:0,h:0};}
init(options){LegendScale.prototype.init.call(this,options);}
parse(raw,index){return LegendScale.prototype.parse.call(this,raw,index);}
isHorizontal(){return this.options.legend.align==='top'||this.options.legend.align==='bottom';}
_getNormalizedValue(v){if(v==null||Number.isNaN(v)){return null;}
return(Math.log10(v)-this._startValue)/this._valueRange;}
update(maxWidth,maxHeight,margins){return LegendScale.prototype.update.call(this,maxWidth,maxHeight,margins);}
_computeLabelArea(){return undefined;}
draw(chartArea){return LegendScale.prototype.draw.call(this,chartArea);}
_drawIndicator(){}}
const lookup={interpolateBlues,interpolateBrBG,interpolateBuGn,interpolateBuPu,interpolateCividis,interpolateCool:cool,interpolateCubehelixDefault,interpolateGnBu,interpolateGreens,interpolateGreys,interpolateInferno:inferno,interpolateMagma:magma,interpolateOrRd,interpolateOranges,interpolatePRGn,interpolatePiYG,interpolatePlasma:plasma,interpolatePuBu,interpolatePuBuGn,interpolatePuOr,interpolatePuRd,interpolatePurples,interpolateRainbow,interpolateRdBu,interpolateRdGy,interpolateRdPu,interpolateRdYlBu,interpolateRdYlGn,interpolateReds,interpolateSinebow,interpolateSpectral,interpolateTurbo,interpolateViridis,interpolateWarm:warm,interpolateYlGn,interpolateYlGnBu,interpolateYlOrBr,interpolateYlOrRd,};Object.keys(lookup).forEach((key)=>{lookup[`${key.charAt(11).toLowerCase()}${key.slice(12)}`]=lookup[key];lookup[key.slice(11)]=lookup[key];});function quantize$1(v,steps){const perStep=1/steps;if(v<=perStep){return 0;}
if(v>=1-perStep){return 1;}
for(let acc=0;acc<1;acc+=perStep){if(v<acc){return acc-perStep/2;}}
return v;}
const colorScaleDefaults={interpolate:'blues',missing:'transparent',quantize:0,};class ColorScale extends LegendScale{get interpolate(){const o=this.options;if(!o){return(v)=>`rgb(${v},${v},${v})`;}
if(typeof o.interpolate==='function'){return o.interpolate;}
return lookup[o.interpolate]||lookup.blues;}
getColorForValue(value){const v=this._getNormalizedValue(value);if(v==null||Number.isNaN(v)){return this.options.missing;}
return this.getColor(v);}
getColor(normalized){let v=normalized;if(this.options.quantize>0){v=quantize$1(v,this.options.quantize);}
return this.interpolate(v);}
_drawIndicator(){const{indicatorWidth:indicatorSize}=this.options.legend;const reverse=this._reversePixels;if(this.isHorizontal()){const w=this.width;if(this.options.quantize>0){const stepWidth=w/this.options.quantize;const offset=!reverse?(i)=>i:(i)=>w-stepWidth-i;for(let i=0;i<w;i+=stepWidth){const v=(i+stepWidth/2)/w;this.ctx.fillStyle=this.getColor(v);this.ctx.fillRect(offset(i),0,stepWidth,indicatorSize);}}
else{const offset=!reverse?(i)=>i:(i)=>w-1-i;for(let i=0;i<w;i+=1){this.ctx.fillStyle=this.getColor((i+0.5)/w);this.ctx.fillRect(offset(i),0,1,indicatorSize);}}}
else{const h=this.height;if(this.options.quantize>0){const stepWidth=h/this.options.quantize;const offset=!reverse?(i)=>i:(i)=>h-stepWidth-i;for(let i=0;i<h;i+=stepWidth){const v=(i+stepWidth/2)/h;this.ctx.fillStyle=this.getColor(v);this.ctx.fillRect(0,offset(i),indicatorSize,stepWidth);}}
else{const offset=!reverse?(i)=>i:(i)=>h-1-i;for(let i=0;i<h;i+=1){this.ctx.fillStyle=this.getColor((i+0.5)/h);this.ctx.fillRect(0,offset(i),indicatorSize,1);}}}}}
ColorScale.id='color';ColorScale.defaults=helpers.merge({},[chart_js.LinearScale.defaults,baseDefaults,colorScaleDefaults]);ColorScale.descriptors={_scriptable:(name)=>name!=='interpolate',_indexable:false,};class ColorLogarithmicScale extends LogarithmicLegendScale{constructor(){super(...arguments);this.interpolate=(v)=>`rgb(${v},${v},${v})`;}
init(options){super.init(options);if(typeof options.interpolate==='function'){this.interpolate=options.interpolate;}
else{this.interpolate=lookup[options.interpolate]||lookup.blues;}}
getColorForValue(value){return ColorScale.prototype.getColorForValue.call(this,value);}
getColor(normalized){let v=normalized;if(this.options.quantize>0){v=quantize$1(v,this.options.quantize);}
return this.interpolate(v);}
_drawIndicator(){return ColorScale.prototype._drawIndicator.call(this);}}
ColorLogarithmicScale.id='colorLogarithmic';ColorLogarithmicScale.defaults=helpers.merge({},[chart_js.LogarithmicScale.defaults,baseDefaults,colorScaleDefaults,]);ColorLogarithmicScale.descriptors={_scriptable:(name)=>name!=='interpolate',_indexable:false,};const scaleDefaults={missing:1,mode:'area',range:[2,20],legend:{align:'bottom',length:90,width:70,indicatorWidth:42,},};class SizeScale extends LegendScale{constructor(){super(...arguments);this._model=null;}
getSizeForValue(value){const v=this._getNormalizedValue(value);if(v==null||Number.isNaN(v)){return this.options.missing;}
return this.getSizeImpl(v);}
getSizeImpl(normalized){const[r0,r1]=this.options.range;if(this.options.mode==='area'){const a1=r1*r1*Math.PI;const a0=r0*r0*Math.PI;const range=a1-a0;const a=normalized*range+a0;return Math.sqrt(a/Math.PI);}
const range=r1-r0;return normalized*range+r0;}
_drawIndicator(){const{ctx}=this;const shift=this.options.legend.indicatorWidth/2;const isHor=this.isHorizontal();const values=this.ticks;const labelItems=this.getLabelItems();const positions=labelItems?labelItems.map((el)=>({[isHor?'x':'y']:el.options.translation[isHor?0:1]})):values.map((_,i)=>({[isHor?'x':'y']:this.getPixelForTick(i)}));(this._gridLineItems||[]).forEach((item)=>{ctx.save();ctx.strokeStyle=item.color;ctx.lineWidth=item.width;if(ctx.setLineDash){ctx.setLineDash(item.borderDash);ctx.lineDashOffset=item.borderDashOffset;}
ctx.beginPath();if(this.options.grid.drawTicks){switch(this.options.legend.align){case'left':ctx.moveTo(0,item.ty1);ctx.lineTo(shift,item.ty2);break;case'top':ctx.moveTo(item.tx1,0);ctx.lineTo(item.tx2,shift);break;case'bottom':ctx.moveTo(item.tx1,shift);ctx.lineTo(item.tx2,shift*2);break;default:ctx.moveTo(shift,item.ty1);ctx.lineTo(shift*2,item.ty2);break;}}
ctx.stroke();ctx.restore();});if(this._model){const props=this._model;ctx.strokeStyle=props.borderColor;ctx.lineWidth=props.borderWidth||0;ctx.fillStyle=props.backgroundColor;}
else{ctx.fillStyle='blue';}
values.forEach((v,i)=>{const pos=positions[i];const radius=this.getSizeForValue(v.value);const x=isHor?pos.x:shift;const y=isHor?shift:pos.y;const renderOptions={pointStyle:'circle',borderWidth:0,...(this._model||{}),radius,};helpers.drawPoint(ctx,renderOptions,x,y);});}}
SizeScale.id='size';SizeScale.defaults=helpers.merge({},[chart_js.LinearScale.defaults,baseDefaults,scaleDefaults]);SizeScale.descriptors={_scriptable:true,_indexable:(name)=>name!=='range',};class SizeLogarithmicScale extends LogarithmicLegendScale{constructor(){super(...arguments);this._model=null;}
getSizeForValue(value){const v=this._getNormalizedValue(value);if(v==null||Number.isNaN(v)){return this.options.missing;}
return this.getSizeImpl(v);}
getSizeImpl(normalized){return SizeScale.prototype.getSizeImpl.call(this,normalized);}
_drawIndicator(){SizeScale.prototype._drawIndicator.call(this);}}
SizeLogarithmicScale.id='sizeLogarithmic';SizeLogarithmicScale.defaults=helpers.merge({},[chart_js.LogarithmicScale.defaults,baseDefaults,scaleDefaults]);function growGeoBounds(bounds,amount){return[[bounds[0][0]-amount,bounds[0][1]-amount],[bounds[1][0]+amount,bounds[1][1]+amount],];}
class GeoFeature extends chart_js.Element{constructor(){super(...arguments);this.cache=undefined;}
inRange(mouseX,mouseY){const bb=this.getBounds();const r=(Number.isNaN(mouseX)||(mouseX>=bb.x&&mouseX<=bb.x2))&&(Number.isNaN(mouseY)||(mouseY>=bb.y&&mouseY<=bb.y2));const projection=this.projectionScale.geoPath.projection();if(r&&!Number.isNaN(mouseX)&&!Number.isNaN(mouseY)&&typeof projection.invert==='function'){const longLat=projection.invert([mouseX,mouseY]);return longLat!=null&&geoContains(this.feature,longLat);}
return r;}
inXRange(mouseX){return this.inRange(mouseX,Number.NaN);}
inYRange(mouseY){return this.inRange(Number.NaN,mouseY);}
getCenterPoint(){if(this.cache&&this.cache.center){return this.cache.center;}
let center;if(this.center){const p=this.projectionScale.projection([this.center.longitude,this.center.latitude]);center={x:p[0],y:p[1],};}
else{const centroid=this.projectionScale.geoPath.centroid(this.feature);center={x:centroid[0],y:centroid[1],};}
this.cache={...(this.cache||{}),center};return center;}
getBounds(){if(this.cache&&this.cache.bounds){return this.cache.bounds;}
const bb=growGeoBounds(this.projectionScale.geoPath.bounds(this.feature),this.options.borderWidth/2);const bounds={x:bb[0][0],x2:bb[1][0],y:bb[0][1],y2:bb[1][1],width:bb[1][0]-bb[0][0],height:bb[1][1]-bb[0][1],};this.cache={...(this.cache||{}),bounds};return bounds;}
_drawInCache(doc){const bounds=this.getBounds();if(!Number.isFinite(bounds.x)){return;}
const canvas=this.cache&&this.cache.canvas?this.cache.canvas:doc.createElement('canvas');const x1=Math.floor(bounds.x);const y1=Math.floor(bounds.y);const x2=Math.ceil(bounds.x+bounds.width);const y2=Math.ceil(bounds.y+bounds.height);const pixelRatio=this.pixelRatio||1;const width=Math.ceil(Math.max(x2-x1,1)*pixelRatio);const height=Math.ceil(Math.max(y2-y1,1)*pixelRatio);if(width<=0||height<=0){return;}
canvas.width=width;canvas.height=height;const ctx=canvas.getContext('2d');if(ctx){ctx.clearRect(0,0,canvas.width,canvas.height);ctx.save();ctx.scale(pixelRatio,pixelRatio);ctx.translate(-x1,-y1);this._drawImpl(ctx);ctx.restore();this.cache={...(this.cache||{}),canvas,canvasKey:this._optionsToKey()};}}
_optionsToKey(){const{options}=this;return`${options.backgroundColor};${options.borderColor};${options.borderWidth};${this.pixelRatio}`;}
_drawImpl(ctx){const{feature}=this;const{options}=this;ctx.beginPath();this.projectionScale.geoPath.context(ctx)(feature);if(options.backgroundColor){ctx.fillStyle=options.backgroundColor;ctx.fill();}
if(options.borderColor){ctx.strokeStyle=options.borderColor;ctx.lineWidth=options.borderWidth;ctx.stroke();}}
draw(ctx){const{feature}=this;if(!feature){return;}
if((!this.cache||this.cache.canvasKey!==this._optionsToKey())&&ctx.canvas.ownerDocument!=null){this._drawInCache(ctx.canvas.ownerDocument);}
const bounds=this.getBounds();if(this.cache&&this.cache.canvas&&this.cache.canvas.width>0&&this.cache.canvas.height>0){const x1=Math.floor(bounds.x);const y1=Math.floor(bounds.y);const x2=Math.ceil(bounds.x+bounds.width);const y2=Math.ceil(bounds.y+bounds.height);const width=x2-x1;const height=y2-y1;if(width>0&&height>0){ctx.drawImage(this.cache.canvas,x1,y1,x2-x1,y2-y1);}}
else if(Number.isFinite(bounds.x)){ctx.save();this._drawImpl(ctx);ctx.restore();}}}
GeoFeature.id='geoFeature';GeoFeature.defaults={...chart_js.BarElement.defaults,outlineBackgroundColor:null,outlineBorderWidth:0,graticuleBorderColor:'#CCCCCC',graticuleBorderWidth:0,};GeoFeature.defaultRoutes={outlineBorderColor:'borderColor',...(chart_js.BarElement.defaultRoutes||{}),};const geoDefaults={showOutline:false,showGraticule:false,clipMap:true,};const geoOverrides={scales:{projection:{axis:'x',type:ProjectionScale.id,position:'chartArea',display:false,},},};function patchDatasetElementOptions(options){const r={...options};Object.keys(options).forEach((key)=>{let targetKey=key;if(key.startsWith('outline')){const sub=key.slice('outline'.length);targetKey=sub[0].toLowerCase()+sub.slice(1);}
else if(key.startsWith('hoverOutline')){targetKey=`hover${key.slice('hoverOutline'.length)}`;}
else{return;}
delete r[key];r[targetKey]=options[key];});return r;}
class GeoController extends chart_js.DatasetController{getGeoDataset(){return super.getDataset();}
getGeoOptions(){return this.chart.options;}
getProjectionScale(){return this.getScaleForId('projection');}
linkScales(){const dataset=this.getGeoDataset();const meta=this.getMeta();meta.xAxisID='projection';dataset.xAxisID='projection';meta.yAxisID='projection';dataset.yAxisID='projection';meta.xScale=this.getScaleForId('projection');meta.yScale=this.getScaleForId('projection');this.getProjectionScale().computeBounds(this.resolveOutline());}
showOutline(){return helpers.valueOrDefault(this.getGeoDataset().showOutline,this.getGeoOptions().showOutline);}
clipMap(){return helpers.valueOrDefault(this.getGeoDataset().clipMap,this.getGeoOptions().clipMap);}
getGraticule(){return helpers.valueOrDefault(this.getGeoDataset().showGraticule,this.getGeoOptions().showGraticule);}
update(mode){super.update(mode);const meta=this.getMeta();const scale=this.getProjectionScale();const dirtyCache=scale.updateBounds();if(this.showOutline()){const elem=meta.dataset;if(dirtyCache){delete elem.cache;}
elem.projectionScale=scale;elem.pixelRatio=this.chart.currentDevicePixelRatio;if(mode!=='resize'){const options=patchDatasetElementOptions(this.resolveDatasetElementOptions(mode));const properties={feature:this.resolveOutline(),options,};this.updateElement(elem,undefined,properties,mode);if(this.getGraticule()){meta.graticule=options;}}}
else if(this.getGraticule()&&mode!=='resize'){meta.graticule=patchDatasetElementOptions(this.resolveDatasetElementOptions(mode));}
this.updateElements(meta.data,0,meta.data.length,mode);if(dirtyCache){meta.data.forEach((elem)=>delete elem.cache);}}
resolveOutline(){const ds=this.getGeoDataset();const outline=ds.outline||{type:'Sphere'};if(Array.isArray(outline)){return{type:'FeatureCollection',features:outline,};}
return outline;}
showGraticule(){const g=this.getGraticule();const options=this.getMeta().graticule;if(!g||!options){return;}
const{ctx}=this.chart;const scale=this.getProjectionScale();const path=scale.geoPath.context(ctx);ctx.save();ctx.beginPath();if(typeof g==='boolean'){if(g){path(graticule10());}}
else{const geo=graticule();if(g.stepMajor){geo.stepMajor(g.stepMajor);}
if(g.stepMinor){geo.stepMinor(g.stepMinor);}
path(geo());}
ctx.strokeStyle=options.graticuleBorderColor;ctx.lineWidth=options.graticuleBorderWidth;ctx.stroke();ctx.restore();}
draw(){const{chart}=this;const clipMap=this.clipMap();let enabled=false;if(clipMap===true||clipMap==='outline'||clipMap==='outline+graticule'){enabled=true;helpers.clipArea(chart.ctx,chart.chartArea);}
if(this.showOutline()&&this.getMeta().dataset){this.getMeta().dataset.draw.call(this.getMeta().dataset,chart.ctx,chart.chartArea);}
if(clipMap===true||clipMap==='graticule'||clipMap==='outline+graticule'){if(!enabled){helpers.clipArea(chart.ctx,chart.chartArea);}}
else if(enabled){enabled=false;helpers.unclipArea(chart.ctx);}
this.showGraticule();if(clipMap===true||clipMap==='items'){if(!enabled){helpers.clipArea(chart.ctx,chart.chartArea);}}
else if(enabled){enabled=false;helpers.unclipArea(chart.ctx);}
this.getMeta().data.forEach((elem)=>elem.draw.call(elem,chart.ctx,chart.chartArea));if(enabled){enabled=false;helpers.unclipArea(chart.ctx);}}}
function patchController(type,config,controller,elements=[],scales=[]){chart_js.registry.addControllers(controller);if(Array.isArray(elements)){chart_js.registry.addElements(...elements);}
else{chart_js.registry.addElements(elements);}
if(Array.isArray(scales)){chart_js.registry.addScales(...scales);}
else{chart_js.registry.addScales(scales);}
const c=config;c.type=type;return c;}
class ChoroplethController extends GeoController{initialize(){super.initialize();this.enableOptionSharing=true;}
linkScales(){super.linkScales();const dataset=this.getGeoDataset();const meta=this.getMeta();meta.vAxisID='color';meta.rAxisID='color';dataset.vAxisID='color';dataset.rAxisID='color';meta.rScale=this.getScaleForId('color');meta.vScale=meta.rScale;meta.iScale=meta.xScale;meta.iAxisID=meta.xAxisID;dataset.iAxisID=meta.xAxisID;}
_getOtherScale(scale){return scale;}
parse(start,count){const rScale=this.getMeta().rScale;const{data}=this.getDataset();const meta=this._cachedMeta;for(let i=start;i<start+count;i+=1){meta._parsed[i]={[rScale.axis]:rScale.parse(data[i],i),};}}
updateElements(elems,start,count,mode){const firstOpts=this.resolveDataElementOptions(start,mode);const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions);const scale=this.getProjectionScale();this.updateSharedOptions(sharedOptions,mode,firstOpts);for(let i=start;i<start+count;i+=1){const elem=elems[i];elem.projectionScale=scale;elem.feature=this._data[i].feature;elem.center=this._data[i].center;elem.pixelRatio=this.chart.currentDevicePixelRatio;const center=elem.getCenterPoint();const properties={x:center.x,y:center.y,};if(includeOptions){properties.options=(sharedOptions||this.resolveDataElementOptions(i,mode));}
this.updateElement(elem,i,properties,mode);}}
indexToColor(index){const rScale=this.getMeta().rScale;return rScale.getColorForValue(this.getParsed(index)[rScale.axis]);}}
ChoroplethController.id='choropleth';ChoroplethController.defaults=helpers.merge({},[geoDefaults,{datasetElementType:GeoFeature.id,dataElementType:GeoFeature.id,},]);ChoroplethController.overrides=helpers.merge({},[geoOverrides,{plugins:{tooltip:{callbacks:{title(){return'';},label(item){var _a,_b,_c,_d;if(item.formattedValue==null){return(_b=(_a=item.chart.data)===null||_a===void 0?void 0:_a.labels)===null||_b===void 0?void 0:_b[item.dataIndex];}
return`${(_d = (_c = item.chart.data) === null || _c === void 0 ? void 0 : _c.labels) === null || _d === void 0 ? void 0 : _d[item.dataIndex]}: ${item.formattedValue}`;},},},colors:{enabled:false,},},scales:{color:{type:ColorScale.id,axis:'x',},},elements:{geoFeature:{backgroundColor(context){if(context.dataIndex==null){return null;}
const controller=context.chart.getDatasetMeta(context.datasetIndex).controller;return controller.indexToColor(context.dataIndex);},},},},]);class ChoroplethChart extends chart_js.Chart{constructor(item,config){super(item,patchController('choropleth',config,ChoroplethController,GeoFeature,[ColorScale,ProjectionScale]));}}
ChoroplethChart.id=ChoroplethController.id;class BubbleMapController extends GeoController{initialize(){super.initialize();this.enableOptionSharing=true;}
linkScales(){super.linkScales();const dataset=this.getGeoDataset();const meta=this.getMeta();meta.vAxisID='size';meta.rAxisID='size';dataset.vAxisID='size';dataset.rAxisID='size';meta.rScale=this.getScaleForId('size');meta.vScale=meta.rScale;meta.iScale=meta.xScale;meta.iAxisID=meta.xAxisID;dataset.iAxisID=meta.xAxisID;}
_getOtherScale(scale){return scale;}
parse(start,count){const rScale=this.getMeta().rScale;const data=this.getDataset().data;const meta=this._cachedMeta;for(let i=start;i<start+count;i+=1){const d=data[i];meta._parsed[i]={x:d.longitude==null?d.x:d.longitude,y:d.latitude==null?d.y:d.latitude,[rScale.axis]:rScale.parse(d,i),};}}
updateElements(elems,start,count,mode){const reset=mode==='reset';const firstOpts=this.resolveDataElementOptions(start,mode);const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions);const scale=this.getProjectionScale();this.getMeta().rScale._model=firstOpts;this.updateSharedOptions(sharedOptions,mode,firstOpts);for(let i=start;i<start+count;i+=1){const elem=elems[i];const parsed=this.getParsed(i);const projection=scale.projection([parsed.x,parsed.y]);const properties={x:projection?projection[0]:0,y:projection?projection[1]:0,skip:Number.isNaN(parsed.x)||Number.isNaN(parsed.y),};if(includeOptions){properties.options=(sharedOptions||this.resolveDataElementOptions(i,mode));if(reset){properties.options.radius=0;}}
this.updateElement(elem,i,properties,mode);}}
indexToRadius(index){const rScale=this.getMeta().rScale;return rScale.getSizeForValue(this.getParsed(index)[rScale.axis]);}}
BubbleMapController.id='bubbleMap';BubbleMapController.defaults=helpers.merge({},[geoDefaults,{dataElementType:chart_js.PointElement.id,datasetElementType:GeoFeature.id,showOutline:true,clipMap:'outline+graticule',},]);BubbleMapController.overrides=helpers.merge({},[geoOverrides,{plugins:{tooltip:{callbacks:{title(){return'';},label(item){var _a,_b,_c,_d;if(item.formattedValue==null){return(_b=(_a=item.chart.data)===null||_a===void 0?void 0:_a.labels)===null||_b===void 0?void 0:_b[item.dataIndex];}
return`${(_d = (_c = item.chart.data) === null || _c === void 0 ? void 0 : _c.labels) === null || _d === void 0 ? void 0 : _d[item.dataIndex]}: ${item.formattedValue}`;},},},},scales:{size:{axis:'x',type:SizeScale.id,},},elements:{point:{radius(context){if(context.dataIndex==null){return null;}
const controller=context.chart.getDatasetMeta(context.datasetIndex).controller;return controller.indexToRadius(context.dataIndex);},hoverRadius(context){if(context.dataIndex==null){return null;}
const controller=context.chart.getDatasetMeta(context.datasetIndex).controller;return controller.indexToRadius(context.dataIndex)+1;},},},},]);class BubbleMapChart extends chart_js.Chart{constructor(item,config){super(item,patchController('bubbleMap',config,BubbleMapController,GeoFeature,[SizeScale,ProjectionScale]));}}
BubbleMapChart.id=BubbleMapController.id;function identity(x){return x;}
function transform(transform){if(transform==null)return identity;var x0,y0,kx=transform.scale[0],ky=transform.scale[1],dx=transform.translate[0],dy=transform.translate[1];return function(input,i){if(!i)x0=y0=0;var j=2,n=input.length,output=new Array(n);output[0]=(x0+=input[0])*kx+dx;output[1]=(y0+=input[1])*ky+dy;while(j<n)output[j]=input[j],++j;return output;};}
function bbox(topology){var t=transform(topology.transform),key,x0=Infinity,y0=x0,x1=-x0,y1=-x0;function bboxPoint(p){p=t(p);if(p[0]<x0)x0=p[0];if(p[0]>x1)x1=p[0];if(p[1]<y0)y0=p[1];if(p[1]>y1)y1=p[1];}
function bboxGeometry(o){switch(o.type){case"GeometryCollection":o.geometries.forEach(bboxGeometry);break;case"Point":bboxPoint(o.coordinates);break;case"MultiPoint":o.coordinates.forEach(bboxPoint);break;}}
topology.arcs.forEach(function(arc){var i=-1,n=arc.length,p;while(++i<n){p=t(arc[i],i);if(p[0]<x0)x0=p[0];if(p[0]>x1)x1=p[0];if(p[1]<y0)y0=p[1];if(p[1]>y1)y1=p[1];}});for(key in topology.objects){bboxGeometry(topology.objects[key]);}
return[x0,y0,x1,y1];}
function reverse(array,n){var t,j=array.length,i=j-n;while(i<--j)t=array[i],array[i++]=array[j],array[j]=t;}
function feature(topology,o){if(typeof o==="string")o=topology.objects[o];return o.type==="GeometryCollection"?{type:"FeatureCollection",features:o.geometries.map(function(o){return feature$1(topology,o);})}:feature$1(topology,o);}
function feature$1(topology,o){var id=o.id,bbox=o.bbox,properties=o.properties==null?{}:o.properties,geometry=object(topology,o);return id==null&&bbox==null?{type:"Feature",properties:properties,geometry:geometry}:bbox==null?{type:"Feature",id:id,properties:properties,geometry:geometry}:{type:"Feature",id:id,bbox:bbox,properties:properties,geometry:geometry};}
function object(topology,o){var transformPoint=transform(topology.transform),arcs=topology.arcs;function arc(i,points){if(points.length)points.pop();for(var a=arcs[i<0?~i:i],k=0,n=a.length;k<n;++k){points.push(transformPoint(a[k],k));}
if(i<0)reverse(points,n);}
function point(p){return transformPoint(p);}
function line(arcs){var points=[];for(var i=0,n=arcs.length;i<n;++i)arc(arcs[i],points);if(points.length<2)points.push(points[0]);return points;}
function ring(arcs){var points=line(arcs);while(points.length<4)points.push(points[0]);return points;}
function polygon(arcs){return arcs.map(ring);}
function geometry(o){var type=o.type,coordinates;switch(type){case"GeometryCollection":return{type:type,geometries:o.geometries.map(geometry)};case"Point":coordinates=point(o.coordinates);break;case"MultiPoint":coordinates=o.coordinates.map(point);break;case"LineString":coordinates=line(o.arcs);break;case"MultiLineString":coordinates=o.arcs.map(line);break;case"Polygon":coordinates=polygon(o.arcs);break;case"MultiPolygon":coordinates=o.arcs.map(polygon);break;default:return null;}
return{type:type,coordinates:coordinates};}
return geometry(o);}
function stitch(topology,arcs){var stitchedArcs={},fragmentByStart={},fragmentByEnd={},fragments=[],emptyIndex=-1;arcs.forEach(function(i,j){var arc=topology.arcs[i<0?~i:i],t;if(arc.length<3&&!arc[1][0]&&!arc[1][1]){t=arcs[++emptyIndex],arcs[emptyIndex]=i,arcs[j]=t;}});arcs.forEach(function(i){var e=ends(i),start=e[0],end=e[1],f,g;if(f=fragmentByEnd[start]){delete fragmentByEnd[f.end];f.push(i);f.end=end;if(g=fragmentByStart[end]){delete fragmentByStart[g.start];var fg=g===f?f:f.concat(g);fragmentByStart[fg.start=f.start]=fragmentByEnd[fg.end=g.end]=fg;}else{fragmentByStart[f.start]=fragmentByEnd[f.end]=f;}}else if(f=fragmentByStart[end]){delete fragmentByStart[f.start];f.unshift(i);f.start=start;if(g=fragmentByEnd[start]){delete fragmentByEnd[g.end];var gf=g===f?f:g.concat(f);fragmentByStart[gf.start=g.start]=fragmentByEnd[gf.end=f.end]=gf;}else{fragmentByStart[f.start]=fragmentByEnd[f.end]=f;}}else{f=[i];fragmentByStart[f.start=start]=fragmentByEnd[f.end=end]=f;}});function ends(i){var arc=topology.arcs[i<0?~i:i],p0=arc[0],p1;if(topology.transform)p1=[0,0],arc.forEach(function(dp){p1[0]+=dp[0],p1[1]+=dp[1];});else p1=arc[arc.length-1];return i<0?[p1,p0]:[p0,p1];}
function flush(fragmentByEnd,fragmentByStart){for(var k in fragmentByEnd){var f=fragmentByEnd[k];delete fragmentByStart[f.start];delete f.start;delete f.end;f.forEach(function(i){stitchedArcs[i<0?~i:i]=1;});fragments.push(f);}}
flush(fragmentByEnd,fragmentByStart);flush(fragmentByStart,fragmentByEnd);arcs.forEach(function(i){if(!stitchedArcs[i<0?~i:i])fragments.push([i]);});return fragments;}
function mesh(topology){return object(topology,meshArcs.apply(this,arguments));}
function meshArcs(topology,object,filter){var arcs,i,n;if(arguments.length>1)arcs=extractArcs(topology,object,filter);else for(i=0,arcs=new Array(n=topology.arcs.length);i<n;++i)arcs[i]=i;return{type:"MultiLineString",arcs:stitch(topology,arcs)};}
function extractArcs(topology,object,filter){var arcs=[],geomsByArc=[],geom;function extract0(i){var j=i<0?~i:i;(geomsByArc[j]||(geomsByArc[j]=[])).push({i:i,g:geom});}
function extract1(arcs){arcs.forEach(extract0);}
function extract2(arcs){arcs.forEach(extract1);}
function extract3(arcs){arcs.forEach(extract2);}
function geometry(o){switch(geom=o,o.type){case"GeometryCollection":o.geometries.forEach(geometry);break;case"LineString":extract1(o.arcs);break;case"MultiLineString":case"Polygon":extract2(o.arcs);break;case"MultiPolygon":extract3(o.arcs);break;}}
geometry(object);geomsByArc.forEach(filter==null?function(geoms){arcs.push(geoms[0].i);}:function(geoms){if(filter(geoms[0].g,geoms[geoms.length-1].g))arcs.push(geoms[0].i);});return arcs;}
function planarRingArea(ring){var i=-1,n=ring.length,a,b=ring[n-1],area=0;while(++i<n)a=b,b=ring[i],area+=a[0]*b[1]-a[1]*b[0];return Math.abs(area);}
function merge(topology){return object(topology,mergeArcs.apply(this,arguments));}
function mergeArcs(topology,objects){var polygonsByArc={},polygons=[],groups=[];objects.forEach(geometry);function geometry(o){switch(o.type){case"GeometryCollection":o.geometries.forEach(geometry);break;case"Polygon":extract(o.arcs);break;case"MultiPolygon":o.arcs.forEach(extract);break;}}
function extract(polygon){polygon.forEach(function(ring){ring.forEach(function(arc){(polygonsByArc[arc=arc<0?~arc:arc]||(polygonsByArc[arc]=[])).push(polygon);});});polygons.push(polygon);}
function area(ring){return planarRingArea(object(topology,{type:"Polygon",arcs:[ring]}).coordinates[0]);}
polygons.forEach(function(polygon){if(!polygon._){var group=[],neighbors=[polygon];polygon._=1;groups.push(group);while(polygon=neighbors.pop()){group.push(polygon);polygon.forEach(function(ring){ring.forEach(function(arc){polygonsByArc[arc<0?~arc:arc].forEach(function(polygon){if(!polygon._){polygon._=1;neighbors.push(polygon);}});});});}}});polygons.forEach(function(polygon){delete polygon._;});return{type:"MultiPolygon",arcs:groups.map(function(polygons){var arcs=[],n;polygons.forEach(function(polygon){polygon.forEach(function(ring){ring.forEach(function(arc){if(polygonsByArc[arc<0?~arc:arc].length<2){arcs.push(arc);}});});});arcs=stitch(topology,arcs);if((n=arcs.length)>1){for(var i=1,k=area(arcs[0]),ki,t;i<n;++i){if((ki=area(arcs[i]))>k){t=arcs[0],arcs[0]=arcs[i],arcs[i]=t,k=ki;}}}
return arcs;}).filter(function(arcs){return arcs.length>0;})};}
function bisect(a,x){var lo=0,hi=a.length;while(lo<hi){var mid=lo+hi>>>1;if(a[mid]<x)lo=mid+1;else hi=mid;}
return lo;}
function neighbors(objects){var indexesByArc={},neighbors=objects.map(function(){return[];});function line(arcs,i){arcs.forEach(function(a){if(a<0)a=~a;var o=indexesByArc[a];if(o)o.push(i);else indexesByArc[a]=[i];});}
function polygon(arcs,i){arcs.forEach(function(arc){line(arc,i);});}
function geometry(o,i){if(o.type==="GeometryCollection")o.geometries.forEach(function(o){geometry(o,i);});else if(o.type in geometryType)geometryType[o.type](o.arcs,i);}
var geometryType={LineString:line,MultiLineString:polygon,Polygon:polygon,MultiPolygon:function(arcs,i){arcs.forEach(function(arc){polygon(arc,i);});}};objects.forEach(geometry);for(var i in indexesByArc){for(var indexes=indexesByArc[i],m=indexes.length,j=0;j<m;++j){for(var k=j+1;k<m;++k){var ij=indexes[j],ik=indexes[k],n;if((n=neighbors[ij])[i=bisect(n,ik)]!==ik)n.splice(i,0,ik);if((n=neighbors[ik])[i=bisect(n,ij)]!==ij)n.splice(i,0,ij);}}}
return neighbors;}
function untransform(transform){if(transform==null)return identity;var x0,y0,kx=transform.scale[0],ky=transform.scale[1],dx=transform.translate[0],dy=transform.translate[1];return function(input,i){if(!i)x0=y0=0;var j=2,n=input.length,output=new Array(n),x1=Math.round((input[0]-dx)/kx),y1=Math.round((input[1]-dy)/ky);output[0]=x1-x0,x0=x1;output[1]=y1-y0,y0=y1;while(j<n)output[j]=input[j],++j;return output;};}
function quantize(topology,transform){if(topology.transform)throw new Error("already quantized");if(!transform||!transform.scale){if(!((n=Math.floor(transform))>=2))throw new Error("n must be ≥2");box=topology.bbox||bbox(topology);var x0=box[0],y0=box[1],x1=box[2],y1=box[3],n;transform={scale:[x1-x0?(x1-x0)/(n-1):1,y1-y0?(y1-y0)/(n-1):1],translate:[x0,y0]};}else{box=topology.bbox;}
var t=untransform(transform),box,key,inputs=topology.objects,outputs={};function quantizePoint(point){return t(point);}
function quantizeGeometry(input){var output;switch(input.type){case"GeometryCollection":output={type:"GeometryCollection",geometries:input.geometries.map(quantizeGeometry)};break;case"Point":output={type:"Point",coordinates:quantizePoint(input.coordinates)};break;case"MultiPoint":output={type:"MultiPoint",coordinates:input.coordinates.map(quantizePoint)};break;default:return input;}
if(input.id!=null)output.id=input.id;if(input.bbox!=null)output.bbox=input.bbox;if(input.properties!=null)output.properties=input.properties;return output;}
function quantizeArc(input){var i=0,j=1,n=input.length,p,output=new Array(n);output[0]=t(input[0],0);while(++i<n)if((p=t(input[i],i))[0]||p[1])output[j++]=p;if(j===1)output[j++]=[0,0];output.length=j;return output;}
for(key in inputs)outputs[key]=quantizeGeometry(inputs[key]);return{type:"Topology",bbox:box,transform:transform,objects:outputs,arcs:topology.arcs.map(quantizeArc)};}
var index=Object.freeze({__proto__:null,bbox:bbox,feature:feature,merge:merge,mergeArcs:mergeArcs,mesh:mesh,meshArcs:meshArcs,neighbors:neighbors,quantize:quantize,transform:transform,untransform:untransform});chart_js.registry.addScales(ColorLogarithmicScale,SizeLogarithmicScale,ProjectionScale,ColorScale,SizeScale);chart_js.registry.addElements(GeoFeature);chart_js.registry.addControllers(ChoroplethController,BubbleMapController);exports.BubbleMapChart=BubbleMapChart;exports.BubbleMapController=BubbleMapController;exports.ChoroplethChart=ChoroplethChart;exports.ChoroplethController=ChoroplethController;exports.ColorLogarithmicScale=ColorLogarithmicScale;exports.ColorScale=ColorScale;exports.GeoController=GeoController;exports.GeoFeature=GeoFeature;exports.ProjectionScale=ProjectionScale;exports.SizeLogarithmicScale=SizeLogarithmicScale;exports.SizeScale=SizeScale;exports.geoAlbers=geoAlbers;exports.geoAlbersUsa=geoAlbersUsa;exports.geoAzimuthalEqualArea=geoAzimuthalEqualArea;exports.geoAzimuthalEquidistant=geoAzimuthalEquidistant;exports.geoConicConformal=geoConicConformal;exports.geoConicEqualArea=geoConicEqualArea;exports.geoConicEquidistant=geoConicEquidistant;exports.geoEqualEarth=geoEqualEarth;exports.geoEquirectangular=geoEquirectangular;exports.geoGnomonic=geoGnomonic;exports.geoMercator=geoMercator;exports.geoNaturalEarth1=geoNaturalEarth1;exports.geoOrthographic=geoOrthographic;exports.geoStereographic=geoStereographic;exports.geoTransverseMercator=geoTransverseMercator;exports.topojson=index;}));;

/* /spreadsheet/static/lib/chart_js_treemap.js */
(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory(exports,require("chart.js"),require("chart.js/helpers")):typeof define==="function"&&define.amd?define(["exports","chart.js","chart.js/helpers"],factory):((global=typeof globalThis!=="undefined"?globalThis:global||self),factory((global["chartjs-chart-treemap"]={}),global.Chart,global.Chart.helpers));})(this,function(exports,chart_js,helpers){"use strict";const isOlderPart=(act,req)=>req>act||(act.length>req.length&&act.slice(0,req.length)===req);const getGroupKey=(lvl)=>""+lvl;function scanTreeObject(keys,treeLeafKey,obj,tree=[],lvl=0,result=[]){const objIndex=lvl-1;if(keys[0]in obj&&lvl>0){const record=tree.reduce(function(reduced,item,i){if(i!==objIndex){reduced[getGroupKey(i)]=item;}
return reduced;},{});record[treeLeafKey]=tree[objIndex];keys.forEach(function(k){record[k]=obj[k];});result.push(record);}else{for(const childKey of Object.keys(obj)){const child=obj[childKey];if(helpers.isObject(child)){tree.push(childKey);scanTreeObject(keys,treeLeafKey,child,tree,lvl+1,result);}}}
tree.splice(objIndex,1);return result;}
function normalizeTreeToArray(keys,treeLeafKey,obj){const data=scanTreeObject(keys,treeLeafKey,obj);if(!data.length){return data;}
const max=data.reduce(function(maxVal,element){const ikeys=Object.keys(element).length-2;return maxVal>ikeys?maxVal:ikeys;});data.forEach(function(element){for(let i=0;i<max;i++){const groupKey=getGroupKey(i);if(!element[groupKey]){element[groupKey]="";}}});return data;}
function flatten(input){const stack=[...input];const res=[];while(stack.length){const next=stack.pop();if(Array.isArray(next)){stack.push(...next);}else{res.push(next);}}
return res.reverse();}
function getPath(groups,value,defaultValue){if(!groups.length){return;}
const path=[];for(const grp of groups){const item=value[grp];if(item===""){path.push(defaultValue);break;}
path.push(item);}
return path.length?path.join("."):defaultValue;}
function group(values,grp,keys,treeLeafKey,mainGrp,mainValue,groups=[]){const key=keys[0];const addKeys=keys.slice(1);const tmp=Object.create(null);const data=Object.create(null);const ret=[];let g,i,n;for(i=0,n=values.length;i<n;++i){const v=values[i];if(mainGrp&&v[mainGrp]!==mainValue){continue;}
g=v[grp]||v[treeLeafKey]||"";if(!g){return[];}
if(!(g in tmp)){const tmpRef=(tmp[g]={value:0});addKeys.forEach(function(k){tmpRef[k]=0;});data[g]=[];}
tmp[g].value+=+v[key];tmp[g].label=v[grp]||"";const tmpRef=tmp[g];addKeys.forEach(function(k){tmpRef[k]+=v[k];});tmp[g].path=getPath(groups,v,g);data[g].push(v);}
Object.keys(tmp).forEach((k)=>{const v={children:data[k]};v[key]=+tmp[k].value;addKeys.forEach(function(ak){v[ak]=+tmp[k][ak];});v[grp]=tmp[k].label;v.label=k;v.path=tmp[k].path;if(mainGrp){v[mainGrp]=mainValue;}
ret.push(v);});return ret;}
function index(values,key){let n=values.length;let i;if(!n){return key;}
const obj=helpers.isObject(values[0]);key=obj?key:"v";for(i=0,n=values.length;i<n;++i){if(obj){values[i]._idx=i;}else{values[i]={v:values[i],_idx:i};}}
return key;}
function sort(values,key){if(key){values.sort((a,b)=>+b[key]-+a[key]);}else{values.sort((a,b)=>+b-+a);}}
function sum(values,key){let s,i,n;for(s=0,i=0,n=values.length;i<n;++i){s+=key?+values[i][key]:+values[i];}
return s;}
function requireVersion(pkg,min,ver,strict=true){const parts=ver.split(".");let i=0;for(const req of min.split(".")){const act=parts[i++];if(parseInt(req,10)<parseInt(act,10)){break;}
if(isOlderPart(act,req)){if(strict){throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);}else{return false;}}}
return true;}
const widthCache=new Map();function getBounds(rect,useFinalPosition){const{x,y,width,height}=rect.getProps(["x","y","width","height"],useFinalPosition);return{left:x,top:y,right:x+width,bottom:y+height};}
function limit(value,min,max){return Math.max(Math.min(value,max),min);}
function parseBorderWidth(value,maxW,maxH){const o=helpers.toTRBL(value);return{t:limit(o.top,0,maxH),r:limit(o.right,0,maxW),b:limit(o.bottom,0,maxH),l:limit(o.left,0,maxW),};}
function parseBorderRadius(value,maxW,maxH){const o=helpers.toTRBLCorners(value);const maxR=Math.min(maxW,maxH);return{topLeft:limit(o.topLeft,0,maxR),topRight:limit(o.topRight,0,maxR),bottomLeft:limit(o.bottomLeft,0,maxR),bottomRight:limit(o.bottomRight,0,maxR),};}
function boundingRects(rect){const bounds=getBounds(rect);const width=bounds.right-bounds.left;const height=bounds.bottom-bounds.top;const border=parseBorderWidth(rect.options.borderWidth,width/2,height/2);const radius=parseBorderRadius(rect.options.borderRadius,width/2,height/2);const outer={x:bounds.left,y:bounds.top,w:width,h:height,active:rect.active,radius,};return{outer,inner:{x:outer.x+border.l,y:outer.y+border.t,w:outer.w-border.l-border.r,h:outer.h-border.t-border.b,active:rect.active,radius:{topLeft:Math.max(0,radius.topLeft-Math.max(border.t,border.l)),topRight:Math.max(0,radius.topRight-Math.max(border.t,border.r)),bottomLeft:Math.max(0,radius.bottomLeft-Math.max(border.b,border.l)),bottomRight:Math.max(0,radius.bottomRight-Math.max(border.b,border.r)),},},};}
function inRange(rect,x,y,useFinalPosition){const skipX=x===null;const skipY=y===null;const bounds=!rect||(skipX&&skipY)?false:getBounds(rect,useFinalPosition);return(bounds&&(skipX||(x>=bounds.left&&x<=bounds.right))&&(skipY||(y>=bounds.top&&y<=bounds.bottom)));}
function hasRadius(radius){return radius.topLeft||radius.topRight||radius.bottomLeft||radius.bottomRight;}
function addNormalRectPath(ctx,rect){ctx.rect(rect.x,rect.y,rect.w,rect.h);}
function shouldDrawCaption(displayMode,rect,options){if(!options||options.display===false){return false;}
if(displayMode==="headerBoxes"){return true;}
const{w,h}=rect;const font=helpers.toFont(options.font);const min=font.lineHeight;const padding=limit(helpers.valueOrDefault(options.padding,3)*2,0,Math.min(w,h));return w-padding>min&&h-padding>min;}
function getCaptionHeight(displayMode,rect,font,padding){if(displayMode!=="headerBoxes"){return font.lineHeight+padding*2;}
const captionHeight=font.lineHeight+padding*2;return rect.h<2*captionHeight?rect.h/3:captionHeight;}
function drawText(ctx,rect,options,item){const{captions,labels,displayMode}=options;ctx.save();ctx.beginPath();ctx.rect(rect.x,rect.y,rect.w,rect.h);ctx.clip();const isLeaf=item&&(!helpers.defined(item.l)||item.isLeaf);if(isLeaf&&labels.display){drawLabel(ctx,rect,options);}else if(!isLeaf&&shouldDrawCaption(displayMode,rect,captions)){drawCaption(ctx,rect,options,item);}
ctx.restore();}
function drawCaption(ctx,rect,options,item){const{captions,spacing,rtl,displayMode}=options;const{color,hoverColor,font,hoverFont,padding,align,formatter}=captions;const oColor=(rect.active?hoverColor:color)||color;const oAlign=align||(rtl?"right":"left");const optFont=(rect.active?hoverFont:font)||font;const oFont=helpers.toFont(optFont);const fonts=[oFont];if(oFont.lineHeight>rect.h){return;}
let text=formatter||item.g;const captionSize=measureLabelSize(ctx,[formatter],fonts);if(captionSize.width+2*padding>rect.w){text=sliceTextToFitWidth(ctx,text,rect.w-2*padding,fonts);}
const lh=oFont.lineHeight/2;const x=calculateX(rect,oAlign,padding);ctx.fillStyle=oColor;ctx.font=oFont.string;ctx.textAlign=oAlign;ctx.textBaseline="middle";const y=displayMode==="headerBoxes"?rect.y+rect.h/2:rect.y+padding+spacing+lh;ctx.fillText(text,x,y);}
function sliceTextToFitWidth(ctx,text,width,fonts){const ellipsis="...";const ellipsisWidth=measureLabelSize(ctx,[ellipsis],fonts).width;if(ellipsisWidth>=width){return"";}
let lowerBoundLen=1;let upperBoundLen=text.length;let currentWidth;while(lowerBoundLen<=upperBoundLen){const currentLen=Math.floor((lowerBoundLen+upperBoundLen)/2);const currentText=text.slice(0,currentLen);currentWidth=measureLabelSize(ctx,[currentText],fonts).width;if(currentWidth+ellipsisWidth>width){upperBoundLen=currentLen-1;}else{lowerBoundLen=currentLen+1;}}
const slicedText=text.slice(0,Math.max(0,lowerBoundLen-1));return slicedText?slicedText+ellipsis:"";}
function measureLabelSize(ctx,lines,fonts){const fontsKey=fonts.reduce(function(prev,item){prev+=item.string;return prev;},"");const mapKey=lines.join()+fontsKey+(ctx._measureText?"-spriting":"");if(!widthCache.has(mapKey)){ctx.save();const count=lines.length;let width=0;let height=0;for(let i=0;i<count;i++){const font=fonts[Math.min(i,fonts.length-1)];ctx.font=font.string;const text=lines[i];width=Math.max(width,ctx.measureText(text).width);height+=font.lineHeight;}
ctx.restore();widthCache.set(mapKey,{width,height});}
return widthCache.get(mapKey);}
function toFonts(fonts,fitRatio){return fonts.map(function(f){f.size=Math.floor(f.size*fitRatio);f.lineHeight=undefined;return helpers.toFont(f);});}
function labelToDraw(ctx,rect,options,labelSize){const{overflow,padding}=options;const{width,height}=labelSize;if(overflow==="hidden"){return!(width+padding*2>rect.w||height+padding*2>rect.h);}else if(overflow==="fit"){const ratio=Math.min(rect.w/(width+padding*2),rect.h/(height+padding*2));if(ratio<1){return ratio;}}
return true;}
function getFontFromOptions(rect,labels){const{font,hoverFont}=labels;const optFont=(rect.active?hoverFont:font)||font;return helpers.isArray(optFont)?optFont.map((f)=>helpers.toFont(f)):[helpers.toFont(optFont)];}
function drawLabel(ctx,rect,options){const labels=options.labels;const content=labels.formatter;if(!content){return;}
const contents=helpers.isArray(content)?content:[content];let fonts=getFontFromOptions(rect,labels);let labelSize=measureLabelSize(ctx,contents,fonts);const lblToDraw=labelToDraw(ctx,rect,labels,labelSize);if(!lblToDraw){return;}
if(helpers.isNumber(lblToDraw)){labelSize={width:labelSize.width*lblToDraw,height:labelSize.height*lblToDraw};fonts=toFonts(fonts,lblToDraw);}
const{color,hoverColor,align}=labels;const optColor=(rect.active?hoverColor:color)||color;const colors=helpers.isArray(optColor)?optColor:[optColor];const xyPoint=calculateXYLabel(rect,labels,labelSize);ctx.textAlign=align;ctx.textBaseline="middle";let lhs=0;contents.forEach(function(l,i){const c=colors[Math.min(i,colors.length-1)];const f=fonts[Math.min(i,fonts.length-1)];const lh=f.lineHeight;ctx.font=f.string;ctx.fillStyle=c;ctx.fillText(l,xyPoint.x,xyPoint.y+lh/2+lhs);lhs+=lh;});}
function drawDivider(ctx,rect,options,item){const dividers=options.dividers;if(!dividers.display||!item._data.children.length){return;}
const{x,y,w,h}=rect;const{lineColor,lineCapStyle,lineDash,lineDashOffset,lineWidth}=dividers;ctx.save();ctx.strokeStyle=lineColor;ctx.lineCap=lineCapStyle;ctx.setLineDash(lineDash);ctx.lineDashOffset=lineDashOffset;ctx.lineWidth=lineWidth;ctx.beginPath();if(w>h){const w2=w/2;ctx.moveTo(x+w2,y);ctx.lineTo(x+w2,y+h);}else{const h2=h/2;ctx.moveTo(x,y+h2);ctx.lineTo(x+w,y+h2);}
ctx.stroke();ctx.restore();}
function calculateXYLabel(rect,options,labelSize){const{align,position,padding}=options;let x,y;x=calculateX(rect,align,padding);if(position==="top"){y=rect.y+padding;}else if(position==="bottom"){y=rect.y+rect.h-padding-labelSize.height;}else{y=rect.y+(rect.h-labelSize.height)/2+padding;}
return{x,y};}
function calculateX(rect,align,padding){if(align==="left"){return rect.x+padding;}else if(align==="right"){return rect.x+rect.w-padding;}
return rect.x+rect.w/2;}
class TreemapElement extends chart_js.Element{constructor(cfg){super();this.options=undefined;this.width=undefined;this.height=undefined;if(cfg){Object.assign(this,cfg);}}
draw(ctx,data){if(!data){return;}
const options=this.options;const{inner,outer}=boundingRects(this);const addRectPath=hasRadius(outer.radius)?helpers.addRoundedRectPath:addNormalRectPath;ctx.save();if(outer.w!==inner.w||outer.h!==inner.h){ctx.beginPath();addRectPath(ctx,outer);ctx.clip();addRectPath(ctx,inner);ctx.fillStyle=options.borderColor;ctx.fill("evenodd");}
ctx.beginPath();addRectPath(ctx,inner);ctx.fillStyle=options.backgroundColor;ctx.fill();drawDivider(ctx,inner,options,data);drawText(ctx,inner,options,data);ctx.restore();}
inRange(mouseX,mouseY,useFinalPosition){return inRange(this,mouseX,mouseY,useFinalPosition);}
inXRange(mouseX,useFinalPosition){return inRange(this,mouseX,null,useFinalPosition);}
inYRange(mouseY,useFinalPosition){return inRange(this,null,mouseY,useFinalPosition);}
getCenterPoint(useFinalPosition){const{x,y,width,height}=this.getProps(["x","y","width","height"],useFinalPosition);return{x:x+width/2,y:y+height/2,};}
tooltipPosition(){return this.getCenterPoint();}
getRange(axis){return axis==="x"?this.width/2:this.height/2;}}
TreemapElement.id="treemap";TreemapElement.defaults={borderRadius:0,borderWidth:0,captions:{align:undefined,color:"black",display:true,font:{},formatter:(ctx)=>ctx.raw.g||ctx.raw._data.label||"",padding:3,},dividers:{display:false,lineCapStyle:"butt",lineColor:"black",lineDash:[],lineDashOffset:0,lineWidth:1,},label:undefined,labels:{align:"center",color:"black",display:false,font:{},formatter(ctx){if(ctx.raw.g){return[ctx.raw.g,ctx.raw.v+""];}
return ctx.raw._data.label?[ctx.raw._data.label,ctx.raw.v+""]:ctx.raw.v+"";},overflow:"cut",position:"middle",padding:3,},rtl:false,spacing:0.5,unsorted:false,displayMode:"containerBoxes",};TreemapElement.descriptors={captions:{_fallback:true,},labels:{_fallback:true,},_scriptable:true,_indexable:false,};TreemapElement.defaultRoutes={backgroundColor:"backgroundColor",borderColor:"borderColor",};function getDims(itm,w2,s2,key){const a=itm._normalized;const ar=(w2*a)/s2;const d1=Math.sqrt(a*ar);const d2=a/d1;const w=key==="_ix"?d1:d2;const h=key==="_ix"?d2:d1;return{d1,d2,w,h};}
const getX=(rect,w)=>(rect.rtl?rect.x+rect.iw-w:rect.x+rect._ix);function buildRow(rect,itm,dims,sum){const r={x:getX(rect,dims.w),y:rect.y+rect._iy,w:dims.w,h:dims.h,a:itm._normalized,v:itm.value,vs:itm.values,s:sum,_data:itm._data,};if(itm.group){r.g=itm.group;r.l=itm.level;r.gs=itm.groupSum;}
return r;}
class Rect{constructor(r){r=r||{w:1,h:1};this.rtl=!!r.rtl;this.unsorted=!!r.unsorted;this.x=r.x||r.left||0;this.y=r.y||r.top||0;this._ix=0;this._iy=0;this.w=r.w||r.width||r.right-r.left;this.h=r.h||r.height||r.bottom-r.top;}
get area(){return this.w*this.h;}
get iw(){return this.w-this._ix;}
get ih(){return this.h-this._iy;}
get dir(){const ih=this.ih;return ih<=this.iw&&ih>0?"y":"x";}
get side(){return this.dir==="x"?this.iw:this.ih;}
map(arr){const{dir,side}=this;const key=dir==="x"?"_ix":"_iy";const sum=arr.nsum;const row=arr.get();const w2=side*side;const s2=sum*sum;const ret=[];let maxd2=0;let totd1=0;for(const itm of row){const dims=getDims(itm,w2,s2,key);totd1+=dims.d1;maxd2=Math.max(maxd2,dims.d2);ret.push(buildRow(this,itm,dims,arr.sum));this[key]+=dims.d1;}
this[dir==="x"?"_iy":"_ix"]+=maxd2;this[key]-=totd1;return ret;}}
const min=Math.min;const max=Math.max;function getStat(sa){return{min:sa.min,max:sa.max,sum:sa.sum,nmin:sa.nmin,nmax:sa.nmax,nsum:sa.nsum,};}
function getNewStat(sa,o){const v=+o[sa.key];const n=v*sa.ratio;o._normalized=n;return{min:min(sa.min,v),max:max(sa.max,v),sum:sa.sum+v,nmin:min(sa.nmin,n),nmax:max(sa.nmax,n),nsum:sa.nsum+n,};}
function setStat(sa,stat){Object.assign(sa,stat);}
function push(sa,o,stat){sa._arr.push(o);setStat(sa,stat);}
class StatArray{constructor(key,ratio){const me=this;me.key=key;me.ratio=ratio;me.reset();}
get length(){return this._arr.length;}
reset(){const me=this;me._arr=[];me._hist=[];me.sum=0;me.nsum=0;me.min=Infinity;me.max=-Infinity;me.nmin=Infinity;me.nmax=-Infinity;}
push(o){push(this,o,getNewStat(this,o));}
pushIf(o,fn,...args){const nstat=getNewStat(this,o);if(!fn(getStat(this),nstat,args)){return o;}
push(this,o,nstat);}
get(){return this._arr;}}
function compareAspectRatio(oldStat,newStat,args){if(oldStat.sum===0){return true;}
const[length]=args;const os2=oldStat.nsum*oldStat.nsum;const ns2=newStat.nsum*newStat.nsum;const l2=length*length;const or=Math.max((l2*oldStat.nmax)/os2,os2/(l2*oldStat.nmin));const nr=Math.max((l2*newStat.nmax)/ns2,ns2/(l2*newStat.nmin));return nr<=or;}
function squarify(values,rectangle,keys=[],grp,lvl,gsum){values=values||[];const rows=[];const rect=new Rect(rectangle);const row=new StatArray("value",rect.area/sum(values,keys[0]));let length=rect.side;const n=values.length;let i,o;if(!n){return rows;}
const tmp=values.slice();let key=index(tmp,keys[0]);if(!rectangle?.unsorted){sort(tmp,key);}
const val=(idx)=>(key?+tmp[idx][key]:+tmp[idx]);const gval=(idx)=>grp&&tmp[idx][grp];for(i=0;i<n;++i){o={value:val(i),groupSum:gsum,_data:values[tmp[i]._idx],level:undefined,group:undefined,};if(grp){o.level=lvl;o.group=gval(i);const tmpRef=tmp[i];o.values=keys.reduce(function(obj,k){obj[k]=+tmpRef[k];return obj;},{});}
o=row.pushIf(o,compareAspectRatio,length);if(o){rows.push(rect.map(row));length=rect.side;row.reset();row.push(o);}}
if(row.length){rows.push(rect.map(row));}
return flatten(rows);}
var version="3.1.0";function scaleRect(sq,xScale,yScale,sp){const sp2=sp*2;const x=xScale.getPixelForValue(sq.x);const y=yScale.getPixelForValue(sq.y);const w=xScale.getPixelForValue(sq.x+sq.w)-x;const h=yScale.getPixelForValue(sq.y+sq.h)-y;return{x:x+sp,y:y+sp,width:w-sp2,height:h-sp2,hidden:sp2>w||sp2>h,};}
function rectNotEqual(r1,r2){return(!r1||!r2||r1.x!==r2.x||r1.y!==r2.y||r1.w!==r2.w||r1.h!==r2.h||r1.rtl!==r2.rtl||r1.unsorted!==r2.unsorted);}
function arrayNotEqual(a,b){let i,n;if(!a||!b){return true;}
if(a===b){return false;}
if(a.length!==b.length){return true;}
for(i=0,n=a.length;i<n;++i){if(a[i]!==b[i]){return true;}}
return false;}
function buildData(tree,dataset,keys,mainRect){const treeLeafKey=dataset.treeLeafKey||"_leaf";if(helpers.isObject(tree)){tree=normalizeTreeToArray(keys,treeLeafKey,tree);}
const groups=dataset.groups||[];const glen=groups.length;const sp=dataset.displayMode==="headerBoxes"?0:helpers.valueOrDefault(dataset.spacing,0);const captions=dataset.captions||{};const font=helpers.toFont(captions.font);const padding=helpers.valueOrDefault(captions.padding,3);function recur(treeElements,gidx,rect,parent,gs){const g=getGroupKey(groups[gidx]);const pg=gidx>0&&getGroupKey(groups[gidx-1]);const gdata=group(treeElements,g,keys,treeLeafKey,pg,parent,groups.filter((item,index)=>index<=gidx));const gsq=squarify(gdata,rect,keys,g,gidx,gs);const ret=gsq.slice();if(gidx<glen-1){gsq.forEach((sq)=>{const bw=dataset.displayMode==="headerBoxes"?{l:0,r:0,t:0,b:0}:parseBorderWidth(dataset.borderWidth,sq.w/2,sq.h/2);const subRect={...rect,x:sq.x+sp+bw.l,y:sq.y+sp+bw.t,w:sq.w-2*sp-bw.l-bw.r,h:sq.h-2*sp-bw.t-bw.b,};if(shouldDrawCaption(dataset.displayMode,subRect,captions)){const captionHeight=getCaptionHeight(dataset.displayMode,subRect,font,padding);subRect.y+=captionHeight;subRect.h-=captionHeight;}
const children=[];gdata.forEach((gEl)=>{children.push(...recur(gEl.children,gidx+1,subRect,sq.g,sq.s));});ret.push(...children);sq.isLeaf=!children.length;});}else{gsq.forEach((sq)=>{sq.isLeaf=true;});}
return ret;}
const result=glen?recur(tree,0,mainRect):squarify(tree,mainRect,keys);return result.map((d)=>{if(dataset.displayMode!=="headerBoxes"||d.isLeaf){return d;}
if(!shouldDrawCaption(dataset.displayMode,d,captions)){return undefined;}
const captionHeight=getCaptionHeight(dataset.displayMode,d,font,padding);return{...d,h:captionHeight};}).filter((d)=>d);}
class TreemapController extends chart_js.DatasetController{constructor(chart,datasetIndex){super(chart,datasetIndex);this._groups=undefined;this._keys=undefined;this._rect=undefined;this._rectChanged=true;}
initialize(){this.enableOptionSharing=true;super.initialize();}
getMinMax(scale){return{min:0,max:scale.axis==="x"?scale.right-scale.left:scale.bottom-scale.top,};}
configure(){super.configure();const{xScale,yScale}=this.getMeta();if(!xScale||!yScale){return;}
const w=xScale.right-xScale.left;const h=yScale.bottom-yScale.top;const rect={x:0,y:0,w,h,rtl:!!this.options.rtl,unsorted:!!this.options.unsorted};if(rectNotEqual(this._rect,rect)){this._rect=rect;this._rectChanged=true;}
if(this._rectChanged){xScale.max=w;xScale.configure();yScale.max=h;yScale.configure();}}
update(mode){const dataset=this.getDataset();const{data}=this.getMeta();const groups=dataset.groups||[];const keys=[dataset.key||""].concat(dataset.sumKeys||[]);const tree=(dataset.tree=dataset.tree||dataset.data||[]);if(mode==="reset"){this.configure();}
if(this._rectChanged||arrayNotEqual(this._keys,keys)||arrayNotEqual(this._groups,groups)||this._prevTree!==tree){this._groups=groups.slice();this._keys=keys.slice();this._prevTree=tree;this._rectChanged=false;dataset.data=buildData(tree,dataset,this._keys,this._rect);this._dataCheck();this._resyncElements();}
this.updateElements(data,0,data.length,mode);}
updateElements(rects,start,count,mode){const reset=mode==="reset";const dataset=this.getDataset();const firstOpts=(this._rect.options=this.resolveDataElementOptions(start,mode));const sharedOptions=this.getSharedOptions(firstOpts);const includeOptions=this.includeOptions(mode,sharedOptions);const{xScale,yScale}=this.getMeta(this.index);for(let i=start;i<start+count;i++){const options=sharedOptions||this.resolveDataElementOptions(i,mode);const properties=scaleRect(dataset.data[i],xScale,yScale,options.spacing);if(reset){properties.width=0;properties.height=0;}
if(includeOptions){properties.options=options;}
this.updateElement(rects[i],i,properties,mode);}
this.updateSharedOptions(sharedOptions,mode,firstOpts);}
draw(){const{ctx,chartArea}=this.chart;const metadata=this.getMeta().data||[];const dataset=this.getDataset();const data=dataset.data;helpers.clipArea(ctx,chartArea);for(let i=0,ilen=metadata.length;i<ilen;++i){const rect=metadata[i];if(!rect.hidden){rect.draw(ctx,data[i]);}}
helpers.unclipArea(ctx);}}
TreemapController.id="treemap";TreemapController.version=version;TreemapController.defaults={dataElementType:"treemap",animations:{numbers:{type:"number",properties:["x","y","width","height"],},},};TreemapController.descriptors={_scriptable:true,_indexable:false,};TreemapController.overrides={interaction:{mode:"point",includeInvisible:true,intersect:true,},hover:{},plugins:{tooltip:{position:"treemap",intersect:true,callbacks:{title(items){if(items.length){const item=items[0];return item.dataset.key||"";}
return"";},label(item){const dataset=item.dataset;const dataItem=dataset.data[item.dataIndex];const label=dataItem.g||dataItem._data.label||dataset.label;return(label?label+": ":"")+dataItem.v;},},},},scales:{x:{type:"linear",alignToPixels:true,bounds:"data",display:false,},y:{type:"linear",alignToPixels:true,bounds:"data",display:false,reverse:true,},},};TreemapController.beforeRegister=function(){requireVersion("chart.js","3.8",chart_js.Chart.version);};TreemapController.afterRegister=function(){const tooltipPlugin=chart_js.registry.plugins.get("tooltip");if(tooltipPlugin){tooltipPlugin.positioners.treemap=function(active){if(!active.length){return false;}
const item=active[active.length-1];const el=item.element;return el.tooltipPosition();};}else{console.warn("Unable to register the treemap positioner because tooltip plugin is not registered");}};TreemapController.afterUnregister=function(){const tooltipPlugin=chart_js.registry.plugins.get("tooltip");if(tooltipPlugin){delete tooltipPlugin.positioners.treemap;}};chart_js.Chart.register(TreemapController,TreemapElement);exports.flatten=flatten;exports.getGroupKey=getGroupKey;exports.group=group;exports.index=index;exports.normalizeTreeToArray=normalizeTreeToArray;exports.requireVersion=requireVersion;exports.sort=sort;exports.sum=sum;});;

/* /spreadsheet/static/src/o_spreadsheet/o_spreadsheet.js */
odoo.define('@spreadsheet/o_spreadsheet/o_spreadsheet',['@odoo/owl'],function(require){'use strict';let __exports={};const{useEnv,useSubEnv,onWillUnmount,useComponent,status,Component,useRef,onMounted,useEffect,App,blockDom,useState,onPatched,useExternalListener,onWillUpdateProps,onWillStart,onWillPatch,xml,useChildSubEnv,markRaw,toRaw}=require('@odoo/owl');function createActions(menuItems){return menuItems.map(createAction).sort((a,b)=>a.sequence-b.sequence);}
let nextItemId=1;function createAction(item){const name=item.name;const children=item.children;const description=item.description;const icon=item.icon;const secondaryIcon=item.secondaryIcon;const itemId=item.id||nextItemId++;const isEnabled=item.isEnabled?item.isEnabled:()=>true;return{id:itemId.toString(),name:typeof name==="function"?name:()=>name,isVisible:item.isVisible?item.isVisible:()=>true,isEnabled:isEnabled,isActive:item.isActive,execute:item.execute?(env,isMiddleClick)=>{if(isEnabled(env)){return item.execute(env,isMiddleClick);}
return undefined;}:undefined,children:children?(env)=>{return children.map((child)=>(typeof child==="function"?child(env):child)).flat().map(createAction);}:()=>[],isReadonlyAllowed:item.isReadonlyAllowed||false,separator:item.separator||false,icon:typeof icon==="function"?icon:()=>icon||"",iconColor:item.iconColor,secondaryIcon:typeof secondaryIcon==="function"?secondaryIcon:()=>secondaryIcon||"",description:typeof description==="function"?description:()=>description||"",textColor:item.textColor,sequence:item.sequence||0,onStartHover:item.onStartHover,onStopHover:item.onStopHover,};}
class Registry{content={};add(key,value){if(key in this.content){throw new Error(`${key} is already present in this registry!`);}
return this.replace(key,value);}
replace(key,value){this.content[key]=value;return this;}
get(key){const content=this.content[key];if(!content){if(!(key in this.content)){throw new Error(`Cannot find ${key} in this registry!`);}}
return content;}
contains(key){return key in this.content;}
getAll(){return Object.values(this.content);}
getKeys(){return Object.keys(this.content);}
remove(key){delete this.content[key];}}
const CANVAS_SHIFT=0.5;const HIGHLIGHT_COLOR="#017E84";const BACKGROUND_GRAY_COLOR="#f5f5f5";const BACKGROUND_HEADER_COLOR="#F8F9FA";const BACKGROUND_HEADER_SELECTED_COLOR="#E8EAED";const BACKGROUND_HEADER_ACTIVE_COLOR="#595959";const TEXT_HEADER_COLOR="#666666";const FIGURE_BORDER_COLOR="#c9ccd2";const SELECTION_BORDER_COLOR="#3266ca";const HEADER_BORDER_COLOR="#C0C0C0";const CELL_BORDER_COLOR="#E2E3E3";const BACKGROUND_CHART_COLOR="#FFFFFF";const DISABLED_TEXT_COLOR="#CACACA";const DEFAULT_COLOR_SCALE_MIDPOINT_COLOR=0xb6d7a8;const LINK_COLOR=HIGHLIGHT_COLOR;const FILTERS_COLOR="#188038";const SEPARATOR_COLOR="#E0E2E4";const ICONS_COLOR="#4A4F59";const HEADER_GROUPING_BACKGROUND_COLOR="#F5F5F5";const HEADER_GROUPING_BORDER_COLOR="#999";const GRID_BORDER_COLOR="#E2E3E3";const FROZEN_PANE_HEADER_BORDER_COLOR="#BCBCBC";const FROZEN_PANE_BORDER_COLOR="#DADFE8";const COMPOSER_ASSISTANT_COLOR="#9B359B";const COLOR_TRANSPARENT="#00000000";const TABLE_HOVER_BACKGROUND_COLOR="#017E8414";const CHART_WATERFALL_POSITIVE_COLOR="#4EA7F2";const CHART_WATERFALL_NEGATIVE_COLOR="#EA6175";const CHART_WATERFALL_SUBTOTAL_COLOR="#AAAAAA";const GRAY_900="#111827";const GRAY_300="#D8DADD";const GRAY_200="#E7E9ED";const GRAY_100="#F9FAFB";const TEXT_BODY="#374151";const TEXT_BODY_MUTED=TEXT_BODY+"C2";const TEXT_HEADING="#111827";const PRIMARY_BUTTON_BG="#714B67";const PRIMARY_BUTTON_HOVER_BG="#624159";const PRIMARY_BUTTON_ACTIVE_BG="#f1edf0";const BUTTON_BG=GRAY_200;const BUTTON_HOVER_BG=GRAY_300;const BUTTON_HOVER_TEXT_COLOR="#111827";const BUTTON_ACTIVE_BG="#e6f2f3";const BUTTON_ACTIVE_TEXT_COLOR="#111827";const ACTION_COLOR=HIGHLIGHT_COLOR;const ACTION_COLOR_HOVER="#01585c";const ALERT_WARNING_BG="#FBEBCC";const ALERT_WARNING_BORDER="#F8E2B3";const ALERT_WARNING_TEXT_COLOR="#946D23";const ALERT_DANGER_BG="#D44C591A";const ALERT_DANGER_BORDER="#C34A41";const ALERT_DANGER_TEXT_COLOR="#C34A41";const ALERT_INFO_BG="#CDEDF1";const ALERT_INFO_BORDER="#98DBE2";const ALERT_INFO_TEXT_COLOR="#09414A";const BADGE_SELECTED_COLOR="#E6F2F3";const CHART_PADDING=20;const CHART_PADDING_BOTTOM=10;const CHART_PADDING_TOP=15;const CHART_TITLE_FONT_SIZE=16;const CHART_AXIS_TITLE_FONT_SIZE=12;const SCORECARD_CHART_TITLE_FONT_SIZE=14;const PIVOT_TOKEN_COLOR="#F28C28";const COLOR_PICKER_DEFAULTS=["#000000","#434343","#666666","#999999","#B7B7B7","#CCCCCC","#D9D9D9","#EFEFEF","#F3F3F3","#FFFFFF","#980000","#FF0000","#FF9900","#FFFF00","#00FF00","#00FFFF","#4A86E8","#0000FF","#9900FF","#FF00FF","#E6B8AF","#F4CCCC","#FCE5CD","#FFF2CC","#D9EAD3","#D0E0E3","#C9DAF8","#CFE2F3","#D9D2E9","#EAD1DC","#DD7E6B","#EA9999","#F9CB9C","#FFE599","#B6D7A8","#A2C4C9","#A4C2F4","#9FC5E8","#B4A7D6","#D5A6BD","#CC4125","#E06666","#F6B26B","#FFD966","#93C47D","#76A5AF","#6D9EEB","#6FA8DC","#8E7CC3","#C27BA0","#A61C00","#CC0000","#E69138","#F1C232","#6AA84F","#45818E","#3C78D8","#3D85C6","#674EA7","#A64D79","#85200C","#990000","#B45F06","#BF9000","#38761D","#134F5C","#1155CC","#0B5394","#351C75","#741B47","#5B0F00","#660000","#783F04","#7F6000","#274E13","#0C343D","#1C4587","#073763","#20124D","#4C1130",];const MIN_ROW_HEIGHT=10;const MIN_COL_WIDTH=5;const HEADER_HEIGHT=26;const HEADER_WIDTH=48;const DESKTOP_TOPBAR_TOOLBAR_HEIGHT=34;const MOBILE_TOPBAR_TOOLBAR_HEIGHT=44;const DESKTOP_BOTTOMBAR_HEIGHT=36;const MOBILE_BOTTOMBAR_HEIGHT=44;const DEFAULT_CELL_WIDTH=96;const DEFAULT_CELL_HEIGHT=23;const SCROLLBAR_WIDTH=15;const AUTOFILL_EDGE_LENGTH=8;const ICON_EDGE_LENGTH=18;const MIN_CF_ICON_MARGIN=4;const MIN_CELL_TEXT_MARGIN=4;const CF_ICON_EDGE_LENGTH=15;const PADDING_AUTORESIZE_VERTICAL=3;const PADDING_AUTORESIZE_HORIZONTAL=MIN_CELL_TEXT_MARGIN;const GROUP_LAYER_WIDTH=21;const GRID_ICON_MARGIN=2;const GRID_ICON_EDGE_LENGTH=17;const FOOTER_HEIGHT=2*DEFAULT_CELL_HEIGHT;const DATA_VALIDATION_CHIP_MARGIN=5;const MOBILE_WIDTH_BREAKPOINT=768;const MENU_WIDTH=250;const MENU_VERTICAL_PADDING=6;const DESKTOP_MENU_ITEM_HEIGHT=26;const MOBILE_MENU_ITEM_HEIGHT=35;const MENU_ITEM_PADDING_HORIZONTAL=11;const MENU_ITEM_PADDING_VERTICAL=4;const MENU_SEPARATOR_BORDER_WIDTH=1;const MENU_SEPARATOR_PADDING=5;const DEFAULT_STYLE={align:"left",verticalAlign:"bottom",wrapping:"overflow",bold:false,italic:false,strikethrough:false,underline:false,fontSize:10,fillColor:"",textColor:"",};const DEFAULT_VERTICAL_ALIGN=DEFAULT_STYLE.verticalAlign;const DEFAULT_WRAPPING_MODE=DEFAULT_STYLE.wrapping;const DEFAULT_FONT_WEIGHT="400";const DEFAULT_FONT_SIZE=DEFAULT_STYLE.fontSize;const HEADER_FONT_SIZE=11;const DEFAULT_FONT="'Roboto', arial";const DEFAULT_BORDER_DESC={style:"thin",color:"#000000"};const MAX_HISTORY_STEPS=99;const DEFAULT_REVISION_ID="START_REVISION";const DEFAULT_FIGURE_HEIGHT=335;const DEFAULT_FIGURE_WIDTH=536;const FIGURE_BORDER_WIDTH=1;const MIN_FIG_SIZE=80;const MAX_CHAR_LABEL=20;const FIGURE_ID_SPLITTER="??";const DEFAULT_GAUGE_LOWER_COLOR="#EA6175";const DEFAULT_GAUGE_MIDDLE_COLOR="#FFD86D";const DEFAULT_GAUGE_UPPER_COLOR="#43C5B1";const DEFAULT_SCORECARD_BASELINE_MODE="difference";const DEFAULT_SCORECARD_BASELINE_COLOR_UP="#43C5B1";const DEFAULT_SCORECARD_BASELINE_COLOR_DOWN="#EA6175";const DEFAULT_SCORECARD_KEY_VALUE_FONT_SIZE=32;const DEFAULT_SCORECARD_BASELINE_FONT_SIZE=16;const LINE_FILL_TRANSPARENCY=0.4;const LINE_DATA_POINT_RADIUS=3;const DEFAULT_WINDOW_SIZE=2;const DEBOUNCE_TIME=200;const MESSAGE_VERSION=1;const FORBIDDEN_SHEETNAME_CHARS=["'","*","?","/","\\","[","]"];const FORBIDDEN_SHEETNAME_CHARS_IN_EXCEL_REGEX=/'|\*|\?|\/|\\|\[|\]/;const FORMULA_REF_IDENTIFIER="|";var ComponentsImportance;(function(ComponentsImportance){ComponentsImportance[ComponentsImportance["Grid"]=0]="Grid";ComponentsImportance[ComponentsImportance["Highlight"]=5]="Highlight";ComponentsImportance[ComponentsImportance["HeaderGroupingButton"]=6]="HeaderGroupingButton";ComponentsImportance[ComponentsImportance["Figure"]=10]="Figure";ComponentsImportance[ComponentsImportance["ScrollBar"]=15]="ScrollBar";ComponentsImportance[ComponentsImportance["GridPopover"]=19]="GridPopover";ComponentsImportance[ComponentsImportance["GridComposer"]=20]="GridComposer";ComponentsImportance[ComponentsImportance["IconPicker"]=25]="IconPicker";ComponentsImportance[ComponentsImportance["TopBarComposer"]=30]="TopBarComposer";ComponentsImportance[ComponentsImportance["Popover"]=35]="Popover";ComponentsImportance[ComponentsImportance["FigureAnchor"]=1000]="FigureAnchor";ComponentsImportance[ComponentsImportance["FigureSnapLine"]=1001]="FigureSnapLine";ComponentsImportance[ComponentsImportance["FigureTooltip"]=1002]="FigureTooltip";})(ComponentsImportance||(ComponentsImportance={}));let DEFAULT_SHEETVIEW_SIZE=0;function getDefaultSheetViewSize(){return DEFAULT_SHEETVIEW_SIZE;}
function setDefaultSheetViewSize(size){DEFAULT_SHEETVIEW_SIZE=size;}
const MAXIMAL_FREEZABLE_RATIO=0.85;const NEWLINE="\n";const FONT_SIZES=[6,7,8,9,10,11,12,14,18,24,36];const PIVOT_TABLE_CONFIG={hasFilters:false,totalRow:false,firstColumn:true,lastColumn:false,numberOfHeaders:1,bandedRows:true,bandedColumns:false,styleId:"TableStyleMedium5",automaticAutofill:false,};const PIVOT_INDENT=15;const PIVOT_COLLAPSE_ICON_SIZE=12;const DEFAULT_CURRENCY={symbol:"$",position:"before",decimalPlaces:2,code:"",name:"Dollar",};const sanitizeSheetNameRegex=new RegExp(FORBIDDEN_SHEETNAME_CHARS_IN_EXCEL_REGEX,"g");function removeStringQuotes(str){if(str[0]==='"'){str=str.slice(1);}
if(str[str.length-1]==='"'&&str[str.length-2]!=="\\"){return str.slice(0,str.length-1);}
return str;}
function isCloneable(obj){return"clone"in obj&&obj.clone instanceof Function;}
function escapeRegExp(str){return str.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");}
function deepCopy(obj){switch(typeof obj){case"object":{if(obj===null){return obj;}
else if(isCloneable(obj)){return obj.clone();}
else if(!(isPlainObject(obj)||obj instanceof Array)){throw new Error("Unsupported type: only objects and arrays are supported");}
const result=Array.isArray(obj)?new Array(obj.length):{};if(Array.isArray(obj)){for(let i=0,len=obj.length;i<len;i++){if(i in obj){result[i]=deepCopy(obj[i]);}}}
else{for(const key in obj){result[key]=deepCopy(obj[key]);}}
return result;}
case"number":case"string":case"boolean":case"function":case"undefined":return obj;default:throw new Error(`Unsupported type: ${typeof obj}`);}}
function isPlainObject(obj){return(typeof obj==="object"&&obj!==null&&(obj?.constructor===Object||obj?.constructor===undefined));}
function getUnquotedSheetName(sheetName){return unquote(sheetName,"'");}
function unquote(string,quoteChar='"'){if(string.startsWith(quoteChar)){string=string.slice(1);}
if(string.endsWith(quoteChar)){string=string.slice(0,-1);}
return string;}
function getCanonicalSymbolName(symbolName){if(symbolName.match(/\w/g)?.length!==symbolName.length){symbolName=`'${symbolName}'`;}
return symbolName;}
function sanitizeSheetName(sheetName,replacementChar=" "){return sheetName.replace(sanitizeSheetNameRegex,replacementChar);}
function clip(val,min,max){return val<min?min:val>max?max:val;}
function range(start,end,step=1){if(end<=start&&step>0){return[];}
if(step===0){throw new Error("range() step must not be zero");}
const length=Math.ceil(Math.abs((end-start)/step));const array=Array(length);for(let i=0;i<length;i++){array[i]=start+i*step;}
return array;}
function groupConsecutive(numbers){return numbers.reduce((groups,currentRow,index,rows)=>{if(Math.abs(currentRow-rows[index-1])===1){const lastGroup=groups[groups.length-1];lastGroup.push(currentRow);}
else{groups.push([currentRow]);}
return groups;},[]);}
function*linkNext(generator,nextGenerator){nextGenerator.next();for(const item of generator){const nextItem=nextGenerator.next();yield{...item,next:nextItem.done?undefined:nextItem.value,};}}
function isBoolean(str){const upperCased=str.toUpperCase();return upperCased==="TRUE"||upperCased==="FALSE";}
const MARKDOWN_LINK_REGEX=/^\[(.+)\]\((.+)\)$/;const WEB_LINK_REGEX=/^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)$/;function isMarkdownLink(str){return MARKDOWN_LINK_REGEX.test(str);}
function isWebLink(str){return WEB_LINK_REGEX.test(str);}
function markdownLink(label,url){return`[${label}](${url})`;}
function parseMarkdownLink(str){const matches=str.match(MARKDOWN_LINK_REGEX)||[];const label=matches[1];const url=matches[2];if(!label||!url){throw new Error(`Could not parse markdown link ${str}.`);}
return{label,url,};}
const O_SPREADSHEET_LINK_PREFIX="o-spreadsheet://";function isSheetUrl(url){return url.startsWith(O_SPREADSHEET_LINK_PREFIX);}
function buildSheetLink(sheetId){return`${O_SPREADSHEET_LINK_PREFIX}${sheetId}`;}
function parseSheetUrl(sheetLink){if(sheetLink.startsWith(O_SPREADSHEET_LINK_PREFIX)){return sheetLink.slice(O_SPREADSHEET_LINK_PREFIX.length);}
throw new Error(`${sheetLink} is not a valid sheet link`);}
function isDefined(argument){return argument!==undefined;}
function isObjectEmptyRecursive(argument){if(argument===undefined)
return true;return Object.values(argument).every((value)=>typeof value==="object"?isObjectEmptyRecursive(value):!value);}
function debounce(func,wait,immediate){let timeout=undefined;const debounced=function(){const context=this;const args=Array.from(arguments);function later(){timeout=undefined;if(!immediate){func.apply(context,args);}}
const callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(later,wait);if(callNow){func.apply(context,args);}};debounced.isDebouncePending=()=>timeout!==undefined;debounced.stopDebounce=()=>{clearTimeout(timeout);};return debounced;}
function batched(callback){let scheduled=false;return async(...args)=>{if(!scheduled){scheduled=true;await Promise.resolve();scheduled=false;callback(...args);}};}
function concat(chars){let output="";for(let i=0,len=chars.length;i<len;i++){output+=chars[i];}
return output;}
function lazy(fn){let isMemoized=false;let memo;const lazyValue=()=>{if(!isMemoized){memo=fn instanceof Function?fn():fn;isMemoized=true;}
return memo;};lazyValue.map=(callback)=>lazy(()=>callback(lazyValue()));return lazyValue;}
function findNextDefinedValue(arr,index){let value=arr.slice(index).find((val)=>val);if(!value){value=arr.slice(0,index).reverse().find((val)=>val);}
return value||"";}
function getAddHeaderStartIndex(position,base){return position==="after"?base+1:base;}
function deepEquals(o1,o2){if(o1===o2)
return true;if((o1&&!o2)||(o2&&!o1))
return false;if(typeof o1!==typeof o2)
return false;if(typeof o1!=="object")
return false;for(const key in o2){if(!(key in o1)&&o2[key]!==undefined){return false;}}
for(const key in o1){if(typeof o1[key]!==typeof o2[key])
return false;if(typeof o1[key]==="object"){if(!deepEquals(o1[key],o2[key]))
return false;}
else{if(o1[key]!==o2[key])
return false;}}
return true;}
function deepEqualsArray(arr1,arr2){if(arr1.length!==arr2.length){return false;}
for(let i=0;i<arr1.length;i++){if(!deepEquals(arr1[i],arr2[i])){return false;}}
return true;}
function includesAll(arr,values){if(arr.length<values.length){return false;}
const set=new Set(arr);return values.every((value)=>set.has(value));}
function removeFalsyAttributes(obj){if(!obj)
return obj;const cleanObject={...obj};Object.keys(cleanObject).forEach((key)=>!cleanObject[key]&&delete cleanObject[key]);return cleanObject;}
const specialWhiteSpaceSpecialCharacters=["\t","\f","\v",String.fromCharCode(parseInt("00a0",16)),String.fromCharCode(parseInt("1680",16)),String.fromCharCode(parseInt("2000",16)),String.fromCharCode(parseInt("200a",16)),String.fromCharCode(parseInt("2028",16)),String.fromCharCode(parseInt("2029",16)),String.fromCharCode(parseInt("202f",16)),String.fromCharCode(parseInt("205f",16)),String.fromCharCode(parseInt("3000",16)),String.fromCharCode(parseInt("feff",16)),];const specialWhiteSpaceRegexp=new RegExp(specialWhiteSpaceSpecialCharacters.join("|"),"g");const newLineRegexp=/(\r\n|\r)/g;const whiteSpaceCharacters=specialWhiteSpaceSpecialCharacters.concat([" "]);function replaceNewLines(text){if(!text)
return"";return text.replace(newLineRegexp,NEWLINE);}
function isConsecutive(iterable){const array=Array.from(iterable).sort((a,b)=>a-b);for(let i=1;i<array.length;i++){if(array[i]-array[i-1]!==1){return false;}}
return true;}
function memoize(func){const cache=new Map();const funcName=func.name?func.name+" (memoized)":"memoized";return{[funcName](...args){if(!cache.has(args[0])){cache.set(args[0],func(...args));}
return cache.get(args[0]);},}[funcName];}
function removeIndexesFromArray(array,indexes){return array.filter((_,index)=>!indexes.includes(index));}
function insertItemsAtIndex(array,items,index){const newArray=[...array];newArray.splice(index,0,...items);return newArray;}
function replaceItemAtIndex(array,newItem,index){const newArray=[...array];newArray[index]=newItem;return newArray;}
function trimContent(content){const contentLines=content.split("\n");return contentLines.map((line)=>line.replace(/\s+/g," ").trim()).join("\n");}
function isNumberBetween(value,min,max){if(min>max){return isNumberBetween(value,max,min);}
return value>=min&&value<=max;}
function getSearchRegex(searchStr,searchOptions){let searchValue=escapeRegExp(searchStr);const flags=!searchOptions.matchCase?"i":"";if(searchOptions.exactMatch){searchValue=`^${searchValue}$`;}
return RegExp(searchValue,flags);}
function largeMax(array){let len=array.length;if(len<100_000)
return Math.max(...array);let max=-Infinity;while(len--){max=array[len]>max?array[len]:max;}
return max;}
function largeMin(array){let len=array.length;if(len<100_000)
return Math.min(...array);let min=+Infinity;while(len--){min=array[len]<min?array[len]:min;}
return min;}
class TokenizingChars{text;currentIndex=0;current;constructor(text){this.text=text;this.current=text[0];}
shift(){const current=this.current;const next=this.text[++this.currentIndex];this.current=next;return current;}
advanceBy(length){this.currentIndex+=length;this.current=this.text[this.currentIndex];}
isOver(){return this.currentIndex>=this.text.length;}
remaining(){return this.text.substring(this.currentIndex);}
currentStartsWith(str){if(this.current!==str[0]){return false;}
for(let j=1;j<str.length;j++){if(this.text[this.currentIndex+j]!==str[j]){return false;}}
return true;}}
function removeDuplicates$1(array,cb=(a)=>a){const set=new Set();return array.filter((item)=>{const key=cb(item);if(set.has(key)){return false;}
set.add(key);return true;});}
function transpose2dPOJO(pojo){const result={};for(const key in pojo){for(const subKey in pojo[key]){if(!result[subKey]){result[subKey]={};}
result[subKey][key]=pojo[key][subKey];}}
return result;}
function getUniqueText(text,texts,options={}){const compute=options.compute??((text,i)=>`${text} (${i})`);const computeFirstOne=options.computeFirstOne??false;let i=options.start??1;let newText=computeFirstOne?compute(text,i):text;while(texts.includes(newText)){newText=compute(text,i++);}
return newText;}
function isFormula(content){return content.startsWith("=")||content.startsWith("+");}
const RBA_REGEX=/rgba?\(|\s+|\)/gi;const HEX_MATCH=/^#([A-F\d]{2}){3,4}$/;const colors=["#eb6d00","#0074d9","#ad8e00","#169ed4","#b10dc9","#00a82d","#00a3a3","#f012be","#3d9970","#111111","#62A300","#ff4136","#949494","#85144b","#001f3f",];function colorNumberString(color){return toHex(color.toString(16).padStart(6,"0"));}
function colorToNumber(color){if(typeof color==="number"){return color;}
return Number.parseInt(toHex(color).slice(1),16);}
function toHex(color){let hexColor=color;if(color.startsWith("rgb")){hexColor=rgbaStringToHex(color);}
else{hexColor=color.replace("#","").toUpperCase();if(hexColor.length===3||hexColor.length===4){hexColor=hexColor.split("").reduce((acc,h)=>acc+h+h,"");}
hexColor=`#${hexColor}`;}
if(!HEX_MATCH.test(hexColor)){throw new Error(`invalid color input: ${color}`);}
return hexColor;}
function isColorValid(color){try{toHex(color);return true;}
catch(error){return false;}}
function isHSLAValid(color){try{hslaToHex(color);return true;}
catch(error){return false;}}
const isColorValueValid=(v)=>v>=0&&v<=255;function rgba(r,g,b,a=1){const isInvalid=!isColorValueValid(r)||!isColorValueValid(g)||!isColorValueValid(b)||a<0||a>1;if(isInvalid){throw new Error(`Invalid RGBA values ${[r, g, b, a]}`);}
return{a,b,g,r};}
function relativeLuminance(color){let{r,g,b}=colorToRGBA(color);r/=255;g/=255;b/=255;const toLinearValue=(c)=>(c<=0.03928?c/12.92:((c+0.055)/1.055)**2.4);const R=toLinearValue(r);const G=toLinearValue(g);const B=toLinearValue(b);return 0.2126*R+0.7152*G+0.0722*B;}
function rgbaStringToHex(color){const stringVals=color.replace(RBA_REGEX,"").split(",");let alphaHex=255;if(stringVals.length!==3&&stringVals.length!==4){throw new Error("invalid color");}
else if(stringVals.length===4){const alpha=parseFloat(stringVals.pop()||"1");if(isNaN(alpha)){throw new Error("invalid alpha value");}
alphaHex=Math.round(alpha*255);}
const vals=stringVals.map((val)=>parseInt(val,10));if(alphaHex!==255){vals.push(alphaHex);}
return"#"+concat(vals.map((value)=>value.toString(16).padStart(2,"0"))).toUpperCase();}
function rgbaToHex(rgba){let r=rgba.r.toString(16);let g=rgba.g.toString(16);let b=rgba.b.toString(16);let a=Math.round(rgba.a*255).toString(16);if(r.length===1)
r="0"+r;if(g.length===1)
g="0"+g;if(b.length===1)
b="0"+b;if(a.length===1)
a="0"+a;if(a==="ff")
a="";return("#"+r+g+b+a).toUpperCase();}
function colorToRGBA(color){color=toHex(color);let r;let g;let b;let a;if(color.length===7){r=parseInt(color[1]+color[2],16);g=parseInt(color[3]+color[4],16);b=parseInt(color[5]+color[6],16);a=255;}
else if(color.length===9){r=parseInt(color[1]+color[2],16);g=parseInt(color[3]+color[4],16);b=parseInt(color[5]+color[6],16);a=parseInt(color[7]+color[8],16);}
else{throw new Error("Invalid color");}
a=+(a/255).toFixed(3);return{a,r,g,b};}
function hslaToRGBA(hsla){hsla={...hsla};hsla.s/=100;hsla.l/=100;const c=(1-Math.abs(2*hsla.l-1))*hsla.s;const x=c*(1-Math.abs(((hsla.h/60)%2)-1));const m=hsla.l-c/2;let r=0;let g=0;let b=0;if(0<=hsla.h&&hsla.h<60){r=c;g=x;b=0;}
else if(60<=hsla.h&&hsla.h<120){r=x;g=c;b=0;}
else if(120<=hsla.h&&hsla.h<180){r=0;g=c;b=x;}
else if(180<=hsla.h&&hsla.h<240){r=0;g=x;b=c;}
else if(240<=hsla.h&&hsla.h<300){r=x;g=0;b=c;}
else if(300<=hsla.h&&hsla.h<360){r=c;g=0;b=x;}
r=Math.round((r+m)*255);g=Math.round((g+m)*255);b=Math.round((b+m)*255);return{a:hsla.a,r,g,b};}
function rgbaToHSLA(rgba){const r=rgba.r/255;const g=rgba.g/255;const b=rgba.b/255;const cMin=Math.min(r,g,b);const cMax=Math.max(r,g,b);const delta=cMax-cMin;let h=0;let s=0;let l=0;if(delta===0)
h=0;else if(cMax===r)
h=((g-b)/delta)%6;else if(cMax===g)
h=(b-r)/delta+2;else
h=(r-g)/delta+4;h=Math.round(h*60);if(h<0)
h+=360;l=(cMax+cMin)/2;s=delta===0?0:delta/(1-Math.abs(2*l-1));s=+(s*100).toFixed(1);l=+(l*100).toFixed(1);return{a:rgba.a,h,s,l};}
function hslaToHex(hsla){return rgbaToHex(hslaToRGBA(hsla));}
function hexToHSLA(hex){return rgbaToHSLA(colorToRGBA(hex));}
function isSameColor(color1,color2,tolerance=0){if(!(isColorValid(color1)&&isColorValid(color2))){return false;}
const rgb1=colorToRGBA(color1);const rgb2=colorToRGBA(color2);if(rgb1.a!==rgb2.a){return false;}
const diff=Math.sqrt(((rgb1.r-rgb2.r)/255)**2+((rgb1.g-rgb2.g)/255)**2+((rgb1.b-rgb2.b)/255)**2);return diff<=tolerance;}
function setColorAlpha(color,alpha){return alpha===1?toHex(color).slice(0,7):rgbaToHex({...colorToRGBA(color),a:alpha});}
function lightenColor(color,percentage){const hsla=hexToHSLA(color);if(percentage===1){return"#fff";}
hsla.l=percentage*(100-hsla.l)+hsla.l;return hslaToHex(hsla);}
function darkenColor(color,percentage){const hsla=hexToHSLA(color);if(percentage===1){return"#000";}
hsla.s=Math.min(100,percentage*hsla.s+hsla.s);hsla.l=hsla.l-percentage*hsla.l;return hslaToHex(hsla);}
function chipTextColor(chipBackgroundColor){return relativeLuminance(chipBackgroundColor)<0.6?lightenColor(chipBackgroundColor,0.9):darkenColor(chipBackgroundColor,0.75);}
const COLORS_SM=["#4EA7F2","#EA6175","#43C5B1","#F4A261","#8481DD","#FFD86D",];const COLORS_MD=["#4EA7F2","#3188E6","#43C5B1","#00A78D","#EA6175","#CE4257","#F4A261","#F48935","#8481DD","#5752D1","#FFD86D","#FFBC2C",];const COLORS_LG=["#4EA7F2","#3188E6","#056BD9","#A76DBC","#7F4295","#6D2387","#EA6175","#CE4257","#982738","#43C5B1","#00A78D","#0E8270","#F4A261","#F48935","#BE5D10","#8481DD","#5752D1","#3A3580","#A4A8B6","#7E8290","#545B70","#FFD86D","#FFBC2C","#C08A16",];const COLORS_XL=["#4EA7F2","#3188E6","#056BD9","#155193","#A76DBC","#7F4295","#6D2387","#4F1565","#EA6175","#CE4257","#982738","#791B29","#43C5B1","#00A78D","#0E8270","#105F53","#F4A261","#F48935","#BE5D10","#7D380D","#8481DD","#5752D1","#3A3580","#26235F","#A4A8B6","#7E8290","#545B70","#3F4250","#FFD86D","#FFBC2C","#C08A16","#936A12",];const ALTERNATING_COLORS_MD=["#4EA7F2","#43C5B1","#EA6175","#F4A261","#8481DD","#FFD86D","#3188E6","#00A78D","#CE4257","#F48935","#5752D1","#FFBC2C",];const ALTERNATING_COLORS_LG=["#4EA7F2","#A76DBC","#EA6175","#43C5B1","#F4A261","#8481DD","#A4A8B6","#FFD86D","#3188E6","#7F4295","#CE4257","#00A78D","#F48935","#5752D1","#7E8290","#FFBC2C","#056BD9","#6D2387","#982738","#0E8270","#BE5D10","#3A3580","#545B70","#C08A16",];const ALTERNATING_COLORS_XL=["#4EA7F2","#A76DBC","#EA6175","#43C5B1","#F4A261","#8481DD","#A4A8B6","#FFD86D","#3188E6","#7F4295","#CE4257","#00A78D","#F48935","#5752D1","#7E8290","#FFBC2C","#056BD9","#6D2387","#982738","#0E8270","#BE5D10","#3A3580","#545B70","#C08A16","#155193","#4F1565","#791B29","#105F53","#7D380D","#26235F","#3F4250","#936A12",];function getNthColor(index,palette){return palette[index%palette.length];}
function getColorsPalette(quantity){if(quantity<=6){return COLORS_SM;}
else if(quantity<=12){return COLORS_MD;}
else if(quantity<=24){return COLORS_LG;}
else{return COLORS_XL;}}
function getAlternatingColorsPalette(quantity){if(quantity<=6){return COLORS_SM;}
else if(quantity<=12){return ALTERNATING_COLORS_MD;}
else if(quantity<=24){return ALTERNATING_COLORS_LG;}
else{return ALTERNATING_COLORS_XL;}}
class ColorGenerator{preferredColors;currentColorIndex=0;palette;constructor(paletteSize,preferredColors=[]){this.preferredColors=preferredColors;this.palette=getColorsPalette(paletteSize).filter((c)=>!preferredColors.includes(c));}
next(){return this.preferredColors?.[this.currentColorIndex]?this.preferredColors[this.currentColorIndex++]:getNthColor(this.currentColorIndex++,this.palette);}}
class AlternatingColorGenerator extends ColorGenerator{constructor(paletteSize,preferredColors=[]){super(paletteSize,preferredColors);this.palette=getAlternatingColorsPalette(paletteSize).filter((c)=>!preferredColors.includes(c));}}
class AlternatingColorMap{availableColors;colors={};constructor(paletteSize=12){this.availableColors=new AlternatingColorGenerator(paletteSize);}
get(id){if(!this.colors[id]){this.colors[id]=this.availableColors.next();}
return this.colors[id];}}
function getColorScale(colorScalePoints){if(colorScalePoints.length<2){throw new Error("Color scale must have at least 2 points");}
const sortedColorScalePoints=[...colorScalePoints.sort((a,b)=>a.value-b.value)];const thresholds=[];for(let i=1;i<sortedColorScalePoints.length;i++){const minColor=colorToNumber(sortedColorScalePoints[i-1].color);const maxColor=colorToNumber(sortedColorScalePoints[i].color);thresholds.push({min:sortedColorScalePoints[i-1].value,max:sortedColorScalePoints[i].value,minColor,maxColor,colorDiff:computeColorDiffUnits(sortedColorScalePoints[i-1].value,sortedColorScalePoints[i].value,minColor,maxColor),});}
return(value)=>{if(value<thresholds[0].min){return colorNumberString(thresholds[0].minColor);}
for(const threshold of thresholds){if(value>=threshold.min&&value<=threshold.max){return colorNumberString(colorCell(value,threshold.min,threshold.minColor,threshold.colorDiff));}}
return colorNumberString(thresholds[thresholds.length-1].maxColor);};}
function computeColorDiffUnits(minValue,maxValue,minColor,maxColor){const deltaValue=maxValue-minValue;const deltaColorR=((minColor>>16)%256)-((maxColor>>16)%256);const deltaColorG=((minColor>>8)%256)-((maxColor>>8)%256);const deltaColorB=(minColor%256)-(maxColor%256);const colorDiffUnitR=deltaColorR/deltaValue;const colorDiffUnitG=deltaColorG/deltaValue;const colorDiffUnitB=deltaColorB/deltaValue;return[colorDiffUnitR,colorDiffUnitG,colorDiffUnitB];}
function colorCell(value,minValue,minColor,colorDiffUnit){const[colorDiffUnitR,colorDiffUnitG,colorDiffUnitB]=colorDiffUnit;const r=Math.round(((minColor>>16)%256)-colorDiffUnitR*(value-minValue));const g=Math.round(((minColor>>8)%256)-colorDiffUnitG*(value-minValue));const b=Math.round((minColor%256)-colorDiffUnitB*(value-minValue));return(r<<16)|(g<<8)|b;}
function numberToLetters(n){if(n<0){throw new Error(`number must be positive. Got ${n}`);}
if(n<26){return String.fromCharCode(65+n);}
else{return numberToLetters(Math.floor(n/26)-1)+numberToLetters(n%26);}}
function lettersToNumber(letters){let result=0;const l=letters.length;for(let i=0;i<l;i++){const colIndex=charToNumber(letters[i]);result=result*26+colIndex;}
return result-1;}
function charToNumber(char){const charCode=char.charCodeAt(0);return charCode>=65&&charCode<=90?charCode-64:charCode-96;}
function isCharALetter(char){return(char>="A"&&char<="Z")||(char>="a"&&char<="z");}
function isCharADigit(char){return char>="0"&&char<="9";}
const MAX_COL=lettersToNumber("ZZZ");const MAX_ROW=9999998;function consumeSpaces(chars){while(chars.current===" "){chars.advanceBy(1);}}
function consumeLetters(chars){if(chars.current==="$")
chars.advanceBy(1);if(!chars.current||!isCharALetter(chars.current)){return-1;}
let colCoordinate=0;while(chars.current&&isCharALetter(chars.current)){colCoordinate=colCoordinate*26+charToNumber(chars.shift());}
return colCoordinate;}
function consumeDigits(chars){if(chars.current==="$")
chars.advanceBy(1);if(!chars.current||!isCharADigit(chars.current)){return-1;}
let num=0;while(chars.current&&isCharADigit(chars.current)){num=num*10+Number(chars.shift());}
return num;}
function toCartesian(xc){const chars=new TokenizingChars(xc);consumeSpaces(chars);const letterPart=consumeLetters(chars);if(letterPart===-1||!chars.current){throw new Error(`Invalid cell description: ${xc}`);}
const num=consumeDigits(chars);consumeSpaces(chars);const col=letterPart-1;const row=num-1;if(!chars.isOver()||col>MAX_COL||row>MAX_ROW){throw new Error(`Invalid cell description: ${xc}`);}
return{col,row};}
function toXC(col,row,rangePart={colFixed:false,rowFixed:false}){return((rangePart.colFixed?"$":"")+
numberToLetters(col)+
(rangePart.rowFixed?"$":"")+
String(row+1));}
const defaultTranslate=(s)=>s;const defaultLoaded=()=>false;let _translate=defaultTranslate;let _loaded=defaultLoaded;function sprintf(s,...values){if(values.length===1&&typeof values[0]==="object"&&!(values[0]instanceof String)){const valuesDict=values[0];s=s.replace(/\%\(([^\)]+)\)s/g,(match,value)=>valuesDict[value]);}
else if(values.length>0){s=s.replace(/\%s/g,()=>values.shift());}
return s;}
function setTranslationMethod(tfn,loaded=()=>true){_translate=tfn;_loaded=loaded;}
function setDefaultTranslationMethod(){if(_translate===defaultTranslate&&_loaded===defaultLoaded){_loaded=()=>true;}}
const _t=function(s,...values){if(!_loaded()){return new LazyTranslatedString(s,values);}
return sprintf(_translate(s),...values);};class LazyTranslatedString extends String{values;constructor(str,values){super(str);this.values=values;}
valueOf(){const str=super.valueOf();return _loaded()?sprintf(_translate(str),...this.values):sprintf(str,...this.values);}
toString(){return this.valueOf();}}
function withHttps(url){return!/^https?:\/\//i.test(url)?`https://${url}`:url;}
const urlRegistry=new Registry();function createWebLink(url,label){url=withHttps(url);return{url,label:label||url,isExternal:true,isUrlEditable:true,};}
urlRegistry.add("sheet_URL",{match:(url)=>isSheetUrl(url),createLink:(url,label)=>{return{label,url,isExternal:false,isUrlEditable:false,};},urlRepresentation(url,getters){const sheetId=parseSheetUrl(url);return getters.tryGetSheetName(sheetId)||_t("Invalid sheet");},open(url,env){const sheetId=parseSheetUrl(url);const result=env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:env.model.getters.getActiveSheetId(),sheetIdTo:sheetId,});if(result.isCancelledBecause("SheetIsHidden")){env.notifyUser({type:"warning",sticky:false,text:_t("Cannot open the link because the linked sheet is hidden."),});}},sequence:0,});const WebUrlSpec={createLink:createWebLink,match:(url)=>isWebLink(url),open:(url)=>window.open(url,"_blank"),urlRepresentation:(url)=>url,sequence:0,};function findMatchingSpec(url){return(urlRegistry.getAll().sort((a,b)=>a.sequence-b.sequence).find((urlType)=>urlType.match(url))||WebUrlSpec);}
function urlRepresentation(link,getters){return findMatchingSpec(link.url).urlRepresentation(link.url,getters);}
function openLink(link,env,isMiddleClick){findMatchingSpec(link.url).open(link.url,env,isMiddleClick);}
function detectLink(value){if(typeof value!=="string"){return undefined;}
if(isMarkdownLink(value)){const{label,url}=parseMarkdownLink(value);return findMatchingSpec(url).createLink(url,label);}
else if(isWebLink(value)){return createWebLink(value);}
return undefined;}
class DateTime{jsDate;constructor(year,month,day,hours=0,minutes=0,seconds=0){this.jsDate=new Date(Date.UTC(year,month,day,hours,minutes,seconds,0));}
static fromTimestamp(timestamp){const date=new Date(timestamp);return new DateTime(date.getUTCFullYear(),date.getUTCMonth(),date.getUTCDate(),date.getUTCHours(),date.getUTCMinutes(),date.getUTCSeconds());}
static now(){const now=new Date();return new DateTime(now.getFullYear(),now.getMonth(),now.getDate(),now.getHours(),now.getMinutes(),now.getSeconds());}
toString(){return this.jsDate.toString();}
toLocaleDateString(){return this.jsDate.toLocaleDateString();}
getTime(){return this.jsDate.getTime();}
getFullYear(){return this.jsDate.getUTCFullYear();}
getMonth(){return this.jsDate.getUTCMonth();}
getQuarter(){return Math.floor(this.getMonth()/3)+1;}
getDate(){return this.jsDate.getUTCDate();}
getDay(){return this.jsDate.getUTCDay();}
getHours(){return this.jsDate.getUTCHours();}
getMinutes(){return this.jsDate.getUTCMinutes();}
getSeconds(){return this.jsDate.getUTCSeconds();}
getIsoWeek(){const date=new Date(this.jsDate.getTime());const dayNumber=date.getUTCDay()||7;date.setUTCDate(date.getUTCDate()+4-dayNumber);const yearStart=new Date(Date.UTC(date.getUTCFullYear(),0,1));return Math.ceil(((date.getTime()-yearStart.getTime())/86400000+1)/7);}
setFullYear(year){return this.jsDate.setUTCFullYear(year);}
setMonth(month){return this.jsDate.setUTCMonth(month);}
setDate(date){return this.jsDate.setUTCDate(date);}
setHours(hours){return this.jsDate.setUTCHours(hours);}
setMinutes(minutes){return this.jsDate.setUTCMinutes(minutes);}
setSeconds(seconds){return this.jsDate.setUTCSeconds(seconds);}}
const INITIAL_1900_DAY=new DateTime(1899,11,30);const MS_PER_DAY=24*60*60*1000;const CURRENT_MILLENIAL=2000;const CURRENT_YEAR=DateTime.now().getFullYear();const CURRENT_MONTH=DateTime.now().getMonth();const INITIAL_JS_DAY=DateTime.fromTimestamp(0);const DATE_JS_1900_OFFSET=INITIAL_JS_DAY.getTime()-INITIAL_1900_DAY.getTime();const mdyDateRegexp=/^\d{1,2}(\/|-|\s)\d{1,2}((\/|-|\s)\d{1,4})?$/;const ymdDateRegexp=/^\d{3,4}(\/|-|\s)\d{1,2}(\/|-|\s)\d{1,2}$/;const whiteSpaceChars=whiteSpaceCharacters.join("");const dateSeparatorsRegex=new RegExp(`\/|-|${whiteSpaceCharacters.join("|")}`);const dateRegexp=new RegExp(`^(\\d{1,4})[\/${whiteSpaceChars}\-](\\d{1,4})([\/${whiteSpaceChars}\-](\\d{1,4}))?$`);const timeRegexp=/((\d+(:\d+)?(:\d+)?\s*(AM|PM))|(\d+:\d+(:\d+)?))$/;function valueToDateNumber(value,locale){switch(typeof value){case"number":return value;case"string":if(isDateTime(value,locale)){return parseDateTime(value,locale)?.value;}
return!value||isNaN(Number(value))?undefined:Number(value);default:return undefined;}}
function isDateTime(str,locale){return parseDateTime(str,locale)!==null;}
const CACHE=new Map();function parseDateTime(str,locale){if(!CACHE.has(locale)){CACHE.set(locale,new Map());}
if(!CACHE.get(locale).has(str)){CACHE.get(locale).set(str,_parseDateTime(str,locale));}
return CACHE.get(locale).get(str);}
function _parseDateTime(str,locale){str=str.trim();let time=null;const timeMatch=str.match(timeRegexp);if(timeMatch){time=parseTime(timeMatch[0]);if(time===null){return null;}
str=str.replace(timeMatch[0],"").trim();}
let date=null;const dateParts=getDateParts(str,locale);if(dateParts){const separator=dateParts.dateString.match(dateSeparatorsRegex)[0];date=parseDate(dateParts,separator);if(date===null){return null;}
str=str.replace(dateParts.dateString,"").trim();}
if(str!==""||!(date||time)){return null;}
if(date&&date.jsDate&&time&&time.jsDate){return{value:date.value+time.value,format:date.format+" "+(time.format==="hhhh:mm:ss"?"hh:mm:ss":time.format),jsDate:new DateTime(date.jsDate.getFullYear()+time.jsDate.getFullYear()-1899,date.jsDate.getMonth()+time.jsDate.getMonth()-11,date.jsDate.getDate()+time.jsDate.getDate()-30,date.jsDate.getHours()+time.jsDate.getHours(),date.jsDate.getMinutes()+time.jsDate.getMinutes(),date.jsDate.getSeconds()+time.jsDate.getSeconds()),};}
return date||time;}
function getDateParts(dateString,locale){const match=dateString.match(dateRegexp);if(!match){return null;}
const[,part1,part2,,part3]=match;if(part1.length>2&&part3&&part3.length>2){return null;}
if(part1.length>2){return{year:part1,month:part2,day:part3,dateString,type:"ymd"};}
const localeDateType=getLocaleDateFormatType(locale);if(!part3){if(part2.length>2){return{month:part1,year:part2,day:undefined,dateString,type:localeDateType};}
if(localeDateType==="dmy"){return{day:part1,month:part2,year:part3,dateString,type:"dmy"};}
return{month:part1,day:part2,year:part3,dateString,type:"mdy"};}
if(part3.length>2){if(localeDateType==="mdy"){return{month:part1,day:part2,year:part3,dateString,type:"mdy"};}
return{day:part1,month:part2,year:part3,dateString,type:"dmy"};}
if(localeDateType==="mdy"){return{month:part1,day:part2,year:part3,dateString,type:"mdy"};}
if(localeDateType==="ymd"){return{year:part1,month:part2,day:part3,dateString,type:"ymd"};}
if(localeDateType==="dmy"){return{day:part1,month:part2,year:part3,dateString,type:"dmy"};}
return null;}
function getLocaleDateFormatType(locale){switch(locale.dateFormat[0]){case"d":return"dmy";case"m":return"mdy";case"y":return"ymd";}
throw new Error("Invalid date format in locale");}
function parseDate(parts,separator){const{year:yearStr,month:monthStr,day:dayStr}=parts;const month=inferMonth(monthStr);const day=inferDay(dayStr);const year=inferYear(yearStr);if(year===null||month===null||day===null){return null;}
const leadingZero=(monthStr?.length===2&&month+1<10)||(dayStr?.length===2&&day<10);const fullYear=yearStr?.length!==2;const jsDate=new DateTime(year,month,day);if(jsDate.getMonth()!==month||jsDate.getDate()!==day){return null;}
const delta=jsDate.getTime()-INITIAL_1900_DAY.getTime();const format=getFormatFromDateParts(parts,separator,leadingZero,fullYear);return{value:Math.round(delta/MS_PER_DAY),format:format,jsDate,};}
function getFormatFromDateParts(parts,sep,leadingZero,fullYear){const yearFmt=parts.year?(fullYear?"yyyy":"yy"):undefined;const monthFmt=parts.month?(leadingZero?"mm":"m"):undefined;const dayFmt=parts.day?(leadingZero?"dd":"d"):undefined;switch(parts.type){case"mdy":return[monthFmt,dayFmt,yearFmt].filter(isDefined).join(sep);case"ymd":return[yearFmt,monthFmt,dayFmt].filter(isDefined).join(sep);case"dmy":return[dayFmt,monthFmt,yearFmt].filter(isDefined).join(sep);}}
function inferYear(yearStr){if(!yearStr){return CURRENT_YEAR;}
const nbr=Number(yearStr);switch(yearStr.length){case 1:return CURRENT_MILLENIAL+nbr;case 2:const offset=CURRENT_MILLENIAL+nbr>CURRENT_YEAR+10?-100:0;const base=CURRENT_MILLENIAL+offset;return base+nbr;case 3:case 4:return nbr;}
return null;}
function inferMonth(monthStr){if(!monthStr){return CURRENT_MONTH;}
const nbr=Number(monthStr);if(nbr>=1&&nbr<=12){return nbr-1;}
return null;}
function inferDay(dayStr){if(!dayStr){return 1;}
const nbr=Number(dayStr);if(nbr>=0&&nbr<=31){return nbr;}
return null;}
function parseTime(str){str=str.trim();if(timeRegexp.test(str)){const isAM=/AM/i.test(str);const isPM=/PM/i.test(str);const strTime=isAM||isPM?str.substring(0,str.length-2).trim():str;const parts=strTime.split(/:/);const isMinutes=parts.length>=2;const isSeconds=parts.length===3;let hours=Number(parts[0]);let minutes=isMinutes?Number(parts[1]):0;let seconds=isSeconds?Number(parts[2]):0;let format=isSeconds?"hh:mm:ss":"hh:mm";if(isAM||isPM){format+=" a";}
else if(!isMinutes){return null;}
if(hours>=12&&isAM){hours-=12;}
else if(hours<12&&isPM){hours+=12;}
minutes+=Math.floor(seconds/60);seconds%=60;hours+=Math.floor(minutes/60);minutes%=60;if(hours>=24){format="hhhh:mm:ss";}
const jsDate=new DateTime(1899,11,30,hours,minutes,seconds);return{value:hours/24+minutes/1440+seconds/86400,format:format,jsDate:jsDate,};}
return null;}
function numberToJsDate(value){const truncValue=Math.trunc(value);const date=DateTime.fromTimestamp(truncValue*MS_PER_DAY-DATE_JS_1900_OFFSET);let time=value-truncValue;time=time<0?1+time:time;const hours=Math.round(time*24);const minutes=Math.round((time-hours/24)*24*60);const seconds=Math.round((time-hours/24-minutes/24/60)*24*60*60);date.setHours(hours);date.setMinutes(minutes);date.setSeconds(seconds);return date;}
function jsDateToRoundNumber(date){return Math.round(jsDateToNumber(date));}
function jsDateToNumber(date){const delta=date.getTime()-INITIAL_1900_DAY.getTime();return delta/MS_PER_DAY;}
function getDaysInMonth(date){return new DateTime(date.getFullYear(),date.getMonth()+1,0).getDate();}
function isLastDayOfMonth(date){return getDaysInMonth(date)===date.getDate();}
function addMonthsToDate(date,months,keepEndOfMonth){const yStart=date.getFullYear();const mStart=date.getMonth();const dStart=date.getDate();const jsDate=new DateTime(yStart,mStart+months,1);if(keepEndOfMonth&&dStart===getDaysInMonth(date)){jsDate.setDate(getDaysInMonth(jsDate));}
else if(dStart>getDaysInMonth(jsDate)){jsDate.setDate(getDaysInMonth(jsDate));}
else{jsDate.setDate(dStart);}
return jsDate;}
function isLeapYear(year){const _year=Math.trunc(year);return(_year%4===0&&_year%100!==0)||_year%400===0;}
function getYearFrac(startDate,endDate,_dayCountConvention){if(startDate===endDate){return 0;}
if(startDate>endDate){const stack=endDate;endDate=startDate;startDate=stack;}
const jsStartDate=numberToJsDate(startDate);const jsEndDate=numberToJsDate(endDate);let dayStart=jsStartDate.getDate();let dayEnd=jsEndDate.getDate();const monthStart=jsStartDate.getMonth();const monthEnd=jsEndDate.getMonth();const yearStart=jsStartDate.getFullYear();const yearEnd=jsEndDate.getFullYear();let yearsStart=0;let yearsEnd=0;switch(_dayCountConvention){case 0:if(dayStart===31)
dayStart=30;if(dayStart===30&&dayEnd===31)
dayEnd=30;if(monthStart===1&&dayStart===(isLeapYear(yearStart)?29:28)){dayStart=30;if(monthEnd===1&&dayEnd===(isLeapYear(yearEnd)?29:28)){dayEnd=30;}}
yearsStart=yearStart+(monthStart*30+dayStart)/360;yearsEnd=yearEnd+(monthEnd*30+dayEnd)/360;break;case 1:let daysInYear=365;const isSameYear=yearStart===yearEnd;const isOneDeltaYear=yearStart+1===yearEnd;const isMonthEndBigger=monthStart<monthEnd;const isSameMonth=monthStart===monthEnd;const isDayEndBigger=dayStart<dayEnd;if((!isSameYear&&!isOneDeltaYear)||(!isSameYear&&isMonthEndBigger)||(!isSameYear&&isSameMonth&&isDayEndBigger)){let countYears=0;let countDaysInYears=0;for(let y=yearStart;y<=yearEnd;y++){countYears++;countDaysInYears+=isLeapYear(y)?366:365;}
daysInYear=countDaysInYears/countYears;}
else if(!isSameYear){if(isLeapYear(yearStart)&&monthStart<2){daysInYear=366;}
if(isLeapYear(yearEnd)&&(monthEnd>1||(monthEnd===1&&dayEnd===29))){daysInYear=366;}}
else{if(isLeapYear(yearStart)){daysInYear=366;}}
yearsStart=startDate/daysInYear;yearsEnd=endDate/daysInYear;break;case 2:yearsStart=startDate/360;yearsEnd=endDate/360;break;case 3:yearsStart=startDate/365;yearsEnd=endDate/365;break;case 4:if(dayStart===31)
dayStart=30;if(dayEnd===31)
dayEnd=30;yearsStart=yearStart+(monthStart*30+dayStart)/360;yearsEnd=yearEnd+(monthEnd*30+dayEnd)/360;break;}
return yearsEnd-yearsStart;}
function getTimeDifferenceInWholeMonths(startDate,endDate){const months=(endDate.getFullYear()-startDate.getFullYear())*12+
endDate.getMonth()-
startDate.getMonth();return startDate.getDate()>endDate.getDate()?months-1:months;}
function getTimeDifferenceInWholeDays(startDate,endDate){const startUtc=startDate.getTime();const endUtc=endDate.getTime();return Math.floor((endUtc-startUtc)/MS_PER_DAY);}
function getTimeDifferenceInWholeYears(startDate,endDate){const years=endDate.getFullYear()-startDate.getFullYear();const monthStart=startDate.getMonth();const monthEnd=endDate.getMonth();const dateStart=startDate.getDate();const dateEnd=endDate.getDate();const isEndMonthDateBigger=monthEnd>monthStart||(monthEnd===monthStart&&dateEnd>=dateStart);return isEndMonthDateBigger?years:years-1;}
function areTwoDatesWithinOneYear(startDate,endDate){return getYearFrac(startDate,endDate,1)<1;}
function areDatesSameDay(startDate,endDate){return Math.trunc(startDate)===Math.trunc(endDate);}
function isDateBetween(date,startDate,endDate){if(startDate>endDate){return isDateBetween(date,endDate,startDate);}
date=Math.trunc(date);startDate=Math.trunc(startDate);endDate=Math.trunc(endDate);return date>=startDate&&date<=endDate;}
function isDateStrictlyBefore(date,dateBefore){return Math.trunc(date)<Math.trunc(dateBefore);}
function isDateBefore(date,dateBefore){return Math.trunc(date)<=Math.trunc(dateBefore);}
function isDateStrictlyAfter(date,dateAfter){return Math.trunc(date)>Math.trunc(dateAfter);}
function isDateAfter(date,dateAfter){return Math.trunc(date)>=Math.trunc(dateAfter);}
const getFormulaNumberRegex=memoize(function getFormulaNumberRegex(decimalSeparator){decimalSeparator=escapeRegExp(decimalSeparator);return new RegExp(`(?:^-?\\d+(?:${decimalSeparator}?\\d*(?:e(\\+|-)?\\d+)?)?|^-?${decimalSeparator}\\d+)(?!\\w|!)`);});const getNumberRegex=memoize(function getNumberRegex(locale){const decimalSeparator=escapeRegExp(locale.decimalSeparator);const thousandsSeparator=escapeRegExp(locale.thousandsSeparator||"");const pIntegerAndDecimals=`(?:\\d+(?:${thousandsSeparator}\\d{3,})*(?:${decimalSeparator}\\d*)?)`;const pOnlyDecimals=`(?:${decimalSeparator}\\d+)`;const pScientificFormat="(?:e(?:\\+|-)?\\d+)?";const pPercentFormat="(?:\\s*%)?";const pNumber="(?:\\s*"+
pIntegerAndDecimals+"|"+
pOnlyDecimals+")"+
pScientificFormat+
pPercentFormat;const pMinus="(?:\\s*-)?";const pCurrencyFormat="(?:\\s*[\\$€])?";const p1=pMinus+pCurrencyFormat+pNumber;const p2=pMinus+pNumber+pCurrencyFormat;const p3=pCurrencyFormat+pMinus+pNumber;const pNumberExp="^(?:(?:"+[p1,p2,p3].join(")|(?:")+"))$";return new RegExp(pNumberExp,"i");});function isNumber(value,locale){if(!value)
return false;return getNumberRegex(locale).test(value.trim());}
const getInvaluableSymbolsRegexp=memoize(function getInvaluableSymbolsRegexp(locale){return new RegExp(`[\$€${escapeRegExp(locale.thousandsSeparator || "")}]`,"g");});function parseNumber(str,locale){str=str.replace(getInvaluableSymbolsRegexp(locale),"");if(locale.decimalSeparator!=="."){str=str.replace(locale.decimalSeparator,".");}
let n=Number(str);if(isNaN(n)&&str.includes("%")){n=Number(str.split("%")[0]);if(!isNaN(n)){return n/100;}}
return n;}
function percentile(values,percent,isInclusive){const sortedValues=[...values].sort((a,b)=>a-b);let percentIndex=(sortedValues.length+(isInclusive?-1:1))*percent;if(!isInclusive){percentIndex--;}
if(Number.isInteger(percentIndex)){return sortedValues[percentIndex];}
const indexSup=Math.ceil(percentIndex);const indexLow=Math.floor(percentIndex);return(sortedValues[indexSup]*(percentIndex-indexLow)+
sortedValues[indexLow]*(indexSup-percentIndex));}
var CellValueType;(function(CellValueType){CellValueType["boolean"]="boolean";CellValueType["number"]="number";CellValueType["text"]="text";CellValueType["empty"]="empty";CellValueType["error"]="error";})(CellValueType||(CellValueType={}));var ClipboardMIMEType;(function(ClipboardMIMEType){ClipboardMIMEType["PlainText"]="text/plain";ClipboardMIMEType["Html"]="text/html";ClipboardMIMEType["Image"]="image";})(ClipboardMIMEType||(ClipboardMIMEType={}));function isSheetDependent(cmd){return"sheetId"in cmd;}
function isHeadersDependant(cmd){return"dimension"in cmd&&"sheetId"in cmd&&"elements"in cmd;}
function isTargetDependent(cmd){return"target"in cmd&&"sheetId"in cmd;}
function isRangeDependant(cmd){return"ranges"in cmd;}
function isPositionDependent(cmd){return"col"in cmd&&"row"in cmd&&"sheetId"in cmd;}
function isZoneDependent(cmd){return"sheetId"in cmd&&"zone"in cmd;}
const invalidateEvaluationCommands=new Set(["RENAME_SHEET","DELETE_SHEET","CREATE_SHEET","DUPLICATE_SHEET","ADD_COLUMNS_ROWS","REMOVE_COLUMNS_ROWS","UNDO","REDO","ADD_MERGE","REMOVE_MERGE","DUPLICATE_SHEET","UPDATE_LOCALE","ADD_PIVOT","UPDATE_PIVOT","INSERT_PIVOT","RENAME_PIVOT","REMOVE_PIVOT","DUPLICATE_PIVOT",]);const invalidateChartEvaluationCommands=new Set(["EVALUATE_CELLS","EVALUATE_CHARTS","UPDATE_CELL","UNHIDE_COLUMNS_ROWS","HIDE_COLUMNS_ROWS","GROUP_HEADERS","UNGROUP_HEADERS","FOLD_ALL_HEADER_GROUPS","FOLD_HEADER_GROUP","FOLD_HEADER_GROUPS_IN_ZONE","UNFOLD_ALL_HEADER_GROUPS","UNFOLD_HEADER_GROUP","UNFOLD_HEADER_GROUPS_IN_ZONE","UPDATE_TABLE","UPDATE_FILTER","UNDO","REDO",]);const invalidateDependenciesCommands=new Set(["MOVE_RANGES"]);const invalidateCFEvaluationCommands=new Set(["EVALUATE_CELLS","ADD_CONDITIONAL_FORMAT","REMOVE_CONDITIONAL_FORMAT","CHANGE_CONDITIONAL_FORMAT_PRIORITY",]);const invalidateBordersCommands=new Set(["AUTOFILL_CELL","SET_BORDER","SET_ZONE_BORDERS",]);const readonlyAllowedCommands=new Set(["START","ACTIVATE_SHEET","COPY","RESIZE_SHEETVIEW","SET_VIEWPORT_OFFSET","EVALUATE_CELLS","EVALUATE_CHARTS","SET_FORMULA_VISIBILITY","UPDATE_FILTER","UPDATE_CHART",]);const coreTypes=new Set(["UPDATE_CELL","UPDATE_CELL_POSITION","CLEAR_CELL","CLEAR_CELLS","DELETE_CONTENT","ADD_COLUMNS_ROWS","REMOVE_COLUMNS_ROWS","RESIZE_COLUMNS_ROWS","HIDE_COLUMNS_ROWS","UNHIDE_COLUMNS_ROWS","SET_GRID_LINES_VISIBILITY","UNFREEZE_COLUMNS","UNFREEZE_ROWS","FREEZE_COLUMNS","FREEZE_ROWS","UNFREEZE_COLUMNS_ROWS","ADD_MERGE","REMOVE_MERGE","CREATE_SHEET","DELETE_SHEET","DUPLICATE_SHEET","MOVE_SHEET","RENAME_SHEET","COLOR_SHEET","HIDE_SHEET","SHOW_SHEET","MOVE_RANGES","ADD_CONDITIONAL_FORMAT","REMOVE_CONDITIONAL_FORMAT","CHANGE_CONDITIONAL_FORMAT_PRIORITY","CREATE_FIGURE","DELETE_FIGURE","UPDATE_FIGURE","SET_FORMATTING","CLEAR_FORMATTING","SET_BORDER","SET_ZONE_BORDERS","SET_BORDERS_ON_TARGET","CREATE_CHART","UPDATE_CHART","CREATE_TABLE","REMOVE_TABLE","UPDATE_TABLE","CREATE_TABLE_STYLE","REMOVE_TABLE_STYLE","CREATE_IMAGE","GROUP_HEADERS","UNGROUP_HEADERS","UNFOLD_HEADER_GROUP","FOLD_HEADER_GROUP","FOLD_ALL_HEADER_GROUPS","UNFOLD_ALL_HEADER_GROUPS","UNFOLD_HEADER_GROUPS_IN_ZONE","FOLD_HEADER_GROUPS_IN_ZONE","ADD_DATA_VALIDATION_RULE","REMOVE_DATA_VALIDATION_RULE","UPDATE_LOCALE","ADD_PIVOT","UPDATE_PIVOT","INSERT_PIVOT","RENAME_PIVOT","REMOVE_PIVOT","DUPLICATE_PIVOT",]);function isCoreCommand(cmd){return coreTypes.has(cmd.type);}
function canExecuteInReadonly(cmd){return readonlyAllowedCommands.has(cmd.type);}
class DispatchResult{reasons;constructor(results=[]){if(!Array.isArray(results)){results=[results];}
results=[...new Set(results)];this.reasons=results.filter((result)=>result!=="Success");}
static get Success(){return SUCCESS;}
get isSuccessful(){return this.reasons.length===0;}
isCancelledBecause(reason){return this.reasons.includes(reason);}}
const SUCCESS=new DispatchResult();var CommandResult;(function(CommandResult){CommandResult["Success"]="Success";CommandResult["CancelledForUnknownReason"]="CancelledForUnknownReason";CommandResult["WillRemoveExistingMerge"]="WillRemoveExistingMerge";CommandResult["MergeIsDestructive"]="MergeIsDestructive";CommandResult["CellIsMerged"]="CellIsMerged";CommandResult["InvalidTarget"]="InvalidTarget";CommandResult["EmptyUndoStack"]="EmptyUndoStack";CommandResult["EmptyRedoStack"]="EmptyRedoStack";CommandResult["NotEnoughElements"]="NotEnoughElements";CommandResult["NotEnoughSheets"]="NotEnoughSheets";CommandResult["MissingSheetName"]="MissingSheetName";CommandResult["UnchangedSheetName"]="UnchangedSheetName";CommandResult["DuplicatedSheetName"]="DuplicatedSheetName";CommandResult["DuplicatedSheetId"]="DuplicatedSheetId";CommandResult["ForbiddenCharactersInSheetName"]="ForbiddenCharactersInSheetName";CommandResult["WrongSheetMove"]="WrongSheetMove";CommandResult["WrongSheetPosition"]="WrongSheetPosition";CommandResult["InvalidAnchorZone"]="InvalidAnchorZone";CommandResult["SelectionOutOfBound"]="SelectionOutOfBound";CommandResult["TargetOutOfSheet"]="TargetOutOfSheet";CommandResult["WrongCutSelection"]="WrongCutSelection";CommandResult["WrongPasteSelection"]="WrongPasteSelection";CommandResult["WrongPasteOption"]="WrongPasteOption";CommandResult["WrongFigurePasteOption"]="WrongFigurePasteOption";CommandResult["EmptyClipboard"]="EmptyClipboard";CommandResult["EmptyRange"]="EmptyRange";CommandResult["InvalidRange"]="InvalidRange";CommandResult["InvalidZones"]="InvalidZones";CommandResult["InvalidSheetId"]="InvalidSheetId";CommandResult["InvalidCellId"]="InvalidCellId";CommandResult["InvalidFigureId"]="InvalidFigureId";CommandResult["InputAlreadyFocused"]="InputAlreadyFocused";CommandResult["MaximumRangesReached"]="MaximumRangesReached";CommandResult["MinimumRangesReached"]="MinimumRangesReached";CommandResult["InvalidChartDefinition"]="InvalidChartDefinition";CommandResult["InvalidDataSet"]="InvalidDataSet";CommandResult["InvalidLabelRange"]="InvalidLabelRange";CommandResult["InvalidScorecardKeyValue"]="InvalidScorecardKeyValue";CommandResult["InvalidScorecardBaseline"]="InvalidScorecardBaseline";CommandResult["InvalidGaugeDataRange"]="InvalidGaugeDataRange";CommandResult["EmptyGaugeRangeMin"]="EmptyGaugeRangeMin";CommandResult["GaugeRangeMinNaN"]="GaugeRangeMinNaN";CommandResult["EmptyGaugeRangeMax"]="EmptyGaugeRangeMax";CommandResult["GaugeRangeMaxNaN"]="GaugeRangeMaxNaN";CommandResult["GaugeLowerInflectionPointNaN"]="GaugeLowerInflectionPointNaN";CommandResult["GaugeUpperInflectionPointNaN"]="GaugeUpperInflectionPointNaN";CommandResult["InvalidAutofillSelection"]="InvalidAutofillSelection";CommandResult["MinBiggerThanMax"]="MinBiggerThanMax";CommandResult["LowerBiggerThanUpper"]="LowerBiggerThanUpper";CommandResult["MidBiggerThanMax"]="MidBiggerThanMax";CommandResult["MinBiggerThanMid"]="MinBiggerThanMid";CommandResult["FirstArgMissing"]="FirstArgMissing";CommandResult["SecondArgMissing"]="SecondArgMissing";CommandResult["MinNaN"]="MinNaN";CommandResult["MidNaN"]="MidNaN";CommandResult["MaxNaN"]="MaxNaN";CommandResult["ValueUpperInflectionNaN"]="ValueUpperInflectionNaN";CommandResult["ValueLowerInflectionNaN"]="ValueLowerInflectionNaN";CommandResult["MinInvalidFormula"]="MinInvalidFormula";CommandResult["MidInvalidFormula"]="MidInvalidFormula";CommandResult["MaxInvalidFormula"]="MaxInvalidFormula";CommandResult["ValueUpperInvalidFormula"]="ValueUpperInvalidFormula";CommandResult["ValueLowerInvalidFormula"]="ValueLowerInvalidFormula";CommandResult["InvalidSortAnchor"]="InvalidSortAnchor";CommandResult["InvalidSortZone"]="InvalidSortZone";CommandResult["SortZoneWithArrayFormulas"]="SortZoneWithArrayFormulas";CommandResult["WaitingSessionConfirmation"]="WaitingSessionConfirmation";CommandResult["MergeOverlap"]="MergeOverlap";CommandResult["TooManyHiddenElements"]="TooManyHiddenElements";CommandResult["Readonly"]="Readonly";CommandResult["InvalidViewportSize"]="InvalidViewportSize";CommandResult["InvalidScrollingDirection"]="InvalidScrollingDirection";CommandResult["ViewportScrollLimitsReached"]="ViewportScrollLimitsReached";CommandResult["FigureDoesNotExist"]="FigureDoesNotExist";CommandResult["InvalidConditionalFormatId"]="InvalidConditionalFormatId";CommandResult["InvalidCellPopover"]="InvalidCellPopover";CommandResult["EmptyTarget"]="EmptyTarget";CommandResult["InvalidFreezeQuantity"]="InvalidFreezeQuantity";CommandResult["FrozenPaneOverlap"]="FrozenPaneOverlap";CommandResult["ValuesNotChanged"]="ValuesNotChanged";CommandResult["InvalidFilterZone"]="InvalidFilterZone";CommandResult["TableNotFound"]="TableNotFound";CommandResult["TableOverlap"]="TableOverlap";CommandResult["InvalidTableConfig"]="InvalidTableConfig";CommandResult["InvalidTableStyle"]="InvalidTableStyle";CommandResult["FilterNotFound"]="FilterNotFound";CommandResult["MergeInTable"]="MergeInTable";CommandResult["NonContinuousTargets"]="NonContinuousTargets";CommandResult["DuplicatedFigureId"]="DuplicatedFigureId";CommandResult["InvalidSelectionStep"]="InvalidSelectionStep";CommandResult["DuplicatedChartId"]="DuplicatedChartId";CommandResult["ChartDoesNotExist"]="ChartDoesNotExist";CommandResult["InvalidHeaderIndex"]="InvalidHeaderIndex";CommandResult["InvalidQuantity"]="InvalidQuantity";CommandResult["MoreThanOneColumnSelected"]="MoreThanOneColumnSelected";CommandResult["EmptySplitSeparator"]="EmptySplitSeparator";CommandResult["SplitWillOverwriteContent"]="SplitWillOverwriteContent";CommandResult["NoSplitSeparatorInSelection"]="NoSplitSeparatorInSelection";CommandResult["NoActiveSheet"]="NoActiveSheet";CommandResult["InvalidLocale"]="InvalidLocale";CommandResult["MoreThanOneRangeSelected"]="MoreThanOneRangeSelected";CommandResult["NoColumnsProvided"]="NoColumnsProvided";CommandResult["ColumnsNotIncludedInZone"]="ColumnsNotIncludedInZone";CommandResult["DuplicatesColumnsSelected"]="DuplicatesColumnsSelected";CommandResult["InvalidHeaderGroupStartEnd"]="InvalidHeaderGroupStartEnd";CommandResult["HeaderGroupAlreadyExists"]="HeaderGroupAlreadyExists";CommandResult["UnknownHeaderGroup"]="UnknownHeaderGroup";CommandResult["UnknownDataValidationRule"]="UnknownDataValidationRule";CommandResult["UnknownDataValidationCriterionType"]="UnknownDataValidationCriterionType";CommandResult["InvalidDataValidationCriterionValue"]="InvalidDataValidationCriterionValue";CommandResult["InvalidNumberOfCriterionValues"]="InvalidNumberOfCriterionValues";CommandResult["InvalidCopyPasteSelection"]="InvalidCopyPasteSelection";CommandResult["NoChanges"]="NoChanges";CommandResult["InvalidInputId"]="InvalidInputId";CommandResult["SheetIsHidden"]="SheetIsHidden";CommandResult["InvalidTableResize"]="InvalidTableResize";CommandResult["PivotIdNotFound"]="PivotIdNotFound";CommandResult["PivotInError"]="PivotInError";CommandResult["EmptyName"]="EmptyName";CommandResult["ValueCellIsInvalidFormula"]="ValueCellIsInvalidFormula";CommandResult["InvalidDefinition"]="InvalidDefinition";CommandResult["InvalidColor"]="InvalidColor";CommandResult["InvalidPivotDataSet"]="InvalidPivotDataSet";})(CommandResult||(CommandResult={}));const availableConditionalFormatOperators=new Set(["containsText","notContainsText","isGreaterThan","isGreaterOrEqualTo","isLessThan","isLessOrEqualTo","isBetween","isNotBetween","beginsWithText","endsWithText","isNotEmpty","isEmpty","isNotEqual","isEqual",]);const availableDataValidationOperators=new Set(["containsText","notContainsText","isEqualText","isEmail","isLink","dateIs","dateIsBefore","dateIsOnOrBefore","dateIsAfter","dateIsOnOrAfter","dateIsBetween","dateIsNotBetween","dateIsValid","isEqual","isNotEqual","isGreaterThan","isGreaterOrEqualTo","isLessThan","isLessOrEqualTo","isBetween","isNotBetween","isBoolean","isValueInList","isValueInRange","customFormula",]);const DEFAULT_LOCALES=[{name:"English (US)",code:"en_US",thousandsSeparator:",",decimalSeparator:".",weekStart:7,dateFormat:"m/d/yyyy",timeFormat:"hh:mm:ss a",formulaArgSeparator:",",},{name:"French",code:"fr_FR",thousandsSeparator:" ",decimalSeparator:",",weekStart:1,dateFormat:"dd/mm/yyyy",timeFormat:"hh:mm:ss",formulaArgSeparator:";",},];const DEFAULT_LOCALE=DEFAULT_LOCALES[0];const borderStyles=["thin","medium","thick","dashed","dotted"];function isMatrix(x){return Array.isArray(x)&&Array.isArray(x[0]);}
var DIRECTION;(function(DIRECTION){DIRECTION["UP"]="up";DIRECTION["DOWN"]="down";DIRECTION["LEFT"]="left";DIRECTION["RIGHT"]="right";})(DIRECTION||(DIRECTION={}));const LAYERS={Background:0,Highlights:1,Clipboard:2,Chart:4,Autofill:5,Selection:6,Headers:100,};const OrderedLayers=memoize(()=>Object.keys(LAYERS).sort((a,b)=>LAYERS[a]-LAYERS[b]));function addRenderingLayer(layer,priority){if(LAYERS[layer]){throw new Error(`Layer ${layer} already exists`);}
LAYERS[layer]=priority;}
const filterCriterions=["containsText","notContainsText","isEqualText","dateIs","dateIsBefore","dateIsOnOrBefore","dateIsAfter","dateIsOnOrAfter","dateIsBetween","dateIsNotBetween","isEqual","isNotEqual","isGreaterThan","isGreaterOrEqualTo","isLessThan","isLessOrEqualTo","isBetween","isNotBetween","customFormula","beginsWithText","endsWithText","isNotEmpty","isEmpty",];new Set(filterCriterions);const filterTextCriterionOperators=["containsText","notContainsText","isEqualText","isEmpty","isNotEmpty","beginsWithText","endsWithText",];const filterNumberCriterionOperators=["isEqual","isNotEqual","isGreaterThan","isGreaterOrEqualTo","isLessThan","isLessOrEqualTo","isBetween","isNotBetween","isEmpty","isNotEmpty",];const filterDateCriterionOperators=["dateIs","dateIsBefore","dateIsOnOrBefore","dateIsAfter","dateIsOnOrAfter","dateIsBetween","dateIsNotBetween","isEmpty","isNotEmpty",];const CellErrorType={NotAvailable:"#N/A",InvalidReference:"#REF",BadExpression:"#BAD_EXPR",CircularDependency:"#CYCLE",UnknownFunction:"#NAME?",DivisionByZero:"#DIV/0!",SpilledBlocked:"#SPILL!",GenericError:"#ERROR",NullError:"#NULL!",};const errorTypes=new Set(Object.values(CellErrorType));class EvaluationError{message;value;constructor(message=_t("Error"),value=CellErrorType.GenericError){this.message=message;this.value=value;this.message=message.toString();}}
class BadExpressionError extends EvaluationError{constructor(message=_t("Invalid expression")){super(message,CellErrorType.BadExpression);}}
class CircularDependencyError extends EvaluationError{constructor(message=_t("Circular reference")){super(message,CellErrorType.CircularDependency);}}
class InvalidReferenceError extends EvaluationError{constructor(message=_t("Invalid reference")){super(message,CellErrorType.InvalidReference);}}
class NotAvailableError extends EvaluationError{constructor(message=_t("Data not available")){super(message,CellErrorType.NotAvailable);}}
class UnknownFunctionError extends EvaluationError{constructor(message=_t("Unknown function")){super(message,CellErrorType.UnknownFunction);}}
class SplillBlockedError extends EvaluationError{constructor(message=_t("Spill range is not empty")){super(message,CellErrorType.SpilledBlocked);}}
class DivisionByZeroError extends EvaluationError{constructor(message=_t("Division by zero")){super(message,CellErrorType.DivisionByZero);}}
const SORT_TYPES_ORDER=["number","string","boolean","undefined"];function inferFormat(data){if(data===undefined){return undefined;}
if(isMatrix(data)){return data[0][0]?.format;}
return data.format;}
function isEvaluationError(error){return typeof error==="string"&&errorTypes.has(error);}
function valueNotAvailable(searchKey){return{value:CellErrorType.NotAvailable,message:_t("Did not find value '%s' in [[FUNCTION_NAME]] evaluation.",toString(searchKey)),};}
const expectNumberValueError=(value)=>_t("The function [[FUNCTION_NAME]] expects a number value, but '%s' is a string, and cannot be coerced to a number.",value);const expectNumberRangeError=(lowerBound,upperBound,value)=>_t("The function [[FUNCTION_NAME]] expects a number value between %s and %s inclusive, but receives %s.",lowerBound.toString(),upperBound.toString(),value.toString());const expectStringSetError=(stringSet,value)=>{const stringSetString=stringSet.map((str)=>`'${str}'`).join(", ");return _t("The function [[FUNCTION_NAME]] has an argument with value '%s'. It should be one of: %s.",value,stringSetString);};function toNumber(data,locale){const value=toValue(data);switch(typeof value){case"number":return value;case"boolean":return value?1:0;case"string":if(isNumber(value,locale)||value===""){return parseNumber(value,locale);}
const internalDate=parseDateTime(value,locale);if(internalDate){return internalDate.value;}
throw new EvaluationError(expectNumberValueError(value));default:return 0;}}
function tryToNumber(value,locale){try{return toNumber(value,locale);}
catch(e){return undefined;}}
function toNumberMatrix(data,argName){return toMatrix(data).map((row)=>{return row.map((cell)=>{if(typeof cell.value!=="number"){throw new EvaluationError(_t("Function [[FUNCTION_NAME]] expects number values for %s, but got a %s.",argName,typeof cell.value));}
return cell.value;});});}
function strictToNumber(data,locale){const value=toValue(data);if(value===""){throw new EvaluationError(expectNumberValueError(value));}
return toNumber(value,locale);}
function toInteger(value,locale){return Math.trunc(toNumber(value,locale));}
function strictToInteger(value,locale){return Math.trunc(strictToNumber(value,locale));}
function toString(data){const value=toValue(data);switch(typeof value){case"string":return value;case"number":return value.toString();case"boolean":return value?"TRUE":"FALSE";default:return"";}}
const normalizeString=memoize(function normalizeString(str){return str.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g,"");});const expectBooleanValueError=(value)=>_t("The function [[FUNCTION_NAME]] expects a boolean value, but '%s' is a text, and cannot be coerced to a boolean.",value);function toBoolean(data){const value=toValue(data);switch(typeof value){case"boolean":return value;case"string":if(value){const uppercaseVal=value.toUpperCase();if(uppercaseVal==="TRUE"){return true;}
if(uppercaseVal==="FALSE"){return false;}
throw new EvaluationError(expectBooleanValueError(value));}
else{return false;}
case"number":return value?true:false;default:return false;}}
function strictToBoolean(data){const value=toValue(data);if(value===""){throw new EvaluationError(expectBooleanValueError(value));}
return toBoolean(value);}
function toJsDate(data,locale){const value=toValue(data);return numberToJsDate(toNumber(value,locale));}
function toValue(data){if(typeof data==="object"&&data!==null&&"value"in data){if(isEvaluationError(data.value)){throw data;}
return data.value;}
if(isEvaluationError(data)){throw new EvaluationError("",data);}
return data;}
function visitArgs(args,cellCb,dataCb){for(const arg of args){if(isMatrix(arg)){const lenRow=arg.length;const lenCol=arg[0].length;for(let y=0;y<lenCol;y++){for(let x=0;x<lenRow;x++){cellCb(arg[x][y]);}}}
else{dataCb(arg);}}}
function visitAny(args,cb){visitArgs(args,(cell)=>{if(isEvaluationError(cell.value)){throw cell;}
cb(cell);},(arg)=>{if(isEvaluationError(arg?.value)){throw arg;}
cb(arg);});}
function visitNumbers(args,cb,locale){visitArgs(args,(cell)=>{if(typeof cell?.value==="number"){cb(cell);}
if(isEvaluationError(cell?.value)){throw cell;}},(arg)=>{cb({value:strictToNumber(arg,locale),format:arg?.format});});}
function reduceArgs(args,cellCb,dataCb,initialValue,dir="rowFirst"){let val=initialValue;for(const arg of args){if(isMatrix(arg)){const numberOfCols=arg.length;const numberOfRows=arg[0].length;if(dir==="rowFirst"){for(let row=0;row<numberOfRows;row++){for(let col=0;col<numberOfCols;col++){val=cellCb(val,arg[col][row]);}}}
else{for(let col=0;col<numberOfCols;col++){for(let row=0;row<numberOfRows;row++){val=cellCb(val,arg[col][row]);}}}}
else{val=dataCb(val,arg);}}
return val;}
function reduceAny(args,cb,initialValue,dir="rowFirst"){return reduceArgs(args,cb,cb,initialValue,dir);}
function reduceNumbers(args,cb,initialValue,locale){return reduceArgs(args,(acc,arg)=>{const argValue=arg?.value;if(typeof argValue==="number"){return cb(acc,argValue);}
else if(isEvaluationError(argValue)){throw arg;}
return acc;},(acc,arg)=>{return cb(acc,strictToNumber(arg,locale));},initialValue);}
function reduceNumbersTextAs0(args,cb,initialValue,locale){return reduceArgs(args,(acc,arg)=>{const argValue=arg?.value;if(argValue!==undefined&&argValue!==null){if(typeof argValue==="number"){return cb(acc,argValue);}
else if(typeof argValue==="boolean"){return cb(acc,toNumber(argValue,locale));}
else if(isEvaluationError(argValue)){throw arg;}
else{return cb(acc,0);}}
return acc;},(acc,arg)=>{return cb(acc,toNumber(arg,locale));},initialValue);}
function generateMatrix(nColumns,nRows,callback){const returned=Array(nColumns);for(let col=0;col<nColumns;col++){returned[col]=Array(nRows);for(let row=0;row<nRows;row++){returned[col][row]=callback(col,row);}}
return returned;}
function matrixMap(matrix,callback){if(matrix.length===0){return[];}
return generateMatrix(matrix.length,matrix[0].length,(col,row)=>callback(matrix[col][row]));}
function matrixForEach(matrix,fn){const numberOfCols=matrix.length;const numberOfRows=matrix[0]?.length??0;for(let col=0;col<numberOfCols;col++){for(let row=0;row<numberOfRows;row++){fn(matrix[col][row]);}}}
function transposeMatrix(matrix){if(!matrix.length){return[];}
return generateMatrix(matrix[0].length,matrix.length,(i,j)=>matrix[j][i]);}
function applyVectorization(formula,args,acceptToVectorize=undefined){let countVectorizedCol=1;let countVectorizedRow=1;let vectorizedColLimit=Infinity;let vectorizedRowLimit=Infinity;let vectorArgsType=undefined;for(let i=0;i<args.length;i++){const arg=args[i];if(isMatrix(arg)&&(acceptToVectorize===undefined||acceptToVectorize[i])){const nColumns=arg.length;const nRows=arg[0].length;if(nColumns!==1||nRows!==1){vectorArgsType??=new Array(args.length);if(nColumns!==1&&nRows!==1){vectorArgsType[i]="matrix";countVectorizedCol=Math.max(countVectorizedCol,nColumns);countVectorizedRow=Math.max(countVectorizedRow,nRows);vectorizedColLimit=Math.min(vectorizedColLimit,nColumns);vectorizedRowLimit=Math.min(vectorizedRowLimit,nRows);}
else if(nColumns!==1){vectorArgsType[i]="horizontal";countVectorizedCol=Math.max(countVectorizedCol,nColumns);vectorizedColLimit=Math.min(vectorizedColLimit,nColumns);}
else if(nRows!==1){vectorArgsType[i]="vertical";countVectorizedRow=Math.max(countVectorizedRow,nRows);vectorizedRowLimit=Math.min(vectorizedRowLimit,nRows);}}
else{args[i]=arg[0][0];}}}
if(countVectorizedCol===1&&countVectorizedRow===1){return formula(...args);}
const getArgOffset=(i,j)=>args.map((arg,index)=>{switch(vectorArgsType?.[index]){case"matrix":return arg[i][j];case"horizontal":return arg[i][0];case"vertical":return arg[0][j];case undefined:return arg;}});return generateMatrix(countVectorizedCol,countVectorizedRow,(col,row)=>{if(col>vectorizedColLimit-1||row>vectorizedRowLimit-1){return new NotAvailableError(_t("Array arguments to [[FUNCTION_NAME]] are of different size."));}
const singleCellComputeResult=formula(...getArgOffset(col,row));return isMatrix(singleCellComputeResult)?singleCellComputeResult[0][0]:singleCellComputeResult;});}
function conditionalVisitArgs(args,cellCb,dataCb){for(const arg of args){if(isMatrix(arg)){const lenRow=arg.length;const lenCol=arg[0].length;for(let y=0;y<lenCol;y++){for(let x=0;x<lenRow;x++){if(!cellCb(arg[x][y]??undefined))
return;}}}
else{if(!dataCb(arg))
return;}}}
function conditionalVisitBoolean(args,cb){return conditionalVisitArgs(args,(arg)=>{const argValue=arg?.value;if(typeof argValue==="boolean"){return cb(argValue);}
if(typeof argValue==="number"){return cb(argValue?true:false);}
if(isEvaluationError(argValue)){throw arg;}
return true;},(arg)=>{if(arg!==undefined&&arg.value!==null){return cb(strictToBoolean(arg));}
return true;});}
function getPredicate(descr,locale){let operator;let operand;let subString=descr.substring(0,2);if(subString==="<="||subString===">="||subString==="<>"){operator=subString;operand=descr.substring(2);}
else{subString=descr.substring(0,1);if(subString==="<"||subString===">"||subString==="="){operator=subString;operand=descr.substring(1);}
else{operator="=";operand=descr;}}
if(isNumber(operand,locale)||isDateTime(operand,locale)){operand=toNumber(operand,locale);}
else if(operand==="TRUE"||operand==="FALSE"){operand=toBoolean(operand);}
return{operator,operand};}
const wildcardToRegExp=memoize(function wildcardToRegExp(operand){if(operand==="*"){return/.+/;}
let exp="";let predecessor="";for(const char of operand){if(char==="?"&&predecessor!=="~"){exp+=".";}
else if(char==="*"&&predecessor!=="~"){exp+=".*";}
else{if(char==="*"||char==="?"){exp=exp.slice(0,-1);}
if(["^",".","[","]","$","(",")","*","+","?","|","{","}","\\"].includes(char)){exp+="\\";}
exp+=char;}
predecessor=char;}
return new RegExp("^"+exp+"$","i");});function evaluatePredicate(value="",criterion,locale){const{operator,operand}=criterion;if(operand===undefined||value===null||operand===null){return false;}
if(typeof operand==="number"&&operator==="="){if(typeof value==="string"&&(isNumber(value,locale)||isDateTime(value,locale))){return toNumber(value,locale)===operand;}
return value===operand;}
if(operator==="<>"||operator==="="){let result;if(typeof value===typeof operand){if(typeof value==="string"&&typeof operand==="string"){result=wildcardToRegExp(operand).test(value);}
else{result=value===operand;}}
else{result=false;}
return operator==="="?result:!result;}
if(typeof value===typeof operand){switch(operator){case"<":return value<operand;case">":return value>operand;case"<=":return value<=operand;case">=":return value>=operand;}}
return false;}
function visitMatchingRanges(args,cb,locale,isQuery=false){const countArg=args.length;if(countArg%2===1){throw new EvaluationError(_t("Function [[FUNCTION_NAME]] expects criteria_range and criterion to be in pairs."));}
const firstArg=toMatrix(args[0]);const dimRow=firstArg.length;const dimCol=firstArg[0].length;const predicates=[];for(let i=0;i<countArg-1;i+=2){const criteriaRange=toMatrix(args[i]);if(criteriaRange.length!==dimRow||criteriaRange[0].length!==dimCol){throw new EvaluationError(_t("Function [[FUNCTION_NAME]] expects criteria_range to have the same dimension"));}
const description=toString(args[i+1]);const predicate=getPredicate(description,locale);if(isQuery&&typeof predicate.operand==="string"){predicate.operand+="*";}
predicates.push(predicate);}
for(let i=0;i<dimRow;i++){for(let j=0;j<dimCol;j++){let validatedPredicates=true;for(let k=0;k<countArg-1;k+=2){const criteriaValue=toMatrix(args[k])[i][j].value;const criterion=predicates[k/2];validatedPredicates=evaluatePredicate(criteriaValue??undefined,criterion,locale);if(!validatedPredicates){break;}}
if(validatedPredicates){cb(i,j);}}}}
function dichotomicSearch(data,target,mode,sortOrder,rangeLength,getValueInData){if(target===undefined||target.value===null){return-1;}
if(isEvaluationError(target.value)){throw target;}
const _target=normalizeValue(target.value);const targetType=typeof _target;let matchVal=undefined;let matchValIndex=undefined;let indexLeft=0;let indexRight=rangeLength-1;let indexMedian;let currentIndex;let currentVal;let currentType;const getValue=sortOrder==="desc"?(i)=>normalizeValue(getValueInData(data,rangeLength-i-1)):(i)=>normalizeValue(getValueInData(data,i));while(indexRight-indexLeft>=0){indexMedian=Math.floor((indexLeft+indexRight)/2);currentIndex=indexMedian;currentVal=getValue(currentIndex);currentType=typeof currentVal;while(indexLeft<currentIndex&&targetType!==currentType){currentIndex--;currentVal=getValue(currentIndex);currentType=typeof currentVal;}
if(currentType!==targetType||currentVal===undefined||currentVal===null){indexLeft=indexMedian+1;continue;}
if(mode==="strict"&&currentVal===_target){matchVal=currentVal;matchValIndex=currentIndex;}
else if(mode==="nextSmaller"&&currentVal<=_target){if(matchVal===undefined||matchVal===null||matchVal<currentVal||(matchVal===currentVal&&matchValIndex<currentIndex)){matchVal=currentVal;matchValIndex=currentIndex;}}
else if(mode==="nextGreater"&&currentVal>=_target){if(matchVal===undefined||matchVal>currentVal||(matchVal===currentVal&&matchValIndex<currentIndex)){matchVal=currentVal;matchValIndex=currentIndex;}}
if(currentVal>_target||(mode==="strict"&&currentVal===_target)){indexRight=currentIndex-1;}
else{indexLeft=indexMedian+1;}}
if(matchValIndex===undefined){return-1;}
return sortOrder==="desc"?rangeLength-matchValIndex-1:matchValIndex;}
function linearSearch(data,target,mode,numberOfValues,getValueInData,lookupCaches,reverseSearch=false){if(target===undefined||target.value===null){return-1;}
if(isEvaluationError(target.value)){throw target;}
const _target=normalizeValue(target.value);const getValue=reverseSearch?(data,i)=>normalizeValue(getValueInData(data,numberOfValues-i-1)):(data,i)=>normalizeValue(getValueInData(data,i));const isNotWildcardTarget=mode!=="wildcard"||typeof _target!=="string"||!(_target.includes("*")||_target.includes("?"));if(lookupCaches&&isNotWildcardTarget){const searchMode=reverseSearch?"reverseSearch":"forwardSearch";let cache=lookupCaches[searchMode].get(data);if(cache===undefined){cache=new Map();for(let i=0;i<numberOfValues;i++){const value=getValue(data,i)??null;if(!cache.has(value)){cache.set(value,i);}}
lookupCaches[searchMode].set(data,cache);}
if(cache.has(_target)){const resultIndex=cache.get(_target);return reverseSearch?numberOfValues-resultIndex-1:resultIndex;}
if(mode==="strict"){return-1;}}
const resultIndex=_linearSearch(data,_target,mode,numberOfValues,getValue);return reverseSearch&&resultIndex!==-1?numberOfValues-resultIndex-1:resultIndex;}
function _linearSearch(data,_target,mode,numberOfValues,getNormalizeValue){let indexMatchTarget=(i)=>{return getNormalizeValue(data,i)===_target;};if(mode==="wildcard"&&typeof _target==="string"&&(_target.includes("*")||_target.includes("?"))){const regExp=wildcardToRegExp(_target);indexMatchTarget=(i)=>{const value=getNormalizeValue(data,i);if(typeof value==="string"){return regExp.test(value);}
return false;};}
let closestMatch=undefined;let closestMatchIndex=-1;if(mode==="nextSmaller"){indexMatchTarget=(i)=>{const value=getNormalizeValue(data,i);if((!closestMatch&&compareCellValues(_target,value)>=0)||(compareCellValues(_target,value)>=0&&compareCellValues(value,closestMatch)>0)){closestMatch=value;closestMatchIndex=i;}
return value===_target;};}
if(mode==="nextGreater"){indexMatchTarget=(i)=>{const value=getNormalizeValue(data,i);if((!closestMatch&&compareCellValues(_target,value)<=0)||(compareCellValues(_target,value)<=0&&compareCellValues(value,closestMatch)<0)){closestMatch=value;closestMatchIndex=i;}
return value===_target;};}
for(let i=0;i<numberOfValues;i++){if(indexMatchTarget(i)){return i;}}
return closestMatchIndex;}
function normalizeValue(value){return typeof value==="string"?normalizeString(value):value;}
function compareCellValues(left,right){let typeOrder=SORT_TYPES_ORDER.indexOf(typeof left)-SORT_TYPES_ORDER.indexOf(typeof right);if(typeOrder===0){if(typeof left==="string"&&typeof right==="string"){typeOrder=left.localeCompare(right);}
else if(typeof left==="number"&&typeof right==="number"){typeOrder=left-right;}
else if(typeof left==="boolean"&&typeof right==="boolean"){typeOrder=Number(left)-Number(right);}}
return typeOrder;}
function toMatrix(data){if(data===undefined){return[[]];}
return isMatrix(data)?data:[[data]];}
function flattenRowFirst(items,callback){return reduceAny(items,(array,val)=>{array.push(callback(val));return array;},[],"rowFirst");}
function isDataNonEmpty(data){if(data===undefined){return false;}
const{value}=data;if(value===null||value===""){return false;}
return true;}
function tokenizeFormat(str){const chars=new TokenizingChars(str);const result=[];let currentFormatPart=[];result.push(currentFormatPart);while(!chars.isOver()){if(chars.current===";"){currentFormatPart=[];result.push(currentFormatPart);chars.shift();continue;}
const token=tokenizeDigit(chars)||tokenizeString$1(chars)||tokenizeEscapedChars(chars)||tokenizeThousandsSeparator(chars)||tokenizeDecimalPoint(chars)||tokenizePercent(chars)||tokenizeDatePart(chars)||tokenizeTextPlaceholder(chars)||tokenizeRepeatedChar(chars);if(!token){throw new Error("Unknown token at "+chars.remaining());}
currentFormatPart.push(token);}
return result;}
function tokenizeString$1(chars){let enfOfStringChar;if(chars.current==='"'){chars.shift();enfOfStringChar='"';}
else if(chars.currentStartsWith("[$")){chars.advanceBy(2);enfOfStringChar="]";}
if(!enfOfStringChar){return null;}
let letters="";while(chars.current&&chars.current!==enfOfStringChar){letters+=chars.shift();}
if(chars.current===enfOfStringChar){chars.shift();}
else{throw new Error("Unterminated string in format");}
return{type:"STRING",value:letters,};}
const alwaysEscapedCharsInFormat=new Set("$+-/():!^&~{}<>= ");function tokenizeEscapedChars(chars){if(chars.current==="\\"){chars.shift();const escapedChar=chars.shift();if(!escapedChar){throw new Error("Unexpected end of format string");}
return{type:"CHAR",value:escapedChar,};}
if(alwaysEscapedCharsInFormat.has(chars.current)){return{type:"CHAR",value:chars.shift(),};}
return null;}
function tokenizeThousandsSeparator(chars){if(chars.current===","){chars.shift();return{type:"THOUSANDS_SEPARATOR",value:","};}
return null;}
function tokenizeTextPlaceholder(chars){if(chars.current==="@"){chars.shift();return{type:"TEXT_PLACEHOLDER",value:"@"};}
return null;}
function tokenizeDecimalPoint(chars){if(chars.current==="."){chars.shift();return{type:"DECIMAL_POINT",value:"."};}
return null;}
function tokenizePercent(chars){if(chars.current==="%"){chars.shift();return{type:"PERCENT",value:"%"};}
return null;}
function tokenizeDigit(chars){if(chars.current==="0"||chars.current==="#"){const value=chars.current;chars.shift();return{type:"DIGIT",value};}
return null;}
const dateSymbols=new Set("dmqyhsa");function tokenizeDatePart(chars){if(!dateSymbols.has(chars.current)){return null;}
const char=chars.current;let value="";while(chars.current===char){value+=chars.shift();}
return{type:"DATE_PART",value};}
function tokenizeRepeatedChar(chars){if(chars.current!=="*"){return null;}
chars.shift();const repeatedChar=chars.shift();if(!repeatedChar){throw new Error("Unexpected end of format string");}
return{type:"REPEATED_CHAR",value:repeatedChar,};}
const MAX_DECIMAL_PLACES=20;const internalFormatCache={};function parseFormat(formatString){let internalFormat=internalFormatCache[formatString];if(internalFormat===undefined){internalFormat=convertFormatToInternalFormat(formatString);internalFormatCache[formatString]=internalFormat;}
return internalFormat;}
function convertFormatToInternalFormat(format){const formatParts=tokenizeFormat(format);for(const part of formatParts){const repeatedCharTokens=part.filter((token)=>token.type==="REPEATED_CHAR");for(const repeatedCharToken of repeatedCharTokens.slice(1)){repeatedCharToken.type="CHAR";}}
const positiveFormat=parseDateFormatTokens(formatParts[0])||parseNumberFormatTokens(formatParts[0])||tokensToTextInternalFormat(formatParts[0]);if(!positiveFormat){throw new Error("Invalid first format part of: "+format);}
if(formatParts.length>1&&positiveFormat.type==="text"){throw new Error("The first format in a multi-part format must be a number format: "+format);}
const negativeFormat=parseDateFormatTokens(formatParts[1])||parseNumberFormatTokens(formatParts[1]);if(formatParts[1]?.length&&!negativeFormat){throw new Error("Invalid second format part of: "+format);}
const zeroFormat=parseDateFormatTokens(formatParts[2])||parseNumberFormatTokens(formatParts[2]);if(formatParts[2]?.length&&!zeroFormat){throw new Error("Invalid third format part of: "+format);}
const textFormat=tokensToTextInternalFormat(formatParts[3]);if(formatParts[3]?.length&&!textFormat){throw new Error("Invalid fourth format part of: "+format);}
return{positive:positiveFormat,negative:negativeFormat,zero:zeroFormat,text:textFormat};}
function areValidDateFormatTokens(tokens){return tokens.every((token)=>token.type==="DATE_PART"||token.type==="DECIMAL_POINT"||token.type==="THOUSANDS_SEPARATOR"||token.type==="STRING"||token.type==="CHAR"||token.type==="REPEATED_CHAR");}
function areValidNumberFormatTokens(tokens){return tokens.every((token)=>token.type==="DIGIT"||token.type==="DECIMAL_POINT"||token.type==="THOUSANDS_SEPARATOR"||token.type==="PERCENT"||token.type==="STRING"||token.type==="CHAR"||token.type==="REPEATED_CHAR");}
function areValidTextFormatTokens(tokens){return tokens.every((token)=>token.type==="STRING"||token.type==="TEXT_PLACEHOLDER"||token.type==="CHAR"||token.type==="REPEATED_CHAR");}
function parseNumberFormatTokens(tokens){if(!tokens||!areValidNumberFormatTokens(tokens)){return undefined;}
const integerPart=[];let decimalPart=undefined;let parsedPart=integerPart;let percentSymbols=0;let magnitude=0;let lastIndexOfDigit=tokens.findLastIndex((token)=>token.type==="DIGIT");let hasThousandSeparator=false;let numberOfDecimalsDigits=0;for(let i=0;i<tokens.length;i++){const token=tokens[i];switch(token.type){case"DIGIT":if(parsedPart===integerPart){parsedPart.push(token);}
else if(numberOfDecimalsDigits<MAX_DECIMAL_PLACES){parsedPart.push(token);numberOfDecimalsDigits++;}
break;case"DECIMAL_POINT":if(parsedPart===integerPart){decimalPart=[];parsedPart=decimalPart;}
else{throw new Error("Multiple decimal points in a number format");}
break;case"REPEATED_CHAR":case"CHAR":case"STRING":parsedPart.push(token);break;case"PERCENT":percentSymbols++;parsedPart.push(token);break;case"THOUSANDS_SEPARATOR":if(i-1===lastIndexOfDigit){magnitude+=1;lastIndexOfDigit++;parsedPart.push(token);}
else if(tokens[i+1]?.type==="DIGIT"&&tokens[i-1]?.type==="DIGIT"){if(parsedPart===integerPart){hasThousandSeparator=true;}
parsedPart.push(token);}
else{parsedPart.push({type:"CHAR",value:","});}
break;}}
return{type:"number",integerPart,decimalPart,percentSymbols,thousandsSeparator:hasThousandSeparator,magnitude,};}
function parseDateFormatTokens(tokens){const internalFormat=tokens&&areValidDateFormatTokens(tokens)?{type:"date",tokens}:undefined;if(!internalFormat){return undefined;}
if(internalFormat.tokens.length&&internalFormat.tokens.every((token)=>token.type==="DATE_PART"&&token.value==="a")){throw new Error("Invalid date format");}
const dateTokens=internalFormat.tokens.map((token)=>{if(token.type==="THOUSANDS_SEPARATOR"||token.type==="DECIMAL_POINT"){return{type:"CHAR",value:token.value};}
return token;});const convertedTokens=convertTokensToMinutesInDateFormat(dateTokens);return{type:"date",tokens:convertedTokens};}
function tokensToTextInternalFormat(tokens){return tokens&&areValidTextFormatTokens(tokens)?{type:"text",tokens}:undefined;}
function convertTokensToMinutesInDateFormat(tokens){const dateParts=tokens.filter((token)=>token.type==="DATE_PART");for(let i=0;i<dateParts.length;i++){if(!dateParts[i].value.startsWith("m")||dateParts[i].value.length>2){continue;}
if(dateParts[i-1]?.value.startsWith("h")||dateParts[i+1]?.value.startsWith("s")){dateParts[i].value=dateParts[i].value.replaceAll("m","M");}}
return tokens;}
function convertInternalFormatToFormat(internalFormat){return[internalFormatPartToFormat(internalFormat.positive),internalFormatPartToFormat(internalFormat.negative),internalFormatPartToFormat(internalFormat.zero),internalFormatPartToFormat(internalFormat.text),].filter(isDefined).join(";");}
function internalFormatPartToFormat(internalFormat){if(!internalFormat){return undefined;}
let format="";const tokens=internalFormat.type!=="number"?internalFormat.tokens:numberInternalFormatToTokenList(internalFormat);for(const token of tokens){switch(token.type){case"STRING":format+=`[$${token.value}]`;break;case"CHAR":format+=shouldEscapeFormatChar(token.value)?`\\${token.value}`:token.value;break;case"REPEATED_CHAR":format+="*"+token.value;break;default:format+=token.value;}}
return format;}
function numberInternalFormatToTokenList(internalFormat){const tokens=[...internalFormat.integerPart];if(internalFormat.decimalPart){tokens.push({type:"DECIMAL_POINT",value:"."});tokens.push(...internalFormat.decimalPart);}
return tokens;}
function shouldEscapeFormatChar(char){return!alwaysEscapedCharsInFormat.has(char);}
const DEFAULT_FORMAT_NUMBER_OF_DIGITS=11;const REPEATED_CHAR_PLACEHOLDER="REPEATED_CHAR_PLACEHOLDER_";const MONTHS={0:_t("January"),1:_t("February"),2:_t("March"),3:_t("April"),4:_t("May"),5:_t("June"),6:_t("July"),7:_t("August"),8:_t("September"),9:_t("October"),10:_t("November"),11:_t("December"),};const DAYS$1={0:_t("Sunday"),1:_t("Monday"),2:_t("Tuesday"),3:_t("Wednesday"),4:_t("Thursday"),5:_t("Friday"),6:_t("Saturday"),};function formatValue(value,{format,locale,formatWidth}){if(typeof value==="boolean"){value=value?"TRUE":"FALSE";}
switch(typeof value){case"string":{if(value.includes('\\"')){value=value.replaceAll(/\\"/g,'"');}
if(!format){return value;}
const internalFormat=parseFormat(format);const formatToApply=internalFormat.text||internalFormat.positive;if(!formatToApply||formatToApply.type!=="text"){return value;}
return applyTextInternalFormat(value,formatToApply,formatWidth);}
case"number":if(!format){format=createDefaultFormat(value);}
const internalFormat=parseFormat(format);if(internalFormat.positive.type==="text"){return applyTextInternalFormat(value.toString(),internalFormat.positive,formatWidth);}
let formatToApply=internalFormat.positive;if(value<0&&internalFormat.negative){formatToApply=internalFormat.negative;value=-value;}
else if(value===0&&internalFormat.zero){formatToApply=internalFormat.zero;}
if(formatToApply.type==="date"){return repeatCharToFitWidth(applyDateTimeFormat(value,formatToApply),formatWidth);}
const isNegative=value<0;const formatted=repeatCharToFitWidth(applyInternalNumberFormat(Math.abs(value),formatToApply,locale),formatWidth);return isNegative?"-"+formatted:formatted;case"object":return"";}}
function applyTextInternalFormat(value,internalFormat,formatWidth){let formattedValue="";for(const token of internalFormat.tokens){switch(token.type){case"TEXT_PLACEHOLDER":formattedValue+=value;break;case"CHAR":case"STRING":formattedValue+=token.value;break;case"REPEATED_CHAR":formattedValue+=REPEATED_CHAR_PLACEHOLDER+token.value;break;}}
return repeatCharToFitWidth(formattedValue,formatWidth);}
function repeatCharToFitWidth(formattedValue,formatWidth){const placeholderIndex=formattedValue.indexOf(REPEATED_CHAR_PLACEHOLDER);if(placeholderIndex===-1){return formattedValue;}
const prefix=formattedValue.slice(0,placeholderIndex);const suffix=formattedValue.slice(placeholderIndex+REPEATED_CHAR_PLACEHOLDER.length+1);const repeatedChar=formattedValue[placeholderIndex+REPEATED_CHAR_PLACEHOLDER.length];function getTimesToRepeat(){if(!formatWidth){return{timesToRepeat:0,padding:""};}
const widthTaken=formatWidth.measureText(prefix+suffix);const charWidth=formatWidth.measureText(repeatedChar);const availableWidth=formatWidth.availableWidth-widthTaken;if(availableWidth<=0){return{timesToRepeat:0,padding:""};}
const timesToRepeat=Math.floor(availableWidth/charWidth);const remainingWidth=availableWidth-timesToRepeat*charWidth;const paddingChar="\u2009";const paddingWidth=formatWidth.measureText(paddingChar);const padding=paddingChar.repeat(Math.floor(remainingWidth/paddingWidth));return{timesToRepeat,padding};}
const{timesToRepeat,padding}=getTimesToRepeat();return prefix+repeatedChar.repeat(timesToRepeat)+padding+suffix;}
function applyInternalNumberFormat(value,format,locale){if(value===Infinity){return"∞"+(format.percentSymbols?"%":"");}
const multiplier=format.percentSymbols*2-format.magnitude*3;value=value*10**multiplier;let maxDecimals=0;if(format.decimalPart!==undefined){maxDecimals=format.decimalPart.filter((token)=>token.type==="DIGIT").length;}
const{integerDigits,decimalDigits}=splitNumber(Math.abs(value),maxDecimals);let formattedValue=applyIntegerFormat(integerDigits,format,format.thousandsSeparator?locale.thousandsSeparator:undefined);if(format.decimalPart!==undefined){formattedValue+=locale.decimalSeparator+applyDecimalFormat(decimalDigits||"",format);}
return formattedValue;}
function applyIntegerFormat(integerDigits,internalFormat,thousandsSeparator){let tokens=internalFormat.integerPart;if(!tokens.some((token)=>token.type==="DIGIT")){tokens=[...tokens,{type:"DIGIT",value:"#"}];}
if(integerDigits==="0"){integerDigits="";}
let formattedInteger="";const firstDigitIndex=tokens.findIndex((token)=>token.type==="DIGIT");let indexInIntegerString=integerDigits.length-1;function appendDigitToFormattedValue(digit,digitType){if(digitType==="0"){digit=digit||"0";}
if(!digit)
return;const digitIndex=integerDigits.length-1-indexInIntegerString;if(thousandsSeparator&&digitIndex>0&&digitIndex%3===0){formattedInteger=digit+thousandsSeparator+formattedInteger;}
else{formattedInteger=digit+formattedInteger;}}
for(let i=tokens.length-1;i>=0;i--){const token=tokens[i];switch(token.type){case"DIGIT":const digit=integerDigits[indexInIntegerString];appendDigitToFormattedValue(digit,token.value);indexInIntegerString--;if(firstDigitIndex===i){while(indexInIntegerString>=0){appendDigitToFormattedValue(integerDigits[indexInIntegerString],"0");indexInIntegerString--;}}
break;case"THOUSANDS_SEPARATOR":break;case"REPEATED_CHAR":formattedInteger=REPEATED_CHAR_PLACEHOLDER+token.value+formattedInteger;break;default:formattedInteger=token.value+formattedInteger;break;}}
return formattedInteger;}
function applyDecimalFormat(decimalDigits,internalFormat){if(!internalFormat.decimalPart){return"";}
let formattedDecimals="";let indexInDecimalString=0;for(const token of internalFormat.decimalPart){switch(token.type){case"DIGIT":const digit=token.value==="#"?decimalDigits[indexInDecimalString]||"":decimalDigits[indexInDecimalString]||"0";formattedDecimals+=digit;indexInDecimalString++;break;case"THOUSANDS_SEPARATOR":break;case"REPEATED_CHAR":formattedDecimals+=REPEATED_CHAR_PLACEHOLDER+token.value;break;default:formattedDecimals+=token.value;break;}}
return formattedDecimals;}
const numberRepresentation=[];function splitNumber(value,maxDecimals=MAX_DECIMAL_PLACES){const asString=value.toString();if(asString.includes("e"))
return splitNumberIntl(value,maxDecimals);if(Number.isInteger(value)){return{integerDigits:asString,decimalDigits:undefined};}
const indexOfDot=asString.indexOf(".");let integerDigits=asString.substring(0,indexOfDot);let decimalDigits=asString.substring(indexOfDot+1);if(maxDecimals===0){if(Number(decimalDigits[0])>=5){integerDigits=(Number(integerDigits)+1).toString();}
return{integerDigits,decimalDigits:undefined};}
if(decimalDigits.length>maxDecimals){const{integerDigits:roundedIntegerDigits,decimalDigits:roundedDecimalDigits}=limitDecimalDigits(decimalDigits,maxDecimals);decimalDigits=roundedDecimalDigits;if(roundedIntegerDigits!=="0"){integerDigits=(Number(integerDigits)+Number(roundedIntegerDigits)).toString();}}
return{integerDigits,decimalDigits:removeTrailingZeroes(decimalDigits||"")};}
function removeTrailingZeroes(numberString){let i=numberString.length-1;while(i>=0&&numberString[i]==="0"){i--;}
return numberString.slice(0,i+1)||undefined;}
const leadingZeroesRegexp=/^0+/;function limitDecimalDigits(decimalDigits,maxDecimals){let integerDigits="0";let resultDecimalDigits=decimalDigits;const slicedDecimalDigits=decimalDigits.slice(0,maxDecimals);const i=maxDecimals;if(Number(decimalDigits[i])<5){return{integerDigits,decimalDigits:slicedDecimalDigits};}
const leadingZeroes=slicedDecimalDigits.match(leadingZeroesRegexp)?.[0]||"";const slicedRoundedUp=(Number(slicedDecimalDigits)+1).toString();const withoutLeadingZeroes=slicedDecimalDigits.slice(leadingZeroes.length);const carryOver=slicedRoundedUp.length>withoutLeadingZeroes.length;if(carryOver&&!leadingZeroes){integerDigits="1";resultDecimalDigits=undefined;}
else if(carryOver){resultDecimalDigits=leadingZeroes.slice(0,-1)+slicedRoundedUp;}
else{resultDecimalDigits=leadingZeroes+slicedRoundedUp;}
return{integerDigits,decimalDigits:resultDecimalDigits};}
function splitNumberIntl(value,maxDecimals=MAX_DECIMAL_PLACES){let formatter=numberRepresentation[maxDecimals];if(!formatter){formatter=new Intl.NumberFormat("en-US",{maximumFractionDigits:maxDecimals,useGrouping:false,});numberRepresentation[maxDecimals]=formatter;}
const[integerDigits,decimalDigits]=formatter.format(value).split(".");return{integerDigits,decimalDigits};}
function numberToString(number,decimalSeparator){const{integerDigits,decimalDigits}=splitNumber(number,20);return decimalDigits?integerDigits+decimalSeparator+decimalDigits:integerDigits;}
const isDateTimeFormat=memoize(function isDateTimeFormat(format){if(!format){return false;}
try{const internalFormat=parseFormat(format);return internalFormat.positive.type==="date";}
catch(error){return false;}});function applyDateTimeFormat(value,internalFormat){const jsDate=numberToJsDate(value);const isMeridian=internalFormat.tokens.some((token)=>token.type==="DATE_PART"&&token.value==="a");let currentValue="";for(const token of internalFormat.tokens){switch(token.type){case"DATE_PART":currentValue+=formatJSDatePart(jsDate,token.value,isMeridian);break;case"REPEATED_CHAR":currentValue+=REPEATED_CHAR_PLACEHOLDER+token.value;break;default:currentValue+=token.value;break;}}
return currentValue;}
function formatJSDatePart(jsDate,tokenValue,isMeridian){switch(tokenValue){case"d":return jsDate.getDate();case"dd":return jsDate.getDate().toString().padStart(2,"0");case"ddd":return DAYS$1[jsDate.getDay()].slice(0,3);case"dddd":return DAYS$1[jsDate.getDay()].toString();case"m":return jsDate.getMonth()+1;case"mm":return String(jsDate.getMonth()+1).padStart(2,"0");case"mmm":return MONTHS[jsDate.getMonth()].slice(0,3);case"mmmm":return MONTHS[jsDate.getMonth()].toString();case"mmmmm":return MONTHS[jsDate.getMonth()].slice(0,1);case"qq":return _t("Q%(quarter)s",{quarter:jsDate.getQuarter()}).toString();case"qqqq":return _t("Quarter %(quarter)s",{quarter:jsDate.getQuarter()}).toString();case"yy":const fullYear=String(jsDate.getFullYear()).replace("-","").padStart(2,"0");return fullYear.slice(fullYear.length-2);case"yyyy":return jsDate.getFullYear();case"hhhh":const elapsedHours=Math.floor((jsDate.getTime()-INITIAL_1900_DAY.getTime())/(60*60*1000));return elapsedHours.toString();case"hh":const dateHours=jsDate.getHours();let hours=dateHours;if(isMeridian){hours=hours===0?12:hours>12?hours-12:hours;}
return hours.toString().padStart(2,"0");case"MM":return jsDate.getMinutes().toString().padStart(2,"0");case"ss":return jsDate.getSeconds().toString().padStart(2,"0");case"a":return jsDate.getHours()>=12?"PM":"AM";default:throw new Error(`invalid date format token: ${tokenValue}`);}}
const getDecimalNumberRegex=memoize(function getDecimalNumberRegex(locale){return new RegExp(`[0-9]+${escapeRegExp(locale.decimalSeparator)}[0-9]`);});function createDefaultFormat(value){let{integerDigits,decimalDigits}=splitNumber(value);if(!decimalDigits)
return"0";const digitsInIntegerPart=integerDigits.replace("-","").length;if(digitsInIntegerPart+2>DEFAULT_FORMAT_NUMBER_OF_DIGITS){return"0";}
const spaceForDecimalsDigits=DEFAULT_FORMAT_NUMBER_OF_DIGITS-digitsInIntegerPart-1;({decimalDigits}=splitNumber(value,Math.min(spaceForDecimalsDigits,decimalDigits.length)));return decimalDigits?"0."+"0".repeat(decimalDigits.length):"0";}
function detectDateFormat(content,locale){if(!isDateTime(content,locale)){return undefined;}
const internalDate=parseDateTime(content,locale);return internalDate.format;}
function detectNumberFormat(content){const digitBase=content.includes(".")?"0.00":"0";const matchedCurrencies=content.match(/[\$€]/);if(matchedCurrencies){const matchedFirstDigit=content.match(/[\d]/);const currency="[$"+matchedCurrencies.values().next().value+"]";if(matchedFirstDigit.index<matchedCurrencies.index){return"#,##"+digitBase+currency;}
return currency+"#,##"+digitBase;}
if(content.includes("%")){return digitBase+"%";}
return undefined;}
function createCurrencyFormat(currency){const decimalPlaces=currency.decimalPlaces??2;const position=currency.position??"before";const code=currency.code??"";const symbol=currency.symbol??"";const decimalRepresentation=decimalPlaces?"."+"0".repeat(decimalPlaces):"";const numberFormat="#,##0"+decimalRepresentation;let textExpression=`${code} ${symbol}`.trim();if(position==="after"&&code){textExpression=" "+textExpression;}
return insertTextInFormat(textExpression,position,numberFormat);}
function createAccountingFormat(currency){const decimalPlaces=currency.decimalPlaces??2;const position=currency.position??"before";const code=currency.code??"";const symbol=currency.symbol??"";const decimalRepresentation=decimalPlaces?"."+"0".repeat(decimalPlaces):"";const numberFormat="#,##0"+decimalRepresentation;let textExpression=`${code} ${symbol}`.trim();if(position==="after"&&code){textExpression=" "+textExpression;}
const positivePart=insertTextInAccountingFormat(textExpression,position,` ${numberFormat} `);const negativePart=insertTextInAccountingFormat(textExpression,position,`(${numberFormat})`);const zeroPart=insertTextInAccountingFormat(textExpression,position,"  -  ");return[positivePart,negativePart,zeroPart].join(";");}
function insertTextInAccountingFormat(text,position,format){const textExpression=`[$${text}]`;return position==="before"?textExpression+"* "+format:format+"* "+textExpression;}
function insertTextInFormat(text,position,format){const textExpression=`[$${text}]`;return position==="before"?textExpression+format:format+textExpression;}
function roundFormat(format){const multiPartFormat=parseFormat(format);const roundedInternalFormat={positive:_roundFormat(multiPartFormat.positive),negative:multiPartFormat.negative?_roundFormat(multiPartFormat.negative):undefined,zero:multiPartFormat.zero?_roundFormat(multiPartFormat.zero):undefined,text:multiPartFormat.text,};return convertInternalFormatToFormat(roundedInternalFormat);}
function _roundFormat(internalFormat){if(internalFormat.type!=="number"||!internalFormat.decimalPart){return internalFormat;}
const nonDigitDecimalPart=internalFormat.decimalPart.filter((token)=>token.type!=="DIGIT");return{...internalFormat,decimalPart:undefined,integerPart:[...internalFormat.integerPart,...nonDigitDecimalPart],};}
function humanizeNumber({value,format},locale){const numberFormat=formatLargeNumber({value,format,},undefined,locale);return formatValue(value,{format:numberFormat,locale});}
function formatLargeNumber(arg,unit,locale){let value=0;try{value=Math.abs(toNumber(arg?.value,locale));}
catch(e){return"";}
const format=arg?.format;if(unit!==undefined){const postFix=unit?.value;switch(postFix){case"k":return createLargeNumberFormat(format,1,"k");case"m":return createLargeNumberFormat(format,2,"m");case"b":return createLargeNumberFormat(format,3,"b");default:throw new EvaluationError(_t("The formatting unit should be 'k', 'm' or 'b'."));}}
if(value<1e5){return createLargeNumberFormat(format,0,"");}
else if(value<1e8){return createLargeNumberFormat(format,1,"k");}
else if(value<1e11){return createLargeNumberFormat(format,2,"m");}
return createLargeNumberFormat(format,3,"b");}
function createLargeNumberFormat(format,magnitude,postFix,locale){const multiPartFormat=parseFormat(format||"#,##0");const roundedInternalFormat={positive:_createLargeNumberFormat(multiPartFormat.positive,magnitude,postFix),negative:multiPartFormat.negative?_createLargeNumberFormat(multiPartFormat.negative,magnitude,postFix):undefined,zero:multiPartFormat.zero?_createLargeNumberFormat(multiPartFormat.zero,magnitude,postFix):undefined,text:multiPartFormat.text,};return convertInternalFormatToFormat(roundedInternalFormat);}
function _createLargeNumberFormat(format,magnitude,postFix){if(format.type!=="number"){return format;}
const postFixToken={type:"STRING",value:postFix};let newIntegerPart=[...format.integerPart];const lastDigitIndex=newIntegerPart.findLastIndex((token)=>token.type==="DIGIT");if(lastDigitIndex===-1){throw new Error("Cannot create a large number format from a format with no digit.");}
while(newIntegerPart[lastDigitIndex+1]?.type==="THOUSANDS_SEPARATOR"){newIntegerPart=removeIndexesFromArray(newIntegerPart,[lastDigitIndex+1]);}
const tokenAfterDigits=newIntegerPart[lastDigitIndex+1];if(tokenAfterDigits?.type==="STRING"&&["m","k","b"].includes(tokenAfterDigits.value)){newIntegerPart=replaceItemAtIndex(newIntegerPart,postFixToken,lastDigitIndex+1);}
else{newIntegerPart=insertItemsAtIndex(newIntegerPart,[postFixToken],lastDigitIndex+1);}
if(magnitude>0){newIntegerPart=insertItemsAtIndex(newIntegerPart,Array(magnitude).fill({type:"THOUSANDS_SEPARATOR",value:","}),lastDigitIndex+1);}
const missingPercents=format.percentSymbols-newIntegerPart.filter((tk)=>tk.type==="PERCENT").length;newIntegerPart.push(...new Array(missingPercents).fill({type:"PERCENT",value:"%"}));return{...format,integerPart:newIntegerPart,decimalPart:undefined,magnitude};}
function changeDecimalPlaces(format,step){const multiPartFormat=parseFormat(format);const newInternalFormat={positive:_changeDecimalPlace(multiPartFormat.positive,step),negative:multiPartFormat.negative?_changeDecimalPlace(multiPartFormat.negative,step):undefined,zero:multiPartFormat.zero?_changeDecimalPlace(multiPartFormat.zero,step):undefined,text:multiPartFormat.text,};return convertInternalFormatToFormat(parseFormat(convertInternalFormatToFormat(newInternalFormat)));}
function _changeDecimalPlace(format,step){if(format.type!=="number"){return format;}
return(step>0?addDecimalPlaces(format,step):removeDecimalPlaces(format,Math.abs(step)));}
function removeDecimalPlaces(format,step){let decimalPart=format.decimalPart;if(!decimalPart){return format;}
const indexesToRemove=[];let digitCount=0;for(let i=decimalPart.length-1;i>=0;i--){if(digitCount>=Math.abs(step)){break;}
if(decimalPart[i].type==="DIGIT"){digitCount++;indexesToRemove.push(i);}}
decimalPart=removeIndexesFromArray(decimalPart,indexesToRemove);if(decimalPart.some((token)=>token.type==="DIGIT")){return{...format,decimalPart};}
return{...format,decimalPart:undefined,integerPart:[...format.integerPart,...decimalPart],};}
function addDecimalPlaces(format,step){let integerPart=format.integerPart;let decimalPart=format.decimalPart;if(!decimalPart){const lastDigitIndex=integerPart.findLastIndex((token)=>token.type==="DIGIT");decimalPart=integerPart.slice(lastDigitIndex+1);integerPart=integerPart.slice(0,lastDigitIndex+1);}
const digitsToAdd=range(0,step).map(()=>({type:"DIGIT",value:"0"}));const lastDigitIndex=decimalPart.findLastIndex((token)=>token.type==="DIGIT");if(lastDigitIndex===-1){decimalPart=[...digitsToAdd,...decimalPart];}
else{decimalPart=insertItemsAtIndex(decimalPart,digitsToAdd,lastDigitIndex+1);}
return{...format,decimalPart,integerPart};}
function isExcelCompatible(format){const internalFormat=parseFormat(format);for(const part of[internalFormat.positive,internalFormat.negative,internalFormat.zero]){if(part&&part.type==="date"&&part.tokens.some((token)=>token.type==="DATE_PART"&&token.value.includes("q"))){return false;}}
return true;}
function isTextFormat(format){if(!format)
return false;try{const internalFormat=parseFormat(format);return internalFormat.positive.type==="text";}
catch{return false;}}
function evaluateLiteral(literalCell,localeFormat){const value=isTextFormat(localeFormat.format)&&literalCell.parsedValue!==null?literalCell.content:literalCell.parsedValue;const functionResult={value,format:localeFormat.format};return createEvaluatedCell(functionResult,localeFormat.locale);}
function parseLiteral(content,locale){if(content.startsWith("=")){throw new Error(`Cannot parse "${content}" because it's not a literal value. It's a formula`);}
if(content===""){return null;}
if(isNumber(content,DEFAULT_LOCALE)){return parseNumber(content,DEFAULT_LOCALE);}
const internalDate=parseDateTime(content,locale);if(internalDate){return internalDate.value;}
if(isBoolean(content)){return content.toUpperCase()==="TRUE";}
return content;}
function createEvaluatedCell(functionResult,locale=DEFAULT_LOCALE,cell){const link=detectLink(functionResult.value);if(!link){return _createEvaluatedCell(functionResult,locale,cell);}
const value=parseLiteral(link.label,locale);const format=functionResult.format||(typeof value==="number"?detectDateFormat(link.label,locale)||detectNumberFormat(link.label):undefined);const linkPayload={value,format,};return{..._createEvaluatedCell(linkPayload,locale,cell),link,};}
function _createEvaluatedCell(functionResult,locale,cell){let{value,format,message}=functionResult;format=cell?.format||format;const formattedValue=formatValue(value,{format,locale});if(isEvaluationError(value)){return errorCell(value,message);}
if(value===null){return emptyCell(format);}
if(isTextFormat(format)){return textCell(toString(value),format,formattedValue);}
if(typeof value==="number"){if(isDateTimeFormat(format||"")){return dateTimeCell(value,format,formattedValue);}
return numberCell(value,format,formattedValue);}
if(typeof value==="boolean"){return booleanCell(value,format,formattedValue);}
return textCell(value,format,formattedValue);}
function textCell(value,format,formattedValue){return{value,format,formattedValue,type:CellValueType.text,isAutoSummable:true,defaultAlign:"left",};}
function numberCell(value,format,formattedValue){return{value:value||0,format,formattedValue,type:CellValueType.number,isAutoSummable:true,defaultAlign:"right",};}
const emptyCell=memoize(function emptyCell(format){return{value:null,format,formattedValue:"",type:CellValueType.empty,isAutoSummable:true,defaultAlign:"left",};});function dateTimeCell(value,format,formattedValue){return{value,format,formattedValue,type:CellValueType.number,isAutoSummable:false,defaultAlign:"right",};}
function booleanCell(value,format,formattedValue){return{value,format,formattedValue,type:CellValueType.boolean,isAutoSummable:false,defaultAlign:"center",};}
function errorCell(value,message){return{value,formattedValue:value,message,type:CellValueType.error,isAutoSummable:false,defaultAlign:"center",};}
function toCriterionDateNumber(dateValue){const today=DateTime.now();switch(dateValue){case"today":return jsDateToNumber(today);case"yesterday":return jsDateToNumber(DateTime.fromTimestamp(today.setDate(today.getDate()-1)));case"tomorrow":return jsDateToNumber(DateTime.fromTimestamp(today.setDate(today.getDate()+1)));case"lastWeek":return jsDateToNumber(DateTime.fromTimestamp(today.setDate(today.getDate()-7)));case"lastMonth":return jsDateToNumber(DateTime.fromTimestamp(today.setMonth(today.getMonth()-1)));case"lastYear":return jsDateToNumber(DateTime.fromTimestamp(today.setFullYear(today.getFullYear()-1)));}}
function getDateNumberCriterionValues(criterion,locale){if("dateValue"in criterion&&criterion.dateValue!=="exactDate"){return[toCriterionDateNumber(criterion.dateValue)];}
return criterion.values.map((value)=>valueToDateNumber(value,locale));}
function getDateCriterionFormattedValues(values,locale){return values.map((valueStr)=>{if(valueStr.startsWith("=")){return valueStr;}
const value=parseLiteral(valueStr,locale);if(typeof value==="number"){return formatValue(value,{format:locale.dateFormat,locale});}
return"";});}
function recomputeZones(zones,zonesToRemove=[]){if(zones.length<=1&&zonesToRemove.length===0){return zones;}
const profilesStartingPosition=[0];const profiles=new Map([[0,[]]]);modifyProfiles(profilesStartingPosition,profiles,zones,false);modifyProfiles(profilesStartingPosition,profiles,zonesToRemove,true);return constructZonesFromProfiles(profilesStartingPosition,profiles);}
function modifyProfiles(profilesStartingPosition,profiles,zones,toRemove=false){for(const zone of zones){const leftValue=zone.left;const rightValue=zone.right===undefined?undefined:zone.right+1;const leftIndex=findIndexAndCreateProfile(profilesStartingPosition,profiles,leftValue,true,0);const rightIndex=findIndexAndCreateProfile(profilesStartingPosition,profiles,rightValue,false,leftIndex);for(let i=leftIndex;i<=rightIndex;i++){const profile=profiles.get(profilesStartingPosition[i]);modifyProfile(profile,zone,toRemove);}
removeContiguousProfiles(profilesStartingPosition,profiles,leftIndex,rightIndex);}}
function findIndexAndCreateProfile(profilesStartingPosition,profiles,value,searchLeft,startIndex){if(value===undefined){return profilesStartingPosition.length-1;}
const predecessorIndex=binaryPredecessorSearch(profilesStartingPosition,value,startIndex);if(value!==profilesStartingPosition[predecessorIndex]){profilesStartingPosition.splice(predecessorIndex+1,0,value);profiles.set(value,[...profiles.get(profilesStartingPosition[predecessorIndex])]);return searchLeft?predecessorIndex+1:predecessorIndex;}
return searchLeft?predecessorIndex:predecessorIndex-1;}
function modifyProfile(profile,zone,toRemove=false){const topValue=zone.top;const bottomValue=zone.bottom===undefined?undefined:zone.bottom+1;const newPoints=[];const topPredIndex=binaryPredecessorSearch(profile,topValue,0,false);if((topPredIndex%2!==0&&!toRemove)||(topPredIndex%2===0&&toRemove)){newPoints.push(topValue);}
if(bottomValue===undefined){profile.splice(topPredIndex+1);profile.push(...newPoints);return;}
const bottomSuccIndex=binarySuccessorSearch(profile,bottomValue,0,false);if((bottomSuccIndex%2===0&&!toRemove)||(bottomSuccIndex%2!==0&&toRemove)){newPoints.push(bottomValue);}
profile.splice(topPredIndex+1,bottomSuccIndex-topPredIndex-1,...newPoints);}
function removeContiguousProfiles(profilesStartingPosition,profiles,leftIndex,rightIndex){const start=leftIndex-1===-1?0:leftIndex-1;const end=rightIndex===profilesStartingPosition.length-1?rightIndex:rightIndex+1;for(let i=end;i>start;i--){if(deepEqualsArray(profiles.get(profilesStartingPosition[i]),profiles.get(profilesStartingPosition[i-1]))){profiles.delete(profilesStartingPosition[i]);profilesStartingPosition.splice(i,1);}}}
function constructZonesFromProfiles(profilesStartingPosition,profiles){const mergedZone=[];let pendingZones=[];for(let colIndex=0;colIndex<profilesStartingPosition.length;colIndex++){const left=profilesStartingPosition[colIndex];const profile=profiles.get(left);if(!profile||profile.length===0){mergedZone.push(...pendingZones);pendingZones=[];continue;}
let right=profilesStartingPosition[colIndex+1];if(right!==undefined){right--;}
const nextPendingZones=[];for(let i=0;i<profile.length;i+=2){const top=profile[i];let bottom=profile[i+1];if(bottom!==undefined){bottom--;}
const profileZone={top,left,bottom,right,hasHeader:(bottom===undefined&&top!==0)||(right===undefined&&left!==0),};let findCorrespondingZone=false;for(let j=pendingZones.length-1;j>=0;j--){const pendingZone=pendingZones[j];if(pendingZone.top===profileZone.top&&pendingZone.bottom===profileZone.bottom){pendingZone.right=profileZone.right;pendingZones.splice(j,1);nextPendingZones.push(pendingZone);findCorrespondingZone=true;break;}}
if(!findCorrespondingZone){nextPendingZones.push(profileZone);}}
mergedZone.push(...pendingZones);pendingZones=nextPendingZones;}
mergedZone.push(...pendingZones);return mergedZone;}
function binaryPredecessorSearch(arr,val,start=0,matchEqual=true){let end=arr.length-1;let result=-1;while(start<=end){const mid=Math.floor((start+end)/2);if(arr[mid]===val&&matchEqual){return mid;}
else if(arr[mid]<val){result=mid;start=mid+1;}
else{end=mid-1;}}
return result;}
function binarySuccessorSearch(arr,val,start=0,matchEqual=true){let end=arr.length-1;let result=arr.length;while(start<=end){const mid=Math.floor((start+end)/2);if(arr[mid]===val&&matchEqual){return mid;}
else if(arr[mid]>val){result=mid;end=mid-1;}
else{start=mid+1;}}
return result;}
function toZoneWithoutBoundaryChanges(xc){const chars=new TokenizingChars(xc);consumeSpaces(chars);const sheetSeparatorIndex=xc.indexOf("!");if(sheetSeparatorIndex!==-1){chars.advanceBy(sheetSeparatorIndex+1);}
const leftLetters=consumeLetters(chars);const leftNumbers=consumeDigits(chars);let top,bottom,left,right;let fullCol=false;let fullRow=false;let hasHeader=false;if(leftNumbers===-1){left=right=leftLetters-1;top=bottom=0;fullCol=true;}
else if(leftLetters===-1){top=bottom=leftNumbers-1;left=right=0;fullRow=true;}
else{left=right=leftLetters-1;top=bottom=leftNumbers-1;hasHeader=true;}
consumeSpaces(chars);if(chars.current===":"){chars.advanceBy(1);consumeSpaces(chars);const rightLetters=consumeLetters(chars);const rightNumbers=consumeDigits(chars);if(rightNumbers===-1){right=rightLetters-1;fullCol=true;}
else if(rightLetters===-1){bottom=rightNumbers-1;fullRow=true;}
else{right=rightLetters-1;bottom=rightNumbers-1;top=fullCol?bottom:top;left=fullRow?right:left;hasHeader=true;}}
const zone={top,left,bottom:fullCol?undefined:bottom,right:fullRow?undefined:right,};hasHeader=hasHeader&&(fullRow||fullCol);if(hasHeader){zone.hasHeader=hasHeader;}
return zone;}
function toUnboundedZone(xc){const zone=toZoneWithoutBoundaryChanges(xc);const orderedZone=reorderZone(zone);const bottom=orderedZone.bottom;const right=orderedZone.right;if((bottom!==undefined&&bottom>MAX_ROW)||(right!==undefined&&right>MAX_COL)){throw new Error(`Range string out of bounds: ${xc}`);}
if(bottom===undefined&&right===undefined){throw new Error("Wrong zone xc. The zone cannot be at the same time a full column and a full row");}
return orderedZone;}
function toZone(xc){const zone=toUnboundedZone(xc);if(zone.bottom===undefined||zone.right===undefined){throw new Error("This does not support unbounded ranges");}
return zone;}
function isXcValid(xc){const zone=toUnboundedZone(xc);return isZoneValid(zone);}
function isXcRepresentation(xc){try{return isXcValid(xc);}
catch(e){return false;}}
function isZoneValid(zone){const{bottom,top,left,right}=zone;if((bottom!==undefined&&isNaN(bottom))||isNaN(top)||isNaN(left)||(right!==undefined&&isNaN(right))){return false;}
return isZoneOrdered(zone)&&zone.top>=0&&zone.left>=0;}
function isZoneOrdered(zone){return((zone.bottom===undefined||(zone.bottom>=zone.top&&zone.bottom>=0))&&(zone.right===undefined||(zone.right>=zone.left&&zone.right>=0)));}
function zoneToXc(zone){const{top,bottom,left,right}=zone;const hasHeader="hasHeader"in zone?zone.hasHeader:false;const isOneCell=top===bottom&&left===right;if(bottom===undefined&&right!==undefined){return top===0&&!hasHeader?`${numberToLetters(left)}:${numberToLetters(right)}`:`${toXC(left, top)}:${numberToLetters(right)}`;}
else if(right===undefined&&bottom!==undefined){return left===0&&!hasHeader?`${top + 1}:${bottom + 1}`:`${toXC(left, top)}:${bottom + 1}`;}
else if(bottom!==undefined&&right!==undefined){return isOneCell?toXC(left,top):`${toXC(left, top)}:${toXC(right, bottom)}`;}
throw new Error("Bad zone format");}
function expandZoneOnInsertion(zone,start,base,position,quantity){const dimension=start==="left"?"columns":"rows";const baseElement=position==="before"?base-1:base;const end=start==="left"?"right":"bottom";const zoneEnd=zone[end];if(zone[start]<=baseElement&&zoneEnd&&zoneEnd>baseElement){return createAdaptedZone(zone,dimension,"RESIZE",quantity);}
if(baseElement<zone[start]){return createAdaptedZone(zone,dimension,"MOVE",quantity);}
return{...zone};}
function updateSelectionOnInsertion(selection,start,base,position,quantity){const dimension=start==="left"?"columns":"rows";const baseElement=position==="before"?base-1:base;const end=start==="left"?"right":"bottom";if(selection[start]<=baseElement&&selection[end]>baseElement){return createAdaptedZone(selection,dimension,"RESIZE",quantity);}
if(baseElement<selection[start]){return createAdaptedZone(selection,dimension,"MOVE",quantity);}
return{...selection};}
function updateSelectionOnDeletion(zone,start,elements){const end=start==="left"?"right":"bottom";let newStart=zone[start];let newEnd=zone[end];for(const removedElement of elements.sort((a,b)=>b-a)){if(zone[start]>removedElement){newStart--;newEnd--;}
if(zone[start]<removedElement&&zone[end]>=removedElement){newEnd--;}}
return{...zone,[start]:newStart,[end]:newEnd};}
function reduceZoneOnDeletion(zone,start,elements){const end=start==="left"?"right":"bottom";let newStart=zone[start];let newEnd=zone[end];const zoneEnd=zone[end];for(const removedElement of elements.sort((a,b)=>b-a)){if(zone[start]>removedElement){newStart--;if(newEnd!==undefined)
newEnd--;}
if(zoneEnd!==undefined&&newEnd!==undefined&&zone[start]<=removedElement&&zoneEnd>=removedElement){newEnd--;}}
if(newEnd!==undefined&&newStart>newEnd){return undefined;}
return{...zone,[start]:newStart,[end]:newEnd};}
function union(...zones){return{top:Math.min(...zones.map((zone)=>zone.top)),left:Math.min(...zones.map((zone)=>zone.left)),bottom:Math.max(...zones.map((zone)=>zone.bottom)),right:Math.max(...zones.map((zone)=>zone.right)),};}
function unionUnboundedZones(...zones){return{top:Math.min(...zones.map((zone)=>zone.top)),left:Math.min(...zones.map((zone)=>zone.left)),bottom:zones.some((zone)=>zone.bottom===undefined)?undefined:Math.max(...zones.map((zone)=>zone.bottom)),right:zones.some((zone)=>zone.right===undefined)?undefined:Math.max(...zones.map((zone)=>zone.right)),};}
function intersection(z1,z2){if(!overlap(z1,z2)){return undefined;}
return{top:Math.max(z1.top,z2.top),left:Math.max(z1.left,z2.left),bottom:Math.min(z1.bottom,z2.bottom),right:Math.min(z1.right,z2.right),};}
function isEqual(z1,z2){return(z1.left===z2.left&&z1.right===z2.right&&z1.top===z2.top&&z1.bottom===z2.bottom);}
function overlap(z1,z2){if(z1.bottom<z2.top||z2.bottom<z1.top){return false;}
if(z1.right<z2.left||z2.right<z1.left){return false;}
return true;}
function hasOverlappingZones(zones){for(let i=0;i<zones.length-1;i++){for(let j=i+1;j<zones.length;j++){if(overlap(zones[i],zones[j])){return true;}}}
return false;}
function isInside(col,row,zone){const{left,right,top,bottom}=zone;return col>=left&&col<=right&&row>=top&&row<=bottom;}
function isZoneInside(smallZone,biggerZone){return isEqual(union(biggerZone,smallZone),biggerZone);}
function zoneToDimension(zone){return{numberOfRows:zone.bottom-zone.top+1,numberOfCols:zone.right-zone.left+1,};}
function isOneDimensional(zone){const{numberOfCols,numberOfRows}=zoneToDimension(zone);return numberOfCols===1||numberOfRows===1;}
function excludeTopLeft(zone){const{top,left,bottom,right}=zone;if(getZoneArea(zone)===1){return[];}
const leftColumnZone={top:top+1,bottom,left,right:left,};if(right===left){return[leftColumnZone];}
const rightPartZone={top,bottom,left:left+1,right,};if(top===bottom){return[rightPartZone];}
return[leftColumnZone,rightPartZone];}
function aggregatePositionsToZones(positions){const result={};for(const position of positions){result[position.sheetId]??=[];result[position.sheetId].push(positionToZone(position));}
for(const sheetId in result){result[sheetId]=recomputeZones(result[sheetId]);}
return result;}
function positions(zone){const positions=[];const{left,right,top,bottom}=reorderZone(zone);for(const col of range(left,right+1)){for(const row of range(top,bottom+1)){positions.push({col,row});}}
return positions;}
function reorderZone(zone){if(zone.right!==undefined&&zone.left>zone.right){zone={...zone,left:zone.right,right:zone.left};}
if(zone.bottom!==undefined&&zone.top>zone.bottom){zone={...zone,top:zone.bottom,bottom:zone.top};}
return zone;}
function createAdaptedZone(zone,dimension,operation,by){const offsetX=dimension==="both"?by[0]:dimension==="columns"?by:0;const offsetY=dimension==="both"?by[1]:dimension==="rows"?by:0;const hasHeader="hasHeader"in zone?zone.hasHeader:false;let shouldStartBeMoved;if(isFullCol(zone)&&!hasHeader){shouldStartBeMoved=dimension!=="rows";}
else if(isFullRow(zone)&&!hasHeader){shouldStartBeMoved=dimension!=="columns";}
else{shouldStartBeMoved=true;}
const newZone={...zone};if(shouldStartBeMoved&&operation==="MOVE"){newZone["left"]+=offsetX;newZone["top"]+=offsetY;}
if(newZone["right"]!==undefined){newZone["right"]+=offsetX;}
if(newZone["bottom"]!==undefined){newZone["bottom"]+=offsetY;}
return newZone;}
function uniqueZones(zones){return zones.reverse().filter((zone,index,self)=>index===self.findIndex((z)=>z.top===zone.top&&z.bottom===zone.bottom&&z.left===zone.left&&z.right===zone.right)).reverse();}
function mergeOverlappingZones(zones){return zones.reduce((dissociatedZones,zone)=>{const nextIndex=dissociatedZones.length;for(let i=0;i<nextIndex;i++){if(overlap(dissociatedZones[i],zone)){dissociatedZones[i]=union(dissociatedZones[i],zone);return dissociatedZones;}}
dissociatedZones[nextIndex]=zone;return dissociatedZones;},[]);}
function findCellInNewZone(oldZone,currentZone){let col,row;const{left:oldLeft,right:oldRight,top:oldTop,bottom:oldBottom}=oldZone;const{left,right,top,bottom}=currentZone;if(left!==oldLeft){col=left;}
else if(right!==oldRight){col=right;}
else{col=left;}
if(top!==oldTop){row=top;}
else if(bottom!==oldBottom){row=bottom;}
else{row=top;}
return{col,row};}
function positionToZone(position){return{left:position.col,right:position.col,top:position.row,bottom:position.row};}
function zoneToTopLeft(zone){return{...zone,right:zone.left,bottom:zone.top};}
function isFullRow(zone){return zone.right===undefined;}
function isFullCol(zone){return zone.bottom===undefined;}
function getZoneArea(zone){return(zone.bottom-zone.top+1)*(zone.right-zone.left+1);}
function doesZoneCrossFrozenPane(zone,xSplit,ySplit){return((zone.left<xSplit&&xSplit<=zone.right)||(zone.top<ySplit&&ySplit<=zone.bottom));}
function doesAnyZoneCrossFrozenPane(zones,xSplit,ySplit){return zones.some((zone)=>doesZoneCrossFrozenPane(zone,xSplit,ySplit));}
function boundUnboundedZone(unboundedZone,sheetSize){const{left,top,bottom,right}=unboundedZone;if(right!==undefined&&bottom!==undefined){return unboundedZone;}
else if(bottom===undefined&&right!==undefined){return{right,top,left,bottom:sheetSize.numberOfRows-1};}
else if(right===undefined&&bottom!==undefined){return{bottom,left,top,right:sheetSize.numberOfCols-1};}
throw new Error("Bad zone format");}
function areZonesContinuous(zones){if(zones.length<2)
return true;return recomputeZones(zones).length===1;}
function getZonesCols(zones){const set=new Set();for(const zone of recomputeZones(zones)){for(const col of range(zone.left,zone.right+1)){set.add(col);}}
return set;}
function getZonesRows(zones){const set=new Set();for(const zone of recomputeZones(zones)){for(const row of range(zone.top,zone.bottom+1)){set.add(row);}}
return set;}
function areZoneContiguous(zone1,zone2){if(zone1.right+1===zone2.left||zone1.left===zone2.right+1){return((zone1.top<=zone2.bottom&&zone1.top>=zone2.top)||(zone2.top<=zone1.bottom&&zone2.top>=zone1.top));}
if(zone1.bottom+1===zone2.top||zone1.top===zone2.bottom+1){return((zone1.left<=zone2.right&&zone1.left>=zone2.left)||(zone2.left<=zone1.right&&zone2.left>=zone1.left));}
return false;}
function mergeContiguousZones(zones){const mergedZones=[...zones];let hasMerged=true;while(hasMerged){hasMerged=false;for(let i=0;i<mergedZones.length;i++){const zone=mergedZones[i];const mergeableZoneIndex=mergedZones.findIndex((z,j)=>i!==j&&(areZoneContiguous(z,zone)||overlap(z,zone)));if(mergeableZoneIndex!==-1){mergedZones[i]=union(mergedZones[mergeableZoneIndex],zone);mergedZones.splice(mergeableZoneIndex,1);hasMerged=true;break;}}}
return mergedZones;}
const globalReverseLookup$1=new WeakMap();const globalIdCounter=new WeakMap();function getItemId(item,itemsDic){if(!globalReverseLookup$1.has(itemsDic)){globalReverseLookup$1.set(itemsDic,new Map());globalIdCounter.set(itemsDic,0);}
const reverseLookup=globalReverseLookup$1.get(itemsDic);const canonical=getCanonicalRepresentation(item);if(reverseLookup.has(canonical)){const id=reverseLookup.get(canonical);itemsDic[id]=item;return id;}
const newId=globalIdCounter.get(itemsDic)+1;reverseLookup.set(canonical,newId);globalIdCounter.set(itemsDic,newId);itemsDic[newId]=item;return newId;}
function groupItemIdsByZones(positionsByItemId){const result={};for(const itemId in positionsByItemId){const zones=recomputeZones(positionsByItemId[itemId].map(positionToZone));for(const zone of zones){result[zoneToXc(zone)]=Number(itemId);}}
return result;}
function*iterateItemIdsPositions(sheetId,itemIdsByZones){for(const zoneXc in itemIdsByZones){const zone=toZone(zoneXc);const itemId=itemIdsByZones[zoneXc];for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const position={sheetId,col,row};yield[position,itemId];}}}}
function getCanonicalRepresentation(item){if(item===null)
return"null";if(item===undefined)
return"undefined";if(typeof item!=="object")
return String(item);if(Array.isArray(item)){const len=item.length;let result="[";for(let i=0;i<len;i++){if(i>0)
result+=",";result+=getCanonicalRepresentation(item[i]);}
return result+"]";}
const keys=Object.keys(item).sort();let repr="{";for(const key of keys){if(item[key]!==undefined){repr+=`"${key}":${getCanonicalRepresentation(item[key])},`;}}
repr+="}";return repr;}
const MAX_DELAY=140;const MIN_DELAY=20;const ACCELERATION=0.035;function scrollDelay(value){return MIN_DELAY+(MAX_DELAY-MIN_DELAY)*Math.exp(-ACCELERATION*(value-1));}
const cellReference=new RegExp(/\$?([A-Z]{1,3})\$?([0-9]{1,7})/,"i");const singleCellReference=new RegExp(/^\$?([A-Z]{1,3})\$?([0-9]{1,7})$/,"i");const colHeader=new RegExp(/^\$?([A-Z]{1,3})+$/,"i");const rowHeader=new RegExp(/^\$?([0-9]{1,7})+$/,"i");const colReference=new RegExp(/^\s*('.+'!|[^']+!)?\$?([A-Z]{1,3})$/,"i");const rowReference=new RegExp(/^\s*('.+'!|[^']+!)?\$?([0-9]{1,7})$/,"i");const fullRowXc=/(\$?[A-Z]{1,3})?\$?[0-9]{1,7}\s*:\s*(\$?[A-Z]{1,3})?\$?[0-9]{1,7}\s*/i;const fullColXc=/\$?[A-Z]{1,3}(\$?[0-9]{1,7})?\s*:\s*\$?[A-Z]{1,3}(\$?[0-9]{1,7})?\s*/i;const rangeReference=new RegExp(/^\s*('.+'!|[^']+!)?/.source+"("+
[cellReference.source,fullRowXc.source,fullColXc.source].join("|")+")"+/$/.source,"i");function isColReference(xc){return colReference.test(xc);}
function isRowReference(xc){return rowReference.test(xc);}
function isColHeader(str){return colHeader.test(str);}
function isRowHeader(str){return rowHeader.test(str);}
function isSingleCellReference(xc){return singleCellReference.test(xc);}
function splitReference(ref){if(!ref.includes("!")){return{xc:ref};}
const parts=ref.split("!");const xc=parts.pop();const sheetName=getUnquotedSheetName(parts.join("!"))||undefined;return{sheetName,xc};}
function getFullReference(sheetName,xc){return sheetName!==undefined?`${getCanonicalSymbolName(sheetName)}!${xc}`:xc;}
function createDefaultRows(rowNumber){const rows=[];for(let i=0;i<rowNumber;i++){const row={cells:{},};rows.push(row);}
return rows;}
function moveHeaderIndexesOnHeaderAddition(indexHeaderAdded,numberAdded,headers){return headers.map((header)=>{if(header>=indexHeaderAdded){return header+numberAdded;}
return header;});}
function moveHeaderIndexesOnHeaderDeletion(deletedHeaders,headers){deletedHeaders=[...deletedHeaders].sort((a,b)=>b-a);return headers.map((header)=>{for(const deletedHeader of deletedHeaders){if(header>deletedHeader){header--;}
else if(header===deletedHeader){return undefined;}}
return header;}).filter(isDefined);}
function getNextSheetName(existingNames,baseName="Sheet"){let i=1;let name=`${baseName}${i}`;while(existingNames.includes(name)){name=`${baseName}${i}`;i++;}
return name;}
function getDuplicateSheetName(nameToDuplicate,existingNames){let i=1;const baseName=_t("Copy of %s",nameToDuplicate);let name=baseName.toString();while(existingNames.includes(name)){name=`${baseName} (${i})`;i++;}
return name;}
function isSheetNameEqual(name1,name2){if(name1===undefined||name2===undefined){return false;}
return(getUnquotedSheetName(name1.trim().toUpperCase())===getUnquotedSheetName(name2.trim().toUpperCase()));}
function createRange(args,getSheetSize){const unboundedZone=args.zone;const zone=boundUnboundedZone(unboundedZone,getSheetSize(args.sheetId));let parts=args.parts;if(args.parts.length===1&&getZoneArea(zone)>1){parts=[args.parts[0],args.parts[0]];}
else if(args.parts.length===2&&getZoneArea(zone)===1){parts=[args.parts[0]];}
return{unboundedZone,zone,parts,prefixSheet:args.prefixSheet,invalidSheetName:args.invalidSheetName,sheetId:args.sheetId,};}
function createRangeFromXc(args,getSheetSize){const fullXc=args.xc;const{xc,sheetName}=splitReference(fullXc);const unboundedZone=toUnboundedZone(xc);const parts=getRangeParts(xc,unboundedZone);return createRange({zone:unboundedZone,parts,sheetId:args.sheetId,prefixSheet:Boolean(sheetName),invalidSheetName:args.invalidSheetName,},getSheetSize);}
function createInvalidRange(sheetXC){const invalidZone={left:-1,top:-1,right:-1,bottom:-1};return{sheetId:"",zone:invalidZone,unboundedZone:invalidZone,parts:[],invalidXc:sheetXC,prefixSheet:false,};}
function isFullColRange(range){return isFullCol(range.unboundedZone);}
function isFullRowRange(range){return isFullRow(range.unboundedZone);}
function getRangeString(range,forSheetId,getSheetName,options={useBoundedReference:false,useFixedReference:false}){if(range.invalidXc){return range.invalidXc;}
if(range.zone.bottom-range.zone.top<0||range.zone.right-range.zone.left<0){return CellErrorType.InvalidReference;}
if(range.zone.left<0||range.zone.top<0){return CellErrorType.InvalidReference;}
const prefixSheet=range.sheetId!==forSheetId||range.invalidSheetName||range.prefixSheet;let sheetName="";if(prefixSheet){if(range.invalidSheetName){sheetName=range.invalidSheetName;}
else{sheetName=getCanonicalSymbolName(getSheetName(range.sheetId));}}
if(prefixSheet&&!sheetName){return CellErrorType.InvalidReference;}
let rangeString=getRangePartString(range,0,options);if(range.parts&&range.parts.length===2){if(range.zone.top!==range.zone.bottom||range.zone.left!==range.zone.right||range.parts[0].rowFixed||range.parts[0].colFixed||range.parts[1].rowFixed||range.parts[1].colFixed){rangeString+=":";rangeString+=getRangePartString(range,1,options);}}
return`${prefixSheet ? sheetName + "!" : ""}${rangeString}`;}
function duplicateRangeInDuplicatedSheet(sheetIdFrom,sheetIdTo,range){const sheetId=range.sheetId===sheetIdFrom?sheetIdTo:range.sheetId;return{...range,sheetId};}
function createValidRange(getters,sheetId,xc){if(!xc)
return;const range=getters.getRangeFromSheetXC(sheetId,xc);return!(range.invalidSheetName||range.invalidXc)?range:undefined;}
function getCellPositionsInRanges(ranges){const cellPositions=[];for(const range of ranges){for(const position of positions(range.zone)){cellPositions.push({...position,sheetId:range.sheetId});}}
return cellPositions;}
function getRangeParts(xc,zone){const parts=xc.split(":").map((p)=>{const isFullRow=isRowReference(p);return{colFixed:isFullRow?false:p.startsWith("$"),rowFixed:isFullRow?p.startsWith("$"):p.includes("$",1),};});const isFullCol=zone.bottom===undefined;const isFullRow=zone.right===undefined;if(isFullCol){parts[0].rowFixed=parts[0].rowFixed||parts[1].rowFixed;parts[1].rowFixed=parts[0].rowFixed||parts[1].rowFixed;}
if(isFullRow){parts[0].colFixed=parts[0].colFixed||parts[1].colFixed;parts[1].colFixed=parts[0].colFixed||parts[1].colFixed;}
return parts;}
function orderRange(range){if(isZoneOrdered(range.zone)){return range;}
const unboundedZone={...range.unboundedZone};const zone={...range.zone};let parts=range.parts;if(unboundedZone.right!==undefined&&unboundedZone.right<unboundedZone.left){const right=unboundedZone.right;unboundedZone.right=unboundedZone.left;unboundedZone.left=right;zone.right=zone.left;zone.left=right;parts=[{colFixed:parts[1]?.colFixed||false,rowFixed:parts[0]?.rowFixed||false,},{colFixed:parts[0]?.colFixed||false,rowFixed:parts[1]?.rowFixed||false,},];}
if(unboundedZone.bottom!==undefined&&unboundedZone.bottom<unboundedZone.top){const bottom=unboundedZone.bottom;unboundedZone.bottom=unboundedZone.top;unboundedZone.top=bottom;zone.bottom=zone.top;zone.top=bottom;parts=[{colFixed:parts[0]?.colFixed||false,rowFixed:parts[1]?.rowFixed||false,},{colFixed:parts[1]?.colFixed||false,rowFixed:parts[0]?.rowFixed||false,},];}
return{unboundedZone,zone,parts,invalidXc:range.invalidXc,prefixSheet:range.prefixSheet,invalidSheetName:range.invalidSheetName,sheetId:range.sheetId,};}
function getRangeAdapter(cmd){switch(cmd.type){case"REMOVE_COLUMNS_ROWS":return{applyChange:getApplyRangeChangeRemoveColRow(cmd),sheetId:cmd.sheetId,sheetName:cmd.sheetName,};case"ADD_COLUMNS_ROWS":return{applyChange:getApplyRangeChangeAddColRow(cmd),sheetId:cmd.sheetId,sheetName:cmd.sheetName,};case"DELETE_SHEET":return{applyChange:getApplyRangeChangeDeleteSheet(cmd),sheetId:cmd.sheetId,sheetName:cmd.sheetName,};case"RENAME_SHEET":return{applyChange:getApplyRangeChangeRenameSheet(cmd),sheetId:cmd.sheetId,sheetName:cmd.oldName,};case"MOVE_RANGES":return{applyChange:getApplyRangeChangeMoveRange(cmd),sheetId:cmd.sheetId,sheetName:cmd.sheetName,};}
return undefined;}
function getApplyRangeChangeRemoveColRow(cmd){const start=cmd.dimension==="COL"?"left":"top";const end=cmd.dimension==="COL"?"right":"bottom";const dimension=cmd.dimension==="COL"?"columns":"rows";const elements=[...cmd.elements];elements.sort((a,b)=>b-a);const groups=groupConsecutive(elements);return(range)=>{if(!isSheetNameEqual(range.sheetId,cmd.sheetId)){return{changeType:"NONE"};}
let newRange=range;let changeType="NONE";for(const group of groups){const min=largeMin(group);const max=largeMax(group);if(range.zone[start]<=min&&min<=range.zone[end]){const toRemove=Math.min(range.zone[end],max)-min+1;changeType="RESIZE";newRange=createAdaptedRange(newRange,dimension,changeType,-toRemove);}
else if(range.zone[start]>=min&&range.zone[end]<=max){changeType="REMOVE";newRange=createInvalidRange(CellErrorType.InvalidReference);}
else if(range.zone[start]<=max&&range.zone[end]>=max){const toRemove=max-range.zone[start]+1;changeType="RESIZE";newRange=createAdaptedRange(newRange,dimension,changeType,-toRemove);newRange=createAdaptedRange(newRange,dimension,"MOVE",-(range.zone[start]-min));}
else if(min<range.zone[start]){changeType="MOVE";newRange=createAdaptedRange(newRange,dimension,changeType,-(max-min+1));}}
if(changeType!=="NONE"){return{changeType,range:newRange};}
return{changeType:"NONE"};};}
function getApplyRangeChangeAddColRow(cmd){const start=cmd.dimension==="COL"?"left":"top";const end=cmd.dimension==="COL"?"right":"bottom";const dimension=cmd.dimension==="COL"?"columns":"rows";return(range)=>{if(range.sheetId!==cmd.sheetId){return{changeType:"NONE"};}
if(cmd.position==="after"){if(range.zone[start]<=cmd.base&&cmd.base<range.zone[end]){return{changeType:"RESIZE",range:createAdaptedRange(range,dimension,"RESIZE",cmd.quantity),};}
if(cmd.base<range.zone[start]){return{changeType:"MOVE",range:createAdaptedRange(range,dimension,"MOVE",cmd.quantity),};}}
else{if(range.zone[start]<cmd.base&&cmd.base<=range.zone[end]){return{changeType:"RESIZE",range:createAdaptedRange(range,dimension,"RESIZE",cmd.quantity),};}
if(cmd.base<=range.zone[start]){return{changeType:"MOVE",range:createAdaptedRange(range,dimension,"MOVE",cmd.quantity),};}}
return{changeType:"NONE"};};}
function getApplyRangeChangeDeleteSheet(cmd){return(range)=>{if(range.sheetId!==cmd.sheetId&&range.invalidSheetName!==cmd.sheetName){return{changeType:"NONE"};}
const invalidSheetName=cmd.sheetName;range={...createInvalidRange(CellErrorType.InvalidReference),invalidSheetName,};return{changeType:"REMOVE",range};};}
function getApplyRangeChangeRenameSheet(cmd){return(range)=>{if(range.sheetId===cmd.sheetId){return{changeType:"CHANGE",range};}
if(cmd.newName&&range.invalidSheetName===cmd.newName){const invalidSheetName=undefined;const sheetId=cmd.sheetId;const newRange={...range,sheetId,invalidSheetName};return{changeType:"CHANGE",range:newRange};}
if(cmd.oldName&&range.invalidSheetName===cmd.oldName){const invalidSheetName=undefined;const sheetId=cmd.sheetId;const newRange={...range,sheetId,invalidSheetName};return{changeType:"CHANGE",range:newRange};}
return{changeType:"NONE"};};}
function getApplyRangeChangeMoveRange(cmd){const originZone=cmd.target[0];return(range)=>{if(range.sheetId!==cmd.sheetId||!isZoneInside(range.zone,originZone)){return{changeType:"NONE"};}
const targetSheetId=cmd.targetSheetId;const offsetX=cmd.col-originZone.left;const offsetY=cmd.row-originZone.top;const adaptedRange=createAdaptedRange(range,"both","MOVE",[offsetX,offsetY]);const prefixSheet=cmd.sheetId===targetSheetId?adaptedRange.prefixSheet:true;return{changeType:"MOVE",range:{...adaptedRange,sheetId:targetSheetId,prefixSheet},};};}
function createAdaptedRange(range,dimension,operation,by){return{...range,unboundedZone:createAdaptedZone(range.unboundedZone,dimension,operation,by),zone:createAdaptedZone(range.zone,dimension,operation,by),};}
function getRangePartString(range,part,options={useBoundedReference:false,useFixedReference:false}){const colFixed=range.parts[part]?.colFixed||options.useFixedReference?"$":"";const col=part===0?numberToLetters(range.zone.left):numberToLetters(range.zone.right);const rowFixed=range.parts[part]?.rowFixed||options.useFixedReference?"$":"";const row=part===0?String(range.zone.top+1):String(range.zone.bottom+1);let str="";if(isFullCol(range.unboundedZone)&&!options.useBoundedReference){if(part===0&&range.unboundedZone.hasHeader){str=colFixed+col+rowFixed+row;}
else{str=colFixed+col;}}
else if(isFullRow(range.unboundedZone)&&!options.useBoundedReference){if(part===0&&range.unboundedZone.hasHeader){str=colFixed+col+rowFixed+row;}
else{str=rowFixed+row;}}
else{str=colFixed+col+rowFixed+row;}
return str;}
function fuzzyMatch(pattern,str){pattern=pattern.toLocaleLowerCase();str=str.toLocaleLowerCase();let totalScore=0;let currentScore=0;const len=str.length;let patternIndex=0;for(let i=0;i<len;i++){if(str[i]===pattern[patternIndex]){patternIndex++;currentScore+=100+currentScore-i/200;}
else{currentScore=0;}
totalScore=totalScore+currentScore;}
return patternIndex===pattern.length?totalScore:0;}
function fuzzyLookup(pattern,list,fn){const results=[];list.forEach((data)=>{const score=fuzzyMatch(pattern,fn(data));if(score>0){results.push({score,elem:data});}});results.sort((a,b)=>b.score-a.score);return results.map((r)=>r.elem);}
function computeTextLinesHeight(textLineHeight,numberOfLines=1){return numberOfLines*(textLineHeight+MIN_CELL_TEXT_MARGIN)-MIN_CELL_TEXT_MARGIN;}
function getDefaultCellHeight(ctx,cell,colSize){if(!cell||(!cell.isFormula&&!cell.content)){return DEFAULT_CELL_HEIGHT;}
const content=cell.isFormula?"":cell.content;return getCellContentHeight(ctx,content,cell.style,colSize);}
function getCellContentHeight(ctx,content,style,colSize){const maxWidth=style?.wrapping==="wrap"?colSize-2*MIN_CELL_TEXT_MARGIN:undefined;const numberOfLines=splitTextToWidth(ctx,content,style,maxWidth).length;const fontSize=computeTextFontSizeInPixels(style);return computeTextLinesHeight(fontSize,numberOfLines)+2*PADDING_AUTORESIZE_VERTICAL;}
function getDefaultContextFont(fontSize,bold=false,italic=false){const italicStr=italic?"italic":"";const weight=bold?"bold":"";return`${italicStr} ${weight} ${fontSize}px ${DEFAULT_FONT}`;}
const textWidthCache={};function computeTextWidth(context,text,style,fontUnit="pt"){const font=computeTextFont(style,fontUnit);return computeCachedTextWidth(context,text,font);}
function computeCachedTextWidth(context,text,font){if(!textWidthCache[font]){textWidthCache[font]={};}
if(textWidthCache[font][text]===undefined){const oldFont=context.font;context.font=font;textWidthCache[font][text]=context.measureText(text).width;context.font=oldFont;}
return textWidthCache[font][text];}
const textDimensionsCache={};function computeTextDimension(context,text,style,fontUnit="pt"){const font=computeTextFont(style,fontUnit);context.save();context.font=font;const dimensions=computeCachedTextDimension(context,text);context.restore();return dimensions;}
function computeCachedTextDimension(context,text){const font=context.font;if(!textDimensionsCache[font]){textDimensionsCache[font]={};}
if(textDimensionsCache[font][text]===undefined){const measure=context.measureText(text);const width=measure.width;const height=measure.fontBoundingBoxAscent+measure.fontBoundingBoxDescent;textDimensionsCache[font][text]={width,height};}
return textDimensionsCache[font][text];}
function fontSizeInPixels(fontSize){return Math.round((fontSize*96)/72);}
function computeTextFont(style,fontUnit="pt"){const italic=style.italic?"italic ":"";const weight=style.bold?"bold":DEFAULT_FONT_WEIGHT;const size=fontUnit==="pt"?computeTextFontSizeInPixels(style):style.fontSize;return`${italic}${weight} ${size ?? DEFAULT_FONT_SIZE}px ${DEFAULT_FONT}`;}
function computeTextFontSizeInPixels(style){const sizeInPt=style?.fontSize||DEFAULT_FONT_SIZE;return fontSizeInPixels(sizeInPt);}
function splitWordToSpecificWidth(ctx,word,width,style){const wordWidth=computeTextWidth(ctx,word,style);if(wordWidth<=width){return[word];}
const splitWord=[];let wordPart="";for(const l of word){const wordPartWidth=computeTextWidth(ctx,wordPart+l,style);if(wordPartWidth>width){splitWord.push(wordPart);wordPart=l;}
else{wordPart+=l;}}
splitWord.push(wordPart);return splitWord;}
function splitTextToWidth(ctx,text,style,width){if(!style)
style={};if(isMarkdownLink(text))
text=parseMarkdownLink(text).label;const brokenText=[];const lines=text.includes(NEWLINE)?text.split(NEWLINE):[text];for(const line of lines){const words=line.includes(" ")?line.split(" "):[line];if(!width){brokenText.push(line);continue;}
let textLine="";let availableWidth=width;for(const word of words){const splitWord=splitWordToSpecificWidth(ctx,word,width,style);const lastPart=splitWord.pop();const lastPartWidth=computeTextWidth(ctx,lastPart,style);if(splitWord.length){if(textLine!==""){brokenText.push(textLine);textLine="";availableWidth=width;}
splitWord.forEach((wordPart)=>{brokenText.push(wordPart);});textLine=lastPart;availableWidth=width-lastPartWidth;}
else{const _word=textLine===""?lastPart:" "+lastPart;const wordWidth=computeTextWidth(ctx,_word,style);if(wordWidth<=availableWidth){textLine+=_word;availableWidth-=wordWidth;}
else{brokenText.push(textLine);textLine=lastPart;availableWidth=width-lastPartWidth;}}}
if(textLine!==""){brokenText.push(textLine);}}
return brokenText;}
function getFontSizeMatchingWidth(lineWidth,maxFontSize,getTextWidth,precision=0.25){let minFontSize=1;if(getTextWidth(minFontSize)>lineWidth)
return minFontSize;if(getTextWidth(maxFontSize)<lineWidth)
return maxFontSize;let fontSize=(minFontSize+maxFontSize)/2;let currentTextWidth=getTextWidth(fontSize);let iterations=0;while(Math.abs(currentTextWidth-lineWidth)>precision&&iterations<20){if(currentTextWidth>=lineWidth){maxFontSize=(minFontSize+maxFontSize)/2;}
else{minFontSize=(minFontSize+maxFontSize)/2;}
fontSize=(minFontSize+maxFontSize)/2;currentTextWidth=getTextWidth(fontSize);iterations++;}
return fontSize;}
function toLowerCase(str){return str?str.toLowerCase():"";}
const pxRegex=/([0-9\.]*)px/;function getContextFontSize(font){return Number(font.match(pxRegex)?.[1]);}
function clipTextWithEllipsis(ctx,text,maxWidth){let width=computeCachedTextWidth(ctx,text,ctx.font);if(width<=maxWidth){return text;}
const ellipsis="…";const ellipsisWidth=computeCachedTextWidth(ctx,ellipsis,ctx.font);if(width<=ellipsisWidth){return text;}
let len=text.length;while(width>=maxWidth-ellipsisWidth&&len-->0){text=text.substring(0,len);width=computeCachedTextWidth(ctx,text,ctx.font);}
return text+ellipsis;}
function drawDecoratedText(context,text,position,underline=false,strikethrough=false,strokeWidth=getContextFontSize(context.font)/10){context.fillText(text,position.x,position.y);if(!underline&&!strikethrough){return;}
const measure=context.measureText(text);const textWidth=measure.width;const textHeight=measure.actualBoundingBoxAscent+measure.actualBoundingBoxDescent;const boxHeight=measure.fontBoundingBoxAscent+measure.fontBoundingBoxDescent;let{x,y}=position;let strikeY=y,underlineY=y;switch(context.textAlign){case"center":x-=textWidth/2;break;case"right":x-=textWidth;break;}
switch(context.textBaseline){case"top":underlineY+=boxHeight-2*strokeWidth;strikeY+=boxHeight/2-strokeWidth;break;case"middle":underlineY+=boxHeight/2-strokeWidth;break;case"alphabetic":underlineY+=2*strokeWidth;strikeY-=3*strokeWidth;break;case"bottom":underlineY=y;strikeY-=textHeight/2-strokeWidth/2;break;}
if(underline){context.lineWidth=strokeWidth;context.strokeStyle=context.fillStyle;context.beginPath();context.moveTo(x,underlineY);context.lineTo(x+textWidth,underlineY);context.stroke();}
if(strikethrough){context.lineWidth=strokeWidth;context.strokeStyle=context.fillStyle;context.beginPath();context.moveTo(x,strikeY);context.lineTo(x+textWidth,strikeY);context.stroke();}}
function sliceTextToFitWidth(context,width,text,style,fontUnit="pt"){if(computeTextWidth(context,text,style,fontUnit)<=width){return text;}
const ellipsis="...";const ellipsisWidth=computeTextWidth(context,ellipsis,style,fontUnit);if(ellipsisWidth>=width){return"";}
let lowerBoundLen=1;let upperBoundLen=text.length;let currentWidth;while(lowerBoundLen<=upperBoundLen){const currentLen=Math.floor((lowerBoundLen+upperBoundLen)/2);const currentText=text.slice(0,currentLen);currentWidth=computeTextWidth(context,currentText,style,fontUnit);if(currentWidth+ellipsisWidth>width){upperBoundLen=currentLen-1;}
else{lowerBoundLen=currentLen+1;}}
const slicedText=text.slice(0,Math.max(0,lowerBoundLen-1));return slicedText?slicedText+ellipsis:"";}
class UuidGenerator{smallUuid(){if(window.crypto){return"10000000-1000".replace(/[01]/g,(c)=>{const n=Number(c);return(n^(crypto.getRandomValues(new Uint8Array(1))[0]&(15>>(n/4)))).toString(16);});}
else{return"xxxxxxxx-xxxx".replace(/[xy]/g,function(c){const r=(Math.random()*16)|0,v=c==="x"?r:(r&0x3)|0x8;return v.toString(16);});}}
uuidv4(){if(window.crypto){return"10000000-1000-4000-8000-100000000000".replace(/[018]/g,(c)=>{const n=Number(c);return(n^(crypto.getRandomValues(new Uint8Array(1))[0]&(15>>(n/4)))).toString(16);});}
else{return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){const r=(Math.random()*16)|0,v=c==="x"?r:(r&0x3)|0x8;return v.toString(16);});}}}
const AllowedImageMimeTypes=["image/avif","image/bmp","image/gif","image/vnd.microsoft.icon","image/jpeg","image/png","image/tiff","image/webp",];function getClipboardDataPositions(sheetId,zones){const lefts=new Set(zones.map((z)=>z.left));const rights=new Set(zones.map((z)=>z.right));const tops=new Set(zones.map((z)=>z.top));const bottoms=new Set(zones.map((z)=>z.bottom));const areZonesCompatible=(tops.size===1&&bottoms.size===1)||(lefts.size===1&&rights.size===1);const clippedZones=areZonesCompatible?mergeOverlappingZones(zones):[zones[zones.length-1]];const cellsPosition=clippedZones.map((zone)=>positions(zone)).flat();const columnsIndexes=[...new Set(cellsPosition.map((p)=>p.col))].sort((a,b)=>a-b);const rowsIndexes=[...new Set(cellsPosition.map((p)=>p.row))].sort((a,b)=>a-b);return{sheetId,zones,clippedZones,columnsIndexes,rowsIndexes};}
function splitZoneForPaste(selection,splitWidth,splitHeight){const right=Math.max(selection.right-splitWidth+1,selection.left);const bottom=Math.max(selection.bottom-splitHeight+1,selection.top);const zones=[];for(let left=selection.left;left<=right;left+=splitWidth){for(let top=selection.top;top<=bottom;top+=splitHeight){zones.push({left,top,bottom:top+splitHeight-1,right:left+splitWidth-1,});}}
return zones;}
function getPasteZones(target,content){if(!content.length||!content[0].length){return target;}
const width=content[0].length,height=content.length;return target.map((t)=>splitZoneForPaste(t,width,height)).flat();}
function parseOSClipboardContent(content,clipboardId){let spreadsheetContent=undefined;if(content[ClipboardMIMEType.Html]){const htmlDocument=new DOMParser().parseFromString(content[ClipboardMIMEType.Html],"text/html");const oSheetClipboardData=htmlDocument.querySelector("div")?.getAttribute("data-osheet-clipboard");spreadsheetContent=oSheetClipboardData&&JSON.parse(oSheetClipboardData);}
let imageBlob=undefined;for(const type of AllowedImageMimeTypes){if(content[type]){imageBlob=content[type];break;}}
const osClipboardContent={text:content[ClipboardMIMEType.PlainText],data:spreadsheetContent,imageBlob,};return osClipboardContent;}
const applyClipboardHandlersPaste=(handlers,copiedData,target,options)=>{handlers.forEach(({handlerName,handler})=>{const data=copiedData[handlerName];if(data){handler.paste(target,data,options);}});};function getPasteTargetFromHandlers(sheetId,zones,copiedData,handlers,options){let zone=undefined;const selectedZones=[];const target={sheetId,zones,};for(const{handlerName,handler}of handlers){const handlerData=copiedData[handlerName];if(!handlerData){continue;}
const currentTarget=handler.getPasteTarget(sheetId,zones,handlerData,options);if(currentTarget.figureId){target.figureId=currentTarget.figureId;}
for(const targetZone of currentTarget.zones){selectedZones.push(targetZone);if(zone===undefined){zone=targetZone;continue;}
zone=union(zone,targetZone);}}
return{target,zone,selectedZones,};}
const selectPastedZone=(selection,sourceZones,pastedZones)=>{const anchorCell={col:sourceZones[0].left,row:sourceZones[0].top,};selection.getBackToDefault();selection.selectZone({cell:anchorCell,zone:union(...pastedZones)},{scrollIntoView:false});};class ClipboardHandler{getters;dispatch;constructor(getters,dispatch){this.getters=getters;this.dispatch=dispatch;}
copy(data,isCutOperation){return;}
paste(target,clippedContent,options){}
isPasteAllowed(sheetId,target,content,option){return"Success";}
isCutAllowed(data){return"Success";}
getPasteTarget(sheetId,target,content,options){return{zones:[],sheetId};}
convertTextToClipboardData(data){return;}}
class AbstractCellClipboardHandler extends ClipboardHandler{copy(data){return;}
pasteFromCopy(sheetId,target,content,options){if(target.length===1){for(const zone of getPasteZones(target,content)){this.pasteZone(sheetId,zone.left,zone.top,content,options);}}
else{for(const zone of recomputeZones(target)){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){this.pasteZone(sheetId,col,row,content,options);}}}}}
pasteZone(sheetId,col,row,data,clipboardOptions){}}
class BorderClipboardHandler extends AbstractCellClipboardHandler{queuedBordersToAdd={};copy(data){const sheetId=data.sheetId;if(data.zones.length===0){return;}
const{rowsIndexes,columnsIndexes}=data;const borders=[];for(const row of rowsIndexes){const bordersInRow=[];for(const col of columnsIndexes){const position={col,row,sheetId};bordersInRow.push(this.getters.getCellBorder(position));}
borders.push(bordersInRow);}
return{borders};}
paste(target,content,options){const sheetId=target.sheetId;if(options.pasteOption==="asValue"){return;}
const zones=target.zones;if(!options.isCutOperation){this.pasteFromCopy(sheetId,zones,content.borders);}
else{const{left,top}=zones[0];this.pasteZone(sheetId,left,top,content.borders);}
this.executeQueuedChanges(sheetId);}
pasteZone(sheetId,col,row,borders){for(const[r,rowBorders]of borders.entries()){for(const[c,originBorders]of rowBorders.entries()){const position={col:col+c,row:row+r,sheetId};this.pasteBorder(originBorders,position);}}}
pasteBorder(originBorders,target){const targetBorders=this.getters.getCellBorder(target);const border={...targetBorders,...originBorders,};const borderKey=JSON.stringify(border);if(!this.queuedBordersToAdd[borderKey]){this.queuedBordersToAdd[borderKey]=[];}
this.queuedBordersToAdd[borderKey].push(positionToZone(target));}
executeQueuedChanges(pasteSheetTarget){for(const borderKey in this.queuedBordersToAdd){const zones=this.queuedBordersToAdd[borderKey];const border=JSON.parse(borderKey);const target=recomputeZones(zones,[]);this.dispatch("SET_BORDERS_ON_TARGET",{sheetId:pasteSheetTarget,target,border});}
this.queuedBordersToAdd={};}}
const POSTFIX_UNARY_OPERATORS=["%"];const OPERATORS="+,-,*,/,:,=,<>,>=,>,<=,<,^,&".split(",").concat(POSTFIX_UNARY_OPERATORS);function tokenize(str,locale=DEFAULT_LOCALE){str=replaceNewLines(str);const chars=new TokenizingChars(str);const result=[];const tokenizeSpace=specialWhiteSpaceRegexp.test(str)?tokenizeSpecialCharacterSpace:tokenizeSimpleSpace;while(!chars.isOver()){let token=tokenizeNewLine(chars)||tokenizeSpace(chars)||tokenizeArgsSeparator(chars,locale)||tokenizeParenthesis(chars)||tokenizeOperator(chars)||tokenizeString(chars)||tokenizeDebugger(chars)||tokenizeInvalidRange(chars)||tokenizeNumber(chars,locale)||tokenizeSymbol(chars);if(!token){token={type:"UNKNOWN",value:chars.shift()};}
result.push(token);}
return result;}
function tokenizeDebugger(chars){if(chars.current==="?"){chars.shift();return{type:"DEBUGGER",value:"?"};}
return null;}
const parenthesis={"(":{type:"LEFT_PAREN",value:"("},")":{type:"RIGHT_PAREN",value:")"},};function tokenizeParenthesis(chars){if(chars.current==="("||chars.current===")"){const value=chars.shift();return parenthesis[value];}
return null;}
function tokenizeArgsSeparator(chars,locale){if(chars.current===locale.formulaArgSeparator){const value=chars.shift();const type="ARG_SEPARATOR";return{type,value};}
return null;}
function tokenizeOperator(chars){for(const op of OPERATORS){if(chars.currentStartsWith(op)){chars.advanceBy(op.length);return{type:"OPERATOR",value:op};}}
return null;}
const FIRST_POSSIBLE_NUMBER_CHARS=new Set("0123456789");function tokenizeNumber(chars,locale){if(!FIRST_POSSIBLE_NUMBER_CHARS.has(chars.current)&&chars.current!==locale.decimalSeparator){return null;}
const match=chars.remaining().match(getFormulaNumberRegex(locale.decimalSeparator));if(match){chars.advanceBy(match[0].length);return{type:"NUMBER",value:match[0]};}
return null;}
function tokenizeString(chars){if(chars.current==='"'){const startChar=chars.shift();let letters=startChar;while(chars.current&&(chars.current!==startChar||letters[letters.length-1]==="\\")){letters+=chars.shift();}
if(chars.current==='"'){letters+=chars.shift();}
return{type:"STRING",value:letters,};}
return null;}
const unicodeSymbolCharRegexp=/\p{L}|\p{N}|_|\.|!|\$/u;const SYMBOL_CHARS=new Set("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_.!$");function tokenizeSymbol(chars){let result="";if(chars.current==="'"){let lastChar=chars.shift();result+=lastChar;while(chars.current){lastChar=chars.shift();result+=lastChar;if(lastChar==="'"){if(chars.current&&chars.current==="'"){lastChar=chars.shift();result+=lastChar;}
else{break;}}}
if(lastChar!=="'"){return{type:"UNKNOWN",value:result,};}}
while(chars.current&&(SYMBOL_CHARS.has(chars.current)||chars.current.match(unicodeSymbolCharRegexp))){result+=chars.shift();}
if(result.length){const value=result;const isReference=rangeReference.test(value);if(isReference){return{type:"REFERENCE",value};}
return{type:"SYMBOL",value};}
return null;}
function tokenizeSpecialCharacterSpace(chars){let spaces="";while(chars.current===" "||(chars.current&&chars.current.match(specialWhiteSpaceRegexp))){spaces+=chars.shift();}
if(spaces){return{type:"SPACE",value:spaces};}
return null;}
function tokenizeSimpleSpace(chars){let spaces="";while(chars.current===" "){spaces+=chars.shift();}
if(spaces){return{type:"SPACE",value:spaces};}
return null;}
function tokenizeNewLine(chars){let length=0;while(chars.current===NEWLINE){length++;chars.shift();}
if(length){return{type:"SPACE",value:NEWLINE.repeat(length)};}
return null;}
function tokenizeInvalidRange(chars){if(chars.currentStartsWith(CellErrorType.InvalidReference)){chars.advanceBy(CellErrorType.InvalidReference.length);return{type:"INVALID_REFERENCE",value:CellErrorType.InvalidReference};}
return null;}
function isValidLocale(locale){if(!locale||typeof locale!=="object"||!(!locale.thousandsSeparator||typeof locale.thousandsSeparator==="string")){return false;}
for(const property of["code","name","decimalSeparator","dateFormat","timeFormat","formulaArgSeparator",]){if(!locale[property]||typeof locale[property]!=="string"){return false;}}
if(locale.formulaArgSeparator===locale.decimalSeparator){return false;}
if(locale.thousandsSeparator===locale.decimalSeparator){return false;}
try{formatValue(1,{locale,format:"#,##0.00"});formatValue(1,{locale,format:locale.dateFormat});formatValue(1,{locale,format:locale.timeFormat});}
catch{return false;}
return true;}
function canonicalizeNumberContent(content,locale){return isFormula(content)?canonicalizeFormula(content,locale):canonicalizeNumberLiteral(content,locale);}
function canonicalizeContent(content,locale){return isFormula(content)?canonicalizeFormula(content,locale):canonicalizeLiteral(content,locale);}
function localizeContent(content,locale){return content.startsWith("=")?localizeFormula(content,locale):localizeLiteral(content,locale);}
function canonicalizeNumberValue(content,locale){return isFormula(content)?canonicalizeFormula(content,locale):canonicalizeNumberLiteral(content,locale);}
function canonicalizeFormula(formula,locale){return _localizeFormula(formula.startsWith("+")?"="+formula.slice(1):formula,locale,DEFAULT_LOCALE);}
function localizeFormula(formula,locale){return _localizeFormula(formula,DEFAULT_LOCALE,locale);}
function _localizeFormula(formula,fromLocale,toLocale){if(fromLocale.formulaArgSeparator===toLocale.formulaArgSeparator&&fromLocale.decimalSeparator===toLocale.decimalSeparator){return formula;}
const tokens=tokenize(formula,fromLocale);let localizedFormula="";for(const token of tokens){if(token.type==="NUMBER"){localizedFormula+=token.value.replace(fromLocale.decimalSeparator,toLocale.decimalSeparator);}
else if(token.type==="ARG_SEPARATOR"){localizedFormula+=toLocale.formulaArgSeparator;}
else{localizedFormula+=token.value;}}
return localizedFormula;}
function canonicalizeNumberLiteral(content,locale){if(locale.decimalSeparator==="."||!isNumber(content,locale)){return content;}
if(locale.thousandsSeparator){content=content.replaceAll(locale.thousandsSeparator,"");}
return content.replace(locale.decimalSeparator,".");}
function canonicalizeLiteral(content,locale){if(isDateTime(content,locale)){const dateNumber=toNumber(content,locale);let format=DEFAULT_LOCALE.dateFormat;if(!Number.isInteger(dateNumber)){format+=" "+DEFAULT_LOCALE.timeFormat;}
return formatValue(dateNumber,{locale:DEFAULT_LOCALE,format});}
return canonicalizeNumberLiteral(content,locale);}
function localizeNumberLiteral(literal,locale){if(locale.decimalSeparator==="."||!isNumber(literal,DEFAULT_LOCALE)){return literal;}
const decimalNumberRegex=getDecimalNumberRegex(DEFAULT_LOCALE);return literal.replace(decimalNumberRegex,(match)=>{return match.replace(".",locale.decimalSeparator);});}
function localizeLiteral(literal,locale){if(isDateTime(literal,DEFAULT_LOCALE)){const dateNumber=toNumber(literal,DEFAULT_LOCALE);let format=locale.dateFormat;if(!Number.isInteger(dateNumber)){format+=" "+locale.timeFormat;}
return formatValue(dateNumber,{locale,format});}
return localizeNumberLiteral(literal,locale);}
function canonicalizeCFRule(cf,locale){return changeCFRuleLocale(cf,(content)=>canonicalizeContent(content,locale));}
function localizeCFRule(cf,locale){return changeCFRuleLocale(cf,(content)=>localizeContent(content,locale));}
function localizeDataValidationRule(rule,locale){const localizedDVRule=deepCopy(rule);localizedDVRule.criterion.values=localizedDVRule.criterion.values.map((content)=>localizeContent(content,locale));return localizedDVRule;}
function changeCFRuleLocale(rule,changeContentLocale){rule=deepCopy(rule);switch(rule.type){case"CellIsRule":switch(rule.operator){case"isBetween":case"isNotBetween":case"isEqual":case"isNotEqual":case"isGreaterThan":case"isGreaterOrEqualTo":case"isLessThan":case"isLessOrEqualTo":rule.values=rule.values.map((v)=>changeContentLocale(v));return rule;case"beginsWithText":case"containsText":case"endsWithText":case"notContainsText":case"isEmpty":case"isNotEmpty":return rule;}
case"DataBarRule":return rule;case"ColorScaleRule":rule.minimum=changeCFRuleThresholdLocale(rule.minimum,changeContentLocale);rule.maximum=changeCFRuleThresholdLocale(rule.maximum,changeContentLocale);if(rule.midpoint){rule.midpoint=changeCFRuleThresholdLocale(rule.midpoint,changeContentLocale);}
return rule;case"IconSetRule":rule.lowerInflectionPoint.value=changeContentLocale(rule.lowerInflectionPoint.value);rule.upperInflectionPoint.value=changeContentLocale(rule.upperInflectionPoint.value);return rule;}}
function changeCFRuleThresholdLocale(threshold,changeContentLocale){if(!threshold?.value){return threshold;}
const value=threshold.type==="formula"?"="+threshold.value:threshold.value;const modified=changeContentLocale(value);const newValue=threshold.type==="formula"?modified.slice(1):modified;return{...threshold,value:newValue};}
function getDateTimeFormat(locale){return locale.dateFormat+" "+locale.timeFormat;}
function boolAnd(args){let foundBoolean=false;let acc=true;conditionalVisitBoolean(args,(arg)=>{foundBoolean=true;acc=acc&&arg;return acc;});return{foundBoolean,result:acc,};}
function boolOr(args){let foundBoolean=false;let acc=false;conditionalVisitBoolean(args,(arg)=>{foundBoolean=true;acc=acc||arg;return!acc;});return{foundBoolean,result:acc,};}
function sum(values,locale){return reduceNumbers(values,(acc,a)=>acc+a,0,locale);}
function countUnique(args){return reduceAny(args,(acc,a)=>(isDataNonEmpty(a)?acc.add(a?.value):acc),new Set()).size;}
function assert(condition,message){if(!condition){throw new EvaluationError(message);}}
function assertNotZero(value,message=_t("Evaluation of function [[FUNCTION_NAME]] caused a divide by zero error.")){if(value===0){throw new DivisionByZeroError(message);}}
function isSingleColOrRow(arg){return arg.length===1||arg[0].length===1;}
function areSameDimensions(...args){if(args.every(isMatrix)){const cols=args[0].length;const rows=args[0][0].length;for(const arg of args){if(arg.length!==cols||arg[0].length!==rows){return false;}}
return true;}
return!args.some((arg)=>Array.isArray(arg)&&(arg.length!==1||arg[0].length!==1));}
function isSquareMatrix(arg){return arg.length===arg[0].length;}
const expectNumberGreaterThanOrEqualToOne=(value)=>_t("The function [[FUNCTION_NAME]] expects a number value to be greater than or equal to 1, but receives %s.",value);function getUnitMatrix(n){const matrix=Array(n);for(let i=0;i<n;i++){matrix[i]=Array(n).fill(0);matrix[i][i]=1;}
return matrix;}
function invertMatrix(M){if(M.length!==M[0].length){throw new EvaluationError(_t("Function [[FUNCTION_NAME]] invert matrix error, only square matrices are invertible"));}
let determinant=1;const dim=M.length;const I=getUnitMatrix(dim);const C=M.map((row)=>row.slice());for(let pivot=0;pivot<dim;pivot++){let diagonalElement=C[pivot][pivot];if(diagonalElement===0){for(let row=pivot+1;row<dim;row++){if(C[pivot][row]!==0){swapMatrixRows(C,pivot,row);swapMatrixRows(I,pivot,row);determinant*=-1;break;}}
diagonalElement=C[pivot][pivot];if(diagonalElement===0){return{determinant:0};}}
for(let col=0;col<dim;col++){C[col][pivot]=C[col][pivot]/diagonalElement;I[col][pivot]=I[col][pivot]/diagonalElement;}
determinant*=diagonalElement;for(let row=0;row<dim;row++){if(row===pivot){continue;}
const e=C[pivot][row];for(let col=0;col<dim;col++){C[col][row]-=e*C[col][pivot];I[col][row]-=e*I[col][pivot];}}}
return{inverted:I,determinant};}
function swapMatrixRows(matrix,row1,row2){for(let i=0;i<matrix.length;i++){const tmp=matrix[i][row1];matrix[i][row1]=matrix[i][row2];matrix[i][row2]=tmp;}}
function multiplyMatrices(matrix1,matrix2){if(matrix1.length!==matrix2[0].length){throw new EvaluationError(_t("Cannot multiply matrices : incompatible matrices size."));}
const rowsM1=matrix1[0].length;const colsM2=matrix2.length;const n=matrix1.length;const result=Array(colsM2);for(let col=0;col<colsM2;col++){result[col]=Array(rowsM1);for(let row=0;row<rowsM1;row++){let sum=0;for(let k=0;k<n;k++){sum+=matrix1[k][row]*matrix2[col][k];}
result[col][row]=sum;}}
return result;}
function toScalar(arg){if(!isMatrix(arg)){return arg;}
if(!isSingleElementMatrix(arg)){throw new EvaluationError(_t("The value should be a scalar or a 1x1 matrix"));}
return arg[0][0];}
function isSingleElementMatrix(matrix){return matrix.length===1&&matrix[0].length===1;}
function isMultipleElementMatrix(arg){return isMatrix(arg)&&!isSingleElementMatrix(arg);}
function assertSameNumberOfElements(...args){const dims=args[0].length;args.forEach((arg,i)=>assert(arg.length===dims,_t("[[FUNCTION_NAME]] has mismatched dimensions for argument %s (%s vs %s).",i.toString(),dims.toString(),arg.length.toString())));}
function average(values,locale){let count=0;const sum=reduceNumbers(values,(acc,a)=>{count+=1;return acc+a;},0,locale);assertNotZero(count);return sum/count;}
function countNumbers(values,locale){let count=0;for(const n of values){if(isMatrix(n)){for(const i of n){for(const j of i){if(typeof j.value==="number"){count+=1;}}}}
else{const value=n?.value;if(!isEvaluationError(value)&&(typeof value!=="string"||isNumber(value,locale)||parseDateTime(value,locale))){count+=1;}}}
return count;}
function countAny(values){return reduceAny(values,(acc,a)=>(a!==undefined&&a.value!==null?acc+1:acc),0);}
function max(values,locale){let max={value:-Infinity};visitNumbers(values,(a)=>{if(a.value>=max.value){max=a;}},locale);return max.value===-Infinity?{value:0}:max;}
function min(values,locale){let min={value:Infinity};visitNumbers(values,(a)=>{if(a.value<=min.value){min=a;}},locale);return min.value===Infinity?{value:0}:min;}
function prepareDataForRegression(X,Y,newX){const _X=X[0].length?X:[range(1,Y.flat().length+1)];const nVar=_X.length;let _newX=newX[0].length?newX:_X;_newX=_newX.length===nVar?transposeMatrix(_newX):_newX;return{_X,_newX};}
function fullLinearRegression(X,Y,computeIntercept=true,verbose=false){const y=Y.flat();const n=y.length;let{_X}=prepareDataForRegression(X,Y,[[]]);_X=_X.length===n?transposeMatrix(_X):_X.slice();assertSameNumberOfElements(_X[0],y);const nVar=_X.length;const nDeg=n-nVar-(computeIntercept?1:0);const yMatrix=[y];const xMatrix=transposeMatrix(_X.reverse());const avgX=[];for(let i=0;i<nVar;i++){avgX.push(0);if(computeIntercept){for(const xij of _X[i]){avgX[i]+=xij;}
avgX[i]/=n;}}
let avgY=0;if(computeIntercept){for(const yi of y){avgY+=yi;}
avgY/=n;}
const redX=xMatrix.map((row)=>row.map((value,i)=>value-avgX[i]));if(computeIntercept){xMatrix.forEach((row)=>row.push(1));}
const coeffs=getLMSCoefficients(xMatrix,yMatrix);if(!computeIntercept){coeffs.push([0]);}
if(!verbose){return coeffs;}
const dot1=multiplyMatrices(redX,transposeMatrix(redX));const{inverted:dotInv}=invertMatrix(dot1);if(dotInv===undefined){throw new EvaluationError(_t("Matrix is not invertible"));}
let SSE=0,SSR=0;for(let i=0;i<n;i++){const yi=y[i]-avgY;let temp=0;for(let j=0;j<nVar;j++){const xi=redX[i][j];temp+=xi*coeffs[j][0];}
const ei=yi-temp;SSE+=ei*ei;SSR+=temp*temp;}
const RMSE=Math.sqrt(SSE/nDeg);const r2=SSR/(SSR+SSE);const f_stat=SSR/nVar/(SSE/nDeg);const deltaCoeffs=[];for(let i=0;i<nVar;i++){deltaCoeffs.push(RMSE*Math.sqrt(dotInv[i][i]));}
if(computeIntercept){const dot2=multiplyMatrices(dotInv,[avgX]);const dot3=multiplyMatrices(transposeMatrix([avgX]),dot2);deltaCoeffs.push(RMSE*Math.sqrt(dot3[0][0]+1/y.length));}
const returned=[[coeffs[0][0],deltaCoeffs[0],r2,f_stat,SSR],[coeffs[1][0],deltaCoeffs[1],RMSE,nDeg,SSE],];for(let i=2;i<nVar;i++){returned.push([coeffs[i][0],deltaCoeffs[i],"","",""]);}
if(computeIntercept){returned.push([coeffs[nVar][0],deltaCoeffs[nVar],"","",""]);}
else{returned.push([0,"","","",""]);}
return returned;}
function polynomialRegression(flatY,flatX,order,intercept){assertSameNumberOfElements(flatX,flatY);assert(order>=1,_t("Function [[FUNCTION_NAME]] A regression of order less than 1 cannot be possible."));const yMatrix=[flatY];const xMatrix=flatX.map((x)=>range(0,order).map((i)=>Math.pow(x,order-i)));if(intercept){xMatrix.forEach((row)=>row.push(1));}
const coeffs=getLMSCoefficients(xMatrix,yMatrix);if(!intercept){coeffs.push([0]);}
return coeffs;}
function getLMSCoefficients(xMatrix,yMatrix){const xMatrixT=transposeMatrix(xMatrix);const dot1=multiplyMatrices(xMatrix,xMatrixT);const{inverted:dotInv}=invertMatrix(dot1);if(dotInv===undefined){throw new EvaluationError(_t("Matrix is not invertible"));}
const dot2=multiplyMatrices(xMatrix,yMatrix);return transposeMatrix(multiplyMatrices(dotInv,dot2));}
function evaluatePolynomial(coeffs,x,order){return coeffs.reduce((acc,coeff,i)=>acc+coeff*Math.pow(x,order-i),0);}
function expM(M){return M.map((col)=>col.map((cell)=>Math.exp(cell)));}
function logM(M){return M.map((col)=>col.map((cell)=>Math.log(cell)));}
function predictLinearValues(Y,X,newX,computeIntercept){const{_X,_newX}=prepareDataForRegression(X,Y,newX);const coeffs=fullLinearRegression(_X,Y,computeIntercept,false);const nVar=coeffs.length-1;const newY=_newX.map((col)=>{let value=0;for(let i=0;i<nVar;i++){value+=coeffs[i][0]*col[nVar-i-1];}
value+=coeffs[nVar][0];return[value];});return newY.length===newX.length?newY:transposeMatrix(newY);}
function getMovingAverageValues(dataset,labels,windowSize=DEFAULT_WINDOW_SIZE){const values=[];for(let i=0;i<windowSize-1;i++){values.push({x:labels[i],y:NaN});}
for(let i=0;i<=dataset.length-windowSize;i++){let sum=0;for(let j=i;j<i+windowSize;j++){sum+=dataset[j];}
values.push({x:labels[i+windowSize-1],y:sum/windowSize});}
return values;}
const pivotTimeAdapterRegistry=new Registry();function pivotTimeAdapter(granularity){return pivotTimeAdapterRegistry.get(granularity);}
const dayAdapter={normalizeFunctionValue(value){return toNumber(value,DEFAULT_LOCALE);},toValueAndFormat(normalizedValue,locale){return{value:toNumber(normalizedValue,DEFAULT_LOCALE),format:"dd mmm yyyy",};},toFunctionValue(normalizedValue){const jsDate=toJsDate(normalizedValue,DEFAULT_LOCALE);return`DATE(${jsDate.getFullYear()},${jsDate.getMonth() + 1},${jsDate.getDate()})`;},};const dayOfMonthAdapter={normalizeFunctionValue(value){const day=toNumber(value,DEFAULT_LOCALE);if(day<1||day>31){throw new EvaluationError(_t("%s is not a valid day of month (it should be a number between 1 and 31)",day));}
return day;},toValueAndFormat(normalizedValue){return{value:toNumber(normalizedValue,DEFAULT_LOCALE),format:"0",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const dayOfWeekAdapter={normalizeFunctionValue(value){const day=toNumber(value,DEFAULT_LOCALE);if(day<1||day>7){throw new EvaluationError(_t("%s is not a valid day of week (it should be a number between 1 and 7)",day));}
return day;},toValueAndFormat(normalizedValue,locale){const index=(normalizedValue-1+(locale||DEFAULT_LOCALE).weekStart)%7;return{value:DAYS$1[index].toString(),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const isoWeekNumberAdapter={normalizeFunctionValue(value){const isoWeek=toNumber(value,DEFAULT_LOCALE);if(isoWeek<0||isoWeek>53){throw new EvaluationError(_t("%s is not a valid week (it should be a number between 0 and 53)",isoWeek));}
return isoWeek;},toValueAndFormat(normalizedValue){return{value:toNumber(normalizedValue,DEFAULT_LOCALE),format:"0",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const monthNumberAdapter={normalizeFunctionValue(value){const month=toNumber(value,DEFAULT_LOCALE);if(month<1||month>12){throw new EvaluationError(_t("%s is not a valid month (it should be a number between 1 and 12)",month));}
return month;},toValueAndFormat(normalizedValue){return{value:MONTHS[toNumber(normalizedValue,DEFAULT_LOCALE)-1].toString(),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const monthAdapter={normalizeFunctionValue(value){const date=toNumber(value,DEFAULT_LOCALE);return formatValue(date,{locale:DEFAULT_LOCALE,format:"mm/yyyy"});},toValueAndFormat(normalizedValue){return{value:toNumber(normalizedValue,DEFAULT_LOCALE),format:"mmmm yyyy",};},toFunctionValue(normalizedValue){const jsDate=toJsDate(normalizedValue,DEFAULT_LOCALE);return`DATE(${jsDate.getFullYear()},${jsDate.getMonth() + 1},1)`;},};const quarterNumberAdapter={normalizeFunctionValue(value){const quarter=toNumber(value,DEFAULT_LOCALE);if(quarter<1||quarter>4){throw new EvaluationError(_t("%s is not a valid quarter (it should be a number between 1 and 4)",quarter));}
return quarter;},toValueAndFormat(normalizedValue){return{value:_t("Q%(quarter_number)s",{quarter_number:normalizedValue}),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const yearAdapter={normalizeFunctionValue(value){const year=toNumber(value,DEFAULT_LOCALE);if(year>3000){return toJsDate(year,DEFAULT_LOCALE).getFullYear();}
return year;},toValueAndFormat(normalizedValue){return{value:toNumber(normalizedValue,DEFAULT_LOCALE),format:"0",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const hourNumberAdapter={normalizeFunctionValue(value){const hour=toNumber(value,DEFAULT_LOCALE);if(hour<0||hour>23){throw new EvaluationError(_t("%s is not a valid hour (it should be a number between 0 and 23)",hour));}
return hour;},toValueAndFormat(normalizedValue){return{value:_t("%(hour_number)sh",{hour_number:normalizedValue}),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const minuteNumberAdapter={normalizeFunctionValue(value){const minute=toNumber(value,DEFAULT_LOCALE);if(minute<0||minute>59){throw new EvaluationError(_t("%s is not a valid minute (it should be a number between 0 and 59)",minute));}
return minute;},toValueAndFormat(normalizedValue){return{value:_t("%(minute_number)s'",{minute_number:normalizedValue}),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};const secondNumberAdapter={normalizeFunctionValue(value){const second=toNumber(value,DEFAULT_LOCALE);if(second<0||second>59){throw new EvaluationError(_t("%s is not a valid second (it should be a number between 0 and 59)",second));}
return second;},toValueAndFormat(normalizedValue){return{value:_t("%(second_number)s''",{second_number:normalizedValue}),format:"@",};},toFunctionValue(normalizedValue){return`${normalizedValue}`;},};function nullHandlerDecorator(adapter){return{normalizeFunctionValue(value){if(value===null){return null;}
return adapter.normalizeFunctionValue(value);},toValueAndFormat(normalizedValue,locale){if(normalizedValue===null){return{value:_t("(Undefined)")};}
return adapter.toValueAndFormat(normalizedValue,locale);},toFunctionValue(normalizedValue){if(normalizedValue===null){return"false";}
return adapter.toFunctionValue(normalizedValue);},};}
pivotTimeAdapterRegistry.add("day",nullHandlerDecorator(dayAdapter)).add("year",nullHandlerDecorator(yearAdapter)).add("day_of_month",nullHandlerDecorator(dayOfMonthAdapter)).add("iso_week_number",nullHandlerDecorator(isoWeekNumberAdapter)).add("month_number",nullHandlerDecorator(monthNumberAdapter)).add("month",nullHandlerDecorator(monthAdapter)).add("quarter_number",nullHandlerDecorator(quarterNumberAdapter)).add("day_of_week",nullHandlerDecorator(dayOfWeekAdapter)).add("hour_number",nullHandlerDecorator(hourNumberAdapter)).add("minute_number",nullHandlerDecorator(minuteNumberAdapter)).add("second_number",nullHandlerDecorator(secondNumberAdapter));const AGGREGATOR_NAMES={count:_t("Count"),count_distinct:_t("Count Distinct"),bool_and:_t("Boolean And"),bool_or:_t("Boolean Or"),max:_t("Maximum"),min:_t("Minimum"),avg:_t("Average"),sum:_t("Sum"),};const NUMBER_CHAR_AGGREGATORS=["max","min","avg","sum","count_distinct","count"];const AGGREGATORS_BY_FIELD_TYPE={integer:NUMBER_CHAR_AGGREGATORS,char:NUMBER_CHAR_AGGREGATORS,boolean:["count_distinct","count","bool_and","bool_or"],datetime:["max","min","count_distinct","count"],};const AGGREGATORS={};for(const type in AGGREGATORS_BY_FIELD_TYPE){AGGREGATORS[type]={};for(const aggregator of AGGREGATORS_BY_FIELD_TYPE[type]){AGGREGATORS[type][aggregator]=AGGREGATOR_NAMES[aggregator];}}
const AGGREGATORS_FN={count:(args)=>({value:countAny([args]),format:"0",}),count_distinct:(args)=>({value:countUnique([args]),format:"0",}),bool_and:(args)=>({value:boolAnd([args]).result,}),bool_or:(args)=>({value:boolOr([args]).result,}),max:(args,locale)=>max([args],locale),min:(args,locale)=>min([args],locale),avg:(args,locale)=>({value:average([args],locale),format:inferFormat(args),}),sum:(args,locale)=>({value:sum([args],locale),format:inferFormat(args),}),};function getMaxObjectId(o){const keys=Object.keys(o);if(!keys.length){return 0;}
const nums=keys.map((id)=>parseInt(id,10));return Math.max(...nums);}
const ALL_PERIODS={year:_t("Year"),quarter:_t("Quarter & Year"),month:_t("Month & Year"),week:_t("Week & Year"),day:_t("Day"),quarter_number:_t("Quarter"),month_number:_t("Month"),iso_week_number:_t("Week"),day_of_month:_t("Day of Month"),day_of_week:_t("Day of Week"),hour_number:_t("Hour"),minute_number:_t("Minute"),second_number:_t("Second"),};const DATE_FIELDS=["date","datetime"];function parseDimension(dimension){const[fieldName,granularity]=dimension.split(":");if(granularity){return{fieldName,granularity};}
return{fieldName};}
function isDateOrDatetimeField(field){return DATE_FIELDS.includes(field.type);}
function generatePivotArgs(formulaId,domain,measure){const args=[formulaId];if(measure){args.push(`"${measure}"`);}
for(const{field,value,type}of domain){if(field==="measure"){args.push(`"measure"`,`"${value}"`);continue;}
const{granularity}=parseDimension(field);const formattedValue=toFunctionPivotValue(value,{type,granularity});args.push(`"${field}"`,formattedValue);}
return args;}
function areDomainArgsFieldsValid(dimensions,definition){let argIndex=0;let definitionIndex=0;const cols=definition.columns.map((col)=>col.nameWithGranularity);const rows=definition.rows.map((row)=>row.nameWithGranularity);while(dimensions[argIndex]!==undefined&&dimensions[argIndex]===rows[definitionIndex]){argIndex++;definitionIndex++;}
definitionIndex=0;while(dimensions[argIndex]!==undefined&&dimensions[argIndex]===cols[definitionIndex]){argIndex++;definitionIndex++;}
return dimensions.length===argIndex;}
function createPivotFormula(formulaId,cell){switch(cell.type){case"HEADER":return`=PIVOT.HEADER(${generatePivotArgs(formulaId, cell.domain).join(",")})`;case"VALUE":return`=PIVOT.VALUE(${generatePivotArgs(formulaId, cell.domain, cell.measure).join(",")})`;case"MEASURE_HEADER":return`=PIVOT.HEADER(${generatePivotArgs(formulaId, [
                ...cell.domain,
                { field: "measure", value: cell.measure, type: "char" },
            ]).join(",")})`;}
return"";}
function toNormalizedPivotValue(dimension,groupValue){if(groupValue===null||groupValue==="null"){return null;}
const extractedGroupValue=typeof groupValue==="object"?groupValue.value:groupValue;if(isEvaluationError(extractedGroupValue)){return extractedGroupValue;}
const groupValueString=typeof groupValue==="boolean"?toString(groupValue).toLocaleLowerCase():toString(groupValue);if(groupValueString==="null"){return null;}
if(!pivotNormalizationValueRegistry.contains(dimension.type)){throw new EvaluationError(_t("Field %(field)s is not supported because of its type (%(type)s)",{field:dimension.displayName,type:dimension.type,}));}
if(groupValueString.toLowerCase()==="false"){return false;}
const normalizer=pivotNormalizationValueRegistry.get(dimension.type);return normalizer(groupValueString,dimension.granularity);}
function normalizeDateTime(value,granularity){return pivotTimeAdapter(granularity??"month").normalizeFunctionValue(value);}
function toFunctionPivotValue(value,dimension){if(value===null){return`"null"`;}
if(!pivotToFunctionValueRegistry.contains(dimension.type)){return`"${value}"`;}
return pivotToFunctionValueRegistry.get(dimension.type)(value,dimension.granularity);}
function toFunctionValueDateTime(value,granularity){return pivotTimeAdapter(granularity??"month").toFunctionValue(value);}
const pivotNormalizationValueRegistry=new Registry();pivotNormalizationValueRegistry.add("date",normalizeDateTime).add("datetime",normalizeDateTime).add("integer",(value)=>toNumber(value,DEFAULT_LOCALE)).add("boolean",(value)=>toBoolean(value)).add("char",(value)=>toString(value));const pivotToFunctionValueRegistry=new Registry();pivotToFunctionValueRegistry.add("date",toFunctionValueDateTime).add("datetime",toFunctionValueDateTime).add("integer",(value)=>`${toNumber(value, DEFAULT_LOCALE)}`).add("boolean",(value)=>(toBoolean(value)?"TRUE":"FALSE")).add("char",(value)=>`"${toString(value).replace(/"/g, '\\"')}"`);function getFieldDisplayName(field){return field.displayName+(field.granularity?` (${ALL_PERIODS[field.granularity]})`:"");}
function addAlignFormatToPivotHeader(domain,functionResult){if(domain.length===0){return functionResult;}
return{...functionResult,format:(functionResult.format||"@")+"* "};}
function isSortedColumnValid(sortedColumn,pivot){try{if(!pivot.getMeasure(sortedColumn.measure)){return false;}
const columns=pivot.definition.columns;for(let i=0;i<sortedColumn.domain.length;i++){if(columns[i].nameWithGranularity!==sortedColumn.domain[i].field){return false;}
const possibleValues=pivot.getPossibleFieldValues(columns[i]).map((v)=>v.value);if(!possibleValues.includes(sortedColumn.domain[i].value)&&!(sortedColumn.domain[i].value===null&&possibleValues.includes(""))){return false;}}
return true;}
catch(e){return false;}}
class CellClipboardHandler extends AbstractCellClipboardHandler{isCutAllowed(data){if(data.zones.length!==1){return"WrongCutSelection";}
return"Success";}
copy(data){const sheetId=data.sheetId;const{clippedZones,rowsIndexes,columnsIndexes}=data;const clippedCells=[];const isCopyingOneCell=rowsIndexes.length===1&&columnsIndexes.length===1;for(const row of rowsIndexes){const cellsInRow=[];for(const col of columnsIndexes){const position={col,row,sheetId};let cell=this.getters.getCell(position);const evaluatedCell=this.getters.getEvaluatedCell(position);const pivotId=this.getters.getPivotIdFromPosition(position);const spreader=this.getters.getArrayFormulaSpreadingOn(position);if(pivotId&&spreader){const pivotZone=this.getters.getSpreadZone(spreader);if((!deepEquals(spreader,position)||!isCopyingOneCell)&&pivotZone&&!data.zones.some((z)=>isZoneInside(pivotZone,z))){const pivotCell=this.getters.getPivotCellFromPosition(position);const formulaPivotId=this.getters.getPivotFormulaId(pivotId);const pivotFormula=createPivotFormula(formulaPivotId,pivotCell);cell={id:cell?.id||"",style:cell?.style,format:cell?.format,content:pivotFormula,isFormula:false,parsedValue:evaluatedCell.value,};}}
else{if(spreader&&!deepEquals(spreader,position)){const isSpreaderCopied=rowsIndexes.includes(spreader.row)&&columnsIndexes.includes(spreader.col);const content=isSpreaderCopied?"":formatValue(evaluatedCell.value,{locale:this.getters.getLocale()});cell={id:cell?.id||"",style:cell?.style,format:evaluatedCell.format,content,isFormula:false,parsedValue:evaluatedCell.value,};}}
cellsInRow.push({content:cell?.content??"",style:cell?.style,format:cell?.format,tokens:cell?.isFormula?cell.compiledFormula.tokens.map(({value,type})=>({value,type})):[],border:this.getters.getCellBorder(position)||undefined,evaluatedCell,position,});}
clippedCells.push(cellsInRow);}
return{cells:clippedCells,zones:clippedZones,sheetId:data.sheetId,};}
isPasteAllowed(sheetId,target,content,clipboardOptions){if(!content.cells){return"Success";}
if(clipboardOptions?.isCutOperation&&clipboardOptions?.pasteOption!==undefined){return"WrongPasteOption";}
if(target.length>1){if(content.cells.length>1||content.cells[0].length>1){return"WrongPasteSelection";}}
const clipboardHeight=content.cells.length;const clipboardWidth=content.cells[0].length;for(const zone of getPasteZones(target,content.cells)){if(this.getters.doesIntersectMerge(sheetId,zone)){if(target.length>1||!this.getters.isSingleCellOrMerge(sheetId,target[0])||clipboardHeight*clipboardWidth!==1){return"WillRemoveExistingMerge";}}}
return"Success";}
paste(target,content,options){const zones=target.zones;const sheetId=target.sheetId;if(!options.isCutOperation){this.pasteFromCopy(sheetId,zones,content.cells,options);}
else{this.pasteFromCut(sheetId,zones,content,options);}}
getPasteTarget(sheetId,target,content,options){const width=content.cells[0].length;const height=content.cells.length;if(options?.isCutOperation){return{sheetId,zones:[{left:target[0].left,top:target[0].top,right:target[0].left+width-1,bottom:target[0].top+height-1,},],};}
if(width===1&&height===1){return{zones:[],sheetId};}
return{sheetId,zones:getPasteZones(target,content.cells)};}
pasteFromCut(sheetId,target,content,options){this.clearClippedZones(content);const selection=target[0];this.pasteZone(sheetId,selection.left,selection.top,content.cells,options);}
clearClippedZones(content){this.dispatch("CLEAR_CELLS",{sheetId:content.sheetId,target:content.zones,});this.dispatch("CLEAR_FORMATTING",{sheetId:content.sheetId,target:content.zones,});}
pasteZone(sheetId,col,row,cells,clipboardOptions){for(const[r,rowCells]of cells.entries()){for(const[c,origin]of rowCells.entries()){if(!origin){continue;}
const position={col:col+c,row:row+r,sheetId};this.pasteCell(origin,position,clipboardOptions);}}}
pasteCell(origin,target,clipboardOption){const{sheetId,col,row}=target;const targetCell=this.getters.getEvaluatedCell(target);const originFormat=origin?.format??origin.evaluatedCell.format;if(clipboardOption?.pasteOption==="asValue"){this.dispatch("UPDATE_CELL",{...target,content:origin.evaluatedCell.value?.toString()||"",format:originFormat,});return;}
if(clipboardOption?.pasteOption==="onlyFormat"){this.dispatch("UPDATE_CELL",{...target,style:origin?.style??null,format:originFormat??targetCell.format,});return;}
let content=origin?.content;if(origin?.tokens&&origin.tokens.length>0&&!clipboardOption?.isCutOperation){content=this.getters.getTranslatedCellFormula(sheetId,col-origin.position.col,row-origin.position.row,origin.tokens);}
else if(origin?.tokens&&origin.tokens.length>0){content=this.getters.getFormulaMovedInSheet(origin.position.sheetId,sheetId,origin.tokens);}
if(content!==""||origin?.format||origin?.style){this.dispatch("UPDATE_CELL",{...target,content,style:origin?.style||null,format:origin?.format,});}
else if(targetCell){this.dispatch("CLEAR_CELL",target);}}
convertTextToClipboardData(text){const locale=this.getters.getLocale();const copiedData={cells:[],};const values=[];let rowLength=0;for(const[i,row]of text.replace(/\r/g,"").split("\n").entries()){values.push(row.split("\t"));if(values[i].length>rowLength){rowLength=values[i].length;}}
for(const row of values){const cells=[];for(let i=0;i<rowLength;i++){const content=canonicalizeNumberValue(row[i]||"",locale);cells.push({content:content,evaluatedCell:{formattedValue:content,},});}
copiedData.cells.push(cells);}
return copiedData;}}
class AbstractFigureClipboardHandler extends ClipboardHandler{copy(data){return;}}
class ChartClipboardHandler extends AbstractFigureClipboardHandler{copy(data){const sheetId=data.sheetId;const figure=this.getters.getFigure(sheetId,data.figureId);if(!figure){throw new Error(`No figure for the given id: ${data.figureId}`);}
if(figure.tag!=="chart"){return;}
const copiedFigure={...figure};const chart=this.getters.getChart(data.figureId);if(!chart){throw new Error(`No chart for the given id: ${data.figureId}`);}
const copiedChart=chart.copyInSheetId(sheetId);return{figureId:data.figureId,copiedFigure,copiedChart,};}
getPasteTarget(sheetId,target,content,options){const newId=new UuidGenerator().smallUuid();return{zones:[],figureId:newId,sheetId};}
paste(target,clippedContent,options){if(!target.figureId){return;}
const{zones,figureId}=target;const sheetId=target.sheetId;const{width,height}=clippedContent.copiedFigure;const copy=clippedContent.copiedChart.copyInSheetId(sheetId);const maxPosition=this.getters.getMaxAnchorOffset(sheetId,height,width);let{left:col,top:row}=zones[0];const offset={x:0,y:0};if(col>maxPosition.col){col=maxPosition.col;offset.x=maxPosition.offset.x;}
if(row>maxPosition.row){row=maxPosition.row;offset.y=maxPosition.offset.y;}
this.dispatch("CREATE_CHART",{figureId,sheetId,definition:copy.getDefinition(),col,row,offset,size:{height,width},});if(options.isCutOperation){this.dispatch("DELETE_FIGURE",{sheetId:clippedContent.copiedChart.sheetId,figureId:clippedContent.copiedFigure.id,});}
this.dispatch("SELECT_FIGURE",{figureId});}
isPasteAllowed(sheetId,target,content,option){if(target.length===0){return"EmptyTarget";}
if(option?.pasteOption!==undefined){return"WrongFigurePasteOption";}
return"Success";}}
class ConditionalFormatClipboardHandler extends AbstractCellClipboardHandler{uuidGenerator=new UuidGenerator();queuedChanges={};copy(data){if(!data.zones.length){return;}
const{rowsIndexes,columnsIndexes}=data;const sheetId=data.sheetId;const cfRules=[];for(const row of rowsIndexes){const cfRuleInRow=[];for(const col of columnsIndexes){const cfRules=Array.from(this.getters.getRulesByCell(sheetId,col,row));cfRuleInRow.push({position:{col,row,sheetId},rules:cfRules,});}
cfRules.push(cfRuleInRow);}
return{cfRules};}
paste(target,clippedContent,options){this.queuedChanges={};if(options.pasteOption==="asValue"){return;}
const zones=target.zones;const sheetId=target.sheetId;if(!options.isCutOperation){this.pasteFromCopy(sheetId,zones,clippedContent.cfRules,options);}
else{this.pasteFromCut(sheetId,zones,clippedContent);}
this.executeQueuedChanges();}
pasteFromCut(sheetId,target,content){const selection=target[0];this.pasteZone(sheetId,selection.left,selection.top,content.cfRules,{isCutOperation:true,});}
pasteZone(sheetId,col,row,cfRules,clipboardOptions){for(const[r,rowCells]of cfRules.entries()){for(const[c,origin]of rowCells.entries()){const position={col:col+c,row:row+r,sheetId};this.pasteCf(origin,position,clipboardOptions?.isCutOperation);}}}
pasteCf(origin,target,isCutOperation){if(origin?.rules&&origin.rules.length>0){const originZone=positionToZone(origin.position);const zone=positionToZone(target);for(const rule of origin.rules){const toRemoveZones=[];if(isCutOperation){toRemoveZones.push(originZone);}
if(origin.position.sheetId===target.sheetId){this.adaptCFRules(origin.position.sheetId,rule,[zone],toRemoveZones);}
else{this.adaptCFRules(origin.position.sheetId,rule,[],toRemoveZones);const cfToCopyTo=this.getCFToCopyTo(target.sheetId,rule);this.adaptCFRules(target.sheetId,cfToCopyTo,[zone],[]);}}}}
adaptCFRules(sheetId,cf,toAdd,toRemove){if(!this.queuedChanges[sheetId]){this.queuedChanges[sheetId]=[];}
const queuedChange=this.queuedChanges[sheetId].find((queued)=>queued.cf.id===cf.id);if(!queuedChange){this.queuedChanges[sheetId].push({toAdd,toRemove,cf});}
else{queuedChange.toAdd.push(...toAdd);queuedChange.toRemove.push(...toRemove);}}
executeQueuedChanges(){for(const sheetId in this.queuedChanges){for(const{toAdd,toRemove,cf}of this.queuedChanges[sheetId]){const newRangesXc=this.getters.getAdaptedCfRanges(sheetId,cf,toAdd,toRemove);if(!newRangesXc){continue;}
if(newRangesXc.length===0){this.dispatch("REMOVE_CONDITIONAL_FORMAT",{id:cf.id,sheetId});continue;}
this.dispatch("ADD_CONDITIONAL_FORMAT",{cf:{id:cf.id,rule:cf.rule,stopIfTrue:cf.stopIfTrue,},ranges:newRangesXc,sheetId,});}}}
getCFToCopyTo(targetSheetId,originCF){let targetCF=this.getters.getConditionalFormats(targetSheetId).find((cf)=>cf.stopIfTrue===originCF.stopIfTrue&&deepEquals(cf.rule,originCF.rule));const queuedCfs=this.queuedChanges[targetSheetId];if(!targetCF&&queuedCfs){targetCF=queuedCfs.find((queued)=>queued.cf.stopIfTrue===originCF.stopIfTrue&&deepEquals(queued.cf.rule,originCF.rule))?.cf;}
return targetCF||{...originCF,id:this.uuidGenerator.smallUuid(),ranges:[]};}}
class DataValidationClipboardHandler extends AbstractCellClipboardHandler{uuidGenerator=new UuidGenerator();queuedChanges={};copy(data){const{rowsIndexes,columnsIndexes}=data;const sheetId=data.sheetId;const dvRules=[];for(const row of rowsIndexes){const dvRuleInRow=[];for(const col of columnsIndexes){const position={sheetId,col,row};const rule=this.getters.getValidationRuleForCell(position);dvRuleInRow.push({position,rule});}
dvRules.push(dvRuleInRow);}
return{dvRules};}
paste(target,clippedContent,options){this.queuedChanges={};if(options.pasteOption){return;}
const zones=target.zones;const sheetId=target.sheetId;if(!options.isCutOperation){this.pasteFromCopy(sheetId,zones,clippedContent.dvRules);}
else{this.pasteFromCut(sheetId,zones,clippedContent);}
this.executeQueuedChanges();}
pasteFromCut(sheetId,target,content){const selection=target[0];this.pasteZone(sheetId,selection.left,selection.top,content.dvRules,{isCutOperation:true,});}
pasteZone(sheetId,col,row,dvRules,clipboardOptions){for(const[r,rowCells]of dvRules.entries()){for(const[c,origin]of rowCells.entries()){const position={col:col+c,row:row+r,sheetId};this.pasteDataValidation(origin,position,clipboardOptions?.isCutOperation);}}}
pasteDataValidation(origin,target,isCutOperation){if(origin){const zone=positionToZone(target);const originZone=positionToZone(origin.position);const rule=origin.rule;if(!rule){const targetRule=this.getters.getValidationRuleForCell(target);if(targetRule){this.adaptDataValidationRule(target.sheetId,targetRule,[],[zone]);}
return;}
const toRemoveZone=[];if(isCutOperation){toRemoveZone.push(originZone);}
if(origin.position.sheetId===target.sheetId){const copyToRule=this.getDataValidationRuleToCopyTo(target.sheetId,rule,false);this.adaptDataValidationRule(origin.position.sheetId,copyToRule,[zone],toRemoveZone);}
else{const originRule=this.getters.getValidationRuleForCell(origin.position);if(originRule){this.adaptDataValidationRule(origin.position.sheetId,originRule,[],toRemoveZone);}
const copyToRule=this.getDataValidationRuleToCopyTo(target.sheetId,rule);this.adaptDataValidationRule(target.sheetId,copyToRule,[zone],[]);}}}
getDataValidationRuleToCopyTo(targetSheetId,originRule,newId=true){let targetRule=this.getters.getDataValidationRules(targetSheetId).find((rule)=>deepEquals(originRule.criterion,rule.criterion)&&originRule.isBlocking===rule.isBlocking);const queuedRules=this.queuedChanges[targetSheetId];if(!targetRule&&queuedRules){targetRule=queuedRules.find((queued)=>deepEquals(originRule.criterion,queued.rule.criterion)&&originRule.isBlocking===queued.rule.isBlocking)?.rule;}
return(targetRule||{...originRule,id:newId?this.uuidGenerator.smallUuid():originRule.id,ranges:[],});}
adaptDataValidationRule(sheetId,rule,toAdd,toRemove){if(!this.queuedChanges[sheetId]){this.queuedChanges[sheetId]=[];}
const queuedChange=this.queuedChanges[sheetId].find((queued)=>queued.rule.id===rule.id);if(!queuedChange){this.queuedChanges[sheetId].push({toAdd,toRemove,rule});}
else{queuedChange.toAdd.push(...toAdd);queuedChange.toRemove.push(...toRemove);}}
executeQueuedChanges(){for(const sheetId in this.queuedChanges){for(const{toAdd,toRemove,rule:dv}of this.queuedChanges[sheetId]){const dvZones=dv.ranges.map((range)=>range.zone);const withRemovedZones=recomputeZones(dvZones,toRemove);const newDvZones=recomputeZones([...withRemovedZones,...toAdd],[]);if(newDvZones.length===0){this.dispatch("REMOVE_DATA_VALIDATION_RULE",{sheetId,id:dv.id});continue;}
this.dispatch("ADD_DATA_VALIDATION_RULE",{rule:{id:dv.id,criterion:dv.criterion,isBlocking:dv.isBlocking},ranges:newDvZones.map((zone)=>this.getters.getRangeDataFromZone(sheetId,zone)),sheetId,});}}}}
class ImageClipboardHandler extends AbstractFigureClipboardHandler{copy(data){const sheetId=data.sheetId;const figure=this.getters.getFigure(sheetId,data.figureId);if(!figure){throw new Error(`No figure for the given id: ${data.figureId}`);}
const copiedFigure={...figure};if(figure.tag!=="image"){return;}
const image=this.getters.getImage(data.figureId);const copiedImage=deepCopy(image);return{figureId:data.figureId,copiedFigure,copiedImage,sheetId,};}
getPasteTarget(sheetId,target,content,options){const newId=new UuidGenerator().smallUuid();return{sheetId,zones:[],figureId:newId};}
paste(target,clippedContent,options){if(!target.figureId){return;}
const{zones,figureId}=target;const sheetId=this.getters.getActiveSheetId();const{width,height}=clippedContent.copiedFigure;const copy=deepCopy(clippedContent.copiedImage);const maxPosition=this.getters.getMaxAnchorOffset(sheetId,height,width);let{left:col,top:row}=zones[0];const offset={x:0,y:0};if(col>maxPosition.col){col=maxPosition.col;offset.x=maxPosition.offset.x;}
if(row>maxPosition.row){row=maxPosition.row;offset.y=maxPosition.offset.y;}
this.dispatch("CREATE_IMAGE",{figureId,sheetId,col,row,offset,size:{height,width},definition:copy,});if(options.isCutOperation){this.dispatch("DELETE_FIGURE",{sheetId:clippedContent.sheetId,figureId:clippedContent.copiedFigure.id,});}
this.dispatch("SELECT_FIGURE",{figureId});}
isPasteAllowed(sheetId,target,content,option){if(target.length===0){return"EmptyTarget";}
if(option?.pasteOption!==undefined){return"WrongFigurePasteOption";}
return"Success";}}
class MergeClipboardHandler extends AbstractCellClipboardHandler{copy(data){const sheetId=this.getters.getActiveSheetId();const{rowsIndexes,columnsIndexes}=data;const merges=[];for(const row of rowsIndexes){const mergesInRow=[];for(const col of columnsIndexes){const position={col,row,sheetId};mergesInRow.push(this.getters.getMerge(position));}
merges.push(mergesInRow);}
return{merges,sheetId};}
paste(target,content,options){if(options.isCutOperation){const copiedMerges=content.merges.flat().filter(isDefined);this.dispatch("REMOVE_MERGE",{sheetId:content.sheetId,target:copiedMerges});}
this.pasteFromCopy(target.sheetId,target.zones,content.merges,options);}
pasteZone(sheetId,col,row,merges){for(const[r,rowMerges]of merges.entries()){for(const[c,originMerge]of rowMerges.entries()){const position={col:col+c,row:row+r,sheetId};this.pasteMerge(originMerge,position);}}}
pasteMerge(originMerge,target){if(!originMerge){return;}
if(this.getters.isInMerge(target)){return;}
const{sheetId,col,row}=target;this.dispatch("ADD_MERGE",{sheetId,force:true,target:[{left:col,top:row,right:col+originMerge.right-originMerge.left,bottom:row+originMerge.bottom-originMerge.top,},],});}}
class ReferenceClipboardHandler extends AbstractCellClipboardHandler{copy(data){return{zones:data.clippedZones,sheetId:data.sheetId,};}
paste(target,content,options){if(options.isCutOperation){const selection=target.zones[0];this.dispatch("MOVE_RANGES",{target:content.zones,sheetId:content.sheetId,sheetName:this.getters.getSheetName(content.sheetId),targetSheetId:target.sheetId,col:selection.left,row:selection.top,});}}}
class SheetClipboardHandler extends AbstractCellClipboardHandler{isPasteAllowed(sheetId,target,content,options){if(!("cells"in content)){return"Success";}
const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);const pasteZones=getPasteZones(target,content.cells);if(doesAnyZoneCrossFrozenPane(pasteZones,xSplit,ySplit)){return"FrozenPaneOverlap";}
return"Success";}}
class TableClipboardHandler extends AbstractCellClipboardHandler{copy(data,isCutOperation){const sheetId=data.sheetId;const{rowsIndexes,columnsIndexes,zones}=data;const copiedTablesIds=new Set();const tableCells=[];for(const row of rowsIndexes){const tableCellsInRow=[];tableCells.push(tableCellsInRow);for(const col of columnsIndexes){const position={col,row,sheetId};const table=this.getters.getTable(position);if(!table){tableCellsInRow.push({});continue;}
const coreTable=this.getters.getCoreTable(position);const tableZone=coreTable?.range.zone;let copiedTable=undefined;if(!copiedTablesIds.has(table.id)&&coreTable&&tableZone&&zones.some((z)=>isZoneInside(tableZone,z))){copiedTablesIds.add(table.id);let{numberOfRows}=zoneToDimension(tableZone);for(let rowIndex=tableZone.top;rowIndex<=tableZone.bottom;rowIndex++){if(!isCutOperation&&!rowsIndexes.includes(rowIndex)){numberOfRows--;}}
const range=coreTable.range;const newRange=this.getters.extendRange(coreTable.range,"ROW",range.zone.top+numberOfRows-1-range.zone.bottom);copiedTable={range:this.getters.getRangeData(newRange),config:coreTable.config,type:coreTable.type,};}
tableCellsInRow.push({table:copiedTable,style:this.getTableStyleToCopy(position),isWholeTableCopied:copiedTablesIds.has(table.id),});}}
return{tableCells,sheetId:data.sheetId,};}
getTableStyleToCopy(cellPosition){const styleFromTable=this.getters.getCellTableStyle(cellPosition);const cellStyle=this.getters.getCellStyle(cellPosition);const bordersFromTable=this.getters.getCellTableBorder(cellPosition);const cellBorder=this.getters.getCellBorder(cellPosition);return{style:{...styleFromTable,...removeFalsyAttributes(cellStyle)},border:{...bordersFromTable,...removeFalsyAttributes(cellBorder)},};}
paste(target,content,options){const zones=target.zones;const sheetId=target.sheetId;if(!options.isCutOperation){this.pasteFromCopy(sheetId,zones,content.tableCells,options);}
else{this.pasteFromCut(sheetId,zones,content,options);}}
pasteFromCut(sheetId,target,content,options){for(const row of content.tableCells){for(const tableCell of row){if(tableCell.table){this.dispatch("REMOVE_TABLE",{sheetId:content.sheetId,target:[this.getters.getRangeFromRangeData(tableCell.table.range).zone],});}}}
const selection=target[0];this.pasteZone(sheetId,selection.left,selection.top,content.tableCells,options);}
pasteZone(sheetId,col,row,tableCells,clipboardOptions){for(let r=0;r<tableCells.length;r++){const rowCells=tableCells[r];for(let c=0;c<rowCells.length;c++){const tableCell=rowCells[c];if(!tableCell){continue;}
const position={col:col+c,row:row+r,sheetId};this.pasteTableCell(sheetId,tableCell,position,clipboardOptions);}}
if(tableCells.length===1){for(let c=0;c<tableCells[0].length;c++){this.dispatch("AUTOFILL_TABLE_COLUMN",{col:col+c,row,sheetId});}}}
pasteTableCell(sheetId,tableCell,position,options){if(tableCell.table&&!options?.pasteOption){const{range:tableRange}=tableCell.table;const zoneDims=zoneToDimension(this.getters.getRangeFromRangeData(tableRange).zone);const newTableZone={left:position.col,top:position.row,right:position.col+zoneDims.numberOfCols-1,bottom:position.row+zoneDims.numberOfRows-1,};this.dispatch("CREATE_TABLE",{sheetId:position.sheetId,ranges:[this.getters.getRangeDataFromZone(sheetId,newTableZone)],config:tableCell.table.config,tableType:tableCell.table.type,});}
if(this.getters.getCoreTable(position)||options?.pasteOption==="asValue"){return;}
if((!options?.pasteOption&&!tableCell.isWholeTableCopied)||options?.pasteOption==="onlyFormat"){if(tableCell.style?.style){this.dispatch("UPDATE_CELL",{...position,style:tableCell.style.style});}
if(tableCell.style?.border){this.dispatch("SET_BORDER",{...position,border:tableCell.style.border});}}}}
const clipboardHandlersRegistries={figureHandlers:new Registry(),cellHandlers:new Registry(),};clipboardHandlersRegistries.figureHandlers.add("chart",ChartClipboardHandler).add("image",ImageClipboardHandler);clipboardHandlersRegistries.cellHandlers.add("dataValidation",DataValidationClipboardHandler).add("cell",CellClipboardHandler).add("sheet",SheetClipboardHandler).add("merge",MergeClipboardHandler).add("border",BorderClipboardHandler).add("table",TableClipboardHandler).add("conditionalFormat",ConditionalFormatClipboardHandler).add("references",ReferenceClipboardHandler);function transformZone(zone,executed){if(executed.type==="REMOVE_COLUMNS_ROWS"){return reduceZoneOnDeletion(zone,executed.dimension==="COL"?"left":"top",executed.elements);}
if(executed.type==="ADD_COLUMNS_ROWS"){return expandZoneOnInsertion(zone,executed.dimension==="COL"?"left":"top",executed.base,executed.position,executed.quantity);}
return zone;}
function transformRangeData(range,executed){const deletedSheet=executed.type==="DELETE_SHEET"&&executed.sheetId;if("sheetId"in executed&&range._sheetId!==executed.sheetId){return range;}
else{const newZone=transformZone(range._zone,executed);if(newZone&&deletedSheet!==range._sheetId){return{...range,_zone:newZone};}}
return undefined;}
class EventBus{subscriptions={};on(type,owner,callback){if(!callback){throw new Error("Missing callback");}
if(!this.subscriptions[type]){this.subscriptions[type]=[];}
this.subscriptions[type].push({owner,callback,});}
trigger(type,payload){const subs=this.subscriptions[type]||[];for(let i=0,iLen=subs.length;i<iLen;i++){const sub=subs[i];sub.callback.call(sub.owner,payload);}}
off(eventType,owner){const subs=this.subscriptions[eventType];if(subs){this.subscriptions[eventType]=subs.filter((s)=>s.owner!==owner);}}
clear(){this.subscriptions={};}}
class DependencyContainer extends EventBus{dependencies=new Map();factory=new StoreFactory(this.get.bind(this));inject(Store,instance){if(this.dependencies.has(Store)&&this.dependencies.get(Store)!==instance){throw new Error(`Store ${Store.name} already has an instance`);}
this.dependencies.set(Store,instance);}
get(Store){if(!this.dependencies.has(Store)){this.dependencies.set(Store,this.instantiate(Store));}
return this.dependencies.get(Store);}
instantiate(Store,...args){return this.factory.build(Store,...args);}
resetStores(){this.dependencies.clear();}
dispose(){for(const instance of this.dependencies.values()){if("dispose"in instance&&typeof instance.dispose==="function"){instance.dispose();}}}}
class StoreFactory{get;pendingBuilds=new Set();constructor(get){this.get=get;}
build(Store,...args){if(this.pendingBuilds.has(Store)){throw new Error(`Circular dependency detected: ${[...this.pendingBuilds, Store]
                .map((s) => s.name)
                .join(" -> ")}`);}
this.pendingBuilds.add(Store);const instance=new Store(this.get,...args);this.pendingBuilds.delete(Store);return instance;}}
function createAbstractStore(storeName){class MetaStore{constructor(get){throw new Error(`This is a abstract store for ${storeName}, it cannot be instantiated.
Did you forget to inject your store instance?

const stores = useStoreProvider();
stores.inject(MyMetaStore, storeInstance);
`);}}
return MetaStore;}
class DisposableStore{get;disposeCallbacks=[];constructor(get){this.get=get;}
onDispose(callback){this.disposeCallbacks.push(callback);}
dispose(){this.disposeCallbacks.forEach((cb)=>cb());}}
function useStoreProvider(){const env=useEnv();if(env.__spreadsheet_stores__ instanceof DependencyContainer){return env.__spreadsheet_stores__;}
const container=new DependencyContainer();useSubEnv({__spreadsheet_stores__:container,getStore:(Store)=>{const store=container.get(Store);return proxifyStoreMutation(store,()=>container.trigger("store-updated"));},});onWillUnmount(()=>container.dispose());return container;}
function useStore(Store){const env=useEnv();const container=getDependencyContainer(env);const store=container.get(Store);return useStoreRenderProxy(container,store);}
function useLocalStore(Store,...args){const env=useEnv();const container=getDependencyContainer(env);const store=container.instantiate(Store,...args);onWillUnmount(()=>store.dispose());return useStoreRenderProxy(container,store);}
function useStoreRenderProxy(container,store){const component=useComponent();const proxy=proxifyStoreMutation(store,()=>{if(status(component)==="mounted"){container.trigger("store-updated");}});return proxy;}
function proxifyStoreMutation(store,callback){const proxy=new Proxy(store,{get(target,property,receiver){const thisStore=target;const value=Reflect.get(target,property,thisStore);if(store.mutators?.includes(property)){const functionProxy=new Proxy(value,{apply(target,thisArg,argArray){const res=Reflect.apply(target,thisStore,argArray);if(res==="noStateChange"){return;}
callback();},});return functionProxy;}
return value;},});return proxy;}
function getDependencyContainer(env){const container=env.__spreadsheet_stores__;if(!(container instanceof DependencyContainer)){throw new Error("No store provider found. Did you forget to call useStoreProvider()?");}
return container;}
const ModelStore=createAbstractStore("Model");class RendererStore{mutators=["register","unRegister","draw","startAnimation","stopAnimation"];renderers={};model;context=undefined;animationFrameId=null;registeredAnimations=new Set();constructor(get){this.model=get(ModelStore);}
register(renderer){if(!renderer.renderingLayers.length){return;}
for(const layer of renderer.renderingLayers){if(!this.renderers[layer]){this.renderers[layer]=[];}
this.renderers[layer].push(renderer);}}
unRegister(renderer){for(const layer of Object.keys(this.renderers)){this.renderers[layer]=this.renderers[layer].filter((r)=>r!==renderer);}}
drawLayer(context,layer,timeStamp){const renderers=this.renderers[layer];if(renderers){for(const renderer of renderers){context.ctx.save();renderer.drawLayer(context,layer,timeStamp);context.ctx.restore();}}
return"noStateChange";}
draw(context,timestamp){context=context||this.context;if(!context){throw new Error("Rendering context is not defined");}
this.context=context;for(const layer of OrderedLayers()){this.model.drawLayer(context,layer);this.drawLayer(context,layer,timestamp);}
return"noStateChange";}
startAnimation(animationId){this.registeredAnimations.add(animationId);if(!this.animationFrameId){const animationCallback=(timestamp)=>{this.animationFrameId=requestAnimationFrame(animationCallback);this.draw(undefined,timestamp);};this.animationFrameId=requestAnimationFrame(animationCallback);}
return"noStateChange";}
stopAnimation(animationId){this.registeredAnimations.delete(animationId);if(this.registeredAnimations.size===0&&this.animationFrameId!==null){cancelAnimationFrame(this.animationFrameId);this.animationFrameId=null;}
return"noStateChange";}
dispose(){if(this.animationFrameId){cancelAnimationFrame(this.animationFrameId);this.animationFrameId=null;}}}
class SpreadsheetStore extends DisposableStore{model=this.get(ModelStore);getters=this.model.getters;renderer=this.get(RendererStore);constructor(get){super(get);this.model.on("command-dispatched",this,this.handle);this.model.on("command-finalized",this,this.finalize);this.renderer.register(this);this.onDispose(()=>{this.model.off("command-dispatched",this);this.model.off("command-finalized",this);this.renderer.unRegister(this);});}
get renderingLayers(){return[];}
handle(cmd){}
finalize(){}
drawLayer(ctx,layer,timestamp){}}
const VOID_COMPOSER={id:"void-composer",get editionMode(){return"inactive";},startEdition:()=>{throw new Error("No composer is registered");},stopEdition:()=>{throw new Error("No composer is registered");},setCurrentContent:()=>{throw new Error("No composer is registered");},};class ComposerFocusStore extends SpreadsheetStore{mutators=["focusComposer","focusActiveComposer"];activeComposer=VOID_COMPOSER;_focusMode="inactive";get focusMode(){return this.activeComposer.editionMode==="inactive"?"inactive":this._focusMode;}
focusComposer(listener,args){this.activeComposer=listener;if(this.getters.isReadonly()){return"noStateChange";}
this._focusMode=args.focusMode||"contentFocus";if(this._focusMode!=="inactive"){this.setComposerContent(args);}
return;}
focusActiveComposer(args){if(this.getters.isReadonly()){return"noStateChange";}
if(!this.activeComposer){throw new Error("No composer is registered");}
this._focusMode=args.focusMode||"contentFocus";if(this._focusMode!=="inactive"){this.setComposerContent(args);}
return;}
setComposerContent({content,selection,}){if(this.activeComposer.editionMode==="inactive"){this.activeComposer.startEdition(content,selection);}
else if(content){this.activeComposer.setCurrentContent(content,selection);}}}
const STYLESHEETS={};let nextId=0;function css(strings,...args){const name=`__sheet__${nextId++}`;const value=String.raw(strings,...args);registerSheet(name,value);activateSheet(name);return name;}
function processSheet(str){const tokens=str.split(/(\{|\}|;)/).map((s)=>s.trim());const selectorStack=[];const parts=[];let rules=[];function generateSelector(stackIndex,parentSelector){const parts=[];for(const selector of selectorStack[stackIndex]){let part=(parentSelector&&parentSelector+" "+selector)||selector;if(part.includes("&")){part=selector.replace(/&/g,parentSelector||"");}
if(stackIndex<selectorStack.length-1){part=generateSelector(stackIndex+1,part);}
parts.push(part);}
return parts.join(", ");}
function generateRules(){if(rules.length){parts.push(generateSelector(0)+" {");parts.push(...rules);parts.push("}");rules=[];}}
while(tokens.length){const token=tokens.shift();if(token==="}"){generateRules();selectorStack.pop();}
else{if(tokens[0]==="{"){generateRules();selectorStack.push(token.split(/\s*,\s*/));tokens.shift();}
if(tokens[0]===";"){rules.push("  "+token+";");}}}
return parts.join("\n");}
function registerSheet(id,css){const sheet=document.createElement("style");sheet.textContent=processSheet(css);STYLESHEETS[id]=sheet;}
function activateSheet(id){const sheet=STYLESHEETS[id];sheet.setAttribute("component",id);document.head.appendChild(sheet);}
function getTextDecoration({strikethrough,underline,}){if(!strikethrough&&!underline){return"none";}
return`${strikethrough ? "line-through" : ""} ${underline ? "underline" : ""}`;}
function cellStyleToCss(style){const attributes=cellTextStyleToCss(style);if(!style)
return attributes;if(style.fillColor){attributes["background"]=style.fillColor;}
return attributes;}
function cellTextStyleToCss(style){const attributes={};if(!style)
return attributes;if(style.bold){attributes["font-weight"]="bold";}
if(style.italic){attributes["font-style"]="italic";}
if(style.strikethrough||style.underline){let decoration=style.strikethrough?"line-through":"";decoration=style.underline?decoration+" underline":decoration;attributes["text-decoration"]=decoration;}
if(style.textColor){attributes["color"]=style.textColor;}
return attributes;}
function cssPropertiesToCss(attributes){let styleStr="";for(const attName in attributes){if(!attributes[attName]){continue;}
styleStr+=`${attName}:${attributes[attName]}; `;}
return styleStr;}
function getElementMargins(el){const style=window.getComputedStyle(el);return{top:parseInt(style.marginTop,10)||0,bottom:parseInt(style.marginBottom,10)||0,left:parseInt(style.marginLeft,10)||0,right:parseInt(style.marginRight,10)||0,};}
const chartJsExtensionRegistry=new Registry();function areChartJSExtensionsLoaded(){return!!window.Chart.registry.plugins.get("chartShowValuesPlugin");}
function registerChartJSExtensions(){if(!window.Chart||areChartJSExtensionsLoaded()){return;}
for(const registryItem of chartJsExtensionRegistry.getAll()){registryItem.register(window.Chart);}}
function unregisterChartJsExtensions(){if(!window.Chart){return;}
for(const registryItem of chartJsExtensionRegistry.getAll()){registryItem.unregister(window.Chart);}}
class ChartAnimationStore extends SpreadsheetStore{mutators=["disableAnimationForChart","enableAnimationForChart"];animationPlayed={};disableAnimationForChart(chartId,chartType){this.animationPlayed[chartId]=chartType;return"noStateChange";}
enableAnimationForChart(chartId){this.animationPlayed[chartId]=undefined;return"noStateChange";}}
function getFunnelChartController(){return class FunnelChartController extends window.Chart.BarController{static id="funnel";static defaults={...window.Chart?.BarController.defaults,dataElementType:"funnel",animation:{duration:(ctx)=>{if(ctx.type!=="data"){return 1000;}
const value=ctx.raw[1];const maxValue=Math.max(...ctx.dataset.data.map((data)=>data[1]));return 1000*(value/maxValue);},},};updateElements(rects,start,count,mode){super.updateElements(rects,start,count,mode);for(let i=start;i<start+count;i++){const rect=rects[i];this.updateElement(rect,i,{nextElement:rects[i+1]},mode);}}};}
function getFunnelChartElement(){return class FunnelChartElement extends window.Chart.BarElement{static id="funnel";draw(ctx){ctx.save();const props=["x","y","width","height","nextElement","base","options"];const{x,y,height,nextElement,base,options}=this.getProps(props);const width=getElementWidth(this);const nextElementWidth=nextElement?getElementWidth(nextElement):0;const offset=(width-nextElementWidth)/2;const startX=Math.min(x,base);const startY=y-height/2;ctx.fillStyle=options.backgroundColor;ctx.beginPath();ctx.moveTo(startX,startY);ctx.lineTo(startX+width,startY);ctx.lineTo(startX+width-offset,startY+height);ctx.lineTo(startX+offset,startY+height);ctx.closePath();ctx.fill();if(options.borderWidth){ctx.strokeStyle=options.borderColor;ctx.lineWidth=options.borderWidth;ctx.stroke();}
ctx.restore();}
inRange(mouseX,mouseY){const props=["x","y","width","height","nextElement","base","options"];const{x,y,height,nextElement,base}=this.getProps(props);const width=getElementWidth(this);const nextElementWidth=nextElement?getElementWidth(nextElement):0;const startX=Math.min(x,base);const startY=y-height/2;if(mouseY<startY||mouseY>startY+height){return false;}
const offset=(width-nextElementWidth)/2;const left=startX+(offset*(mouseY-startY))/height;const right=startX+width-(offset*(mouseY-startY))/height;if(mouseX<left||mouseX>right){return false;}
return true;}};}
function getElementWidth(element){const{x,base}=element.getProps(["x","base"]);const left=Math.min(x,base);const right=Math.max(x,base);return right-left;}
const funnelTooltipPositioner=function(elements){if(!elements.length){return{x:0,y:0};}
const element=elements[0].element;const{x,y,base,width,height}=element.getProps(["x","y","width","height","base"]);const startX=Math.min(x,base);const startY=y-height/2;return{x:startX+(width*2)/3,y:startY+height/2,};};const AUTO_COLOR="000000";const XLSX_ICONSET_MAP={arrows:"3Arrows",smiley:"3Symbols",dots:"3TrafficLights1",};const NAMESPACE={styleSheet:"http://schemas.openxmlformats.org/spreadsheetml/2006/main",sst:"http://schemas.openxmlformats.org/spreadsheetml/2006/main",Relationships:"http://schemas.openxmlformats.org/package/2006/relationships",Types:"http://schemas.openxmlformats.org/package/2006/content-types",worksheet:"http://schemas.openxmlformats.org/spreadsheetml/2006/main",workbook:"http://schemas.openxmlformats.org/spreadsheetml/2006/main",drawing:"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing",table:"http://schemas.openxmlformats.org/spreadsheetml/2006/main",revision:"http://schemas.microsoft.com/office/spreadsheetml/2014/revision",revision3:"http://schemas.microsoft.com/office/spreadsheetml/2016/revision3",markupCompatibility:"http://schemas.openxmlformats.org/markup-compatibility/2006",};const DRAWING_NS_A="http://schemas.openxmlformats.org/drawingml/2006/main";const DRAWING_NS_C="http://schemas.openxmlformats.org/drawingml/2006/chart";const CONTENT_TYPES={workbook:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml",macroEnabledWorkbook:"application/vnd.ms-excel.sheet.macroEnabled.main+xml",templateWorkbook:"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml",macroEnabledTemplateWorkbook:"application/vnd.ms-excel.template.macroEnabled.main+xml",excelAddInWorkbook:"application/vnd.ms-excel.addin.macroEnabled.main+xml",sheet:"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml",metadata:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml",sharedStrings:"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml",styles:"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml",drawing:"application/vnd.openxmlformats-officedocument.drawing+xml",chart:"application/vnd.openxmlformats-officedocument.drawingml.chart+xml",themes:"application/vnd.openxmlformats-officedocument.theme+xml",table:"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml",pivot:"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml",externalLink:"application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml",};const XLSX_RELATION_TYPE={document:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument",sheet:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet",metadata:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sheetMetadata",sharedStrings:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings",styles:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles",drawing:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing",chart:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart",theme:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme",table:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/table",hyperlink:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink",image:"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image",};const ARRAY_FORMULA_URI="bdbb8cdc-fa1e-496e-a857-3c3f30c029c3";const RELATIONSHIP_NSR="http://schemas.openxmlformats.org/officeDocument/2006/relationships";const HEIGHT_FACTOR=0.75;const WIDTH_FACTOR=0.143;const EXCEL_DEFAULT_COL_WIDTH=8.43;const EXCEL_DEFAULT_ROW_HEIGHT=12.75;const EXCEL_IMPORT_DEFAULT_NUMBER_OF_COLS=30;const EXCEL_IMPORT_DEFAULT_NUMBER_OF_ROWS=100;const MAX_XLSX_POLYNOMIAL_DEGREE=6;const FIRST_NUMFMT_ID=164;const FORCE_DEFAULT_ARGS_FUNCTIONS={FLOOR:[{type:"NUMBER",value:1}],CEILING:[{type:"NUMBER",value:1}],ROUND:[{type:"NUMBER",value:0}],ROUNDUP:[{type:"NUMBER",value:0}],ROUNDDOWN:[{type:"NUMBER",value:0}],};const NON_RETROCOMPATIBLE_FUNCTIONS=["ACOT","ACOTH","AGGREGATE","ARABIC","BASE","BETA.DIST","BETA.INV","BINOM.DIST","BINOM.DIST.RANGE","BINOM.INV","BITAND","BITLSHIFT","BITOR","BITRSHIFT","BITXOR","BYCOL","BYROW","CEILING.MATH","CEILING.PRECISE","CHISQ.DIST","CHISQ.DIST.RT","CHISQ.INV","CHISQ.INV.RT","CHISQ.TEST","CHOOSECOLS","CHOOSEROWS","COMBINA","CONCAT","CONFIDENCE.NORM","CONFIDENCE.T","COT","COTH","COVARIANCE.P","COVARIANCE.S","CSC","CSCH","DAYS","DECIMAL","DROP","ERF.PRECISE","ERFC.PRECISE","EXPAND","EXPON.DIST","F.DIST","F.DIST.RT","F.INV","F.INV.RT","F.TEST","FIELDVALUE","FILTERXML","FLOOR.MATH","FLOOR.PRECISE","FORECAST.ETS","FORECAST.ETS.CONFINT","FORECAST.ETS.SEASONALITY","FORECAST.ETS.STAT","FORECAST.LINEAR","FORMULATEXT","GAMMA","GAMMA.DIST","GAMMA.INV","GAMMALN.PRECISE","GAUSS","HSTACK","HYPGEOM.DIST","IFNA","IFS","IMCOSH","IMCOT","IMCSC","IMCSCH","IMSEC","IMSECH","IMSINH","IMTAN","ISFORMULA","ISOMITTED","ISOWEEKNUM","LAMBDA","LET","LOGNORM.DIST","LOGNORM.INV","MAKEARRAY","MAP","MAXIFS","MINIFS","MODE.MULT","MODE.SNGL","MUNIT","NEGBINOM.DIST","NORM.DIST","NORM.INV","NORM.S.DIST","NORM.S.INV","NUMBERVALUE","PDURATION","PERCENTILE.EXC","PERCENTILE.INC","PERCENTRANK.EXC","PERCENTRANK.INC","PERMUTATIONA","PHI","POISSON.DIST","PQSOURCE","PYTHON_STR","PYTHON_TYPE","PYTHON_TYPENAME","QUARTILE.EXC","QUARTILE.INC","QUERYSTRING","RANDARRAY","RANK.AVG","RANK.EQ","REDUCE","RRI","SCAN","SEC","SECH","SEQUENCE","SHEET","SHEETS","SKEW.P","SORTBY","STDEV.P","STDEV.S","SWITCH","T.DIST","T.DIST.2T","T.DIST.RT","T.INV","T.INV.2T","T.TEST","TAKE","TEXTAFTER","TEXTBEFORE","TEXTJOIN","TEXTSPLIT","TOCOL","TOROW","UNICHAR","UNICODE","UNIQUE","VAR.P","VAR.S","VSTACK","WEBSERVICE","WEIBULL.DIST","WRAPCOLS","WRAPROWS","XLOOKUP","XOR","Z.TEST",];const CONTENT_TYPES_FILE="[Content_Types].xml";const ARG_REGEXP=/(.*?)\((.*?)\)(.*)/;const ARG_TYPES=["ANY","BOOLEAN","DATE","NUMBER","STRING","RANGE","RANGE<BOOLEAN>","RANGE<DATE>","RANGE<NUMBER>","RANGE<STRING>","META",];function arg(definition,description=""){return makeArg(definition,description);}
function makeArg(str,description){const parts=str.match(ARG_REGEXP);const name=parts[1].trim();if(!name){throw new Error(`Function argument definition is missing a name: '${str}'.`);}
const types=[];let isOptional=false;let isRepeating=false;let defaultValue;for(const param of parts[2].split(",")){const key=param.trim().toUpperCase();const type=ARG_TYPES.find((t)=>key===t);if(type){types.push(type);}
else if(key==="RANGE<ANY>"){types.push("RANGE");}
else if(key==="OPTIONAL"){isOptional=true;}
else if(key==="REPEATING"){isRepeating=true;}
else if(key.startsWith("DEFAULT=")){defaultValue=param.trim().slice(8);}}
const result={name,description,type:types,};const acceptErrors=types.includes("ANY")||types.includes("RANGE");if(acceptErrors){result.acceptErrors=true;}
if(isOptional){result.optional=true;}
if(isRepeating){result.repeating=true;}
if(defaultValue!==undefined){result.default=true;result.defaultValue=defaultValue;}
if(types.some((t)=>t.startsWith("RANGE"))){result.acceptMatrix=true;}
if(types.every((t)=>t.startsWith("RANGE"))){result.acceptMatrixOnly=true;}
return result;}
function addMetaInfoFromArg(name,addDescr){let countArg=0;let minArg=0;let repeatingArg=0;let optionalArg=0;for(const arg of addDescr.args){countArg++;if(!arg.optional&&!arg.repeating&&!arg.default){minArg++;}
if(arg.repeating){repeatingArg++;}
if(arg.optional||arg.default){optionalArg++;}}
const descr=addDescr;descr.minArgRequired=minArg;descr.maxArgPossible=repeatingArg?Infinity:countArg;descr.nbrArgRepeating=repeatingArg;descr.nbrArgOptional=optionalArg;descr.hidden=addDescr.hidden||false;descr.name=name;return descr;}
const cacheArgTargeting={};function argTargeting(functionDescription,nbrArgSupplied){const functionName=functionDescription.name;const result=cacheArgTargeting[functionName]?.[nbrArgSupplied];if(result){return result;}
if(!cacheArgTargeting[functionName]){cacheArgTargeting[functionName]={};}
if(!cacheArgTargeting[functionName][nbrArgSupplied]){cacheArgTargeting[functionName][nbrArgSupplied]=_argTargeting(functionDescription,nbrArgSupplied);}
return cacheArgTargeting[functionName][nbrArgSupplied];}
function _argTargeting(functionDescription,nbrArgSupplied){const valueIndexToArgPosition={};const groupsOfRepeatingValues=functionDescription.nbrArgRepeating?Math.floor((nbrArgSupplied-functionDescription.minArgRequired)/functionDescription.nbrArgRepeating):0;const nbrValueRepeating=functionDescription.nbrArgRepeating*groupsOfRepeatingValues;const nbrValueOptional=nbrArgSupplied-functionDescription.minArgRequired-nbrValueRepeating;let countValueSupplied=0;let countValueOptional=0;for(let i=0;i<functionDescription.args.length;i++){const arg=functionDescription.args[i];if(arg.optional||arg.default){if(countValueOptional<nbrValueOptional){valueIndexToArgPosition[countValueSupplied]=i;countValueSupplied++;}
countValueOptional++;continue;}
if(arg.repeating){for(let j=0;j<groupsOfRepeatingValues;j++){for(let k=0;k<functionDescription.nbrArgRepeating;k++){valueIndexToArgPosition[countValueSupplied]=i+k;countValueSupplied++;}}
i+=functionDescription.nbrArgRepeating-1;continue;}
valueIndexToArgPosition[countValueSupplied]=i;countValueSupplied++;}
return(argPosition)=>{return valueIndexToArgPosition[argPosition];};}
function validateArguments(descr){if(descr.nbrArgRepeating&&descr.nbrArgOptional>=descr.nbrArgRepeating){throw new Error(`Function ${descr.name} has more optional arguments than repeatable ones.`);}
let foundRepeating=false;let consecutiveRepeating=false;for(const current of descr.args){if(current.type.includes("META")&&current.type.length>1){throw new Error(`Function ${descr.name} has an argument that has been declared with more than one type whose type 'META'. The 'META' type can only be declared alone.`);}
if(current.repeating){if(!consecutiveRepeating&&foundRepeating){throw new Error(`Function ${descr.name} has non-consecutive repeating arguments. All repeating arguments must be declared consecutively.`);}
foundRepeating=true;consecutiveRepeating=true;}
else{consecutiveRepeating=false;}}}
const ARRAY_CONSTRAIN={description:_t("Returns a result array constrained to a specific width and height."),args:[arg("input_range (any, range<any>)",_t("The range to constrain.")),arg("rows (number)",_t("The number of rows in the constrained array.")),arg("columns (number)",_t("The number of columns in the constrained array.")),],compute:function(array,rows,columns){const _array=toMatrix(array);const _rowsArg=toInteger(rows?.value,this.locale);const _columnsArg=toInteger(columns?.value,this.locale);if(_rowsArg<=0){return new EvaluationError(_t("The rows argument (%s) must be strictly positive.",_rowsArg.toString()));}
if(_columnsArg<=0){return new EvaluationError(_t("The columns argument (%s) must be strictly positive.",_columnsArg.toString()));}
const _nbRows=Math.min(_rowsArg,_array[0].length);const _nbColumns=Math.min(_columnsArg,_array.length);return generateMatrix(_nbColumns,_nbRows,(col,row)=>_array[col][row]);},isExported:false,};const CHOOSECOLS={description:_t("Creates a new array from the selected columns in the existing range."),args:[arg("array (any, range<any>)",_t("The array that contains the columns to be returned.")),arg("col_num (number, range<number>)",_t("The first column index of the columns to be returned.")),arg("col_num2 (number, range<number>, repeating)",_t("The columns indexes of the columns to be returned.")),],compute:function(array,...columns){const _array=toMatrix(array);const _columns=flattenRowFirst(columns,(item)=>toInteger(item?.value,this.locale));const argOutOfRange=_columns.filter((col)=>col===0||_array.length<Math.abs(col));if(argOutOfRange.length!==0){return new EvaluationError(_t("The columns arguments must be between -%s and %s (got %s), excluding 0.",_array.length.toString(),_array.length.toString(),argOutOfRange.join(",")));}
const result=Array(_columns.length);for(let col=0;col<_columns.length;col++){if(_columns[col]>0){result[col]=_array[_columns[col]-1];}
else{result[col]=_array[_array.length+_columns[col]];}}
return result;},isExported:true,};const CHOOSEROWS={description:_t("Creates a new array from the selected rows in the existing range."),args:[arg("array (any, range<any>)",_t("The array that contains the rows to be returned.")),arg("row_num (number, range<number>)",_t("The first row index of the rows to be returned.")),arg("row_num2 (number, range<number>, repeating)",_t("The rows indexes of the rows to be returned.")),],compute:function(array,...rows){const _array=toMatrix(array);const _rows=flattenRowFirst(rows,(item)=>toInteger(item?.value,this.locale));const _nbColumns=_array.length;const argOutOfRange=_rows.filter((row)=>row===0||_array[0].length<Math.abs(row));if(argOutOfRange.length!==0){return new EvaluationError(_t("The rows arguments must be between -%s and %s (got %s), excluding 0.",_array[0].length.toString(),_array[0].length.toString(),argOutOfRange.join(",")));}
return generateMatrix(_nbColumns,_rows.length,(col,row)=>{if(_rows[row]>0){return _array[col][_rows[row]-1];}
return _array[col][_array[col].length+_rows[row]];});},isExported:true,};const EXPAND={description:_t("Expands or pads an array to specified row and column dimensions."),args:[arg("array (any, range<any>)",_t("The array to expand.")),arg("rows (number)",_t("The number of rows in the expanded array. If missing, rows will not be expanded.")),arg("columns (number, optional)",_t("The number of columns in the expanded array. If missing, columns will not be expanded.")),arg("pad_with (any, default=0)",_t("The value with which to pad.")),],compute:function(arg,rows,columns,padWith={value:0}){const _array=toMatrix(arg);const _nbRows=toInteger(rows?.value,this.locale);const _nbColumns=columns!==undefined?toInteger(columns.value,this.locale):_array.length;if(_nbRows<_array[0].length){return new EvaluationError(_t("The rows arguments (%s) must be greater or equal than the number of rows of the array.",_nbRows.toString()));}
if(_nbColumns<_array.length){return new EvaluationError(_t("The columns arguments (%s) must be greater or equal than the number of columns of the array.",_nbColumns.toString()));}
return generateMatrix(_nbColumns,_nbRows,(col,row)=>col>=_array.length||row>=_array[col].length?padWith:_array[col][row]);},isExported:true,};const FLATTEN={description:_t("Flattens all the values from one or more ranges into a single column."),args:[arg("range (any, range<any>)",_t("The first range to flatten.")),arg("range2 (any, range<any>, repeating)",_t("Additional ranges to flatten.")),],compute:function(...ranges){return[flattenRowFirst(ranges,(val)=>(val===undefined?{value:""}:val))];},isExported:false,};const FREQUENCY={description:_t("Calculates the frequency distribution of a range."),args:[arg("data (range<number>)",_t("The array of ranges containing the values to be counted.")),arg("classes (number, range<number>)",_t("The range containing the set of classes.")),],compute:function(data,classes){const _data=flattenRowFirst([data],(data)=>data.value).filter((val)=>typeof val==="number");const _classes=flattenRowFirst([classes],(data)=>data.value).filter((val)=>typeof val==="number");const sortedClasses=_classes.map((value,index)=>({initialIndex:index,value,count:0})).sort((a,b)=>a.value-b.value);sortedClasses.push({initialIndex:sortedClasses.length,value:Infinity,count:0});const sortedData=_data.sort((a,b)=>a-b);let index=0;for(const val of sortedData){while(val>sortedClasses[index].value&&index<sortedClasses.length-1){index++;}
sortedClasses[index].count++;}
const result=sortedClasses.sort((a,b)=>a.initialIndex-b.initialIndex).map((val)=>val.count);return[result];},isExported:true,};const HSTACK={description:_t("Appends ranges horizontally and in sequence to return a larger array."),args:[arg("range1 (any, range<any>)",_t("The first range to be appended.")),arg("range2 (any, range<any>, repeating)",_t("Additional ranges to add to range1.")),],compute:function(...ranges){const nbRows=Math.max(...ranges.map((r)=>r?.[0]?.length??0));const result=[];for(const range of ranges){const _range=toMatrix(range);for(let col=0;col<_range.length;col++){const array=Array(nbRows).fill({value:null});for(let row=0;row<_range[col].length;row++){array[row]=_range[col][row];}
result.push(array);}}
return result;},isExported:true,};const MDETERM={description:_t("Returns the matrix determinant of a square matrix."),args:[arg("square_matrix (number, range<number>)",_t("An range with an equal number of rows and columns representing a matrix whose determinant will be calculated.")),],compute:function(matrix){const _matrix=toNumberMatrix(matrix,"square_matrix");if(!isSquareMatrix(_matrix)){return new EvaluationError(_t("The argument square_matrix must have the same number of columns and rows."));}
return invertMatrix(_matrix).determinant;},isExported:true,};const MINVERSE={description:_t("Returns the multiplicative inverse of a square matrix."),args:[arg("square_matrix (number, range<number>)",_t("An range with an equal number of rows and columns representing a matrix whose multiplicative inverse will be calculated.")),],compute:function(matrix){const _matrix=toNumberMatrix(matrix,"square_matrix");if(!isSquareMatrix(_matrix)){return new EvaluationError(_t("The argument square_matrix must have the same number of columns and rows."));}
const{inverted}=invertMatrix(_matrix);if(!inverted){return new EvaluationError(_t("The matrix is not invertible."));}
return inverted;},isExported:true,};const MMULT={description:_t("Calculates the matrix product of two matrices."),args:[arg("matrix1 (number, range<number>)",_t("The first matrix in the matrix multiplication operation.")),arg("matrix2 (number, range<number>)",_t("The second matrix in the matrix multiplication operation.")),],compute:function(matrix1,matrix2){const _matrix1=toNumberMatrix(matrix1,"matrix1");const _matrix2=toNumberMatrix(matrix2,"matrix2");if(_matrix1.length!==_matrix2[0].length){return new EvaluationError(_t("In [[FUNCTION_NAME]], the number of columns of the first matrix (%s) must be equal to the \
          number of rows of the second matrix (%s).",_matrix1.length.toString(),_matrix2[0].length.toString()));}
return multiplyMatrices(_matrix1,_matrix2);},isExported:true,};const SUMPRODUCT={description:_t("Calculates the sum of the products of corresponding entries in equal-sized ranges."),args:[arg("range1 (number, range<number>)",_t("The first range whose entries will be multiplied with corresponding entries in the other ranges.")),arg("range2 (number, range<number>, repeating)",_t("The other range whose entries will be multiplied with corresponding entries in the other ranges.")),],compute:function(...args){if(!areSameDimensions(...args)){return new EvaluationError(_t("All the ranges must have the same dimensions."));}
const _args=args.map(toMatrix);let result=0;for(let col=0;col<_args[0].length;col++){for(let row=0;row<_args[0][col].length;row++){if(!_args.every((range)=>typeof range[col][row].value==="number")){continue;}
let product=1;for(const range of _args){product*=toNumber(range[col][row],this.locale);}
result+=product;}}
return result;},isExported:true,};function getSumXAndY(arrayX,arrayY,cb){if(!areSameDimensions(arrayX,arrayY)){return new EvaluationError(_t("The arguments array_x and array_y must have the same dimensions."));}
const _arrayX=toMatrix(arrayX);const _arrayY=toMatrix(arrayY);let validPairFound=false;let result=0;for(const col in _arrayX){for(const row in _arrayX[col]){const arrayXValue=_arrayX[col][row].value;const arrayYValue=_arrayY[col][row].value;if(typeof arrayXValue!=="number"||typeof arrayYValue!=="number"){continue;}
validPairFound=true;result+=cb(arrayXValue,arrayYValue);}}
if(!validPairFound){return new EvaluationError(_t("The arguments array_x and array_y must contain at least one pair of numbers."));}
return result;}
const SUMX2MY2={description:_t("Calculates the sum of the difference of the squares of the values in two array."),args:[arg("array_x (number, range<number>)",_t("The array or range of values whose squares will be reduced by the squares of corresponding entries in array_y and added together.")),arg("array_y (number, range<number>)",_t("The array or range of values whose squares will be subtracted from the squares of corresponding entries in array_x and added together.")),],compute:function(arrayX,arrayY){return getSumXAndY(arrayX,arrayY,(x,y)=>x**2-y**2);},isExported:true,};const SUMX2PY2={description:_t("Calculates the sum of the sum of the squares of the values in two array."),args:[arg("array_x (number, range<number>)",_t("The array or range of values whose squares will be added to the squares of corresponding entries in array_y and added together.")),arg("array_y (number, range<number>)",_t("The array or range of values whose squares will be added to the squares of corresponding entries in array_x and added together.")),],compute:function(arrayX,arrayY){return getSumXAndY(arrayX,arrayY,(x,y)=>x**2+y**2);},isExported:true,};const SUMXMY2={description:_t("Calculates the sum of squares of the differences of values in two array."),args:[arg("array_x (number, range<number>)",_t("The array or range of values that will be reduced by corresponding entries in array_y, squared, and added together.")),arg("array_y (number, range<number>)",_t("The array or range of values that will be subtracted from corresponding entries in array_x, the result squared, and all such results added together.")),],compute:function(arrayX,arrayY){return getSumXAndY(arrayX,arrayY,(x,y)=>(x-y)**2);},isExported:true,};const TO_COL_ROW_DEFAULT_IGNORE=0;const TO_COL_ROW_DEFAULT_SCAN=false;const TO_COL_ROW_ARGS=[arg("array (any, range<any>)",_t("The array which will be transformed.")),arg(`ignore (number, default=${TO_COL_ROW_DEFAULT_IGNORE})`,_t("The control to ignore blanks and errors. 0 (default) is to keep all values, 1 is to ignore blanks, 2 is to ignore errors, and 3 is to ignore blanks and errors.")),arg(`scan_by_column (number, default=${TO_COL_ROW_DEFAULT_SCAN})`,_t("Whether the array should be scanned by column. True scans the array by column and false (default) \
      scans the array by row.")),];function shouldKeepValue(ignore){const _ignore=Math.trunc(ignore);if(_ignore===0){return()=>true;}
if(_ignore===1){return(data)=>data.value!==null;}
if(_ignore===2){return(data)=>!isEvaluationError(data.value);}
if(_ignore===3){return(data)=>data.value!==null&&!isEvaluationError(data.value);}
throw new EvaluationError(_t("Argument ignore must be between 0 and 3"));}
const TOCOL={description:_t("Transforms a range of cells into a single column."),args:TO_COL_ROW_ARGS,compute:function(array,ignore={value:TO_COL_ROW_DEFAULT_IGNORE},scanByColumn={value:TO_COL_ROW_DEFAULT_SCAN}){const _array=toMatrix(array);const _ignore=toNumber(ignore.value,this.locale);const _scanByColumn=toBoolean(scanByColumn.value);const result=(_scanByColumn?_array:transposeMatrix(_array)).flat().filter(shouldKeepValue(_ignore));if(result.length===0){return new NotAvailableError(_t("No results for the given arguments of TOCOL."));}
return[result];},isExported:true,};const TOROW={description:_t("Transforms a range of cells into a single row."),args:TO_COL_ROW_ARGS,compute:function(array,ignore={value:TO_COL_ROW_DEFAULT_IGNORE},scanByColumn={value:TO_COL_ROW_DEFAULT_SCAN}){const _array=toMatrix(array);const _ignore=toNumber(ignore.value,this.locale);const _scanByColumn=toBoolean(scanByColumn.value);const result=(_scanByColumn?_array:transposeMatrix(_array)).flat().filter(shouldKeepValue(_ignore)).map((item)=>[item]);if(result.length===0||result[0].length===0){return new NotAvailableError(_t("No results for the given arguments of TOROW."));}
return result;},isExported:true,};const TRANSPOSE={description:_t("Transposes the rows and columns of a range."),args:[arg("range (any, range<any>)",_t("The range to be transposed."))],compute:function(arg){const _array=toMatrix(arg);const nbColumns=_array[0].length;const nbRows=_array.length;return generateMatrix(nbColumns,nbRows,(col,row)=>_array[row][col]);},isExported:true,};const VSTACK={description:_t("Appends ranges vertically and in sequence to return a larger array."),args:[arg("range1 (any, range<any>)",_t("The first range to be appended.")),arg("range2 (any, range<any>, repeating)",_t("Additional ranges to add to range1.")),],compute:function(...ranges){const nbColumns=Math.max(...ranges.map((range)=>toMatrix(range).length));const nbRows=ranges.reduce((acc,range)=>acc+toMatrix(range)[0].length,0);const result=Array(nbColumns).fill([]).map(()=>Array(nbRows).fill({value:0}));let currentRow=0;for(const range of ranges){const _array=toMatrix(range);for(let col=0;col<_array.length;col++){for(let row=0;row<_array[col].length;row++){result[col][currentRow+row]=_array[col][row];}}
currentRow+=_array[0].length;}
return result;},isExported:true,};const WRAPCOLS={description:_t("Wraps the provided row or column of cells by columns after a specified number of elements to form a new array."),args:[arg("range (any, range<any>)",_t("The range to wrap.")),arg("wrap_count (number)",_t("The maximum number of cells for each column, rounded down to the nearest whole number.")),arg("pad_with  (any, default=0)",_t("The value with which to fill the extra cells in the range.")),],compute:function(range,wrapCount,padWith={value:0}){const _array=toMatrix(range);const nbRows=toInteger(wrapCount?.value,this.locale);if(!isSingleColOrRow(_array)){return new EvaluationError(_t("Argument range must be a single row or column."));}
const array=_array.flat();const nbColumns=Math.ceil(array.length/nbRows);return generateMatrix(nbColumns,nbRows,(col,row)=>{const index=col*nbRows+row;return index<array.length?array[index]:padWith;});},isExported:true,};const WRAPROWS={description:_t("Wraps the provided row or column of cells by rows after a specified number of elements to form a new array."),args:[arg("range (any, range<any>)",_t("The range to wrap.")),arg("wrap_count (number)",_t("The maximum number of cells for each row, rounded down to the nearest whole number.")),arg("pad_with  (any, default=0)",_t("The value with which to fill the extra cells in the range.")),],compute:function(range,wrapCount,padWith={value:0}){const _array=toMatrix(range);const nbColumns=toInteger(wrapCount?.value,this.locale);if(!isSingleColOrRow(_array)){return new EvaluationError(_t("Argument range must be a single row or column."));}
const array=_array.flat();const nbRows=Math.ceil(array.length/nbColumns);return generateMatrix(nbColumns,nbRows,(col,row)=>{const index=row*nbColumns+col;return index<array.length?array[index]:padWith;});},isExported:true,};var array=Object.freeze({__proto__:null,ARRAY_CONSTRAIN:ARRAY_CONSTRAIN,CHOOSECOLS:CHOOSECOLS,CHOOSEROWS:CHOOSEROWS,EXPAND:EXPAND,FLATTEN:FLATTEN,FREQUENCY:FREQUENCY,HSTACK:HSTACK,MDETERM:MDETERM,MINVERSE:MINVERSE,MMULT:MMULT,SUMPRODUCT:SUMPRODUCT,SUMX2MY2:SUMX2MY2,SUMX2PY2:SUMX2PY2,SUMXMY2:SUMXMY2,TOCOL:TOCOL,TOROW:TOROW,TRANSPOSE:TRANSPOSE,VSTACK:VSTACK,WRAPCOLS:WRAPCOLS,WRAPROWS:WRAPROWS});const FORMAT_LARGE_NUMBER={description:_t("Apply a large number format"),args:[arg("value (number)",_t("The number.")),arg("unit (string, optional)",_t("The formatting unit. Use 'k', 'm', or 'b' to force the unit")),],compute:function(value,unite){return{value:toNumber(value,this.locale),format:formatLargeNumber(value,unite,this.locale),};},};var misc=Object.freeze({__proto__:null,FORMAT_LARGE_NUMBER:FORMAT_LARGE_NUMBER});const DEFAULT_FACTOR=1;const DEFAULT_MODE=0;const DEFAULT_PLACES=0;const DEFAULT_SIGNIFICANCE=1;const DECIMAL_REPRESENTATION=/^-?[a-z0-9]+$/i;const ABS={description:_t("Absolute value of a number."),args:[arg("value (number)",_t("The number of which to return the absolute value."))],compute:function(value){return Math.abs(toNumber(value,this.locale));},isExported:true,};const ACOS={description:_t("Inverse cosine of a value, in radians."),args:[arg("value (number)",_t("The value for which to calculate the inverse cosine. Must be between -1 and 1, inclusive.")),],compute:function(value){const _value=toNumber(value,this.locale);if(Math.abs(_value)>1){return new EvaluationError(_t("The value (%s) must be between -1 and 1 inclusive.",_value));}
return Math.acos(_value);},isExported:true,};const ACOSH={description:_t("Inverse hyperbolic cosine of a number."),args:[arg("value (number)",_t("The value for which to calculate the inverse hyperbolic cosine. Must be greater than or equal to 1.")),],compute:function(value){const _value=toNumber(value,this.locale);if(_value<1){return new EvaluationError(_t("The value (%s) must be greater than or equal to 1.",_value));}
return Math.acosh(_value);},isExported:true,};const ACOT={description:_t("Inverse cotangent of a value."),args:[arg("value (number)",_t("The value for which to calculate the inverse cotangent."))],compute:function(value){const _value=toNumber(value,this.locale);const sign=Math.sign(_value)||1;return(sign*Math.PI)/2-Math.atan(_value);},isExported:true,};const ACOTH={description:_t("Inverse hyperbolic cotangent of a value."),args:[arg("value (number)",_t("The value for which to calculate the inverse hyperbolic cotangent. Must not be between -1 and 1, inclusive.")),],compute:function(value){const _value=toNumber(value,this.locale);if(Math.abs(_value)<=1){return new EvaluationError(_t("The value (%s) cannot be between -1 and 1 inclusive.",_value));}
return Math.log((_value+1)/(_value-1))/2;},isExported:true,};const ASIN={description:_t("Inverse sine of a value, in radians."),args:[arg("value (number)",_t("The value for which to calculate the inverse sine. Must be between -1 and 1, inclusive.")),],compute:function(value){const _value=toNumber(value,this.locale);if(Math.abs(_value)>1){return new EvaluationError(_t("The value (%s) must be between -1 and 1 inclusive.",_value));}
return Math.asin(_value);},isExported:true,};const ASINH={description:_t("Inverse hyperbolic sine of a number."),args:[arg("value (number)",_t("The value for which to calculate the inverse hyperbolic sine.")),],compute:function(value){return Math.asinh(toNumber(value,this.locale));},isExported:true,};const ATAN={description:_t("Inverse tangent of a value, in radians."),args:[arg("value (number)",_t("The value for which to calculate the inverse tangent."))],compute:function(value){return Math.atan(toNumber(value,this.locale));},isExported:true,};const ATAN2={description:_t("Angle from the X axis to a point (x,y), in radians."),args:[arg("x (number)",_t("The x coordinate of the endpoint of the line segment for which to calculate the angle from the x-axis.")),arg("y (number)",_t("The y coordinate of the endpoint of the line segment for which to calculate the angle from the x-axis.")),],compute:function(x,y){const _x=toNumber(x,this.locale);const _y=toNumber(y,this.locale);if(_x===0&&_y===0){return new DivisionByZeroError(_t("Function [[FUNCTION_NAME]] caused a divide by zero error."));}
return Math.atan2(_y,_x);},isExported:true,};const ATANH={description:_t("Inverse hyperbolic tangent of a number."),args:[arg("value (number)",_t("The value for which to calculate the inverse hyperbolic tangent. Must be between -1 and 1, exclusive.")),],compute:function(value){const _value=toNumber(value,this.locale);if(Math.abs(_value)>=1){return new EvaluationError(_t("The value (%s) must be between -1 and 1 exclusive.",_value));}
return Math.atanh(_value);},isExported:true,};const CEILING={description:_t("Rounds number up to nearest multiple of factor."),args:[arg("value (number)",_t("The value to round up to the nearest integer multiple of factor.")),arg(`factor (number, default=${DEFAULT_FACTOR})`,_t("The number to whose multiples value will be rounded.")),],compute:function(value,factor={value:DEFAULT_FACTOR}){const _value=toNumber(value,this.locale);const _factor=toNumber(factor,this.locale);if(_factor<0&&_value>0){return new EvaluationError(_t("The factor (%s) must be positive when the value (%s) is positive.",_factor,_value));}
return{value:_factor?Math.ceil(_value/_factor)*_factor:0,format:value?.format,};},isExported:true,};function ceilingMath(number,significance,mode=0){if(significance===0){return 0;}
significance=Math.abs(significance);if(number>=0){return Math.ceil(number/significance)*significance;}
if(mode===0){return-Math.floor(Math.abs(number)/significance)*significance;}
return-Math.ceil(Math.abs(number)/significance)*significance;}
const CEILING_MATH={description:_t("Rounds number up to nearest multiple of factor."),args:[arg("number (number)",_t("The value to round up to the nearest integer multiple of significance.")),arg(`significance (number, default=${DEFAULT_SIGNIFICANCE})`,_t("The number to whose multiples number will be rounded. The sign of significance will be ignored.")),arg(`mode (number, default=${DEFAULT_MODE})`,_t("If number is negative, specifies the rounding direction. If 0 or blank, it is rounded towards zero. Otherwise, it is rounded away from zero.")),],compute:function(number,significance={value:DEFAULT_SIGNIFICANCE},mode={value:DEFAULT_MODE}){const _significance=toNumber(significance,this.locale);const _number=toNumber(number,this.locale);const _mode=toNumber(mode,this.locale);return{value:ceilingMath(_number,_significance,_mode),format:number?.format,};},isExported:true,};const CEILING_PRECISE={description:_t("Rounds number up to nearest multiple of factor."),args:[arg("number (number)",_t("The value to round up to the nearest integer multiple of significance.")),arg(`significance (number, default=${DEFAULT_SIGNIFICANCE})`,_t("The number to whose multiples number will be rounded.")),],compute:function(number,significance={value:DEFAULT_SIGNIFICANCE}){const _significance=toNumber(significance,this.locale);const _number=toNumber(number,this.locale);return{value:ceilingMath(_number,_significance),format:number?.format,};},isExported:true,};const COS={description:_t("Cosine of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the cosine of, in radians."))],compute:function(angle){return Math.cos(toNumber(angle,this.locale));},isExported:true,};const COSH={description:_t("Hyperbolic cosine of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic cosine of."))],compute:function(value){return Math.cosh(toNumber(value,this.locale));},isExported:true,};const COT={description:_t("Cotangent of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the cotangent of, in radians."))],compute:function(angle){const _angle=toNumber(angle,this.locale);if(_angle===0){return new DivisionByZeroError(_t("Function [[FUNCTION_NAME]] caused a divide by zero error."));}
return 1/Math.tan(_angle);},isExported:true,};const COTH={description:_t("Hyperbolic cotangent of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic cotangent of."))],compute:function(value){const _value=toNumber(value,this.locale);if(_value===0){return new DivisionByZeroError(_t("Function [[FUNCTION_NAME]] caused a divide by zero error."));}
return 1/Math.tanh(_value);},isExported:true,};const COUNTBLANK={description:_t("Number of empty values."),args:[arg("value1 (any, range)",_t("The first value or range in which to count the number of blanks.")),arg("value2 (any, range, repeating)",_t("Additional values or ranges in which to count the number of blanks.")),],compute:function(...args){return reduceAny(args,(acc,a)=>{if(a===undefined){return acc+1;}
if(a.value===null){return acc+1;}
if(a.value===""){return acc+1;}
return acc;},0);},isExported:true,};const COUNTIF={description:_t("A conditional count across a range."),args:[arg("range (range)",_t("The range that is tested against criterion.")),arg("criterion (string)",_t("The pattern or test to apply to range.")),],compute:function(...args){let count=0;visitMatchingRanges(args,(i,j)=>{count+=1;},this.locale);return count;},isExported:true,};const COUNTIFS={description:_t("Count values depending on multiple criteria."),args:[arg("criteria_range1 (range)",_t("The range to check against criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1.")),arg("criteria_range2 (any, range, repeating)",_t("Additional ranges over which to evaluate the additional criteria. The filtered set will be the intersection of the sets produced by each criterion-range pair.")),arg("criterion2 (string, repeating)",_t("Additional criteria to check.")),],compute:function(...args){let count=0;visitMatchingRanges(args,(i,j)=>{count+=1;},this.locale);return count;},isExported:true,};const COUNTUNIQUE={description:_t("Counts number of unique values in a range."),args:[arg("value1 (any, range)",_t("The first value or range to consider for uniqueness.")),arg("value2 (any, range, repeating)",_t("Additional values or ranges to consider for uniqueness.")),],compute:function(...args){return countUnique(args);},};const COUNTUNIQUEIFS={description:_t("Counts number of unique values in a range, filtered by a set of criteria."),args:[arg("range (range)",_t("The range of cells from which the number of unique values will be counted.")),arg("criteria_range1 (range)",_t("The range of cells over which to evaluate criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1, such that each cell that evaluates to TRUE will be included in the filtered set.")),arg("criteria_range2 (any, range, repeating)",_t("Additional ranges over which to evaluate the additional criteria. The filtered set will be the intersection of the sets produced by each criterion-range pair.")),arg("criterion2 (string, repeating)",_t("The pattern or test to apply to criteria_range2.")),],compute:function(range,...args){const uniqueValues=new Set();visitMatchingRanges(args,(i,j)=>{const data=range[i]?.[j];if(isDataNonEmpty(data)){uniqueValues.add(data.value);}},this.locale);return uniqueValues.size;},};const CSC={description:_t("Cosecant of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the cosecant of, in radians."))],compute:function(angle){const _angle=toNumber(angle,this.locale);if(_angle===0){return new DivisionByZeroError(_t("Function [[FUNCTION_NAME]] caused a divide by zero error."));}
return 1/Math.sin(_angle);},isExported:true,};const CSCH={description:_t("Hyperbolic cosecant of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic cosecant of."))],compute:function(value){const _value=toNumber(value,this.locale);if(_value===0){return new DivisionByZeroError(_t("Function [[FUNCTION_NAME]] caused a divide by zero error."));}
return 1/Math.sinh(_value);},isExported:true,};const DECIMAL={description:_t("Converts from another base to decimal."),args:[arg("value (string)",_t("The number to convert.")),arg("base (number)",_t("The base to convert the value from.")),],compute:function(value,base){let _base=toNumber(base,this.locale);_base=Math.floor(_base);if(2>_base||_base>36){return new EvaluationError(_t("The base (%s) must be between 2 and 36 inclusive.",_base));}
const _value=toString(value);if(_value===""){return 0;}
if(!DECIMAL_REPRESENTATION.test(_value)){return new EvaluationError(_t("The value (%s) must be a valid base %s representation.",_value,_base));}
const deci=parseInt(_value,_base);if(isNaN(deci)){return new EvaluationError(_t("The value (%s) must be a valid base %s representation.",_value,_base));}
return deci;},isExported:true,};const DEGREES={description:_t("Converts an angle value in radians to degrees."),args:[arg("angle (number)",_t("The angle to convert from radians to degrees."))],compute:function(angle){return(toNumber(angle,this.locale)*180)/Math.PI;},isExported:true,};const EXP={description:_t("Euler's number, e (~2.718) raised to a power."),args:[arg("value (number)",_t("The exponent to raise e."))],compute:function(value){return Math.exp(toNumber(value,this.locale));},isExported:true,};const FLOOR={description:_t("Rounds number down to nearest multiple of factor."),args:[arg("value (number)",_t("The value to round down to the nearest integer multiple of factor.")),arg(`factor (number, default=${DEFAULT_FACTOR})`,_t("The number to whose multiples value will be rounded.")),],compute:function(value,factor={value:DEFAULT_FACTOR}){const _value=toNumber(value,this.locale);const _factor=toNumber(factor,this.locale);if(_factor<0&&_value>0){return new EvaluationError(_t("The factor (%s) must be positive when the value (%s) is positive.",_factor,_value));}
return{value:_factor?Math.floor(_value/_factor)*_factor:0,format:value?.format,};},isExported:true,};function floorMath(number,significance,mode=0){if(significance===0){return 0;}
significance=Math.abs(significance);if(number>=0){return Math.floor(number/significance)*significance;}
if(mode===0){return-Math.ceil(Math.abs(number)/significance)*significance;}
return-Math.floor(Math.abs(number)/significance)*significance;}
const FLOOR_MATH={description:_t("Rounds number down to nearest multiple of factor."),args:[arg("number (number)",_t("The value to round down to the nearest integer multiple of significance.")),arg(`significance (number, default=${DEFAULT_SIGNIFICANCE})`,_t("The number to whose multiples number will be rounded. The sign of significance will be ignored.")),arg(`mode (number, default=${DEFAULT_MODE})`,_t("If number is negative, specifies the rounding direction. If 0 or blank, it is rounded away from zero. Otherwise, it is rounded towards zero.")),],compute:function(number,significance={value:DEFAULT_SIGNIFICANCE},mode={value:DEFAULT_MODE}){const _significance=toNumber(significance,this.locale);const _number=toNumber(number,this.locale);const _mode=toNumber(mode,this.locale);return{value:floorMath(_number,_significance,_mode),format:number?.format,};},isExported:true,};const FLOOR_PRECISE={description:_t("Rounds number down to nearest multiple of factor."),args:[arg("number (number)",_t("The value to round down to the nearest integer multiple of significance.")),arg(`significance (number, default=${DEFAULT_SIGNIFICANCE})`,_t("The number to whose multiples number will be rounded.")),],compute:function(number,significance={value:DEFAULT_SIGNIFICANCE}){const _significance=toNumber(significance,this.locale);const _number=toNumber(number,this.locale);return{value:floorMath(_number,_significance),format:number?.format,};},isExported:true,};const ISEVEN={description:_t("Whether the provided value is even."),args:[arg("value (number)",_t("The value to be verified as even."))],compute:function(value){const _value=strictToNumber(value,this.locale);return Math.floor(Math.abs(_value))&1?false:true;},isExported:true,};const ISO_CEILING={description:_t("Rounds number up to nearest multiple of factor."),args:[arg("number (number)",_t("The value to round up to the nearest integer multiple of significance.")),arg(`significance (number, default=${DEFAULT_SIGNIFICANCE})`,_t("The number to whose multiples number will be rounded.")),],compute:function(number,significance={value:DEFAULT_SIGNIFICANCE}){const _number=toNumber(number,this.locale);const _significance=toNumber(significance,this.locale);return{value:ceilingMath(_number,_significance),format:number?.format,};},isExported:true,};const ISODD={description:_t("Whether the provided value is even."),args:[arg("value (number)",_t("The value to be verified as even."))],compute:function(value){const _value=strictToNumber(value,this.locale);return Math.floor(Math.abs(_value))&1?true:false;},isExported:true,};const LN={description:_t("The logarithm of a number, base e (euler's number)."),args:[arg("value (number)",_t("The value for which to calculate the logarithm, base e."))],compute:function(value){const _value=toNumber(value,this.locale);if(_value<=0){return new EvaluationError(_t("The value (%s) must be strictly positive.",_value));}
return Math.log(_value);},isExported:true,};const LOG={description:_t("The logarithm of a number, for a given base."),args:[arg("value (number)",_t("The value for which to calculate the logarithm.")),arg("base (number, default=10)",_t("The base of the logarithm.")),],compute:function(value,base={value:10}){const _value=toNumber(value,this.locale);const _base=toNumber(base,this.locale);if(_value<=0){return new EvaluationError(_t("The value (%s) must be strictly positive.",_value));}
if(_base<=0){return new EvaluationError(_t("The base (%s) must be strictly positive.",_base));}
if(_base===1){return new EvaluationError(_t("The base must be different from 1."));}
return Math.log10(_value)/Math.log10(_base);},isExported:true,};function mod(dividend,divisor){assertNotZero(divisor,_t("The divisor must be different from 0."));const modulus=dividend%divisor;if((modulus>0&&divisor<0)||(modulus<0&&divisor>0)){return modulus+divisor;}
return modulus;}
const MOD={description:_t("Modulo (remainder) operator."),args:[arg("dividend (number)",_t("The number to be divided to find the remainder.")),arg("divisor (number)",_t("The number to divide by.")),],compute:function(dividend,divisor){const _divisor=toNumber(divisor,this.locale);const _dividend=toNumber(dividend,this.locale);return{value:mod(_dividend,_divisor),format:dividend?.format,};},isExported:true,};const MUNIT={description:_t("Returns a n x n unit matrix, where n is the input dimension."),args:[arg("dimension (number)",_t("An integer specifying the dimension size of the unit matrix. It must be positive.")),],compute:function(n){const _n=toInteger(n,this.locale);if(_n<1){return new EvaluationError(_t("The argument dimension must be positive"));}
return getUnitMatrix(_n);},isExported:true,};const ODD={description:_t("Rounds a number up to the nearest odd integer."),args:[arg("value (number)",_t("The value to round to the next greatest odd number."))],compute:function(value){const _value=toNumber(value,this.locale);let temp=Math.ceil(Math.abs(_value));temp=temp&1?temp:temp+1;return{value:_value<0?-temp:temp,format:value?.format,};},isExported:true,};const PI={description:_t("The number pi."),args:[],compute:function(){return Math.PI;},isExported:true,};const POWER={description:_t("A number raised to a power."),args:[arg("base (number)",_t("The number to raise to the exponent power.")),arg("exponent (number)",_t("The exponent to raise base to.")),],compute:function(base,exponent){const _base=toNumber(base,this.locale);const _exponent=toNumber(exponent,this.locale);if(_base<0&&!Number.isInteger(_exponent)){return new EvaluationError(_t("The exponent (%s) must be an integer when the base is negative.",_exponent));}
return{value:Math.pow(_base,_exponent),format:base?.format};},isExported:true,};const PRODUCT={description:_t("Result of multiplying a series of numbers together."),args:[arg("factor1 (number, range<number>)",_t("The first number or range to calculate for the product.")),arg("factor2 (number, range<number>, repeating)",_t("More numbers or ranges to calculate for the product.")),],compute:function(...factors){let count=0;let acc=1;for(const n of factors){if(isMatrix(n)){for(const i of n){for(const j of i){const f=j.value;if(typeof f==="number"){acc*=f;count+=1;}
if(isEvaluationError(f)){return j;}}}}
else if(n!==undefined&&n.value!==null){acc*=strictToNumber(n,this.locale);count+=1;}}
return{value:count===0?0:acc,format:inferFormat(factors[0]),};},isExported:true,};const RAND={description:_t("A random number between 0 inclusive and 1 exclusive."),args:[],compute:function(){return Math.random();},isExported:true,};const RANDARRAY={description:_t("Returns a grid of random numbers between 0 inclusive and 1 exclusive."),args:[arg("rows (number, default=1)",_t("The number of rows to be returned.")),arg("columns (number, default=1)",_t("The number of columns to be returned.")),arg("min (number, default=0)",_t("The minimum number you would like returned.")),arg("max (number, default=1)",_t("The maximum number you would like returned.")),arg("whole_number (number, default=FALSE)",_t("Return a whole number or a decimal value.")),],compute:function(rows={value:1},columns={value:1},min={value:0},max={value:1},wholeNumber={value:false}){const _cols=toInteger(columns,this.locale);const _rows=toInteger(rows,this.locale);const _min=toNumber(min,this.locale);const _max=toNumber(max,this.locale);const _whole_number=toBoolean(wholeNumber);if(_cols<1){return new EvaluationError(_t("The number of columns (%s) must be positive.",_cols));}
if(_rows<1){return new EvaluationError(_t("The number of rows (%s) must be positive.",_rows));}
if(_min>_max){return new EvaluationError(_t("The maximum (%s) must be greater than or equal to the minimum (%s).",_max,_min));}
if(_whole_number){if(!Number.isInteger(_min)||!Number.isInteger(_max)){return new EvaluationError(_t("The maximum (%s) and minimum (%s) must be integers when whole_number is TRUE.",_max.toString(),_min.toString()));}}
const result=Array(_cols);for(let col=0;col<_cols;col++){result[col]=Array(_rows);for(let row=0;row<_rows;row++){if(!_whole_number){result[col][row]=_min+Math.random()*(_max-_min);}
else{result[col][row]=Math.floor(Math.random()*(_max-_min+1)+_min);}}}
return result;},isExported:true,};const RANDBETWEEN={description:_t("Random integer between two values, inclusive."),args:[arg("low (number)",_t("The low end of the random range.")),arg("high (number)",_t("The high end of the random range.")),],compute:function(low,high){let _low=toNumber(low,this.locale);if(!Number.isInteger(_low)){_low=Math.ceil(_low);}
let _high=toNumber(high,this.locale);if(!Number.isInteger(_high)){_high=Math.floor(_high);}
if(_low>_high){return new EvaluationError(_t("The high (%s) must be greater than or equal to the low (%s).",_high,_low));}
return{value:_low+Math.ceil((_high-_low+1)*Math.random())-1,format:low?.format,};},isExported:true,};const ROUND={description:_t("Rounds a number according to standard rules."),args:[arg("value (number)",_t("The value to round to places number of places.")),arg(`places (number, default=${DEFAULT_PLACES})`,_t("The number of decimal places to which to round.")),],compute:function(value,places={value:DEFAULT_PLACES}){const _value=toNumber(value,this.locale);let _places=toNumber(places,this.locale);const absValue=Math.abs(_value);let tempResult;if(_places===0){tempResult=Math.round(absValue);}
else{if(!Number.isInteger(_places)){_places=Math.trunc(_places);}
tempResult=Math.round(absValue*Math.pow(10,_places))/Math.pow(10,_places);}
return{value:_value>=0?tempResult:-tempResult,format:value?.format,};},isExported:true,};const ROUNDDOWN={description:_t("Rounds down a number."),args:[arg("value (number)",_t("The value to round to places number of places, always rounding down.")),arg(`places (number, default=${DEFAULT_PLACES})`,_t("The number of decimal places to which to round.")),],compute:function(value,places={value:DEFAULT_PLACES}){const _value=toNumber(value,this.locale);let _places=toNumber(places,this.locale);const absValue=Math.abs(_value);let tempResult;if(_places===0){tempResult=Math.floor(absValue);}
else{if(!Number.isInteger(_places)){_places=Math.trunc(_places);}
tempResult=Math.floor(absValue*Math.pow(10,_places))/Math.pow(10,_places);}
return{value:_value>=0?tempResult:-tempResult,format:value?.format,};},isExported:true,};const ROUNDUP={description:_t("Rounds up a number."),args:[arg("value (number)",_t("The value to round to places number of places, always rounding up.")),arg(`places (number, default=${DEFAULT_PLACES})`,_t("The number of decimal places to which to round.")),],compute:function(value,places={value:DEFAULT_PLACES}){const _value=toNumber(value,this.locale);let _places=toNumber(places,this.locale);const absValue=Math.abs(_value);let tempResult;if(_places===0){tempResult=Math.ceil(absValue);}
else{if(!Number.isInteger(_places)){_places=Math.trunc(_places);}
tempResult=Math.ceil(absValue*Math.pow(10,_places))/Math.pow(10,_places);}
return{value:_value>=0?tempResult:-tempResult,format:value?.format,};},isExported:true,};const SEC={description:_t("Secant of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the secant of, in radians."))],compute:function(angle){return 1/Math.cos(toNumber(angle,this.locale));},isExported:true,};const SECH={description:_t("Hyperbolic secant of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic secant of."))],compute:function(value){return 1/Math.cosh(toNumber(value,this.locale));},isExported:true,};const SEQUENCE={description:_t("Returns a sequence of numbers."),args:[arg("rows (number)",_t("The number of rows to return")),arg("columns (number, optional, default=1)",_t("The number of columns to return")),arg("start (number, optional, default=1)",_t("The first number in the sequence")),arg("step (number, optional, default=1)",_t("The amount to increment each value in the sequence")),],compute:function(rows,columns={value:1},start={value:1},step={value:1}){const _start=toNumber(start,this.locale);const _step=toNumber(step,this.locale);const _rows=toInteger(rows,this.locale);const _columns=toInteger(columns,this.locale);if(_columns<1){return new EvaluationError(_t("The number of columns (%s) must be positive.",_columns));}
if(_rows<1){return new EvaluationError(_t("The number of rows (%s) must be positive.",_rows));}
return generateMatrix(_columns,_rows,(col,row)=>{return{value:_start+row*_columns*_step+col*_step,};});},isExported:true,};const SIN={description:_t("Sine of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the sine of, in radians."))],compute:function(angle){return Math.sin(toNumber(angle,this.locale));},isExported:true,};const SINH={description:_t("Hyperbolic sine of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic sine of."))],compute:function(value){return Math.sinh(toNumber(value,this.locale));},isExported:true,};const SQRT={description:_t("Positive square root of a positive number."),args:[arg("value (number)",_t("The number for which to calculate the positive square root."))],compute:function(value){const _value=toNumber(value,this.locale);if(_value<0){return new EvaluationError(_t("The value (%s) must be positive or null.",_value));}
return{value:Math.sqrt(_value),format:value?.format};},isExported:true,};const SUM={description:_t("Sum of a series of numbers and/or cells."),args:[arg("value1 (number, range<number>)",_t("The first number or range to add together.")),arg("value2 (number, range<number>, repeating)",_t("Additional numbers or ranges to add to value1.")),],compute:function(...values){const v1=values[0];return{value:sum(values,this.locale),format:inferFormat(v1),};},isExported:true,};const SUMIF={description:_t("A conditional sum across a range."),args:[arg("criteria_range (range)",_t("The range which is tested against criterion.")),arg("criterion (string)",_t("The pattern or test to apply to range.")),arg("sum_range (range, default=criteria_range)",_t("The range to be summed, if different from range.")),],compute:function(criteriaRange,criterion,sumRange){if(sumRange===undefined){sumRange=criteriaRange;}
let sum=0;visitMatchingRanges([criteriaRange,criterion],(i,j)=>{const value=sumRange[i]?.[j]?.value;if(typeof value==="number"){sum+=value;}},this.locale);return sum;},isExported:true,};const SUMIFS={description:_t("Sums a range depending on multiple criteria."),args:[arg("sum_range (range)",_t("The range to sum.")),arg("criteria_range1 (range)",_t("The range to check against criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1.")),arg("criteria_range2 (any, range, repeating)",_t("Additional ranges to check.")),arg("criterion2 (string, repeating)",_t("Additional criteria to check.")),],compute:function(sumRange,...criters){let sum=0;visitMatchingRanges(criters,(i,j)=>{const value=sumRange[i]?.[j]?.value;if(typeof value==="number"){sum+=value;}},this.locale);return sum;},isExported:true,};const TAN={description:_t("Tangent of an angle provided in radians."),args:[arg("angle (number)",_t("The angle to find the tangent of, in radians."))],compute:function(angle){return Math.tan(toNumber(angle,this.locale));},isExported:true,};const TANH={description:_t("Hyperbolic tangent of any real number."),args:[arg("value (number)",_t("Any real value to calculate the hyperbolic tangent of."))],compute:function(value){return Math.tanh(toNumber(value,this.locale));},isExported:true,};function trunc(value,places){if(places===0){return Math.trunc(value);}
if(!Number.isInteger(places)){places=Math.trunc(places);}
return Math.trunc(value*Math.pow(10,places))/Math.pow(10,places);}
const TRUNC={description:_t("Truncates a number."),args:[arg("value (number)",_t("The value to be truncated.")),arg(`places (number, default=${DEFAULT_PLACES})`,_t("The number of significant digits to the right of the decimal point to retain.")),],compute:function(value,places={value:DEFAULT_PLACES}){const _value=toNumber(value,this.locale);const _places=toNumber(places,this.locale);return{value:trunc(_value,_places),format:value?.format};},isExported:true,};const INT={description:_t("Rounds a number down to the nearest integer that is less than or equal to it."),args:[arg("value (number)",_t("The number to round down to the nearest integer."))],compute:function(value){return Math.floor(toNumber(value,this.locale));},isExported:true,};var math=Object.freeze({__proto__:null,ABS:ABS,ACOS:ACOS,ACOSH:ACOSH,ACOT:ACOT,ACOTH:ACOTH,ASIN:ASIN,ASINH:ASINH,ATAN:ATAN,ATAN2:ATAN2,ATANH:ATANH,CEILING:CEILING,CEILING_MATH:CEILING_MATH,CEILING_PRECISE:CEILING_PRECISE,COS:COS,COSH:COSH,COT:COT,COTH:COTH,COUNTBLANK:COUNTBLANK,COUNTIF:COUNTIF,COUNTIFS:COUNTIFS,COUNTUNIQUE:COUNTUNIQUE,COUNTUNIQUEIFS:COUNTUNIQUEIFS,CSC:CSC,CSCH:CSCH,DECIMAL:DECIMAL,DEGREES:DEGREES,EXP:EXP,FLOOR:FLOOR,FLOOR_MATH:FLOOR_MATH,FLOOR_PRECISE:FLOOR_PRECISE,INT:INT,ISEVEN:ISEVEN,ISODD:ISODD,ISO_CEILING:ISO_CEILING,LN:LN,LOG:LOG,MOD:MOD,MUNIT:MUNIT,ODD:ODD,PI:PI,POWER:POWER,PRODUCT:PRODUCT,RAND:RAND,RANDARRAY:RANDARRAY,RANDBETWEEN:RANDBETWEEN,ROUND:ROUND,ROUNDDOWN:ROUNDDOWN,ROUNDUP:ROUNDUP,SEC:SEC,SECH:SECH,SEQUENCE:SEQUENCE,SIN:SIN,SINH:SINH,SQRT:SQRT,SUM:SUM,SUMIF:SUMIF,SUMIFS:SUMIFS,TAN:TAN,TANH:TANH,TRUNC:TRUNC});function filterAndFlatData(dataY,dataX){const _flatDataY=[];const _flatDataX=[];let lenY=0;let lenX=0;visitAny([dataY],(y)=>{_flatDataY.push(y);lenY+=1;});visitAny([dataX],(x)=>{_flatDataX.push(x);lenX+=1;});assert(lenY===lenX,_t("[[FUNCTION_NAME]] has mismatched argument count %s vs %s.",lenY,lenX));const flatDataX=[];const flatDataY=[];for(let i=0;i<lenY;i++){const valueY=_flatDataY[i]?.value;const valueX=_flatDataX[i]?.value;if(typeof valueY==="number"&&typeof valueX==="number"){flatDataY.push(valueY);flatDataX.push(valueX);}}
return{flatDataX,flatDataY};}
function covariance(dataY,dataX,isSample){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const count=flatDataY.length;assertNotZero(count);if(isSample){assertNotZero(count-1);}
let sumY=0;let sumX=0;for(let i=0;i<count;i++){sumY+=flatDataY[i];sumX+=flatDataX[i];}
const averageY=sumY/count;const averageX=sumX/count;let acc=0;for(let i=0;i<count;i++){acc+=(flatDataY[i]-averageY)*(flatDataX[i]-averageX);}
return acc/(count-(isSample?1:0));}
function variance(args,isSample,textAs0,locale){let count=0;const reduceFunction=textAs0?reduceNumbersTextAs0:reduceNumbers;const sum=reduceFunction(args,(acc,a)=>{count+=1;return acc+a;},0,locale);assertNotZero(count);if(isSample){assertNotZero(count-1);}
const average=sum/count;return(reduceFunction(args,(acc,a)=>acc+Math.pow(a-average,2),0,locale)/(count-(isSample?1:0)));}
function centile(data,percent,isInclusive,locale){const _percent=toNumber(percent,locale);assert(isInclusive?0<=_percent&&_percent<=1:0<_percent&&_percent<1,_t("Function [[FUNCTION_NAME]] parameter 2 value is out of range."));const sortedArray=[];let index;let count=0;visitAny(data,(d)=>{const value=d?.value;if(typeof value==="number"){index=dichotomicSearch(sortedArray,d,"nextSmaller","asc",sortedArray.length,(array,i)=>array[i]);sortedArray.splice(index+1,0,value);count++;}});assert(count!==0,_t("[[FUNCTION_NAME]] has no valid input data."));if(!isInclusive){assert(1/(count+1)<=_percent&&_percent<=count/(count+1),_t("Function [[FUNCTION_NAME]] parameter 2 value is out of range."));}
return percentile(sortedArray,_percent,isInclusive);}
const AVEDEV={description:_t("Average magnitude of deviations from mean."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...values){let count=0;const sum=reduceNumbers(values,(acc,a)=>{count+=1;return acc+a;},0,this.locale);if(count===0){return new DivisionByZeroError(_t("Evaluation of function [[FUNCTION_NAME]] caused a divide by zero error."));}
const average=sum/count;return reduceNumbers(values,(acc,a)=>acc+Math.abs(average-a),0,this.locale)/count;},isExported:true,};const AVERAGE={description:_t("Numerical average value in a dataset, ignoring text."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when calculating the average value.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when calculating the average value.")),],compute:function(...values){return{value:average(values,this.locale),format:inferFormat(values[0]),};},isExported:true,};const rangeError=_t("[[FUNCTION_NAME]] has mismatched range sizes.");const negativeWeightError=_t("[[FUNCTION_NAME]] expects the weight to be positive or equal to 0.");const AVERAGE_WEIGHTED={description:_t("Weighted average."),args:[arg("values (number, range<number>)",_t("Values to average.")),arg("weights (number, range<number>)",_t("Weights for each corresponding value.")),arg("additional_values (number, range<number>, repeating)",_t("Additional values to average.")),arg("additional_weights (number, range<number>, repeating)",_t("Additional weights.")),],compute:function(...args){let sum=0;let count=0;for(let n=0;n<args.length-1;n+=2){const argN=args[n];const argN1=args[n+1];if(!areSameDimensions(argN,argN1)){return new EvaluationError(rangeError);}
if(isMatrix(argN)){for(let i=0;i<argN.length;i++){for(let j=0;j<argN[0].length;j++){const value=argN[i][j].value;const weight=isMatrix(argN1)?argN1?.[i][j].value:toNumber(argN1,this.locale);const valueIsNumber=typeof value==="number";const weightIsNumber=typeof weight==="number";if(valueIsNumber&&weightIsNumber){if(weight<0){return new EvaluationError(negativeWeightError);}
sum+=value*weight;count+=weight;continue;}
if(valueIsNumber!==weightIsNumber){return new EvaluationError(_t("[[FUNCTION_NAME]] expects number values."));}}}}
else{const value=toNumber(argN,this.locale);const weight=isMatrix(argN1)?argN1?.[0][0].value:toNumber(argN1,this.locale);if(typeof weight==="number"){if(weight<0){return new EvaluationError(negativeWeightError);}
sum+=value*weight;count+=weight;}}}
if(count===0){return new DivisionByZeroError(_t("Evaluation of function [[FUNCTION_NAME]] caused a divide by zero error."));}
return{value:sum/count,format:inferFormat(args[0])};},};const AVERAGEA={description:_t("Numerical average value in a dataset."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when calculating the average value.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when calculating the average value.")),],compute:function(...args){let count=0;const sum=reduceNumbersTextAs0(args,(acc,a)=>{count+=1;return acc+a;},0,this.locale);if(count===0){return new DivisionByZeroError(_t("Evaluation of function [[FUNCTION_NAME]] caused a divide by zero error."));}
return{value:sum/count,format:inferFormat(args[0]),};},isExported:true,};const AVERAGEIF={description:_t("Average of values depending on criteria."),args:[arg("criteria_range (number, range<number>)",_t("The range to check against criterion.")),arg("criterion (string)",_t("The pattern or test to apply to criteria_range.")),arg("average_range (number, range<number>, default=criteria_range)",_t("The range to average. If not included, criteria_range is used for the average instead.")),],compute:function(criteriaRange,criterion,averageRange){const _averageRange=averageRange===undefined?toMatrix(criteriaRange):toMatrix(averageRange);let count=0;let sum=0;visitMatchingRanges([criteriaRange,criterion],(i,j)=>{const value=_averageRange[i]?.[j]?.value;if(typeof value==="number"){count+=1;sum+=value;}},this.locale);if(count===0){return new DivisionByZeroError(_t("Evaluation of function [[FUNCTION_NAME]] caused a divide by zero error."));}
return sum/count;},isExported:true,};const AVERAGEIFS={description:_t("Average of values depending on multiple criteria."),args:[arg("average_range (range)",_t("The range to average.")),arg("criteria_range1 (range)",_t("The range to check against criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1.")),arg("criteria_range2 (any, range, repeating)",_t("Additional criteria_range and criterion to check.")),arg("criterion2 (string, repeating)",_t("The pattern or test to apply to criteria_range2.")),],compute:function(averageRange,...args){const _averageRange=toMatrix(averageRange);let count=0;let sum=0;visitMatchingRanges(args,(i,j)=>{const value=_averageRange[i]?.[j]?.value;if(typeof value==="number"){count+=1;sum+=value;}},this.locale);if(count===0){return new DivisionByZeroError(_t("Evaluation of function [[FUNCTION_NAME]] caused a divide by zero error."));}
return sum/count;},isExported:true,};const COUNT={description:_t("The number of numeric values in dataset."),args:[arg("value1 (number, any, range<number>)",_t("The first value or range to consider when counting.")),arg("value2 (number, any, range<number>, repeating)",_t("Additional values or ranges to consider when counting.")),],compute:function(...values){return countNumbers(values,this.locale);},isExported:true,};const COUNTA={description:_t("The number of values in a dataset."),args:[arg("value1 (any, range)",_t("The first value or range to consider when counting.")),arg("value2 (any, range, repeating)",_t("Additional values or ranges to consider when counting.")),],compute:function(...values){return countAny(values);},isExported:true,};const COVAR={description:_t("The covariance of a dataset."),args:[arg("data_y (any, range)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (any, range)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){return covariance(dataY,dataX,false);},isExported:true,};const COVARIANCE_P={description:_t("The covariance of a dataset."),args:[arg("data_y (any, range)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (any, range)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){return covariance(dataY,dataX,false);},isExported:true,};const COVARIANCE_S={description:_t("The sample covariance of a dataset."),args:[arg("data_y (any, range)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (any, range)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){return covariance(dataY,dataX,true);},isExported:true,};const FORECAST={description:_t("Calculates the expected y-value for a specified x based on a linear regression of a dataset."),args:[arg("x (number, range<number>)",_t("The value(s) on the x-axis to forecast.")),arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(x,dataY,dataX){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);return predictLinearValues([flatDataY],[flatDataX],matrixMap(toMatrix(x),(value)=>toNumber(value,this.locale)),true);},isExported:true,};const GROWTH={description:_t("Fits points to exponential growth trend."),args:[arg("known_data_y (range<number>)",_t("The array or range containing dependent (y) values that are already known, used to curve fit an ideal exponential growth curve.")),arg("known_data_x (range<number>, default={1;2;3;...})",_t("The values of the independent variable(s) corresponding with known_data_y.")),arg("new_data_x (any, range, default=known_data_x)",_t("The data points to return the y values for on the ideal curve fit.")),arg("b (boolean, default=TRUE)",_t("Given a general exponential form of y = b*m^x for a curve fit, calculates b if TRUE or forces b to be 1 and only calculates the m values if FALSE.")),],compute:function(knownDataY,knownDataX=[[]],newDataX=[[]],b={value:true}){return expM(predictLinearValues(logM(toNumberMatrix(knownDataY,"the first argument (known_data_y)")),toNumberMatrix(knownDataX,"the second argument (known_data_x)"),toNumberMatrix(newDataX,"the third argument (new_data_y)"),toBoolean(b)));},};const INTERCEPT={description:_t("Compute the intercept of the linear regression."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const[[],[intercept]]=fullLinearRegression([flatDataX],[flatDataY]);return intercept;},isExported:true,};const LARGE={description:_t("Nth largest element from a data set."),args:[arg("data (any, range)",_t("Array or range containing the dataset to consider.")),arg("n (number)",_t("The rank from largest to smallest of the element to return.")),],compute:function(data,n){const _n=Math.trunc(toNumber(n?.value,this.locale));const largests=[];let index;let count=0;visitAny([data],(d)=>{if(typeof d?.value==="number"){index=dichotomicSearch(largests,d,"nextSmaller","asc",largests.length,(array,i)=>array[i].value);largests.splice(index+1,0,d);count++;if(count>_n){largests.shift();count--;}}});const result=largests.shift();if(result===undefined){return new EvaluationError(_t("[[FUNCTION_NAME]] has no valid input data."));}
if(count<_n){return new EvaluationError(_t("Function [[FUNCTION_NAME]] parameter 2 value (%s) is out of range.",_n));}
return result;},isExported:true,};const LINEST={description:_t("Given partial data about a linear trend, calculates various parameters about the ideal linear trend using the least-squares method."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>, default={1;2;3;...})",_t("The range representing the array or matrix of independent data.")),arg("calculate_b (boolean, default=TRUE)",_t("A flag specifying wheter to compute the slope or not")),arg("verbose (boolean, default=FALSE)",_t("A flag specifying whether to return additional regression statistics or only the linear coefficients and the y-intercept")),],compute:function(dataY,dataX=[[]],calculateB={value:true},verbose={value:false}){return fullLinearRegression(toNumberMatrix(dataX,"the first argument (data_y)"),toNumberMatrix(dataY,"the second argument (data_x)"),toBoolean(calculateB),toBoolean(verbose));},isExported:true,};const LOGEST={description:_t("Given partial data about an exponential growth curve, calculates various parameters about the best fit ideal exponential growth curve."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>, optional, default={1;2;3;...})",_t("The range representing the array or matrix of independent data.")),arg("calculate_b (boolean, default=TRUE)",_t("A flag specifying wheter to compute the slope or not")),arg("verbose (boolean, default=FALSE)",_t("A flag specifying whether to return additional regression statistics or only the linear coefficients and the y-intercept")),],compute:function(dataY,dataX=[[]],calculateB={value:true},verbose={value:false}){const coeffs=fullLinearRegression(toNumberMatrix(dataX,"the second argument (data_x)"),logM(toNumberMatrix(dataY,"the first argument (data_y)")),toBoolean(calculateB),toBoolean(verbose));for(let i=0;i<coeffs.length;i++){coeffs[i][0]=Math.exp(coeffs[i][0]);}
return coeffs;},isExported:true,};const MATTHEWS={description:_t("Compute the Matthews correlation coefficient of a dataset."),args:[arg("data_x (range)",_t("The range representing the array or matrix of observed data.")),arg("data_y (range)",_t("The range representing the array or matrix of predicted data.")),],compute:function(dataX,dataY){const flatX=dataX.flat();const flatY=dataY.flat();assertSameNumberOfElements(flatX,flatY);if(flatX.length===0){return new EvaluationError(_t("[[FUNCTION_NAME]] expects non-empty ranges for both parameters."));}
const n=flatX.length;let trueN=0,trueP=0,falseP=0,falseN=0;for(let i=0;i<n;++i){const isTrue1=toBoolean(flatX[i]);const isTrue2=toBoolean(flatY[i]);if(isTrue1===isTrue2){if(isTrue1){trueP++;}
else{trueN++;}}
else{if(isTrue1){falseN++;}
else{falseP++;}}}
return((trueP*trueN-falseP*falseN)/Math.sqrt((trueP+falseP)*(trueP+falseN)*(trueN+falseP)*(trueN+falseN)));},isExported:false,};const MAX={description:_t("Maximum value in a numeric dataset."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when calculating the maximum value.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when calculating the maximum value.")),],compute:function(...values){return max(values,this.locale);},isExported:true,};const MAXA={description:_t("Maximum numeric value in a dataset."),args:[arg("value1 (any, range)",_t("The first value or range to consider when calculating the maximum value.")),arg("value2 (any, range, repeating)",_t("Additional values or ranges to consider when calculating the maximum value.")),],compute:function(...args){const maxa=reduceNumbersTextAs0(args,(acc,a)=>{return Math.max(a,acc);},-Infinity,this.locale);return{value:maxa===-Infinity?0:maxa,format:inferFormat(args[0])};},isExported:true,};const MAXIFS={description:_t("Returns the maximum value in a range of cells, filtered by a set of criteria."),args:[arg("range (range)",_t("The range of cells from which the maximum will be determined.")),arg("criteria_range1 (range)",_t("The range of cells over which to evaluate criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1, such that each cell that evaluates to TRUE will be included in the filtered set.")),arg("criteria_range2 (any, range, repeating)",_t("Additional ranges over which to evaluate the additional criteria. The filtered set will be the intersection of the sets produced by each criterion-range pair.")),arg("criterion2 (string, repeating)",_t("The pattern or test to apply to criteria_range2.")),],compute:function(range,...args){let result=-Infinity;visitMatchingRanges(args,(i,j)=>{const value=range[i]?.[j]?.value;if(typeof value==="number"){result=result<value?value:result;}},this.locale);return result===-Infinity?0:result;},isExported:true,};const MEDIAN={description:_t("Median value in a numeric dataset."),args:[arg("value1 (any, range)",_t("The first value or range to consider when calculating the median value.")),arg("value2 (any, range, repeating)",_t("Additional values or ranges to consider when calculating the median value.")),],compute:function(...values){const data=[];visitNumbers(values,(value)=>{data.push(value);},this.locale);return{value:centile(data,{value:0.5},true,this.locale),format:inferFormat(data[0]),};},isExported:true,};const MIN={description:_t("Minimum value in a numeric dataset."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when calculating the minimum value.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when calculating the minimum value.")),],compute:function(...values){return min(values,this.locale);},isExported:true,};const MINA={description:_t("Minimum numeric value in a dataset."),args:[arg("value1 (number, range<number>)",_t("The first value or range to consider when calculating the minimum value.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to consider when calculating the minimum value.")),],compute:function(...args){const mina=reduceNumbersTextAs0(args,(acc,a)=>{return Math.min(a,acc);},Infinity,this.locale);return{value:mina===Infinity?0:mina,format:inferFormat(args[0])};},isExported:true,};const MINIFS={description:_t("Returns the minimum value in a range of cells, filtered by a set of criteria."),args:[arg("range (range)",_t("The range of cells from which the minimum will be determined.")),arg("criteria_range1 (range)",_t("The range of cells over which to evaluate criterion1.")),arg("criterion1 (string)",_t("The pattern or test to apply to criteria_range1, such that each cell that evaluates to TRUE will be included in the filtered set.")),arg("criteria_range2 (any, range, repeating)",_t("Additional ranges over which to evaluate the additional criteria. The filtered set will be the intersection of the sets produced by each criterion-range pair.")),arg("criterion2 (string, repeating)",_t("The pattern or test to apply to criteria_range2.")),],compute:function(range,...args){let result=Infinity;visitMatchingRanges(args,(i,j)=>{const value=range[i]?.[j]?.value;if(typeof value==="number"){result=result>value?value:result;}},this.locale);return result===Infinity?0:result;},isExported:true,};function pearson(dataY,dataX){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);if(flatDataX.length===0){throw new EvaluationError(_t("[[FUNCTION_NAME]] expects non-empty ranges for both parameters."));}
if(flatDataX.length<2){throw new EvaluationError(_t("[[FUNCTION_NAME]] needs at least two values for both parameters."));}
const n=flatDataX.length;let sumX=0,sumY=0,sumXY=0,sumXX=0,sumYY=0;for(let i=0;i<n;i++){const xij=flatDataX[i];const yij=flatDataY[i];sumX+=xij;sumY+=yij;sumXY+=xij*yij;sumXX+=xij*xij;sumYY+=yij*yij;}
return((n*sumXY-sumX*sumY)/Math.sqrt((n*sumXX-sumX*sumX)*(n*sumYY-sumY*sumY)));}
const PEARSON={description:_t("Compute the Pearson product-moment correlation coefficient of a dataset."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){return pearson(dataY,dataX);},isExported:true,};const CORREL=PEARSON;const PERCENTILE={description:_t("Value at a given percentile of a dataset."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("percentile (number)",_t("The percentile whose value within data will be calculated and returned.")),],compute:function(data,percentile){return PERCENTILE_INC.compute.bind(this)(data,percentile);},isExported:true,};const PERCENTILE_EXC={description:_t("Value at a given percentile of a dataset exclusive of 0 and 1."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("percentile (number)",_t("The percentile, exclusive of 0 and 1, whose value within 'data' will be calculated and returned.")),],compute:function(data,percentile){return{value:centile([data],percentile,false,this.locale),format:inferFormat(data),};},isExported:true,};const PERCENTILE_INC={description:_t("Value at a given percentile of a dataset."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("percentile (number)",_t("The percentile whose value within data will be calculated and returned.")),],compute:function(data,percentile){return{value:centile([data],percentile,true,this.locale),format:inferFormat(data),};},isExported:true,};const POLYFIT_COEFFS={description:_t("Compute the coefficients of polynomial regression of the dataset."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),arg("order (number)",_t("The order of the polynomial to fit the data, between 1 and 6.")),arg("intercept (boolean, default=TRUE)",_t("A flag specifying whether to compute the intercept or not.")),],compute:function(dataY,dataX,order,intercept={value:true}){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);return polynomialRegression(flatDataY,flatDataX,toNumber(order,this.locale),toBoolean(intercept));},isExported:false,};const POLYFIT_FORECAST={description:_t("Predict value by computing a polynomial regression of the dataset."),args:[arg("x (number, range<number>)",_t("The value(s) on the x-axis to forecast.")),arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),arg("order (number)",_t("The order of the polynomial to fit the data, between 1 and 6.")),arg("intercept (boolean, default=TRUE)",_t("A flag specifying whether to compute the intercept or not.")),],compute:function(x,dataY,dataX,order,intercept={value:true}){const _order=toNumber(order,this.locale);const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const coeffs=polynomialRegression(flatDataY,flatDataX,_order,toBoolean(intercept)).flat();return matrixMap(toMatrix(x),(xij)=>evaluatePolynomial(coeffs,toNumber(xij,this.locale),_order));},isExported:false,};const QUARTILE={description:_t("Value nearest to a specific quartile of a dataset."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("quartile_number (number)",_t("Which quartile value to return.")),],compute:function(data,quartileNumber){return QUARTILE_INC.compute.bind(this)(data,quartileNumber);},isExported:true,};const QUARTILE_EXC={description:_t("Value nearest to a specific quartile of a dataset exclusive of 0 and 4."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("quartile_number (number)",_t("Which quartile value, exclusive of 0 and 4, to return.")),],compute:function(data,quartileNumber){const _quartileNumber=Math.trunc(toNumber(quartileNumber,this.locale));const percent={value:0.25*_quartileNumber};return{value:centile([data],percent,false,this.locale),format:inferFormat(data),};},isExported:true,};const QUARTILE_INC={description:_t("Value nearest to a specific quartile of a dataset."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("quartile_number (number)",_t("Which quartile value to return.")),],compute:function(data,quartileNumber){const percent={value:0.25*Math.trunc(toNumber(quartileNumber,this.locale))};return{value:centile([data],percent,true,this.locale),format:inferFormat(data),};},isExported:true,};const RANK={description:_t("Returns the rank of a specified value in a dataset."),args:[arg("value (number)",_t("The value whose rank will be determined.")),arg("data (range)",_t("The range containing the dataset to consider.")),arg("is_ascending (boolean, default=FALSE)",_t("Whether to consider the values in data in descending or ascending order.")),],compute:function(value,data,isAscending={value:false}){const _isAscending=toBoolean(isAscending);const _value=toNumber(value,this.locale);let rank=1;let found=false;for(const row of data){for(const cell of row){if(typeof cell.value!=="number"){continue;}
const _cell=toNumber(cell,this.locale);if(_cell===_value){found=true;}
else if(_cell>_value!==_isAscending){rank++;}}}
if(!found){return new NotAvailableError(_t("Value not found in the given data."));}
return rank;},isExported:true,};const RSQ={description:_t("Compute the square of r, the Pearson product-moment correlation coefficient of a dataset."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){return Math.pow(pearson(dataX,dataY),2.0);},isExported:true,};const SLOPE={description:_t("Compute the slope of the linear regression."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const[[slope]]=fullLinearRegression([flatDataX],[flatDataY]);return slope;},isExported:true,};const SMALL={description:_t("Nth smallest element in a data set."),args:[arg("data (any, range)",_t("The array or range containing the dataset to consider.")),arg("n (number)",_t("The rank from smallest to largest of the element to return.")),],compute:function(data,n){const _n=Math.trunc(toNumber(n?.value,this.locale));const largests=[];let index;let count=0;visitAny([data],(d)=>{if(typeof d?.value==="number"){index=dichotomicSearch(largests,d,"nextSmaller","asc",largests.length,(array,i)=>array[i].value);largests.splice(index+1,0,d);count++;if(count>_n){largests.pop();count--;}}});const result=largests.pop();if(result===undefined){return new EvaluationError(_t("[[FUNCTION_NAME]] has no valid input data."));}
if(count<_n){return new EvaluationError(_t("Function [[FUNCTION_NAME]] parameter 2 value (%s) is out of range.",_n));}
return result;},isExported:true,};const SPEARMAN={description:_t("Compute the Spearman rank correlation coefficient of a dataset."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataX,dataY){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const n=flatDataX.length;const order=flatDataX.map((e,i)=>[e,flatDataY[i]]);order.sort((a,b)=>a[0]-b[0]);for(let i=0;i<n;++i){order[i][0]=i;}
order.sort((a,b)=>a[1]-b[1]);let sum=0.0;for(let i=0;i<n;++i){sum+=(order[i][0]-i)**2;}
return 1-(6*sum)/(n**3-n);},isExported:false,};const STDEV={description:_t("Standard deviation."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return Math.sqrt(VAR.compute.bind(this)(...args));},isExported:true,};const STDEV_P={description:_t("Standard deviation of entire population."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return Math.sqrt(VAR_P.compute.bind(this)(...args));},isExported:true,};const STDEV_S={description:_t("Standard deviation."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return Math.sqrt(VAR_S.compute.bind(this)(...args));},isExported:true,};const STDEVA={description:_t("Standard deviation of sample (text as 0)."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return Math.sqrt(VARA.compute.bind(this)(...args));},isExported:true,};const STDEVP={description:_t("Standard deviation of entire population."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return Math.sqrt(VARP.compute.bind(this)(...args));},isExported:true,};const STDEVPA={description:_t("Standard deviation of entire population (text as 0)."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return Math.sqrt(VARPA.compute.bind(this)(...args));},isExported:true,};const STEYX={description:_t("Calculates the standard error of the predicted y-value for each x in the regression of a dataset."),args:[arg("data_y (range<number>)",_t("The range representing the array or matrix of dependent data.")),arg("data_x (range<number>)",_t("The range representing the array or matrix of independent data.")),],compute:function(dataY,dataX){const{flatDataX,flatDataY}=filterAndFlatData(dataY,dataX);const data=fullLinearRegression([flatDataX],[flatDataY],true,true);return data[1][2];},isExported:true,};const TREND={description:_t("Fits points to linear trend derived via least-squares."),args:[arg("known_data_y (number, range<number>)",_t("The array or range containing dependent (y) values that are already known, used to curve fit an ideal linear trend.")),arg("known_data_x (number, range<number>, optional, default={1;2;3;...})",_t("The values of the independent variable(s) corresponding with known_data_y.")),arg("new_data_x (number, range<number>, optional, default=known_data_x)",_t("The data points to return the y values for on the ideal curve fit.")),arg("b (boolean, optional, default=TRUE)",_t("Given a general linear form of y = m*x+b for a curve fit, calculates b if TRUE or forces b to be 0 and only calculates the m values if FALSE, i.e. forces the curve fit to pass through the origin.")),],compute:function(knownDataY,knownDataX=[[]],newDataX=[[]],b={value:true}){return predictLinearValues(toNumberMatrix(knownDataY,"the first argument (known_data_y)"),toNumberMatrix(knownDataX,"the second argument (known_data_x)"),toNumberMatrix(newDataX,"the third argument (new_data_y)"),toBoolean(b));},};const VAR={description:_t("Variance."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return variance(args,true,false,this.locale);},isExported:true,};const VAR_P={description:_t("Variance of entire population."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return variance(args,false,false,this.locale);},isExported:true,};const VAR_S={description:_t("Variance."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return variance(args,true,false,this.locale);},isExported:true,};const VARA={description:_t("Variance of sample (text as 0)."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the sample.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the sample.")),],compute:function(...args){return variance(args,true,true,this.locale);},isExported:true,};const VARP={description:_t("Variance of entire population."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return variance(args,false,false,this.locale);},isExported:true,};const VARPA={description:_t("Variance of entire population (text as 0)."),args:[arg("value1 (number, range<number>)",_t("The first value or range of the population.")),arg("value2 (number, range<number>, repeating)",_t("Additional values or ranges to include in the population.")),],compute:function(...args){return variance(args,false,true,this.locale);},isExported:true,};var statistical=Object.freeze({__proto__:null,AVEDEV:AVEDEV,AVERAGE:AVERAGE,AVERAGEA:AVERAGEA,AVERAGEIF:AVERAGEIF,AVERAGEIFS:AVERAGEIFS,AVERAGE_WEIGHTED:AVERAGE_WEIGHTED,CORREL:CORREL,COUNT:COUNT,COUNTA:COUNTA,COVAR:COVAR,COVARIANCE_P:COVARIANCE_P,COVARIANCE_S:COVARIANCE_S,FORECAST:FORECAST,GROWTH:GROWTH,INTERCEPT:INTERCEPT,LARGE:LARGE,LINEST:LINEST,LOGEST:LOGEST,MATTHEWS:MATTHEWS,MAX:MAX,MAXA:MAXA,MAXIFS:MAXIFS,MEDIAN:MEDIAN,MIN:MIN,MINA:MINA,MINIFS:MINIFS,PEARSON:PEARSON,PERCENTILE:PERCENTILE,PERCENTILE_EXC:PERCENTILE_EXC,PERCENTILE_INC:PERCENTILE_INC,POLYFIT_COEFFS:POLYFIT_COEFFS,POLYFIT_FORECAST:POLYFIT_FORECAST,QUARTILE:QUARTILE,QUARTILE_EXC:QUARTILE_EXC,QUARTILE_INC:QUARTILE_INC,RANK:RANK,RSQ:RSQ,SLOPE:SLOPE,SMALL:SMALL,SPEARMAN:SPEARMAN,STDEV:STDEV,STDEVA:STDEVA,STDEVP:STDEVP,STDEVPA:STDEVPA,STDEV_P:STDEV_P,STDEV_S:STDEV_S,STEYX:STEYX,TREND:TREND,VAR:VAR,VARA:VARA,VARP:VARP,VARPA:VARPA,VAR_P:VAR_P,VAR_S:VAR_S});function getMatchingCells(database,field,criteria,locale){const indexColNameDB=new Map();const dimRowDB=database.length;for(let indexCol=dimRowDB-1;indexCol>=0;indexCol--){indexColNameDB.set(toString(database[indexCol][0]).toUpperCase(),indexCol);}
const fieldValue=field?.value;if(typeof fieldValue!=="number"&&typeof fieldValue!=="string"){throw new EvaluationError(_t("The field must be a number or a string"));}
let index;if(typeof fieldValue==="number"){index=Math.trunc(fieldValue)-1;if(index<0||dimRowDB-1<index){throw new EvaluationError(_t("The field (%(fieldValue)s) must be one of %(dimRowDB)s or must be a number between 1 and %s inclusive.",{fieldValue:fieldValue.toString(),dimRowDB:dimRowDB.toString(),}));}}
else{const colName=toString(field).toUpperCase();index=indexColNameDB.get(colName)??-1;if(index===-1){throw new EvaluationError(_t("The field (%s) must be one of %s.",toString(field),[...indexColNameDB.keys()].toString()));}}
const dimColCriteria=criteria[0].length;if(dimColCriteria<2){throw new EvaluationError(_t("The criteria range contains %s row, it must be at least 2 rows.",dimColCriteria.toString()));}
let matchingRows=new Set();const dimColDB=database[0].length;for(let indexRow=1;indexRow<dimColCriteria;indexRow++){const args=[];let existColNameDB=true;for(let indexCol=0;indexCol<criteria.length;indexCol++){const currentName=toString(criteria[indexCol][0]).toUpperCase();const indexColDB=indexColNameDB.get(currentName);const criter=criteria[indexCol][indexRow];if(criter.value!==null){if(indexColDB!==undefined){args.push([database[indexColDB].slice(1,dimColDB)]);args.push(criter);}
else{existColNameDB=false;break;}}}
if(existColNameDB){if(args.length>0){visitMatchingRanges(args,(i,j)=>{matchingRows.add(j);},locale,true);}
else{matchingRows=new Set(Array(dimColDB-1).keys());break;}}}
const fieldCol=database[index];return[...matchingRows].map((x)=>fieldCol[x+1]);}
const databaseArgs=[arg("database (range)",_t("The array or range containing the data to consider, structured in such a way that the first row contains the labels for each column's values.")),arg("field (number, string)",_t("Indicates which column in database contains the values to be extracted and operated on.")),arg("criteria (range)",_t("An array or range containing zero or more criteria to filter the database values by before operating.")),];const DAVERAGE={description:_t("Average of a set of values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return AVERAGE.compute.bind(this)([cells]);},isExported:true,};const DCOUNT={description:_t("Counts values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return COUNT.compute.bind(this)([cells]);},isExported:true,};const DCOUNTA={description:_t("Counts values and text from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return COUNTA.compute.bind(this)([cells]);},isExported:true,};const DGET={description:_t("Single value from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);if(cells.length!==1){return new EvaluationError(_t("More than one match found in DGET evaluation."));}
return cells[0];},isExported:true,};const DMAX={description:_t("Maximum of values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return MAX.compute.bind(this)([cells]);},isExported:true,};const DMIN={description:_t("Minimum of values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return MIN.compute.bind(this)([cells]);},isExported:true,};const DPRODUCT={description:_t("Product of values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return PRODUCT.compute.bind(this)([cells]);},isExported:true,};const DSTDEV={description:_t("Standard deviation of population sample from table."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return STDEV.compute.bind(this)([cells]);},isExported:true,};const DSTDEVP={description:_t("Standard deviation of entire population from table."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return STDEVP.compute.bind(this)([cells]);},isExported:true,};const DSUM={description:_t("Sum of values from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return SUM.compute.bind(this)([cells]);},isExported:true,};const DVAR={description:_t("Variance of population sample from table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return VAR.compute.bind(this)([cells]);},isExported:true,};const DVARP={description:_t("Variance of a population from a table-like range."),args:databaseArgs,compute:function(database,field,criteria){const cells=getMatchingCells(database,field,criteria,this.locale);return VARP.compute.bind(this)([cells]);},isExported:true,};var database=Object.freeze({__proto__:null,DAVERAGE:DAVERAGE,DCOUNT:DCOUNT,DCOUNTA:DCOUNTA,DGET:DGET,DMAX:DMAX,DMIN:DMIN,DPRODUCT:DPRODUCT,DSTDEV:DSTDEV,DSTDEVP:DSTDEVP,DSUM:DSUM,DVAR:DVAR,DVARP:DVARP});const DEFAULT_TYPE=1;const DEFAULT_WEEKEND=1;var TIME_UNIT;(function(TIME_UNIT){TIME_UNIT["WHOLE_YEARS"]="Y";TIME_UNIT["WHOLE_MONTHS"]="M";TIME_UNIT["WHOLE_DAYS"]="D";TIME_UNIT["DAYS_WITHOUT_WHOLE_MONTHS"]="MD";TIME_UNIT["MONTH_WITHOUT_WHOLE_YEARS"]="YM";TIME_UNIT["DAYS_BETWEEN_NO_MORE_THAN_ONE_YEAR"]="YD";})(TIME_UNIT||(TIME_UNIT={}));const DATE={description:_t("Converts year/month/day into a date."),args:[arg("year (number)",_t("The year component of the date.")),arg("month (number)",_t("The month component of the date.")),arg("day (number)",_t("The day component of the date.")),],compute:function(year,month,day){let _year=Math.trunc(toNumber(year,this.locale));const _month=Math.trunc(toNumber(month,this.locale));const _day=Math.trunc(toNumber(day,this.locale));if(_year<0||_year>9999){return new EvaluationError(_t("The year (%s) must be between 0 and 9999 inclusive.",_year.toString()));}
if(_year<1900){_year+=1900;}
const jsDate=new DateTime(_year,_month-1,_day);const result=jsDateToRoundNumber(jsDate);if(result<0){return new EvaluationError(_t("The function [[FUNCTION_NAME]] result must be greater than or equal 01/01/1900."));}
return{value:result,format:this.locale.dateFormat,};},isExported:true,};const DATEDIF={description:_t("Calculates the number of days, months, or years between two dates."),args:[arg("start_date (date)",_t("The start date to consider in the calculation. Must be a reference to a cell containing a DATE, a function returning a DATE type, or a number.")),arg("end_date (date)",_t("The end date to consider in the calculation. Must be a reference to a cell containing a DATE, a function returning a DATE type, or a number.")),arg("unit (string)",_t('A text abbreviation for unit of time. Accepted values are "Y" (the number of whole years between start_date and end_date), "M" (the number of whole months between start_date and end_date), "D" (the number of days between start_date and end_date), "MD" (the number of days between start_date and end_date after subtracting whole months), "YM" (the number of whole months between start_date and end_date after subtracting whole years), "YD" (the number of days between start_date and end_date, assuming start_date and end_date were no more than one year apart).')),],compute:function(startDate,endDate,unit){const _unit=toString(unit).toUpperCase();if(!Object.values(TIME_UNIT).includes(_unit)){return new EvaluationError(expectStringSetError(Object.values(TIME_UNIT),toString(unit)));}
const _startDate=Math.trunc(toNumber(startDate,this.locale));const _endDate=Math.trunc(toNumber(endDate,this.locale));const jsStartDate=numberToJsDate(_startDate);const jsEndDate=numberToJsDate(_endDate);if(_endDate<_startDate){return new EvaluationError(_t("start_date (%s) should be on or before end_date (%s).",jsStartDate.toLocaleDateString(),jsEndDate.toLocaleDateString()));}
switch(_unit){case TIME_UNIT.WHOLE_YEARS:return getTimeDifferenceInWholeYears(jsStartDate,jsEndDate);case TIME_UNIT.WHOLE_MONTHS:return getTimeDifferenceInWholeMonths(jsStartDate,jsEndDate);case TIME_UNIT.WHOLE_DAYS:{return getTimeDifferenceInWholeDays(jsStartDate,jsEndDate);}
case TIME_UNIT.MONTH_WITHOUT_WHOLE_YEARS:{return(getTimeDifferenceInWholeMonths(jsStartDate,jsEndDate)-
getTimeDifferenceInWholeYears(jsStartDate,jsEndDate)*12);}
case TIME_UNIT.DAYS_WITHOUT_WHOLE_MONTHS:let days=jsEndDate.getDate()-jsStartDate.getDate();if(days<0){const monthBeforeEndMonth=new DateTime(jsEndDate.getFullYear(),jsEndDate.getMonth()-1,1);const daysInMonthBeforeEndMonth=getDaysInMonth(monthBeforeEndMonth);days=daysInMonthBeforeEndMonth-Math.abs(days);}
return days;case TIME_UNIT.DAYS_BETWEEN_NO_MORE_THAN_ONE_YEAR:{if(areTwoDatesWithinOneYear(_startDate,_endDate)){return getTimeDifferenceInWholeDays(jsStartDate,jsEndDate);}
const endDateWithinOneYear=new DateTime(jsStartDate.getFullYear(),jsEndDate.getMonth(),jsEndDate.getDate());let days=getTimeDifferenceInWholeDays(jsStartDate,endDateWithinOneYear);if(days<0){endDateWithinOneYear.setFullYear(jsStartDate.getFullYear()+1);days=getTimeDifferenceInWholeDays(jsStartDate,endDateWithinOneYear);}
return days;}}},isExported:true,};const DATEVALUE={description:_t("Converts a date string to a date value."),args:[arg("date_string (string)",_t("The string representing the date."))],compute:function(dateString){const _dateString=toString(dateString);const internalDate=parseDateTime(_dateString,this.locale);if(internalDate===null){return new EvaluationError(_t("The date_string (%s) cannot be parsed to date/time.",_dateString.toString()));}
return Math.trunc(internalDate.value);},isExported:true,};const DAY={description:_t("Day of the month that a specific date falls on."),args:[arg("date (string)",_t("The date from which to extract the day."))],compute:function(date){return toJsDate(date,this.locale).getDate();},isExported:true,};const DAYS={description:_t("Number of days between two dates."),args:[arg("end_date (date)",_t("The end of the date range.")),arg("start_date (date)",_t("The start of the date range.")),],compute:function(endDate,startDate){const _endDate=toJsDate(endDate,this.locale);const _startDate=toJsDate(startDate,this.locale);const dateDif=_endDate.getTime()-_startDate.getTime();return Math.round(dateDif/MS_PER_DAY);},isExported:true,};const DEFAULT_DAY_COUNT_METHOD=0;const DAYS360={description:_t("Number of days between two dates on a 360-day year (months of 30 days)."),args:[arg("start_date (date)",_t("The start date to consider in the calculation.")),arg("end_date (date)",_t("The end date to consider in the calculation.")),arg(`method (number, default=${DEFAULT_DAY_COUNT_METHOD})`,_t("An indicator of what day count method to use. (0) US NASD method (1) European method")),],compute:function(startDate,endDate,method={value:DEFAULT_DAY_COUNT_METHOD}){const _startDate=Math.trunc(toNumber(startDate,this.locale));const _endDate=Math.trunc(toNumber(endDate,this.locale));const dayCountConvention=toBoolean(method)?4:0;const yearFrac=getYearFrac(_startDate,_endDate,dayCountConvention);return Math.sign(_endDate-_startDate)*Math.round(yearFrac*360);},isExported:true,};const EDATE={description:_t("Date a number of months before/after another date."),args:[arg("start_date (date)",_t("The date from which to calculate the result.")),arg("months (number)",_t("The number of months before (negative) or after (positive) 'start_date' to calculate.")),],compute:function(startDate,months){const _startDate=toJsDate(startDate,this.locale);const _months=Math.trunc(toNumber(months,this.locale));const jsDate=addMonthsToDate(_startDate,_months,false);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},isExported:true,};const EOMONTH={description:_t("Last day of a month before or after a date."),args:[arg("start_date (date)",_t("The date from which to calculate the result.")),arg("months (number)",_t("The number of months before (negative) or after (positive) 'start_date' to consider.")),],compute:function(startDate,months){const _startDate=toJsDate(startDate,this.locale);const _months=Math.trunc(toNumber(months,this.locale));const yStart=_startDate.getFullYear();const mStart=_startDate.getMonth();const jsDate=new DateTime(yStart,mStart+_months+1,0);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},isExported:true,};const HOUR={description:_t("Hour component of a specific time."),args:[arg("time (date)",_t("The time from which to calculate the hour component."))],compute:function(date){return toJsDate(date,this.locale).getHours();},isExported:true,};const ISOWEEKNUM={description:_t("ISO week number of the year."),args:[arg("date (date)",_t("The date for which to determine the ISO week number. Must be a reference to a cell containing a date, a function returning a date type, or a number.")),],compute:function(date){const _date=toJsDate(date,this.locale);const y=_date.getFullYear();let firstThursday=1;while(new DateTime(y,0,firstThursday).getDay()!==4){firstThursday+=1;}
const firstDayOfFirstWeek=new DateTime(y,0,firstThursday-3);let lastThursday=31;while(new DateTime(y,11,lastThursday).getDay()!==4){lastThursday-=1;}
const lastDayOfLastWeek=new DateTime(y,11,lastThursday+3);let offsetYear;if(firstDayOfFirstWeek.getTime()<=_date.getTime()){if(_date.getTime()<=lastDayOfLastWeek.getTime()){offsetYear=0;}
else{offsetYear=1;}}
else{offsetYear=-1;}
let firstDay;switch(offsetYear){case 0:firstDay=firstDayOfFirstWeek;break;case 1:firstDay=new DateTime(y,11,lastThursday+3+1);break;case-1:let firstThursdayPreviousYear=1;while(new DateTime(y-1,0,firstThursdayPreviousYear).getDay()!==4){firstThursdayPreviousYear+=1;}
firstDay=new DateTime(y-1,0,firstThursdayPreviousYear-3);break;}
const diff=(_date.getTime()-firstDay.getTime())/MS_PER_DAY;return Math.floor(diff/7)+1;},isExported:true,};const MINUTE={description:_t("Minute component of a specific time."),args:[arg("time (date)",_t("The time from which to calculate the minute component."))],compute:function(date){return toJsDate(date,this.locale).getMinutes();},isExported:true,};const MONTH={description:_t("Month of the year a specific date falls in"),args:[arg("date (date)",_t("The date from which to extract the month."))],compute:function(date){return toJsDate(date,this.locale).getMonth()+1;},isExported:true,};const NETWORKDAYS={description:_t("Net working days between two provided days."),args:[arg("start_date (date)",_t("The start date of the period from which to calculate the number of net working days.")),arg("end_date (date)",_t("The end date of the period from which to calculate the number of net working days.")),arg("holidays (date, range<date>, optional)",_t("A range or array constant containing the date serial numbers to consider holidays.")),],compute:function(startDate,endDate,holidays){return NETWORKDAYS_INTL.compute.bind(this)(startDate,endDate,{value:1},holidays);},isExported:true,};function weekendToDayNumber(data){const weekend=data?.value;if(typeof weekend==="string"){assert(weekend.length===7&&[...weekend].every((c)=>c==="0"||c==="1"),_t('When weekend is a string (%s) it must be composed of "0" or "1".',weekend));const result=[];for(let i=0;i<7;i++){if(weekend[i]==="1"){result.push((i+1)%7);}}
return result;}
if(typeof weekend==="number"){assert((1<=weekend&&weekend<=7)||(11<=weekend&&weekend<=17),_t("The weekend (%s) must be a string or a number in the range 1-7 or 11-17.",weekend.toString()));if(weekend<=7){return[weekend-2===-1?6:weekend-2,weekend-1];}
return[weekend-11];}
throw new EvaluationError(_t("The weekend must be a number or a string."));}
const NETWORKDAYS_INTL={description:_t("Net working days between two dates (specifying weekends)."),args:[arg("start_date (date)",_t("The start date of the period from which to calculate the number of net working days.")),arg("end_date (date)",_t("The end date of the period from which to calculate the number of net working days.")),arg(`weekend (any, default=${DEFAULT_WEEKEND})`,_t("A number or string representing which days of the week are considered weekends.")),arg("holidays (date, range<date>, optional)",_t("A range or array constant containing the dates to consider as holidays.")),],compute:function(startDate,endDate,weekend={value:DEFAULT_WEEKEND},holidays){const _startDate=toJsDate(startDate,this.locale);const _endDate=toJsDate(endDate,this.locale);const daysWeekend=weekendToDayNumber(weekend);const timesHoliday=new Set();if(holidays!==undefined){visitAny([holidays],(h)=>{const holiday=toJsDate(h,this.locale);timesHoliday.add(holiday.getTime());});}
const invertDate=_startDate.getTime()>_endDate.getTime();const stopDate=DateTime.fromTimestamp((invertDate?_startDate:_endDate).getTime());const stepDate=DateTime.fromTimestamp((invertDate?_endDate:_startDate).getTime());const timeStopDate=stopDate.getTime();let timeStepDate=stepDate.getTime();let netWorkingDay=0;while(timeStepDate<=timeStopDate){if(!daysWeekend.includes(stepDate.getDay())&&!timesHoliday.has(timeStepDate)){netWorkingDay+=1;}
stepDate.setDate(stepDate.getDate()+1);timeStepDate=stepDate.getTime();}
return invertDate?-netWorkingDay:netWorkingDay;},isExported:true,};const NOW={description:_t("Current date and time as a date value."),args:[],compute:function(){const today=DateTime.now();const delta=today.getTime()-INITIAL_1900_DAY.getTime();const time=today.getHours()/24+today.getMinutes()/1440+today.getSeconds()/86400;return{value:Math.floor(delta/MS_PER_DAY)+time,format:getDateTimeFormat(this.locale),};},isExported:true,};const SECOND={description:_t("Minute component of a specific time."),args:[arg("time (date)",_t("The time from which to calculate the second component."))],compute:function(date){return toJsDate(date,this.locale).getSeconds();},isExported:true,};const TIME={description:_t("Converts hour/minute/second into a time."),args:[arg("hour (number)",_t("The hour component of the time.")),arg("minute (number)",_t("The minute component of the time.")),arg("second (number)",_t("The second component of the time.")),],compute:function(hour,minute,second){let _hour=Math.trunc(toNumber(hour,this.locale));let _minute=Math.trunc(toNumber(minute,this.locale));let _second=Math.trunc(toNumber(second,this.locale));_minute+=Math.floor(_second/60);_second=(_second%60)+(_second<0?60:0);_hour+=Math.floor(_minute/60);_minute=(_minute%60)+(_minute<0?60:0);_hour%=24;if(_hour<0){return new EvaluationError(_t("The function [[FUNCTION_NAME]] result cannot be negative"));}
return{value:_hour/24+_minute/(24*60)+_second/(24*60*60),format:this.locale.timeFormat,};},isExported:true,};const TIMEVALUE={description:_t("Converts a time string into its serial number representation."),args:[arg("time_string (string)",_t("The string that holds the time representation."))],compute:function(timeString){const _timeString=toString(timeString);const internalDate=parseDateTime(_timeString,this.locale);if(internalDate===null){return new EvaluationError(_t("The time_string (%s) cannot be parsed to date/time.",_timeString));}
const result=internalDate.value-Math.trunc(internalDate.value);return result<0?1+result:result;},isExported:true,};const TODAY={description:_t("Current date as a date value."),args:[],compute:function(){const today=DateTime.now();const jsDate=new DateTime(today.getFullYear(),today.getMonth(),today.getDate());return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},isExported:true,};const WEEKDAY={description:_t("Day of the week of the date provided (as number)."),args:[arg("date (date)",_t("The date for which to determine the day of the week. Must be a reference to a cell containing a date, a function returning a date type, or a number.")),arg(`type (number, default=${DEFAULT_TYPE})`,_t("A number indicating which numbering system to use to represent weekdays. By default, counts starting with Sunday = 1.")),],compute:function(date,type={value:DEFAULT_TYPE}){const _date=toJsDate(date,this.locale);const _type=Math.round(toNumber(type,this.locale));const m=_date.getDay();if(![1,2,3].includes(_type)){return new EvaluationError(_t("The type (%s) must be 1, 2 or 3.",_type));}
if(_type===1)
return m+1;if(_type===2)
return m===0?7:m;return m===0?6:m-1;},isExported:true,};const WEEKNUM={description:_t("Week number of the year."),args:[arg("date (date)",_t("The date for which to determine the week number. Must be a reference to a cell containing a date, a function returning a date type, or a number.")),arg(`type (number, default=${DEFAULT_TYPE})`,_t("A number representing the day that a week starts on. Sunday = 1.")),],compute:function(date,type={value:DEFAULT_TYPE}){const _date=toJsDate(date,this.locale);const _type=Math.round(toNumber(type,this.locale));if(![1,2,11,12,13,14,15,16,17,21].includes(_type)){return new EvaluationError(_t("The type (%s) is out of range.",_type.toString()));}
if(_type===21){return ISOWEEKNUM.compute.bind(this)(date);}
let startDayOfWeek;if(_type===1||_type===2){startDayOfWeek=_type-1;}
else{startDayOfWeek=_type-10===7?0:_type-10;}
const y=_date.getFullYear();let dayStart=1;let startDayOfFirstWeek=new DateTime(y,0,dayStart);while(startDayOfFirstWeek.getDay()!==startDayOfWeek){dayStart+=1;startDayOfFirstWeek=new DateTime(y,0,dayStart);}
const dif=(_date.getTime()-startDayOfFirstWeek.getTime())/MS_PER_DAY;if(dif<0){return 1;}
return Math.floor(dif/7)+(dayStart===1?1:2);},isExported:true,};const WORKDAY={description:_t("Date after a number of workdays."),args:[arg("start_date (date)",_t("The date from which to begin counting.")),arg("num_days (number)",_t("The number of working days to advance from start_date. If negative, counts backwards.")),arg("holidays (date, range<date>, optional)",_t("A range or array constant containing the dates to consider holidays.")),],compute:function(startDate,numDays,holidays={value:null}){return WORKDAY_INTL.compute.bind(this)(startDate,numDays,{value:1},holidays);},isExported:true,};const WORKDAY_INTL={description:_t("Date after a number of workdays (specifying weekends)."),args:[arg("start_date (date)",_t("The date from which to begin counting.")),arg("num_days (number)",_t("The number of working days to advance from start_date. If negative, counts backwards.")),arg(`weekend (any, default=${DEFAULT_WEEKEND})`,_t("A number or string representing which days of the week are considered weekends.")),arg("holidays (date, range<date>, optional)",_t("A range or array constant containing the dates to consider holidays.")),],compute:function(startDate,numDays,weekend={value:DEFAULT_WEEKEND},holidays){const _startDate=toJsDate(startDate,this.locale);const _numDays=Math.trunc(toNumber(numDays,this.locale));if(weekend.value==="1111111"){return new EvaluationError(_t("The weekend must be different from '1111111'."));}
const daysWeekend=weekendToDayNumber(weekend);const timesHoliday=new Set();if(holidays!==undefined){visitAny([holidays],(h)=>{const holiday=toJsDate(h,this.locale);timesHoliday.add(holiday.getTime());});}
const stepDate=DateTime.fromTimestamp(_startDate.getTime());let timeStepDate=stepDate.getTime();const unitDay=Math.sign(_numDays);let stepDay=Math.abs(_numDays);while(stepDay>0){stepDate.setDate(stepDate.getDate()+unitDay);timeStepDate=stepDate.getTime();if(!daysWeekend.includes(stepDate.getDay())&&!timesHoliday.has(timeStepDate)){stepDay-=1;}}
const delta=timeStepDate-INITIAL_1900_DAY.getTime();return{value:Math.round(delta/MS_PER_DAY),format:this.locale.dateFormat,};},isExported:true,};const YEAR={description:_t("Year specified by a given date."),args:[arg("date (date)",_t("The date from which to extract the year."))],compute:function(date){return toJsDate(date,this.locale).getFullYear();},isExported:true,};const DEFAULT_DAY_COUNT_CONVENTION$1=0;const YEARFRAC={description:_t("Exact number of years between two dates."),args:[arg("start_date (date)",_t("The start date to consider in the calculation. Must be a reference to a cell containing a date, a function returning a date type, or a number.")),arg("end_date (date)",_t("The end date to consider in the calculation. Must be a reference to a cell containing a date, a function returning a date type, or a number.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION$1})`,_t("An indicator of what day count method to use.")),],compute:function(startDate,endDate,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION$1}){const _startDate=Math.trunc(toNumber(startDate,this.locale));const _endDate=Math.trunc(toNumber(endDate,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(_startDate<0){return new EvaluationError(_t("The start_date (%s) must be positive or null.",_startDate));}
if(_endDate<0){return new EvaluationError(_t("The end_date (%s) must be positive or null.",_endDate));}
if(0>_dayCountConvention||_dayCountConvention>4){return new EvaluationError(_t("The day_count_convention (%s) must be between 0 and 4 inclusive.",_dayCountConvention));}
return getYearFrac(_startDate,_endDate,_dayCountConvention);},};const MONTH_START={description:_t("First day of the month preceding a date."),args:[arg("date (date)",_t("The date from which to calculate the result."))],compute:function(date){const _startDate=toJsDate(date,this.locale);const yStart=_startDate.getFullYear();const mStart=_startDate.getMonth();const jsDate=new DateTime(yStart,mStart,1);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},};const MONTH_END={description:_t("Last day of the month following a date."),args:[arg("date (date)",_t("The date from which to calculate the result."))],compute:function(date){return EOMONTH.compute.bind(this)(date,{value:0});},};const QUARTER={description:_t("Quarter of the year a specific date falls in"),args:[arg("date (date)",_t("The date from which to extract the quarter."))],compute:function(date){return Math.ceil((toJsDate(date,this.locale).getMonth()+1)/3);},};const QUARTER_START={description:_t("First day of the quarter of the year a specific date falls in."),args:[arg("date (date)",_t("The date from which to calculate the start of quarter."))],compute:function(date){const quarter=QUARTER.compute.bind(this)(date);const year=YEAR.compute.bind(this)(date);const jsDate=new DateTime(year,(quarter-1)*3,1);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},};const QUARTER_END={description:_t("Last day of the quarter of the year a specific date falls in."),args:[arg("date (date)",_t("The date from which to calculate the end of quarter."))],compute:function(date){const quarter=QUARTER.compute.bind(this)(date);const year=YEAR.compute.bind(this)(date);const jsDate=new DateTime(year,quarter*3,0);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},};const YEAR_START={description:_t("First day of the year a specific date falls in."),args:[arg("date (date)",_t("The date from which to calculate the start of the year."))],compute:function(date){const year=YEAR.compute.bind(this)(date);const jsDate=new DateTime(year,0,1);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},};const YEAR_END={description:_t("Last day of the year a specific date falls in."),args:[arg("date (date)",_t("The date from which to calculate the end of the year."))],compute:function(date){const year=YEAR.compute.bind(this)(date);const jsDate=new DateTime(year+1,0,0);return{value:jsDateToRoundNumber(jsDate),format:this.locale.dateFormat,};},};var date=Object.freeze({__proto__:null,DATE:DATE,DATEDIF:DATEDIF,DATEVALUE:DATEVALUE,DAY:DAY,DAYS:DAYS,DAYS360:DAYS360,EDATE:EDATE,EOMONTH:EOMONTH,HOUR:HOUR,ISOWEEKNUM:ISOWEEKNUM,MINUTE:MINUTE,MONTH:MONTH,MONTH_END:MONTH_END,MONTH_START:MONTH_START,NETWORKDAYS:NETWORKDAYS,NETWORKDAYS_INTL:NETWORKDAYS_INTL,NOW:NOW,QUARTER:QUARTER,QUARTER_END:QUARTER_END,QUARTER_START:QUARTER_START,SECOND:SECOND,TIME:TIME,TIMEVALUE:TIMEVALUE,TODAY:TODAY,WEEKDAY:WEEKDAY,WEEKNUM:WEEKNUM,WORKDAY:WORKDAY,WORKDAY_INTL:WORKDAY_INTL,YEAR:YEAR,YEARFRAC:YEARFRAC,YEAR_END:YEAR_END,YEAR_START:YEAR_START});const DEFAULT_DELTA_ARG=0;const DELTA={description:_t("Compare two numeric values, returning 1 if they're equal."),args:[arg("number1 (number)",_t("The first number to compare.")),arg(`number2 (number, default=${DEFAULT_DELTA_ARG})`,_t("The second number to compare.")),],compute:function(number1,number2={value:DEFAULT_DELTA_ARG}){const _number1=toNumber(number1,this.locale);const _number2=toNumber(number2,this.locale);return _number1===_number2?1:0;},isExported:true,};var engineering=Object.freeze({__proto__:null,DELTA:DELTA});const SORT_TYPES=[CellValueType.number,CellValueType.error,CellValueType.text,CellValueType.boolean,];function cellsSortingCriterion(sortingOrder){const inverse=sortingOrder==="asc"?1:-1;return(left,right)=>{if(left.type===CellValueType.empty){return right.type===CellValueType.empty?0:1;}
else if(right.type===CellValueType.empty){return-1;}
let typeOrder=SORT_TYPES.indexOf(left.type)-SORT_TYPES.indexOf(right.type);if(typeOrder===0){if(left.type===CellValueType.text||left.type===CellValueType.error){typeOrder=left.value.localeCompare(right.value);}
else{typeOrder=left.value-right.value;}}
return inverse*typeOrder;};}
function sortCells(cells,sortDirection,emptyCellAsZero){const cellsWithIndex=cells.map((cell,index)=>({index,type:cell.type,value:cell.value,}));const cellsToSort=emptyCellAsZero?cellsWithIndex.map((cell)=>cell.type===CellValueType.empty?{...cell,type:CellValueType.number,value:0}:cell):cellsWithIndex;return cellsToSort.sort(cellsSortingCriterion(sortDirection));}
function interactiveSortSelection(env,sheetId,anchor,zone,sortDirection){let multiColumns=zone.right>zone.left;if(env.model.getters.doesIntersectMerge(sheetId,zone)){multiColumns=false;let table;for(let row=zone.top;row<=zone.bottom;row++){table=[];for(let col=zone.left;col<=zone.right;col++){const merge=env.model.getters.getMerge({sheetId,col,row});if(merge&&!table.includes(merge.id.toString())){table.push(merge.id.toString());}}
if(table.length>=2){multiColumns=true;break;}}}
if(multiColumns){interactiveSort(env,sheetId,anchor,zone,sortDirection);return;}
const contiguousZone=env.model.getters.getContiguousZone(sheetId,zone);if(isEqual(contiguousZone,zone)){interactiveSort(env,sheetId,anchor,zone,sortDirection);}
else{env.askConfirmation(_t("We found data next to your selection. Since this data was not selected, it will not be sorted. Do you want to extend your selection?"),()=>interactiveSort(env,sheetId,anchor,contiguousZone,sortDirection),()=>interactiveSort(env,sheetId,anchor,zone,sortDirection));}}
function interactiveSort(env,sheetId,anchor,zone,sortDirection,sortOptions){const result=env.model.dispatch("SORT_CELLS",{sheetId,col:anchor.col,row:anchor.row,zone,sortDirection,sortOptions,});if(result.isCancelledBecause("InvalidSortZone")){const{col,row}=anchor;env.model.selection.selectZone({cell:{col,row},zone});env.raiseError(_t("Cannot sort. To sort, select only cells or only merges that have the same size."));}
if(result.isCancelledBecause("SortZoneWithArrayFormulas")){const{col,row}=anchor;env.model.selection.selectZone({cell:{col,row},zone});env.raiseError(_t("Cannot sort a zone with array formulas."));}}
function sortMatrix(matrix,locale,...criteria){for(const[i,value]of criteria.entries()){assert(value!==undefined,_t("Value for parameter %d is missing, while the function [[FUNCTION_NAME]] expect a number or a range.",i+1));}
const sortingOrders=[];const sortColumns=[];const nRows=matrix.length;for(let i=0;i<criteria.length;i+=2){sortingOrders.push(toBoolean(toScalar(criteria[i+1])?.value)?"asc":"desc");const sortColumn=criteria[i];if(isMatrix(sortColumn)&&(sortColumn.length>1||sortColumn[0].length>1)){assert(sortColumn.length===1&&sortColumn[0].length===nRows,_t("Wrong size for %s. Expected a range of size 1x%s. Got %sx%s.",`sort_column${i + 1}`,nRows,sortColumn.length,sortColumn[0].length));sortColumns.push(sortColumn.flat().map((c)=>c.value));}
else{const colIndex=toNumber(toScalar(sortColumn)?.value,locale);if(colIndex<1||colIndex>matrix[0].length){return matrix;}
sortColumns.push(matrix.map((row)=>row[colIndex-1].value));}}
if(sortColumns.length===0){for(let i=0;i<matrix[0].length;i++){sortColumns.push(matrix.map((row)=>row[i].value));sortingOrders.push("asc");}}
const sortingCriteria={desc:cellsSortingCriterion("desc"),asc:cellsSortingCriterion("asc"),};const indexes=range(0,matrix.length);indexes.sort((a,b)=>{for(const[i,sortColumn]of sortColumns.entries()){const left=sortColumn[a];const right=sortColumn[b];const leftCell={value:left,type:left===null?CellValueType.empty:typeof left==="string"?CellValueType.text:typeof left,};const rightCell={value:right,type:right===null?CellValueType.empty:typeof right==="string"?CellValueType.text:typeof right,};const result=sortingCriteria[sortingOrders[i]](leftCell,rightCell);if(result!==0){return result;}}
return 0;});return indexes.map((i)=>matrix[i]);}
const FILTER={description:_t("Returns a filtered version of the source range, returning only rows or columns that meet the specified conditions."),args:[arg("range (any, range<any>)",_t("The data to be filtered.")),arg("condition1 (boolean, range<boolean>)",_t("A column or row containing true or false values corresponding to the first column or row of range.")),arg("condition2 (boolean, range<boolean>, repeating)",_t("Additional column or row containing true or false values.")),],compute:function(range,...conditions){let _array=toMatrix(range);const _conditionsMatrices=conditions.map((cond)=>matrixMap(toMatrix(cond),(data)=>data.value));for(const c of _conditionsMatrices){if(!isSingleColOrRow(c)){return new EvaluationError(_t("The arguments condition must be a single column or row."));}}
if(!areSameDimensions(...conditions)){return new EvaluationError(_t("The arguments conditions must have the same dimensions."));}
const _conditions=_conditionsMatrices.map((c)=>c.flat());const mode=_conditionsMatrices[0].length===1?"row":"col";_array=mode==="row"?transposeMatrix(_array):_array;if(_conditions.some((cond)=>cond.length!==_array.length)){return new EvaluationError(_t("FILTER has mismatched sizes on the range and conditions."));}
const result=[];for(let i=0;i<_array.length;i++){const row=_array[i];if(_conditions.every((c)=>(typeof c[i]==="boolean"||typeof c[i]==="number")&&c[i])){result.push(row);}}
if(!result.length){return new NotAvailableError(_t("No match found in FILTER evaluation"));}
return mode==="row"?transposeMatrix(result):result;},isExported:false,};const SORT={description:_t("Sorts the rows of a given array or range by the values in one or more columns."),args:[arg("range (range)",_t("The data to be sorted.")),arg("sort_column (any, range<number>, repeating)",_t("The index of the column in range or a range outside of range containing the values by which to sort.")),arg("is_ascending (boolean, repeating)",_t("TRUE or FALSE indicating whether to sort sort_column in ascending order. FALSE sorts in descending order.")),],compute:function(range,...sortingCriteria){const _range=transposeMatrix(range);return transposeMatrix(sortMatrix(_range,this.locale,...sortingCriteria));},isExported:true,};const SORTN={description:_t("Returns the first n items in a data set after performing a sort."),args:[arg("range (range)",_t("The data to be sorted.")),arg("n (number)",_t("The number of items to return.")),arg("display_ties_mode (number, default=0)",_t("A number representing the way to display ties.")),arg("sort_column (number, range<number>, repeating)",_t("The index of the column in range or a range outside of range containing the values by which to sort.")),arg("is_ascending (boolean, repeating)",_t("TRUE or FALSE indicating whether to sort sort_column in ascending order. FALSE sorts in descending order.")),],compute:function(range,n,...displayTiesMode_sortingCriteria){const _n=toNumber(n?.value??1,this.locale);const _displayTiesMode=displayTiesMode_sortingCriteria.length%2===0?0:toNumber(displayTiesMode_sortingCriteria[0]?.value,this.locale);const sortingCriteria=displayTiesMode_sortingCriteria.length%2===0?displayTiesMode_sortingCriteria:displayTiesMode_sortingCriteria.slice(1);if(_n<0){return new EvaluationError(_t("Wrong value of 'n'. Expected a positive number. Got %s.",_n));}
if(_displayTiesMode<0||_displayTiesMode>3){return new EvaluationError(_t("Wrong value of 'display_ties_mode'. Expected a positive number between 0 and 3. Got %s.",_displayTiesMode));}
const sortedData=sortMatrix(transposeMatrix(range),this.locale,...sortingCriteria);const sameRows=(i,j)=>JSON.stringify(sortedData[i].map((c)=>c.value))===JSON.stringify(sortedData[j].map((c)=>c.value));switch(_displayTiesMode){case 0:return transposeMatrix(sortedData.slice(0,_n));case 1:for(let i=_n;i<sortedData.length;i++){if(!sameRows(i,_n-1)){return transposeMatrix(sortedData.slice(0,i));}}
return transposeMatrix(sortedData);case 2:{const uniques=[sortedData[0]];for(let i=1;i<sortedData.length;i++){for(let j=0;j<i;j++){if(sameRows(i,j)){break;}
if(j===i-1){uniques.push(sortedData[i]);}}}
return transposeMatrix(uniques.slice(0,_n));}
case 3:{const uniques=[sortedData[0]];let counter=1;for(let i=1;i<sortedData.length;i++){if(!sameRows(i,i-1)){counter++;}
if(counter>_n){break;}
uniques.push(sortedData[i]);}
return transposeMatrix(uniques);}}},isExported:false,};const UNIQUE={description:_t("Unique rows in the provided source range."),args:[arg("range (any, range<any>)",_t("The data to filter by unique entries.")),arg("by_column (boolean, default=FALSE)",_t("Whether to filter the data by columns or by rows.")),arg("exactly_once (boolean, default=FALSE)",_t("Whether to return only entries with no duplicates.")),],compute:function(range={value:""},byColumn,exactlyOnce){if(!isMatrix(range)){return[[range]];}
const _byColumn=toBoolean(byColumn?.value)||false;const _exactlyOnce=toBoolean(exactlyOnce?.value)||false;if(!_byColumn){range=transposeMatrix(range);}
const map=new Map();for(const data of range){const key=JSON.stringify(data.map((item)=>item.value));const occurrence=map.get(key);if(!occurrence){map.set(key,{data,count:1});}
else{occurrence.count++;}}
const result=[];for(const row of map.values()){if(_exactlyOnce&&row.count>1){continue;}
result.push(row.data);}
if(!result.length)
return new EvaluationError(_t("No unique values found"));return _byColumn?result:transposeMatrix(result);},isExported:true,};var filter=Object.freeze({__proto__:null,FILTER:FILTER,SORT:SORT,SORTN:SORTN,UNIQUE:UNIQUE});const expectCashFlowsAndDatesHaveSameDimension=_t("The cashflow_amounts and cashflow_dates ranges must have the same dimensions.");const expectCashFlowsHavePositiveAndNegativesValues=_t("There must be both positive and negative values in cashflow_amounts.");const expectCostPositiveOrZero=(cost)=>_t("The cost (%s) must be positive or null.",cost);const expectCostStrictlyPositive=(cost)=>_t("The cost (%s) must be strictly positive.",cost);const expectCouponFrequencyIsValid=(frequency)=>_t("The frequency (%s) must be one of %s",frequency,[1,2,4].toString());const expectDayCountConventionIsValid=(dayCountConvention)=>_t("The day_count_convention (%s) must be between 0 and 4 inclusive.",dayCountConvention);const expectDeprecationFactorStrictlyPositive=(factor)=>_t("The depreciation factor (%s) must be strictly positive.",factor);const expectDiscountDifferentFromMinusOne=(discount)=>_t("The discount (%s) must be different from -1.",discount);const expectDiscountStrictlyPositive=(discount)=>_t("The discount (%s) must be strictly positive.",discount);const expectDiscountStrictlySmallerThanOne=(discount)=>_t("The discount (%s) must be smaller than 1.",discount);const expectEffectiveRateStrictlyPositive=(effectiveRate)=>_t("The effective_rate (%s) must be strictly positive.",effectiveRate);const expectEndPeriodPositiveOrZero=(endPeriod)=>_t("The end_period (%s) must be positive or null.",endPeriod);const expectEndPeriodSmallerOrEqualToLife=(end,life)=>_t("The end_period (%(end)s) must be smaller or equal to the life (%(life)s).",{end,life});const expectEveryDateGreaterThanFirstDateOfCashFlowDates=(firstDate)=>_t("All the dates should be greater or equal to the first date in cashflow_dates (%s).",firstDate);const expectFirstPeriodSmallerOrEqualLastPeriod=(first,last)=>_t("The first_period (%(first)s) must be smaller or equal to the last_period (%(last)s).",{first,last,});const expectFirstPeriodStrictlyPositive=(period)=>_t("The first_period (%s) must be strictly positive.",period);const expectFutureValueStrictlyPositive=(pv)=>_t("The future_value (%s) must be strictly positive.",pv);const expectInvestmentStrictlyPositive=(investment)=>_t("The investment (%s) must be strictly positive.",investment);const expectIssuePositiveOrZero=(issue)=>_t("The issue (%s) must be positive or null.",issue);const expectLastPeriodSmallerOrEqualNumberOfPeriods=(last,nPeriods)=>_t("The last_period (%(last)s) must be smaller or equal to the number_of_periods (%(nPeriods)s).",{last,nPeriods});const expectLastPeriodStrictlyPositive=(period)=>_t("The last_period (%s) must be strictly positive.",period);const expectLifeStrictlyPositive=(life)=>_t("The life (%s) must be strictly positive.",life);const expectMaturityStrictlyGreaterThanSettlement=(settlement,maturity)=>_t("The maturity (%(maturity)s) must be strictly greater than the settlement (%(settlement)s).",{maturity,settlement,});const expectMonthBetweenOneAndTwelve=(month)=>_t("The month (%s) must be between 1 and 12 inclusive.",month);const expectNominalRateStrictlyPositive=(nominalRate)=>_t("The nominal_rate (%s) must be strictly positive.",nominalRate);const expectNumberOfPeriodDifferentFromZero=(nPeriods)=>_t("The number_of_periods (%s) must be different from zero.",nPeriods);const expectNumberOfPeriodsStrictlyPositive=(nPeriods)=>_t("The number_of_periods (%s) must be strictly positive.",nPeriods);const expectPeriodBetweenOneAndNumberOfPeriods=(nPeriods)=>_t("The period must be between 1 and number_of_periods (%s)",nPeriods);const expectPeriodLessOrEqualToLifeLimit=(period,lifeLimit)=>_t("The period (%(period)s) must be less than or equal to %(lifeLimit)s.",{period,lifeLimit});const expectPeriodPositiveOrZero=(period)=>_t("The period (%s) must be positive or null.",period);const expectPeriodsByYearStrictlyPositive=(periodsByYear)=>_t("The periods_by_year (%s) must be strictly positive.",periodsByYear);const expectPeriodSmallerOrEqualToLife=(period,life)=>_t("The period (%(period)s) must be less than or equal life (%(life)s).",{period,life});const expectPeriodStrictlyPositive=(period)=>_t("The period (%s) must be strictly positive.",period);const expectPresentValueStrictlyPositive=(pv)=>_t("The present_value (%s) must be strictly positive.",pv);const expectPriceStrictlyPositive=(price)=>_t("The price (%s) must be strictly positive.",price);const expectPurchaseDateBeforeFirstPeriodEnd=(purchaseDate,firstPeriodEnd)=>_t("The purchase_date (%(purchaseDate)s) must be before the first_period_end (%(firstPeriodEnd)s).",{purchaseDate,firstPeriodEnd});const expectPurchaseDatePositiveOrZero=(purchaseDate)=>_t("The purchase_date (%s) must be positive or null.",purchaseDate);const expectRateGuessStrictlyGreaterThanMinusOne=(guess)=>_t("The rate_guess (%s) must be strictly greater than -1.",guess);const expectRatePositiveOrZero=(rate)=>_t("The rate (%s) must be positive or null.",rate);const expectRateStrictlyPositive=(rate)=>_t("The rate (%s) must be strictly positive.",rate);const expectRedemptionStrictlyPositive=(redemption)=>_t("The redemption (%s) must be strictly positive.",redemption);const expectSalvagePositiveOrZero=(salvage)=>_t("The salvage (%s) must be positive or null.",salvage);const expectSalvageSmallerOrEqualThanCost=(salvage,cost)=>_t("The salvage (%(salvage)s) must be smaller or equal than the cost (%(cost)s).",{salvage,cost,});const expectSettlementGreaterOrEqualToIssue=(settlement,issue)=>_t("The settlement date (%(settlement)s) must be greater or equal to the issue date (%(issue)s).",{settlement,issue});const expectSettlementLessThanOneYearBeforeMaturity=(settlement,maturity)=>_t("The settlement date (%(settlement)s) must at most one year after the maturity date (%(maturity)s).",{settlement,maturity});const expectSettlementStrictlyGreaterThanIssue=(settlement,issue)=>_t("The settlement date (%(settlement)s) must be strictly greater than the issue date (%(issue)s).",{settlement,issue});const expectStartPeriodPositiveOrZero=(startPeriod)=>_t("The start_period (%s) must be positive or null.",startPeriod);const expectStartPeriodSmallerOrEqualEndPeriod=(start,end)=>_t("The start_period (%(start)s) must be smaller or equal to the end_period (%(end)s).",{start,end,});const expectUnitStrictlyPositive=(unit)=>_t("The unit (%s) must be strictly positive.",unit);const expectYieldPositiveOrZero=(yeld)=>_t("The yield (%s) must be positive or null.",yeld);function havePositiveAndNegativeValues(arrayNumbers){return arrayNumbers.some((val)=>val>0)&&arrayNumbers.some((val)=>val<0);}
function isInvalidDayCountConvention(dayCountConvention){return![0,1,2,3,4].includes(dayCountConvention);}
function isInvalidFrequency(frequency){return![1,2,4].includes(frequency);}
function isSettlementLessThanOneYearBeforeMaturity(settlement,maturity,locale){const startDate=toJsDate(settlement,locale);const endDate=toJsDate(maturity,locale);const startDatePlusOneYear=toJsDate(settlement,locale);startDatePlusOneYear.setFullYear(startDate.getFullYear()+1);return endDate.getTime()<=startDatePlusOneYear.getTime();}
const DEFAULT_DAY_COUNT_CONVENTION=0;const DEFAULT_END_OR_BEGINNING=0;const DEFAULT_FUTURE_VALUE=0;const COUPON_FUNCTION_ARGS=[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("frequency (number)",_t("The number of interest or coupon payments per year (1, 2, or 4).")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),];function newtonMethod(func,derivFunc,startValue,maxIterations,epsMax=1e-10,nanFallback){let x=startValue;let newX;let xDelta;let y;let yEqual0=false;let count=0;let previousFallback=undefined;do{y=func(x);if(isNaN(y)){assert(count<maxIterations&&nanFallback!==undefined,_t("Function [[FUNCTION_NAME]] didn't find any result."));count++;x=nanFallback(previousFallback);previousFallback=x;continue;}
newX=x-y/derivFunc(x);xDelta=Math.abs(newX-x);x=newX;yEqual0=xDelta<epsMax||Math.abs(y)<epsMax;assert(count<maxIterations,_t("Function [[FUNCTION_NAME]] didn't find any result."));count++;}while(!yEqual0);return x;}
const ACCRINTM={description:_t("Accrued interest of security paying at maturity."),args:[arg("issue (date)",_t("The date the security was initially issued.")),arg("maturity (date)",_t("The maturity date of the security.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(issue,maturity,rate,redemption,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){const start=Math.trunc(toNumber(issue,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _redemption=toNumber(redemption,this.locale);const _rate=toNumber(rate,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(start<0){return new EvaluationError(expectIssuePositiveOrZero(start));}
if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_redemption<=0){return new EvaluationError(expectRedemptionStrictlyPositive(_redemption));}
if(_rate<=0){return new EvaluationError(expectRateStrictlyPositive(_rate));}
const yearFrac=getYearFrac(start,end,_dayCountConvention);return _redemption*_rate*yearFrac;},isExported:true,};const AMORLINC={description:_t("Depreciation for an accounting period."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("purchase_date (date)",_t("The date the asset was purchased.")),arg("first_period_end (date)",_t("The date the first period ended.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("period (number)",_t("The single period within life for which to calculate depreciation.")),arg("rate (number)",_t("The deprecation rate.")),arg("day_count_convention (number, optional)",_t("An indicator of what day count method to use.")),],compute:function(cost,purchaseDate,firstPeriodEnd,salvage,period,rate,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _cost=toNumber(cost,this.locale);const _purchaseDate=Math.trunc(toNumber(purchaseDate,this.locale));const _firstPeriodEnd=Math.trunc(toNumber(firstPeriodEnd,this.locale));const _salvage=toNumber(salvage,this.locale);const _period=toNumber(period,this.locale);const _rate=toNumber(rate,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(_cost<=0){return new EvaluationError(expectCostStrictlyPositive(_cost));}
if(_purchaseDate<0){return new EvaluationError(expectPurchaseDatePositiveOrZero(_purchaseDate));}
if(_salvage<0){return new EvaluationError(expectSalvagePositiveOrZero(_salvage));}
if(_salvage>_cost){return new EvaluationError(expectSalvageSmallerOrEqualThanCost(_salvage,_cost));}
if(_period<0){return new EvaluationError(expectPeriodPositiveOrZero(_period));}
if(_rate<=0){return new EvaluationError(expectRateStrictlyPositive(_rate));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_purchaseDate>_firstPeriodEnd){return new EvaluationError(expectPurchaseDateBeforeFirstPeriodEnd(_purchaseDate,_firstPeriodEnd));}
const roundedPeriod=_period<1&&_period>0?1:Math.trunc(_period);const deprec=_cost*_rate;const yearFrac=getYearFrac(_purchaseDate,_firstPeriodEnd,_dayCountConvention);const firstDeprec=_purchaseDate===_firstPeriodEnd?deprec:deprec*yearFrac;const valueAtPeriod=_cost-firstDeprec-deprec*roundedPeriod;if(valueAtPeriod>=_salvage){return roundedPeriod===0?firstDeprec:deprec;}
return _salvage-valueAtPeriod<deprec?deprec-(_salvage-valueAtPeriod):0;},isExported:true,};const COUPDAYS={description:_t("Days in coupon period containing settlement date."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(isInvalidFrequency(_frequency)){return new EvaluationError(expectCouponFrequencyIsValid(_frequency));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_dayCountConvention===1){const before=COUPPCD.compute.bind(this)(settlement,maturity,frequency,dayCountConvention).value;const after=COUPNCD.compute.bind(this)(settlement,maturity,frequency,dayCountConvention).value;return toNumber(after,this.locale)-toNumber(before,this.locale);}
const daysInYear=_dayCountConvention===3?365:360;return daysInYear/_frequency;},isExported:true,};const COUPDAYBS={description:_t("Days from settlement until next coupon."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(isInvalidFrequency(_frequency)){return new EvaluationError(expectCouponFrequencyIsValid(_frequency));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
const couponBeforeStart=COUPPCD.compute.bind(this)(settlement,maturity,frequency,dayCountConvention).value;const _couponBeforeStart=toNumber(couponBeforeStart,this.locale);if([1,2,3].includes(_dayCountConvention)){return start-_couponBeforeStart;}
if(_dayCountConvention===4){const yearFrac=getYearFrac(_couponBeforeStart,start,_dayCountConvention);return Math.round(yearFrac*360);}
const startDate=toJsDate(start,this.locale);const dateCouponBeforeStart=toJsDate(_couponBeforeStart,this.locale);const y1=dateCouponBeforeStart.getFullYear();const y2=startDate.getFullYear();const m1=dateCouponBeforeStart.getMonth()+1;const m2=startDate.getMonth()+1;let d1=dateCouponBeforeStart.getDate();let d2=startDate.getDate();if(m1===2&&m2===2&&isLastDayOfMonth(dateCouponBeforeStart)&&isLastDayOfMonth(startDate)){d2=30;}
if(d2===31&&(d1===30||d1===31)){d2=30;}
if(m1===2&&isLastDayOfMonth(dateCouponBeforeStart)){d1=30;}
if(d1===31){d1=30;}
return(y2-y1)*360+(m2-m1)*30+(d2-d1);},isExported:true,};const COUPDAYSNC={description:_t("Days from settlement until next coupon."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(isInvalidFrequency(_frequency)){return new EvaluationError(expectCouponFrequencyIsValid(_frequency));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
const couponAfterStart=COUPNCD.compute.bind(this)(settlement,maturity,frequency,dayCountConvention).value;const _couponAfterStart=toNumber(couponAfterStart,this.locale);if([1,2,3].includes(_dayCountConvention)){return _couponAfterStart-start;}
if(_dayCountConvention===4){const yearFrac=getYearFrac(start,_couponAfterStart,_dayCountConvention);return Math.round(yearFrac*360);}
const coupDayBs=COUPDAYBS.compute.bind(this)(settlement,maturity,frequency,dayCountConvention);const coupDays=COUPDAYS.compute.bind(this)(settlement,maturity,frequency,dayCountConvention);return toNumber(coupDays,this.locale)-toNumber(coupDayBs,this.locale);},isExported:true,};const COUPNCD={description:_t("Next coupon date after the settlement date."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(isInvalidFrequency(_frequency)){return new EvaluationError(expectCouponFrequencyIsValid(_frequency));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
const monthsPerPeriod=12/_frequency;const coupNum=COUPNUM.compute.bind(this)(settlement,maturity,frequency,dayCountConvention);const date=addMonthsToDate(toJsDate(end,this.locale),-(toNumber(coupNum,this.locale)-1)*monthsPerPeriod,true);return{value:jsDateToRoundNumber(date),format:this.locale.dateFormat,};},isExported:true,};const COUPNUM={description:_t("Number of coupons between settlement and maturity."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(isInvalidFrequency(_frequency)){return new EvaluationError(expectCouponFrequencyIsValid(_frequency));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
let num=1;let currentDate=end;const monthsPerPeriod=12/_frequency;while(currentDate>start){currentDate=jsDateToRoundNumber(addMonthsToDate(toJsDate(currentDate,this.locale),-monthsPerPeriod,false));num++;}
return num-1;},isExported:true,};const COUPPCD={description:_t("Last coupon date prior to or on the settlement date."),args:COUPON_FUNCTION_ARGS,compute:function(settlement,maturity,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(isInvalidFrequency(_frequency)){return new EvaluationError(expectCouponFrequencyIsValid(_frequency));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
const monthsPerPeriod=12/_frequency;const coupNum=COUPNUM.compute.bind(this)(settlement,maturity,frequency,dayCountConvention);const date=addMonthsToDate(toJsDate(end,this.locale),-coupNum*monthsPerPeriod,true);return{value:jsDateToRoundNumber(date),format:this.locale.dateFormat,};},isExported:true,};const CUMIPMT={description:_t("Cumulative interest paid over a set of periods."),args:[arg("rate (number)",_t("The interest rate.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg("first_period (number)",_t("The number of the payment period to begin the cumulative calculation.")),arg("last_period (number)",_t("The number of the payment period to end the cumulative calculation.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,numberOfPeriods,presentValue,firstPeriod,lastPeriod,endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){const first=toNumber(firstPeriod,this.locale);const last=toNumber(lastPeriod,this.locale);const r=toNumber(rate,this.locale);const pv=toNumber(presentValue,this.locale);const n=toNumber(numberOfPeriods,this.locale);const type=toBoolean(endOrBeginning)?1:0;if(n<=0){return new EvaluationError(expectNumberOfPeriodsStrictlyPositive(n));}
if(first<=0){return new EvaluationError(expectFirstPeriodStrictlyPositive(first));}
if(last<=0){return new EvaluationError(expectLastPeriodStrictlyPositive(last));}
if(first>last){return new EvaluationError(expectFirstPeriodSmallerOrEqualLastPeriod(first,last));}
if(last>n){return new EvaluationError(expectLastPeriodSmallerOrEqualNumberOfPeriods(last,n));}
if(r<=0){return new EvaluationError(expectRateStrictlyPositive(r));}
if(pv<=0){return new EvaluationError(expectPresentValueStrictlyPositive(pv));}
let cumSum=0;for(let i=first;i<=last;i++){cumSum+=impt(r,i,n,pv,0,type);}
return cumSum;},isExported:true,};const CUMPRINC={description:_t("Cumulative principal paid over a set of periods."),args:[arg("rate (number)",_t("The interest rate.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg("first_period (number)",_t("The number of the payment period to begin the cumulative calculation.")),arg("last_period (number)",_t("The number of the payment period to end the cumulative calculation.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,numberOfPeriods,presentValue,firstPeriod,lastPeriod,endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){const first=toNumber(firstPeriod,this.locale);const last=toNumber(lastPeriod,this.locale);const r=toNumber(rate,this.locale);const pv=toNumber(presentValue,this.locale);const n=toNumber(numberOfPeriods,this.locale);const type=toBoolean(endOrBeginning)?1:0;if(n<=0){return new EvaluationError(expectNumberOfPeriodsStrictlyPositive(n));}
if(first<=0){return new EvaluationError(expectFirstPeriodStrictlyPositive(first));}
if(last<=0){return new EvaluationError(expectLastPeriodStrictlyPositive(last));}
if(first>last){return new EvaluationError(expectFirstPeriodSmallerOrEqualLastPeriod(first,last));}
if(last>n){return new EvaluationError(expectLastPeriodSmallerOrEqualNumberOfPeriods(last,n));}
if(r<=0){return new EvaluationError(expectRateStrictlyPositive(r));}
if(pv<=0){return new EvaluationError(expectPresentValueStrictlyPositive(pv));}
let cumSum=0;for(let i=first;i<=last;i++){cumSum+=ppmt(r,i,n,pv,0,type);}
return cumSum;},isExported:true,};const DB={description:_t("Depreciation via declining balance method."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("life (number)",_t("The number of periods over which the asset is depreciated.")),arg("period (number)",_t("The single period within life for which to calculate depreciation.")),arg("month (number, optional)",_t("The number of months in the first year of depreciation.")),],compute:function(cost,salvage,life,period,...args){const _cost=toNumber(cost,this.locale);const _salvage=toNumber(salvage,this.locale);const _life=toNumber(life,this.locale);const _period=Math.trunc(toNumber(period,this.locale));const _month=args.length?Math.trunc(toNumber(args[0],this.locale)):12;const lifeLimit=_life+(_month===12?0:1);if(_cost<0){return new EvaluationError(expectCostPositiveOrZero(_cost));}
if(_salvage<0){return new EvaluationError(expectSalvagePositiveOrZero(_salvage));}
if(_period<=0){return new EvaluationError(expectPeriodStrictlyPositive(_period));}
if(_life<=0){return new EvaluationError(expectLifeStrictlyPositive(_life));}
if(1>_month||_month>12){return new EvaluationError(expectMonthBetweenOneAndTwelve(_month));}
if(_period>lifeLimit){return new EvaluationError(expectPeriodLessOrEqualToLifeLimit(_period,lifeLimit));}
const monthPart=_month/12;let rate=1-Math.pow(_salvage/_cost,1/_life);rate=Math.round(rate*1000)/1000;let before=_cost;let after=_cost*(1-rate*monthPart);for(let i=1;i<_period;i++){before=after;after=before*(1-rate);if(i===_life){after=before*(1-rate*(1-monthPart));}}
return{value:before-after,format:"#,##0.00",};},isExported:true,};const DEFAULT_DDB_DEPRECIATION_FACTOR=2;const DEFAULT_DDB_FORMAT="#,##0.00";const DDB={description:_t("Depreciation via double-declining balance method."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("life (number)",_t("The number of periods over which the asset is depreciated.")),arg("period (number)",_t("The single period within life for which to calculate depreciation.")),arg(`factor (number, default=${DEFAULT_DDB_DEPRECIATION_FACTOR})`,_t("The factor by which depreciation decreases.")),],compute:function(cost,salvage,life,period,factor={value:DEFAULT_DDB_DEPRECIATION_FACTOR}){const _cost=toNumber(cost,this.locale);const _salvage=toNumber(salvage,this.locale);const _life=toNumber(life,this.locale);const _period=toNumber(period,this.locale);const _factor=toNumber(factor,this.locale);if(_cost<0){return new EvaluationError(expectCostPositiveOrZero(_cost));}
if(_salvage<0){return new EvaluationError(expectSalvagePositiveOrZero(_salvage));}
if(_period<=0){return new EvaluationError(expectPeriodStrictlyPositive(_period));}
if(_life<=0){return new EvaluationError(expectLifeStrictlyPositive(_life));}
if(_period>_life){return new EvaluationError(expectPeriodSmallerOrEqualToLife(_period,_life));}
if(_factor<=0){return new EvaluationError(expectDeprecationFactorStrictlyPositive(_factor));}
if(_cost===0||_salvage>=_cost){return{value:0,format:DEFAULT_DDB_FORMAT};}
const deprecFactor=_factor/_life;if(deprecFactor>1){return{value:_period===1?_cost-_salvage:0,format:DEFAULT_DDB_FORMAT};}
if(_period<=1){return{value:_cost*deprecFactor,format:DEFAULT_DDB_FORMAT,};}
const previousCost=_cost*Math.pow(1-deprecFactor,_period-1);const nextCost=_cost*Math.pow(1-deprecFactor,_period);const deprec=nextCost<_salvage?previousCost-_salvage:previousCost-nextCost;return{value:Math.max(deprec,0),format:DEFAULT_DDB_FORMAT,};},isExported:true,};const DISC={description:_t("Discount rate of a security based on price."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("price (number)",_t("The price at which the security is bought per 100 face value.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,price,redemption,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _price=toNumber(price,this.locale);const _redemption=toNumber(redemption,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(_settlement>=_maturity){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(_settlement,_maturity));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_price<=0){return new EvaluationError(expectPriceStrictlyPositive(_price));}
if(_redemption<=0){return new EvaluationError(expectRedemptionStrictlyPositive(_redemption));}
const yearsFrac=getYearFrac(_settlement,_maturity,_dayCountConvention);return(_redemption-_price)/_redemption/yearsFrac;},isExported:true,};const DOLLARDE={description:_t("Convert a decimal fraction to decimal value."),args:[arg("fractional_price (number)",_t("The price quotation given using fractional decimal conventions.")),arg("unit (number)",_t("The units of the fraction, e.g. 8 for 1/8ths or 32 for 1/32nds.")),],compute:function(fractionalPrice,unit){const price=toNumber(fractionalPrice,this.locale);const _unit=Math.trunc(toNumber(unit,this.locale));if(_unit<=0){return new EvaluationError(expectUnitStrictlyPositive(_unit));}
const truncatedPrice=Math.trunc(price);const priceFractionalPart=price-truncatedPrice;const frac=10**Math.ceil(Math.log10(_unit))/_unit;return truncatedPrice+priceFractionalPart*frac;},isExported:true,};const DOLLARFR={description:_t("Convert a decimal value to decimal fraction."),args:[arg("decimal_price (number)",_t("The price quotation given as a decimal value.")),arg("unit (number)",_t("The units of the desired fraction, e.g. 8 for 1/8ths or 32 for 1/32nds.")),],compute:function(decimalPrice,unit){const price=toNumber(decimalPrice,this.locale);const _unit=Math.trunc(toNumber(unit,this.locale));if(_unit<=0){return new EvaluationError(expectUnitStrictlyPositive(_unit));}
const truncatedPrice=Math.trunc(price);const priceFractionalPart=price-truncatedPrice;const frac=_unit/10**Math.ceil(Math.log10(_unit));return truncatedPrice+priceFractionalPart*frac;},isExported:true,};const DURATION={description:_t("Number of periods for an investment to reach a value."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("yield (number)",_t("The expected annual yield of the security.")),arg("frequency (number)",_t("The number of interest or coupon payments per year (1, 2, or 4).")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,rate,securityYield,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const _rate=toNumber(rate,this.locale);const _yield=toNumber(securityYield,this.locale);const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(isInvalidFrequency(_frequency)){return new EvaluationError(expectCouponFrequencyIsValid(_frequency));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_rate<0){return new EvaluationError(expectRatePositiveOrZero(_rate));}
if(_yield<0){return new EvaluationError(expectYieldPositiveOrZero(_yield));}
const years=getYearFrac(start,end,_dayCountConvention);const timeFirstYear=years-Math.trunc(years)||1/_frequency;const nbrCoupons=Math.ceil(years*_frequency);const cashFlowFromCoupon=_rate/_frequency;const yieldPerPeriod=_yield/_frequency;let count=0;let sum=0;for(let i=1;i<=nbrCoupons;i++){const cashFlowPerPeriod=cashFlowFromCoupon+(i===nbrCoupons?1:0);const presentValuePerPeriod=cashFlowPerPeriod/(1+yieldPerPeriod)**i;sum+=(timeFirstYear+(i-1)/_frequency)*presentValuePerPeriod;count+=presentValuePerPeriod;}
return count===0?0:sum/count;},isExported:true,};const EFFECT={description:_t("Annual effective interest rate."),args:[arg("nominal_rate (number)",_t("The nominal interest rate per year.")),arg("periods_per_year (number)",_t("The number of compounding periods per year.")),],compute:function(nominal_rate,periods_per_year){const nominal=toNumber(nominal_rate,this.locale);const periods=Math.trunc(toNumber(periods_per_year,this.locale));if(nominal<=0){return new EvaluationError(expectNominalRateStrictlyPositive(nominal));}
if(periods<=0){return new EvaluationError(expectPeriodsByYearStrictlyPositive(periods));}
return Math.pow(1+nominal/periods,periods)-1;},isExported:true,};const DEFAULT_PRESENT_VALUE=0;function fv(r,n,p,pv,t){if(r===0){return-(pv+p*n);}
return-pv*(1+r)**n-(p*(1+r*t)*((1+r)**n-1))/r;}
const FV={description:_t("Future value of an annuity investment."),args:[arg("rate (number)",_t("The interest rate.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("payment_amount (number)",_t("The amount per period to be paid.")),arg(`present_value (number, default=${DEFAULT_PRESENT_VALUE})`,_t("The current value of the annuity.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,numberOfPeriods,paymentAmount,presentValue={value:DEFAULT_PRESENT_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){presentValue=presentValue||0;endOrBeginning=endOrBeginning||0;const r=toNumber(rate,this.locale);const n=toNumber(numberOfPeriods,this.locale);const p=toNumber(paymentAmount,this.locale);const pv=toNumber(presentValue,this.locale);const type=toBoolean(endOrBeginning)?1:0;return{value:fv(r,n,p,pv,type),format:"#,##0.00",};},isExported:true,};const FVSCHEDULE={description:_t("Future value of principal from series of rates."),args:[arg("principal (number)",_t("The amount of initial capital or value to compound against.")),arg("rate_schedule (number, range<number>)",_t("A series of interest rates to compound against the principal.")),],compute:function(principalAmount,rateSchedule){const principal=toNumber(principalAmount,this.locale);return reduceAny([rateSchedule],(acc,rate)=>acc*(1+toNumber(rate,this.locale)),principal);},isExported:true,};const INTRATE={description:_t("Calculates effective interest rate."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("investment (number)",_t("The amount invested in the security.")),arg("redemption (number)",_t("The amount to be received at maturity.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,investment,redemption,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _redemption=toNumber(redemption,this.locale);const _investment=toNumber(investment,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(_settlement>=_maturity){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(_settlement,_maturity));}
if(_investment<=0){return new EvaluationError(expectInvestmentStrictlyPositive(_investment));}
if(_redemption<=0){return new EvaluationError(expectRedemptionStrictlyPositive(_redemption));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
const yearFrac=getYearFrac(_settlement,_maturity,_dayCountConvention);return(_redemption-_investment)/_investment/yearFrac;},isExported:true,};function impt(r,per,n,pv,fv,type){return pmt(r,n,pv,fv,type)-ppmt(r,per,n,pv,fv,type);}
const IPMT={description:_t("Payment on the principal of an investment."),args:[arg("rate (number)",_t("The annualized rate of interest.")),arg("period (number)",_t("The amortization period, in terms of number of periods.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,currentPeriod,numberOfPeriods,presentValue,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){const r=toNumber(rate,this.locale);const period=toNumber(currentPeriod,this.locale);const n=toNumber(numberOfPeriods,this.locale);const pv=toNumber(presentValue,this.locale);const fv=toNumber(futureValue,this.locale);const type=toBoolean(endOrBeginning)?1:0;return{value:impt(r,period,n,pv,fv,type),format:"#,##0.00",};},isExported:true,};const DEFAULT_RATE_GUESS=0.1;const IRR={description:_t("Internal rate of return given periodic cashflows."),args:[arg("cashflow_amounts (number, range<number>)",_t("An array or range containing the income or payments associated with the investment.")),arg(`rate_guess (number, default=${DEFAULT_RATE_GUESS})`,_t("An estimate for what the internal rate of return will be.")),],compute:function(cashFlowAmounts,rateGuess={value:DEFAULT_RATE_GUESS}){const _rateGuess=toNumber(rateGuess,this.locale);if(_rateGuess<=-1){return new EvaluationError(expectRateGuessStrictlyGreaterThanMinusOne(_rateGuess));}
let positive=false;let negative=false;const amounts=[];visitNumbers([cashFlowAmounts],({value:amount})=>{if(amount>0)
positive=true;if(amount<0)
negative=true;amounts.push(amount);},this.locale);if(!positive||!negative){return new EvaluationError(expectCashFlowsHavePositiveAndNegativesValues);}
const firstAmount=amounts.shift();function npvNumerator(rate,startValue,values){const nbrValue=values.length;let i=0;return values.reduce((acc,v)=>{i++;return acc+v*rate**(nbrValue-i);},startValue*rate**nbrValue);}
function npvNumeratorDeriv(rate,startValue,values){const nbrValue=values.length;let i=0;return values.reduce((acc,v)=>{i++;return acc+v*(nbrValue-i)*rate**(nbrValue-i-1);},startValue*nbrValue*rate**(nbrValue-1));}
function func(x){return npvNumerator(x,firstAmount,amounts);}
function derivFunc(x){return npvNumeratorDeriv(x,firstAmount,amounts);}
return{value:newtonMethod(func,derivFunc,_rateGuess+1,20,1e-5)-1,format:"0%",};},isExported:true,};const ISPMT={description:_t("Returns the interest paid at a particular period of an investment."),args:[arg("rate (number)",_t("The interest rate.")),arg("period (number)",_t("The period for which you want to view the interest payment.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),],compute:function(rate,currentPeriod,numberOfPeriods,presentValue){const interestRate=toNumber(rate,this.locale);const period=toNumber(currentPeriod,this.locale);const nOfPeriods=toNumber(numberOfPeriods,this.locale);const investment=toNumber(presentValue,this.locale);if(nOfPeriods===0){return new EvaluationError(expectNumberOfPeriodDifferentFromZero(nOfPeriods));}
const currentInvestment=investment-investment*(period/nOfPeriods);return-1*currentInvestment*interestRate;},isExported:true,};const MDURATION={description:_t("Modified Macaulay duration."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("yield (number)",_t("The expected annual yield of the security.")),arg("frequency (number)",_t("The number of interest or coupon payments per year (1, 2, or 4).")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,rate,securityYield,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){const duration=DURATION.compute.bind(this)(settlement,maturity,rate,securityYield,frequency,dayCountConvention);const y=toNumber(securityYield,this.locale);const k=Math.trunc(toNumber(frequency,this.locale));return toNumber(duration,this.locale)/(1+y/k);},isExported:true,};const MIRR={description:_t("Modified internal rate of return."),args:[arg("cashflow_amounts (range<number>)",_t("A range containing the income or payments associated with the investment. The array should contain bot payments and incomes.")),arg("financing_rate (number)",_t("The interest rate paid on funds invested.")),arg("reinvestment_return_rate (number)",_t("The return (as a percentage) earned on reinvestment of income received from the investment.")),],compute:function(cashflowAmount,financingRate,reinvestmentRate){const fRate=toNumber(financingRate,this.locale);const rRate=toNumber(reinvestmentRate,this.locale);const cashFlow=transposeMatrix(cashflowAmount).flat().filter((t)=>t.value!==null).map((val)=>toNumber(val,this.locale));const n=cashFlow.length;let fv=0;let pv=0;for(const i of range(0,n)){const amount=cashFlow[i];if(amount>=0){fv+=amount*(rRate+1)**(n-i-1);}
else{pv+=amount/(fRate+1)**i;}}
if(pv===0||fv===0){return new EvaluationError(expectCashFlowsHavePositiveAndNegativesValues);}
const exponent=1/(n-1);return(-fv/pv)**exponent-1;},isExported:true,};const NOMINAL={description:_t("Annual nominal interest rate."),args:[arg("effective_rate (number)",_t("The effective interest rate per year.")),arg("periods_per_year (number)",_t("The number of compounding periods per year.")),],compute:function(effective_rate,periods_per_year){const effective=toNumber(effective_rate,this.locale);const periods=Math.trunc(toNumber(periods_per_year,this.locale));if(effective<=0){return new EvaluationError(expectEffectiveRateStrictlyPositive(effective));}
if(periods<=0){return new EvaluationError(expectPeriodsByYearStrictlyPositive(periods));}
return(Math.pow(effective+1,1/periods)-1)*periods;},isExported:true,};const NPER={description:_t("Number of payment periods for an investment."),args:[arg("rate (number)",_t("The interest rate.")),arg("payment_amount (number)",_t("The amount of each payment made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,paymentAmount,presentValue,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){futureValue=futureValue||0;endOrBeginning=endOrBeginning||0;const r=toNumber(rate,this.locale);const p=toNumber(paymentAmount,this.locale);const pv=toNumber(presentValue,this.locale);const fv=toNumber(futureValue,this.locale);const t=toBoolean(endOrBeginning)?1:0;if(r===0){return-(fv+pv)/p;}
const c=(p*(1+r*t))/r;return Math.log((c-fv)/(pv+c))/Math.log(1+r);},isExported:true,};function npvResult(r,startValue,values,locale){let i=0;return reduceNumbers(values,(acc,v)=>{i++;return acc+v/(1+r)**i;},startValue,locale);}
const NPV={description:_t("The net present value of an investment based on a series of periodic cash flows and a discount rate."),args:[arg("discount (number)",_t("The discount rate of the investment over one period.")),arg("cashflow1 (number, range<number>)",_t("The first future cash flow.")),arg("cashflow2 (number, range<number>, repeating)",_t("Additional future cash flows.")),],compute:function(discount,...values){const _discount=toNumber(discount,this.locale);if(_discount===-1){return new EvaluationError(expectDiscountDifferentFromMinusOne(_discount));}
return{value:npvResult(_discount,0,values,this.locale),format:"#,##0.00",};},isExported:true,};const PDURATION={description:_t("Computes the number of periods needed for an investment to reach a value."),args:[arg("rate (number)",_t("The rate at which the investment grows each period.")),arg("present_value (number)",_t("The investment's current value.")),arg("future_value (number)",_t("The investment's desired future value.")),],compute:function(rate,presentValue,futureValue){const _rate=toNumber(rate,this.locale);const _presentValue=toNumber(presentValue,this.locale);const _futureValue=toNumber(futureValue,this.locale);if(_rate<=0){return new EvaluationError(expectRateStrictlyPositive(_rate));}
if(_presentValue<=0){return new EvaluationError(expectPresentValueStrictlyPositive(_presentValue));}
if(_futureValue<=0){return new EvaluationError(expectFutureValueStrictlyPositive(_futureValue));}
return(Math.log(_futureValue)-Math.log(_presentValue))/Math.log(1+_rate);},isExported:true,};function pmt(r,n,pv,fv,t){if(n<=0){throw new EvaluationError(expectNumberOfPeriodsStrictlyPositive(n));}
if(r===0){return-(fv+pv)/n;}
let payment=-(pv*(1+r)**n+fv);payment=(payment*r)/((1+r*t)*((1+r)**n-1));return payment;}
const PMT={description:_t("Periodic payment for an annuity investment."),args:[arg("rate (number)",_t("The annualized rate of interest.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,numberOfPeriods,presentValue,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){const n=toNumber(numberOfPeriods,this.locale);const r=toNumber(rate,this.locale);const t=toBoolean(endOrBeginning)?1:0;const fv=toNumber(futureValue,this.locale);const pv=toNumber(presentValue,this.locale);return{value:pmt(r,n,pv,fv,t),format:"#,##0.00"};},isExported:true,};function ppmt(r,per,n,pValue,fValue,t){if(n<=0){throw new EvaluationError(expectNumberOfPeriodsStrictlyPositive(n));}
if(per<=0||per>n){throw new EvaluationError(expectPeriodBetweenOneAndNumberOfPeriods(n));}
const payment=pmt(r,n,pValue,fValue,t);if(t===1&&per===1)
return payment;const eqPeriod=t===0?per-1:per-2;const eqPv=pValue+payment*t;const capitalAtPeriod=-fv(r,eqPeriod,payment,eqPv,0);const currentInterest=capitalAtPeriod*r;return payment+currentInterest;}
const PPMT={description:_t("Payment on the principal of an investment."),args:[arg("rate (number)",_t("The annualized rate of interest.")),arg("period (number)",_t("The amortization period, in terms of number of periods.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("present_value (number)",_t("The current value of the annuity.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,currentPeriod,numberOfPeriods,presentValue,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){const n=toNumber(numberOfPeriods,this.locale);const r=toNumber(rate,this.locale);const period=toNumber(currentPeriod,this.locale);const type=toBoolean(endOrBeginning)?1:0;const fv=toNumber(futureValue,this.locale);const pv=toNumber(presentValue,this.locale);return{value:ppmt(r,period,n,pv,fv,type),format:"#,##0.00",};},isExported:true,};const PV={description:_t("Present value of an annuity investment."),args:[arg("rate (number)",_t("The interest rate.")),arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("payment_amount (number)",_t("The amount per period to be paid.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),],compute:function(rate,numberOfPeriods,paymentAmount,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING}){futureValue=futureValue||0;endOrBeginning=endOrBeginning||0;const r=toNumber(rate,this.locale);const n=toNumber(numberOfPeriods,this.locale);const p=toNumber(paymentAmount,this.locale);const fv=toNumber(futureValue,this.locale);const type=toBoolean(endOrBeginning)?1:0;return{value:r?-((p*(1+r*type)*((1+r)**n-1))/r+fv)/(1+r)**n:-(fv+p*n),format:"#,##0.00",};},isExported:true,};const PRICE={description:_t("Price of a security paying periodic interest."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("yield (number)",_t("The expected annual yield of the security.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg("frequency (number)",_t("The number of interest or coupon payments per year (1, 2, or 4).")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,rate,securityYield,redemption,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _rate=toNumber(rate,this.locale);const _yield=toNumber(securityYield,this.locale);const _redemption=toNumber(redemption,this.locale);const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(_settlement>=_maturity){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(_settlement,_maturity));}
if(isInvalidFrequency(_frequency)){return new EvaluationError(expectCouponFrequencyIsValid(_frequency));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_rate<0){return new EvaluationError(expectRatePositiveOrZero(_rate));}
if(_yield<0){return new EvaluationError(expectYieldPositiveOrZero(_yield));}
if(_redemption<=0){return new EvaluationError(expectRedemptionStrictlyPositive(_redemption));}
const years=getYearFrac(_settlement,_maturity,_dayCountConvention);const nbrRealCoupons=years*_frequency;const nbrFullCoupons=Math.ceil(nbrRealCoupons);const timeFirstCoupon=nbrRealCoupons-Math.floor(nbrRealCoupons)||1;const yieldFactorPerPeriod=1+_yield/_frequency;const cashFlowFromCoupon=(100*_rate)/_frequency;if(nbrFullCoupons===1){return((cashFlowFromCoupon+_redemption)/((timeFirstCoupon*_yield)/_frequency+1)-
cashFlowFromCoupon*(1-timeFirstCoupon));}
let cashFlowsPresentValue=0;for(let i=1;i<=nbrFullCoupons;i++){cashFlowsPresentValue+=cashFlowFromCoupon/yieldFactorPerPeriod**(i-1+timeFirstCoupon);}
const redemptionPresentValue=_redemption/yieldFactorPerPeriod**(nbrFullCoupons-1+timeFirstCoupon);return(redemptionPresentValue+cashFlowsPresentValue-cashFlowFromCoupon*(1-timeFirstCoupon));},isExported:true,};const PRICEDISC={description:_t("Price of a discount security."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("discount (number)",_t("The discount rate of the security at time of purchase.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,discount,redemption,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _discount=toNumber(discount,this.locale);const _redemption=toNumber(redemption,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(_settlement>=_maturity){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(_settlement,_maturity));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_discount<=0){return new EvaluationError(expectDiscountStrictlyPositive(_discount));}
if(_redemption<=0){return new EvaluationError(expectRedemptionStrictlyPositive(_redemption));}
const yearsFrac=getYearFrac(_settlement,_maturity,_dayCountConvention);return _redemption-_discount*_redemption*yearsFrac;},isExported:true,};const PRICEMAT={description:_t("Calculates the price of a security paying interest at maturity, based on expected yield."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("issue (date)",_t("The date the security was initially issued.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("yield (number)",_t("The expected annual yield of the security.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,issue,rate,securityYield,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _issue=Math.trunc(toNumber(issue,this.locale));const _rate=toNumber(rate,this.locale);const _yield=toNumber(securityYield,this.locale);const _dayCount=Math.trunc(toNumber(dayCountConvention,this.locale));if(_settlement<=_issue){return new EvaluationError(expectSettlementStrictlyGreaterThanIssue(_settlement,_issue));}
if(_settlement>=_maturity){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(_settlement,_maturity));}
if(isInvalidDayCountConvention(_dayCount)){return new EvaluationError(expectDayCountConventionIsValid(_dayCount));}
if(_rate<0){return new EvaluationError(expectRatePositiveOrZero(_rate));}
if(_yield<0){return new EvaluationError(expectYieldPositiveOrZero(_yield));}
const settlementToMaturity=getYearFrac(_settlement,_maturity,_dayCount);const issueToSettlement=getYearFrac(_settlement,_issue,_dayCount);const issueToMaturity=getYearFrac(_issue,_maturity,_dayCount);const numerator=100+issueToMaturity*_rate*100;const denominator=1+settlementToMaturity*_yield;const term2=issueToSettlement*_rate*100;return numerator/denominator-term2;},isExported:true,};const RATE_GUESS_DEFAULT=0.1;const RATE={description:_t("Interest rate of an annuity investment."),args:[arg("number_of_periods (number)",_t("The number of payments to be made.")),arg("payment_per_period (number)",_t("The amount per period to be paid.")),arg("present_value (number)",_t("The current value of the annuity.")),arg(`future_value (number, default=${DEFAULT_FUTURE_VALUE})`,_t("The future value remaining after the final payment has been made.")),arg(`end_or_beginning (number, default=${DEFAULT_END_OR_BEGINNING})`,_t("Whether payments are due at the end (0) or beginning (1) of each period.")),arg(`rate_guess (number, default=${RATE_GUESS_DEFAULT})`,_t("An estimate for what the interest rate will be.")),],compute:function(numberOfPeriods,paymentPerPeriod,presentValue,futureValue={value:DEFAULT_FUTURE_VALUE},endOrBeginning={value:DEFAULT_END_OR_BEGINNING},rateGuess={value:RATE_GUESS_DEFAULT}){const n=toNumber(numberOfPeriods,this.locale);const payment=toNumber(paymentPerPeriod,this.locale);const type=toBoolean(endOrBeginning)?1:0;const guess=toNumber(rateGuess,this.locale)||RATE_GUESS_DEFAULT;let fv=toNumber(futureValue,this.locale);let pv=toNumber(presentValue,this.locale);if(n<=0){return new EvaluationError(expectNumberOfPeriodsStrictlyPositive(n));}
if(!havePositiveAndNegativeValues([payment,pv,fv])){return new EvaluationError(_t("There must be both positive and negative values in [payment_amount, present_value, future_value]."));}
if(guess<=-1){return new EvaluationError(expectRateGuessStrictlyGreaterThanMinusOne(guess));}
fv-=payment*type;pv+=payment*type;const func=(rate)=>{const powN=Math.pow(1+rate,n);const intResult=(powN-1)/rate;return fv+pv*powN+payment*intResult;};const derivFunc=(rate)=>{const powNMinus1=Math.pow(1+rate,n-1);const powN=Math.pow(1+rate,n);const intResult=(powN-1)/rate;const intResultDeriv=(n*powNMinus1)/rate-intResult/rate;const fTermDerivation=pv*n*powNMinus1+payment*intResultDeriv;return fTermDerivation;};return{value:newtonMethod(func,derivFunc,guess,40,1e-5),format:"0%",};},isExported:true,};const RECEIVED={description:_t("Amount received at maturity for a security."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("investment (number)",_t("The amount invested (irrespective of face value of each security).")),arg("discount (number)",_t("The discount rate of the security invested in.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,investment,discount,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _investment=toNumber(investment,this.locale);const _discount=toNumber(discount,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(_settlement>=_maturity){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(_settlement,_maturity));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_investment<=0){return new EvaluationError(expectInvestmentStrictlyPositive(_investment));}
if(_discount<=0){return new EvaluationError(expectDiscountStrictlyPositive(_discount));}
const yearsFrac=getYearFrac(_settlement,_maturity,_dayCountConvention);return _investment/(1-_discount*yearsFrac);},isExported:true,};const RRI={description:_t("Computes the rate needed for an investment to reach a specific value within a specific number of periods."),args:[arg("number_of_periods (number)",_t("The number of periods.")),arg("present_value (number)",_t("The present value of the investment.")),arg("future_value (number)",_t("The future value of the investment.")),],compute:function(numberOfPeriods,presentValue,futureValue){const n=toNumber(numberOfPeriods,this.locale);const pv=toNumber(presentValue,this.locale);const fv=toNumber(futureValue,this.locale);if(n<=0){return new EvaluationError(expectNumberOfPeriodsStrictlyPositive(n));}
return(fv/pv)**(1/n)-1;},isExported:true,};const SLN={description:_t("Depreciation of an asset using the straight-line method."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("life (number)",_t("The number of periods over which the asset is depreciated.")),],compute:function(cost,salvage,life){const _cost=toNumber(cost,this.locale);const _salvage=toNumber(salvage,this.locale);const _life=toNumber(life,this.locale);return{value:(_cost-_salvage)/_life,format:"#,##0.00",};},isExported:true,};const SYD={description:_t("Depreciation via sum of years digit method."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("life (number)",_t("The number of periods over which the asset is depreciated.")),arg("period (number)",_t("The single period within life for which to calculate depreciation.")),],compute:function(cost,salvage,life,period){const _cost=toNumber(cost,this.locale);const _salvage=toNumber(salvage,this.locale);const _life=toNumber(life,this.locale);const _period=toNumber(period,this.locale);if(_period<=0){return new EvaluationError(expectPeriodStrictlyPositive(_period));}
if(_life<=0){return new EvaluationError(expectLifeStrictlyPositive(_life));}
if(_period>_life){return new EvaluationError(expectPeriodSmallerOrEqualToLife(_period,_life));}
const deprecFactor=(_life*(_life+1))/2;const remainingPeriods=_life-_period+1;return{value:(_cost-_salvage)*(remainingPeriods/deprecFactor),format:"#,##0.00",};},isExported:true,};function tBillPrice(start,end,disc){const yearFrac=getYearFrac(start,end,2);return 100*(1-disc*yearFrac);}
const TBILLPRICE={description:_t("Price of a US Treasury bill."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("discount (number)",_t("The discount rate of the bill at time of purchase.")),],compute:function(settlement,maturity,discount){const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const disc=toNumber(discount,this.locale);if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(!isSettlementLessThanOneYearBeforeMaturity(start,end,this.locale)){return new EvaluationError(expectSettlementLessThanOneYearBeforeMaturity(start,end));}
if(disc<=0){return new EvaluationError(expectDiscountStrictlyPositive(disc));}
if(disc>=1){return new EvaluationError(expectDiscountStrictlySmallerThanOne(disc));}
return tBillPrice(start,end,disc);},isExported:true,};const TBILLEQ={description:_t("Equivalent rate of return for a US Treasury bill."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("discount (number)",_t("The discount rate of the bill at time of purchase.")),],compute:function(settlement,maturity,discount){const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const disc=toNumber(discount,this.locale);if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(!isSettlementLessThanOneYearBeforeMaturity(start,end,this.locale)){return new EvaluationError(expectSettlementLessThanOneYearBeforeMaturity(start,end));}
if(disc<=0){return new EvaluationError(expectDiscountStrictlyPositive(disc));}
if(disc>=1){return new EvaluationError(expectDiscountStrictlySmallerThanOne(disc));}
const nDays=DAYS.compute.bind(this)({value:end},{value:start});if(nDays<=182){return(365*disc)/(360-disc*nDays);}
const p=tBillPrice(start,end,disc)/100;const daysInYear=nDays===366?366:365;const x=nDays/daysInYear;const num=-2*x+2*Math.sqrt(x**2-(2*x-1)*(1-1/p));const denom=2*x-1;return num/denom;},isExported:true,};const TBILLYIELD={description:_t("The yield of a US Treasury bill based on price."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("price (number)",_t("The price at which the security is bought per 100 face value.")),],compute:function(settlement,maturity,price){const start=Math.trunc(toNumber(settlement,this.locale));const end=Math.trunc(toNumber(maturity,this.locale));const p=toNumber(price,this.locale);if(start>=end){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(start,end));}
if(!isSettlementLessThanOneYearBeforeMaturity(start,end,this.locale)){return new EvaluationError(expectSettlementLessThanOneYearBeforeMaturity(start,end));}
if(p<=0){return new EvaluationError(expectPriceStrictlyPositive(p));}
const yearFrac=getYearFrac(start,end,2);return((100-p)/p)*(1/yearFrac);},isExported:true,};const DEFAULT_VDB_NO_SWITCH=false;const VDB={description:_t("Variable declining balance. WARNING : does not handle decimal periods."),args:[arg("cost (number)",_t("The initial cost of the asset.")),arg("salvage (number)",_t("The value of the asset at the end of depreciation.")),arg("life (number)",_t("The number of periods over which the asset is depreciated.")),arg("start (number)",_t("Starting period to calculate depreciation.")),arg("end (number)",_t("Ending period to calculate depreciation.")),arg(`factor (number, default=${DEFAULT_DDB_DEPRECIATION_FACTOR})`,_t("The number of months in the first year of depreciation.")),arg(`no_switch (number, default=${DEFAULT_VDB_NO_SWITCH})`,_t("Whether to switch to straight-line depreciation when the depreciation is greater than the declining balance calculation.")),],compute:function(cost,salvage,life,startPeriod,endPeriod,factor={value:DEFAULT_DDB_DEPRECIATION_FACTOR},noSwitch={value:DEFAULT_VDB_NO_SWITCH}){factor=factor||0;const _cost=toNumber(cost,this.locale);const _salvage=toNumber(salvage,this.locale);const _life=toNumber(life,this.locale);const _startPeriod=Math.trunc(toNumber(startPeriod,this.locale));const _endPeriod=Math.trunc(toNumber(endPeriod,this.locale));const _factor=toNumber(factor,this.locale);const _noSwitch=toBoolean(noSwitch);if(_cost<0){return new EvaluationError(expectCostPositiveOrZero(_cost));}
if(_salvage<0){return new EvaluationError(expectSalvagePositiveOrZero(_salvage));}
if(_life<=0){return new EvaluationError(expectLifeStrictlyPositive(_life));}
if(_startPeriod<0){return new EvaluationError(expectStartPeriodPositiveOrZero(_startPeriod));}
if(_endPeriod<0){return new EvaluationError(expectEndPeriodPositiveOrZero(_endPeriod));}
if(_startPeriod>_endPeriod){return new EvaluationError(expectStartPeriodSmallerOrEqualEndPeriod(_startPeriod,_endPeriod));}
if(_endPeriod>_life){return new EvaluationError(expectEndPeriodSmallerOrEqualToLife(_endPeriod,_life));}
if(_factor<=0){return new EvaluationError(expectDeprecationFactorStrictlyPositive(_factor));}
if(_cost===0)
return 0;if(_salvage>=_cost){return _startPeriod<1?_cost-_salvage:0;}
const doubleDeprecFactor=_factor/_life;if(doubleDeprecFactor>=1){return _startPeriod<1?_cost-_salvage:0;}
let previousCost=_cost;let currentDeprec=0;let resultDeprec=0;let isLinearDeprec=false;for(let i=0;i<_endPeriod;i++){if(!isLinearDeprec||_noSwitch){const doubleDeprec=previousCost*doubleDeprecFactor;const remainingPeriods=_life-i;const linearDeprec=(previousCost-_salvage)/remainingPeriods;if(!_noSwitch&&linearDeprec>doubleDeprec){isLinearDeprec=true;currentDeprec=linearDeprec;}
else{currentDeprec=doubleDeprec;}}
const nextCost=Math.max(previousCost-currentDeprec,_salvage);if(i>=_startPeriod){resultDeprec+=previousCost-nextCost;}
previousCost=nextCost;}
return resultDeprec;},isExported:true,};const XIRR={description:_t("Internal rate of return given non-periodic cash flows."),args:[arg("cashflow_amounts (range<number>)",_t("An range containing the income or payments associated with the investment.")),arg("cashflow_dates (range<number>)",_t("An range with dates corresponding to the cash flows in cashflow_amounts.")),arg(`rate_guess (number, default=${RATE_GUESS_DEFAULT})`,_t("An estimate for what the internal rate of return will be.")),],compute:function(cashflowAmounts,cashflowDates,rateGuess={value:RATE_GUESS_DEFAULT}){const guess=toNumber(rateGuess,this.locale);if(!areSameDimensions(cashflowAmounts,cashflowDates)){return new EvaluationError(expectCashFlowsAndDatesHaveSameDimension);}
const _cashFlows=cashflowAmounts.flat().map((val)=>toNumber(val,this.locale));const _dates=cashflowDates.flat().map((val)=>toNumber(val,this.locale));if(!havePositiveAndNegativeValues(_cashFlows)){return new EvaluationError(expectCashFlowsHavePositiveAndNegativesValues);}
if(_dates.some((date)=>date<_dates[0])){return new EvaluationError(expectEveryDateGreaterThanFirstDateOfCashFlowDates(_dates[0]));}
if(guess<=-1){return new EvaluationError(expectRateGuessStrictlyGreaterThanMinusOne(guess));}
const map=new Map();for(const i of range(0,_dates.length)){const date=_dates[i];if(map.has(date))
map.set(date,map.get(date)+_cashFlows[i]);else
map.set(date,_cashFlows[i]);}
const dates=Array.from(map.keys());const values=dates.map((date)=>map.get(date));const func=(rate)=>{let value=values[0];for(const i of range(1,values.length)){const dateDiff=(dates[0]-dates[i])/365;value+=values[i]*(1+rate)**dateDiff;}
return value;};const derivFunc=(rate)=>{let deriv=0;for(const i of range(1,values.length)){const dateDiff=(dates[0]-dates[i])/365;deriv+=dateDiff*values[i]*(1+rate)**(dateDiff-1);}
return deriv;};const nanFallback=(previousFallback)=>{if(!previousFallback)
return-0.9;return previousFallback/10-0.9;};return newtonMethod(func,derivFunc,guess,40,1e-5,nanFallback);},isExported:true,};const XNPV={description:_t("Net present value given to non-periodic cash flows.."),args:[arg("discount (number)",_t("The discount rate of the investment over one period.")),arg("cashflow_amounts (number, range<number>)",_t("An range containing the income or payments associated with the investment.")),arg("cashflow_dates (number, range<number>)",_t("An range with dates corresponding to the cash flows in cashflow_amounts.")),],compute:function(discount,cashflowAmounts,cashflowDates){const rate=toNumber(discount,this.locale);if(!areSameDimensions(cashflowAmounts,cashflowDates)){return new EvaluationError(expectCashFlowsAndDatesHaveSameDimension);}
const _cashFlows=toMatrix(cashflowAmounts).flat().map((val)=>strictToNumber(val,this.locale));const _dates=toMatrix(cashflowDates).flat().map((val)=>strictToNumber(val,this.locale));if(_dates.some((date)=>date<_dates[0])){return new EvaluationError(expectEveryDateGreaterThanFirstDateOfCashFlowDates(_dates[0]));}
if(rate<=0){return new EvaluationError(expectRateStrictlyPositive(rate));}
if(_cashFlows.length===1)
return _cashFlows[0];const map=new Map();for(const i of range(0,_dates.length)){const date=_dates[i];if(map.has(date))
map.set(date,map.get(date)+_cashFlows[i]);else
map.set(date,_cashFlows[i]);}
const dates=Array.from(map.keys());const values=dates.map((date)=>map.get(date));let pv=values[0];for(const i of range(1,values.length)){const dateDiff=(dates[0]-dates[i])/365;pv+=values[i]*(1+rate)**dateDiff;}
return pv;},isExported:true,};const YIELD={description:_t("Annual yield of a security paying periodic interest."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("price (number)",_t("The price at which the security is bought per 100 face value.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg("frequency (number)",_t("The number of interest or coupon payments per year (1, 2, or 4).")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,rate,price,redemption,frequency,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _rate=toNumber(rate,this.locale);const _price=toNumber(price,this.locale);const _redemption=toNumber(redemption,this.locale);const _frequency=Math.trunc(toNumber(frequency,this.locale));const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(_settlement>=_maturity){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(_settlement,_maturity));}
if(isInvalidFrequency(_frequency)){return new EvaluationError(expectCouponFrequencyIsValid(_frequency));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_rate<0){return new EvaluationError(expectRatePositiveOrZero(_rate));}
if(_price<=0){return new EvaluationError(expectPriceStrictlyPositive(_price));}
if(_redemption<=0){return new EvaluationError(expectRedemptionStrictlyPositive(_redemption));}
const years=getYearFrac(_settlement,_maturity,_dayCountConvention);const nbrRealCoupons=years*_frequency;const nbrFullCoupons=Math.ceil(nbrRealCoupons);const timeFirstCoupon=nbrRealCoupons-Math.floor(nbrRealCoupons)||1;const cashFlowFromCoupon=(100*_rate)/_frequency;if(nbrFullCoupons===1){const subPart=_price+cashFlowFromCoupon*(1-timeFirstCoupon);return(((_redemption+cashFlowFromCoupon-subPart)*_frequency*(1/timeFirstCoupon))/subPart);}
function priceNumerator(price,timeFirstCoupon,nbrFullCoupons,yieldFactorPerPeriod,cashFlowFromCoupon,redemption){let result=redemption-
(price+cashFlowFromCoupon*(1-timeFirstCoupon))*yieldFactorPerPeriod**(nbrFullCoupons-1+timeFirstCoupon);for(let i=1;i<=nbrFullCoupons;i++){result+=cashFlowFromCoupon*yieldFactorPerPeriod**(i-1);}
return result;}
function priceNumeratorDeriv(price,timeFirstCoupon,nbrFullCoupons,yieldFactorPerPeriod,cashFlowFromCoupon){let result=-(price+cashFlowFromCoupon*(1-timeFirstCoupon))*(nbrFullCoupons-1+timeFirstCoupon)*yieldFactorPerPeriod**(nbrFullCoupons-2+timeFirstCoupon);for(let i=1;i<=nbrFullCoupons;i++){result+=cashFlowFromCoupon*(i-1)*yieldFactorPerPeriod**(i-2);}
return result;}
function func(x){return priceNumerator(_price,timeFirstCoupon,nbrFullCoupons,x,cashFlowFromCoupon,_redemption);}
function derivFunc(x){return priceNumeratorDeriv(_price,timeFirstCoupon,nbrFullCoupons,x,cashFlowFromCoupon);}
const initYield=_rate+1;const initYieldFactorPerPeriod=1+initYield/_frequency;const methodResult=newtonMethod(func,derivFunc,initYieldFactorPerPeriod,100,1e-5);return(methodResult-1)*_frequency;},isExported:true,};const YIELDDISC={description:_t("Annual yield of a discount security."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("price (number)",_t("The price at which the security is bought per 100 face value.")),arg("redemption (number)",_t("The redemption amount per 100 face value, or par.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,price,redemption,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _price=toNumber(price,this.locale);const _redemption=toNumber(redemption,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(_settlement>=_maturity){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(_settlement,_maturity));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_price<=0){return new EvaluationError(expectPriceStrictlyPositive(_price));}
if(_redemption<=0){return new EvaluationError(expectRedemptionStrictlyPositive(_redemption));}
const yearFrac=getYearFrac(_settlement,_maturity,_dayCountConvention);return(_redemption/_price-1)/yearFrac;},isExported:true,};const YIELDMAT={description:_t("Annual yield of a security paying interest at maturity."),args:[arg("settlement (date)",_t("The settlement date of the security, the date after issuance when the security is delivered to the buyer.")),arg("maturity (date)",_t("The maturity or end date of the security, when it can be redeemed at face, or par value.")),arg("issue (date)",_t("The date the security was initially issued.")),arg("rate (number)",_t("The annualized rate of interest.")),arg("price (number)",_t("The price at which the security is bought.")),arg(`day_count_convention (number, default=${DEFAULT_DAY_COUNT_CONVENTION} )`,_t("An indicator of what day count method to use.")),],compute:function(settlement,maturity,issue,rate,price,dayCountConvention={value:DEFAULT_DAY_COUNT_CONVENTION}){dayCountConvention=dayCountConvention||0;const _settlement=Math.trunc(toNumber(settlement,this.locale));const _maturity=Math.trunc(toNumber(maturity,this.locale));const _issue=Math.trunc(toNumber(issue,this.locale));const _rate=toNumber(rate,this.locale);const _price=toNumber(price,this.locale);const _dayCountConvention=Math.trunc(toNumber(dayCountConvention,this.locale));if(_settlement>=_maturity){return new EvaluationError(expectMaturityStrictlyGreaterThanSettlement(_settlement,_maturity));}
if(isInvalidDayCountConvention(_dayCountConvention)){return new EvaluationError(expectDayCountConventionIsValid(_dayCountConvention));}
if(_settlement<_issue){return new EvaluationError(expectSettlementGreaterOrEqualToIssue(_settlement,_issue));}
if(_rate<0){return new EvaluationError(expectRatePositiveOrZero(_rate));}
if(_price<=0){return new EvaluationError(expectPriceStrictlyPositive(_price));}
const issueToMaturity=getYearFrac(_issue,_maturity,_dayCountConvention);const issueToSettlement=getYearFrac(_issue,_settlement,_dayCountConvention);const settlementToMaturity=getYearFrac(_settlement,_maturity,_dayCountConvention);const numerator=(100*(1+_rate*issueToMaturity))/(_price+100*_rate*issueToSettlement)-1;return numerator/settlementToMaturity;},isExported:true,};var financial=Object.freeze({__proto__:null,ACCRINTM:ACCRINTM,AMORLINC:AMORLINC,COUPDAYBS:COUPDAYBS,COUPDAYS:COUPDAYS,COUPDAYSNC:COUPDAYSNC,COUPNCD:COUPNCD,COUPNUM:COUPNUM,COUPPCD:COUPPCD,CUMIPMT:CUMIPMT,CUMPRINC:CUMPRINC,DB:DB,DDB:DDB,DISC:DISC,DOLLARDE:DOLLARDE,DOLLARFR:DOLLARFR,DURATION:DURATION,EFFECT:EFFECT,FV:FV,FVSCHEDULE:FVSCHEDULE,INTRATE:INTRATE,IPMT:IPMT,IRR:IRR,ISPMT:ISPMT,MDURATION:MDURATION,MIRR:MIRR,NOMINAL:NOMINAL,NPER:NPER,NPV:NPV,PDURATION:PDURATION,PMT:PMT,PPMT:PPMT,PRICE:PRICE,PRICEDISC:PRICEDISC,PRICEMAT:PRICEMAT,PV:PV,RATE:RATE,RECEIVED:RECEIVED,RRI:RRI,SLN:SLN,SYD:SYD,TBILLEQ:TBILLEQ,TBILLPRICE:TBILLPRICE,TBILLYIELD:TBILLYIELD,VDB:VDB,XIRR:XIRR,XNPV:XNPV,YIELD:YIELD,YIELDDISC:YIELDDISC,YIELDMAT:YIELDMAT});var State;(function(State){State[State["LeftRef"]=0]="LeftRef";State[State["RightRef"]=1]="RightRef";State[State["Separator"]=2]="Separator";State[State["FullColumnSeparator"]=3]="FullColumnSeparator";State[State["FullRowSeparator"]=4]="FullRowSeparator";State[State["RightColumnRef"]=5]="RightColumnRef";State[State["RightRowRef"]=6]="RightRowRef";State[State["Found"]=7]="Found";})(State||(State={}));const goTo=(state,guard=()=>true)=>[{goTo:state,guard,},];const goToMulti=(state,guard=()=>true)=>({goTo:state,guard,});const machine={[State.LeftRef]:{REFERENCE:goTo(State.Separator),NUMBER:goTo(State.FullRowSeparator),SYMBOL:[goToMulti(State.FullColumnSeparator,(token)=>isColReference(token.value)),goToMulti(State.FullRowSeparator,(token)=>isRowReference(token.value)),],},[State.FullColumnSeparator]:{SPACE:goTo(State.FullColumnSeparator),OPERATOR:goTo(State.RightColumnRef,(token)=>token.value===":"),},[State.FullRowSeparator]:{SPACE:goTo(State.FullRowSeparator),OPERATOR:goTo(State.RightRowRef,(token)=>token.value===":"),},[State.Separator]:{SPACE:goTo(State.Separator),OPERATOR:goTo(State.RightRef,(token)=>token.value===":"),},[State.RightRef]:{SPACE:goTo(State.RightRef),NUMBER:goTo(State.Found),REFERENCE:goTo(State.Found,(token)=>isSingleCellReference(token.value)),SYMBOL:goTo(State.Found,(token)=>isColHeader(token.value)||isRowHeader(token.value)),},[State.RightColumnRef]:{SPACE:goTo(State.RightColumnRef),SYMBOL:goTo(State.Found,(token)=>isColHeader(token.value)),REFERENCE:goTo(State.Found,(token)=>isSingleCellReference(token.value)),},[State.RightRowRef]:{SPACE:goTo(State.RightRowRef),NUMBER:goTo(State.Found),REFERENCE:goTo(State.Found,(token)=>isSingleCellReference(token.value)),SYMBOL:goTo(State.Found,(token)=>isRowHeader(token.value)),},[State.Found]:{},};function matchReference(tokens){let head=0;let transitions=machine[State.LeftRef];let matchedTokens="";while(transitions!==undefined){const token=tokens[head++];if(!token){return null;}
const transition=transitions[token.type]?.find((transition)=>transition.guard(token));const nextState=transition?transition.goTo:undefined;switch(nextState){case undefined:return null;case State.Found:matchedTokens+=token.value;tokens.splice(0,head);return{type:"REFERENCE",value:matchedTokens,};default:transitions=machine[nextState];matchedTokens+=token.value;break;}}
return null;}
function rangeTokenize(formula,locale=DEFAULT_LOCALE){const tokens=tokenize(formula,locale);const result=[];while(tokens.length){result.push(matchReference(tokens)||tokens.shift());}
return result;}
const functionRegex=/[a-zA-Z0-9\_]+(\.[a-zA-Z0-9\_]+)*/;const UNARY_OPERATORS_PREFIX=["-","+"];const UNARY_OPERATORS_POSTFIX=["%"];const ASSOCIATIVE_OPERATORS=["*","+","&"];class TokenList{tokens;currentIndex=0;current;length;constructor(tokens){this.tokens=tokens;this.current=tokens[0];this.length=tokens.length;}
shift(){const current=this.tokens[this.currentIndex];this.current=this.tokens[++this.currentIndex];return current;}
get next(){return this.tokens[this.currentIndex+1];}}
const OP_PRIORITY={"^":30,"%":30,"*":20,"/":20,"+":15,"-":15,"&":13,">":10,"<>":10,">=":10,"<":10,"<=":10,"=":10,};function parseOperand(tokens){const current=tokens.shift();if(!current){throw new BadExpressionError();}
switch(current.type){case"DEBUGGER":const next=parseExpression(tokens,1000);next.debug=true;return next;case"NUMBER":return{type:"NUMBER",value:parseNumber(current.value,DEFAULT_LOCALE),tokenStartIndex:current.tokenIndex,tokenEndIndex:current.tokenIndex,};case"STRING":return{type:"STRING",value:removeStringQuotes(current.value),tokenStartIndex:current.tokenIndex,tokenEndIndex:current.tokenIndex,};case"INVALID_REFERENCE":return{type:"REFERENCE",value:CellErrorType.InvalidReference,tokenStartIndex:current.tokenIndex,tokenEndIndex:current.tokenIndex,};case"REFERENCE":if(tokens.current?.value===":"&&tokens.next?.type==="REFERENCE"){tokens.shift();const rightReference=tokens.shift();return{type:"REFERENCE",value:`${current.value}:${rightReference?.value}`,tokenStartIndex:current.tokenIndex,tokenEndIndex:rightReference.tokenIndex,};}
return{type:"REFERENCE",value:current.value,tokenStartIndex:current.tokenIndex,tokenEndIndex:current.tokenIndex,};case"SYMBOL":const value=current.value;const nextToken=tokens.current;if(nextToken?.type==="LEFT_PAREN"&&functionRegex.test(current.value)&&value===unquote(value,"'")){const{args,rightParen}=parseFunctionArgs(tokens);return{type:"FUNCALL",value:value,args,tokenStartIndex:current.tokenIndex,tokenEndIndex:rightParen.tokenIndex,};}
const upperCaseValue=value.toUpperCase();if(upperCaseValue==="TRUE"||upperCaseValue==="FALSE"){return{type:"BOOLEAN",value:upperCaseValue==="TRUE",tokenStartIndex:current.tokenIndex,tokenEndIndex:current.tokenIndex,};}
return{type:"SYMBOL",value:unquote(current.value,"'"),tokenStartIndex:current.tokenIndex,tokenEndIndex:current.tokenIndex,};case"LEFT_PAREN":const result=parseExpression(tokens);const rightParen=consumeOrThrow(tokens,"RIGHT_PAREN",_t("Missing closing parenthesis"));return{...result,tokenStartIndex:current.tokenIndex,tokenEndIndex:rightParen.tokenIndex,};case"OPERATOR":const operator=current.value;if(UNARY_OPERATORS_PREFIX.includes(operator)){const operand=parseExpression(tokens,OP_PRIORITY[operator]);return{type:"UNARY_OPERATION",value:operator,operand,tokenStartIndex:current.tokenIndex,tokenEndIndex:operand.tokenEndIndex,};}
throw new BadExpressionError(_t("Unexpected token: %s",current.value));default:throw new BadExpressionError(_t("Unexpected token: %s",current.value));}}
function parseFunctionArgs(tokens){consumeOrThrow(tokens,"LEFT_PAREN",_t("Missing opening parenthesis"));const nextToken=tokens.current;if(nextToken?.type==="RIGHT_PAREN"){const rightParen=consumeOrThrow(tokens,"RIGHT_PAREN");return{args:[],rightParen};}
const args=[];args.push(parseOneFunctionArg(tokens));while(tokens.current?.type!=="RIGHT_PAREN"){consumeOrThrow(tokens,"ARG_SEPARATOR",_t("Wrong function call"));args.push(parseOneFunctionArg(tokens));}
const rightParen=consumeOrThrow(tokens,"RIGHT_PAREN");return{args,rightParen};}
function parseOneFunctionArg(tokens){const nextToken=tokens.current;if(nextToken?.type==="ARG_SEPARATOR"||nextToken?.type==="RIGHT_PAREN"){return{type:"EMPTY",value:"",tokenStartIndex:nextToken.tokenIndex,tokenEndIndex:nextToken.tokenIndex,};}
return parseExpression(tokens);}
function consumeOrThrow(tokens,type,message){const token=tokens.shift();if(!token||token.type!==type){throw new BadExpressionError(message);}
return token;}
function parseExpression(tokens,parent_priority=0){if(tokens.length===0){throw new BadExpressionError();}
let left=parseOperand(tokens);while(tokens.current?.type==="OPERATOR"&&OP_PRIORITY[tokens.current.value]>parent_priority){const operatorToken=tokens.shift();const operator=operatorToken.value;if(UNARY_OPERATORS_POSTFIX.includes(operator)){left={type:"UNARY_OPERATION",value:operator,operand:left,postfix:true,tokenStartIndex:left.tokenStartIndex,tokenEndIndex:operatorToken.tokenIndex,};}
else{const right=parseExpression(tokens,OP_PRIORITY[operator]);left={type:"BIN_OPERATION",value:operator,left,right,tokenStartIndex:left.tokenStartIndex,tokenEndIndex:right.tokenEndIndex,};}}
return left;}
function parse(str){return parseTokens(rangeTokenize(str));}
function parseTokens(tokens){const richTokens=tokens.map((token,index)=>({type:token.type,value:token.value,tokenIndex:index,}));const tokensToParse=richTokens.filter((x)=>x.type!=="SPACE");const tokenList=new TokenList(tokensToParse);if(tokenList.current?.value==="="){tokenList.shift();}
const result=parseExpression(tokenList);if(tokenList.current){throw new BadExpressionError();}
return result;}
function convertAstNodes(ast,type,fn){return mapAst(ast,(ast)=>{if(ast.type===type){return fn(ast);}
return ast;});}
function iterateAstNodes(ast){return Array.from(astIterator(ast));}
function*astIterator(ast){yield ast;switch(ast.type){case"FUNCALL":for(const arg of ast.args){yield*astIterator(arg);}
break;case"UNARY_OPERATION":yield*astIterator(ast.operand);break;case"BIN_OPERATION":yield*astIterator(ast.left);yield*astIterator(ast.right);break;}}
function mapAst(ast,fn){ast=fn(ast);switch(ast.type){case"FUNCALL":return{...ast,args:ast.args.map((child)=>mapAst(child,fn)),};case"UNARY_OPERATION":return{...ast,operand:mapAst(ast.operand,fn),};case"BIN_OPERATION":return{...ast,right:mapAst(ast.right,fn),left:mapAst(ast.left,fn),};default:return ast;}}
function astToFormula(ast){switch(ast.type){case"FUNCALL":const args=ast.args.map((arg)=>astToFormula(arg));return`${ast.value}(${args.join(",")})`;case"NUMBER":return ast.value.toString();case"REFERENCE":return ast.value;case"STRING":return`"${ast.value}"`;case"BOOLEAN":return ast.value?"TRUE":"FALSE";case"UNARY_OPERATION":return ast.postfix?leftOperandToFormula(ast)+ast.value:ast.value+rightOperandToFormula(ast);case"BIN_OPERATION":return leftOperandToFormula(ast)+ast.value+rightOperandToFormula(ast);default:return ast.value;}}
function leftOperandToFormula(operationAST){const mainOperator=operationAST.value;const leftOperation="left"in operationAST?operationAST.left:operationAST.operand;const leftOperator=leftOperation.value;const needParenthesis=leftOperation.type==="BIN_OPERATION"&&OP_PRIORITY[leftOperator]<OP_PRIORITY[mainOperator];return needParenthesis?`(${astToFormula(leftOperation)})`:astToFormula(leftOperation);}
function rightOperandToFormula(operationAST){const mainOperator=operationAST.value;const rightOperation="right"in operationAST?operationAST.right:operationAST.operand;const rightPriority=OP_PRIORITY[rightOperation.value];const mainPriority=OP_PRIORITY[mainOperator];let needParenthesis=false;if(rightOperation.type!=="BIN_OPERATION"){needParenthesis=false;}
else if(rightPriority<mainPriority){needParenthesis=true;}
else if(rightPriority===mainPriority&&!ASSOCIATIVE_OPERATORS.includes(mainOperator)){needParenthesis=true;}
return needParenthesis?`(${astToFormula(rightOperation)})`:astToFormula(rightOperation);}
function enrichTokens(tokens){let current=0;return tokens.map((x)=>{const len=x.value.toString().length;const token=Object.assign({},x,{start:current,end:current+len,length:len,});current=token.end;return token;});}
function mapParenthesisCode(tokens){const code=[];let nextLevel=0;return tokens.map((token,i)=>{if(token.type==="LEFT_PAREN"){code.push(nextLevel+1);nextLevel=0;for(let previousIndex=i-1;previousIndex>=0;previousIndex--){if(tokens[previousIndex].type==="SPACE"){tokens[previousIndex].parenthesesCode=code.join(":");continue;}
if(tokens[previousIndex].type==="SYMBOL"){tokens[previousIndex].parenthesesCode=code.join(":");}
break;}}
token.parenthesesCode=code.join(":");if(token.type==="RIGHT_PAREN"&&code.length){nextLevel=code.pop();}
return token;});}
function mapParentFunction(tokens){const stack=[];let functionStarted="";function pushTokenToFunctionContext(token){if(stack.length===0){return;}
const functionContext=stack.at(-1);if(functionContext&&functionContext.argsTokens){const{argsTokens,argPosition}=functionContext;if(!argsTokens[argPosition]){argsTokens[argPosition]=[];}
argsTokens[argPosition].push({value:token.value,type:token.type});}}
return tokens.map((token,i)=>{if(!["SPACE","LEFT_PAREN"].includes(token.type)){functionStarted="";}
switch(token.type){case"SYMBOL":pushTokenToFunctionContext(token);functionStarted=token.value;break;case"LEFT_PAREN":stack.push({parent:functionStarted,argPosition:0,argsTokens:[],args:[]});pushTokenToFunctionContext(token);functionStarted="";break;case"RIGHT_PAREN":const child=stack.pop();child?.argsTokens?.flat().forEach(pushTokenToFunctionContext);pushTokenToFunctionContext(token);break;case"ARG_SEPARATOR":if(stack.length){stack[stack.length-1].argPosition++;}
pushTokenToFunctionContext(token);break;default:pushTokenToFunctionContext(token);break;}
if(stack.length){const functionContext=stack[stack.length-1];if(functionContext.parent){token.functionContext=Object.assign({},functionContext);}}
return token;});}
function addArgsAST(tokens){for(const token of tokens){if(token.functionContext){const{argsTokens,args}=token.functionContext;delete token.functionContext.argsTokens;if(args.length||!argsTokens){continue;}
if(argsTokens[0]?.[0]?.type==="LEFT_PAREN"){argsTokens[0]=argsTokens[0].slice(1);}
for(const argTokens of argsTokens){let tokens=argTokens;if(tokens.at(0)?.type==="ARG_SEPARATOR"){tokens=tokens.slice(1);}
try{args.push(parseTokens(tokens));}
catch(error){args.push(undefined);}}}}
return tokens;}
function composerTokenize(formula,locale){const tokens=rangeTokenize(formula,locale);return addArgsAST(mapParentFunction(mapParenthesisCode(enrichTokens(tokens))));}
function loopThroughReferenceType(token){if(token.type!=="REFERENCE")
return token;const{xc,sheetName}=splitReference(token.value);const[left,right]=xc.split(":");const updatedLeft=getTokenNextReferenceType(left);const updatedRight=right?`:${getTokenNextReferenceType(right)}`:"";return{...token,value:getFullReference(sheetName,updatedLeft+updatedRight)};}
function getTokenNextReferenceType(xc){switch(getReferenceType(xc)){case"none":xc=setXcToFixedReferenceType(xc,"colrow");break;case"colrow":xc=setXcToFixedReferenceType(xc,"row");break;case"row":xc=setXcToFixedReferenceType(xc,"col");break;case"col":xc=setXcToFixedReferenceType(xc,"none");break;}
return xc;}
function setXcToFixedReferenceType(xc,referenceType){let sheetName;({sheetName,xc}=splitReference(xc));sheetName=sheetName?sheetName+"!":"";xc=xc.replace(/\$/g,"");const splitIndex=xc.indexOf(":");if(splitIndex>=0){return`${sheetName}${_setXcToFixedReferenceType(xc.slice(0, splitIndex), referenceType)}:${_setXcToFixedReferenceType(xc.slice(splitIndex + 1), referenceType)}`;}
else{return sheetName+_setXcToFixedReferenceType(xc,referenceType);}}
function _setXcToFixedReferenceType(xc,referenceType){const indexOfNumber=xc.search(/[0-9]/);const hasCol=indexOfNumber!==0;const hasRow=indexOfNumber>=0;switch(referenceType){case"col":if(!hasCol)
return xc;return"$"+xc;case"row":if(!hasRow)
return xc;return xc.slice(0,indexOfNumber)+"$"+xc.slice(indexOfNumber);case"colrow":if(!hasRow||!hasCol)
return"$"+xc;return"$"+xc.slice(0,indexOfNumber)+"$"+xc.slice(indexOfNumber);case"none":return xc;}}
function getReferenceType(xcCell){if(isColAndRowFixed(xcCell)){return"colrow";}
else if(isColFixed(xcCell)){return"col";}
else if(isRowFixed(xcCell)){return"row";}
return"none";}
function isColFixed(xc){return xc.startsWith("$");}
function isRowFixed(xc){return xc.includes("$",1);}
function isColAndRowFixed(xc){return xc.startsWith("$")&&xc.length>1&&xc.slice(1).includes("$");}
function cycleFixedReference(selection,content,locale){const currentTokens=content.startsWith("=")?composerTokenize(content,locale):[];const tokens=currentTokens.filter((t)=>(t.start<=selection.start&&t.end>=selection.start)||(t.start>=selection.start&&t.start<selection.end));const refTokens=tokens.filter((token)=>token.type==="REFERENCE");if(refTokens.length===0){return;}
const updatedReferences=tokens.map(loopThroughReferenceType).map((token)=>token.value).join("");const start=tokens[0].start;const end=tokens[tokens.length-1].end;const newContent=content.slice(0,start)+updatedReferences+content.slice(end);const lengthDiff=newContent.length-content.length;const startOfTokens=refTokens[0].start;const endOfTokens=refTokens[refTokens.length-1].end+lengthDiff;const newSelection={start:startOfTokens,end:endOfTokens};if(refTokens.length===1&&selection.start===selection.end){newSelection.start=newSelection.end;}
return{content:newContent,selection:newSelection};}
const CELL_INFO_TYPES=["address","col","contents","format","row","type"];const CELL={description:_t("Gets information about a cell."),args:[arg("info_type (string)",_t("The type of information requested. Can be one of %s",CELL_INFO_TYPES.join(", "))),arg("reference (meta)",_t("The reference to the cell.")),],compute:function(info,reference){const _info=toString(info).toLowerCase();if(!CELL_INFO_TYPES.includes(_info)){return new EvaluationError(_t("The info_type should be one of %s.",CELL_INFO_TYPES.join(", ")));}
const sheetId=this.__originSheetId;const _reference=toString(reference);const topLeftReference=_reference.includes(":")?_reference.split(":")[0]:_reference;let{sheetName,xc}=splitReference(topLeftReference);sheetName=sheetName===this.getters.getSheetName(sheetId)?undefined:sheetName;const fixedRef=getFullReference(sheetName,setXcToFixedReferenceType(xc,"colrow"));const range=this.getters.getRangeFromSheetXC(sheetId,fixedRef);switch(_info){case"address":return this.getters.getRangeString(range,sheetId);case"col":return range.zone.left+1;case"contents":{const position={sheetId:range.sheetId,col:range.zone.left,row:range.zone.top};return this.getters.getEvaluatedCell(position).value;}
case"format":{const position={sheetId:range.sheetId,col:range.zone.left,row:range.zone.top};return this.getters.getEvaluatedCell(position).format||"";}
case"row":return range.zone.top+1;case"type":{const position={sheetId:range.sheetId,col:range.zone.left,row:range.zone.top};const type=this.getters.getEvaluatedCell(position).type;if(type===CellValueType.empty){return"b";}
else if(type===CellValueType.text){return"l";}
else{return"v";}}}
return"";},isExported:true,};const ISERR={description:_t("Whether a value is an error other than #N/A."),args:[arg("value (any)",_t("The value to be verified as an error type."))],compute:function(data){const value=data?.value;return isEvaluationError(value)&&value!==CellErrorType.NotAvailable;},isExported:true,};const ISERROR={description:_t("Whether a value is an error."),args:[arg("value (any)",_t("The value to be verified as an error type."))],compute:function(data){const value=data?.value;return isEvaluationError(value);},isExported:true,};const ISLOGICAL={description:_t("Whether a value is `true` or `false`."),args:[arg("value (any)",_t("The value to be verified as a logical TRUE or FALSE."))],compute:function(value){return typeof value?.value==="boolean";},isExported:true,};const ISNA={description:_t("Whether a value is the error #N/A."),args:[arg("value (any)",_t("The value to be verified as an error type."))],compute:function(data){return data?.value===CellErrorType.NotAvailable;},isExported:true,};const ISNONTEXT={description:_t("Whether a value is non-textual."),args:[arg("value (any)",_t("The value to be checked."))],compute:function(value){return!ISTEXT.compute.bind(this)(value);},isExported:true,};const ISNUMBER={description:_t("Whether a value is a number."),args:[arg("value (any)",_t("The value to be verified as a number."))],compute:function(value){return typeof value?.value==="number";},isExported:true,};const ISTEXT={description:_t("Whether a value is text."),args:[arg("value (any)",_t("The value to be verified as text."))],compute:function(value){return typeof value?.value==="string"&&isEvaluationError(value?.value)===false;},isExported:true,};const ISBLANK={description:_t("Whether the referenced cell is empty"),args:[arg("value (any)",_t("Reference to the cell that will be checked for emptiness."))],compute:function(value){return value?.value===null;},isExported:true,};const NA={description:_t("Returns the error value #N/A."),args:[],compute:function(){return{value:CellErrorType.NotAvailable};},isExported:true,};var info=Object.freeze({__proto__:null,CELL:CELL,ISBLANK:ISBLANK,ISERR:ISERR,ISERROR:ISERROR,ISLOGICAL:ISLOGICAL,ISNA:ISNA,ISNONTEXT:ISNONTEXT,ISNUMBER:ISNUMBER,ISTEXT:ISTEXT,NA:NA});const AND={description:_t("Logical `and` operator."),args:[arg("logical_expression1 (boolean, range<boolean>)",_t("An expression or reference to a cell containing an expression that represents some logical value, i.e. TRUE or FALSE, or an expression that can be coerced to a logical value.")),arg("logical_expression2 (boolean, range<boolean>, repeating)",_t("More expressions that represent logical values.")),],compute:function(...logicalExpressions){const{result,foundBoolean}=boolAnd(logicalExpressions);if(!foundBoolean){return new EvaluationError(_t("[[FUNCTION_NAME]] has no valid input data."));}
return result;},isExported:true,};const FALSE={description:_t("Logical value `false`."),args:[],compute:function(){return false;},isExported:true,};const IF={description:_t("Returns value depending on logical expression."),args:[arg("logical_expression (boolean, range<boolean>)",_t("An expression or reference to a cell containing an expression that represents some logical value, i.e. TRUE or FALSE.")),arg("value_if_true (any, range)",_t("The value the function returns if logical_expression is TRUE.")),arg("value_if_false (any, range, default=FALSE)",_t("The value the function returns if logical_expression is FALSE.")),],compute:function(logicalExpression,valueIfTrue,valueIfFalse){if(isMultipleElementMatrix(logicalExpression)){return applyVectorization(IF.compute,[logicalExpression,valueIfTrue,valueIfFalse]);}
const result=toBoolean(toScalar(logicalExpression))?valueIfTrue:valueIfFalse;return result??{value:0};},isExported:true,};const IFERROR={description:_t("Value if it is not an error, otherwise 2nd argument."),args:[arg("value (any, range)",_t("The value to return if value itself is not an error.")),arg(`value_if_error (any, range, default="empty")`,_t("The value the function returns if value is an error.")),],compute:function(value,valueIfError){if(isMultipleElementMatrix(value)){return applyVectorization(IFERROR.compute,[value,valueIfError]);}
const result=isEvaluationError(toScalar(value)?.value)?valueIfError:value;return result??{value:0};},isExported:true,};const IFNA={description:_t("Value if it is not an #N/A error, otherwise 2nd argument."),args:[arg("value (any, range)",_t("The value to return if value itself is not #N/A an error.")),arg(`value_if_error (any, range, default="empty")`,_t("The value the function returns if value is an #N/A error.")),],compute:function(value,valueIfError){if(isMultipleElementMatrix(value)){return applyVectorization(IFNA.compute,[value,valueIfError]);}
const result=toScalar(value)?.value===CellErrorType.NotAvailable?valueIfError:value;return result??{value:0};},isExported:true,};const IFS={description:_t("Returns a value depending on multiple logical expressions."),args:[arg("condition1 (boolean, range<boolean>)",_t("The first condition to be evaluated. This can be a boolean, a number, an array, or a reference to any of those.")),arg("value1 (any, range)",_t("The returned value if condition1 is TRUE.")),arg("condition2 (boolean, any, range, repeating)",_t("Additional conditions to be evaluated if the previous ones are FALSE.")),arg("value2 (any, range, repeating)",_t("Additional values to be returned if their corresponding conditions are TRUE.")),],compute:function(...values){if(values.length%2!==0){return new EvaluationError(_t("Wrong number of arguments. Expected an even number of arguments."));}
while(values.length>0){if(isMultipleElementMatrix(values[0])){return applyVectorization(IFS.compute,values);}
const condition=toBoolean(toScalar(values.shift()));const valueIfTrue=values.shift();if(condition){return valueIfTrue??{value:0};}}
return new EvaluationError(_t("No match."));},isExported:true,};const NOT={description:_t("Returns opposite of provided logical value."),args:[arg("logical_expression (boolean)",_t("An expression or reference to a cell holding an expression that represents some logical value.")),],compute:function(logicalExpression){return!toBoolean(logicalExpression);},isExported:true,};const OR={description:_t("Logical `or` operator."),args:[arg("logical_expression1 (boolean, range<boolean>)",_t("An expression or reference to a cell containing an expression that represents some logical value, i.e. TRUE or FALSE, or an expression that can be coerced to a logical value.")),arg("logical_expression2 (boolean, range<boolean>, repeating)",_t("More expressions that evaluate to logical values.")),],compute:function(...logicalExpressions){const{result,foundBoolean}=boolOr(logicalExpressions);if(!foundBoolean){return new EvaluationError(_t("[[FUNCTION_NAME]] has no valid input data."));}
return result;},isExported:true,};const SWITCH={description:_t("Returns a value by comparing cases to an expression."),args:[arg("expression (number, boolean, string)",_t("The value to be checked.")),arg("case1 (number, boolean, string)",_t("The first case to be checked against expression.")),arg("value1 (any)",_t("The corresponding value to be returned if case1 matches expression.")),arg("case2 (any, repeating)",_t("Additional cases to try if the previous ones don't match expression.")),arg("value2 (any, repeating)",_t("Additional values to be returned if their corresponding cases match expression.")),arg(`default (any, default="empty")`,_t("An optional default value to be returned if none of the cases match expression.")),],compute:function(expression,...casesAndValues){const defaultValue=casesAndValues.length%2===0?valueNotAvailable(expression):casesAndValues.pop();for(let i=0;i<casesAndValues.length;i+=2){const iCase=casesAndValues[i];if(iCase&&isEvaluationError(iCase.value)){return iCase;}
if(expression?.value===iCase?.value){return casesAndValues[i+1]||{value:0};}}
return defaultValue||{value:0};},isExported:true,};const TRUE={description:_t("Logical value `true`."),args:[],compute:function(){return true;},isExported:true,};const XOR={description:_t("Logical `xor` operator."),args:[arg("logical_expression1 (boolean, range<boolean>)",_t("An expression or reference to a cell containing an expression that represents some logical value, i.e. TRUE or FALSE, or an expression that can be coerced to a logical value.")),arg("logical_expression2 (boolean, range<boolean>, repeating)",_t("More expressions that evaluate to logical values.")),],compute:function(...logicalExpressions){let foundBoolean=false;let acc=false;conditionalVisitBoolean(logicalExpressions,(arg)=>{foundBoolean=true;acc=acc?!arg:arg;return true;});if(!foundBoolean){return new EvaluationError(_t("[[FUNCTION_NAME]] has no valid input data."));}
return acc;},isExported:true,};var logical=Object.freeze({__proto__:null,AND:AND,FALSE:FALSE,IF:IF,IFERROR:IFERROR,IFNA:IFNA,IFS:IFS,NOT:NOT,OR:OR,SWITCH:SWITCH,TRUE:TRUE,XOR:XOR});function getPivotId(pivotFormulaId,getters){const pivotId=getters.getPivotId(pivotFormulaId);if(!pivotId){throw new EvaluationError(_t('There is no pivot with id "%s"',pivotFormulaId));}
return pivotId;}
function assertMeasureExist(pivotId,measure,getters){const{measures}=getters.getPivotCoreDefinition(pivotId);if(!measures.find((m)=>m.id===measure)){const validMeasures=`(${measures.map((m) => m.id).join(", ")})`;throw new EvaluationError(_t("The argument %s is not a valid measure. Here are the measures: %s",measure,validMeasures));}}
function assertDomainLength(domain){if(domain.length%2!==0){throw new EvaluationError(_t("Function PIVOT takes an even number of arguments."));}}
function addPivotDependencies(evalContext,coreDefinition,forMeasures){const dependencies=[];if(coreDefinition.type==="SPREADSHEET"&&coreDefinition.dataSet){const{sheetId,zone}=coreDefinition.dataSet;const xc=zoneToXc(zone);const range=evalContext.getters.getRangeFromSheetXC(sheetId,xc);if(range===undefined||range.invalidXc||range.invalidSheetName){throw new InvalidReferenceError();}
if(evalContext.__originCellPosition&&range.sheetId===evalContext.__originSheetId&&isZoneInside(positionToZone(evalContext.__originCellPosition),zone)){throw new CircularDependencyError();}
dependencies.push(range);}
for(const measure of forMeasures){if(measure.computedBy){const formula=evalContext.getters.getMeasureCompiledFormula(measure);dependencies.push(...formula.dependencies.filter((range)=>!range.invalidXc));}}
const originPosition=evalContext.__originCellPosition;if(originPosition&&dependencies.length){evalContext.updateDependencies?.(originPosition);evalContext.addDependencies?.(originPosition,dependencies);}}
const DEFAULT_IS_SORTED=true;const DEFAULT_MATCH_MODE=0;const DEFAULT_SEARCH_MODE=1;const DEFAULT_ABSOLUTE_RELATIVE_MODE=1;const ADDRESS={description:_t("Returns a cell reference as a string. "),args:[arg("row (number)",_t("The row number of the cell reference. ")),arg("column (number)",_t("The column number (not name) of the cell reference. A is column number 1. ")),arg(`absolute_relative_mode (number, default=${DEFAULT_ABSOLUTE_RELATIVE_MODE})`,_t("An indicator of whether the reference is row/column absolute. 1 is row and column absolute (e.g. $A$1), 2 is row absolute and column relative (e.g. A$1), 3 is row relative and column absolute (e.g. $A1), and 4 is row and column relative (e.g. A1).")),arg("use_a1_notation (boolean, default=TRUE)",_t("A boolean indicating whether to use A1 style notation (TRUE) or R1C1 style notation (FALSE).")),arg("sheet (string, optional)",_t("A string indicating the name of the sheet into which the address points.")),],compute:function(row,column,absoluteRelativeMode={value:DEFAULT_ABSOLUTE_RELATIVE_MODE},useA1Notation={value:true},sheet){const rowNumber=strictToInteger(row,this.locale);const colNumber=strictToInteger(column,this.locale);if(rowNumber<1){return new EvaluationError(expectNumberGreaterThanOrEqualToOne(rowNumber));}
if(colNumber<1){return new EvaluationError(expectNumberGreaterThanOrEqualToOne(colNumber));}
const _absoluteRelativeMode=strictToInteger(absoluteRelativeMode,this.locale);if(![1,2,3,4].includes(_absoluteRelativeMode)){return new EvaluationError(expectNumberRangeError(1,4,_absoluteRelativeMode));}
const _useA1Notation=toBoolean(useA1Notation);let cellReference;if(_useA1Notation){const rangePart={rowFixed:[1,2].includes(_absoluteRelativeMode),colFixed:[1,3].includes(_absoluteRelativeMode),};cellReference=toXC(colNumber-1,rowNumber-1,rangePart);}
else{const rowPart=[1,2].includes(_absoluteRelativeMode)?`R${rowNumber}`:`R[${rowNumber}]`;const colPart=[1,3].includes(_absoluteRelativeMode)?`C${colNumber}`:`C[${colNumber}]`;cellReference=rowPart+colPart;}
if(sheet!==undefined){return getFullReference(toString(sheet),cellReference);}
return cellReference;},isExported:true,};const COLUMN={description:_t("Column number of a specified cell."),args:[arg("cell_reference (meta, default='this cell')",_t("The cell whose column number will be returned. Column A corresponds to 1. By default, the function use the cell in which the formula is entered.")),],compute:function(cellReference){if(isEvaluationError(cellReference?.value)){return cellReference;}
const column=cellReference===undefined?this.__originCellPosition?.col:toZone(cellReference.value).left;if(column===undefined){return new EvaluationError(_t("In this context, the function [[FUNCTION_NAME]] needs to have a cell or range in parameter."));}
return column+1;},isExported:true,};const COLUMNS={description:_t("Number of columns in a specified array or range."),args:[arg("range (meta)",_t("The range whose column count will be returned."))],compute:function(range){if(isEvaluationError(range?.value)){return range;}
const zone=toZone(range.value);return zone.right-zone.left+1;},isExported:true,};const HLOOKUP={description:_t("Horizontal lookup"),args:[arg("search_key (string, number, boolean)",_t("The value to search for. For example, 42, 'Cats', or I24.")),arg("range (any, range)",_t("The range to consider for the search. The first row in the range is searched for the key specified in search_key.")),arg("index (number)",_t("The row index of the value to be returned, where the first row in range is numbered 1.")),arg(`is_sorted (boolean, default=${DEFAULT_IS_SORTED})`,_t("Indicates whether the row to be searched (the first row of the specified range) is sorted, in which case the closest match for search_key will be returned.")),],compute:function(searchKey,range,index,isSorted={value:DEFAULT_IS_SORTED}){const _index=Math.trunc(toNumber(index?.value,this.locale));const _range=toMatrix(range);if(1>_index||_index>_range[0].length){return new EvaluationError(_t("[[FUNCTION_NAME]] evaluates to an out of bounds range."));}
const getValueFromRange=(range,index)=>range[index][0].value;const _isSorted=toBoolean(isSorted.value);const colIndex=_isSorted?dichotomicSearch(_range,searchKey,"nextSmaller","asc",_range.length,getValueFromRange):linearSearch(_range,searchKey,"wildcard",_range.length,getValueFromRange,this.lookupCaches);const col=_range[colIndex];if(col===undefined){return valueNotAvailable(searchKey);}
return col[_index-1];},isExported:true,};const INDEX={description:_t("Returns the content of a cell, specified by row and column offset."),args:[arg("reference (any, range)",_t("The range of cells from which the values are returned.")),arg("row (number, default=0)",_t("The index of the row to be returned from within the reference range of cells.")),arg("column (number, default=0)",_t("The index of the column to be returned from within the reference range of cells.")),],compute:function(reference,row={value:0},column={value:0}){const _reference=toMatrix(reference);const _row=toNumber(row.value,this.locale);const _column=toNumber(column.value,this.locale);if(_column<0||_column-1>=_reference.length||_row<0||_row-1>=_reference[0].length){return new EvaluationError(_t("Index out of range."));}
if(_row===0&&_column===0){return _reference;}
if(_row===0){return[_reference[_column-1]];}
if(_column===0){return _reference.map((col)=>[col[_row-1]]);}
return _reference[_column-1][_row-1];},isExported:true,};const INDIRECT={description:_t("Returns the content of a cell, specified by a string."),args:[arg("reference (string)",_t("The range of cells from which the values are returned.")),arg("use_a1_notation (boolean, default=TRUE)",_t("A boolean indicating whether to use A1 style notation (TRUE) or R1C1 style notation (FALSE).")),],compute:function(reference,useA1Notation={value:true}){const _reference=reference?.value?.toString();if(!_reference){return new InvalidReferenceError(_t("Reference should be defined."));}
const _useA1Notation=toBoolean(useA1Notation);if(!_useA1Notation){return new EvaluationError(_t("R1C1 notation is not supported."));}
const sheetId=this.__originSheetId;const originPosition=this.__originCellPosition;if(originPosition){this.updateDependencies?.(originPosition);}
const range=this.getters.getRangeFromSheetXC(sheetId,_reference);if(range===undefined||range.invalidXc||range.invalidSheetName){return new InvalidReferenceError();}
if(originPosition){this.addDependencies?.(originPosition,[range]);}
const values=[];for(let col=range.zone.left;col<=range.zone.right;col++){const colValues=[];for(let row=range.zone.top;row<=range.zone.bottom;row++){const position={sheetId:range.sheetId,col,row};colValues.push(this.getters.getEvaluatedCell(position));}
values.push(colValues);}
return values.length===1&&values[0].length===1?values[0][0]:values;},isExported:true,};const LOOKUP={description:_t("Look up a value."),args:[arg("search_key (string, number, boolean)",_t("The value to search for. For example, 42, 'Cats', or I24.")),arg("search_array (any, range)",_t("One method of using this function is to provide a single sorted row or column search_array to look through for the search_key with a second argument result_range. The other way is to combine these two arguments into one search_array where the first row or column is searched and a value is returned from the last row or column in the array. If search_key is not found, a non-exact match may be returned.")),arg("result_range (any, range, optional)",_t("The range from which to return a result. The value returned corresponds to the location where search_key is found in search_range. This range must be only a single row or column and should not be used if using the search_result_array method.")),],compute:function(searchKey,searchArray,resultRange){const _searchArray=toMatrix(searchArray);const _resultRange=toMatrix(resultRange);let nbCol=_searchArray.length;let nbRow=_searchArray[0].length;const verticalSearch=nbRow>=nbCol;const getElement=verticalSearch?(range,index)=>range[0][index].value:(range,index)=>range[index][0].value;const rangeLength=verticalSearch?nbRow:nbCol;const index=dichotomicSearch(_searchArray,searchKey,"nextSmaller","asc",rangeLength,getElement);if(index===-1||(verticalSearch&&_searchArray[0][index]===undefined)||(!verticalSearch&&_searchArray[index][nbRow-1]===undefined)){return valueNotAvailable(searchKey);}
if(_resultRange[0].length===0){return verticalSearch?_searchArray[nbCol-1][index]:_searchArray[index][nbRow-1];}
nbCol=_resultRange.length;nbRow=_resultRange[0].length;if(nbCol!==1&&nbRow!==1){return new EvaluationError(_t("The result_range must be a single row or a single column."));}
if(nbCol>1){if(index>nbCol-1){return new EvaluationError(_t("[[FUNCTION_NAME]] evaluates to an out of range row value %s.",index+1));}
return _resultRange[index][0];}
if(index>nbRow-1){return new EvaluationError(_t("[[FUNCTION_NAME]] evaluates to an out of range column value %s.",index+1));}
return _resultRange[0][index];},isExported:true,};const DEFAULT_SEARCH_TYPE=1;const MATCH={description:_t("Position of item in range that matches value."),args:[arg("search_key (string, number, boolean)",_t("The value to search for. For example, 42, 'Cats', or I24.")),arg("range (any, range)",_t("The one-dimensional array to be searched.")),arg(`search_type (number, default=${DEFAULT_SEARCH_TYPE})`,_t("The search method. 1 (default) finds the largest value less than or equal to search_key when range is sorted in ascending order. 0 finds the exact value when range is unsorted. -1 finds the smallest value greater than or equal to search_key when range is sorted in descending order.")),],compute:function(searchKey,range,searchType={value:DEFAULT_SEARCH_TYPE}){let _searchType=toNumber(searchType,this.locale);const _range=toMatrix(range);const nbCol=_range.length;const nbRow=_range[0].length;if(nbCol!==1&&nbRow!==1){return new EvaluationError(_t("The range must be a single row or a single column."));}
let index=-1;const getElement=nbCol===1?(_range,index)=>_range[0][index].value:(_range,index)=>_range[index][0].value;const rangeLen=nbCol===1?_range[0].length:_range.length;_searchType=Math.sign(_searchType);switch(_searchType){case 1:index=dichotomicSearch(_range,searchKey,"nextSmaller","asc",rangeLen,getElement);break;case 0:index=linearSearch(_range,searchKey,"wildcard",rangeLen,getElement,this.lookupCaches);break;case-1:index=dichotomicSearch(_range,searchKey,"nextGreater","desc",rangeLen,getElement);break;}
if((nbCol===1&&_range[0][index]===undefined)||(nbCol!==1&&_range[index]===undefined)){return valueNotAvailable(searchKey);}
return index+1;},isExported:true,};const ROW={description:_t("Row number of a specified cell."),args:[arg("cell_reference (meta, default='this cell')",_t("The cell whose row number will be returned. By default, this function uses the cell in which the formula is entered.")),],compute:function(cellReference){if(isEvaluationError(cellReference?.value)){return cellReference;}
const row=cellReference===undefined?this.__originCellPosition?.row:toZone(cellReference.value).top;if(row===undefined){return new EvaluationError(_t("In this context, the function [[FUNCTION_NAME]] needs to have a cell or range in parameter."));}
return row+1;},isExported:true,};const ROWS={description:_t("Number of rows in a specified array or range."),args:[arg("range (meta)",_t("The range whose row count will be returned."))],compute:function(range){if(isEvaluationError(range?.value)){return range;}
const zone=toZone(range.value);return zone.bottom-zone.top+1;},isExported:true,};const VLOOKUP={description:_t("Vertical lookup."),args:[arg("search_key (string, number, boolean)",_t("The value to search for. For example, 42, 'Cats', or I24.")),arg("range (any, range)",_t("The range to consider for the search. The first column in the range is searched for the key specified in search_key.")),arg("index (number)",_t("The column index of the value to be returned, where the first column in range is numbered 1.")),arg(`is_sorted (boolean, default=${DEFAULT_IS_SORTED})`,_t("Indicates whether the column to be searched (the first column of the specified range) is sorted, in which case the closest match for search_key will be returned.")),],compute:function(searchKey,range,index,isSorted={value:DEFAULT_IS_SORTED}){const _index=Math.trunc(toNumber(index?.value,this.locale));const _range=toMatrix(range);if(1>_index||_index>_range.length){return new EvaluationError(_t("[[FUNCTION_NAME]] evaluates to an out of bounds range."));}
const getValueFromRange=(range,index)=>range[0][index].value;const _isSorted=toBoolean(isSorted.value);const rowIndex=_isSorted?dichotomicSearch(_range,searchKey,"nextSmaller","asc",_range[0].length,getValueFromRange):linearSearch(_range,searchKey,"wildcard",_range[0].length,getValueFromRange,this.lookupCaches);const value=_range[_index-1][rowIndex];if(value===undefined){return valueNotAvailable(searchKey);}
return value;},isExported:true,};const MATCH_MODE={"0":"strict","1":"nextGreater","-1":"nextSmaller","2":"wildcard",};const XLOOKUP={description:_t("Search a range for a match and return the corresponding item from a second range."),args:[arg("search_key (string,number,boolean)",_t("The value to search for.")),arg("lookup_range (any, range)",_t("The range to consider for the search. Should be a single column or a single row.")),arg("return_range (any, range)",_t("The range containing the return value. Should have the same dimensions as lookup_range.")),arg("if_not_found (any, optional)",_t("If a valid match is not found, return this value.")),arg(`match_mode (any, default=${DEFAULT_MATCH_MODE})`,_t("(0) Exact match. \
        (-1) Return next smaller item if no match. \
        (1) Return next greater item if no match. \
        (2) Wildcard match.")),arg(`search_mode (any, default=${DEFAULT_SEARCH_MODE})`,_t("(1) Search starting at first item. \
      (-1) Search starting at last item. \
      (2) Perform a binary search that relies on lookup_array being sorted in ascending order. If not sorted, invalid results will be returned. \
      (-2) Perform a binary search that relies on lookup_array being sorted in descending order. If not sorted, invalid results will be returned.\
      ")),],compute:function(searchKey,lookupRange,returnRange,defaultValue,matchMode={value:DEFAULT_MATCH_MODE},searchMode={value:DEFAULT_SEARCH_MODE}){const _matchMode=Math.trunc(toNumber(matchMode.value,this.locale));const _searchMode=Math.trunc(toNumber(searchMode.value,this.locale));const _lookupRange=toMatrix(lookupRange);const _returnRange=toMatrix(returnRange);if(_lookupRange.length!==1&&_lookupRange[0].length!==1){return new EvaluationError(_t("lookup_range should be either a single row or single column."));}
if(![1,-1,2,-2].includes(_searchMode)){return new EvaluationError(_t("search_mode should be a value in [-1, 1, -2, 2]."));}
if(![-1,0,1,2].includes(_matchMode)){return new EvaluationError(_t("match_mode should be a value in [-1, 0, 1, 2]."));}
const lookupDirection=_lookupRange.length===1?"col":"row";if(_matchMode===2&&[-2,2].includes(_searchMode)){return new EvaluationError(_t("The search and match mode combination is not supported for XLOOKUP evaluation."));}
if(lookupDirection==="col"?_returnRange[0].length!==_lookupRange[0].length:_returnRange.length!==_lookupRange.length){return new EvaluationError(_t("return_range should have the same dimensions as lookup_range."));}
const getElement=lookupDirection==="col"?(range,index)=>range[0][index].value:(range,index)=>range[index][0].value;const rangeLen=lookupDirection==="col"?_lookupRange[0].length:_lookupRange.length;const mode=MATCH_MODE[_matchMode];const reverseSearch=_searchMode===-1;const index=_searchMode===2||_searchMode===-2?dichotomicSearch(_lookupRange,searchKey,mode,_searchMode===2?"asc":"desc",rangeLen,getElement):linearSearch(_lookupRange,searchKey,mode,rangeLen,getElement,this.lookupCaches,reverseSearch);if(index!==-1){return lookupDirection==="col"?_returnRange.map((col)=>[col[index]]):[_returnRange[index]];}
if(defaultValue===undefined){return valueNotAvailable(searchKey);}
return[[defaultValue]];},isExported:true,};const PIVOT_VALUE={description:_t("Get the value from a pivot."),args:[arg("pivot_id (number,string)",_t("ID of the pivot.")),arg("measure_name (string)",_t("Name of the measure.")),arg("domain_field_name (string,repeating)",_t("Field name.")),arg("domain_value (number,string,boolean,repeating)",_t("Value.")),],compute:function(formulaId,measureName,...domainArgs){const _pivotFormulaId=toString(formulaId);const _measure=toString(measureName);const pivotId=getPivotId(_pivotFormulaId,this.getters);assertMeasureExist(pivotId,_measure,this.getters);assertDomainLength(domainArgs);const pivot=this.getters.getPivot(pivotId);const coreDefinition=this.getters.getPivotCoreDefinition(pivotId);addPivotDependencies(this,coreDefinition,coreDefinition.measures.filter((m)=>m.id===_measure));pivot.init({reload:pivot.needsReevaluation});const error=pivot.assertIsValid({throwOnError:false});if(error){return error;}
if(!pivot.areDomainArgsFieldsValid(domainArgs)){const suggestion=_t("Consider using a dynamic pivot formula: %s. Or re-insert the static pivot from the Data menu.",`=PIVOT(${_pivotFormulaId})`);return{value:CellErrorType.GenericError,message:_t("Dimensions don't match the pivot definition")+". "+suggestion,};}
const domain=pivot.parseArgsToPivotDomain(domainArgs);if(this.getters.getActiveSheetId()===this.__originSheetId){this.getters.getPivotPresenceTracker(pivotId)?.trackValue(_measure,domain);}
return pivot.getPivotCellValueAndFormat(_measure,domain);},};const PIVOT_HEADER={description:_t("Get the header of a pivot."),args:[arg("pivot_id (number,string)",_t("ID of the pivot.")),arg("domain_field_name (string,repeating)",_t("Field name.")),arg("domain_value (number,string,value,repeating)",_t("Value.")),],compute:function(pivotId,...domainArgs){const _pivotFormulaId=toString(pivotId);const _pivotId=getPivotId(_pivotFormulaId,this.getters);assertDomainLength(domainArgs);const pivot=this.getters.getPivot(_pivotId);const coreDefinition=this.getters.getPivotCoreDefinition(_pivotId);addPivotDependencies(this,coreDefinition,[]);pivot.init({reload:pivot.needsReevaluation});const error=pivot.assertIsValid({throwOnError:false});if(error){return error;}
if(!pivot.areDomainArgsFieldsValid(domainArgs)){const suggestion=_t("Consider using a dynamic pivot formula: %s. Or re-insert the static pivot from the Data menu.",`=PIVOT(${_pivotFormulaId})`);return{value:CellErrorType.GenericError,message:_t("Dimensions don't match the pivot definition")+". "+suggestion,};}
const domain=pivot.parseArgsToPivotDomain(domainArgs);if(this.getters.getActiveSheetId()===this.__originSheetId){this.getters.getPivotPresenceTracker(_pivotId)?.trackHeader(domain);}
const lastNode=domain.at(-1);if(lastNode?.field==="measure"){return pivot.getPivotMeasureValue(toString(lastNode.value),domain);}
const{value,format}=pivot.getPivotHeaderValueAndFormat(domain);return{value,format:!lastNode||lastNode.field==="measure"||lastNode.value==="false"?undefined:format,};},};const PIVOT={description:_t("Get a pivot table."),args:[arg("pivot_id (string)",_t("ID of the pivot.")),arg("row_count (number, optional)",_t("number of rows")),arg("include_total (boolean, default=TRUE)",_t("Whether to include total/sub-totals or not.")),arg("include_column_titles (boolean, default=TRUE)",_t("Whether to include the column titles or not.")),arg("column_count (number, optional)",_t("number of columns")),arg("include_measure_titles (boolean, default=TRUE)",_t("Whether to include the measure titles row or not.")),],compute:function(pivotFormulaId,rowCount={value:10000},includeTotal={value:true},includeColumnHeaders={value:true},columnCount={value:Number.MAX_VALUE},includeMeasureTitles={value:true}){const _pivotFormulaId=toString(pivotFormulaId);const _rowCount=toNumber(rowCount,this.locale);if(_rowCount<0){return new EvaluationError(_t("The number of rows must be positive."));}
const _columnCount=toNumber(columnCount,this.locale);if(_columnCount<0){return new EvaluationError(_t("The number of columns must be positive."));}
const visibilityOptions={displayColumnHeaders:toBoolean(includeColumnHeaders),displayTotals:toBoolean(includeTotal),displayMeasuresRow:toBoolean(includeMeasureTitles),};const pivotId=getPivotId(_pivotFormulaId,this.getters);const pivot=this.getters.getPivot(pivotId);const coreDefinition=this.getters.getPivotCoreDefinition(pivotId);addPivotDependencies(this,coreDefinition,coreDefinition.measures);pivot.init({reload:pivot.needsReevaluation});const error=pivot.assertIsValid({throwOnError:false});if(error){return error;}
const table=pivot.getCollapsedTableStructure();const cells=table.getPivotCells(visibilityOptions);let headerRows=0;if(visibilityOptions.displayColumnHeaders){headerRows=table.columns.length-1;}
if(visibilityOptions.displayMeasuresRow){headerRows++;}
const pivotTitle=this.getters.getPivotName(pivotId);const tableHeight=Math.min(headerRows+_rowCount,cells[0].length);if(tableHeight===0){return[[{value:pivotTitle}]];}
const tableWidth=Math.min(1+_columnCount,cells.length);const result=[];for(const col of range(0,tableWidth)){result[col]=[];for(const row of range(0,tableHeight)){const pivotCell=cells[col][row];switch(pivotCell.type){case"EMPTY":result[col].push({value:""});break;case"HEADER":const valueAndFormat=pivot.getPivotHeaderValueAndFormat(pivotCell.domain);result[col].push(addAlignFormatToPivotHeader(pivotCell.domain,valueAndFormat));break;case"MEASURE_HEADER":result[col].push(pivot.getPivotMeasureValue(pivotCell.measure,pivotCell.domain));break;case"VALUE":result[col].push(pivot.getPivotCellValueAndFormat(pivotCell.measure,pivotCell.domain));break;}}}
if(visibilityOptions.displayColumnHeaders||visibilityOptions.displayMeasuresRow){result[0][0]={value:pivotTitle};}
return result;},};const OFFSET={description:_t("Returns a range reference shifted by a specified number of rows and columns from a starting cell reference."),args:[arg("cell_reference (meta)",_t("The starting point from which to count the offset rows and columns.")),arg("offset_rows (number)",_t("The number of rows to offset by.")),arg("offset_columns (number)",_t("The number of columns to offset by.")),arg("height (number, default='height of cell_reference')",_t("The number of rows of the range to return starting at the offset target.")),arg("width (number, default='width of cell_reference')",_t("The number of columns of the range to return starting at the offset target.")),],compute:function(cellReference,offsetRows,offsetColumns,height,width){if(isEvaluationError(cellReference?.value)){return cellReference;}
const _cellReference=cellReference?.value;if(!_cellReference){return new EvaluationError("In this context, the function OFFSET needs to have a cell or range in parameter.");}
const zone=toZone(_cellReference);let offsetHeight=zone.bottom-zone.top+1;let offsetWidth=zone.right-zone.left+1;if(height){const _height=toNumber(height,this.locale);if(_height<1){return new EvaluationError(_t("Height value is %(_height)s. It should be greater than or equal to 1.",{_height}));}
offsetHeight=_height;}
if(width){const _width=toNumber(width,this.locale);if(_width<1){return new EvaluationError(_t("Width value is %(_width)s. It should be greater than or equal to 1.",{_width}));}
offsetWidth=_width;}
const{sheetName}=splitReference(_cellReference);const sheetId=(sheetName&&this.getters.getSheetIdByName(sheetName))||this.getters.getActiveSheetId();const _offsetRows=toNumber(offsetRows,this.locale);const _offsetColumns=toNumber(offsetColumns,this.locale);const originPosition=this.__originCellPosition;if(originPosition){this.updateDependencies?.(originPosition);}
const startingCol=zone.left+_offsetColumns;const startingRow=zone.top+_offsetRows;if(startingCol<0||startingRow<0){return new InvalidReferenceError(_t("OFFSET evaluates to an out of bounds range."));}
const dependencyZone={left:startingCol,top:startingRow,right:startingCol+offsetWidth-1,bottom:startingRow+offsetHeight-1,};const range=this.getters.getRangeFromZone(this.__originSheetId,dependencyZone);if(range.invalidXc||range.invalidSheetName){return new InvalidReferenceError();}
if(originPosition){this.addDependencies?.(originPosition,[range]);}
return generateMatrix(offsetWidth,offsetHeight,(col,row)=>this.getters.getEvaluatedCell({sheetId,col:startingCol+col,row:startingRow+row,}));},};var lookup=Object.freeze({__proto__:null,ADDRESS:ADDRESS,COLUMN:COLUMN,COLUMNS:COLUMNS,HLOOKUP:HLOOKUP,INDEX:INDEX,INDIRECT:INDIRECT,LOOKUP:LOOKUP,MATCH:MATCH,OFFSET:OFFSET,PIVOT:PIVOT,PIVOT_HEADER:PIVOT_HEADER,PIVOT_VALUE:PIVOT_VALUE,ROW:ROW,ROWS:ROWS,VLOOKUP:VLOOKUP,XLOOKUP:XLOOKUP});const ADD={description:_t("Sum of two numbers."),args:[arg("value1 (number)",_t("The first addend.")),arg("value2 (number)",_t("The second addend.")),],compute:function(value1,value2){return{value:toNumber(value1,this.locale)+toNumber(value2,this.locale),format:value1?.format||value2?.format,};},};const CONCAT={description:_t("Concatenation of two values."),args:[arg("value1 (string)",_t("The value to which value2 will be appended.")),arg("value2 (string)",_t("The value to append to value1.")),],compute:function(value1,value2){return toString(value1)+toString(value2);},isExported:true,};const DIVIDE={description:_t("One number divided by another."),args:[arg("dividend (number)",_t("The number to be divided.")),arg("divisor (number)",_t("The number to divide by.")),],compute:function(dividend,divisor){const _divisor=toNumber(divisor,this.locale);if(_divisor===0){return new DivisionByZeroError(_t("The divisor must be different from zero."));}
return{value:toNumber(dividend,this.locale)/_divisor,format:dividend?.format||divisor?.format,};},};function isEmpty(data){return data===undefined||data.value===null;}
const getNeutral={number:0,string:"",boolean:false};function areAlmostEqual(value1,value2,epsilon=2e-16){return Math.abs(value1-value2)<epsilon;}
const EQ={description:_t("Equal."),args:[arg("value1 (string, number, boolean)",_t("The first value.")),arg("value2 (string, number, boolean)",_t("The value to test against value1 for equality.")),],compute:function(value1,value2){if(isEvaluationError(value1?.value)){return value1;}
if(isEvaluationError(value2?.value)){return value2;}
let _value1=isEmpty(value1)?getNeutral[typeof value2?.value]:value1?.value;let _value2=isEmpty(value2)?getNeutral[typeof value1?.value]:value2?.value;if(typeof _value1==="string"){_value1=_value1.toUpperCase();}
if(typeof _value2==="string"){_value2=_value2.toUpperCase();}
if(typeof _value1==="number"&&typeof _value2==="number"){return{value:areAlmostEqual(_value1,_value2)};}
return{value:_value1===_value2};},};function applyRelationalOperator(value1,value2,cb){if(isEvaluationError(value1?.value)){return value1;}
if(isEvaluationError(value2?.value)){return value2;}
let _value1=isEmpty(value1)?getNeutral[typeof value2?.value]:value1?.value;let _value2=isEmpty(value2)?getNeutral[typeof value1?.value]:value2?.value;if(typeof _value1!=="number"){_value1=toString(_value1).toUpperCase();}
if(typeof _value2!=="number"){_value2=toString(_value2).toUpperCase();}
const tV1=typeof _value1;const tV2=typeof _value2;if(tV1==="string"&&tV2==="number"){return{value:true};}
if(tV2==="string"&&tV1==="number"){return{value:false};}
return{value:cb(_value1,_value2)};}
const GT={description:_t("Strictly greater than."),args:[arg("value1 (number, string, boolean)",_t("The value to test as being greater than value2.")),arg("value2 (number, string, boolean)",_t("The second value.")),],compute:function(value1,value2){return applyRelationalOperator(value1,value2,(v1,v2)=>{if(typeof v1==="number"&&typeof v2==="number"){return!areAlmostEqual(v1,v2)&&v1>v2;}
return v1>v2;});},};const GTE={description:_t("Greater than or equal to."),args:[arg("value1 (number, string, boolean)",_t("The value to test as being greater than or equal to value2.")),arg("value2 (number, string, boolean)",_t("The second value.")),],compute:function(value1,value2){return applyRelationalOperator(value1,value2,(v1,v2)=>{if(typeof v1==="number"&&typeof v2==="number"){return areAlmostEqual(v1,v2)||v1>v2;}
return v1>=v2;});},};const LT={description:_t("Less than."),args:[arg("value1 (number, string, boolean)",_t("The value to test as being less than value2.")),arg("value2 (number, string, boolean)",_t("The second value.")),],compute:function(value1,value2){const result=GTE.compute.bind(this)(value1,value2);if(isEvaluationError(result.value)){return result;}
return{value:!result.value};},};const LTE={description:_t("Less than or equal to."),args:[arg("value1 (number, string, boolean)",_t("The value to test as being less than or equal to value2.")),arg("value2 (number, string, boolean)",_t("The second value.")),],compute:function(value1,value2){const result=GT.compute.bind(this)(value1,value2);if(isEvaluationError(result.value)){return result;}
return{value:!result.value};},};const MINUS={description:_t("Difference of two numbers."),args:[arg("value1 (number)",_t("The minuend, or number to be subtracted from.")),arg("value2 (number)",_t("The subtrahend, or number to subtract from value1.")),],compute:function(value1,value2){return{value:toNumber(value1,this.locale)-toNumber(value2,this.locale),format:value1?.format||value2?.format,};},};const MULTIPLY={description:_t("Product of two numbers"),args:[arg("factor1 (number)",_t("The first multiplicand.")),arg("factor2 (number)",_t("The second multiplicand.")),],compute:function(factor1,factor2){return{value:toNumber(factor1,this.locale)*toNumber(factor2,this.locale),format:factor1?.format||factor2?.format,};},};const NE={description:_t("Not equal."),args:[arg("value1 (string, number, boolean)",_t("The first value.")),arg("value2 (string, number, boolean)",_t("The value to test against value1 for inequality.")),],compute:function(value1,value2){const result=EQ.compute.bind(this)(value1,value2);if(isEvaluationError(result.value)){return result;}
return{value:!result.value};},};const POW={description:_t("A number raised to a power."),args:[arg("base (number)",_t("The number to raise to the exponent power.")),arg("exponent (number)",_t("The exponent to raise base to.")),],compute:function(base,exponent){return POWER.compute.bind(this)(base,exponent);},};const UMINUS={description:_t("A number with the sign reversed."),args:[arg("value (number)",_t("The number to have its sign reversed. Equivalently, the number to multiply by -1.")),],compute:function(value){return{value:-toNumber(value,this.locale),format:value?.format,};},};const UNARY_PERCENT={description:_t("Value interpreted as a percentage."),args:[arg("percentage (number)",_t("The value to interpret as a percentage."))],compute:function(percentage){return toNumber(percentage,this.locale)/100;},};const UPLUS={description:_t("A specified number, unchanged."),args:[arg("value (any)",_t("The number to return."))],compute:function(value={value:null}){return value;},};var operators=Object.freeze({__proto__:null,ADD:ADD,CONCAT:CONCAT,DIVIDE:DIVIDE,EQ:EQ,GT:GT,GTE:GTE,LT:LT,LTE:LTE,MINUS:MINUS,MULTIPLY:MULTIPLY,NE:NE,POW:POW,UMINUS:UMINUS,UNARY_PERCENT:UNARY_PERCENT,UPLUS:UPLUS});const transformFromFactor=(factor)=>({transform:(x)=>x*factor,inverseTransform:(x)=>x/factor,});const standard={transform:(x)=>x,inverseTransform:(x)=>x};const ANG2M=1e-10;const IN2M=0.0254;const PICAPT2M=IN2M/72;const FT2M=0.3048;const YD2M=0.9144;const MI2M=1609.34;const NMI2M=1852;const LY2M=9.46073047258e15;const UNITS={g:{...standard,category:"weight"},u:{...transformFromFactor(1.66053e-24),category:"weight"},grain:{...transformFromFactor(0.0647989),category:"weight"},ozm:{...transformFromFactor(28.3495),category:"weight"},lbm:{...transformFromFactor(453.592),category:"weight"},stone:{...transformFromFactor(6350.29),category:"weight"},sg:{...transformFromFactor(14593.90294),category:"weight"},cwt:{...transformFromFactor(45359.237),category:"weight"},uk_cwt:{...transformFromFactor(50802.3),category:"weight"},ton:{...transformFromFactor(907184.74),category:"weight"},uk_ton:{...transformFromFactor(1016046.9),category:"weight"},m:{...standard,category:"distance"},km:{...transformFromFactor(1000),category:"distance"},ang:{...transformFromFactor(ANG2M),category:"distance"},Picapt:{...transformFromFactor(PICAPT2M),category:"distance"},pica:{...transformFromFactor(IN2M/6),category:"distance"},in:{...transformFromFactor(IN2M),category:"distance"},ft:{...transformFromFactor(FT2M),category:"distance"},yd:{...transformFromFactor(YD2M),category:"distance"},ell:{...transformFromFactor(1.143),category:"distance"},mi:{...transformFromFactor(MI2M),category:"distance"},survey_mi:{...transformFromFactor(1609.34),category:"distance"},Nmi:{...transformFromFactor(NMI2M),category:"distance"},ly:{...transformFromFactor(LY2M),category:"distance"},parsec:{...transformFromFactor(3.0856775814914e16),category:"distance"},sec:{...standard,category:"time"},min:{...transformFromFactor(60),category:"time"},hr:{...transformFromFactor(3600),category:"time"},day:{...transformFromFactor(86400),category:"time"},yr:{...transformFromFactor(31556952),category:"time"},Pa:{...standard,category:"pressure"},bar:{...transformFromFactor(100000),category:"pressure"},mmHg:{...transformFromFactor(133.322),category:"pressure"},Torr:{...transformFromFactor(133.322),category:"pressure"},psi:{...transformFromFactor(6894.76),category:"pressure"},atm:{...transformFromFactor(101325),category:"pressure"},N:{...standard,category:"force"},dyn:{...transformFromFactor(1e-5),category:"force"},pond:{...transformFromFactor(0.00980665),category:"force"},lbf:{...transformFromFactor(4.44822),category:"force"},J:{...standard,category:"energy"},eV:{...transformFromFactor(1.60218e-19),category:"energy"},e:{...transformFromFactor(1e-7),category:"energy"},flb:{...transformFromFactor(1.3558179483),category:"energy"},c:{...transformFromFactor(4.184),category:"energy"},cal:{...transformFromFactor(4.1868),category:"energy"},BTU:{...transformFromFactor(1055.06),category:"energy"},Wh:{...transformFromFactor(3600),category:"energy"},HPh:{...transformFromFactor(2684520),category:"energy"},W:{...standard,category:"power"},PS:{...transformFromFactor(735.499),category:"power"},HP:{...transformFromFactor(745.7),category:"power"},T:{...standard,category:"magnetism"},ga:{...transformFromFactor(1e-4),category:"magnetism"},K:{...standard,category:"temperature"},C:{transform:(T)=>T+273.15,inverseTransform:(T)=>T-273.15,category:"temperature",},F:{transform:(T)=>((T-32)*5)/9+273.15,inverseTransform:(T)=>((T-273.15)*9)/5+32,category:"temperature",},Rank:{...transformFromFactor(5/9),category:"temperature"},Reau:{transform:(T)=>T*1.25+273.15,inverseTransform:(T)=>(T-273.15)/1.25,category:"temperature",},"m^3":{...standard,category:"volume",order:3},"ang^3":{...transformFromFactor(Math.pow(ANG2M,3)),category:"volume",order:3},"Picapt^3":{...transformFromFactor(Math.pow(PICAPT2M,3)),category:"volume",order:3},tsp:{...transformFromFactor(4.92892e-6),category:"volume"},tspm:{...transformFromFactor(5e-6),category:"volume"},tbs:{...transformFromFactor(1.4786764825785619e-5),category:"volume"},"in^3":{...transformFromFactor(Math.pow(IN2M,3)),category:"volume",order:3},oz:{...transformFromFactor(2.95735295625e-5),category:"volume"},cup:{...transformFromFactor(0.000237),category:"volume"},pt:{...transformFromFactor(0.0004731765),category:"volume"},uk_pt:{...transformFromFactor(0.000568261),category:"volume"},qt:{...transformFromFactor(0.0009463529),category:"volume"},l:{...transformFromFactor(1e-3),category:"volume"},uk_qt:{...transformFromFactor(0.0011365225),category:"volume"},gal:{...transformFromFactor(0.0037854118),category:"volume"},uk_gal:{...transformFromFactor(0.00454609),category:"volume"},"ft^3":{...transformFromFactor(Math.pow(FT2M,3)),category:"volume",order:3},bushel:{...transformFromFactor(0.0352390704),category:"volume"},barrel:{...transformFromFactor(0.158987295),category:"volume"},"yd^3":{...transformFromFactor(Math.pow(YD2M,3)),category:"volume",order:3},MTON:{...transformFromFactor(1.13267386368),category:"volume"},GRT:{...transformFromFactor(2.83168),category:"volume"},"mi^3":{...transformFromFactor(Math.pow(MI2M,3)),category:"volume",order:3},"Nmi^3":{...transformFromFactor(Math.pow(NMI2M,3)),category:"volume",order:3},"ly^3":{...transformFromFactor(Math.pow(LY2M,3)),category:"volume",order:3},"m^2":{...standard,category:"area",order:2},"ang^2":{...transformFromFactor(Math.pow(ANG2M,2)),category:"area",order:2},"Picapt^2":{...transformFromFactor(Math.pow(PICAPT2M,2)),category:"area",order:2},"in^2":{...transformFromFactor(Math.pow(IN2M,2)),category:"area",order:2},"ft^2":{...transformFromFactor(Math.pow(FT2M,2)),category:"area",order:2},"yd^2":{...transformFromFactor(Math.pow(YD2M,2)),category:"area",order:2},ar:{...transformFromFactor(100),category:"area"},Morgen:{...transformFromFactor(2500),category:"area"},uk_acre:{...transformFromFactor(4046.8564224),category:"area"},us_acre:{...transformFromFactor(4046.8726098743),category:"area"},ha:{...transformFromFactor(1e4),category:"area"},"mi^2":{...transformFromFactor(Math.pow(MI2M,2)),category:"area",order:2},"Nmi^2":{...transformFromFactor(Math.pow(NMI2M,2)),category:"area",order:2},"ly^2":{...transformFromFactor(Math.pow(LY2M,2)),category:"area",order:2},bit:{...standard,category:"information"},byte:{...transformFromFactor(8),category:"information"},"m/s":{...standard,category:"speed"},"m/hr":{...transformFromFactor(1/3600),category:"speed"},"km/hr":{...transformFromFactor(1/3.6),category:"speed"},mph:{...transformFromFactor(0.44704),category:"speed"},kn:{...transformFromFactor(0.5144444444),category:"speed"},admkn:{...transformFromFactor(0.5147733333),category:"speed"},};const UNITS_ALIASES={shweight:"cwt",lcwt:"uk_cwt",hweight:"uk_cwt",LTON:"uk_ton",brton:"uk_ton",pc:"parsec",Pica:"Picapt",d:"day",mn:"min",s:"sec",p:"Pa",at:"atm",dy:"dyn",ev:"eV",hh:"HPh",wh:"Wh",btu:"BTU",h:"HP",cel:"C",fah:"F",kel:"K",us_pt:"pt",L:"l",lt:"l",ang3:"ang^3",ft3:"ft^3",in3:"in^3",ly3:"ly^3",m3:"m^3",mi3:"mi^3",yd3:"yd^3",Nmi3:"Nmi^3",Picapt3:"Picapt^3","Pica^3":"Picapt^3",Pica3:"Picapt^3",regton:"GRT",ang2:"ang^2",ft2:"ft^2",in2:"in^2",ly2:"ly^2",m2:"m^2",mi2:"mi^2",Nmi2:"Nmi^2",Picapt2:"Picapt^2","Pica^2":"Picapt^2",Pica2:"Picapt^2",yd2:"yd^2","m/h":"m/hr","m/sec":"m/s",};const UNIT_PREFIXES={"":1,Y:1e24,Z:1e21,E:1e18,P:1e15,T:1e12,G:1e9,M:1e6,k:1e3,h:1e2,da:1e1,e:1e1,d:1e-1,c:1e-2,m:1e-3,u:1e-6,n:1e-9,p:1e-12,f:1e-15,a:1e-18,z:1e-21,y:1e-21,Yi:Math.pow(2,80),Zi:Math.pow(2,70),Ei:Math.pow(2,60),Pi:Math.pow(2,50),Ti:Math.pow(2,40),Gi:Math.pow(2,30),Mi:Math.pow(2,20),ki:Math.pow(2,10),};const TRANSLATED_CATEGORIES={weight:_t("Weight"),distance:_t("Distance"),time:_t("Time"),pressure:_t("Pressure"),force:_t("Force"),energy:_t("Energy"),power:_t("Power"),magnetism:_t("Magnetism"),temperature:_t("Temperature"),volume:_t("Volume"),area:_t("Area"),information:_t("Information"),speed:_t("Speed"),};function getTranslatedCategory(key){return TRANSLATED_CATEGORIES[key]??"";}
function getTransformation(key){for(const[prefix,value]of Object.entries(UNIT_PREFIXES)){if(prefix&&!key.startsWith(prefix))
continue;const _key=key.slice(prefix.length);let conversion=UNITS[_key];if(!conversion&&UNITS_ALIASES[_key]){conversion=UNITS[UNITS_ALIASES[_key]];}
if(conversion){return{...conversion,factor:conversion.order?Math.pow(value,conversion.order):value,};}}
return;}
const CONVERT={description:_t("Converts a numeric value to a different unit of measure."),args:[arg("value (number)",_t("the numeric value in start_unit to convert to end_unit")),arg("start_unit (string)",_t("The starting unit, the unit currently assigned to value")),arg("end_unit (string)",_t("The unit of measure into which to convert value")),],compute:function(value,startUnit,endUnit){const _value=toNumber(value,this.locale);const _startUnit=toString(startUnit);const _endUnit=toString(endUnit);const startConversion=getTransformation(_startUnit);const endConversion=getTransformation(_endUnit);if(!startConversion){return{value:CellErrorType.GenericError,message:_t("Invalid units of measure ('%s')",_startUnit),};}
if(!endConversion){return{value:CellErrorType.GenericError,message:_t("Invalid units of measure ('%s')",_endUnit),};}
if(startConversion.category!==endConversion.category){return{value:CellErrorType.GenericError,message:_t("Incompatible units of measure ('%s' vs '%s')",getTranslatedCategory(startConversion.category),getTranslatedCategory(endConversion.category)),};}
return{value:endConversion.inverseTransform(startConversion.factor*startConversion.transform(_value))/endConversion.factor,format:value?.format,};},isExported:true,};var parser=Object.freeze({__proto__:null,CONVERT:CONVERT});const DEFAULT_STARTING_AT=1;const wordRegex=/[A-Za-zÀ-ÖØ-öø-ÿ]+/g;const CHAR={description:_t("Gets character associated with number."),args:[arg("table_number (number)",_t("The number of the character to look up from the current Unicode table in decimal format.")),],compute:function(tableNumber){const _tableNumber=Math.trunc(toNumber(tableNumber,this.locale));if(_tableNumber<1){return new EvaluationError(_t("The table_number (%s) is out of range.",_tableNumber));}
return String.fromCharCode(_tableNumber);},isExported:true,};const CLEAN={description:_t("Remove non-printable characters from a piece of text."),args:[arg("text (string)",_t("The text whose non-printable characters are to be removed."))],compute:function(text){const _text=toString(text);let cleanedStr="";for(const char of _text){if(char&&char.charCodeAt(0)>31){cleanedStr+=char;}}
return cleanedStr;},isExported:true,};const CONCATENATE={description:_t("Appends strings to one another."),args:[arg("string1 (string, range<string>)",_t("The initial string.")),arg("string2 (string, range<string>, repeating)",_t("More strings to append in sequence.")),],compute:function(...datas){return reduceAny(datas,(acc,a)=>acc+toString(a),"");},isExported:true,};const EXACT={description:_t("Tests whether two strings are identical."),args:[arg("string1 (string)",_t("The first string to compare.")),arg("string2 (string)",_t("The second string to compare.")),],compute:function(string1,string2){return toString(string1)===toString(string2);},isExported:true,};const FIND={description:_t("First position of string found in text, case-sensitive."),args:[arg("search_for (string)",_t("The string to look for within text_to_search.")),arg("text_to_search (string)",_t("The text to search for the first occurrence of search_for.")),arg(`starting_at (number, default=${DEFAULT_STARTING_AT})`,_t("The character within text_to_search at which to start the search.")),],compute:function(searchFor,textToSearch,startingAt={value:DEFAULT_STARTING_AT}){const _searchFor=toString(searchFor);const _textToSearch=toString(textToSearch);const _startingAt=toNumber(startingAt,this.locale);if(_textToSearch===""){return new EvaluationError(_t("The text_to_search must be non-empty."));}
if(_startingAt<1){return new EvaluationError(_t("The starting_at (%s) must be greater than or equal to 1.",_startingAt));}
const result=_textToSearch.indexOf(_searchFor,_startingAt-1);if(result===-1){return new EvaluationError(_t("In [[FUNCTION_NAME]] evaluation, cannot find '%s' within '%s'.",_searchFor,_textToSearch));}
return result+1;},isExported:true,};const JOIN={description:_t("Concatenates elements of arrays with delimiter."),args:[arg("delimiter (string)",_t("The character or string to place between each concatenated value.")),arg("value_or_array1 (string, range<string>)",_t("The value or values to be appended using delimiter.")),arg("value_or_array2 (string, range<string>, repeating)",_t("More values to be appended using delimiter.")),],compute:function(delimiter,...valuesOrArrays){const _delimiter=toString(delimiter);return reduceAny(valuesOrArrays,(acc,a)=>(acc?acc+_delimiter:"")+toString(a),"");},};const LEFT={description:_t("Substring from beginning of specified string."),args:[arg("text (string)",_t("The string from which the left portion will be returned.")),arg("number_of_characters (number, optional)",_t("The number of characters to return from the left side of string.")),],compute:function(text,...args){const _numberOfCharacters=args.length?toNumber(args[0],this.locale):1;if(_numberOfCharacters<0){return new EvaluationError(_t("The number_of_characters (%s) must be positive or null.",_numberOfCharacters));}
return toString(text).substring(0,_numberOfCharacters);},isExported:true,};const LEN={description:_t("Length of a string."),args:[arg("text (string)",_t("The string whose length will be returned."))],compute:function(text){return toString(text).length;},isExported:true,};const LOWER={description:_t("Converts a specified string to lowercase."),args:[arg("text (string)",_t("The string to convert to lowercase."))],compute:function(text){return toString(text).toLowerCase();},isExported:true,};const MID={description:_t("A segment of a string."),args:[arg("text (string)",_t("The string to extract a segment from.")),arg("starting_at (number)",_t("The index from the left of string from which to begin extracting. The first character in string has the index 1.")),arg("extract_length (number)",_t("The length of the segment to extract.")),],compute:function(text,starting_at,extract_length){const _text=toString(text);const _starting_at=toNumber(starting_at,this.locale);const _extract_length=toNumber(extract_length,this.locale);if(_starting_at<1){return new EvaluationError(_t("The starting_at argument (%s) must be positive greater than one.",_starting_at.toString()));}
if(_extract_length<0){return new EvaluationError(_t("The extract_length argument (%s) must be positive or null.",_extract_length));}
return _text.slice(_starting_at-1,_starting_at+_extract_length-1);},isExported:true,};const PROPER={description:_t("Capitalizes each word in a specified string."),args:[arg("text_to_capitalize (string)",_t("The text which will be returned with the first letter of each word in uppercase and all other letters in lowercase.")),],compute:function(text){const _text=toString(text);return _text.replace(wordRegex,(word)=>{return word.charAt(0).toUpperCase()+word.slice(1).toLowerCase();});},isExported:true,};const REPLACE={description:_t("Replaces part of a text string with different text."),args:[arg("text (string)",_t("The text, a part of which will be replaced.")),arg("position (number)",_t("The position where the replacement will begin (starting from 1).")),arg("length (number)",_t("The number of characters in the text to be replaced.")),arg("new_text (string)",_t("The text which will be inserted into the original text.")),],compute:function(text,position,length,newText){const _position=toNumber(position,this.locale);if(_position<1){return new EvaluationError(_t("The position (%s) must be greater than or equal to 1.",_position));}
const _text=toString(text);const _length=toNumber(length,this.locale);const _newText=toString(newText);return _text.substring(0,_position-1)+_newText+_text.substring(_position-1+_length);},isExported:true,};const RIGHT={description:_t("A substring from the end of a specified string."),args:[arg("text (string)",_t("The string from which the right portion will be returned.")),arg("number_of_characters (number, optional)",_t("The number of characters to return from the right side of string.")),],compute:function(text,...args){const _numberOfCharacters=args.length?toNumber(args[0],this.locale):1;if(_numberOfCharacters<0){return new EvaluationError(_t("The number_of_characters (%s) must be positive or null.",_numberOfCharacters));}
const _text=toString(text);const stringLength=_text.length;return _text.substring(stringLength-_numberOfCharacters,stringLength);},isExported:true,};const SEARCH={description:_t("First position of string found in text, ignoring case."),args:[arg("search_for (string)",_t("The string to look for within text_to_search.")),arg("text_to_search (string)",_t("The text to search for the first occurrence of search_for.")),arg(`starting_at (number, default=${DEFAULT_STARTING_AT})`,_t("The character within text_to_search at which to start the search.")),],compute:function(searchFor,textToSearch,startingAt={value:DEFAULT_STARTING_AT}){const _searchFor=toString(searchFor).toLowerCase();const _textToSearch=toString(textToSearch).toLowerCase();const _startingAt=toNumber(startingAt,this.locale);if(_textToSearch===""){return{value:CellErrorType.GenericError,message:_t("The text_to_search must be non-empty."),};}
if(_startingAt<1){return{value:CellErrorType.GenericError,message:_t("The starting_at (%s) must be greater than or equal to 1.",_startingAt),};}
const result=_textToSearch.indexOf(_searchFor,_startingAt-1);if(result===-1){return{value:CellErrorType.GenericError,message:_t("In [[FUNCTION_NAME]] evaluation, cannot find '%s' within '%s'.",_searchFor,_textToSearch),};}
return{value:result+1};},isExported:true,};const SPLIT_DEFAULT_SPLIT_BY_EACH=true;const SPLIT_DEFAULT_REMOVE_EMPTY_TEXT=true;const SPLIT={description:_t("Split text by specific character delimiter(s)."),args:[arg("text (string)",_t("The text to divide.")),arg("delimiter (string)",_t("The character or characters to use to split text.")),arg(`split_by_each (boolean, default=${SPLIT_DEFAULT_SPLIT_BY_EACH}})`,_t("Whether or not to divide text around each character contained in delimiter.")),arg(`remove_empty_text (boolean, default=${SPLIT_DEFAULT_REMOVE_EMPTY_TEXT})`,_t("Whether or not to remove empty text messages from the split results. The default behavior is to treat \
        consecutive delimiters as one (if TRUE). If FALSE, empty cells values are added between consecutive delimiters.")),],compute:function(text,delimiter,splitByEach={value:SPLIT_DEFAULT_SPLIT_BY_EACH},removeEmptyText={value:SPLIT_DEFAULT_REMOVE_EMPTY_TEXT}){const _text=toString(text);const _delimiter=escapeRegExp(toString(delimiter));const _splitByEach=toBoolean(splitByEach);const _removeEmptyText=toBoolean(removeEmptyText);if(_delimiter.length<=0){return new EvaluationError(_t("The delimiter (%s) must be not be empty.",_delimiter));}
const regex=_splitByEach?new RegExp(`[${_delimiter}]`,"g"):new RegExp(_delimiter,"g");let result=_text.split(regex);if(_removeEmptyText){result=result.filter((text)=>text!=="");}
return transposeMatrix([result]);},isExported:false,};const SUBSTITUTE={description:_t("Replaces existing text with new text in a string."),args:[arg("text_to_search (string)",_t("The text within which to search and replace.")),arg("search_for (string)",_t("The string to search for within text_to_search.")),arg("replace_with (string)",_t("The string that will replace search_for.")),arg("occurrence_number (number, optional)",_t("The instance of search_for within text_to_search to replace with replace_with. By default, all occurrences of search_for are replaced; however, if occurrence_number is specified, only the indicated instance of search_for is replaced.")),],compute:function(textToSearch,searchFor,replaceWith,occurrenceNumber){const _occurrenceNumber=toNumber(occurrenceNumber,this.locale);if(_occurrenceNumber<0){return new EvaluationError(_t("The occurrenceNumber (%s) must be positive or null.",_occurrenceNumber));}
const _textToSearch=toString(textToSearch);const _searchFor=toString(searchFor);if(_searchFor===""){return _textToSearch;}
const _replaceWith=toString(replaceWith);const reg=new RegExp(escapeRegExp(_searchFor),"g");if(_occurrenceNumber===0){return _textToSearch.replace(reg,_replaceWith);}
let n=0;return _textToSearch.replace(reg,(text)=>(++n===_occurrenceNumber?_replaceWith:text));},isExported:true,};const TEXTJOIN={description:_t("Combines text from multiple strings and/or arrays."),args:[arg("delimiter (string)",_t(" A string, possible empty, or a reference to a valid string. If empty, the text will be simply concatenated.")),arg("ignore_empty (boolean)",_t("A boolean; if TRUE, empty cells selected in the text arguments won't be included in the result.")),arg("text1 (string, range<string>)",_t("Any text item. This could be a string, or an array of strings in a range.")),arg("text2 (string, range<string>, repeating)",_t("Additional text item(s).")),],compute:function(delimiter,ignoreEmpty,...textsOrArrays){const _delimiter=toString(delimiter);const _ignoreEmpty=toBoolean(ignoreEmpty);let n=0;return reduceAny(textsOrArrays,(acc,a)=>!(_ignoreEmpty&&toString(a)==="")?(n++?acc+_delimiter:"")+toString(a):acc,"");},isExported:true,};const TEXTSPLIT_DEFAULT_IGNORE_EMPTY=false;const TEXTSPLIT_DEFAULT_MATCH_MODE=0;const TEXTSPLIT={description:_t("Splits text into rows or columns using specified column and row delimiters."),args:[arg("text (string)",_t("The text to split.")),arg("col_delimiter (string, range<string>)",_t("Character or string to split columns by.")),arg("row_delimiter (string, range<string>, optional)",_t("Character or string to split rows by.")),arg(`ignore_empty (boolean, default=${TEXTSPLIT_DEFAULT_IGNORE_EMPTY})`,_t("Whether to ignore empty cells.")),arg(`match_mode (number, default=${TEXTSPLIT_DEFAULT_MATCH_MODE})`,_t("Searches the text for a delimiter match. 0 = case-sensitive, 1 = case-insensitive.")),arg(`pad_with (string, default="${CellErrorType.NotAvailable}")`,_t("The value to use for padding empty cells.")),],compute:function(text,colDelimiter,rowDelimiter,ignoreEmpty={value:TEXTSPLIT_DEFAULT_IGNORE_EMPTY},matchMode={value:TEXTSPLIT_DEFAULT_MATCH_MODE},padWith=new NotAvailableError()){const _text=toString(text);if(_text.length<=0){return new EvaluationError(_t("No text to split."));}
if(colDelimiter===undefined&&rowDelimiter===undefined){return new EvaluationError(_t("At least one delimiter must be provided."));}
const _colDelimiters=toMatrix(colDelimiter).flat().map((v)=>escapeRegExp(toString(v)));const _rowDelimiters=toMatrix(rowDelimiter).flat().map((v)=>escapeRegExp(toString(v)));if(_colDelimiters.some((v)=>v==="")||_rowDelimiters.some((v)=>v==="")){return new EvaluationError(_t("The delimiters cannot be empty values."));}
const _ignoreEmpty=toBoolean(ignoreEmpty);const _matchMode=toNumber(matchMode,this.locale);if(![0,1].includes(_matchMode)){return new EvaluationError(_t("match_mode should be a value of 0 or 1."));}
const cells=[];const regexpFlags=_matchMode===1?"gi":"g";const filteredRowDelimiters=_rowDelimiters.filter((delim)=>!_colDelimiters.includes(delim));let rowParts=filteredRowDelimiters.length?_text.split(new RegExp(filteredRowDelimiters.join("|"),regexpFlags)):[_text];if(_ignoreEmpty){rowParts=rowParts.filter((v)=>v!=="");}
const colRegexp=new RegExp(_colDelimiters.join("|"),regexpFlags);for(const rowText of rowParts){let columns=_colDelimiters.length?rowText.split(colRegexp):[rowText];if(_ignoreEmpty){columns=columns.filter((v)=>v!=="");}
cells.push(columns.map((value)=>({value})));}
const maxLength=Math.max(...cells.map((row)=>row.length));for(const row of cells){while(row.length<maxLength){row.push(padWith);}}
return transposeMatrix(cells);},isExported:true,};const TRIM={description:_t("Removes space characters."),args:[arg("text (string)",_t("The text or reference to a cell containing text to be trimmed.")),],compute:function(text){return trimContent(toString(text));},isExported:true,};const UPPER={description:_t("Converts a specified string to uppercase."),args:[arg("text (string)",_t("The string to convert to uppercase."))],compute:function(text){return toString(text).toUpperCase();},isExported:true,};const TEXT={description:_t("Converts a number to text according to a specified format."),args:[arg("number (number)",_t("The number, date or time to format.")),arg("format (string)",_t('The case-sensitive format of the result, enclosed in quotation marks. Examples: "0.00" rounded to 2 decimal places, "hh:mm:ss" for hour:minutes:seconds.')),],compute:function(number,format){const _number=toNumber(number,this.locale);return formatValue(_number,{format:toString(format),locale:this.locale});},isExported:true,};const VALUE={description:_t("Converts a string to a numeric value."),args:[arg("value (number)",_t("the string to be converted"))],compute:function(value){return toNumber(value,this.locale);},isExported:true,};var text=Object.freeze({__proto__:null,CHAR:CHAR,CLEAN:CLEAN,CONCATENATE:CONCATENATE,EXACT:EXACT,FIND:FIND,JOIN:JOIN,LEFT:LEFT,LEN:LEN,LOWER:LOWER,MID:MID,PROPER:PROPER,REPLACE:REPLACE,RIGHT:RIGHT,SEARCH:SEARCH,SPLIT:SPLIT,SUBSTITUTE:SUBSTITUTE,TEXT:TEXT,TEXTJOIN:TEXTJOIN,TEXTSPLIT:TEXTSPLIT,TRIM:TRIM,UPPER:UPPER,VALUE:VALUE});const HYPERLINK={description:_t("Creates a hyperlink in a cell."),args:[arg("url (string)",_t("The full URL of the link enclosed in quotation marks.")),arg("link_label (string, optional)",_t("The text to display in the cell, enclosed in quotation marks.")),],compute:function(url,linkLabel){const processedUrl=toString(url).trim();const processedLabel=toString(linkLabel)||processedUrl;if(processedUrl==="")
return processedLabel;return markdownLink(processedLabel,processedUrl);},isExported:true,};var web=Object.freeze({__proto__:null,HYPERLINK:HYPERLINK});const categories=[{name:_t("Array"),functions:array},{name:_t("Database"),functions:database},{name:_t("Date"),functions:date},{name:_t("Filter"),functions:filter},{name:_t("Financial"),functions:financial},{name:_t("Info"),functions:info},{name:_t("Lookup"),functions:lookup},{name:_t("Logical"),functions:logical},{name:_t("Math"),functions:math},{name:_t("Misc"),functions:misc},{name:_t("Operator"),functions:operators},{name:_t("Statistical"),functions:statistical},{name:_t("Text"),functions:text},{name:_t("Engineering"),functions:engineering},{name:_t("Web"),functions:web},{name:_t("Parser"),functions:parser},];const functionNameRegex=/^[A-Z0-9\_\.]+$/;class FunctionRegistry extends Registry{mapping={};add(name,addDescr){name=name.toUpperCase();if(name in this.content){throw new Error(`${name} is already present in this registry!`);}
return this.replace(name,addDescr);}
replace(name,addDescr){name=name.toUpperCase();if(!functionNameRegex.test(name)){throw new Error(_t("Invalid function name %s. Function names can exclusively contain alphanumerical values separated by dots (.) or underscore (_)",name));}
const descr=addMetaInfoFromArg(name,addDescr);validateArguments(descr);this.mapping[name]=createComputeFunction(descr);super.replace(name,descr);return this;}}
const functionRegistry=new FunctionRegistry();for(const category of categories){const fns=category.functions;for(let name in fns){const addDescr=fns[name];addDescr.category=addDescr.category||category.name;name=name.replace(/_/g,".");functionRegistry.add(name,{isExported:false,...addDescr});}}
function createComputeFunction(descr){function vectorizedCompute(...args){const acceptToVectorize=[];const getArgToFocus=argTargeting(descr,args.length);for(let i=0;i<args.length;i++){const argIndex=getArgToFocus(i)??-1;const argDefinition=descr.args[argIndex];const arg=args[i];if(!isMatrix(arg)&&argDefinition.acceptMatrixOnly){throw new BadExpressionError(_t("Function %s expects the parameter '%s' to be reference to a cell or range.",descr.name,(i+1).toString()));}
acceptToVectorize.push(!argDefinition.acceptMatrix);}
return applyVectorization(errorHandlingCompute.bind(this),args,acceptToVectorize);}
function errorHandlingCompute(...args){for(let i=0;i<args.length;i++){const arg=args[i];const getArgToFocus=argTargeting(descr,args.length);const argDefinition=descr.args[getArgToFocus(i)||i];if(!argDefinition.acceptErrors&&!isMatrix(arg)&&isEvaluationError(arg?.value)){return arg;}}
try{return computeFunctionToObject.apply(this,args);}
catch(e){return handleError(e,descr.name);}}
function computeFunctionToObject(...args){if(this.debug){debugger;}
const result=descr.compute.apply(this,args);if(!isMatrix(result)){if(typeof result==="object"&&result!==null&&"value"in result){replaceFunctionNamePlaceholder(result,descr.name);return result;}
return{value:result};}
if(typeof result[0][0]==="object"&&result[0][0]!==null&&"value"in result[0][0]){matrixForEach(result,(result)=>replaceFunctionNamePlaceholder(result,descr.name));return result;}
return matrixMap(result,(row)=>({value:row}));}
return vectorizedCompute;}
function handleError(e,functionName){if(hasStringValue(e)&&isEvaluationError(e.value)){if(hasStringMessage(e)){replaceFunctionNamePlaceholder(e,functionName);}
return e;}
console.error(e);return new EvaluationError(implementationErrorMessage+(hasStringMessage(e)?" "+e.message:""));}
function hasStringValue(obj){return(obj?.value!==undefined&&typeof obj.value==="string");}
function replaceFunctionNamePlaceholder(functionResult,functionName){if(functionResult.message?.includes("[[FUNCTION_NAME]]")){functionResult.message=functionResult.message.replace("[[FUNCTION_NAME]]",functionName);}}
const implementationErrorMessage=_t("An unexpected error occurred. Submit a support ticket at odoo.com/help.");function hasStringMessage(obj){return(obj?.message!==undefined&&typeof obj.message==="string");}
class FunctionCodeBuilder{scope;code="";constructor(scope=new Scope()){this.scope=scope;}
append(...lines){this.code+=lines.map((line)=>line.toString()).join("\n")+"\n";}
return(expression){return new FunctionCodeImpl(this.scope,this.code,expression);}
toString(){return indentCode(this.code);}}
class FunctionCodeImpl{scope;returnExpression;code;constructor(scope,code,returnExpression){this.scope=scope;this.returnExpression=returnExpression;this.code=indentCode(code);}
toString(){return this.code;}
assignResultToVariable(){if(this.scope.isAlreadyDeclared(this.returnExpression)){return this;}
const variableName=this.scope.nextVariableName();const code=new FunctionCodeBuilder(this.scope);code.append(this.code);code.append(`const ${variableName} = ${this.returnExpression};`);return code.return(variableName);}}
class Scope{nextId=1;declaredVariables=new Set();nextVariableName(){const name=`_${this.nextId++}`;this.declaredVariables.add(name);return name;}
isAlreadyDeclared(name){return this.declaredVariables.has(name);}}
function splitLines(str){return str.split("\n").map((line)=>line.trim()).filter((line)=>line!=="");}
function indentCode(code){let result="";let indentLevel=0;const lines=splitLines(code);for(const line of lines){if(line.startsWith("}")){indentLevel--;}
result+="\t".repeat(indentLevel)+line+"\n";if(line.endsWith("{")){indentLevel++;}}
return result.trim();}
const functions$2=functionRegistry.content;const OPERATOR_MAP={"=":"EQ","+":"ADD","-":"MINUS","*":"MULTIPLY","/":"DIVIDE",">=":"GTE","<>":"NE",">":"GT","<=":"LTE","<":"LT","^":"POWER","&":"CONCATENATE",};const UNARY_OPERATOR_MAP={"-":"UMINUS","+":"UPLUS","%":"UNARY.PERCENT",};const functionCache={};function compile(formula){const tokens=rangeTokenize(formula);return compileTokens(tokens);}
function compileTokens(tokens){try{return compileTokensOrThrow(tokens);}
catch(error){return{tokens,dependencies:[],execute:function(){return error;},isBadExpression:true,normalizedFormula:tokens.map((t)=>t.value).join(""),};}}
function compileTokensOrThrow(tokens){const{dependencies,literalValues,symbols}=formulaArguments(tokens);const cacheKey=compilationCacheKey(tokens);if(!functionCache[cacheKey]){const ast=parseTokens([...tokens]);const scope=new Scope();let stringCount=0;let numberCount=0;let dependencyCount=0;if(ast.type==="BIN_OPERATION"&&ast.value===":"){throw new BadExpressionError(_t("Invalid formula"));}
if(ast.type==="EMPTY"){throw new BadExpressionError(_t("Invalid formula"));}
const compiledAST=compileAST(ast);const code=new FunctionCodeBuilder();code.append(`// ${cacheKey}`);code.append(compiledAST);code.append(`return ${compiledAST.returnExpression};`);const baseFunction=new Function("deps","ref","range","getSymbolValue","ctx",code.toString());functionCache[cacheKey]=baseFunction;function compileFunctionArgs(ast){const{args}=ast;const functionName=ast.value.toUpperCase();const functionDefinition=functions$2[functionName];if(!functionDefinition){throw new UnknownFunctionError(_t('Unknown function: "%s"',ast.value));}
assertEnoughArgs(ast);const compiledArgs=[];const argToFocus=argTargeting(functionDefinition,args.length);for(let i=0;i<args.length;i++){const argDefinition=functionDefinition.args[argToFocus(i)??-1];const currentArg=args[i];const argTypes=argDefinition.type||[];const isMeta=argTypes.includes("META");const hasRange=argTypes.some((t)=>isRangeType(t));compiledArgs.push(compileAST(currentArg,isMeta,hasRange));}
return compiledArgs;}
function compileAST(ast,isMeta=false,hasRange=false){const code=new FunctionCodeBuilder(scope);if(ast.type!=="REFERENCE"&&!(ast.type==="BIN_OPERATION"&&ast.value===":")){if(isMeta){throw new BadExpressionError(_t("Argument must be a reference to a cell or range."));}}
if(ast.debug){code.append("debugger;");code.append(`ctx["debug"] = true;`);}
switch(ast.type){case"BOOLEAN":return code.return(`{ value: ${ast.value} }`);case"NUMBER":return code.return(`this.literalValues.numbers[${numberCount++}]`);case"STRING":return code.return(`this.literalValues.strings[${stringCount++}]`);case"REFERENCE":if((!isMeta&&ast.value.includes(":"))||hasRange){return code.return(`range(deps[${dependencyCount++}])`);}
else{return code.return(`ref(deps[${dependencyCount++}], ${isMeta ? "true" : "false"})`);}
case"FUNCALL":const args=compileFunctionArgs(ast).map((arg)=>arg.assignResultToVariable());code.append(...args);const fnName=ast.value.toUpperCase();return code.return(`ctx['${fnName}'](${args.map((arg) => arg.returnExpression)})`);case"UNARY_OPERATION":{const fnName=UNARY_OPERATOR_MAP[ast.value];const operand=compileAST(ast.operand,false,false).assignResultToVariable();code.append(operand);return code.return(`ctx['${fnName}'](${operand.returnExpression})`);}
case"BIN_OPERATION":{const fnName=OPERATOR_MAP[ast.value];const left=compileAST(ast.left,false,false).assignResultToVariable();const right=compileAST(ast.right,false,false).assignResultToVariable();code.append(left);code.append(right);return code.return(`ctx['${fnName}'](${left.returnExpression}, ${right.returnExpression})`);}
case"SYMBOL":const symbolIndex=symbols.indexOf(ast.value);return code.return(`getSymbolValue(this.symbols[${symbolIndex}])`);case"EMPTY":return code.return("undefined");}}}
const compiledFormula={execute:functionCache[cacheKey],dependencies,literalValues,symbols,tokens,isBadExpression:false,normalizedFormula:cacheKey,};return compiledFormula;}
function compilationCacheKey(tokens){let cacheKey="";for(const token of tokens){switch(token.type){case"STRING":cacheKey+="|S|";break;case"NUMBER":cacheKey+="|N|";break;case"REFERENCE":case"INVALID_REFERENCE":if(token.value.includes(":")){cacheKey+="|R|";}
else{cacheKey+="|C|";}
break;case"SPACE":break;default:cacheKey+=token.value;break;}}
return cacheKey;}
function formulaArguments(tokens){const literalValues={numbers:[],strings:[],};const dependencies=[];const symbols=[];for(const token of tokens){switch(token.type){case"INVALID_REFERENCE":case"REFERENCE":dependencies.push(token.value);break;case"STRING":const value=removeStringQuotes(token.value);literalValues.strings.push({value});break;case"NUMBER":{const value=parseNumber(token.value,DEFAULT_LOCALE);literalValues.numbers.push({value});break;}
case"SYMBOL":{symbols.push(unquote(token.value,"'"));}}}
return{dependencies,literalValues,symbols,};}
function assertEnoughArgs(ast){const nbrArgSupplied=ast.args.length;const functionName=ast.value.toUpperCase();const functionDefinition=functions$2[functionName];const{nbrArgRepeating,minArgRequired}=functionDefinition;if(nbrArgSupplied<minArgRequired){throw new BadExpressionError(_t("Invalid number of arguments for the %(functionName)s function. Expected %(minArgRequired)s minimum, but got %(nbrArgSupplied)s instead.",{functionName,minArgRequired,nbrArgSupplied,}));}
if(nbrArgSupplied>functionDefinition.maxArgPossible){throw new BadExpressionError(_t("Invalid number of arguments for the %(functionName)s function. Expected %(maxArgPossible)s maximum, but got %(nbrArgSupplied)s instead.",{functionName,maxArgPossible:functionDefinition.maxArgPossible,nbrArgSupplied,}));}
if(nbrArgRepeating>1){const nbrValueRepeating=nbrArgRepeating*Math.floor((nbrArgSupplied-minArgRequired)/nbrArgRepeating);const nbrValueRemaining=nbrArgSupplied-minArgRequired-nbrValueRepeating-functionDefinition.nbrArgOptional;if(nbrValueRemaining>0){throw new BadExpressionError(_t("Invalid number of arguments for the %(functionName)s function. Repeatable arguments should be supplied in groups of %(nbrArgRepeating)s, with up to %(nbrArgOptional)s optional. Got %(nbrValueRemaining)s too many.",{functionName,nbrArgRepeating,nbrArgOptional:functionDefinition.nbrArgOptional,nbrValueRemaining,}));}}}
function isRangeType(type){return type.startsWith("RANGE");}
const functions$1=functionRegistry.content;function isExportableToExcel(tokens){try{const nonExportableFunctions=iterateAstNodes(parseTokens(tokens)).filter((ast)=>ast.type==="FUNCALL"&&!functions$1[ast.value.toUpperCase()]?.isExported);return nonExportableFunctions.length===0;}
catch(error){return false;}}
function getFunctionsFromTokens(tokens,functionNames){if(!tokens.some((t)=>t.type==="SYMBOL"&&functionNames.includes(t.value.toUpperCase()))){return[];}
let ast;try{ast=parseTokens(tokens);}
catch{return[];}
return getFunctionsFromAST(ast,functionNames);}
function getFunctionsFromAST(ast,functionNames){return iterateAstNodes(ast).filter((node)=>node.type==="FUNCALL"&&functionNames.includes(node.value.toUpperCase())).map((node)=>({functionName:node.value.toUpperCase(),args:node.args,}));}
function adaptFormulaStringRanges(defaultSheetId,formula,applyChange){if(!formula.startsWith("=")){return formula;}
const tokens=rangeTokenize(formula);for(let tokenIdx=1;tokenIdx<tokens.length;tokenIdx++){if(tokens[tokenIdx].type!=="REFERENCE"){continue;}
const sheetXC=tokens[tokenIdx].value;const newSheetXC=adaptStringRange(defaultSheetId,sheetXC,applyChange);if(sheetXC!==newSheetXC){tokens[tokenIdx]={value:newSheetXC,type:"REFERENCE",};}}
return concat(tokens.map((token)=>token.value));}
function adaptStringRange(defaultSheetId,sheetXC,applyChange){const sheetName=splitReference(sheetXC).sheetName;if(sheetName?!isSheetNameEqual(sheetName,applyChange.sheetName):defaultSheetId!==applyChange.sheetId){return sheetXC;}
const sheetId=sheetName?applyChange.sheetId:defaultSheetId;const range=getRange(sheetXC,sheetId);if(range.invalidXc){return sheetXC;}
const change=applyChange.applyChange(range);if(change.changeType==="NONE"||change.changeType==="REMOVE"){return sheetXC;}
return getRangeString(change.range,defaultSheetId,getSheetNameGetter(applyChange));}
function getSheetNameGetter(applyChange){return(sheetId)=>{return sheetId===applyChange.sheetId?applyChange.sheetName:"";};}
function defaultGetSheetSize(sheetId){return{numberOfRows:Number.MAX_SAFE_INTEGER,numberOfCols:Number.MAX_SAFE_INTEGER};}
function getRange(sheetXC,sheetId){if(!rangeReference.test(sheetXC)){return createInvalidRange(sheetXC);}
return createRangeFromXc({xc:sheetXC,sheetId},defaultGetSheetSize);}
const TREND_LINE_XAXIS_ID="x1";const MOVING_AVERAGE_TREND_LINE_XAXIS_ID="xMovingAverage";const SPREADSHEET_TO_EXCEL_TRENDLINE_TYPE_MAPPING={exponential:"exp",logarithmic:"log",polynomial:"poly",trailingMovingAverage:"movingAvg",};function updateChartRangesWithDataSets(getters,applyChange,chartDataSets,chartLabelRange){let isStale=false;const dataSetsWithUndefined=[];for(const index in chartDataSets){let ds=chartDataSets[index];if(ds.labelCell){const labelCell=adaptChartRange(ds.labelCell,applyChange);if(ds.labelCell!==labelCell){isStale=true;ds={...ds,labelCell:labelCell,};}}
const dataRange=adaptChartRange(ds.dataRange,applyChange);if(dataRange===undefined||getters.getRangeString(dataRange,dataRange.sheetId)===CellErrorType.InvalidReference){isStale=true;ds=undefined;}
else if(dataRange!==ds.dataRange){isStale=true;ds={...ds,dataRange,};}
dataSetsWithUndefined[index]=ds;}
let labelRange=chartLabelRange;const range=adaptChartRange(labelRange,applyChange);if(range!==labelRange){isStale=true;labelRange=range;}
const dataSets=dataSetsWithUndefined.filter(isDefined);return{isStale,dataSets,labelRange,};}
function duplicateDataSetsInDuplicatedSheet(sheetIdFrom,sheetIdTo,dataSets){return dataSets.map((ds)=>{return{dataRange:duplicateRangeInDuplicatedSheet(sheetIdFrom,sheetIdTo,ds.dataRange),labelCell:ds.labelCell?duplicateRangeInDuplicatedSheet(sheetIdFrom,sheetIdTo,ds.labelCell):undefined,};});}
function duplicateLabelRangeInDuplicatedSheet(sheetIdFrom,sheetIdTo,range){return range?duplicateRangeInDuplicatedSheet(sheetIdFrom,sheetIdTo,range):undefined;}
function adaptChartRange(range,applyChange){if(!range){return undefined;}
const change=applyChange(range);switch(change.changeType){case"NONE":return range;case"REMOVE":return undefined;default:return change.range;}}
function createDataSets(getters,customizedDataSets,sheetId,dataSetsHaveTitle){const dataSets=[];for(const dataSet of customizedDataSets){const dataRange=getters.getRangeFromSheetXC(sheetId,dataSet.dataRange);const{unboundedZone:zone,sheetId:dataSetSheetId,invalidSheetName,invalidXc}=dataRange;if(invalidSheetName||invalidXc){continue;}
if(zone.left!==zone.right&&zone.top!==zone.bottom){if(zone.right===undefined){continue;}
for(let column=zone.left;column<=zone.right;column++){const columnZone={...zone,left:column,right:column,};dataSets.push({...createDataSet(getters,dataSetSheetId,columnZone,dataSetsHaveTitle?{top:columnZone.top,bottom:columnZone.top,left:columnZone.left,right:columnZone.left,}:undefined),backgroundColor:dataSet.backgroundColor,rightYAxis:dataSet.yAxisId==="y1",customLabel:dataSet.label,trend:dataSet.trend,});}}
else{dataSets.push({...createDataSet(getters,dataSetSheetId,zone,dataSetsHaveTitle?{top:zone.top,bottom:zone.top,left:zone.left,right:zone.left,}:undefined),backgroundColor:dataSet.backgroundColor,rightYAxis:dataSet.yAxisId==="y1",customLabel:dataSet.label,trend:dataSet.trend,});}}
return dataSets;}
function createDataSet(getters,sheetId,fullZone,titleZone){if(fullZone.left!==fullZone.right&&fullZone.top!==fullZone.bottom){throw new Error(`Zone should be a single column or row: ${zoneToXc(fullZone)}`);}
if(titleZone){const dataXC=zoneToXc(fullZone);const labelCellXC=zoneToXc(titleZone);return{labelCell:getters.getRangeFromSheetXC(sheetId,labelCellXC),dataRange:getters.getRangeFromSheetXC(sheetId,dataXC),};}
else{return{labelCell:undefined,dataRange:getters.getRangeFromSheetXC(sheetId,zoneToXc(fullZone)),};}}
function toExcelDataset(getters,ds){const labelZone=ds.labelCell?.zone;let dataZone=ds.dataRange.zone;if(labelZone){const{numberOfRows,numberOfCols}=zoneToDimension(dataZone);if(numberOfRows===1){dataZone={...dataZone,left:dataZone.left+1};}
else if(numberOfCols===1){dataZone={...dataZone,top:dataZone.top+1};}}
const dataRange=createRange({...ds.dataRange,zone:dataZone},getters.getSheetSize);let label={};if(ds.customLabel){label={text:ds.customLabel,};}
else if(ds.labelCell){label={reference:getters.getRangeString(ds.labelCell,"forceSheetReference",{useBoundedReference:true,}),};}
let trend;if(ds.trend?.type){trend={type:ds.trend.type==="polynomial"&&ds.trend.order===1?"linear":SPREADSHEET_TO_EXCEL_TRENDLINE_TYPE_MAPPING[ds.trend.type],color:ds.trend.color,order:ds.trend.order?Math.min(ds.trend.order,MAX_XLSX_POLYNOMIAL_DEGREE):undefined,window:ds.trend.window||DEFAULT_WINDOW_SIZE,};}
return{label,range:getters.getRangeString(dataRange,"forceSheetReference",{useBoundedReference:true}),backgroundColor:ds.backgroundColor,rightYAxis:ds.rightYAxis,trend,};}
function toExcelLabelRange(getters,labelRange,shouldRemoveFirstLabel){if(!labelRange)
return undefined;const zone={...labelRange.zone,};if(shouldRemoveFirstLabel&&labelRange.zone.bottom>labelRange.zone.top){zone.top=zone.top+1;}
const range=createRange({...labelRange,zone:zone},getters.getSheetSize);return getters.getRangeString(range,"forceSheetReference",{useBoundedReference:true});}
function transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange){let labelRange;if(definition.labelRange){const adaptedRange=adaptStringRange(chartSheetId,definition.labelRange,applyChange);if(adaptedRange!==CellErrorType.InvalidReference){labelRange=adaptedRange;}}
const dataSets=[];for(const dataSet of definition.dataSets){const newDataSet={...dataSet};const adaptedRange=adaptStringRange(chartSheetId,dataSet.dataRange,applyChange);if(adaptedRange!==CellErrorType.InvalidReference){newDataSet.dataRange=adaptedRange;dataSets.push(newDataSet);}}
return{...definition,dataSets,labelRange,};}
function chartFontColor(backgroundColor){if(!backgroundColor){return"#000000";}
return relativeLuminance(backgroundColor)<0.3?"#FFFFFF":"#000000";}
function chartMutedFontColor(backgroundColor){if(!backgroundColor){return"#666666";}
return relativeLuminance(backgroundColor)<0.3?"#C8C8C8":"#666666";}
function checkDataset(definition){if(definition.dataSets){const invalidRanges=definition.dataSets.find((range)=>!rangeReference.test(range.dataRange))!==undefined;if(invalidRanges){return"InvalidDataSet";}
const zones=definition.dataSets.map((ds)=>toUnboundedZone(ds.dataRange));if(zones.some((zone)=>zone.top!==zone.bottom&&isFullRow(zone))){return"InvalidDataSet";}}
return"Success";}
function checkLabelRange(definition){if(definition.labelRange){const invalidLabels=!rangeReference.test(definition.labelRange||"");if(invalidLabels){return"InvalidLabelRange";}}
return"Success";}
function shouldRemoveFirstLabel(labelRange,dataset,dataSetsHaveTitle){if(!dataSetsHaveTitle)
return false;if(!labelRange)
return false;if(!dataset)
return true;const datasetLength=getZoneArea(dataset.dataRange.zone);const labelLength=getZoneArea(labelRange.zone);if(labelLength<datasetLength){return false;}
return true;}
function getChartPositionAtCenterOfViewport(getters,chartSize){const{x,y}=getters.getMainViewportCoordinates();const{scrollX,scrollY}=getters.getActiveSheetScrollInfo();const{width,height}=getters.getVisibleRect(getters.getActiveMainViewport());return{x:x+scrollX+Math.max(0,(width-chartSize.width)/2),y:y+scrollY+Math.max(0,(height-chartSize.height)/2),};}
function getDefinedAxis(definition){let useLeftAxis=false,useRightAxis=false;if("horizontal"in definition&&definition.horizontal){return{useLeftAxis:true,useRightAxis:false};}
for(const design of definition.dataSets||[]){if(design.yAxisId==="y1"){useRightAxis=true;}
else{useLeftAxis=true;}}
useLeftAxis||=!useRightAxis;return{useLeftAxis,useRightAxis};}
function formatChartDatasetValue(axisFormats,locale){return(value,axisId)=>{const format=axisFormats?.[axisId];return formatTickValue({format,locale})(value);};}
function formatTickValue(localeFormat){return(value)=>{value=Number(value);if(isNaN(value))
return value;const{locale,format}=localeFormat;const formattedValue=formatValue(value,{locale,format:!format&&Math.abs(value)>=1000?"#,##":format,});return truncateLabel(formattedValue);};}
const CHART_AXIS_CHOICES=[{value:"left",label:_t("Left")},{value:"right",label:_t("Right")},];function getPieColors(colors,dataSetsValues){const pieColors=[];const maxLength=largeMax(dataSetsValues.map((ds)=>ds.data.length));for(let i=0;i<=maxLength;i++){pieColors.push(colors.next());}
return pieColors;}
function truncateLabel(label){if(!label){return"";}
if(label.length>MAX_CHAR_LABEL){return label.substring(0,MAX_CHAR_LABEL)+"…";}
return label;}
function isTrendLineAxis(axisID){return axisID===TREND_LINE_XAXIS_ID||axisID===MOVING_AVERAGE_TREND_LINE_XAXIS_ID;}
const chartShowValuesPlugin={id:"chartShowValuesPlugin",afterDatasetsDraw(chart,args,options){if(!options.showValues){return;}
const drawData=chart._metasets?.[0]?.data;if(!drawData){return;}
const ctx=chart.ctx;ctx.save();ctx.textAlign="center";ctx.textBaseline="middle";ctx.miterLimit=1;switch(chart.config.type){case"pie":case"doughnut":drawPieChartValues(chart,options,ctx);break;case"bar":case"line":case"radar":options.horizontal?drawHorizontalBarChartValues(chart,options,ctx):drawLineOrBarOrRadarChartValues(chart,options,ctx);break;case"funnel":drawHorizontalBarChartValues(chart,options,ctx);break;}
ctx.restore();},};function drawTextWithBackground(text,x,y,ctx){ctx.lineWidth=3;ctx.strokeText(text,x,y);ctx.lineWidth=1;ctx.fillText(text,x,y);}
function drawLineOrBarOrRadarChartValues(chart,options,ctx){const yMax=chart.chartArea.bottom;const yMin=chart.chartArea.top;const textsPositions={};for(const dataset of chart._metasets){if(isTrendLineAxis(dataset.xAxisID)||dataset.hidden){continue;}
const yAxisScale=chart.scales[dataset.yAxisID];for(let i=0;i<dataset._parsed.length;i++){const parsedValue=dataset._parsed[i];const value=Number(chart.config.type==="radar"?parsedValue.r:parsedValue.y);if(isNaN(value)){continue;}
const point=dataset.data[i];const xPosition=point.x;let yPosition=0;if(chart.config.type==="line"||chart.config.type==="radar"){yPosition=value<0?point.y+10:point.y-10;}
else{const yZeroLine=yAxisScale.getPixelForValue(0);const distanceFromAxisOrigin=Math.abs(yZeroLine-point.y);const textHeight=12;if(distanceFromAxisOrigin<textHeight){yPosition=value<0?yZeroLine+textHeight/2:yZeroLine-textHeight/2;}
else{yPosition=value<0?point.y-point.height/2:point.y+point.height/2;}}
yPosition=Math.min(yPosition,yMax);yPosition=Math.max(yPosition,yMin);if(!textsPositions[xPosition]){textsPositions[xPosition]=[];}
for(const otherPosition of textsPositions[xPosition]||[]){if(Math.abs(otherPosition-yPosition)<13){yPosition=value<0?otherPosition+13:otherPosition-13;}}
textsPositions[xPosition].push(yPosition);ctx.fillStyle=point.options.backgroundColor;ctx.strokeStyle=options.background||"#ffffff";const valueToDisplay=options.callback(Number(value),dataset,i);drawTextWithBackground(valueToDisplay,xPosition,yPosition,ctx);}}}
function drawHorizontalBarChartValues(chart,options,ctx){const xMax=chart.chartArea.right;const xMin=chart.chartArea.left;const textsPositions={};for(const dataset of chart._metasets){if(isTrendLineAxis(dataset.xAxisID)){return;}
const xAxisScale=chart.scales[dataset.xAxisID];const xZeroLine=xAxisScale.getPixelForValue(0);for(let i=0;i<dataset._parsed.length;i++){const value=Number(dataset._parsed[i].x);if(isNaN(value)){continue;}
const displayValue=options.callback(value,dataset,i);const point=dataset.data[i];const yPosition=point.y;const textWidth=computeTextWidth(ctx,displayValue,{fontSize:12},"px");const distanceFromAxisOrigin=Math.abs(point.x-xZeroLine);const PADDING=3;let xPosition;if(distanceFromAxisOrigin<textWidth){xPosition=value<0?xZeroLine-textWidth/2-PADDING:xZeroLine+textWidth/2+PADDING;}
else{xPosition=value<0?point.x+point.width/2:point.x-point.width/2;xPosition=Math.min(xPosition,xMax);xPosition=Math.max(xPosition,xMin);}
if(!textsPositions[yPosition]){textsPositions[yPosition]=[];}
for(const otherPosition of textsPositions[yPosition]){if(Math.abs(otherPosition-xPosition)<textWidth){xPosition=value<0?otherPosition-textWidth-PADDING:otherPosition+textWidth+PADDING;}}
textsPositions[yPosition].push(xPosition);ctx.fillStyle=point.options.backgroundColor;ctx.strokeStyle=options.background||"#ffffff";drawTextWithBackground(displayValue,xPosition,yPosition,ctx);}}}
function drawPieChartValues(chart,options,ctx){for(const dataset of chart._metasets){for(let i=0;i<dataset._parsed.length;i++){const value=Number(dataset._parsed[i]);if(isNaN(value)||value===0){continue;}
const bar=dataset.data[i];const{startAngle,endAngle,innerRadius,outerRadius}=bar;const midAngle=(startAngle+endAngle)/2;const midRadius=(innerRadius+outerRadius)/2;const x=bar.x+midRadius*Math.cos(midAngle);const y=bar.y+midRadius*Math.sin(midAngle);const displayValue=options.callback(value,dataset,i);const textHeight=12;const textWidth=computeTextWidth(ctx,displayValue,{fontSize:textHeight},"px");const radius=outerRadius-innerRadius;if(textWidth>=radius||radius<textHeight){continue;}
const sliceAngle=endAngle-startAngle;const midWidth=2*midRadius*Math.tan(sliceAngle/2);if(sliceAngle<Math.PI/2&&(textWidth>=midWidth||midWidth<textHeight)){continue;}
ctx.fillStyle=chartFontColor(options.background);ctx.strokeStyle=options.background||"#ffffff";drawTextWithBackground(displayValue,x,y,ctx);}}}
const TreeMapChartDefaults={showHeaders:true,headerDesign:{align:"center",fillColor:"#808080",bold:true,fontSize:15,},showValues:true,showLabels:true,valuesDesign:{align:"left",verticalAlign:"bottom",fontSize:12,},coloringOptions:{type:"categoryColor",colors:[],useValueBasedGradient:true,},};const GHOST_SUNBURST_VALUE="nullValue";function getBarChartDatasets(definition,args){const{dataSetsValues}=args;const dataSets=[];const colors=getChartColorsGenerator(definition,dataSetsValues.length);const trendDatasets=[];for(const index in dataSetsValues){let{label,data,hidden}=dataSetsValues[index];label=definition.dataSets?.[index].label||label;const backgroundColor=colors.next();const dataset={label,data,hidden,borderColor:definition.background||BACKGROUND_CHART_COLOR,borderWidth:definition.stacked?1:0,backgroundColor,yAxisID:definition.horizontal?"y":definition.dataSets?.[index].yAxisId||"y",xAxisID:"x",};dataSets.push(dataset);const trendConfig=definition.dataSets?.[index].trend;const trendData=args.trendDataSetsValues?.[index];if(!trendConfig?.display||definition.horizontal||!trendData){continue;}
trendDatasets.push(getTrendingLineDataSet(dataset,trendConfig,trendData));}
dataSets.push(...trendDatasets);return dataSets;}
function getWaterfallDatasetAndLabels(definition,args){const{dataSetsValues,labels}=args;const negativeColor=definition.negativeValuesColor||CHART_WATERFALL_NEGATIVE_COLOR;const positiveColor=definition.positiveValuesColor||CHART_WATERFALL_POSITIVE_COLOR;const subTotalColor=definition.subTotalValuesColor||CHART_WATERFALL_SUBTOTAL_COLOR;const backgroundColor=[];const datasetValues=[];const dataset={label:"",data:datasetValues,backgroundColor,};const labelsWithSubTotals=[];let lastValue=0;for(const dataSetsValue of dataSetsValues){if(dataSetsValue.hidden){continue;}
for(let i=0;i<dataSetsValue.data.length;i++){const data=dataSetsValue.data[i];labelsWithSubTotals.push(labels[i]);if(isNaN(Number(data))){datasetValues.push([lastValue,lastValue]);backgroundColor.push("");continue;}
datasetValues.push([lastValue,data+lastValue]);let color=data>=0?positiveColor:negativeColor;if(i===0&&dataSetsValue===dataSetsValues[0]&&definition.firstValueAsSubtotal){color=subTotalColor;}
backgroundColor.push(color);lastValue+=data;}
if(definition.showSubTotals){labelsWithSubTotals.push(_t("Subtotal"));datasetValues.push([0,lastValue]);backgroundColor.push(subTotalColor);}}
return{datasets:[dataset],labels:labelsWithSubTotals,};}
function getLineChartDatasets(definition,args){const{dataSetsValues,axisType,labels}=args;const dataSets=[];const areaChart=!!definition.fillArea;const stackedChart=!!definition.stacked;const trendDatasets=[];const colors=getChartColorsGenerator(definition,dataSetsValues.length);for(let index=0;index<dataSetsValues.length;index++){let{label,data,hidden}=dataSetsValues[index];label=definition.dataSets?.[index].label||label;const color=colors.next();if(axisType&&["linear","time"].includes(axisType)){data=data.map((y,index)=>({x:labels[index]||undefined,y}));}
const dataset={label,data,hidden,tension:0,borderColor:color,backgroundColor:areaChart?setColorAlpha(color,LINE_FILL_TRANSPARENCY):color,pointBackgroundColor:color,fill:areaChart?getFillingMode(index,stackedChart):false,pointRadius:definition.hideDataMarkers?0:LINE_DATA_POINT_RADIUS,yAxisID:definition.dataSets?.[index].yAxisId||"y",};dataSets.push(dataset);const trendConfig=definition.dataSets?.[index].trend;const trendData=args.trendDataSetsValues?.[index];if(!trendConfig?.display||!trendData){continue;}
trendDatasets.push(getTrendingLineDataSet(dataset,trendConfig,trendData));}
dataSets.push(...trendDatasets);return dataSets;}
function getScatterChartDatasets(definition,args){const dataSets=getLineChartDatasets(definition,args);for(const dataSet of dataSets){if(!isTrendLineAxis(dataSet.xAxisID)){dataSet.showLine=false;}}
return dataSets;}
function getPieChartDatasets(definition,args){const{dataSetsValues}=args;const dataSets=[];const dataSetsLength=Math.max(0,...dataSetsValues.map((ds)=>ds?.data?.length??0));const backgroundColor=getPieColors(new ColorGenerator(dataSetsLength),dataSetsValues);for(const{label,data,hidden}of dataSetsValues){if(hidden)
continue;const dataset={label,data,borderColor:definition.background||"#FFFFFF",backgroundColor,hoverOffset:10,};dataSets.push(dataset);}
return dataSets;}
function getComboChartDatasets(definition,args){const{dataSetsValues}=args;const dataSets=[];const colors=getChartColorsGenerator(definition,dataSetsValues.length);const trendDatasets=[];for(let index=0;index<dataSetsValues.length;index++){let{label,data,hidden}=dataSetsValues[index];label=definition.dataSets?.[index].label||label;const design=definition.dataSets?.[index];const color=colors.next();const type=design?.type??"line";const dataset={label:label,data,hidden,borderColor:color,backgroundColor:color,yAxisID:definition.dataSets?.[index].yAxisId||"y",xAxisID:"x",type,order:type==="bar"?dataSetsValues.length+index:index,pointRadius:definition.hideDataMarkers?0:LINE_DATA_POINT_RADIUS,};dataSets.push(dataset);const trendConfig=definition.dataSets?.[index].trend;const trendData=args.trendDataSetsValues?.[index];if(!trendConfig?.display||!trendData){continue;}
trendDatasets.push(getTrendingLineDataSet(dataset,trendConfig,trendData));}
dataSets.push(...trendDatasets);return dataSets;}
function getRadarChartDatasets(definition,args){const{dataSetsValues}=args;const datasets=[];const fill=definition.fillArea??false;const colors=getChartColorsGenerator(definition,dataSetsValues.length);for(let i=0;i<dataSetsValues.length;i++){let{label,data,hidden}=dataSetsValues[i];if(definition.dataSets?.[i]?.label){label=definition.dataSets[i].label;}
const borderColor=colors.next();const dataset={label,data,hidden,borderColor,backgroundColor:borderColor,pointRadius:definition.hideDataMarkers?0:LINE_DATA_POINT_RADIUS,};if(fill){dataset.backgroundColor=setColorAlpha(borderColor,LINE_FILL_TRANSPARENCY);dataset.fill="start";}
datasets.push(dataset);}
return datasets;}
function getGeoChartDatasets(definition,args){const{availableRegions,dataSetsValues,labels}=args;const regionName=definition.region||availableRegions[0]?.id;const features=regionName?args.getGeoJsonFeatures(regionName):undefined;const dataset={outline:features,showOutline:!!features,data:[],};if(features&&regionName){const labelsAndValues={};if(dataSetsValues[0]){for(let i=0;i<dataSetsValues[0].data.length;i++){if(!labels[i]||dataSetsValues[0].data[i]===undefined){continue;}
const featureId=args.geoFeatureNameToId(regionName,labels[i]);if(featureId){labelsAndValues[featureId]={value:dataSetsValues[0].data[i],label:labels[i]};}}}
for(const feature of features){if(!feature.id){continue;}
dataset.data.push({feature:{...feature,properties:{name:labelsAndValues[feature.id]?.label},},value:labelsAndValues[feature.id]?.value,});}}
return[dataset];}
function getFunnelChartDatasets(definition,args){const dataSetsValues=args.dataSetsValues[0];const labels=args.labels;if(!dataSetsValues){return[];}
let{label:datasetLabel,data}=dataSetsValues;datasetLabel=definition.dataSets?.[0].label||datasetLabel;const dataset={label:datasetLabel,data:data.map((value)=>(value<=0?[0,0]:[-value,value])),backgroundColor:getFunnelLabelColors(labels,definition.funnelColors),yAxisID:"y",xAxisID:"x",barPercentage:1,categoryPercentage:1,borderColor:definition.background||BACKGROUND_CHART_COLOR,borderWidth:3,};return[dataset];}
function getFunnelLabelColors(labels,colors){const colorGenerator=new ColorGenerator(labels.length,colors);return labels.map(()=>colorGenerator.next());}
function getSunburstChartDatasets(definition,args){const{dataSetsValues,labels}=args;const tree=getSunburstTree(dataSetsValues,labels);const data=pyramidizeTree(tree);const rootData=data[0]||[];const colorGenerator=new ColorGenerator(rootData.length,definition.groupColors||[]);const groupColors=rootData.map((rawValue)=>({label:rawValue.label,color:colorGenerator.next(),}));const dataSets=[];for(let i=data.length-1;i>=0;i--){const dataset={groupColors,parsing:{key:"value"},data:data[i],borderColor:(ctx)=>{const data=ctx.type==="data"?ctx.raw:undefined;if(!data||data.label===GHOST_SUNBURST_VALUE){return COLOR_TRANSPARENT;}
return definition.background||BACKGROUND_CHART_COLOR;},backgroundColor:(ctx)=>{const data=ctx.type==="data"?ctx.raw:undefined;if(!data||data.label===GHOST_SUNBURST_VALUE){return COLOR_TRANSPARENT;}
const rootGroup=data.groups[0];return groupColors.find((groupColor)=>groupColor.label===rootGroup)?.color;},hoverOffset:10,};dataSets.push(dataset);}
return dataSets;}
function getDataEntriesFromDatasets(hierarchicalDatasetValues,values){const entries=[];const maxDatasetLength=Math.max(...hierarchicalDatasetValues.map((ds)=>ds.data.length));for(let i=0;i<maxDatasetLength;i++){entries[i]={};for(let j=0;j<hierarchicalDatasetValues.length;j++){const groupBy=hierarchicalDatasetValues[j].data[i]===null?GHOST_SUNBURST_VALUE:String(hierarchicalDatasetValues[j].data[i]);entries[i][j]=groupBy;}
entries[i].value=Number(values[i]);}
return entries;}
function getSunburstTree(hierarchicalDatasetValues,values){const entries=getDataEntriesFromDatasets(hierarchicalDatasetValues,values);return sunburstGroupBy(entries,0,hierarchicalDatasetValues.length,[]);}
function sunburstGroupBy(entries,index,maxDepth,parentGroups){if(index>=maxDepth){return[];}
const groups=Object.groupBy(entries,(item)=>item[index]);return Object.keys(groups).map((key)=>{const total=groups[key]?.reduce((acc,item)=>acc+Number(item.value),0)||0;const itemGroups=[...parentGroups,key];const tree=sunburstGroupBy(groups[key]||[],index+1,maxDepth,[...parentGroups,key]);return{label:key,value:total,children:tree,groups:itemGroups,depth:index,};}).sort((a,b)=>b.value-a.value);}
function pyramidizeTree(tree){const flattened=[];const queue=[...tree];while(queue.length>0){const node=queue.shift();if(!node){continue;}
if(!flattened[node.depth]){flattened[node.depth]=[];}
flattened[node.depth].push(node);if(node.children){queue.push(...node.children);}}
return flattened;}
function getTreeMapChartDatasets(definition,args){const{dataSetsValues,labels,locale,axisFormats}=args;const localeFormat={locale,format:axisFormats?.y};if(dataSetsValues.length===0){return[];}
const tree=getSunburstTree(dataSetsValues,labels).sort((a,b)=>b.value-a.value);const groupColors=getTreeMapGroupColors(definition,tree);const datasetEntries=[];const maxDatasetLength=Math.max(...dataSetsValues.map((ds)=>ds.data.length));for(let i=0;i<maxDatasetLength;i++){datasetEntries[i]={};for(let j=0;j<dataSetsValues.length;j++){datasetEntries[i][j]=dataSetsValues[j].data[i]?String(dataSetsValues[j].data[i]):undefined;}
datasetEntries[i].value=Number(labels[i]);}
const showLabels=definition.showLabels??TreeMapChartDefaults.showLabels;const showValues=definition.showValues??TreeMapChartDefaults.showValues;const coloringOption=definition.coloringOptions||TreeMapChartDefaults.coloringOptions;let colorScale;if(coloringOption?.type==="colorScale"){colorScale=getTreeMapColorScale(tree,coloringOption);}
const dataSets=[{data:[],tree:datasetEntries,labels:{display:showLabels||showValues,overflow:"hidden",...getTextStyle(definition.valuesDesign,TreeMapChartDefaults.valuesDesign),formatter:(ctx)=>{return[showLabels?ctx.raw.g:undefined,showValues?formatValue(ctx.raw.v,localeFormat):undefined,].filter(isDefined);},},captions:{display:definition.showHeaders??TreeMapChartDefaults.showHeaders,padding:6,...getTextStyle(definition.headerDesign,TreeMapChartDefaults.headerDesign),},key:"value",groups:range(0,dataSetsValues.length).map((i)=>String(i)),borderWidth:0,spacing:1,displayMode:"headerBoxes",groupColors,backgroundColor:(ctx)=>{if(ctx.type!=="data"){return"transparent";}
if(!ctx.raw.isLeaf){return definition.headerDesign?.fillColor||TreeMapChartDefaults.headerDesign?.fillColor;}
if(coloringOption.type==="colorScale"){return colorScale?.(ctx.raw.v)||"#FF0000";}
else if(coloringOption.type==="categoryColor"){return getTreeMapElementColor(ctx,tree,coloringOption,groupColors);}
throw new Error(`Unsupported coloring option type}`);},},];return dataSets;}
function getTextStyle(design,defaultDesign){const dynamicColor=(ctx)=>{const backgroundColor=ctx.element.options.backgroundColor;return relativeLuminance(backgroundColor)>0.7?"#666666":"#FFFFFF";};return{align:design?.align??defaultDesign?.align,position:design?.verticalAlign??defaultDesign?.verticalAlign,color:design?.color||dynamicColor,hoverColor:design?.color||dynamicColor,font:{weight:design?.bold??defaultDesign?.bold?"bold":"normal",style:design?.italic??defaultDesign?.italic?"italic":"normal",size:design?.fontSize??defaultDesign?.fontSize,},};}
function getTrendingLineDataSet(dataset,config,data){const defaultBorderColor=colorToRGBA(dataset.backgroundColor);defaultBorderColor.a=1;const borderColor=config.color||lightenColor(rgbaToHex(defaultBorderColor),0.5);return{type:"line",xAxisID:config.type==="trailingMovingAverage"?MOVING_AVERAGE_TREND_LINE_XAXIS_ID:TREND_LINE_XAXIS_ID,yAxisID:dataset.yAxisID,label:dataset.label?_t("Trend line for %s",dataset.label):"",data,order:-1,showLine:true,pointRadius:0,backgroundColor:borderColor,borderColor,borderDash:[5,5],borderWidth:undefined,fill:false,pointBackgroundColor:borderColor,};}
function getFillingMode(index,stackedChart){if(!stackedChart){return"origin";}
return index===0?"origin":"-1";}
function getChartColorsGenerator(definition,dataSetsSize){return new ColorGenerator(dataSetsSize,definition.dataSets?.map((ds)=>ds.backgroundColor)||[]);}
function getTreeMapGroupColors(definition,tree){const colors=definition.coloringOptions?.type==="categoryColor"?definition.coloringOptions.colors:[];const colorGenerator=new ColorGenerator(tree.length,colors);return tree.map((node)=>({label:node.label,color:colorGenerator.next(),}));}
function getTreeMapColorScale(tree,coloringOption){const treeNodesByLevel=pyramidizeTree(tree);const nodes=treeNodesByLevel[treeNodesByLevel.length-1];const minValue=Math.min(...nodes.map((node)=>node.value));const maxValue=Math.max(...nodes.map((node)=>node.value));if(Number.isFinite(minValue)&&Number.isFinite(maxValue)){const colorThresholds=[{value:minValue,color:coloringOption.minColor}];if(coloringOption.midColor){const midValue=(minValue+maxValue)/2;colorThresholds.push({value:midValue,color:coloringOption.midColor});}
colorThresholds.push({value:maxValue,color:coloringOption.maxColor});return getColorScale(colorThresholds);}
return undefined;}
function getTreeMapElementColor(ctx,tree,coloringOption,categoryColors){const rootCategory=ctx.raw._data.children[0][0];const baseColor=categoryColors.find((color)=>color.label===rootCategory)?.color;if(!baseColor||!coloringOption.useValueBasedGradient){return baseColor||"#FF0000";}
const rootNode=tree.find((node)=>node.label===rootCategory);if(!rootNode||!rootNode.children.length){return baseColor;}
const treeNodesByLevel=pyramidizeTree(rootNode.children);const leafValues=treeNodesByLevel[treeNodesByLevel.length-1];const max=Math.max(...leafValues.map((node)=>node.value));const min=Math.min(...leafValues.map((node)=>node.value));if(min===max||!isFinite(min)||!isFinite(max)){return baseColor;}
const value=Number(ctx.raw.v)||0;const factor=((value-max)/(min-max))*0.5;return lightenColor(baseColor,factor);}
const sunburstHoverPlugin={id:"sunburstHoverPlugin",afterEvent(chart,args,options){if(!options.enabled){return;}
const chartActiveElements=chart.getActiveElements();let activeDataPoints=chartActiveElements.map((el)=>({datasetIndex:el.datasetIndex,index:el.index,}));for(const activeEl of chartActiveElements){const activeDataset=chart.data.datasets[activeEl.datasetIndex];const activeData=activeDataset.data[activeEl.index];for(let datasetIndex=0;datasetIndex<chart.data.datasets.length;datasetIndex++){const dataset=chart.data.datasets[datasetIndex];for(let index=0;index<dataset.data.length;index++){const data=dataset.data[index];if(isChildGroup(activeData.groups,data.groups)){activeDataPoints.push({datasetIndex,index});}}}}
activeDataPoints=activeDataPoints.filter((point)=>{const{datasetIndex,index}=point;const data=chart.data.datasets[datasetIndex].data[index];return data.label!==GHOST_SUNBURST_VALUE;});chart.setActiveElements(activeDataPoints);for(const metaSet of chart.getSortedVisibleDatasetMetas()){for(const arcElement of metaSet.data){const context=arcElement["$context"];const{datasetIndex,index,dataset,raw}=context;if(raw.label===GHOST_SUNBURST_VALUE){continue;}
const originalBackgroundColor=typeof dataset.backgroundColor==="function"?dataset.backgroundColor(context):dataset.backgroundColor;if(activeDataPoints.length&&!activeDataPoints.some((el)=>el.datasetIndex===datasetIndex&&el.index===index)){arcElement.options.backgroundColor=lightenColor(originalBackgroundColor,0.5);}
else{arcElement.options.backgroundColor=originalBackgroundColor;}}}},};function isChildGroup(parentGroup,childGroup){return(childGroup.length>parentGroup.length&&parentGroup.every((group,i)=>group===childGroup[i]));}
const Y_PADDING=3;const sunburstLabelsPlugin={id:"sunburstLabelsPlugin",afterDatasetsDraw(chart,args,options){if((!options.showValues&&!options.showLabels)||chart.config.type!=="doughnut"){return;}
const ctx=chart.ctx;drawSunburstChartValues(chart,options,ctx);},};function drawSunburstChartValues(chart,options,ctx){const style=options.style;const fontSize=style.fontSize||13;const lineHeight=fontSize+Y_PADDING;for(const dataset of chart._metasets){for(let i=0;i<dataset._dataset.data.length;i++){const rawData=dataset._dataset.data[i];if(rawData.label===GHOST_SUNBURST_VALUE){continue;}
const valuesToDisplay=[options.showLabels?rawData.label:undefined,options.showValues?options.callback(rawData.value,"y"):undefined,].filter(isDefined);const arc=dataset.data[i];let{startAngle,endAngle,innerRadius,outerRadius,circumference}=arc;const offset=arc.options.offset/4;const fix=1-Math.sin(Math.min(Math.PI,circumference||0));const radiusOffset=offset*fix;innerRadius+=radiusOffset;outerRadius+=radiusOffset;const midAngle=(startAngle+endAngle)/2;const midRadius=(innerRadius+outerRadius)/2;const availableWidth=(outerRadius-innerRadius)*0.9;const angle=endAngle-startAngle;const availableHeight=angle>=Math.PI?outerRadius:Math.sin(angle/2)*innerRadius*2;if(availableHeight<valuesToDisplay.length*lineHeight){continue;}
ctx.save();const centerOffset={x:Math.cos(midAngle)*offset,y:Math.sin(midAngle)*offset};const centerX=chart.chartArea.left+chart.chartArea.width/2+centerOffset.x;const centerY=chart.chartArea.top+chart.chartArea.height/2+centerOffset.y;ctx.translate(centerX,centerY);let x;if(midAngle>Math.PI/2){ctx.rotate(midAngle-Math.PI);x=-midRadius;}
else{x=midRadius;ctx.rotate(midAngle);}
const backgroundColor=arc.options.backgroundColor;const defaultColor=relativeLuminance(backgroundColor)>0.7?"#666666":"#FFFFFF";ctx.fillStyle=style.textColor||defaultColor;ctx.textAlign="center";ctx.textBaseline="middle";ctx.font=getDefaultContextFont(fontSize,style.bold,style.italic);const y=-((valuesToDisplay.length-1)*lineHeight)/2;for(let j=0;j<valuesToDisplay.length;j++){const fittedText=sliceTextToFitWidth(ctx,availableWidth,valuesToDisplay[j],style,"px");ctx.fillText(fittedText,x,y+j*lineHeight);}
ctx.restore();}}}
const waterfallLinesPlugin={id:"waterfallLinesPlugin",beforeDraw(chart,args,options){if(!options.showConnectorLines){return;}
const drawData=chart._metasets?.[0]?.data;if(!drawData){return;}
const ctx=chart.ctx;ctx.save();ctx.setLineDash([3,2]);for(let i=0;i<drawData.length;i++){const bar=drawData[i];if(bar.height===0){continue;}
const nextBar=getNextNonEmptyBar(drawData,i);if(!nextBar){break;}
const rect=getBarElementRect(bar);const nextBarRect=getBarElementRect(nextBar);const rawBarValues=bar.$context.raw;const value=rawBarValues[1]-rawBarValues[0];const lineY=Math.round(value<0?rect.bottom-1:rect.top);const lineStart=Math.round(rect.right);const lineEnd=Math.round(nextBarRect.left);ctx.strokeStyle="#999";ctx.beginPath();ctx.moveTo(lineStart+1,lineY+0.5);ctx.lineTo(lineEnd,lineY+0.5);ctx.stroke();}
ctx.restore();},};function getBarElementRect(bar){const flipped=bar.base<bar.y;return{left:bar.x-bar.width/2,right:bar.x+bar.width/2,bottom:flipped?bar.base+bar.height:bar.y+bar.height,top:flipped?bar.base:bar.y,};}
function getNextNonEmptyBar(bars,startIndex){return bars.find((bar,i)=>i>startIndex&&bar.height!==0);}
css`
  .o-spreadsheet {
    .o-chart-custom-tooltip {
      font-size: 12px;
      background-color: #fff;
      z-index: ${ComponentsImportance.FigureTooltip};
    }
  }
`;chartJsExtensionRegistry.add("chartShowValuesPlugin",{register:(Chart)=>Chart.register(chartShowValuesPlugin),unregister:(Chart)=>Chart.unregister(chartShowValuesPlugin),});chartJsExtensionRegistry.add("waterfallLinesPlugin",{register:(Chart)=>Chart.register(waterfallLinesPlugin),unregister:(Chart)=>Chart.unregister(waterfallLinesPlugin),});chartJsExtensionRegistry.add("funnelController",{register:(Chart)=>Chart.register(getFunnelChartController()),unregister:(Chart)=>Chart.unregister(getFunnelChartController()),});chartJsExtensionRegistry.add("funnelElement",{register:(Chart)=>Chart.register(getFunnelChartElement()),unregister:(Chart)=>Chart.unregister(getFunnelChartElement()),});chartJsExtensionRegistry.add("funnelTooltipPositioner",{register:(Chart)=>(Chart.Tooltip.positioners.funnelTooltipPositioner=funnelTooltipPositioner),unregister:(Chart)=>(Chart.Tooltip.positioners.funnelTooltipPositioner=undefined),});chartJsExtensionRegistry.add("sunburstLabelsPlugin",{register:(Chart)=>Chart.register(sunburstLabelsPlugin),unregister:(Chart)=>Chart.unregister(sunburstLabelsPlugin),});chartJsExtensionRegistry.add("sunburstHoverPlugin",{register:(Chart)=>Chart.register(sunburstHoverPlugin),unregister:(Chart)=>Chart.unregister(sunburstHoverPlugin),});class ChartJsComponent extends Component{static template="o-spreadsheet-ChartJsComponent";static props={figureUI:Object,isFullScreen:{type:Boolean,optional:true},};canvas=useRef("graphContainer");chart;currentRuntime;animationStore;currentDevicePixelRatio=window.devicePixelRatio;get background(){return this.chartRuntime.background;}
get canvasStyle(){return`background-color: ${this.background}`;}
get chartRuntime(){const runtime=this.env.model.getters.getChartRuntime(this.props.figureUI.id);if(!("chartJsConfig"in runtime)){throw new Error("Unsupported chart runtime");}
return runtime;}
setup(){if(this.env.model.getters.isDashboard()){this.animationStore=useStore(ChartAnimationStore);}
onMounted(()=>{const runtime=this.chartRuntime;this.currentRuntime=runtime;this.createChart(deepCopy(runtime.chartJsConfig));});onWillUnmount(()=>this.chart?.destroy());useEffect(()=>{const runtime=this.chartRuntime;if(runtime!==this.currentRuntime){if(runtime.chartJsConfig.type!==this.currentRuntime.chartJsConfig.type){this.chart?.destroy();this.createChart(deepCopy(runtime.chartJsConfig));}
else{this.updateChartJs(deepCopy(runtime.chartJsConfig));}
this.currentRuntime=runtime;}
else if(this.currentDevicePixelRatio!==window.devicePixelRatio){this.currentDevicePixelRatio=window.devicePixelRatio;this.updateChartJs(deepCopy(this.currentRuntime.chartJsConfig));}});}
createChart(chartData){if(this.env.model.getters.isDashboard()&&this.animationStore){const chartType=this.env.model.getters.getChart(this.props.figureUI.id)?.type;if(chartType&&this.animationStore.animationPlayed[this.animationFigureId]!==chartType){chartData=this.enableAnimationInChartData(chartData);this.animationStore.disableAnimationForChart(this.animationFigureId,chartType);}}
const canvas=this.canvas.el;const ctx=canvas.getContext("2d");this.chart=new window.Chart(ctx,chartData);}
updateChartJs(chartData){if(this.env.model.getters.isDashboard()){const chartType=this.env.model.getters.getChart(this.props.figureUI.id)?.type;if(chartType&&this.hasChartDataChanged()&&this.animationStore){chartData=this.enableAnimationInChartData(chartData);this.animationStore.disableAnimationForChart(this.animationFigureId,chartType);}}
if(chartData.data&&chartData.data.datasets){this.chart.data=chartData.data;if(chartData.options?.plugins?.title){this.chart.config.options.plugins.title=chartData.options.plugins.title;}}
else{this.chart.data.datasets=[];}
this.chart.config.options=chartData.options;this.chart.update();}
hasChartDataChanged(){return!deepEquals(this.currentRuntime.chartJsConfig.data,this.chartRuntime.chartJsConfig.data);}
enableAnimationInChartData(chartData){return{...chartData,options:{...chartData.options,animation:{animateRotate:true}},};}
get animationFigureId(){return this.props.isFullScreen?this.props.figureUI.id+"-fullscreen":this.props.figureUI.id;}}
class AbstractChart{sheetId;title;getters;constructor(definition,sheetId,getters){this.title=definition.title;this.sheetId=sheetId;this.getters=getters;}
static validateChartDefinition(validator,definition){throw new Error("This method should be implemented by sub class");}
static transformDefinition(chartSheetId,definition,applyChange){throw new Error("This method should be implemented by sub class");}
static getDefinitionFromContextCreation(context){throw new Error("This method should be implemented by sub class");}}
function getBaselineText(baseline,keyValue,baselineMode,humanize,locale){if(!baseline){return"";}
else if(baselineMode==="text"||keyValue?.type!==CellValueType.number||baseline.type!==CellValueType.number){if(humanize){return humanizeNumber(baseline,locale);}
return baseline.formattedValue;}
let{value,format}=baseline;if(baselineMode==="progress"){value=keyValue.value/value;format="0.0%";}
else{value=Math.abs(keyValue.value-value);if(baselineMode==="percentage"&&value!==0){value=value/baseline.value;}
if(baselineMode==="percentage"){format="0.0%";}
if(!format){value=Math.round(value*100)/100;}}
if(humanize){return humanizeNumber({value,format},locale);}
return formatValue(value,{format,locale});}
function getKeyValueText(keyValueCell,humanize,locale){if(!keyValueCell){return"";}
if(humanize){return humanizeNumber(keyValueCell,locale);}
return keyValueCell.formattedValue??String(keyValueCell.value??"");}
function getBaselineColor(baseline,baselineMode,keyValue,colorUp,colorDown){if(baselineMode==="text"||baselineMode==="progress"||baseline?.type!==CellValueType.number||keyValue?.type!==CellValueType.number){return undefined;}
const diff=keyValue.value-baseline.value;if(diff>0){return colorUp;}
else if(diff<0){return colorDown;}
return undefined;}
function getBaselineArrowDirection(baseline,keyValue,baselineMode){if(baselineMode==="text"||baseline?.type!==CellValueType.number||keyValue?.type!==CellValueType.number){return"neutral";}
const diff=keyValue.value-baseline.value;if(diff>0){return"up";}
else if(diff<0){return"down";}
return"neutral";}
function checkKeyValue(definition){return definition.keyValue&&!rangeReference.test(definition.keyValue)?"InvalidScorecardKeyValue":"Success";}
function checkBaseline(definition){return definition.baseline&&!rangeReference.test(definition.baseline)?"InvalidScorecardBaseline":"Success";}
const arrowDownPath=new window.Path2D("M8.6 4.8a.5.5 0 0 1 0 .75l-3.9 3.9a.5 .5 0 0 1 -.75 0l-3.8 -3.9a.5 .5 0 0 1 0 -.75l.4-.4a.5.5 0 0 1 .75 0l2.3 2.4v-5.7c0-.25.25-.5.5-.5h.6c.25 0 .5.25.5.5v5.8l2.3 -2.4a.5.5 0 0 1 .75 0z");const arrowUpPath=new window.Path2D("M8.7 5.5a.5.5 0 0 0 0-.75l-3.8-4a.5.5 0 0 0-.75 0l-3.8 4a.5.5 0 0 0 0 .75l.4.4a.5.5 0 0 0 .75 0l2.3-2.4v5.8c0 .25.25.5.5.5h.6c.25 0 .5-.25.5-.5v-5.8l2.2 2.4a.5.5 0 0 0 .75 0z");let ScorecardChart$1=class ScorecardChart extends AbstractChart{keyValue;keyDescr;baseline;baselineMode;baselineDescr;progressBar=false;background;baselineColorUp;baselineColorDown;fontColor;humanize;type="scorecard";constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.keyValue=createValidRange(getters,sheetId,definition.keyValue);this.keyDescr=definition.keyDescr;this.baseline=createValidRange(getters,sheetId,definition.baseline);this.baselineMode=definition.baselineMode;this.baselineDescr=definition.baselineDescr;this.background=definition.background;this.baselineColorUp=definition.baselineColorUp??DEFAULT_SCORECARD_BASELINE_COLOR_UP;this.baselineColorDown=definition.baselineColorDown??DEFAULT_SCORECARD_BASELINE_COLOR_DOWN;this.humanize=definition.humanize??false;}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkKeyValue,checkBaseline);}
static getDefinitionFromContextCreation(context){return{background:context.background,type:"scorecard",keyValue:context.range?context.range[0].dataRange:undefined,title:context.title||{text:""},baselineMode:DEFAULT_SCORECARD_BASELINE_MODE,baselineColorUp:DEFAULT_SCORECARD_BASELINE_COLOR_UP,baselineColorDown:DEFAULT_SCORECARD_BASELINE_COLOR_DOWN,baseline:context.auxiliaryRange||"",};}
static transformDefinition(chartSheetId,definition,applyChange){let baseline;let keyValue;if(definition.baseline){const adaptedRange=adaptStringRange(chartSheetId,definition.baseline,applyChange);if(adaptedRange!==CellErrorType.InvalidReference){baseline=adaptedRange;}}
if(definition.keyValue){const adaptedRange=adaptStringRange(chartSheetId,definition.keyValue,applyChange);if(adaptedRange!==CellErrorType.InvalidReference){keyValue=adaptedRange;}}
return{...definition,baseline,keyValue,};}
duplicateInDuplicatedSheet(newSheetId){const baseline=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.baseline);const keyValue=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.keyValue);const definition=this.getDefinitionWithSpecificRanges(baseline,keyValue,newSheetId);return new ScorecardChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificRanges(this.baseline,this.keyValue,sheetId);return new ScorecardChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificRanges(this.baseline,this.keyValue);}
getContextCreation(){return{...this,range:this.keyValue?[{dataRange:this.getters.getRangeString(this.keyValue,this.sheetId)}]:undefined,auxiliaryRange:this.baseline?this.getters.getRangeString(this.baseline,this.sheetId):undefined,};}
getDefinitionWithSpecificRanges(baseline,keyValue,targetSheetId){return{baselineColorDown:this.baselineColorDown,baselineColorUp:this.baselineColorUp,baselineMode:this.baselineMode,title:this.title,type:"scorecard",background:this.background,baseline:baseline?this.getters.getRangeString(baseline,targetSheetId||this.sheetId):undefined,baselineDescr:this.baselineDescr,keyValue:keyValue?this.getters.getRangeString(keyValue,targetSheetId||this.sheetId):undefined,keyDescr:this.keyDescr,humanize:this.humanize,};}
getDefinitionForExcel(){return undefined;}
updateRanges(applyChange){const baseline=adaptChartRange(this.baseline,applyChange);const keyValue=adaptChartRange(this.keyValue,applyChange);if(this.baseline===baseline&&this.keyValue===keyValue){return this;}
const definition=this.getDefinitionWithSpecificRanges(baseline,keyValue);return new ScorecardChart(definition,this.sheetId,this.getters);}};function drawScoreChart(structure,canvas){const ctx=canvas.getContext("2d");const dpr=window.devicePixelRatio||1;canvas.width=dpr*structure.canvas.width;canvas.height=dpr*structure.canvas.height;ctx.scale(dpr,dpr);const availableWidth=structure.canvas.width-CHART_PADDING;ctx.fillStyle=structure.canvas.backgroundColor;ctx.fillRect(0,0,structure.canvas.width,structure.canvas.height);if(structure.title){ctx.font=structure.title.style.font;ctx.fillStyle=structure.title.style.color;const baseline=ctx.textBaseline;ctx.textBaseline="middle";ctx.fillText(clipTextWithEllipsis(ctx,structure.title.text,availableWidth-structure.title.position.x),structure.title.position.x,structure.title.position.y);ctx.textBaseline=baseline;}
if(structure.baseline){ctx.font=structure.baseline.style.font;ctx.fillStyle=structure.baseline.style.color;drawDecoratedText(ctx,structure.baseline.text,structure.baseline.position,structure.baseline.style.underline,structure.baseline.style.strikethrough);}
if(structure.baselineArrow&&structure.baselineArrow.style.size>0){ctx.save();ctx.fillStyle=structure.baselineArrow.style.color;ctx.translate(structure.baselineArrow.position.x,structure.baselineArrow.position.y);const ratio=structure.baselineArrow.style.size/10;ctx.scale(ratio,ratio);switch(structure.baselineArrow.direction){case"down":{ctx.fill(arrowDownPath);break;}
case"up":{ctx.fill(arrowUpPath);break;}}
ctx.restore();}
if(structure.baselineDescr){const descr=structure.baselineDescr;ctx.font=descr.style.font;ctx.fillStyle=descr.style.color;ctx.fillText(clipTextWithEllipsis(ctx,descr.text,availableWidth-descr.position.x),descr.position.x,descr.position.y);}
if(structure.key){ctx.font=structure.key.style.font;ctx.fillStyle=structure.key.style.color;drawDecoratedText(ctx,clipTextWithEllipsis(ctx,structure.key.text,availableWidth-structure.key.position.x),structure.key.position,structure.key.style.underline,structure.key.style.strikethrough);}
if(structure.keyDescr){const descr=structure.keyDescr;ctx.font=structure.keyDescr?.style.font??descr.style.font;ctx.fillStyle=descr.style.color;ctx.fillText(clipTextWithEllipsis(ctx,descr.text,availableWidth-descr.position.x),descr.position.x,descr.position.y);}
if(structure.progressBar){ctx.fillStyle=structure.progressBar.style.backgroundColor;ctx.beginPath();ctx.roundRect(structure.progressBar.position.x,structure.progressBar.position.y,structure.progressBar.dimension.width,structure.progressBar.dimension.height,structure.progressBar.dimension.height/2);ctx.fill();ctx.fillStyle=structure.progressBar.style.color;ctx.beginPath();if(structure.progressBar.value>0){ctx.roundRect(structure.progressBar.position.x,structure.progressBar.position.y,structure.progressBar.dimension.width*Math.max(0,Math.min(1.0,structure.progressBar.value)),structure.progressBar.dimension.height,structure.progressBar.dimension.height/2);}
else{const width=structure.progressBar.dimension.width*Math.max(0,Math.min(1.0,-structure.progressBar.value));ctx.roundRect(structure.progressBar.position.x+structure.progressBar.dimension.width-width,structure.progressBar.position.y,width,structure.progressBar.dimension.height,structure.progressBar.dimension.height/2);}
ctx.fill();}}
function createScorecardChartRuntime(chart,getters){let formattedKeyValue="";let keyValueCell;const locale=getters.getLocale();if(chart.keyValue){const keyValuePosition={sheetId:chart.keyValue.sheetId,col:chart.keyValue.zone.left,row:chart.keyValue.zone.top,};keyValueCell=getters.getEvaluatedCell(keyValuePosition);formattedKeyValue=getKeyValueText(keyValueCell,chart.humanize??false,locale);}
let baselineCell;const baseline=chart.baseline;if(baseline){const baselinePosition={sheetId:baseline.sheetId,col:baseline.zone.left,row:baseline.zone.top,};baselineCell=getters.getEvaluatedCell(baselinePosition);}
const{background,fontColor}=getters.getStyleOfSingleCellChart(chart.background,chart.keyValue);const baselineDisplay=getBaselineText(baselineCell,keyValueCell,chart.baselineMode,chart.humanize??false,locale);const baselineValue=chart.baselineMode==="progress"&&isNumber(baselineDisplay,locale)?toNumber(baselineDisplay,locale):0;return{title:{...chart.title,text:chart.title.text?_t(chart.title.text):"",},keyValue:formattedKeyValue,keyDescr:chart.keyDescr?.text?_t(chart.keyDescr.text):"",baselineDisplay,baselineArrow:getBaselineArrowDirection(baselineCell,keyValueCell,chart.baselineMode),baselineColor:getBaselineColor(baselineCell,chart.baselineMode,keyValueCell,chart.baselineColorUp,chart.baselineColorDown),baselineDescr:chart.baselineMode!=="progress"&&chart.baselineDescr?.text?_t(chart.baselineDescr.text):"",fontColor,background,baselineStyle:{...(chart.baselineMode!=="percentage"&&chart.baselineMode!=="progress"&&baseline?getters.getCellComputedStyle({sheetId:baseline.sheetId,col:baseline.zone.left,row:baseline.zone.top,}):undefined),fontSize:chart.baselineDescr?.fontSize,align:chart.baselineDescr?.align,},baselineDescrStyle:{textColor:chart.baselineDescr?.color,...chart.baselineDescr},keyValueStyle:{...(chart.keyValue?getters.getCellComputedStyle({sheetId:chart.keyValue.sheetId,col:chart.keyValue.zone.left,row:chart.keyValue.zone.top,}):undefined),fontSize:chart.keyDescr?.fontSize,align:chart.keyDescr?.align,},keyValueDescrStyle:{textColor:chart.keyDescr?.color,...chart.keyDescr},progressBar:chart.baselineMode==="progress"?{value:baselineValue,color:baselineValue>0?chart.baselineColorUp:chart.baselineColorDown,}:undefined,};}
const BOTTOM_PADDING_RATIO=0.05;function formatBaselineDescr(baselineDescr,baseline){const _baselineDescr=baselineDescr||"";return baseline&&_baselineDescr?" "+_baselineDescr:_baselineDescr;}
function getScorecardConfiguration({width,height},runtime){const designer=new ScorecardChartConfigBuilder({width,height},runtime);return designer.computeDesign();}
class ScorecardChartConfigBuilder{runtime;context;width;height;constructor({width,height},runtime){this.runtime=runtime;const canvas=document.createElement("canvas");this.width=canvas.width=width;this.height=canvas.height=height;this.context=canvas.getContext("2d");}
computeDesign(){const structure={canvas:{width:this.width,height:this.height,backgroundColor:this.backgroundColor,},};const style=this.getTextStyles();let titleHeight=0;if(this.title){let x,titleWidth;({height:titleHeight,width:titleWidth}=this.getFullTextDimensions(this.title,style.title.font));switch(this.runtime.title.align){case"center":x=(this.width-titleWidth)/2;break;case"right":x=this.width-titleWidth-CHART_PADDING;break;case"left":default:x=CHART_PADDING;}
structure.title={text:this.title,style:style.title,position:{x,y:CHART_PADDING_BOTTOM+titleHeight/2,},};}
const baselineArrowSize=style.baselineArrow?.size??0;let{height:baselineHeight,width:baselineWidth}=this.getTextDimensions(this.baseline,style.baselineValue.font);if(!this.baseline){baselineHeight=this.getTextDimensions(this.baselineDescr,style.baselineDescr.font).height;}
const baselineDescrWidth=this.getTextDimensions(this.baselineDescr,style.baselineDescr.font).width;let baselineX;switch(this.runtime.baselineStyle?.align){case"right":baselineX=this.width-CHART_PADDING-baselineDescrWidth-baselineWidth;break;case"left":baselineX=CHART_PADDING+baselineArrowSize;break;default:baselineX=(this.width-baselineWidth-baselineDescrWidth+baselineArrowSize)/2;}
if(this.baseline){structure.baseline={text:this.baseline,style:style.baselineValue,position:{x:baselineX,y:this.keyValue?this.height*(1-BOTTOM_PADDING_RATIO*(this.runtime.progressBar?1:2)):this.height-(this.height-titleHeight-baselineHeight)/2-CHART_PADDING_BOTTOM,},};if(style.baselineArrow&&!this.runtime.progressBar){structure.baselineArrow={direction:this.baselineArrow,style:style.baselineArrow,position:{x:structure.baseline.position.x-baselineArrowSize,y:structure.baseline.position.y-(baselineHeight+baselineArrowSize)/2,},};}}
if(structure.baseline&&this.baselineDescr){const position={x:structure.baseline.position.x+baselineWidth,y:structure.baseline.position.y,};structure.baselineDescr={text:this.baselineDescr,style:style.baselineDescr,position,};}
let progressBarHeight=0;if(this.runtime.progressBar){progressBarHeight=this.height*0.05;structure.progressBar={position:{x:2*CHART_PADDING,y:this.height*(1-2*BOTTOM_PADDING_RATIO)-baselineHeight-progressBarHeight,},dimension:{height:progressBarHeight,width:this.width-4*CHART_PADDING,},value:this.runtime.progressBar.value,style:{color:this.runtime.progressBar.color,backgroundColor:this.secondaryFontColor,},};}
const{width:keyWidth,height:keyHeight}=this.getFullTextDimensions(this.keyValue,style.keyValue.font);const keyDescrWidth=this.getTextDimensions(this.keyDescr,style.keyDescr.font).width;let keyX;switch(this.runtime.keyValueStyle?.align){case"right":keyX=this.width-CHART_PADDING-keyDescrWidth-keyWidth;break;case"left":keyX=CHART_PADDING;break;default:keyX=(this.width-keyWidth-keyDescrWidth)/2;}
if(this.keyValue){structure.key={text:this.keyValue,style:style.keyValue,position:{x:Math.max(CHART_PADDING,keyX),y:this.height*(0.5-BOTTOM_PADDING_RATIO*2)+
CHART_PADDING_BOTTOM/2+
(titleHeight+keyHeight/2)/2,},};}
if(structure.key&&this.keyDescr){const position={x:structure.key.position.x+keyWidth,y:structure.key.position.y,};structure.keyDescr={text:this.keyDescr,style:style.keyDescr,position,};}
return structure;}
get title(){return this.runtime.title.text??"";}
get keyValue(){return this.runtime.keyValue;}
get keyDescr(){return formatBaselineDescr(this.runtime.keyDescr,this.keyValue);}
get baseline(){return this.runtime.baselineDisplay;}
get baselineDescr(){return formatBaselineDescr(this.runtime.baselineDescr,this.baseline);}
get baselineArrow(){return this.runtime.baselineArrow;}
get backgroundColor(){return this.runtime.background;}
get secondaryFontColor(){return chartMutedFontColor(this.backgroundColor);}
getTextDimensions(text,font){this.context.font=font;const measure=this.context.measureText(text);return{width:measure.width,height:measure.actualBoundingBoxAscent+measure.actualBoundingBoxDescent,};}
getFullTextDimensions(text,font){this.context.font=font;const measure=this.context.measureText(text);return{width:measure.width,height:measure.fontBoundingBoxAscent+measure.fontBoundingBoxDescent,};}
getTextStyles(){const keyValueFontSize=this.runtime.keyValueStyle?.fontSize??DEFAULT_SCORECARD_KEY_VALUE_FONT_SIZE;const keyValueDescrFontSize=Math.floor(0.9*keyValueFontSize);let baselineValueFontSize=this.runtime.baselineStyle?.fontSize??DEFAULT_SCORECARD_BASELINE_FONT_SIZE;const baselineDescrFontSize=Math.floor(0.9*baselineValueFontSize);if(this.runtime.progressBar){baselineValueFontSize/=1.5;}
return{title:{font:getDefaultContextFont(this.runtime.title.fontSize??SCORECARD_CHART_TITLE_FONT_SIZE,this.runtime.title.bold,this.runtime.title.italic),color:this.runtime.title.color??this.secondaryFontColor,},keyValue:{color:this.runtime.keyValueStyle?.textColor||this.runtime.fontColor,font:getDefaultContextFont(keyValueFontSize,this.runtime.keyValueStyle?.bold,this.runtime.keyValueStyle?.italic),strikethrough:this.runtime.keyValueStyle?.strikethrough,underline:this.runtime.keyValueStyle?.underline,},keyDescr:{color:this.runtime.keyValueDescrStyle?.textColor||this.runtime.fontColor,font:getDefaultContextFont(keyValueDescrFontSize,this.runtime.keyValueDescrStyle?.bold,this.runtime.keyValueDescrStyle?.italic),strikethrough:this.runtime.keyValueDescrStyle?.strikethrough,underline:this.runtime.keyValueDescrStyle?.underline,},baselineValue:{font:getDefaultContextFont(baselineValueFontSize,this.runtime.baselineStyle?.bold,this.runtime.baselineStyle?.italic),strikethrough:this.runtime.baselineStyle?.strikethrough,underline:this.runtime.baselineStyle?.underline,color:this.runtime.baselineColor||this.runtime.baselineStyle?.textColor||this.secondaryFontColor,},baselineDescr:{font:getDefaultContextFont(baselineDescrFontSize,this.runtime.baselineDescrStyle?.bold,this.runtime.baselineDescrStyle?.italic),strikethrough:this.runtime.baselineDescrStyle?.strikethrough,underline:this.runtime.baselineDescrStyle?.underline,color:this.runtime.baselineDescrStyle?.textColor??this.secondaryFontColor,},baselineArrow:this.baselineArrow==="neutral"||this.runtime.progressBar?undefined:{size:this.keyValue?0.8*baselineValueFontSize:0,color:this.runtime.baselineColor||this.runtime.baselineStyle?.textColor||this.secondaryFontColor,},};}}
class ScorecardChart extends Component{static template="o-spreadsheet-ScorecardChart";static props={figureUI:Object,};canvas=useRef("chartContainer");get runtime(){return this.env.model.getters.getChartRuntime(this.props.figureUI.id);}
get title(){const title=this.env.model.getters.getChartDefinition(this.props.figureUI.id).title.text??"";return _t(title);}
setup(){useEffect(this.createChart.bind(this),()=>{const canvas=this.canvas.el;const rect=canvas.getBoundingClientRect();return[rect.width,rect.height,this.runtime,this.canvas.el,window.devicePixelRatio];});}
createChart(){const canvas=this.canvas.el;const config=getScorecardConfiguration(canvas.getBoundingClientRect(),this.runtime);drawScoreChart(config,canvas);}}
const macRegex=/Mac/i;const MODIFIER_KEYS=["Shift","Control","Alt","Meta"];function isChildEvent(parent,ev){if(!parent)
return false;return!!ev.target&&parent.contains(ev.target);}
function gridOverlayPosition(){const spreadsheetElement=document.querySelector(".o-grid-overlay");if(spreadsheetElement){const{top,left}=spreadsheetElement.getBoundingClientRect();return{top,left};}
throw new Error("Can't find spreadsheet position");}
function getRefBoundingRect(ref){if(!ref.el){return{x:0,y:0,width:0,height:0};}
return getBoundingRectAsPOJO(ref.el);}
function getBoundingRectAsPOJO(el){const rect=el.getBoundingClientRect();return{x:rect.x,y:rect.y,width:rect.width,height:rect.height,};}
function*iterateChildren(el){yield el;if(el.hasChildNodes()){for(const child of el.childNodes){yield*iterateChildren(child);}}}
function getOpenedMenus(){return Array.from(document.querySelectorAll(".o-spreadsheet .o-menu"));}
function getCurrentSelection(el){const{startElement,endElement,startSelectionOffset,endSelectionOffset}=getStartAndEndSelection(el);const startSizeBefore=findSelectionIndex(el,startElement,startSelectionOffset);const endSizeBefore=findSelectionIndex(el,endElement,endSelectionOffset);return{start:startSizeBefore,end:endSizeBefore,};}
function getStartAndEndSelection(el){const selection=document.getSelection();return{startElement:selection.anchorNode||el,startSelectionOffset:selection.anchorOffset,endElement:selection.focusNode||el,endSelectionOffset:selection.focusOffset,};}
function findSelectionIndex(el,nodeToFind,nodeOffset){let usedCharacters=0;const it=iterateChildren(el);let current=it.next();let isFirstParagraph=true;while(!current.done&&current.value!==nodeToFind){if(!current.value.hasChildNodes()){if(current.value.textContent){usedCharacters+=current.value.textContent.length;}}
if(current.value.nodeName==="P"||(current.value.nodeName==="DIV"&&current.value!==el)){if(isFirstParagraph){isFirstParagraph=false;}
else{usedCharacters++;}}
current=it.next();}
if(current.value!==nodeToFind){return 0;}
else{if(!current.value.hasChildNodes()){usedCharacters+=nodeOffset;}
else{const children=[...current.value.childNodes].slice(0,nodeOffset);usedCharacters+=children.reduce((acc,child,index)=>{if(child.textContent!==null){let chars=child.textContent.length;if(child.nodeName==="P"&&index!==children.length-1){chars++;}
return acc+chars;}
else{return acc;}},0);}}
if(nodeToFind.nodeName==="P"&&!isFirstParagraph&&nodeToFind.textContent===""){usedCharacters++;}
return usedCharacters;}
const letterRegex=/^[a-zA-Z]$/;function keyboardEventToShortcutString(ev,mode="key"){let keyDownString="";if(!MODIFIER_KEYS.includes(ev.key)){if(isCtrlKey(ev))
keyDownString+="Ctrl+";if(ev.altKey)
keyDownString+="Alt+";if(ev.shiftKey)
keyDownString+="Shift+";}
const key=mode==="key"?ev.key:ev.code;keyDownString+=letterRegex.test(key)?key.toUpperCase():key;return keyDownString;}
function isMacOS(){return Boolean(macRegex.test(navigator.userAgent));}
function isCtrlKey(ev){return isMacOS()||isIOS()?ev.metaKey:ev.ctrlKey;}
function isMiddleClickOrCtrlClick(ev){return ev.button===1||(isCtrlKey(ev)&&ev.button===0);}
async function convertImageToPng(imageUrl){return new Promise((resolve,reject)=>{const image=new Image();image.addEventListener("load",()=>{const canvas=document.createElement("canvas");canvas.width=image.width;canvas.height=image.height;const ctx=canvas.getContext("2d");ctx?.drawImage(image,0,0);canvas.toBlob(resolve,"image/png");});image.addEventListener("error",reject);image.src=imageUrl;});}
function downloadFile(dataUrl,fileName){const a=document.createElement("a");a.href=dataUrl;a.download=fileName;document.body.appendChild(a);a.click();document.body.removeChild(a);}
function isBrowserFirefox(){return/Firefox/i.test(navigator.userAgent);}
function maxTouchPoints(){return navigator.maxTouchPoints||1;}
function isAndroid(){return/Android/i.test(navigator.userAgent);}
function isIOS(){return(/(iPad|iPhone|iPod)/i.test(navigator.userAgent)||(navigator.platform==="MacIntel"&&maxTouchPoints()>1));}
function isOtherMobileOS(){return/(webOS|BlackBerry|Windows Phone)/i.test(navigator.userAgent);}
function isMobileOS(){return isAndroid()||isIOS()||isOtherMobileOS();}
function toXlsxHexColor(color){color=toHex(color).replace("#","");if(color.length===8){return color.slice(6)+color.slice(0,6);}
return color;}
const GAUGE_PADDING_SIDE=30;const GAUGE_PADDING_TOP=10;const GAUGE_PADDING_BOTTOM=20;const GAUGE_LABELS_FONT_SIZE=12;const GAUGE_DEFAULT_VALUE_FONT_SIZE=80;const GAUGE_BACKGROUND_COLOR="#F3F2F1";const GAUGE_INFLECTION_LABEL_BOTTOM_MARGIN=6;const GAUGE_TITLE_SECTION_HEIGHT=25;function drawGaugeChart(canvas,runtime){const canvasBoundingRect=canvas.getBoundingClientRect();const dpr=window.devicePixelRatio||1;canvas.width=dpr*canvasBoundingRect.width;canvas.height=dpr*canvasBoundingRect.height;const ctx=canvas.getContext("2d");ctx.scale(dpr,dpr);const config=getGaugeRenderingConfig(canvasBoundingRect,runtime,ctx);drawBackground(ctx,config);drawGauge(ctx,config);drawInflectionValues(ctx,config);drawLabels(ctx,config);drawTitle(ctx,config);}
function drawGauge(ctx,config){ctx.save();const gauge=config.gauge;const arcCenterX=gauge.rect.x+gauge.rect.width/2;const arcCenterY=gauge.rect.y+gauge.rect.height;const arcRadius=gauge.rect.height-gauge.arcWidth/2;if(arcRadius<0){return;}
const gaugeAngle=gauge.percentage===1?0:Math.PI*(1+gauge.percentage);ctx.strokeStyle=GAUGE_BACKGROUND_COLOR;ctx.beginPath();ctx.lineWidth=gauge.arcWidth;ctx.arc(arcCenterX,arcCenterY,arcRadius,gaugeAngle,0);ctx.stroke();ctx.strokeStyle=gauge.color;ctx.beginPath();ctx.arc(arcCenterX,arcCenterY,arcRadius,Math.PI,gaugeAngle);ctx.stroke();ctx.restore();}
function drawBackground(ctx,config){ctx.save();ctx.fillStyle=config.backgroundColor;ctx.fillRect(0,0,config.width,config.height);ctx.restore();}
function drawLabels(ctx,config){for(const label of[config.minLabel,config.maxLabel,config.gaugeValue]){ctx.save();ctx.textAlign="center";ctx.fillStyle=label.color;ctx.font=`${label.fontSize}px ${DEFAULT_FONT}`;ctx.fillText(label.label,label.textPosition.x,label.textPosition.y);ctx.restore();}}
function drawInflectionValues(ctx,config){const{x:rectX,y:rectY,width,height}=config.gauge.rect;for(const inflectionValue of config.inflectionValues){ctx.save();ctx.translate(rectX+width/2-0.5,rectY+height-0.5);ctx.rotate(Math.PI/2-inflectionValue.rotation);ctx.lineWidth=2;ctx.strokeStyle=chartMutedFontColor(config.backgroundColor)+"aa";ctx.beginPath();ctx.moveTo(0,-(height-config.gauge.arcWidth));ctx.lineTo(0,-height-3);ctx.stroke();ctx.textAlign="center";ctx.font=`${inflectionValue.fontSize}px ${DEFAULT_FONT}`;ctx.fillStyle=inflectionValue.color;const textY=-height-GAUGE_INFLECTION_LABEL_BOTTOM_MARGIN-inflectionValue.offset;ctx.fillText(inflectionValue.label,0,textY);ctx.restore();}}
function drawTitle(ctx,config){ctx.save();const title=config.title;ctx.font=getDefaultContextFont(title.fontSize,title.bold,title.italic);ctx.textBaseline="middle";ctx.fillStyle=title.color;ctx.fillText(title.label,title.textPosition.x,title.textPosition.y);ctx.restore();}
function getGaugeRenderingConfig(boundingRect,runtime,ctx){const maxValue=runtime.maxValue;const minValue=runtime.minValue;const gaugeValue=getGaugeValue(runtime,"animated");const gaugeRect=getGaugeRect(boundingRect,runtime.title.text);const gaugeArcWidth=gaugeRect.width/6;const gaugePercentage=gaugeValue?(gaugeValue-minValue.value)/(maxValue.value-minValue.value):0;const gaugeValuePosition={x:boundingRect.width/2,y:gaugeRect.y+gaugeRect.height-gaugeRect.height/12,};let gaugeValueFontSize=GAUGE_DEFAULT_VALUE_FONT_SIZE;if(gaugeRect.height<300){gaugeValueFontSize=gaugeValueFontSize*(gaugeRect.height/300);}
const maxTextWidth=gaugeRect.width/2;const gaugeLabel=runtime.gaugeValue?.label||"-";if(computeTextWidth(ctx,gaugeLabel,{fontSize:gaugeValueFontSize},"px")>maxTextWidth){gaugeValueFontSize=getFontSizeMatchingWidth(maxTextWidth,gaugeValueFontSize,(fontSize)=>computeTextWidth(ctx,gaugeLabel,{fontSize},"px"));}
const minLabelPosition={x:gaugeRect.x+gaugeArcWidth/2,y:gaugeRect.y+gaugeRect.height+GAUGE_LABELS_FONT_SIZE,};const maxLabelPosition={x:gaugeRect.x+gaugeRect.width-gaugeArcWidth/2,y:gaugeRect.y+gaugeRect.height+GAUGE_LABELS_FONT_SIZE,};const textColor=chartMutedFontColor(runtime.background);const inflectionValues=getInflectionValues(runtime,gaugeRect,textColor,ctx);let x=0,titleWidth=0,titleHeight=0;if(runtime.title.text){({width:titleWidth,height:titleHeight}=computeTextDimension(ctx,runtime.title.text,{fontSize:CHART_TITLE_FONT_SIZE,...runtime.title},"px"));}
switch(runtime.title.align){case"right":x=boundingRect.width-titleWidth-CHART_PADDING;break;case"center":x=(boundingRect.width-titleWidth)/2;break;case"left":default:x=CHART_PADDING;break;}
return{width:boundingRect.width,height:boundingRect.height,title:{label:runtime.title.text??"",fontSize:runtime.title.fontSize??CHART_TITLE_FONT_SIZE,textPosition:{x,y:CHART_PADDING_TOP+titleHeight/2,},color:runtime.title.color??textColor,bold:runtime.title.bold,italic:runtime.title.italic,},backgroundColor:runtime.background,gauge:{rect:gaugeRect,arcWidth:gaugeArcWidth,percentage:clip(gaugePercentage,0,1),color:getGaugeColor(runtime),},inflectionValues,gaugeValue:{label:gaugeLabel,textPosition:gaugeValuePosition,fontSize:gaugeValueFontSize,color:textColor,},minLabel:{label:runtime.minValue.label,textPosition:minLabelPosition,fontSize:GAUGE_LABELS_FONT_SIZE,color:textColor,},maxLabel:{label:runtime.maxValue.label,textPosition:maxLabelPosition,fontSize:GAUGE_LABELS_FONT_SIZE,color:textColor,},};}
function getGaugeRect(boundingRect,title){const titleHeight=title?GAUGE_TITLE_SECTION_HEIGHT:0;const drawHeight=boundingRect.height-GAUGE_PADDING_BOTTOM-titleHeight-GAUGE_PADDING_TOP;const drawWidth=boundingRect.width-GAUGE_PADDING_SIDE*2;let gaugeWidth;let gaugeHeight;if(drawWidth>2*drawHeight){gaugeWidth=2*drawHeight;gaugeHeight=drawHeight;}
else{gaugeWidth=drawWidth;gaugeHeight=drawWidth/2;}
const gaugeX=GAUGE_PADDING_SIDE+(drawWidth-gaugeWidth)/2;const gaugeY=titleHeight+GAUGE_PADDING_TOP+(drawHeight-gaugeHeight)/2;return{x:gaugeX,y:gaugeY,width:gaugeWidth,height:gaugeHeight,};}
function getInflectionValues(runtime,gaugeRect,textColor,ctx){const maxValue=runtime.maxValue;const minValue=runtime.minValue;const gaugeCircleCenter={x:gaugeRect.x+gaugeRect.width/2,y:gaugeRect.y+gaugeRect.height,};const textStyle={fontSize:GAUGE_LABELS_FONT_SIZE};const inflectionValues=[];const inflectionValuesTextRects=[];for(const inflectionValue of runtime.inflectionValues){const percentage=(inflectionValue.value-minValue.value)/(maxValue.value-minValue.value);const labelWidth=computeTextWidth(ctx,inflectionValue.label,textStyle,"px");const angle=Math.PI-Math.PI*percentage;const textRect=getRectangleTangentToCircle(angle,gaugeRect.height+GAUGE_INFLECTION_LABEL_BOTTOM_MARGIN,gaugeCircleCenter.x,gaugeCircleCenter.y,labelWidth+2,GAUGE_LABELS_FONT_SIZE);const offset=inflectionValuesTextRects.some((rect)=>doRectanglesIntersect(rect,textRect))?GAUGE_LABELS_FONT_SIZE:0;inflectionValuesTextRects.push(textRect);inflectionValues.push({rotation:angle,label:inflectionValue.label,fontSize:GAUGE_LABELS_FONT_SIZE,color:textColor,offset,});}
return inflectionValues;}
function getGaugeColor(runtime){const gaugeValue=getGaugeValue(runtime,"final");if(gaugeValue===undefined){return GAUGE_BACKGROUND_COLOR;}
for(let i=0;i<runtime.inflectionValues.length;i++){const inflectionValue=runtime.inflectionValues[i];if(inflectionValue.operator==="<"&&gaugeValue<inflectionValue.value){return runtime.colors[i];}
else if(inflectionValue.operator==="<="&&gaugeValue<=inflectionValue.value){return runtime.colors[i];}}
return runtime.colors.at(-1);}
function getSegmentsOfRectangle(rectangle){return[{start:rectangle.topLeft,end:rectangle.topRight},{start:rectangle.topRight,end:rectangle.bottomRight},{start:rectangle.bottomRight,end:rectangle.bottomLeft},{start:rectangle.bottomLeft,end:rectangle.topLeft},];}
function doSegmentIntersect(segment1,segment2){const A=segment1.start;const B=segment1.end;const C=segment2.start;const D=segment2.end;function ccw(a,b,c){return(c.y-a.y)*(b.x-a.x)>(b.y-a.y)*(c.x-a.x);}
return ccw(A,C,D)!==ccw(B,C,D)&&ccw(A,B,C)!==ccw(A,B,D);}
function doRectanglesIntersect(rect1,rect2){const segments1=getSegmentsOfRectangle(rect1);const segments2=getSegmentsOfRectangle(rect2);for(const segment1 of segments1){for(const segment2 of segments2){if(doSegmentIntersect(segment1,segment2)){return true;}}}
return false;}
function getRectangleTangentToCircle(angle,radius,circleCenterX,circleCenterY,rectWidth,rectHeight){const cos=Math.cos(angle);const sin=Math.sin(angle);const x=cos*radius;const y=sin*radius;const x2=sin*(rectWidth/2);const y2=cos*(rectWidth/2);const bottomRight={x:x+x2+circleCenterX,y:circleCenterY-(y-y2),};const bottomLeft={x:x-x2+circleCenterX,y:circleCenterY-(y+y2),};const xp=cos*(radius+rectHeight);const yp=sin*(radius+rectHeight);const topLeft={x:xp-x2+circleCenterX,y:circleCenterY-(yp+y2),};const topRight={x:xp+x2+circleCenterX,y:circleCenterY-(yp-y2),};return{bottomLeft,bottomRight,topRight,topLeft};}
function getGaugeValue(runtime,mode){return mode==="animated"&&runtime.animationValue!==undefined?runtime.animationValue:runtime.gaugeValue?.value;}
const CHART_COMMON_OPTIONS={responsive:true,maintainAspectRatio:false,elements:{line:{fill:false,},point:{hitRadius:15,},},animation:false,events:["mousemove","mouseout","click","touchstart","touchmove","mouseup"],};function chartToImageUrl(runtime,figure,type){const div=document.createElement("div");div.style.width=`${figure.width}px`;div.style.height=`${figure.height}px`;const canvas=document.createElement("canvas");div.append(canvas);canvas.setAttribute("width",figure.width.toString());canvas.setAttribute("height",figure.height.toString());let imageContent;document.body.append(div);if("chartJsConfig"in runtime){const config=deepCopy(runtime.chartJsConfig);config.plugins=[backgroundColorChartJSPlugin];const chart=new window.Chart(canvas,config);imageContent=chart.toBase64Image();chart.destroy();}
else if(type==="scorecard"){const design=getScorecardConfiguration(figure,runtime);drawScoreChart(design,canvas);imageContent=canvas.toDataURL();}
else if(type==="gauge"){drawGaugeChart(canvas,runtime);imageContent=canvas.toDataURL();}
div.remove();return imageContent;}
async function chartToImageFile(runtime,figure,type){const div=document.createElement("div");div.style.width=`${figure.width}px`;div.style.height=`${figure.height}px`;div.style.position="fixed";div.style.opacity="0";const canvas=document.createElement("canvas");div.append(canvas);canvas.setAttribute("width",figure.width.toString());canvas.setAttribute("height",figure.height.toString());document.body.append(div);let chartBlob=null;if("chartJsConfig"in runtime){const config=deepCopy(runtime.chartJsConfig);config.plugins=[backgroundColorChartJSPlugin];const chart=new window.Chart(canvas,config);chartBlob=await new Promise((resolve)=>canvas.toBlob(resolve,"image/png"));chart.destroy();}
else if(type==="scorecard"){const design=getScorecardConfiguration(figure,runtime);drawScoreChart(design,canvas);chartBlob=await new Promise((resolve)=>canvas.toBlob(resolve,"image/png"));}
else if(type==="gauge"){drawGaugeChart(canvas,runtime);chartBlob=await new Promise((resolve)=>canvas.toBlob(resolve,"image/png"));}
div.remove();return chartBlob?new File([chartBlob],"chart.png",{type:"image/png"}):undefined;}
const backgroundColorChartJSPlugin={id:"customCanvasBackgroundColor",beforeDraw:(chart)=>{const{ctx}=chart;ctx.save();ctx.globalCompositeOperation="destination-over";ctx.fillStyle="#ffffff";ctx.fillRect(0,0,chart.width,chart.height);ctx.restore();},};const CfTerms={Errors:{["InvalidRange"]:_t("The range is invalid"),["FirstArgMissing"]:_t("The argument is missing. Please provide a value"),["SecondArgMissing"]:_t("The second argument is missing. Please provide a value"),["MinNaN"]:_t("The minpoint must be a number"),["MidNaN"]:_t("The midpoint must be a number"),["MaxNaN"]:_t("The maxpoint must be a number"),["ValueUpperInflectionNaN"]:_t("The first value must be a number"),["ValueLowerInflectionNaN"]:_t("The second value must be a number"),["MinBiggerThanMax"]:_t("Minimum must be smaller then Maximum"),["MinBiggerThanMid"]:_t("Minimum must be smaller then Midpoint"),["MidBiggerThanMax"]:_t("Midpoint must be smaller then Maximum"),["LowerBiggerThanUpper"]:_t("Lower inflection point must be smaller than upper inflection point"),["MinInvalidFormula"]:_t("Invalid Minpoint formula"),["MaxInvalidFormula"]:_t("Invalid Maxpoint formula"),["MidInvalidFormula"]:_t("Invalid Midpoint formula"),["ValueUpperInvalidFormula"]:_t("Invalid upper inflection point formula"),["ValueLowerInvalidFormula"]:_t("Invalid lower inflection point formula"),["EmptyRange"]:_t("A range needs to be defined"),["ValueCellIsInvalidFormula"]:_t("At least one of the provided values is an invalid formula"),Unexpected:_t("The rule is invalid for an unknown reason"),},ColorScale:_t("Color scale"),IconSet:_t("Icon set"),DataBar:_t("Data bar"),};const ChartTerms={Series:_t("Series"),BackgroundColor:_t("Background color"),StackedBarChart:_t("Stacked bar chart"),StackedLineChart:_t("Stacked line chart"),StackedAreaChart:_t("Stacked area chart"),StackedColumnChart:_t("Stacked column chart"),CumulativeData:_t("Cumulative data"),TreatLabelsAsText:_t("Treat labels as text"),AggregatedChart:_t("Aggregate"),Errors:{Unexpected:_t("The chart definition is invalid for an unknown reason"),["InvalidDataSet"]:_t("The dataset is invalid"),["InvalidLabelRange"]:_t("Labels are invalid"),["InvalidScorecardKeyValue"]:_t("The key value is invalid"),["InvalidScorecardBaseline"]:_t("The baseline value is invalid"),["InvalidGaugeDataRange"]:_t("The data range is invalid"),["EmptyGaugeRangeMin"]:_t("A minimum range limit value is needed"),["GaugeRangeMinNaN"]:_t("The minimum range limit value must be a number"),["EmptyGaugeRangeMax"]:_t("A maximum range limit value is needed"),["GaugeRangeMaxNaN"]:_t("The maximum range limit value must be a number"),["GaugeLowerInflectionPointNaN"]:_t("The lower inflection point value must be a number"),["GaugeUpperInflectionPointNaN"]:_t("The upper inflection point value must be a number"),},GeoChart:{ColorScales:{blues:_t("Blues"),cividis:_t("Cividis"),greens:_t("Greens"),greys:_t("Greys"),oranges:_t("Oranges"),purples:_t("Purples"),rainbow:_t("Rainbow"),reds:_t("Reds"),viridis:_t("Viridis"),},},};const CustomCurrencyTerms={Custom:_t("Custom"),};const MergeErrorMessage=_t("Merged cells are preventing this operation. Unmerge those cells and try again.");const SplitToColumnsTerms={Errors:{Unexpected:_t("Cannot split the selection for an unknown reason"),["NoSplitSeparatorInSelection"]:_t("There is no match for the selected separator in the selection"),["MoreThanOneColumnSelected"]:_t("Only a selection from a single column can be split"),["SplitWillOverwriteContent"]:_t("Splitting will overwrite existing content"),},};const RemoveDuplicateTerms={Errors:{Unexpected:_t("Cannot remove duplicates for an unknown reason"),["MoreThanOneRangeSelected"]:_t("Please select only one range of cells"),["EmptyTarget"]:_t("Please select a range of cells containing values."),["NoColumnsProvided"]:_t("Please select at latest one column to analyze."),["WillRemoveExistingMerge"]:_t("This operation is not possible due to a merge. Please remove the merges first than try again."),},};const DVTerms={DateIs:{today:_t("today"),yesterday:_t("yesterday"),tomorrow:_t("tomorrow"),lastWeek:_t("in the past week"),lastMonth:_t("in the past month"),lastYear:_t("in the past year"),},DateIsBefore:{today:_t("today"),yesterday:_t("yesterday"),tomorrow:_t("tomorrow"),lastWeek:_t("one week ago"),lastMonth:_t("one month ago"),lastYear:_t("one year ago"),},CriterionError:{notEmptyValue:_t("The value must not be empty"),numberValue:_t("The value must be a number"),dateValue:_t("The value must be a date"),validRange:_t("The value must be a valid range"),validFormula:_t("The formula must be valid"),},Errors:{["InvalidRange"]:_t("The range is invalid."),["InvalidDataValidationCriterionValue"]:_t("One or more of the provided criteria values are invalid. Please review and correct them."),["InvalidNumberOfCriterionValues"]:_t("One or more of the provided criteria values are missing."),Unexpected:_t("The rule is invalid for an unknown reason."),},};const TableTerms={Errors:{Unexpected:_t("The table zone is invalid for an unknown reason"),["TableOverlap"]:_t("You cannot create overlapping tables."),["NonContinuousTargets"]:_t("A table can only be created on a continuous selection."),["InvalidRange"]:_t("The range is invalid"),["TargetOutOfSheet"]:_t("The range is out of the sheet"),},Checkboxes:{hasFilters:_t("Filter button"),headerRow:_t("Header row(s)"),bandedRows:_t("Banded rows"),firstColumn:_t("First column"),lastColumn:_t("Last column"),bandedColumns:_t("Banded columns"),automaticAutofill:_t("Automatically autofill formulas"),totalRow:_t("Total row"),isDynamic:_t("Auto-adjust to formula result"),},Tooltips:{filterWithoutHeader:_t("Cannot have filters without a header row"),isDynamic:_t("For tables based on array formulas only"),},};const measureDisplayTerms={labels:{no_calculations:_t("No calculations"),"%_of_grand_total":_t("% of grand total"),"%_of_col_total":_t("% of column total"),"%_of_row_total":_t("% of row total"),"%_of":_t("% of"),"%_of_parent_row_total":_t("% of parent row total"),"%_of_parent_col_total":_t("% of parent column total"),"%_of_parent_total":_t("% of parent total"),difference_from:_t("Difference from"),"%_difference_from":_t("% difference from"),running_total:_t("Running total"),"%_running_total":_t("% Running total"),rank_asc:_t("Rank smallest to largest"),rank_desc:_t("Rank largest to smallest"),index:_t("Index"),},descriptions:{"%_of_grand_total":()=>_t("Displayed as % of grand total"),"%_of_col_total":()=>_t("Displayed as % of column total"),"%_of_row_total":()=>_t("Displayed as % of row total"),"%_of":(field)=>_t('Displayed as % of "%s"',field),"%_of_parent_row_total":(field)=>_t('Displayed as % of parent row total of "%s"',field),"%_of_parent_col_total":()=>_t("Displayed as % of parent column total"),"%_of_parent_total":(field)=>_t('Displayed as % of parent "%s" total',field),difference_from:(field)=>_t('Displayed as difference from "%s"',field),"%_difference_from":(field)=>_t('Displayed as % difference from "%s"',field),running_total:(field)=>_t('Displayed as running total based on "%s"',field),"%_running_total":(field)=>_t('Displayed as % running total based on "%s"',field),rank_asc:(field)=>_t('Displayed as rank from smallest to largest based on "%s"',field),rank_desc:(field)=>_t('Displayed as rank largest to smallest based on "%s"',field),index:()=>_t("Displayed as index"),},documentation:{no_calculations:_t("Displays the value that is entered in the field."),"%_of_grand_total":_t("Displays values as a percentage of the grand total of all the values or data points in the report."),"%_of_col_total":_t("Displays all the values in each column or series as a percentage of the total for the column or series."),"%_of_row_total":_t("Displays the value in each row or category as a percentage of the total for the row or category."),"%_of":_t("Displays values as a percentage of the value of the Base item in the Base field."),"%_of_parent_row_total":_t("Calculates values as follows:\n(value for the item) / (value for the parent item on rows)"),"%_of_parent_col_total":_t("Calculates values as follows:\n(value for the item) / (value for the parent item on columns)"),"%_of_parent_total":_t("Calculates values as follows:\n(value for the item) / (value for the parent item of the selected Base field)"),difference_from:_t("Displays values as the difference from the value of the Base item in the Base field."),"%_difference_from":_t("Displays values as the percentage difference from the value of the Base item in the Base field."),running_total:_t("Displays the value for successive items in the Base field as a running total."),"%_running_total":_t("Calculates the value as a percentage for successive items in the Base field that are displayed as a running total."),rank_asc:_t("Displays the rank of selected values in a specific field, listing the smallest item in the field as 1, and each larger value with a higher rank value."),rank_desc:_t("Displays the rank of selected values in a specific field, listing the largest item in the field as 1, and each smaller value with a higher rank value."),index:_t("Calculates values as follows:\n((value in cell) x (Grand Total of Grand Totals)) / ((Grand Row Total) x (Grand Column Total))"),},};const UNIT_LENGTH={second:1000,minute:1000*60,hour:1000*3600,day:1000*3600*24,month:1000*3600*24*30,year:1000*3600*24*365,};const Milliseconds={inSeconds:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.second);},inMinutes:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.minute);},inHours:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.hour);},inDays:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.day);},inMonths:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.month);},inYears:function(milliseconds){return Math.floor(milliseconds/UNIT_LENGTH.year);},};const timeFormatLuxonCompatible=/^((d|dd|m|mm|yyyy|yy|hh|h|ss|a)(-|:|\s|\/))*(d|dd|m|mm|yyyy|yy|hh|h|ss|a)$/i;function getChartTimeOptions(labels,labelFormat,locale){const luxonFormat=convertDateFormatForLuxon(labelFormat);const timeUnit=getBestTimeUnitForScale(labels,luxonFormat,locale);const displayFormats={};if(timeUnit){displayFormats[timeUnit]=luxonFormat;}
return{parser:luxonFormat,displayFormats,unit:timeUnit??false,};}
function convertDateFormatForLuxon(format){const indexH=format.indexOf("h");if(indexH>=0){format=format.slice(0,indexH).replace(/m/g,"M")+format.slice(indexH);}
else{format=format.replace(/m/g,"M");}
if(!format.includes("a")){format=format.replace(/h/g,"H");}
return format;}
function getFormatMinDisplayUnit(format){if(format.includes("s")){return"second";}
else if(format.includes("m")){return"minute";}
else if(format.includes("h")||format.includes("H")){return"hour";}
else if(format.includes("d")){return"day";}
else if(format.includes("M")){return"month";}
return"year";}
function getBestTimeUnitForScale(labels,format,locale){const labelDates=labels.map((label)=>parseDateTime(label,locale)?.jsDate);if(labelDates.some((date)=>date===undefined)||labels.length<2){return undefined;}
const labelsTimestamps=labelDates.map((date)=>date.getTime());const period=largeMax(labelsTimestamps)-largeMin(labelsTimestamps);const minUnit=getFormatMinDisplayUnit(format);if(UNIT_LENGTH.second>=UNIT_LENGTH[minUnit]&&Milliseconds.inSeconds(period)<180){return"second";}
else if(UNIT_LENGTH.minute>=UNIT_LENGTH[minUnit]&&Milliseconds.inMinutes(period)<180){return"minute";}
else if(UNIT_LENGTH.hour>=UNIT_LENGTH[minUnit]&&Milliseconds.inHours(period)<96){return"hour";}
else if(UNIT_LENGTH.day>=UNIT_LENGTH[minUnit]&&Milliseconds.inDays(period)<90){return"day";}
else if(UNIT_LENGTH.month>=UNIT_LENGTH[minUnit]&&Milliseconds.inMonths(period)<36){return"month";}
return"year";}
function getBarChartData(definition,dataSets,labelRange,getters){const labelValues=getChartLabelValues(getters,dataSets,labelRange);let labels=labelValues.formattedValues;let dataSetsValues=getChartDatasetValues(getters,dataSets);if(shouldRemoveFirstLabel(labelRange,dataSets[0],definition.dataSetsHaveTitle||false)){labels.shift();}
({labels,dataSetsValues}=filterInvalidDataPoints(labels,dataSetsValues));if(definition.aggregated){({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));}
const leftAxisFormat=getChartDatasetFormat(getters,dataSets,"left");const rightAxisFormat=getChartDatasetFormat(getters,dataSets,"right");const axisFormats=definition.horizontal?{x:leftAxisFormat||rightAxisFormat}:{y:leftAxisFormat,y1:rightAxisFormat};const trendDataSetsValues=[];for(const index in dataSetsValues){const{data}=dataSetsValues[index];const trend=definition.dataSets?.[index].trend;if(!trend?.display||definition.horizontal){trendDataSetsValues.push(undefined);continue;}
const trendDataset=getTrendDatasetForBarChart(trend,data);trendDataSetsValues.push(trendDataset);}
return{dataSetsValues,trendDataSetsValues,axisFormats,labels,locale:getters.getLocale(),topPadding:getTopPaddingForDashboard(definition,getters),};}
function getPyramidChartData(definition,dataSets,labelRange,getters){const barChartData=getBarChartData(definition,dataSets.slice(0,2),labelRange,getters);const barDataset=barChartData.dataSetsValues.filter((ds)=>!ds.hidden);const pyramidDatasetValues=[];if(barDataset[0]){const pyramidData=barDataset[0].data.map((value)=>(value>0?value:0));pyramidDatasetValues.push({...barDataset[0],data:pyramidData});}
if(barDataset[1]){const pyramidData=barDataset[1].data.map((value)=>(value>0?-value:0));pyramidDatasetValues.push({...barDataset[1],data:pyramidData});}
return{...barChartData,dataSetsValues:pyramidDatasetValues,};}
function getLineChartData(definition,dataSets,labelRange,getters){const axisType=getChartAxisType(definition,dataSets,labelRange,getters);const labelValues=getChartLabelValues(getters,dataSets,labelRange);let labels=axisType==="linear"?labelValues.values:labelValues.formattedValues;let dataSetsValues=getChartDatasetValues(getters,dataSets);const removeFirstLabel=shouldRemoveFirstLabel(labelRange,dataSets[0],definition.dataSetsHaveTitle||false);if(removeFirstLabel){labels.shift();}
({labels,dataSetsValues}=filterInvalidDataPoints(labels,dataSetsValues));if(axisType==="time"){({labels,dataSetsValues}=fixEmptyLabelsForDateCharts(labels,dataSetsValues));}
if(definition.aggregated){({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));}
if(definition.cumulative){dataSetsValues=makeDatasetsCumulative(dataSetsValues,"asc");}
const leftAxisFormat=getChartDatasetFormat(getters,dataSets,"left");const rightAxisFormat=getChartDatasetFormat(getters,dataSets,"right");const labelsFormat=getChartLabelFormat(getters,labelRange,removeFirstLabel);const axisFormats={y:leftAxisFormat,y1:rightAxisFormat,x:labelsFormat};const trendDataSetsValues=[];for(const index in dataSetsValues){const trend=definition.dataSets?.[index].trend;if(!trend?.display){trendDataSetsValues.push(undefined);continue;}
const{data}=dataSetsValues[index];trendDataSetsValues.push(getTrendDatasetForLineChart(trend,data,labels,axisType,getters.getLocale()));}
return{dataSetsValues,axisFormats,labels,locale:getters.getLocale(),trendDataSetsValues,axisType,topPadding:getTopPaddingForDashboard(definition,getters),};}
function getPieChartData(definition,dataSets,labelRange,getters){const labelValues=getChartLabelValues(getters,dataSets,labelRange);let labels=labelValues.formattedValues;let dataSetsValues=getChartDatasetValues(getters,dataSets);if(shouldRemoveFirstLabel(labelRange,dataSets[0],definition.dataSetsHaveTitle||false)){labels.shift();}
({labels,dataSetsValues}=filterInvalidDataPoints(labels,dataSetsValues));if(definition.aggregated){({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));}
({dataSetsValues,labels}=keepOnlyPositiveValues(labels,dataSetsValues));const dataSetFormat=getChartDatasetFormat(getters,dataSets,"left");return{dataSetsValues,axisFormats:{y:dataSetFormat},labels,locale:getters.getLocale(),topPadding:getTopPaddingForDashboard(definition,getters),};}
function getRadarChartData(definition,dataSets,labelRange,getters){const labelValues=getChartLabelValues(getters,dataSets,labelRange);let labels=labelValues.formattedValues;let dataSetsValues=getChartDatasetValues(getters,dataSets);if(shouldRemoveFirstLabel(labelRange,dataSets[0],definition.dataSetsHaveTitle||false)){labels.shift();}
({labels,dataSetsValues}=filterInvalidDataPoints(labels,dataSetsValues));if(definition.aggregated){({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));}
const dataSetFormat=getChartDatasetFormat(getters,dataSets,"left")||getChartDatasetFormat(getters,dataSets,"right");const axisFormats={r:dataSetFormat};return{dataSetsValues,axisFormats,labels,locale:getters.getLocale(),};}
function getGeoChartData(definition,fullDataSets,labelRange,getters){const dataSets=fullDataSets.slice(0,1);const labelValues=getChartLabelValues(getters,dataSets,labelRange);let labels=labelValues.formattedValues;if(shouldRemoveFirstLabel(labelRange,dataSets[0],definition.dataSetsHaveTitle||false)){labels.shift();}
let dataSetsValues=getChartDatasetValues(getters,dataSets);({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));const format=getChartDatasetFormat(getters,dataSets,"left")||getChartDatasetFormat(getters,dataSets,"right");return{dataSetsValues,axisFormats:{y:format},labels,locale:getters.getLocale(),availableRegions:getters.getGeoChartAvailableRegions(),geoFeatureNameToId:getters.geoFeatureNameToId,getGeoJsonFeatures:getters.getGeoJsonFeatures,};}
function getFunnelChartData(definition,dataSets,labelRange,getters){const labelValues=getChartLabelValues(getters,dataSets,labelRange);let labels=labelValues.formattedValues;let dataSetsValues=getChartDatasetValues(getters,dataSets);if(shouldRemoveFirstLabel(labelRange,dataSets[0],definition.dataSetsHaveTitle||false)){labels.shift();}
({labels,dataSetsValues}=filterInvalidDataPoints(labels,dataSetsValues));if(definition.aggregated){({labels,dataSetsValues}=aggregateDataForLabels(labels,dataSetsValues));}
if(definition.cumulative){dataSetsValues=makeDatasetsCumulative(dataSetsValues,"desc");}
const format=getChartDatasetFormat(getters,dataSets,"left")||getChartDatasetFormat(getters,dataSets,"right");return{dataSetsValues,axisFormats:{x:format},labels,locale:getters.getLocale(),};}
function getHierarchalChartData(definition,dataSets,labelRange,getters){let labels=getChartLabelValues(getters,dataSets,labelRange).values;let dataSetsValues=getHierarchicalDatasetValues(getters,dataSets);const removeFirstLabel=shouldRemoveFirstLabel(labelRange,dataSets[0],definition.dataSetsHaveTitle||false);if(removeFirstLabel){labels.shift();}
({labels,dataSetsValues}=filterValuesWithDifferentSigns(labels,dataSetsValues));({labels,dataSetsValues}=filterInvalidHierarchicalPoints(labels,dataSetsValues));return{dataSetsValues,axisFormats:{y:getChartLabelFormat(getters,labelRange,removeFirstLabel)},labels,locale:getters.getLocale(),};}
function getTrendDatasetForBarChart(config,data){const filteredValues=[];const filteredLabels=[];const labels=[];for(let i=0;i<data.length;i++){if(typeof data[i]==="number"){filteredValues.push(data[i]);filteredLabels.push(i+1);}
labels.push(i+1);}
const newLabels=range(0.5,labels.length+0.55,0.2);const newValues=interpolateData(config,filteredValues,filteredLabels,newLabels);return newValues.length?newValues:undefined;}
function getTrendDatasetForLineChart(config,data,labels,axisType,locale){const filteredValues=[];const filteredLabels=[];const trendLabels=[];const datasetLength=data.length;if(datasetLength<2){return;}
switch(axisType){case"category":for(let i=0;i<datasetLength;i++){if(typeof data[i]==="number"){filteredValues.push(data[i]);filteredLabels.push(i+1);}
trendLabels.push(i+1);}
break;case"linear":for(let i=0;i<data.length;i++){const label=Number(labels[i]);if(isNaN(label)){continue;}
if(typeof data[i]==="number"){filteredValues.push(data[i]);filteredLabels.push(label);}
trendLabels.push(label);}
break;case"time":for(let i=0;i<data.length;i++){const date=toNumber({value:labels[i]},locale);if(data[i]!==null){filteredValues.push(data[i]);filteredLabels.push(date);}
trendLabels.push(date);}
break;}
const xmin=Math.min(...trendLabels);const xmax=Math.max(...trendLabels);if(xmax===xmin){return;}
const numberOfStep=5*trendLabels.length;const step=(xmax-xmin)/numberOfStep;const trendNewLabels=range(xmin,xmax+step/2,step);const trendValues=interpolateData(config,filteredValues,filteredLabels,trendNewLabels);if(!trendValues.length){return;}
return trendValues;}
function interpolateData(config,values,labels,newLabels){if(values.length<2||labels.length<2||newLabels.length===0){return[];}
const{normalizedLabels,normalizedNewLabels}=normalizeLabels(labels,newLabels,config);try{switch(config.type){case"polynomial":{const order=config.order;if(!order){return newLabels.map((x)=>({x,y:NaN}));}
if(order===1){return predictLinearValues([values],[normalizedLabels],[normalizedNewLabels],true)[0].map((y,i)=>({x:newLabels[i],y}));}
const coeffs=polynomialRegression(values,normalizedLabels,order,true).flat();return normalizedNewLabels.map((x,i)=>({x:newLabels[i],y:evaluatePolynomial(coeffs,x,order),}));}
case"exponential":{const positiveLogValues=[];const filteredLabels=[];for(let i=0;i<values.length;i++){if(values[i]>0){positiveLogValues.push(Math.log(values[i]));filteredLabels.push(normalizedLabels[i]);}}
if(!filteredLabels.length){return newLabels.map((x)=>({x,y:NaN}));}
return expM(predictLinearValues([positiveLogValues],[filteredLabels],[normalizedNewLabels],true))[0].map((y,i)=>({x:newLabels[i],y}));}
case"logarithmic":{return predictLinearValues([values],logM([normalizedLabels]),logM([normalizedNewLabels]),true)[0].map((y,i)=>({x:newLabels[i],y}));}
case"trailingMovingAverage":{return getMovingAverageValues(values,labels,config.window);}
default:return newLabels.map((x)=>({x,y:NaN}));}}
catch(e){return newLabels.map((x)=>({x,y:NaN}));}}
function normalizeLabels(labels,newLabels,config){let normalizedLabels=[];let normalizedNewLabels=[];if(config.type==="logarithmic"){const labelMax=Math.max(...labels.map(Math.abs));normalizedLabels=labels.map((l)=>l/labelMax);normalizedNewLabels=newLabels.map((l)=>l/labelMax);}
else{const labelMax=Math.max(...labels);const labelMin=Math.min(...labels);const labelRange=labelMax-labelMin;normalizedLabels=labels.map((l)=>(l-labelMax)/labelRange);normalizedNewLabels=newLabels.map((l)=>(l-labelMax)/labelRange);}
return{normalizedLabels,normalizedNewLabels};}
function getChartAxisType(definition,dataSets,labelRange,getters){if(isDateChart(definition,dataSets,labelRange,getters)&&isLuxonTimeAdapterInstalled()){return"time";}
if(isLinearChart(definition,dataSets,labelRange,getters)){return"linear";}
return"category";}
function isDateChart(definition,dataSets,labelRange,getters){return!definition.labelsAsText&&canBeDateChart(definition,dataSets,labelRange,getters);}
function isLinearChart(definition,dataSets,labelRange,getters){return!definition.labelsAsText&&canBeLinearChart(definition,dataSets,labelRange,getters);}
function canChartParseLabels(definition,dataSets,labelRange,getters){return(canBeDateChart(definition,dataSets,labelRange,getters)||canBeLinearChart(definition,dataSets,labelRange,getters));}
function canBeDateChart(definition,dataSets,labelRange,getters){if(!labelRange||!canBeLinearChart(definition,dataSets,labelRange,getters)){return false;}
const removeFirstLabel=shouldRemoveFirstLabel(labelRange,dataSets[0],definition.dataSetsHaveTitle||false);const labelFormat=getChartLabelFormat(getters,labelRange,removeFirstLabel);return Boolean(labelFormat&&timeFormatLuxonCompatible.test(labelFormat));}
function canBeLinearChart(definition,dataSets,labelRange,getters){if(!labelRange){return false;}
const labels=getters.getRangeValues(labelRange);if(shouldRemoveFirstLabel(labelRange,dataSets[0],definition.dataSetsHaveTitle||false)){labels.shift();}
if(labels.some((label)=>isNaN(Number(label))&&label)){return false;}
if(labels.every((label)=>!label)){return false;}
return true;}
let missingTimeAdapterAlreadyWarned=false;function isLuxonTimeAdapterInstalled(){if(!window.Chart){return false;}
const adapter=new window.Chart._adapters._date({});const isInstalled=adapter._id==="luxon";if(!isInstalled&&!missingTimeAdapterAlreadyWarned){missingTimeAdapterAlreadyWarned=true;console.warn("'chartjs-adapter-luxon' time adapter is not installed. Time scale axes are disabled.");}
return isInstalled;}
function keepOnlyPositiveValues(labels,datasets){const numberOfDataPoints=Math.max(labels.length,...datasets.map((dataset)=>dataset.data?.length||0));const filteredIndexes=range(0,numberOfDataPoints).filter((i)=>datasets.some((ds)=>typeof ds.data[i]==="number"&&ds.data[i]>0));return{labels:filteredIndexes.map((i)=>labels[i]||""),dataSetsValues:datasets.map((ds)=>({...ds,data:filteredIndexes.map((i)=>typeof ds.data[i]==="number"&&ds.data[i]>0?ds.data[i]:null),})),};}
function fixEmptyLabelsForDateCharts(labels,dataSetsValues){if(labels.length===0||labels.every((label)=>!label)){return{labels,dataSetsValues};}
const newLabels=[...labels];const newDatasets=deepCopy(dataSetsValues);for(let i=0;i<newLabels.length;i++){if(!newLabels[i]){newLabels[i]=findNextDefinedValue(newLabels,i);for(const ds of newDatasets){ds.data[i]=undefined;}}}
return{labels:newLabels,dataSetsValues:newDatasets};}
function getData(getters,ds){if(ds.dataRange){const labelCellZone=ds.labelCell?[ds.labelCell.zone]:[];const dataZone=recomputeZones([ds.dataRange.zone],labelCellZone)[0];if(dataZone===undefined){return[];}
const dataRange=getters.getRangeFromZone(ds.dataRange.sheetId,dataZone);return getters.getRangeValues(dataRange).map((value)=>(value===""?undefined:value));}
return[];}
function filterInvalidDataPoints(labels,datasets){const numberOfDataPoints=Math.max(labels.length,...datasets.map((dataset)=>dataset.data?.length||0));const dataPointsIndexes=range(0,numberOfDataPoints).filter((dataPointIndex)=>{const label=labels[dataPointIndex];const values=datasets.map((dataset)=>dataset.data?.[dataPointIndex]);return label||values.some((value)=>typeof value==="number");});return{labels:dataPointsIndexes.map((i)=>labels[i]||""),dataSetsValues:datasets.map((dataset)=>({...dataset,data:dataPointsIndexes.map((i)=>typeof dataset.data[i]==="number"?dataset.data[i]:null),})),};}
function filterInvalidHierarchicalPoints(values,hierarchy){const numberOfDataPoints=Math.max(values.length,...hierarchy.map((dataset)=>dataset.data?.length||0));const isEmpty=(value)=>value===undefined||value===null||value==="";const dataPointsIndexes=range(0,numberOfDataPoints).filter((dataPointIndex)=>{const groups=hierarchy.map((dataset)=>dataset.data?.[dataPointIndex]);if(isEmpty(groups[0])){return false;}
let hasFoundEmptyGroup=false;for(const group of groups){hasFoundEmptyGroup||=isEmpty(group);if(hasFoundEmptyGroup&&!isEmpty(group)){return false;}}
return values[dataPointIndex]&&!isNaN(Number(values[dataPointIndex]));});return{labels:dataPointsIndexes.map((i)=>values[i]),dataSetsValues:hierarchy.map((dataset)=>({...dataset,data:dataPointsIndexes.map((i)=>dataset.data[i]),})),};}
function filterValuesWithDifferentSigns(values,hierarchy){const positivePointsIndexes=[];const negativePointsIndexes=[];for(let i=0;i<values.length;i++){if(Number(values[i])<=0){negativePointsIndexes.push(i);}
else if(Number(values[i])>0){positivePointsIndexes.push(i);}}
const indexesToKeep=positivePointsIndexes.length?positivePointsIndexes:negativePointsIndexes;return{labels:indexesToKeep.map((i)=>values[i]),dataSetsValues:hierarchy.map((dataset)=>({...dataset,data:indexesToKeep.map((i)=>dataset.data[i]),})),};}
function aggregateDataForLabels(labels,datasets){const parseNumber=(value)=>(typeof value==="number"?value:0);const labelSet=new Set(labels);const labelMap={};labelSet.forEach((label)=>{labelMap[label]=new Array(datasets.length).fill(0);});for(const indexOfLabel of range(0,labels.length)){const label=labels[indexOfLabel];for(const indexOfDataset of range(0,datasets.length)){labelMap[label][indexOfDataset]+=parseNumber(datasets[indexOfDataset].data[indexOfLabel]);}}
return{labels:Array.from(labelSet),dataSetsValues:datasets.map((dataset,indexOfDataset)=>({...dataset,data:Array.from(labelSet).map((label)=>labelMap[label][indexOfDataset]),})),};}
function getChartLabelFormat(getters,range,shouldRemoveFirstLabel){if(!range)
return undefined;const{sheetId,zone}=range;const formats=positions(zone).map((position)=>getters.getEvaluatedCell({sheetId,...position}).format);if(shouldRemoveFirstLabel){formats.shift();}
return formats.find((format)=>format!==undefined);}
function getChartLabelValues(getters,dataSets,labelRange){let labels={values:[],formattedValues:[]};if(labelRange){const{left}=labelRange.zone;if(!labelRange.invalidXc&&!labelRange.invalidSheetName&&!getters.isColHidden(labelRange.sheetId,left)){labels={formattedValues:getters.getRangeFormattedValues(labelRange),values:getters.getRangeValues(labelRange).map((val)=>String(val??"")),};}
else if(dataSets[0]){const ranges=getData(getters,dataSets[0]);labels={formattedValues:range(0,ranges.length).map((r)=>r.toString()),values:labels.formattedValues,};}}
else if(dataSets.length===1){const dataLength=getData(getters,dataSets[0]).length;for(let i=0;i<dataLength;i++){labels.formattedValues.push("");labels.values.push("");}}
else{if(dataSets[0]){const ranges=getData(getters,dataSets[0]);labels={formattedValues:range(0,ranges.length).map((r)=>r.toString()),values:labels.formattedValues,};}}
return labels;}
function getChartDatasetFormat(getters,allDataSets,axis){const dataSets=allDataSets.filter((ds)=>(axis==="right")===!!ds.rightYAxis);for(const ds of dataSets){const formatsInDataset=getters.getRangeFormats(ds.dataRange);const format=formatsInDataset.find((f)=>f!==undefined&&!isDateTimeFormat(f));if(format)
return format;}
return undefined;}
function getChartDatasetValues(getters,dataSets){const datasetValues=[];for(const[dsIndex,ds]of Object.entries(dataSets)){let label;let hidden=getters.isColHidden(ds.dataRange.sheetId,ds.dataRange.zone.left);if(ds.labelCell){const labelRange=ds.labelCell;const cell=labelRange?getters.getEvaluatedCell({sheetId:labelRange.sheetId,col:labelRange.zone.left,row:labelRange.zone.top,}):undefined;label=cell&&labelRange?cell.formattedValue:(label=`${ChartTerms.Series} ${parseInt(dsIndex) + 1}`);}
else{label=`${ChartTerms.Series} ${parseInt(dsIndex) + 1}`;}
const data=ds.dataRange?getData(getters,ds):[];if(data.every((e)=>typeof e==="string"&&!isEvaluationError(e))&&data.some((e)=>e!=="")){data.fill(1);}
else if(data.every((cell)=>cell===undefined||cell===null||!isNumber(cell.toString(),DEFAULT_LOCALE))){hidden=true;}
datasetValues.push({data,label,hidden});}
return datasetValues;}
function getHierarchicalDatasetValues(getters,dataSets){dataSets=dataSets.filter((ds)=>!getters.isColHidden(ds.dataRange.sheetId,ds.dataRange.zone.left));const datasetValues=dataSets.map(()=>({data:[],label:""}));const dataSetsData=dataSets.map((ds)=>getData(getters,ds));if(!dataSetsData.length){return datasetValues;}
const minLength=Math.min(...dataSetsData.map((ds)=>ds.length));let currentValues=[];const leafDatasetIndex=dataSets.length-1;for(let i=0;i<minLength;i++){for(let dsIndex=0;dsIndex<dataSetsData.length;dsIndex++){let value=dataSetsData[dsIndex][i];if((value===undefined||value===null)&&dsIndex!==leafDatasetIndex){value=currentValues[dsIndex];}
if(value!==currentValues[dsIndex]){currentValues=currentValues.slice(0,dsIndex);currentValues[dsIndex]=value;}
datasetValues[dsIndex].data.push(value??null);}}
return datasetValues.filter((ds)=>ds.data.some((d)=>d!==null));}
function makeDatasetsCumulative(datasets,order){return datasets.map((dataset)=>{const data=[];let accumulator=0;const indexes=order==="asc"?Object.keys(dataset.data):Object.keys(dataset.data).reverse();for(const i of indexes){if(!isNaN(parseFloat(dataset.data[i]))){accumulator+=parseFloat(dataset.data[i]);data[i]=accumulator;}
else{data[i]=dataset.data[i];}}
return{...dataset,data};});}
function getTopPaddingForDashboard(definition,getters){const{title,legendPosition}=definition;const hasTitleOrLegendTop=(title&&title.text)||legendPosition==="top";return getters.isDashboard()&&!hasTitleOrLegendTop?30:0;}
function getChartLayout(definition,args){return{padding:{left:CHART_PADDING,right:CHART_PADDING,top:Math.max(CHART_PADDING_TOP,args.topPadding||0),bottom:CHART_PADDING_BOTTOM,},};}
function getLegendDisplayOptions(definition,args){return{display:definition.legendPosition!=="none",position:definition.legendPosition!=="none"?definition.legendPosition:undefined,};}
function getBarChartLegend(definition,args){return{...INTERACTIVE_LEGEND_CONFIG,...getLegendDisplayOptions(definition),...getCustomLegendLabels(chartFontColor(definition.background),{pointStyle:"rect",lineWidth:3,}),};}
function getLineChartLegend(definition,args){const filled=definition.fillArea;const pointStyle=filled?"rect":"line";const lineWidth=filled?2:3;return{...INTERACTIVE_LEGEND_CONFIG,...getLegendDisplayOptions(definition),...getCustomLegendLabels(chartFontColor(definition.background),{pointStyle,lineWidth,}),};}
function getPieChartLegend(definition,args){const{dataSetsValues}=args;const dataSetsLength=Math.max(0,...dataSetsValues.map((ds)=>ds?.data?.length??0));const colors=getPieColors(new ColorGenerator(dataSetsLength),dataSetsValues);const fontColor=chartFontColor(definition.background);return{...getLegendDisplayOptions(definition),labels:{usePointStyle:true,generateLabels:(c)=>(c.data.labels?.map((label,index)=>({text:truncateLabel(String(label)),strokeStyle:colors[index],fillStyle:colors[index],pointStyle:"rect",lineWidth:2,fontColor,}))||[]).filter((label)=>label.text),filter:(legendItem,data)=>{return"datasetIndex"in legendItem?!data.datasets[legendItem.datasetIndex].hidden:true;},},};}
function getScatterChartLegend(definition,args){return{...INTERACTIVE_LEGEND_CONFIG,...getLegendDisplayOptions(definition),...getCustomLegendLabels(chartFontColor(definition.background),{pointStyle:"circle",strokeStyle:definition.background||"#ffffff",lineWidth:8,}),};}
function getComboChartLegend(definition,args){return{...INTERACTIVE_LEGEND_CONFIG,...getLegendDisplayOptions(definition),...getCustomLegendLabels(chartFontColor(definition.background),{lineWidth:3,}),};}
function getWaterfallChartLegend(definition,args){const fontColor=chartFontColor(definition.background);const negativeColor=definition.negativeValuesColor||CHART_WATERFALL_NEGATIVE_COLOR;const positiveColor=definition.positiveValuesColor||CHART_WATERFALL_POSITIVE_COLOR;const subTotalColor=definition.subTotalValuesColor||CHART_WATERFALL_SUBTOTAL_COLOR;return{...getLegendDisplayOptions(definition),labels:{usePointStyle:true,generateLabels:()=>{const legendValues=[{text:_t("Positive values"),fontColor,fillStyle:positiveColor,strokeStyle:positiveColor,pointStyle:"rect",},{text:_t("Negative values"),fontColor,fillStyle:negativeColor,strokeStyle:negativeColor,pointStyle:"rect",},];if(definition.showSubTotals||definition.firstValueAsSubtotal){legendValues.push({text:_t("Subtotals"),fontColor,fillStyle:subTotalColor,strokeStyle:subTotalColor,pointStyle:"rect",});}
return legendValues;},filter:(legendItem,data)=>{return"datasetIndex"in legendItem?!data.datasets[legendItem.datasetIndex].hidden:true;},},onClick:()=>{},};}
function getRadarChartLegend(definition,args){const fill=definition.fillArea??false;const pointStyle=fill?"rect":"line";const lineWidth=fill?2:3;return{...INTERACTIVE_LEGEND_CONFIG,...getLegendDisplayOptions(definition),...getCustomLegendLabels(chartFontColor(definition.background),{pointStyle,lineWidth,}),};}
function getSunburstChartLegend(definition,args){const fontColor=chartFontColor(definition.background);return{...getLegendDisplayOptions(definition),labels:{usePointStyle:true,generateLabels:(chart)=>{const rootDataset=chart.data.datasets.at(-1);if(!rootDataset){return[];}
const colors=rootDataset.groupColors;return colors.map(({color,label})=>{return{text:truncateLabel(label),fontColor,fillStyle:color,strokeStyle:color,pointStyle:"rect",};});},},};}
const INTERACTIVE_LEGEND_CONFIG={onHover:(event)=>{const target=event.native?.target;if(!target){return;}
target.style.cursor="pointer";},onLeave:(event)=>{const target=event.native?.target;if(!target){return;}
target.style.cursor="default";},onClick:(event,legendItem,legend)=>{if(event.type!=="click"){return;}
const index=legendItem.datasetIndex;if(!legend.legendItems||index===undefined){return;}
if(legend.chart.isDatasetVisible(index)){legend.chart.hide(index);}
else{legend.chart.show(index);}
event.native.preventDefault();event.native.stopPropagation();},};function getCustomLegendLabels(fontColor,legendLabelConfig){return{labels:{color:fontColor,usePointStyle:true,generateLabels:(chart)=>chart.data.datasets.map((dataset,index)=>{if(isTrendLineAxis(dataset["xAxisID"])){return{text:truncateLabel(dataset.label),fontColor,strokeStyle:dataset.borderColor,hidden:!chart.isDatasetVisible(index),pointStyle:"line",datasetIndex:index,lineWidth:3,};}
return{text:truncateLabel(dataset.label),fontColor,strokeStyle:dataset.borderColor,fillStyle:dataset.backgroundColor,hidden:!chart.isDatasetVisible(index),pointStyle:dataset.type==="line"?"line":"rect",datasetIndex:index,...legendLabelConfig,};}).filter((label)=>label.text),filter:(legendItem,data)=>{return"datasetIndex"in legendItem?!data.datasets[legendItem.datasetIndex].hidden:true;},},};}
function getBarChartScales(definition,args){let scales={};const{trendDataSetsValues:trendDatasets,locale,axisFormats}=args;const options={stacked:definition.stacked,locale:locale};if(definition.horizontal){scales.x=getChartAxis(definition,"bottom","values",{...options,format:axisFormats?.x});scales.y=getChartAxis(definition,"left","labels",options);}
else{scales.x=getChartAxis(definition,"bottom","labels",options);const leftAxisOptions={...options,format:axisFormats?.y};scales.y=getChartAxis(definition,"left","values",leftAxisOptions);const rightAxisOptions={...options,format:axisFormats?.y1};scales.y1=getChartAxis(definition,"right","values",rightAxisOptions);}
scales=removeFalsyAttributes(scales);if(trendDatasets&&trendDatasets.length&&trendDatasets.some(isDefined)){const maxLength=Math.max(...trendDatasets.map((trendDataset)=>trendDataset?.length||0));scales[TREND_LINE_XAXIS_ID]={...scales.x,labels:Array(maxLength).fill(""),offset:false,display:false,};scales[MOVING_AVERAGE_TREND_LINE_XAXIS_ID]={...scales.x,offset:true,display:false,};}
return scales;}
function getLineChartScales(definition,args){const{locale,axisType,trendDataSetsValues:trendDatasets,labels,axisFormats}=args;const labelFormat=axisFormats?.x;const stacked=definition.stacked;let scales={x:getChartAxis(definition,"bottom","labels",{locale}),y:getChartAxis(definition,"left","values",{locale,stacked,format:axisFormats?.y}),y1:getChartAxis(definition,"right","values",{locale,stacked,format:axisFormats?.y1}),};scales=removeFalsyAttributes(scales);if(axisType==="time"&&labels&&labelFormat){const axis={type:"time",time:getChartTimeOptions(labels,labelFormat,locale),};Object.assign(scales.x,axis);scales.x.ticks.maxTicksLimit=15;}
else if(axisType==="linear"){scales.x.type="linear";scales.x.ticks.callback=(value)=>formatValue(value,{format:labelFormat,locale});}
if(trendDatasets&&trendDatasets.length&&trendDatasets.some(isDefined)){scales[TREND_LINE_XAXIS_ID]={...scales.x,display:false,};scales[MOVING_AVERAGE_TREND_LINE_XAXIS_ID]={...scales.x,display:false,};if(axisType==="category"||axisType==="time"){const maxLength=Math.max(...trendDatasets.map((trendDataset)=>trendDataset?.length||0));scales[TREND_LINE_XAXIS_ID]["type"]="category";scales[TREND_LINE_XAXIS_ID]["labels"]=range(0,maxLength).map((x)=>x.toString());scales[TREND_LINE_XAXIS_ID]["offset"]=false;scales[MOVING_AVERAGE_TREND_LINE_XAXIS_ID]["type"]="category";scales[MOVING_AVERAGE_TREND_LINE_XAXIS_ID]["offset"]=false;}}
return scales;}
function getScatterChartScales(definition,args){const lineScales=getLineChartScales(definition,args);return{...lineScales,x:{...lineScales.x,grid:{display:true},},};}
function getWaterfallChartScales(definition,args){const{locale,axisFormats}=args;const format=axisFormats?.y||axisFormats?.y1;definition.dataSets;const scales={x:{...getChartAxis(definition,"bottom","labels",{locale}),grid:{display:false},},y:{position:definition.verticalAxisPosition,ticks:{color:chartFontColor(definition.background),callback:formatTickValue({locale,format}),},grid:{lineWidth:(context)=>(context.tick.value===0?2:1),},title:getChartAxisTitleRuntime(definition.axesDesign?.y),},};const verticalScale=scales?.y||scales?.y1;if(verticalScale){verticalScale.grid={lineWidth:(context)=>(context.tick.value===0?2:1)};}
return scales;}
function getPyramidChartScales(definition,args){const{dataSetsValues}=args;const scales=getBarChartScales(definition,args);const scalesXCallback=scales.x.ticks.callback;scales.x.ticks.callback=(value)=>scalesXCallback(Math.abs(value));const maxValue=Math.max(...dataSetsValues.map((dataSet)=>Math.max(...dataSet.data.map(Math.abs))));scales.x.suggestedMin=-maxValue;scales.x.suggestedMax=maxValue;return scales;}
function getRadarChartScales(definition,args){const{locale,axisFormats,dataSetsValues}=args;const minValue=Math.min(...dataSetsValues.map((ds)=>Math.min(...ds.data.filter((x)=>!isNaN(x)))));return{r:{beginAtZero:true,ticks:{callback:formatTickValue({format:axisFormats?.r,locale}),backdropColor:definition.background||"#FFFFFF",},pointLabels:{color:chartFontColor(definition.background),callback:truncateLabel,},suggestedMin:minValue<0?minValue-1:0,},};}
function getGeoChartScales(definition,args){const{locale,axisFormats,availableRegions}=args;const geoLegendPosition=legendPositionToGeoLegendPosition(definition.legendPosition);const region=definition.region?availableRegions.find((r)=>r.id===definition.region):availableRegions[0];const format=axisFormats?.y||axisFormats?.y1;return{projection:{projection:getGeoChartProjection(region?.defaultProjection||"mercator"),axis:"x",},color:{axis:"x",display:definition.legendPosition!=="none",border:{color:GRAY_300},grid:{color:GRAY_300},ticks:{color:chartFontColor(definition.background),callback:formatTickValue({locale,format}),},legend:{position:geoLegendPosition,align:geoLegendPosition.includes("right")?"left":"right",margin:getLegendMargin(definition),},interpolate:getRuntimeColorScale(definition),missing:definition.missingValueColor||"#ffffff",},};}
function getFunnelChartScales(definition,args){const dataSet=args.dataSetsValues[0];return{x:{display:false,},y:{grid:{offset:false},ticks:{callback:function(tickValue){return truncateLabel(this.getLabelForValue(tickValue));},},border:{display:false},},percentages:{position:"right",border:{display:false},ticks:{callback:function(tickValue,index,ticks){const value=dataSet.data?.[index];const baseValue=dataSet.data?.[0];if(!baseValue||value===undefined){return"";}
return formatValue(value/baseValue,{format:"0%",locale:args.locale});},},grid:{display:false},},};}
function getGeoChartProjection(projection){if(projection==="conicConformal"){return window.ChartGeo.geoConicConformal().rotate([100,0]);}
return projection;}
function getChartAxisTitleRuntime(design){if(design?.title?.text){const{text,color,align,italic,bold}=design.title;return{display:true,text,color,font:{style:italic?"italic":"normal",weight:bold?"bold":"normal",size:design.title.fontSize??CHART_AXIS_TITLE_FONT_SIZE,},align:align==="left"?"start":align==="right"?"end":"center",};}
return;}
function getChartAxis(definition,position,type,options){const{useLeftAxis,useRightAxis}=getDefinedAxis(definition);if((position==="left"&&!useLeftAxis)||(position==="right"&&!useRightAxis)){return undefined;}
const fontColor=chartFontColor(definition.background);let design;if(position==="bottom"){design=definition.axesDesign?.x;}
else if(position==="left"){design=definition.axesDesign?.y;}
else{design=definition.axesDesign?.y1;}
if(type==="values"){const displayGridLines=!(position==="right"&&useLeftAxis);return{position:position,title:getChartAxisTitleRuntime(design),grid:{display:displayGridLines,},beginAtZero:true,stacked:options?.stacked,ticks:{color:fontColor,callback:formatTickValue(options),},};}
else{return{ticks:{padding:5,color:fontColor,callback:function(tickValue){return truncateLabel(this.getLabelForValue(tickValue));},},grid:{display:false,},stacked:options?.stacked,title:getChartAxisTitleRuntime(design),};}}
function getRuntimeColorScale(definition){if(!definition.colorScale||typeof definition.colorScale==="string"){return definition.colorScale||"oranges";}
const scaleColors=[{value:0,color:definition.colorScale.minColor}];if(definition.colorScale.midColor){scaleColors.push({value:0.5,color:definition.colorScale.midColor});}
scaleColors.push({value:1,color:definition.colorScale.maxColor});return getColorScale(scaleColors);}
function getLegendMargin(definition){switch(definition.legendPosition){case"top":case"right":const hasTitle=!!definition.title.text;const topMargin=hasTitle?CHART_PADDING_TOP+30:CHART_PADDING_TOP;return{top:topMargin,left:CHART_PADDING,right:CHART_PADDING};case"bottom":case"left":case"none":return{left:CHART_PADDING,right:CHART_PADDING,bottom:CHART_PADDING_BOTTOM};}}
function legendPositionToGeoLegendPosition(position){switch(position){case"top":return"top-left";case"right":return"top-right";case"bottom":return"bottom-right";case"left":return"bottom-left";case"none":return"bottom-left";}}
const SunburstChartDefaults={showValues:false,showLabels:true,valuesDesign:{align:"center",fontSize:13,},};function getChartShowValues(definition,args){const{axisFormats,locale}=args;return{horizontal:"horizontal"in definition&&definition.horizontal,showValues:"showValues"in definition?!!definition.showValues:false,background:definition.background,callback:(value,dataset)=>{const axisId=getDatasetAxisId(definition,dataset);return formatChartDatasetValue(axisFormats,locale)(value,axisId);},};}
function getSunburstShowValues(definition,args){const{axisFormats,locale}=args;return{callback:formatChartDatasetValue(axisFormats,locale),showLabels:definition.showLabels??SunburstChartDefaults.showLabels,showValues:definition.showValues??SunburstChartDefaults.showValues,style:{fontSize:definition.valuesDesign?.fontSize??SunburstChartDefaults.valuesDesign.fontSize,align:definition.valuesDesign?.align??SunburstChartDefaults.valuesDesign.align,bold:definition.valuesDesign?.bold??SunburstChartDefaults.valuesDesign.bold,italic:definition.valuesDesign?.italic??SunburstChartDefaults.valuesDesign.italic,textColor:definition.valuesDesign?.color??SunburstChartDefaults.valuesDesign.color,},};}
function getPyramidChartShowValues(definition,args){const{axisFormats,locale}=args;return{horizontal:true,showValues:"showValues"in definition?!!definition.showValues:false,background:definition.background,callback:(value,dataset)=>{value=Math.abs(Number(value));return value===0?"":formatChartDatasetValue(axisFormats,locale)(value,dataset.xAxisID||"x");},};}
function getWaterfallChartShowValues(definition,args){const{axisFormats,locale,dataSetsValues}=args;const subtotalIndexes=dataSetsValues.reduce((subtotalIndexes,ds)=>{subtotalIndexes.push((subtotalIndexes.at(-1)||-1)+ds.data.length+1);return subtotalIndexes;},[]);return{showValues:"showValues"in definition?!!definition.showValues:false,background:definition.background,callback:(value,dataset,index)=>{const raw=dataset._dataset.data[index];const delta=raw[1]-raw[0];let sign=delta>=0?"+":"";if(definition.showSubTotals&&subtotalIndexes.includes(index)&&sign==="+"){sign="";}
return`${sign}${formatChartDatasetValue(axisFormats, locale)(delta, dataset.yAxisID)}`;},};}
function getDatasetAxisId(definition,dataset){if(dataset.rAxisID){return dataset.rAxisID;}
const axisId="horizontal"in definition&&definition.horizontal?dataset.xAxisID:dataset.yAxisID;return axisId||"y";}
function getChartTitle(definition){const chartTitle=definition.title;const fontColor=chartMutedFontColor(definition.background);return{display:!!chartTitle.text,text:_t(chartTitle.text),color:chartTitle?.color??fontColor,align:chartTitle.align==="center"?"center":chartTitle.align==="right"?"end":"start",font:{size:definition.title.fontSize??CHART_TITLE_FONT_SIZE,weight:chartTitle.bold?"bold":"normal",style:chartTitle.italic?"italic":"normal",},padding:{bottom:definition.legendPosition==="top"?0:CHART_PADDING,},};}
const templates=`
<templates>
  <t t-name="o-spreadsheet-CustomTooltip">
    <div
      class="o-chart-custom-tooltip border rounded px-2 py-1 pe-none mw-100 position-absolute text-nowrap shadow opacity-100">
      <table class="overflow-hidden m-0">
        <thead t-if="title">
          <tr>
            <th class="o-tooltip-title align-baseline border-0 text-truncate" t-esc="title" t-attf-style="max-width: {{ labelsMaxWidth }}"/>
          </tr>
        </thead>
        <tbody>
          <tr t-foreach="tooltipItems" t-as="tooltipItem" t-key="tooltipItem_index">
            <td>
              <span
                class="badge ps-2 py-2 rounded-0 align-middle"
                t-attf-style="background-color: {{ tooltipItem.boxColor }}"
              > </span>
              <small
                t-if="tooltipItem.label"
                class="o-tooltip-label d-inline-block text-truncate align-middle smaller ms-2"
                t-esc="tooltipItem.label"
                t-attf-style="max-width: {{ labelsMaxWidth }}"
              />
            </td>
            <td class="o-tooltip-value ps-2 fw-bolder text-end">
              <small class="smaller d-inline-block text-truncate align-middle" t-attf-style="max-width: {{ valuesMaxWidth }}">
                <t t-esc="tooltipItem.value"/>
                <t t-if="tooltipItem.percentage">
                  (
                  <t t-esc="tooltipItem.percentage"/>
                  %)
                </t>
              </small>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </t>
</templates>
`;let app;function renderToString(templateName,context={}){return render(templateName,context).innerHTML;}
function render(templateName,context={}){if(!app){app=new App(Component,{templates,translateFn:_t});}
const templateFn=app.getTemplate(templateName);const bdom=templateFn(context,{});const div=document.createElement("div");blockDom.mount(bdom,div);return div;}
function getBarChartTooltip(definition,args){return{enabled:false,external:customTooltipHandler,callbacks:{title:function(tooltipItems){return tooltipItems.some((item)=>!isTrendLineAxis(item.dataset.xAxisID))?undefined:"";},beforeLabel:(tooltipItem)=>tooltipItem.dataset?.label||tooltipItem.label,label:function(tooltipItem){const horizontalChart=definition.horizontal;let yLabel=horizontalChart?tooltipItem.parsed.x:tooltipItem.parsed.y;if(yLabel===undefined||yLabel===null){yLabel=tooltipItem.parsed;}
const axisId=horizontalChart?tooltipItem.dataset.xAxisID:tooltipItem.dataset.yAxisID;const yLabelStr=formatChartDatasetValue(args.axisFormats,args.locale)(yLabel,axisId);return yLabelStr;},},};}
function getLineChartTooltip(definition,args){const{axisType,locale,axisFormats}=args;const labelFormat=axisFormats?.x;const tooltip={enabled:false,external:customTooltipHandler,callbacks:{},};if(axisType==="linear"){tooltip.callbacks.label=(tooltipItem)=>{const dataSetPoint=tooltipItem.parsed.y;let label=isTrendLineAxis(tooltipItem.dataset.xAxisID)?"":tooltipItem.parsed.x;if(typeof label==="string"&&isNumber(label,locale)){label=toNumber(label,locale);}
const formattedX=formatValue(label,{locale,format:labelFormat});const axisId=tooltipItem.dataset.yAxisID||"y";const formattedY=formatValue(dataSetPoint,{locale,format:axisFormats?.[axisId]});return formattedX?`(${formattedX}, ${formattedY})`:`${formattedY}`;};}
else{tooltip.callbacks.label=function(tooltipItem){const yLabel=tooltipItem.parsed.y;const axisId=tooltipItem.dataset.yAxisID;const yLabelStr=formatChartDatasetValue(axisFormats,locale)(yLabel,axisId);return yLabelStr;};}
tooltip.callbacks.beforeLabel=(tooltipItem)=>tooltipItem.dataset?.label||tooltipItem.label;tooltip.callbacks.title=function(tooltipItems){const displayTooltipTitle=axisType!=="linear"&&tooltipItems.some((item)=>!isTrendLineAxis(item.dataset.xAxisID));return displayTooltipTitle?undefined:"";};return tooltip;}
function getPieChartTooltip(definition,args){const{locale,axisFormats}=args;const format=axisFormats?.y||axisFormats?.y1;return{enabled:false,external:customTooltipHandler,callbacks:{title:function(tooltipItems){return tooltipItems[0].dataset.label;},beforeLabel:(tooltipItem)=>tooltipItem.label||tooltipItem.dataset.label,label:function(tooltipItem){const data=tooltipItem.dataset.data;const dataIndex=tooltipItem.dataIndex;const percentage=calculatePercentage(data,dataIndex);const yLabel=tooltipItem.parsed.y??tooltipItem.parsed;const toolTipFormat=!format&&yLabel>=1000?"#,##":format;const yLabelStr=formatValue(yLabel,{format:toolTipFormat,locale});return`${yLabelStr} (${percentage}%)`;},},};}
function getWaterfallChartTooltip(definition,args){const{dataSetsValues,locale,axisFormats,labels}=args;const format=axisFormats?.y||axisFormats?.y1;const dataSeriesLabels=dataSetsValues.map((dataSet)=>dataSet.label);return{enabled:false,external:customTooltipHandler,callbacks:{beforeLabel:function(tooltipItem){const dataSeriesIndex=labels.length?Math.floor(tooltipItem.dataIndex/labels.length):0;return dataSeriesLabels[dataSeriesIndex];},label:function(tooltipItem){const[lastValue,currentValue]=tooltipItem.raw;const yLabel=currentValue-lastValue;const toolTipFormat=!format&&Math.abs(yLabel)>1000?"#,##":format;return formatValue(yLabel,{format:toolTipFormat,locale});},},};}
function getPyramidChartTooltip(definition,args){const tooltip=getBarChartTooltip(definition,args);return{...tooltip,callbacks:{...tooltip.callbacks,label:(item)=>{const tooltipItem={...item,parsed:{y:item.parsed.y,x:Math.abs(item.parsed.x)}};return(tooltip?.callbacks?.label)(tooltipItem);},},};}
function getRadarChartTooltip(definition,args){const{locale,axisFormats}=args;return{enabled:false,external:customTooltipHandler,callbacks:{beforeLabel:(tooltipItem)=>tooltipItem.dataset?.label||tooltipItem.label,label:function(tooltipItem){const yLabel=tooltipItem.parsed.r;return formatValue(yLabel,{format:axisFormats?.r,locale});},},};}
function getGeoChartTooltip(definition,args){const{locale,axisFormats}=args;const format=axisFormats?.y||axisFormats?.y1;return{enabled:false,external:customTooltipHandler,filter:function(tooltipItem){return tooltipItem.raw.value!==undefined;},callbacks:{beforeLabel:(tooltipItem)=>tooltipItem.raw.feature.properties.name,label:function(tooltipItem){const rawItem=tooltipItem.raw;const yLabel=rawItem.value;const toolTipFormat=!format&&Math.abs(yLabel)>=1000?"#,##":format;return formatValue(yLabel,{format:toolTipFormat,locale});},},};}
function getFunnelChartTooltip(definition,args){return{enabled:false,external:customTooltipHandler,position:"funnelTooltipPositioner",callbacks:{title:()=>"",beforeLabel:(tooltipItem)=>tooltipItem.label,label:function(tooltipItem){const yLabel=tooltipItem.parsed.x;const axisId=tooltipItem.dataset.xAxisID;const yLabelStr=formatChartDatasetValue(args.axisFormats,args.locale)(yLabel,axisId);return yLabelStr;},},};}
function getSunburstChartTooltip(definition,args){const{locale,axisFormats}=args;const format=axisFormats?.y||axisFormats?.y1;return{enabled:false,external:customTooltipHandler,filter:function(tooltipItem){const data=tooltipItem.raw;return data?.label!==GHOST_SUNBURST_VALUE;},callbacks:{title:()=>"",beforeLabel:(tooltipItem)=>{const data=tooltipItem.raw;return data.groups.join(" / ");},label:function(tooltipItem){const data=tooltipItem.raw;const yLabel=data.value;const toolTipFormat=!format&&yLabel>=1000?"#,##":format;return formatValue(yLabel,{format:toolTipFormat,locale});},},};}
function getTreeMapChartTooltip(definition,args){const{locale,axisFormats}=args;const format=axisFormats?.y;return{enabled:false,external:customTooltipHandler,filter:(tooltipItem,index,tooltipItems)=>{return index===tooltipItems.length-1;},callbacks:{title:()=>"",beforeLabel:(tooltipItem)=>{const childElement=tooltipItem.raw._data.children[0];if(!childElement){return"";}
const path=[];for(let i=0;i<=tooltipItem.raw.l;i++){path.push(childElement[i]);}
return path.join(" / ");},label:(tooltipItem)=>{const yLabel=tooltipItem.raw.v;const toolTipFormat=!format&&yLabel>=1000?"#,##":format;return formatValue(yLabel,{format:toolTipFormat,locale});},},};}
function calculatePercentage(dataset,dataIndex){const numericData=dataset.filter((value)=>typeof value==="number");const total=numericData.reduce((sum,value)=>sum+value,0);if(!total){return"";}
const percentage=(dataset[dataIndex]/total)*100;return percentage.toFixed(2);}
function customTooltipHandler({chart,tooltip}){chart.canvas.parentNode.querySelector("div.o-chart-custom-tooltip")?.remove();if(tooltip.opacity===0||tooltip.dataPoints.length===0){return;}
const tooltipItems=tooltip.body.map((body,index)=>{let label=body.before[0];let value=body.lines[0];if(!value){value=label;label="";}
const color=tooltip.labelColors[index].backgroundColor;return{label,value,boxColor:typeof color==="string"?setColorAlpha(color,1):color,};});const innerHTML=renderToString("o-spreadsheet-CustomTooltip",{labelsMaxWidth:Math.floor(chart.canvas.clientWidth*0.5)+"px",valuesMaxWidth:Math.floor(chart.canvas.clientWidth*0.25)+"px",title:tooltip.title[0],tooltipItems,});const template=Object.assign(document.createElement("template"),{innerHTML});const newTooltipEl=template.content.firstChild;chart.canvas.parentNode?.appendChild(newTooltipEl);Object.assign(newTooltipEl.style,{left:getTooltipLeftPosition(chart,tooltip,newTooltipEl.clientWidth)+"px",top:Math.floor(tooltip.caretY-newTooltipEl.clientHeight/2)+"px",});}
function getTooltipLeftPosition(chart,tooltip,tooltipWidth){const x=tooltip.caretX;if(x+tooltipWidth>chart.chartArea.right){return Math.max(0,x-tooltipWidth);}
return x;}
var CHART_RUNTIME_HELPERS=Object.freeze({__proto__:null,GHOST_SUNBURST_VALUE:GHOST_SUNBURST_VALUE,INTERACTIVE_LEGEND_CONFIG:INTERACTIVE_LEGEND_CONFIG,canChartParseLabels:canChartParseLabels,getBarChartData:getBarChartData,getBarChartDatasets:getBarChartDatasets,getBarChartLegend:getBarChartLegend,getBarChartScales:getBarChartScales,getBarChartTooltip:getBarChartTooltip,getChartColorsGenerator:getChartColorsGenerator,getChartLabelFormat:getChartLabelFormat,getChartLayout:getChartLayout,getChartShowValues:getChartShowValues,getChartTitle:getChartTitle,getComboChartDatasets:getComboChartDatasets,getComboChartLegend:getComboChartLegend,getData:getData,getFunnelChartData:getFunnelChartData,getFunnelChartDatasets:getFunnelChartDatasets,getFunnelChartScales:getFunnelChartScales,getFunnelChartTooltip:getFunnelChartTooltip,getFunnelLabelColors:getFunnelLabelColors,getGeoChartData:getGeoChartData,getGeoChartDatasets:getGeoChartDatasets,getGeoChartScales:getGeoChartScales,getGeoChartTooltip:getGeoChartTooltip,getHierarchalChartData:getHierarchalChartData,getLineChartData:getLineChartData,getLineChartDatasets:getLineChartDatasets,getLineChartLegend:getLineChartLegend,getLineChartScales:getLineChartScales,getLineChartTooltip:getLineChartTooltip,getPieChartData:getPieChartData,getPieChartDatasets:getPieChartDatasets,getPieChartLegend:getPieChartLegend,getPieChartTooltip:getPieChartTooltip,getPyramidChartData:getPyramidChartData,getPyramidChartScales:getPyramidChartScales,getPyramidChartShowValues:getPyramidChartShowValues,getPyramidChartTooltip:getPyramidChartTooltip,getRadarChartData:getRadarChartData,getRadarChartDatasets:getRadarChartDatasets,getRadarChartLegend:getRadarChartLegend,getRadarChartScales:getRadarChartScales,getRadarChartTooltip:getRadarChartTooltip,getScatterChartDatasets:getScatterChartDatasets,getScatterChartLegend:getScatterChartLegend,getScatterChartScales:getScatterChartScales,getSunburstChartDatasets:getSunburstChartDatasets,getSunburstChartLegend:getSunburstChartLegend,getSunburstChartTooltip:getSunburstChartTooltip,getSunburstShowValues:getSunburstShowValues,getTopPaddingForDashboard:getTopPaddingForDashboard,getTreeMapChartDatasets:getTreeMapChartDatasets,getTreeMapChartTooltip:getTreeMapChartTooltip,getTrendDatasetForBarChart:getTrendDatasetForBarChart,getTrendDatasetForLineChart:getTrendDatasetForLineChart,getWaterfallChartLegend:getWaterfallChartLegend,getWaterfallChartScales:getWaterfallChartScales,getWaterfallChartShowValues:getWaterfallChartShowValues,getWaterfallChartTooltip:getWaterfallChartTooltip,getWaterfallDatasetAndLabels:getWaterfallDatasetAndLabels,makeDatasetsCumulative:makeDatasetsCumulative});class BarChart extends AbstractChart{dataSets;labelRange;background;legendPosition;stacked;aggregated;type="bar";dataSetsHaveTitle;dataSetDesign;axesDesign;horizontal;showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.stacked=definition.stacked;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.horizontal=definition.horizontal;this.showValues=definition.showValues;}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,stacked:context.stacked??false,aggregated:context.aggregated??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"bar",labelRange:context.auxiliaryRange||undefined,axesDesign:context.axesDesign,showValues:context.showValues,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new BarChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new BarChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"bar",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,stacked:this.stacked,aggregated:this.aggregated,axesDesign:this.axesDesign,horizontal:this.horizontal,showValues:this.showValues,};}
getDefinitionForExcel(){const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!==""&&ds.range!==CellErrorType.InvalidReference);const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));const definition=this.getDefinition();return{...definition,backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,verticalAxis:getDefinedAxis(definition),};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new BarChart(definition,this.sheetId,this.getters);}}
function createBarChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getBarChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:"bar",data:{labels:chartData.labels,datasets:getBarChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,indexAxis:chart.horizontal?"y":"x",layout:getChartLayout(definition,chartData),scales:getBarChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getBarChartLegend(definition),tooltip:getBarChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
const cellAnimationRegistry=new Registry();cellAnimationRegistry.add("animatedBackgroundColorChange",{id:"animatedBackgroundColorChange",easingFn:"easeOutCubic",hasAnimation:(oldBox,newBox)=>{return oldBox?.style?.fillColor!==newBox?.style?.fillColor;},updateAnimation:function(progress,animatedBox,oldBox,newBox){const colorScale=getColorScale([{value:0,color:oldBox.style.fillColor||"#ffffff"},{value:1,color:newBox.style.fillColor||"#ffffff"},]);animatedBox.style.fillColor=colorScale(EASING_FN[this.easingFn](progress));},});cellAnimationRegistry.add("animatedTextColorChange",{id:"animatedTextColorChange",easingFn:"easeOutCubic",hasAnimation:(oldBox,newBox)=>{return oldBox?.style?.textColor!==newBox?.style?.textColor;},updateAnimation:function(progress,animatedBox,oldBox,newBox){const colorScale=getColorScale([{value:0,color:oldBox.style.textColor||"#000000"},{value:1,color:newBox.style.textColor||"#000000"},]);animatedBox.style.textColor=colorScale(EASING_FN[this.easingFn](progress));},});cellAnimationRegistry.add("animatedDataBar",{id:"animatedDataBar",easingFn:"easeOutCubic",hasAnimation:(oldBox,newBox)=>{return oldBox?.dataBarFill?.percentage!==newBox?.dataBarFill?.percentage;},updateAnimation:function(progress,animatedBox,oldBox,newBox){const startingPercentage=oldBox?.dataBarFill?.percentage||0;const endingPercentage=newBox?.dataBarFill?.percentage||0;const value=EASING_FN[this.easingFn](progress);const percentage=startingPercentage+(endingPercentage-startingPercentage)*value;animatedBox.dataBarFill={color:newBox.dataBarFill?.color||oldBox.dataBarFill?.color||"#ffffff",percentage:percentage,};},});cellAnimationRegistry.add("textFadeIn",{id:"textFadeIn",easingFn:"easeInCubic",hasAnimation:(oldBox,newBox)=>{const oldText=oldBox?.content?.textLines?.join("\n");const newText=newBox?.content?.textLines?.join("\n");return Boolean(!oldText&&newText);},updateAnimation:function(progress,animatedBox,oldBox,newBox){animatedBox.textOpacity=EASING_FN[this.easingFn](progress);},});cellAnimationRegistry.add("textFadeOut",{id:"textFadeOut",easingFn:"easeOutCubic",hasAnimation:(oldBox,newBox)=>{const oldText=oldBox?.content?.textLines?.join("\n");const newText=newBox?.content?.textLines?.join("\n");return Boolean(oldText&&!newText);},updateAnimation:function(progress,animatedBox,oldBox,newBox){const textOpacity=1-EASING_FN[this.easingFn](progress);const style={...oldBox.style};delete style.fillColor;animatedBox.textOpacity=textOpacity;animatedBox.content=oldBox.content;animatedBox.clipRect=oldBox.clipRect;Object.assign(animatedBox.style,style);},});cellAnimationRegistry.add("iconFadeIn",{id:"iconFadeIn",easingFn:"easeInCubic",hasAnimation:(oldBox,newBox)=>{return Boolean((!oldBox?.icons?.left&&newBox?.icons?.left)||(!oldBox?.icons?.right&&newBox?.icons?.right)||(!oldBox?.icons?.center&&newBox?.icons?.center));},updateAnimation:function(progress,animatedBox,oldBox,newBox){const iconOpacity=EASING_FN[this.easingFn](progress);if(animatedBox.icons.left&&newBox.icons.left&&!oldBox.icons.left){animatedBox.icons.left.opacity=iconOpacity;}
if(animatedBox.icons.right&&newBox.icons.right&&!oldBox.icons.right){animatedBox.icons.right.opacity=iconOpacity;}
if(animatedBox.icons.center&&newBox.icons.center&&!oldBox.icons.center){animatedBox.icons.center.opacity=iconOpacity;}},});cellAnimationRegistry.add("iconFadeOut",{id:"iconFadeOut",easingFn:"easeOutCubic",hasAnimation:(oldBox,newBox)=>{return Boolean((oldBox?.icons?.left&&!newBox?.icons?.left)||(oldBox?.icons?.right&&!newBox?.icons?.right)||(oldBox?.icons?.center&&!newBox?.icons?.center));},updateAnimation:function(progress,animatedBox,oldBox,newBox){const iconOpacity=1-EASING_FN[this.easingFn](progress);if(!animatedBox.icons){animatedBox.icons={};}
if(oldBox.icons.left&&!newBox.icons.left){animatedBox.icons.left={...oldBox.icons.left,opacity:iconOpacity};}
if(oldBox.icons.right&&!newBox.icons.right){animatedBox.icons.right={...oldBox.icons.right,opacity:iconOpacity};}
if(oldBox.icons.center&&!newBox.icons.center){animatedBox.icons.center={...oldBox.icons.center,opacity:iconOpacity};}},});cellAnimationRegistry.add("textChange",{id:"textChange",easingFn:"easeOutCubic",hasAnimation:(oldBox,newBox)=>{const oldText=oldBox?.content?.textLines?.join("\n");const newText=newBox?.content?.textLines?.join("\n");return Boolean(oldText&&newText&&(oldText!==newText||hasIconLayoutChange(newBox,oldBox)));},updateAnimation:function(progress,animatedBox,oldBox,newBox){const value=EASING_FN[this.easingFn](progress);const slideInY=newBox.y+(value-1)*newBox.height;const slideOutY=newBox.y+value*newBox.height;const iconLayoutChange=hasIconLayoutChange(newBox,oldBox);const slideInBox={id:newBox.id+"-text-slide-in",x:newBox.x,y:slideInY,width:newBox.width,height:newBox.height,style:{...newBox.style},skipCellGridLines:true,content:newBox.content?{...newBox.content}:undefined,clipRect:newBox.clipRect||{...newBox,x:Math.max(0,newBox.x-(newBox.content?.width||0)),width:newBox.width+(newBox.content?.width||0)*2,},icons:iconLayoutChange?addClipRectToIcons(newBox.icons,newBox):makeIconsEmpty(newBox.icons),};const slideOutBox={id:oldBox.id+"-text-slide-out",x:newBox.x,y:slideOutY,width:newBox.width,height:newBox.height,style:{...oldBox.style},skipCellGridLines:true,content:oldBox.content?{...oldBox.content}:undefined,clipRect:oldBox.clipRect||{...newBox,x:Math.max(0,newBox.x-(oldBox.content?.width||0)),width:newBox.width+(oldBox.content?.width||0)*2,},icons:iconLayoutChange?addClipRectToIcons(oldBox.icons,newBox):makeIconsEmpty(oldBox.icons),};if(newBox.content&&oldBox.content&&slideInBox.content&&slideOutBox.content){const slideInContentY=newBox.content.y+(value-1)*newBox.height;const slideOutContentY=newBox.content.y+value*newBox.height;slideInBox.content.y=slideInContentY;slideOutBox.content.y=slideOutContentY;}
slideOutBox.style.fillColor=slideInBox.style.fillColor=undefined;animatedBox.content=undefined;animatedBox.icons=iconLayoutChange?{}:animatedBox.icons;return{newBoxes:[slideInBox,slideOutBox]};},});cellAnimationRegistry.add("borderFadeIn",{id:"borderFadeIn",easingFn:"easeInCubic",hasAnimation:(oldBox,newBox)=>{return Boolean((!oldBox?.border?.bottom&&newBox?.border?.bottom)||(!oldBox?.border?.top&&newBox?.border?.top)||(!oldBox?.border?.left&&newBox?.border?.left)||(!oldBox?.border?.right&&newBox?.border?.right));},updateAnimation:function(progress,animatedBox,oldBox,newBox){const borderOpacity=EASING_FN[this.easingFn](progress);if(animatedBox.border?.top&&newBox.border?.top&&!oldBox.border?.top){animatedBox.border.top.opacity=borderOpacity;}
if(animatedBox.border?.bottom&&newBox.border?.bottom&&!oldBox.border?.bottom){animatedBox.border.bottom.opacity=borderOpacity;}
if(animatedBox.border?.left&&newBox.border?.left&&!oldBox.border?.left){animatedBox.border.left.opacity=borderOpacity;}
if(animatedBox.border?.right&&newBox.border?.right&&!oldBox.border?.right){animatedBox.border.right.opacity=borderOpacity;}},});cellAnimationRegistry.add("borderFadeOut",{id:"borderFadeOut",easingFn:"easeOutCubic",hasAnimation:(oldBox,newBox)=>{return Boolean((oldBox?.border?.bottom&&!newBox?.border?.bottom)||(oldBox?.border?.top&&!newBox?.border?.top)||(oldBox?.border?.left&&!newBox?.border?.left)||(oldBox?.border?.right&&!newBox?.border?.right));},updateAnimation:function(progress,animatedBox,oldBox,newBox){const borderOpacity=1-EASING_FN[this.easingFn](progress);if(!animatedBox.border){animatedBox.border={};}
if(oldBox.border?.top&&!newBox.border?.top){animatedBox.border.top={...oldBox.border.top,opacity:borderOpacity};}
if(oldBox.border?.bottom&&!newBox.border?.bottom){animatedBox.border.bottom={...oldBox.border.bottom,opacity:borderOpacity};}
if(oldBox.border?.left&&!newBox.border?.left){animatedBox.border.left={...oldBox.border.left,opacity:borderOpacity};}
if(oldBox.border?.right&&!newBox.border?.right){animatedBox.border.right={...oldBox.border.right,opacity:borderOpacity};}},});cellAnimationRegistry.add("borderColorChange",{id:"borderColorChange",easingFn:"easeOutCubic",hasAnimation:(oldBox,newBox)=>{const oldBorder=oldBox?.border;const newBorder=newBox?.border;if(!oldBorder||!newBorder){return false;}
return Boolean(oldBorder.bottom?.color!==newBorder.bottom?.color||oldBorder.top?.color!==newBorder.top?.color||oldBorder.left?.color!==newBorder.left?.color||oldBorder.right?.color!==newBorder.right?.color);},updateAnimation:function(progress,animatedBox,oldBox,newBox){const animateBorderColor=(side)=>{const oldBorder=oldBox?.border?.[side];const newBorder=newBox?.border?.[side];const animatedBorder=animatedBox.border?.[side];if(oldBorder&&newBorder&&animatedBorder){const colorScale=getColorScale([{value:0,color:oldBorder.color||"#000000"},{value:1,color:newBorder.color||"#000000"},]);animatedBorder.color=colorScale(EASING_FN[this.easingFn](progress));}};animateBorderColor("top");animateBorderColor("bottom");animateBorderColor("left");animateBorderColor("right");},});cellAnimationRegistry.add("iconChange",{id:"iconChange",easingFn:"easeOutCubic",hasAnimation:(oldBox,newBox)=>{return(!hasIconLayoutChange(newBox,oldBox)&&Boolean(oldBox?.icons?.center?.svg?.name!==newBox?.icons?.center?.svg?.name||oldBox?.icons?.left?.svg?.name!==newBox?.icons?.left?.svg?.name||oldBox?.icons?.right?.svg?.name!==newBox?.icons?.right?.svg?.name));},updateAnimation:function(progress,animatedBox,oldBox,newBox){const value=EASING_FN[this.easingFn](progress);const slideInY=newBox.y+(value-1)*newBox.height;const slideOutY=newBox.y+value*newBox.height;const newBoxes=[];const animateIconChange=(side)=>{const oldIcon=oldBox.icons?.[side];const newIcon=newBox.icons?.[side];const slideInBox={id:`${newBox.id}-icon-${side}-slide-in`,style:{verticalAlign:newBox.style.verticalAlign},x:newBox.x,y:slideInY,width:newBox.width,height:newBox.height,skipCellGridLines:true,icons:{[side]:{...newIcon,clipRect:newBox}},};const slideOutBox={id:`${newBox.id}-icon-${side}-slide-out`,style:{verticalAlign:oldBox.style.verticalAlign},x:newBox.x,y:slideOutY,width:newBox.width,height:newBox.height,skipCellGridLines:true,icons:{[side]:{...oldIcon,clipRect:newBox}},};animatedBox.icons[side]=makeIconsEmpty(newBox.icons)[side];newBoxes.push(slideInBox,slideOutBox);};animateIconChange("left");animateIconChange("right");animateIconChange("center");return{newBoxes};},});const EASING_FN={linear:(t)=>t,easeInCubic:(t)=>t*t*t,easeOutCubic:(t)=>(t-=1)*t*t+1,easeInOutCubic:(t)=>((t/=0.5)<1?0.5*t*t*t:0.5*((t-=2)*t*t+2)),easeOutQuart:(t)=>-((t-=1)*t*t*t-1),};function makeIconsEmpty(icons){return{left:icons.left?{...icons.left,svg:undefined}:undefined,right:icons.right?{...icons.right,svg:undefined}:undefined,center:icons.center?{...icons.center,svg:undefined}:undefined,};}
function addClipRectToIcons(icons,clipRect){return{left:icons.left?{...icons.left,clipRect}:undefined,right:icons.right?{...icons.right,clipRect}:undefined,center:icons.center?{...icons.center,clipRect}:undefined,};}
function hasIconLayoutChange(newBox,oldBox){const hasLayoutChange=(newIcon,oldIcon)=>{if(oldIcon&&newIcon){return!!(newIcon.horizontalAlign!==oldIcon.horizontalAlign||newIcon.size!==oldIcon.size||newIcon.margin!==oldIcon.margin||(newIcon.svg&&!oldIcon.svg)||(!newIcon.svg&&oldIcon.svg));}
return!!((newIcon&&!oldIcon)||(!newIcon&&oldIcon));};return(hasLayoutChange(newBox?.icons.left,oldBox?.icons.left)||hasLayoutChange(newBox?.icons.right,oldBox?.icons.right)||hasLayoutChange(newBox?.icons.center,oldBox?.icons.center));}
const ANIMATION_DURATION=1000;class GaugeChartComponent extends Component{static template="o-spreadsheet-GaugeChartComponent";static props={figureUI:Object,isFullScreen:{type:Boolean,optional:true},};canvas=useRef("chartContainer");animationStore;get runtime(){return this.env.model.getters.getChartRuntime(this.props.figureUI.id);}
setup(){if(this.env.model.getters.isDashboard()){this.animationStore=useStore(ChartAnimationStore);}
let animation=null;let lastRuntime=undefined;useEffect(()=>{if(this.env.isDashboard()&&lastRuntime===undefined&&this.animationStore?.animationPlayed[this.animationFigureId]!=="gauge"){animation=this.drawGaugeWithAnimation();this.animationStore?.disableAnimationForChart(this.animationFigureId,"gauge");}
else if(this.env.isDashboard()&&lastRuntime!==undefined&&!deepEquals(this.runtime,lastRuntime)){animation=this.drawGaugeWithAnimation();this.animationStore?.disableAnimationForChart(this.animationFigureId,"gauge");}
else{drawGaugeChart(this.canvasEl,this.runtime);}
lastRuntime=this.runtime;return()=>animation?.stop();},()=>{const rect=this.canvasEl.getBoundingClientRect();return[rect.width,rect.height,this.runtime,this.canvas.el,window.devicePixelRatio];});}
drawGaugeWithAnimation(){drawGaugeChart(this.canvasEl,{...this.runtime,animationValue:0});const gaugeValue=this.runtime.gaugeValue?.value||0;const upperBound=this.runtime.maxValue.value;const finalValue=Math.sign(gaugeValue)*Math.min(Math.abs(gaugeValue),Math.abs(upperBound));if(finalValue===0){return null;}
const lowerBound=this.runtime.minValue.value;const animation=new Animation(lowerBound,finalValue,ANIMATION_DURATION,(animationValue)=>drawGaugeChart(this.canvasEl,{...this.runtime,animationValue}));animation.start();return animation;}
get canvasEl(){return this.canvas.el;}
get animationFigureId(){return this.props.isFullScreen?this.props.figureUI.id+"-fullscreen":this.props.figureUI.id;}}
class Animation{startValue;endValue;duration;callback;startTime=undefined;animationFrameId=null;constructor(startValue,endValue,duration,callback){this.startValue=startValue;this.endValue=endValue;this.duration=duration;this.callback=callback;}
start(){this.animationFrameId=requestAnimationFrame(this.animate.bind(this));}
stop(){if(this.animationFrameId){cancelAnimationFrame(this.animationFrameId);this.animationFrameId=null;}}
animate(timestamp){if(!this.startTime){this.startTime=timestamp;}
const elapsed=timestamp-this.startTime;const progress=Math.min(elapsed/this.duration,1);const currentValue=this.startValue+(this.endValue-this.startValue)*EASING_FN.easeOutQuart(progress);this.callback(currentValue);if(progress<1){this.animationFrameId=requestAnimationFrame(this.animate.bind(this));}
else{this.stop();}}}
class ComboChart extends AbstractChart{dataSets;labelRange;background;legendPosition;aggregated;dataSetsHaveTitle;dataSetDesign;axesDesign;type="combo";showValues;hideDataMarkers;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.showValues=definition.showValues;this.hideDataMarkers=definition.hideDataMarkers;}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),type:this.dataSetDesign?.[i]?.type??(i?"line":"bar"),});}
return{type:"combo",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,aggregated:this.aggregated,axesDesign:this.axesDesign,showValues:this.showValues,hideDataMarkers:this.hideDataMarkers,};}
getDefinitionForExcel(){if(this.aggregated){return undefined;}
const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!==""&&ds.range!==CellErrorType.InvalidReference);const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));const definition=this.getDefinition();return{...definition,backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,verticalAxis:getDefinedAxis(definition),};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new ComboChart(definition,this.sheetId,this.getters);}
static getDefinitionFromContextCreation(context){const dataSets=(context.range??[]).map((ds,index)=>({...ds,type:index?"line":"bar",}));return{background:context.background,dataSets,dataSetsHaveTitle:context.dataSetsHaveTitle??false,aggregated:context.aggregated,legendPosition:context.legendPosition??"top",title:context.title||{text:""},labelRange:context.auxiliaryRange||undefined,type:"combo",axesDesign:context.axesDesign,showValues:context.showValues,hideDataMarkers:context.hideDataMarkers,};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new ComboChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new ComboChart(definition,sheetId,this.getters);}}
function createComboChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getBarChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:"bar",data:{labels:chartData.labels,datasets:getComboChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getBarChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getComboChartLegend(definition),tooltip:getBarChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
class FunnelChart extends AbstractChart{dataSets;labelRange;background;legendPosition;aggregated;type="funnel";dataSetsHaveTitle;dataSetDesign;axesDesign;horizontal=true;showValues;funnelColors;cumulative;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.showValues=definition.showValues;this.horizontal=true;this.funnelColors=definition.funnelColors;this.cumulative=definition.cumulative;}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,aggregated:context.aggregated??false,legendPosition:"none",title:context.title||{text:""},type:"funnel",labelRange:context.auxiliaryRange||undefined,showValues:context.showValues,axesDesign:context.axesDesign,funnelColors:context.funnelColors,horizontal:true,cumulative:context.cumulative,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new FunnelChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new FunnelChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"funnel",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,aggregated:this.aggregated,horizontal:this.horizontal,axesDesign:this.axesDesign,showValues:this.showValues,funnelColors:this.funnelColors,cumulative:this.cumulative,};}
getDefinitionForExcel(){return undefined;}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new FunnelChart(definition,this.sheetId,this.getters);}}
function createFunnelChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getFunnelChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:"funnel",data:{labels:chartData.labels,datasets:getFunnelChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,indexAxis:"y",layout:getChartLayout(definition,chartData),scales:getFunnelChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:{display:false},tooltip:getFunnelChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
function isDataRangeValid(definition){return definition.dataRange&&!rangeReference.test(definition.dataRange)?"InvalidGaugeDataRange":"Success";}
function checkRangeLimits(check,batchValidations){return batchValidations((definition)=>{if(definition.sectionRule){return check(definition.sectionRule.rangeMin,"rangeMin");}
return"Success";},(definition)=>{if(definition.sectionRule){return check(definition.sectionRule.rangeMax,"rangeMax");}
return"Success";});}
function checkInflectionPointsValue(check,batchValidations){return batchValidations((definition)=>{if(definition.sectionRule){return check(definition.sectionRule.lowerInflectionPoint.value,"lowerInflectionPointValue");}
return"Success";},(definition)=>{if(definition.sectionRule){return check(definition.sectionRule.upperInflectionPoint.value,"upperInflectionPointValue");}
return"Success";});}
function checkEmpty(value,valueName){if(value===""){switch(valueName){case"rangeMin":return"EmptyGaugeRangeMin";case"rangeMax":return"EmptyGaugeRangeMax";}}
return"Success";}
function checkValueIsNumberOrFormula(value,valueName){if(value.startsWith("=")){return"Success";}
if(isNaN(value)){switch(valueName){case"rangeMin":return"GaugeRangeMinNaN";case"rangeMax":return"GaugeRangeMaxNaN";case"lowerInflectionPointValue":return"GaugeLowerInflectionPointNaN";case"upperInflectionPointValue":return"GaugeUpperInflectionPointNaN";}}
return"Success";}
class GaugeChart extends AbstractChart{dataRange;sectionRule;background;type="gauge";constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataRange=createValidRange(this.getters,this.sheetId,definition.dataRange);this.sectionRule=definition.sectionRule;this.background=definition.background;}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,isDataRangeValid,validator.chainValidations(checkRangeLimits(checkEmpty,validator.batchValidations),checkRangeLimits(checkValueIsNumberOrFormula,validator.batchValidations)),validator.chainValidations(checkInflectionPointsValue(checkValueIsNumberOrFormula,validator.batchValidations)));}
static transformDefinition(chartSheetId,definition,applyChange){let dataRange;if(definition.dataRange){const adaptedRange=adaptStringRange(chartSheetId,definition.dataRange,applyChange);if(adaptedRange!==CellErrorType.InvalidReference){dataRange=adaptedRange;}}
return{...definition,dataRange,};}
static getDefinitionFromContextCreation(context){return{background:context.background,title:context.title||{text:""},type:"gauge",dataRange:context.range?context.range[0].dataRange:undefined,sectionRule:{colors:{lowerColor:DEFAULT_GAUGE_LOWER_COLOR,middleColor:DEFAULT_GAUGE_MIDDLE_COLOR,upperColor:DEFAULT_GAUGE_UPPER_COLOR,},rangeMin:"0",rangeMax:"100",lowerInflectionPoint:{type:"percentage",value:"15",operator:"<=",},upperInflectionPoint:{type:"percentage",value:"40",operator:"<=",},},};}
duplicateInDuplicatedSheet(newSheetId){const dataRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.dataRange);const adaptFormula=(formula)=>this.getters.copyFormulaStringForSheet(this.sheetId,newSheetId,formula,"moveReference");const sectionRule=adaptSectionRuleFormulas(this.sectionRule,adaptFormula);const definition=this.getDefinitionWithSpecificRanges(dataRange,sectionRule,newSheetId);return new GaugeChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const adaptFormula=(formula)=>this.getters.copyFormulaStringForSheet(this.sheetId,sheetId,formula,"keepSameReference");const sectionRule=adaptSectionRuleFormulas(this.sectionRule,adaptFormula);const definition=this.getDefinitionWithSpecificRanges(this.dataRange,sectionRule,sheetId);return new GaugeChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificRanges(this.dataRange,this.sectionRule);}
getDefinitionWithSpecificRanges(dataRange,sectionRule,targetSheetId){return{background:this.background,sectionRule:sectionRule,title:this.title,type:"gauge",dataRange:dataRange?this.getters.getRangeString(dataRange,targetSheetId||this.sheetId):undefined,};}
getDefinitionForExcel(){return undefined;}
getContextCreation(){return{...this,range:this.dataRange?[{dataRange:this.getters.getRangeString(this.dataRange,this.sheetId)}]:undefined,};}
updateRanges(applyChange){const dataRange=adaptChartRange(this.dataRange,applyChange);const adaptFormula=(formula)=>this.getters.adaptFormulaStringDependencies(this.sheetId,formula,applyChange);const sectionRule=adaptSectionRuleFormulas(this.sectionRule,adaptFormula);const definition=this.getDefinitionWithSpecificRanges(dataRange,sectionRule);return new GaugeChart(definition,this.sheetId,this.getters);}}
function createGaugeChartRuntime(chart,getters){const locale=getters.getLocale();const chartColors=chart.sectionRule.colors;let gaugeValue=undefined;let formattedValue=undefined;let format=undefined;const dataRange=chart.dataRange;if(dataRange!==undefined){const cell=getters.getEvaluatedCell({sheetId:dataRange.sheetId,col:dataRange.zone.left,row:dataRange.zone.top,});if(cell.type===CellValueType.number){gaugeValue=cell.value;formattedValue=cell.formattedValue;format=cell.format;}}
let minValue=getFormulaNumberValue(chart.sheetId,chart.sectionRule.rangeMin,getters);let maxValue=getFormulaNumberValue(chart.sheetId,chart.sectionRule.rangeMax,getters);if(minValue===undefined||maxValue===undefined){return getInvalidGaugeRuntime(chart,getters);}
if(maxValue<minValue){[minValue,maxValue]=[maxValue,minValue];}
const lowerPoint=chart.sectionRule.lowerInflectionPoint;const upperPoint=chart.sectionRule.upperInflectionPoint;const lowerPointValue=getSectionThresholdValue(chart.sheetId,chart.sectionRule.lowerInflectionPoint,minValue,maxValue,getters);const upperPointValue=getSectionThresholdValue(chart.sheetId,chart.sectionRule.upperInflectionPoint,minValue,maxValue,getters);const inflectionValues=[];const colors=[];if(lowerPointValue!==undefined){inflectionValues.push({value:lowerPointValue,label:formatValue(lowerPointValue,{locale,format}),operator:lowerPoint.operator,});colors.push(chartColors.lowerColor);}
if(upperPointValue!==undefined&&upperPointValue!==lowerPointValue){inflectionValues.push({value:upperPointValue,label:formatValue(upperPointValue,{locale,format}),operator:upperPoint.operator,});colors.push(chartColors.middleColor);}
if(upperPointValue!==undefined&&lowerPointValue!==undefined&&lowerPointValue>upperPointValue){inflectionValues.reverse();colors.reverse();}
colors.push(chartColors.upperColor);return{background:getters.getStyleOfSingleCellChart(chart.background,dataRange).background,title:{...chart.title,text:_t(chart.title.text??""),},minValue:{value:minValue,label:formatValue(minValue,{locale,format}),},maxValue:{value:maxValue,label:formatValue(maxValue,{locale,format}),},gaugeValue:gaugeValue!==undefined&&formattedValue?{value:gaugeValue,label:formattedValue}:undefined,inflectionValues,colors,};}
function getSectionThresholdValue(sheetId,threshold,minValue,maxValue,getters){const numberValue=getFormulaNumberValue(sheetId,threshold.value,getters);if(numberValue===undefined){return undefined;}
const value=threshold.type==="number"?numberValue:minValue+((maxValue-minValue)*numberValue)/100;return clip(value,minValue,maxValue);}
function getFormulaNumberValue(sheetId,formula,getters){const value=getters.evaluateFormula(sheetId,formula);return isMultipleElementMatrix(value)?undefined:tryToNumber(toScalar(value),getters.getLocale());}
function getInvalidGaugeRuntime(chart,getters){return{background:getters.getStyleOfSingleCellChart(chart.background,chart.dataRange).background,title:chart.title??{text:""},minValue:{value:0,label:""},maxValue:{value:100,label:""},gaugeValue:{value:0,label:CellErrorType.GenericError},inflectionValues:[],colors:[],};}
function adaptSectionRuleFormulas(sectionRule,adaptCallback){return{...sectionRule,rangeMin:adaptCallback(sectionRule.rangeMin),rangeMax:adaptCallback(sectionRule.rangeMax),lowerInflectionPoint:{...sectionRule.lowerInflectionPoint,value:adaptCallback(sectionRule.lowerInflectionPoint.value),},upperInflectionPoint:{...sectionRule.upperInflectionPoint,value:adaptCallback(sectionRule.upperInflectionPoint.value),},};}
class GeoChart extends AbstractChart{dataSets;labelRange;background;legendPosition;type="geo";dataSetsHaveTitle;dataSetDesign;colorScale;missingValueColor;region;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.colorScale=definition.colorScale;this.missingValueColor=definition.missingValueColor;this.region=definition.region;}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"geo",labelRange:context.auxiliaryRange||undefined,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new GeoChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new GeoChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"geo",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,colorScale:this.colorScale,missingValueColor:this.missingValueColor,region:this.region,};}
getDefinitionForExcel(){return undefined;}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new GeoChart(definition,this.sheetId,this.getters);}}
function createGeoChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getGeoChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:"choropleth",data:{datasets:getGeoChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getGeoChartScales(definition,chartData),plugins:{title:getChartTitle(definition),tooltip:getGeoChartTooltip(definition,chartData),legend:{display:false},},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
class LineChart extends AbstractChart{dataSets;labelRange;background;legendPosition;labelsAsText;stacked;aggregated;type="line";dataSetsHaveTitle;cumulative;dataSetDesign;axesDesign;fillArea;showValues;hideDataMarkers;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(this.getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(this.getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.labelsAsText=definition.labelsAsText;this.stacked=definition.stacked;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.cumulative=definition.cumulative;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.fillArea=definition.fillArea;this.showValues=definition.showValues;this.hideDataMarkers=definition.hideDataMarkers;}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,labelsAsText:context.labelsAsText??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"line",labelRange:context.auxiliaryRange||undefined,stacked:context.stacked??false,aggregated:context.aggregated??false,cumulative:context.cumulative??false,axesDesign:context.axesDesign,fillArea:context.fillArea,showValues:context.showValues,hideDataMarkers:context.hideDataMarkers,};}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"line",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,labelsAsText:this.labelsAsText,stacked:this.stacked,aggregated:this.aggregated,cumulative:this.cumulative,axesDesign:this.axesDesign,fillArea:this.fillArea,showValues:this.showValues,hideDataMarkers:this.hideDataMarkers,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new LineChart(definition,this.sheetId,this.getters);}
getDefinitionForExcel(){const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!==""&&ds.range!==CellErrorType.InvalidReference);const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));const definition=this.getDefinition();return{...definition,backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,verticalAxis:getDefinedAxis(definition),};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new LineChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new LineChart(definition,sheetId,this.getters);}}
function createLineChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getLineChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:"line",data:{labels:chartData.labels,datasets:getLineChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getLineChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getLineChartLegend(definition),tooltip:getLineChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR,};}
class PieChart extends AbstractChart{dataSets;labelRange;background;legendPosition;type="pie";aggregated;dataSetsHaveTitle;isDoughnut;showValues;pieHolePercentage;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.isDoughnut=definition.isDoughnut;this.showValues=definition.showValues;this.pieHolePercentage=definition.pieHolePercentage;}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"pie",labelRange:context.auxiliaryRange||undefined,aggregated:context.aggregated??false,isDoughnut:false,showValues:context.showValues,};}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getContextCreation(){return{...this,range:this.dataSets.map((ds)=>({dataRange:this.getters.getRangeString(ds.dataRange,this.sheetId),})),auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){return{type:"pie",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:dataSets.map((ds)=>({dataRange:this.getters.getRangeString(ds.dataRange,targetSheetId||this.sheetId),})),legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,aggregated:this.aggregated,isDoughnut:this.isDoughnut,showValues:this.showValues,pieHolePercentage:this.pieHolePercentage,};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new PieChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new PieChart(definition,sheetId,this.getters);}
getDefinitionForExcel(){const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!==""&&ds.range!==CellErrorType.InvalidReference);const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));return{...this.getDefinition(),backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new PieChart(definition,this.sheetId,this.getters);}}
function createPieChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getPieChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:chart.isDoughnut?"doughnut":"pie",data:{labels:chartData.labels,datasets:getPieChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,cutout:chart.isDoughnut&&definition.pieHolePercentage!==undefined?definition.pieHolePercentage+"%":undefined,layout:getChartLayout(definition,chartData),plugins:{title:getChartTitle(definition),legend:getPieChartLegend(definition,chartData),tooltip:getPieChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
class PyramidChart extends AbstractChart{dataSets;labelRange;background;legendPosition;aggregated;type="pyramid";dataSetsHaveTitle;dataSetDesign;axesDesign;horizontal=true;stacked=true;showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.showValues=definition.showValues;}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,aggregated:context.aggregated??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"pyramid",labelRange:context.auxiliaryRange||undefined,axesDesign:context.axesDesign,horizontal:true,stacked:true,showValues:context.showValues,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new PyramidChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new PyramidChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"pyramid",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,aggregated:this.aggregated,axesDesign:this.axesDesign,horizontal:true,stacked:true,showValues:this.showValues,};}
getDefinitionForExcel(){return undefined;}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new PyramidChart(definition,this.sheetId,this.getters);}}
function createPyramidChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getPyramidChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:"bar",data:{labels:chartData.labels,datasets:getBarChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,indexAxis:"y",layout:getChartLayout(definition,chartData),scales:getPyramidChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getBarChartLegend(definition),tooltip:getPyramidChartTooltip(definition,chartData),chartShowValuesPlugin:getPyramidChartShowValues(definition,chartData),},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
class RadarChart extends AbstractChart{dataSets;labelRange;background;legendPosition;stacked;aggregated;type="radar";dataSetsHaveTitle;dataSetDesign;fillArea;showValues;hideDataMarkers;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.stacked=definition.stacked;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.fillArea=definition.fillArea;this.showValues=definition.showValues;this.hideDataMarkers=definition.hideDataMarkers;}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,stacked:context.stacked??false,aggregated:context.aggregated??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"radar",labelRange:context.auxiliaryRange||undefined,fillArea:context.fillArea??false,showValues:context.showValues??false,hideDataMarkers:context.hideDataMarkers,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new RadarChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new RadarChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"radar",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,stacked:this.stacked,aggregated:this.aggregated,fillArea:this.fillArea,showValues:this.showValues,hideDataMarkers:this.hideDataMarkers,};}
getDefinitionForExcel(){if(this.aggregated){return undefined;}
const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!==""&&ds.range!==CellErrorType.InvalidReference);const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));const definition=this.getDefinition();return{...definition,backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new RadarChart(definition,this.sheetId,this.getters);}}
function createRadarChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getRadarChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:"radar",data:{labels:chartData.labels,datasets:getRadarChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getRadarChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getRadarChartLegend(definition),tooltip:getRadarChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
class ScatterChart extends AbstractChart{dataSets;labelRange;background;legendPosition;labelsAsText;aggregated;type="scatter";dataSetsHaveTitle;dataSetDesign;axesDesign;showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(this.getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(this.getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.labelsAsText=definition.labelsAsText;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.showValues=definition.showValues;}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range??[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,labelsAsText:context.labelsAsText??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"scatter",labelRange:context.auxiliaryRange||undefined,aggregated:context.aggregated??false,axesDesign:context.axesDesign,showValues:context.showValues,};}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"scatter",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,labelsAsText:this.labelsAsText,aggregated:this.aggregated,axesDesign:this.axesDesign,showValues:this.showValues,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new ScatterChart(definition,this.sheetId,this.getters);}
getDefinitionForExcel(){if(this.aggregated){return undefined;}
const dataSets=this.dataSets.map((ds)=>toExcelDataset(this.getters,ds)).filter((ds)=>ds.range!=="");const labelRange=toExcelLabelRange(this.getters,this.labelRange,shouldRemoveFirstLabel(this.labelRange,this.dataSets[0],this.dataSetsHaveTitle));const definition=this.getDefinition();return{...definition,backgroundColor:toXlsxHexColor(this.background||BACKGROUND_CHART_COLOR),fontColor:toXlsxHexColor(chartFontColor(this.background)),dataSets,labelRange,verticalAxis:getDefinedAxis(definition),};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new ScatterChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new ScatterChart(definition,sheetId,this.getters);}}
function createScatterChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getLineChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:"line",data:{labels:chartData.labels,datasets:getScatterChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getScatterChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getScatterChartLegend(definition),tooltip:getLineChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR,};}
class SunburstChart extends AbstractChart{dataSets;labelRange;background;legendPosition;type="sunburst";dataSetsHaveTitle;showValues;showLabels;valuesDesign;groupColors;pieHolePercentage;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.showValues=definition.showValues;this.showLabels=definition.showLabels;this.valuesDesign=definition.valuesDesign;this.groupColors=definition.groupColors;this.pieHolePercentage=definition.pieHolePercentage;}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){const dataSets=[];if(context.hierarchicalRanges?.length){dataSets.push(...context.hierarchicalRanges);}
else if(context.auxiliaryRange){dataSets.push({...context.range?.[0],dataRange:context.auxiliaryRange});}
return{background:context.background,dataSets,dataSetsHaveTitle:context.dataSetsHaveTitle??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"sunburst",labelRange:context.range?.[0]?.dataRange,showValues:context.showValues,showLabels:context.showLabels,valuesDesign:context.valuesDesign,groupColors:context.groupColors,};}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getContextCreation(){const leafRange=this.dataSets.at(-1)?.dataRange;return{...this,range:this.labelRange?[{dataRange:this.getters.getRangeString(this.labelRange,this.sheetId)}]:[],auxiliaryRange:leafRange?this.getters.getRangeString(leafRange,this.sheetId):undefined,hierarchicalRanges:this.dataSets.map((ds)=>({dataRange:this.getters.getRangeString(ds.dataRange,this.sheetId),})),};}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){return{type:"sunburst",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:dataSets.map((ds)=>({dataRange:this.getters.getRangeString(ds.dataRange,targetSheetId||this.sheetId),})),legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,showValues:this.showValues,showLabels:this.showLabels,valuesDesign:this.valuesDesign,groupColors:this.groupColors,pieHolePercentage:this.pieHolePercentage,};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new SunburstChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new SunburstChart(definition,sheetId,this.getters);}
getDefinitionForExcel(){return undefined;}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new SunburstChart(definition,this.sheetId,this.getters);}}
function createSunburstChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getHierarchalChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:"doughnut",data:{datasets:getSunburstChartDatasets(definition,chartData),},options:{cutout:chart.pieHolePercentage===undefined?"25%":`${chart.pieHolePercentage}%`,...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),plugins:{title:getChartTitle(definition),legend:getSunburstChartLegend(definition),tooltip:getSunburstChartTooltip(definition,chartData),sunburstLabelsPlugin:getSunburstShowValues(definition,chartData),sunburstHoverPlugin:{enabled:true},},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
class TreeMapChart extends AbstractChart{static defaults={background:BACKGROUND_CHART_COLOR,legendPosition:"top",dataSetsHaveTitle:false,showHeaders:true,headersColor:"#000000",};dataSets;labelRange;background;legendPosition;type="treemap";dataSetsHaveTitle;showHeaders;headerDesign;showValues;showLabels;valuesDesign;coloringOptions;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.legendPosition=definition.legendPosition;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.showHeaders=definition.showHeaders;this.headerDesign=definition.headerDesign;this.showValues=definition.showValues;this.showLabels=definition.showLabels;this.valuesDesign=definition.valuesDesign;this.coloringOptions=definition.coloringOptions;}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){const dataSets=[];if(context.hierarchicalRanges?.length){dataSets.push(...context.hierarchicalRanges);}
else if(context.auxiliaryRange){dataSets.push({...context.range?.[0],dataRange:context.auxiliaryRange});}
return{background:context.background,dataSets,dataSetsHaveTitle:context.dataSetsHaveTitle??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"treemap",labelRange:context.range?.[0]?.dataRange,showValues:context.showValues,showHeaders:context.showHeaders,headerDesign:context.headerDesign,showLabels:context.showLabels,valuesDesign:context.valuesDesign,coloringOptions:context.treemapColoringOptions,};}
getContextCreation(){const leafRange=this.dataSets.at(-1)?.dataRange;return{...this,range:this.labelRange?[{dataRange:this.getters.getRangeString(this.labelRange,this.sheetId)}]:[],auxiliaryRange:leafRange?this.getters.getRangeString(leafRange,this.sheetId):undefined,hierarchicalRanges:this.dataSets.map((ds)=>({dataRange:this.getters.getRangeString(ds.dataRange,this.sheetId),})),};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new TreeMapChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new TreeMapChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=dataSets.map((dataSet)=>({dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),}));return{type:"treemap",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,showValues:this.showValues,showHeaders:this.showHeaders,headerDesign:this.headerDesign,showLabels:this.showLabels,valuesDesign:this.valuesDesign,coloringOptions:this.coloringOptions,};}
getDefinitionForExcel(){return undefined;}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new TreeMapChart(definition,this.sheetId,this.getters);}}
function createTreeMapChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getHierarchalChartData(definition,chart.dataSets,chart.labelRange,getters);const config={type:"treemap",data:{labels:chartData.labels,datasets:getTreeMapChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),plugins:{title:getChartTitle(definition),legend:{display:false},tooltip:getTreeMapChartTooltip(definition,chartData),},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
class WaterfallChart extends AbstractChart{dataSets;labelRange;background;verticalAxisPosition;legendPosition;aggregated;type="waterfall";dataSetsHaveTitle;showSubTotals;firstValueAsSubtotal;showConnectorLines;positiveValuesColor;negativeValuesColor;subTotalValuesColor;dataSetDesign;axesDesign;showValues;constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.dataSets=createDataSets(getters,definition.dataSets,sheetId,definition.dataSetsHaveTitle);this.labelRange=createValidRange(getters,sheetId,definition.labelRange);this.background=definition.background;this.verticalAxisPosition=definition.verticalAxisPosition;this.legendPosition=definition.legendPosition;this.aggregated=definition.aggregated;this.dataSetsHaveTitle=definition.dataSetsHaveTitle;this.showSubTotals=definition.showSubTotals;this.showConnectorLines=definition.showConnectorLines;this.positiveValuesColor=definition.positiveValuesColor;this.negativeValuesColor=definition.negativeValuesColor;this.subTotalValuesColor=definition.subTotalValuesColor;this.firstValueAsSubtotal=definition.firstValueAsSubtotal;this.dataSetDesign=definition.dataSets;this.axesDesign=definition.axesDesign;this.showValues=definition.showValues;}
static transformDefinition(chartSheetId,definition,applyChange){return transformChartDefinitionWithDataSetsWithZone(chartSheetId,definition,applyChange);}
static validateChartDefinition(validator,definition){return validator.checkValidations(definition,checkDataset,checkLabelRange);}
static getDefinitionFromContextCreation(context){return{background:context.background,dataSets:context.range?context.range:[],dataSetsHaveTitle:context.dataSetsHaveTitle??false,aggregated:context.aggregated??false,legendPosition:context.legendPosition??"top",title:context.title||{text:""},type:"waterfall",verticalAxisPosition:"left",labelRange:context.auxiliaryRange||undefined,showSubTotals:context.showSubTotals??false,showConnectorLines:context.showConnectorLines??true,firstValueAsSubtotal:context.firstValueAsSubtotal??false,axesDesign:context.axesDesign,showValues:context.showValues,};}
getContextCreation(){const range=[];for(const[i,dataSet]of this.dataSets.entries()){range.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,this.sheetId),});}
return{...this,range,auxiliaryRange:this.labelRange?this.getters.getRangeString(this.labelRange,this.sheetId):undefined,};}
duplicateInDuplicatedSheet(newSheetId){const dataSets=duplicateDataSetsInDuplicatedSheet(this.sheetId,newSheetId,this.dataSets);const labelRange=duplicateLabelRangeInDuplicatedSheet(this.sheetId,newSheetId,this.labelRange);const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange,newSheetId);return new WaterfallChart(definition,newSheetId,this.getters);}
copyInSheetId(sheetId){const definition=this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange,sheetId);return new WaterfallChart(definition,sheetId,this.getters);}
getDefinition(){return this.getDefinitionWithSpecificDataSets(this.dataSets,this.labelRange);}
getDefinitionWithSpecificDataSets(dataSets,labelRange,targetSheetId){const ranges=[];for(const[i,dataSet]of dataSets.entries()){ranges.push({...this.dataSetDesign?.[i],dataRange:this.getters.getRangeString(dataSet.dataRange,targetSheetId||this.sheetId),});}
return{type:"waterfall",dataSetsHaveTitle:dataSets.length?Boolean(dataSets[0].labelCell):false,background:this.background,dataSets:ranges,legendPosition:this.legendPosition,verticalAxisPosition:this.verticalAxisPosition,labelRange:labelRange?this.getters.getRangeString(labelRange,targetSheetId||this.sheetId):undefined,title:this.title,aggregated:this.aggregated,showSubTotals:this.showSubTotals,showConnectorLines:this.showConnectorLines,positiveValuesColor:this.positiveValuesColor,negativeValuesColor:this.negativeValuesColor,subTotalValuesColor:this.subTotalValuesColor,firstValueAsSubtotal:this.firstValueAsSubtotal,axesDesign:this.axesDesign,showValues:this.showValues,};}
getDefinitionForExcel(){return undefined;}
updateRanges(applyChange){const{dataSets,labelRange,isStale}=updateChartRangesWithDataSets(this.getters,applyChange,this.dataSets,this.labelRange);if(!isStale){return this;}
const definition=this.getDefinitionWithSpecificDataSets(dataSets,labelRange);return new WaterfallChart(definition,this.sheetId,this.getters);}}
function createWaterfallChartRuntime(chart,getters){const definition=chart.getDefinition();const chartData=getBarChartData(definition,chart.dataSets,chart.labelRange,getters);const{labels,datasets}=getWaterfallDatasetAndLabels(definition,chartData);const config={type:"bar",data:{labels,datasets,},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getWaterfallChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getWaterfallChartLegend(definition),tooltip:getWaterfallChartTooltip(definition,chartData),chartShowValuesPlugin:getWaterfallChartShowValues(definition,chartData),waterfallLinesPlugin:{showConnectorLines:definition.showConnectorLines},},},};return{chartJsConfig:config,background:chart.background||BACKGROUND_CHART_COLOR};}
const chartRegistry=new Registry();chartRegistry.add("bar",{match:(type)=>type==="bar",createChart:(definition,sheetId,getters)=>new BarChart(definition,sheetId,getters),getChartRuntime:createBarChartRuntime,validateChartDefinition:BarChart.validateChartDefinition,transformDefinition:BarChart.transformDefinition,getChartDefinitionFromContextCreation:BarChart.getDefinitionFromContextCreation,sequence:10,});chartRegistry.add("combo",{match:(type)=>type==="combo",createChart:(definition,sheetId,getters)=>new ComboChart(definition,sheetId,getters),getChartRuntime:createComboChartRuntime,validateChartDefinition:ComboChart.validateChartDefinition,transformDefinition:ComboChart.transformDefinition,getChartDefinitionFromContextCreation:ComboChart.getDefinitionFromContextCreation,sequence:15,});chartRegistry.add("line",{match:(type)=>type==="line",createChart:(definition,sheetId,getters)=>new LineChart(definition,sheetId,getters),getChartRuntime:createLineChartRuntime,validateChartDefinition:LineChart.validateChartDefinition,transformDefinition:LineChart.transformDefinition,getChartDefinitionFromContextCreation:LineChart.getDefinitionFromContextCreation,sequence:20,});chartRegistry.add("pie",{match:(type)=>type==="pie",createChart:(definition,sheetId,getters)=>new PieChart(definition,sheetId,getters),getChartRuntime:createPieChartRuntime,validateChartDefinition:PieChart.validateChartDefinition,transformDefinition:PieChart.transformDefinition,getChartDefinitionFromContextCreation:PieChart.getDefinitionFromContextCreation,sequence:30,});chartRegistry.add("scorecard",{match:(type)=>type==="scorecard",createChart:(definition,sheetId,getters)=>new ScorecardChart$1(definition,sheetId,getters),getChartRuntime:createScorecardChartRuntime,validateChartDefinition:ScorecardChart$1.validateChartDefinition,transformDefinition:ScorecardChart$1.transformDefinition,getChartDefinitionFromContextCreation:ScorecardChart$1.getDefinitionFromContextCreation,sequence:40,});chartRegistry.add("gauge",{match:(type)=>type==="gauge",createChart:(definition,sheetId,getters)=>new GaugeChart(definition,sheetId,getters),getChartRuntime:createGaugeChartRuntime,validateChartDefinition:GaugeChart.validateChartDefinition,transformDefinition:GaugeChart.transformDefinition,getChartDefinitionFromContextCreation:GaugeChart.getDefinitionFromContextCreation,sequence:50,});chartRegistry.add("scatter",{match:(type)=>type==="scatter",createChart:(definition,sheetId,getters)=>new ScatterChart(definition,sheetId,getters),getChartRuntime:createScatterChartRuntime,validateChartDefinition:ScatterChart.validateChartDefinition,transformDefinition:ScatterChart.transformDefinition,getChartDefinitionFromContextCreation:ScatterChart.getDefinitionFromContextCreation,sequence:60,});chartRegistry.add("waterfall",{match:(type)=>type==="waterfall",createChart:(definition,sheetId,getters)=>new WaterfallChart(definition,sheetId,getters),getChartRuntime:createWaterfallChartRuntime,validateChartDefinition:WaterfallChart.validateChartDefinition,transformDefinition:WaterfallChart.transformDefinition,getChartDefinitionFromContextCreation:WaterfallChart.getDefinitionFromContextCreation,sequence:70,});chartRegistry.add("pyramid",{match:(type)=>type==="pyramid",createChart:(definition,sheetId,getters)=>new PyramidChart(definition,sheetId,getters),getChartRuntime:createPyramidChartRuntime,validateChartDefinition:PyramidChart.validateChartDefinition,transformDefinition:PyramidChart.transformDefinition,getChartDefinitionFromContextCreation:PyramidChart.getDefinitionFromContextCreation,sequence:80,dataSeriesLimit:2,});chartRegistry.add("radar",{match:(type)=>type==="radar",createChart:(definition,sheetId,getters)=>new RadarChart(definition,sheetId,getters),getChartRuntime:createRadarChartRuntime,validateChartDefinition:RadarChart.validateChartDefinition,transformDefinition:RadarChart.transformDefinition,getChartDefinitionFromContextCreation:RadarChart.getDefinitionFromContextCreation,sequence:80,});chartRegistry.add("geo",{match:(type)=>type==="geo",createChart:(definition,sheetId,getters)=>new GeoChart(definition,sheetId,getters),getChartRuntime:createGeoChartRuntime,validateChartDefinition:GeoChart.validateChartDefinition,transformDefinition:GeoChart.transformDefinition,getChartDefinitionFromContextCreation:GeoChart.getDefinitionFromContextCreation,sequence:90,dataSeriesLimit:1,});chartRegistry.add("funnel",{match:(type)=>type==="funnel",createChart:(definition,sheetId,getters)=>new FunnelChart(definition,sheetId,getters),getChartRuntime:createFunnelChartRuntime,validateChartDefinition:FunnelChart.validateChartDefinition,transformDefinition:FunnelChart.transformDefinition,getChartDefinitionFromContextCreation:FunnelChart.getDefinitionFromContextCreation,sequence:100,dataSeriesLimit:1,});chartRegistry.add("sunburst",{match:(type)=>type==="sunburst",createChart:(definition,sheetId,getters)=>new SunburstChart(definition,sheetId,getters),getChartRuntime:createSunburstChartRuntime,validateChartDefinition:SunburstChart.validateChartDefinition,transformDefinition:SunburstChart.transformDefinition,getChartDefinitionFromContextCreation:SunburstChart.getDefinitionFromContextCreation,sequence:30,});chartRegistry.add("treemap",{match:(type)=>type==="treemap",createChart:(definition,sheetId,getters)=>new TreeMapChart(definition,sheetId,getters),getChartRuntime:createTreeMapChartRuntime,validateChartDefinition:TreeMapChart.validateChartDefinition,transformDefinition:TreeMapChart.transformDefinition,getChartDefinitionFromContextCreation:TreeMapChart.getDefinitionFromContextCreation,sequence:100,});const chartComponentRegistry=new Registry();chartComponentRegistry.add("line",ChartJsComponent);chartComponentRegistry.add("bar",ChartJsComponent);chartComponentRegistry.add("combo",ChartJsComponent);chartComponentRegistry.add("pie",ChartJsComponent);chartComponentRegistry.add("gauge",GaugeChartComponent);chartComponentRegistry.add("scatter",ChartJsComponent);chartComponentRegistry.add("scorecard",ScorecardChart);chartComponentRegistry.add("waterfall",ChartJsComponent);chartComponentRegistry.add("pyramid",ChartJsComponent);chartComponentRegistry.add("radar",ChartJsComponent);chartComponentRegistry.add("geo",ChartJsComponent);chartComponentRegistry.add("funnel",ChartJsComponent);chartComponentRegistry.add("sunburst",ChartJsComponent);chartComponentRegistry.add("treemap",ChartJsComponent);const chartCategories={line:_t("Line"),column:_t("Column"),bar:_t("Bar"),area:_t("Area"),pie:_t("Pie"),hierarchical:_t("Hierarchical"),misc:_t("Miscellaneous"),};const chartSubtypeRegistry=new Registry();chartSubtypeRegistry.add("line",{matcher:(definition)=>definition.type==="line"&&!definition.stacked&&!definition.fillArea,displayName:_t("Line"),chartType:"line",chartSubtype:"line",subtypeDefinition:{stacked:false,fillArea:false},category:"line",preview:"o-spreadsheet-ChartPreview.LINE_CHART",}).add("stacked_line",{matcher:(definition)=>definition.type==="line"&&!definition.fillArea&&!!definition.stacked,displayName:_t("Stacked Line"),chartType:"line",chartSubtype:"stacked_line",subtypeDefinition:{stacked:true,fillArea:false},category:"line",preview:"o-spreadsheet-ChartPreview.STACKED_LINE_CHART",}).add("area",{matcher:(definition)=>definition.type==="line"&&!definition.stacked&&!!definition.fillArea,displayName:_t("Area"),chartType:"line",chartSubtype:"area",subtypeDefinition:{stacked:false,fillArea:true},category:"area",preview:"o-spreadsheet-ChartPreview.AREA_CHART",}).add("stacked_area",{matcher:(definition)=>definition.type==="line"&&definition.stacked&&!!definition.fillArea,displayName:_t("Stacked Area"),chartType:"line",chartSubtype:"stacked_area",subtypeDefinition:{stacked:true,fillArea:true},category:"area",preview:"o-spreadsheet-ChartPreview.STACKED_AREA_CHART",}).add("scatter",{displayName:_t("Scatter"),chartType:"scatter",chartSubtype:"scatter",category:"misc",preview:"o-spreadsheet-ChartPreview.SCATTER_CHART",}).add("column",{matcher:(definition)=>definition.type==="bar"&&!definition.stacked&&!definition.horizontal,displayName:_t("Column"),chartType:"bar",chartSubtype:"column",subtypeDefinition:{stacked:false,horizontal:false},category:"column",preview:"o-spreadsheet-ChartPreview.COLUMN_CHART",}).add("stacked_column",{matcher:(definition)=>definition.type==="bar"&&definition.stacked&&!definition.horizontal,displayName:_t("Stacked Column"),chartType:"bar",chartSubtype:"stacked_column",subtypeDefinition:{stacked:true,horizontal:false},category:"column",preview:"o-spreadsheet-ChartPreview.STACKED_COLUMN_CHART",}).add("bar",{matcher:(definition)=>definition.type==="bar"&&!definition.stacked&&!!definition.horizontal,displayName:_t("Bar"),chartType:"bar",chartSubtype:"bar",subtypeDefinition:{horizontal:true,stacked:false},category:"bar",preview:"o-spreadsheet-ChartPreview.BAR_CHART",}).add("stacked_bar",{matcher:(definition)=>definition.type==="bar"&&definition.stacked&&!!definition.horizontal,displayName:_t("Stacked Bar"),chartType:"bar",chartSubtype:"stacked_bar",subtypeDefinition:{horizontal:true,stacked:true},category:"bar",preview:"o-spreadsheet-ChartPreview.STACKED_BAR_CHART",}).add("combo",{displayName:_t("Combo"),chartSubtype:"combo",chartType:"combo",category:"line",preview:"o-spreadsheet-ChartPreview.COMBO_CHART",}).add("pie",{matcher:(definition)=>definition.type==="pie"&&!definition.isDoughnut,displayName:_t("Pie"),chartSubtype:"pie",chartType:"pie",subtypeDefinition:{isDoughnut:false},category:"pie",preview:"o-spreadsheet-ChartPreview.PIE_CHART",}).add("doughnut",{matcher:(definition)=>definition.type==="pie"&&!!definition.isDoughnut,displayName:_t("Doughnut"),chartSubtype:"doughnut",chartType:"pie",subtypeDefinition:{isDoughnut:true},category:"pie",preview:"o-spreadsheet-ChartPreview.DOUGHNUT_CHART",}).add("gauge",{displayName:_t("Gauge"),chartSubtype:"gauge",chartType:"gauge",category:"misc",preview:"o-spreadsheet-ChartPreview.GAUGE_CHART",}).add("scorecard",{displayName:_t("Scorecard"),chartSubtype:"scorecard",chartType:"scorecard",category:"misc",preview:"o-spreadsheet-ChartPreview.SCORECARD_CHART",}).add("waterfall",{displayName:_t("Waterfall"),chartSubtype:"waterfall",chartType:"waterfall",category:"misc",preview:"o-spreadsheet-ChartPreview.WATERFALL_CHART",}).add("pyramid",{displayName:_t("Population Pyramid"),chartSubtype:"pyramid",chartType:"pyramid",category:"misc",preview:"o-spreadsheet-ChartPreview.POPULATION_PYRAMID_CHART",}).add("radar",{matcher:(definition)=>definition.type==="radar"&&!definition.fillArea,displayName:_t("Radar"),chartSubtype:"radar",chartType:"radar",subtypeDefinition:{fillArea:false},category:"misc",preview:"o-spreadsheet-ChartPreview.RADAR_CHART",}).add("filled_radar",{matcher:(definition)=>definition.type==="radar"&&!!definition.fillArea,displayName:_t("Filled Radar"),chartType:"radar",chartSubtype:"filled_radar",subtypeDefinition:{fillArea:true},category:"misc",preview:"o-spreadsheet-ChartPreview.FILLED_RADAR_CHART",}).add("geo",{displayName:_t("Geo Chart"),chartSubtype:"geo",chartType:"geo",category:"misc",preview:"o-spreadsheet-ChartPreview.GEO_CHART",}).add("funnel",{displayName:_t("Funnel"),chartSubtype:"funnel",chartType:"funnel",category:"misc",preview:"o-spreadsheet-ChartPreview.FUNNEL_CHART",}).add("sunburst",{matcher:(definition)=>definition.type==="sunburst",displayName:_t("Sunburst"),chartSubtype:"sunburst",chartType:"sunburst",category:"hierarchical",preview:"o-spreadsheet-ChartPreview.SUNBURST_CHART",}).add("treemap",{matcher:(definition)=>definition.type==="treemap",displayName:_t("Tree Map"),chartType:"treemap",chartSubtype:"treemap",category:"hierarchical",preview:"o-spreadsheet-ChartPreview.TREE_MAP_CHART",});function chartFactory(getters){const builders=chartRegistry.getAll().sort((a,b)=>a.sequence-b.sequence);function createChart(id,definition,sheetId){const builder=builders.find((builder)=>builder.match(definition.type));if(!builder){throw new Error(`No builder for this chart: ${definition.type}`);}
return builder.createChart(definition,sheetId,getters);}
return createChart;}
function chartRuntimeFactory(getters){const builders=chartRegistry.getAll().sort((a,b)=>a.sequence-b.sequence);function createRuntimeChart(chart){const builder=builders.find((builder)=>builder.match(chart.type));if(!builder){throw new Error("No runtime builder for this chart.");}
return builder.getChartRuntime(chart,getters);}
return createRuntimeChart;}
function validateChartDefinition(validator,definition){const validators=chartRegistry.getAll().find((validator)=>validator.match(definition.type));if(!validators){throw new Error("Unknown chart type.");}
return validators.validateChartDefinition(validator,definition);}
function transformDefinition(chartSheetId,definition,applyrange){const transformation=chartRegistry.getAll().find((factory)=>factory.match(definition.type));if(!transformation){throw new Error("Unknown chart type.");}
return transformation.transformDefinition(chartSheetId,definition,applyrange);}
function getSmartChartDefinition(zone,getters){const hierarchicalDefinition=tryToMakeHierarchicalChart(getters,zone);if(hierarchicalDefinition){return hierarchicalDefinition;}
const sheetId=getters.getActiveSheetId();let dataSetZone=zone;const singleColumn=zoneToDimension(zone).numberOfCols===1;if(!singleColumn){dataSetZone={...zone,left:zone.left+1};}
const dataRange=zoneToXc(getters.getUnboundedZone(sheetId,dataSetZone));const dataSets=[{dataRange,yAxisId:"y"}];const topLeftCell=getters.getCell({sheetId,col:zone.left,row:zone.top});if(getZoneArea(zone)===1&&topLeftCell?.content){return{type:"scorecard",title:{},background:topLeftCell.style?.fillColor||undefined,keyValue:zoneToXc(zone),baselineMode:DEFAULT_SCORECARD_BASELINE_MODE,baselineColorUp:DEFAULT_SCORECARD_BASELINE_COLOR_UP,baselineColorDown:DEFAULT_SCORECARD_BASELINE_COLOR_DOWN,};}
const cellsInFirstRow=getters.getEvaluatedCellsInZone(sheetId,{...dataSetZone,bottom:dataSetZone.top,});const dataSetsHaveTitle=!!cellsInFirstRow.find((cell)=>cell.type!==CellValueType.empty&&cell.type!==CellValueType.number);let labelRangeXc;if(!singleColumn){labelRangeXc=zoneToXc(getters.getUnboundedZone(sheetId,{...zone,right:zone.left}));}
const newLegendPos=dataSetZone.right===dataSetZone.left?"none":"top";const lineChartDefinition={title:{},dataSets,labelsAsText:false,stacked:false,aggregated:false,cumulative:false,labelRange:labelRangeXc,type:"line",dataSetsHaveTitle,legendPosition:newLegendPos,};const chart=new LineChart(lineChartDefinition,sheetId,getters);if(canChartParseLabels(lineChartDefinition,chart.dataSets,chart.labelRange,getters)){return lineChartDefinition;}
const _dataSets=createDataSets(getters,dataSets,sheetId,dataSetsHaveTitle);if(singleColumn&&getData(getters,_dataSets[0]).every((e)=>typeof e==="string"&&!isEvaluationError(e))){return{title:{},dataSets:[{dataRange}],aggregated:true,labelRange:dataRange,type:"pie",legendPosition:"top",dataSetsHaveTitle:false,};}
return{title:{},dataSets,labelRange:labelRangeXc,type:"bar",stacked:false,aggregated:false,dataSetsHaveTitle,legendPosition:newLegendPos,};}
function tryToMakeHierarchicalChart(getters,zone){const sheetId=getters.getActiveSheetId();const numberOfCols=zoneToDimension(zone).numberOfCols;if(zone.top===zone.bottom||numberOfCols<=2){return undefined;}
const firstCellOfValues=getters.getEvaluatedCell({sheetId,col:zone.right,row:zone.top});const dataSetsHaveTitle=firstCellOfValues.type!==CellValueType.number;const getColumnType=(col)=>{const cells=getters.getEvaluatedCellsInZone(sheetId,{...zone,left:col,right:col,top:zone.top+(dataSetsHaveTitle?1:0),});if(cells.every((cell)=>cell.type!==CellValueType.number)){return"string";}
else if(cells.every((cell)=>cell.type!==CellValueType.text)){return"number";}
return undefined;};for(let col=zone.left;col<zone.right;col++){const columnType=getColumnType(col);if(col!==zone.right&&columnType!=="string"){return undefined;}
else if(col===zone.right&&columnType!=="number"){return undefined;}}
const dataSetZone={...zone,right:zone.right-1};const labelsZone={...zone,left:zone.right};return{title:{},dataSets:[{dataRange:zoneToXc(dataSetZone)}],type:"sunburst",legendPosition:"none",labelRange:zoneToXc(labelsZone),dataSetsHaveTitle:dataSetsHaveTitle,};}
var CHART_HELPERS=Object.freeze({__proto__:null,AbstractChart:AbstractChart,BarChart:BarChart,CHART_AXIS_CHOICES:CHART_AXIS_CHOICES,CHART_COMMON_OPTIONS:CHART_COMMON_OPTIONS,GaugeChart:GaugeChart,LineChart:LineChart,MOVING_AVERAGE_TREND_LINE_XAXIS_ID:MOVING_AVERAGE_TREND_LINE_XAXIS_ID,PieChart:PieChart,SPREADSHEET_TO_EXCEL_TRENDLINE_TYPE_MAPPING:SPREADSHEET_TO_EXCEL_TRENDLINE_TYPE_MAPPING,ScorecardChart:ScorecardChart$1,TREND_LINE_XAXIS_ID:TREND_LINE_XAXIS_ID,WaterfallChart:WaterfallChart,adaptChartRange:adaptChartRange,chartFactory:chartFactory,chartFontColor:chartFontColor,chartMutedFontColor:chartMutedFontColor,chartRuntimeFactory:chartRuntimeFactory,chartToImageFile:chartToImageFile,chartToImageUrl:chartToImageUrl,checkDataset:checkDataset,checkLabelRange:checkLabelRange,createBarChartRuntime:createBarChartRuntime,createDataSets:createDataSets,createGaugeChartRuntime:createGaugeChartRuntime,createLineChartRuntime:createLineChartRuntime,createPieChartRuntime:createPieChartRuntime,createScorecardChartRuntime:createScorecardChartRuntime,createWaterfallChartRuntime:createWaterfallChartRuntime,drawScoreChart:drawScoreChart,duplicateDataSetsInDuplicatedSheet:duplicateDataSetsInDuplicatedSheet,duplicateLabelRangeInDuplicatedSheet:duplicateLabelRangeInDuplicatedSheet,formatChartDatasetValue:formatChartDatasetValue,formatTickValue:formatTickValue,getChartPositionAtCenterOfViewport:getChartPositionAtCenterOfViewport,getDefinedAxis:getDefinedAxis,getPieColors:getPieColors,getSmartChartDefinition:getSmartChartDefinition,isTrendLineAxis:isTrendLineAxis,shouldRemoveFirstLabel:shouldRemoveFirstLabel,toExcelDataset:toExcelDataset,toExcelLabelRange:toExcelLabelRange,transformChartDefinitionWithDataSetsWithZone:transformChartDefinitionWithDataSetsWithZone,transformDefinition:transformDefinition,truncateLabel:truncateLabel,updateChartRangesWithDataSets:updateChartRangesWithDataSets,validateChartDefinition:validateChartDefinition});function centerFigurePosition(getters,size){const{scrollX,scrollY}=getters.getActiveSheetScrollInfo();const dim=getters.getSheetViewDimension();const posX=scrollX+Math.max(0,(dim.width-size.width)/2);const posY=scrollY+Math.max(0,(dim.height-size.height)/2);return getters.getPositionAnchorOffset({x:posX,y:posY});}
function getMaxFigureSize(getters,figureSize){const size=deepCopy(figureSize);const dim=getters.getSheetViewDimension();const maxWidth=dim.width;const maxHeight=dim.height;if(size.width>maxWidth){const ratio=maxWidth/size.width;size.width=maxWidth;size.height=size.height*ratio;}
if(size.height>maxHeight){const ratio=maxHeight/size.height;size.height=maxHeight;size.width=size.width*ratio;}
return size;}
class XMLString{xmlString;constructor(xmlString){this.xmlString=xmlString;}
toString(){return this.xmlString;}}
const XLSX_CHART_TYPES=["areaChart","area3DChart","lineChart","line3DChart","stockChart","radarChart","scatterChart","pieChart","pie3DChart","doughnutChart","barChart","bar3DChart","ofPieChart","surfaceChart","surface3DChart","bubbleChart","comboChart","radarChart",];function createXMLFile(doc,path,contentType){return{content:new XMLSerializer().serializeToString(doc),path,contentType,};}
function xmlEscape(str){return(String(str).replace(/\&/g,"&amp;").replace(/\</g,"&lt;").replace(/\>/g,"&gt;").replace(/\"/g,"&quot;").replace(/\'/g,"&apos;").replace(/[\x00-\x08\x0B\x0C\x0E-\x1F]/g,""));}
function formatAttributes(attrs){return new XMLString(attrs.map(([key,val])=>`${key}="${xmlEscape(val)}"`).join(" "));}
function parseXML(xmlString,mimeType="text/xml"){const document=new DOMParser().parseFromString(xmlString.toString(),mimeType);const parserError=document.querySelector("parsererror");if(parserError){const errorString=parserError.innerHTML;const lineNumber=parseInt(errorString.split(":")[0],10);const xmlStringArray=xmlString.toString().trim().split("\n");const xmlPreview=xmlStringArray.slice(Math.max(lineNumber-3,0),Math.min(lineNumber+2,xmlStringArray.length)).join("\n");throw new Error(`XML string could not be parsed: ${errorString}\n${xmlPreview}`);}
return document;}
function convertBorderDescr$1(descr){if(!descr){return undefined;}
return{style:descr.style,color:{rgb:descr.color},};}
function getDefaultXLSXStructure(data){const xlsxBorders=Object.values(data.borders).map((border)=>{return{left:convertBorderDescr$1(border.left),right:convertBorderDescr$1(border.right),bottom:convertBorderDescr$1(border.bottom),top:convertBorderDescr$1(border.top),};});const borders=[{},...xlsxBorders];return{relsFiles:[],sharedStrings:[],styles:[{fontId:0,fillId:0,numFmtId:0,borderId:0,alignment:{},},],fonts:[{size:DEFAULT_FONT_SIZE,family:2,color:{rgb:"000000"},name:"Arial",},],fills:[{reservedAttribute:"none"},{reservedAttribute:"gray125"}],borders,numFmts:[],dxfs:[],};}
function createOverride(partName,contentType){return escapeXml`
    <Override ContentType="${contentType}" PartName="${partName}" />
  `;}
function createDefaultXMLElement(extension,contentType){return escapeXml`
    <Default Extension="${extension}" ContentType="${contentType}" />
  `;}
function joinXmlNodes(xmlNodes){return new XMLString(xmlNodes.join("\n"));}
function escapeXml(strings,...expressions){const str=[strings[0]];for(let i=0;i<expressions.length;i++){const value=expressions[i]instanceof XMLString?expressions[i]:xmlEscape(expressions[i]);str.push(value+strings[i+1]);}
return new XMLString(concat(str));}
function removeTagEscapedNamespaces(tag){return tag.replace(/NAMESPACE.*NAMESPACE(.*)/,"$1");}
function escapeTagNamespaces(str){return str.replaceAll(/(<\/?)([a-zA-Z0-9]+):([a-zA-Z0-9]+)/g,"$1"+"NAMESPACE"+"$2"+"NAMESPACE"+"$3");}
function escapeQueryNameSpaces(query){return query.replaceAll(/([a-zA-Z0-9]+):([a-zA-Z0-9]+)/g,"NAMESPACE"+"$1"+"NAMESPACE"+"$2");}
function getChartMenuActions(figureId,onFigureDeleted,env){const menuItemSpecs=[{id:"edit",name:_t("Edit"),sequence:1,execute:()=>{env.model.dispatch("SELECT_FIGURE",{figureId});env.openSidePanel("ChartPanel");},icon:"o-spreadsheet-Icon.EDIT",isEnabled:(env)=>!env.isSmall,},getCopyMenuItem(figureId,env),getCutMenuItem(figureId,env),{id:"copy_as_image",name:_t("Copy as image"),icon:"o-spreadsheet-Icon.COPY_AS_IMAGE",sequence:4,execute:async()=>{const figureSheetId=env.model.getters.getFigureSheetId(figureId);const figure=env.model.getters.getFigure(figureSheetId,figureId);const chartType=env.model.getters.getChartType(figureId);const runtime=env.model.getters.getChartRuntime(figureId);const imageUrl=chartToImageUrl(runtime,figure,chartType);const innerHTML=`<img src="${xmlEscape(imageUrl)}" />`;const blob=await chartToImageFile(runtime,figure,chartType);env.clipboard.write({"text/html":innerHTML,"image/png":blob,});env.notifyUser({sticky:false,type:"success",text:_t("Chart copied to clipboard")});},isReadonlyAllowed:true,},{id:"download",name:_t("Download"),icon:"o-spreadsheet-Icon.DOWNLOAD",sequence:6,execute:async()=>{const figureSheetId=env.model.getters.getFigureSheetId(figureId);const figure=env.model.getters.getFigure(figureSheetId,figureId);const chartType=env.model.getters.getChartType(figureId);const runtime=env.model.getters.getChartRuntime(figureId);const url=chartToImageUrl(runtime,figure,chartType);downloadFile(url,"chart");},isReadonlyAllowed:true,},getDeleteMenuItem(figureId,onFigureDeleted,env),];return createActions(menuItemSpecs).filter((action)=>env.model.getters.isReadonly()?action.isReadonlyAllowed:true);}
function getImageMenuActions(figureId,onFigureDeleted,env){const menuItemSpecs=[getCopyMenuItem(figureId,env,_t("Image copied to clipboard")),getCutMenuItem(figureId,env),{id:"reset_size",name:_t("Reset size"),sequence:4,execute:async()=>{const sheetId=env.model.getters.getActiveSheetId();const figure=env.model.getters.getFigure(sheetId,figureId);if(!figure){return;}
const imagePath=env.model.getters.getImagePath(figureId);const size=env.model.getters.getImageSize(figureId)??(await env.imageProvider?.getImageOriginalSize(imagePath));if(!env.model.getters.getImageSize(figureId)){const image=env.model.getters.getImage(figureId);image.size=size;}
const{col,row}=figure;const{height,width}=getMaxFigureSize(env.model.getters,size);env.model.dispatch("UPDATE_FIGURE",{sheetId,figureId,height,width,col,row,});},icon:"o-spreadsheet-Icon.REFRESH",},{id:"download",name:_t("Download"),sequence:6,execute:async()=>{env.model.dispatch("SELECT_FIGURE",{figureId});const path=env.model.getters.getImagePath(figureId);downloadFile(path,"image");},icon:"o-spreadsheet-Icon.DOWNLOAD",},getDeleteMenuItem(figureId,onFigureDeleted,env),];return createActions(menuItemSpecs);}
function getCopyMenuItem(figureId,env,copiedNotificationMessage){return{id:"copy",name:_t("Copy"),sequence:2,description:"Ctrl+C",execute:async()=>{env.model.dispatch("SELECT_FIGURE",{figureId});env.model.dispatch("COPY");const osClipboardContent=await env.model.getters.getClipboardTextAndImageContent();await env.clipboard.write(osClipboardContent);if(copiedNotificationMessage){env.notifyUser({sticky:false,type:"success",text:copiedNotificationMessage});}},icon:"o-spreadsheet-Icon.CLIPBOARD",};}
function getCutMenuItem(figureId,env){return{id:"cut",name:_t("Cut"),sequence:3,description:"Ctrl+X",execute:async()=>{env.model.dispatch("SELECT_FIGURE",{figureId});env.model.dispatch("CUT");await env.clipboard.write(await env.model.getters.getClipboardTextAndImageContent());},icon:"o-spreadsheet-Icon.CUT",};}
function getDeleteMenuItem(figureId,onFigureDeleted,env){return{id:"delete",name:_t("Delete"),sequence:10,execute:()=>{env.model.dispatch("DELETE_FIGURE",{sheetId:env.model.getters.getActiveSheetId(),figureId,});onFigureDeleted();},icon:"o-spreadsheet-Icon.TRASH",};}
class FullScreenChartStore extends SpreadsheetStore{mutators=["toggleFullScreenChart"];fullScreenFigure=undefined;toggleFullScreenChart(figureId){if(this.fullScreenFigure?.id===figureId){this.fullScreenFigure=undefined;}
else{this.makeFullScreen(figureId);}}
makeFullScreen(figureId){const sheetId=this.getters.getActiveSheetId();const figure=this.getters.getFigure(sheetId,figureId);if(figure){this.fullScreenFigure={...figure,x:0,y:0,width:0,height:0};}}}
function useInterval(callback,delay){let intervalId;const{setInterval,clearInterval}=window;const pause=()=>{clearInterval(intervalId);intervalId=undefined;};const safeCallback=()=>{try{callback();}
catch(e){pause();throw e;}};useEffect(()=>{intervalId=setInterval(safeCallback,delay);return()=>clearInterval(intervalId);},()=>[delay]);return{pause,resume:()=>{if(intervalId===undefined){intervalId=setInterval(safeCallback,delay);}},};}
function useTimeOut(){let timeOutId;function clear(){if(timeOutId!==undefined){clearTimeout(timeOutId);timeOutId=undefined;}}
function schedule(callback,delay){clear();timeOutId=setTimeout(callback,delay);}
onWillUnmount(clear);return{clear,schedule,};}
css`
  .o-menu {
    background-color: white;
    user-select: none;

    .o-menu-item {
      height: ${DESKTOP_MENU_ITEM_HEIGHT}px;
      padding: ${MENU_ITEM_PADDING_VERTICAL}px ${MENU_ITEM_PADDING_HORIZONTAL}px;
      cursor: pointer;
      user-select: none;

      .o-menu-item-name {
        min-width: 40%;
      }

      .o-menu-item-icon {
        display: inline-block;
        margin: 0px 8px 0px 0px;
        width: ${DESKTOP_MENU_ITEM_HEIGHT - 2 * MENU_ITEM_PADDING_VERTICAL}px;
        line-height: ${DESKTOP_MENU_ITEM_HEIGHT - 2 * MENU_ITEM_PADDING_VERTICAL}px;
      }

      &:not(.disabled) {
        &:hover,
        &.o-menu-item-active {
          background-color: ${BUTTON_ACTIVE_BG};
          color: ${BUTTON_ACTIVE_TEXT_COLOR};
        }
        .o-menu-item-description {
          color: grey;
        }
        .o-menu-item-icon {
          .o-icon {
            color: ${ICONS_COLOR};
          }
        }
      }
      &.disabled {
        color: ${DISABLED_TEXT_COLOR};
        cursor: not-allowed;
      }
    }
  }

  .o-spreadsheet-mobile {
    .o-menu-item {
      height: ${MOBILE_MENU_ITEM_HEIGHT}px;
    }
  }
`;class Menu extends Component{static template="o-spreadsheet-Menu";static props={menuItems:Array,onClose:Function,onClickMenu:{type:Function,optional:true},onMouseEnter:{type:Function,optional:true},onMouseOver:{type:Function,optional:true},onMouseLeave:{type:Function,optional:true},width:{type:Number,optional:true},isActive:{type:Function,optional:true},onScroll:{type:Function,optional:true},};static components={};static defaultProps={};hoveredMenu=undefined;setup(){onWillUnmount(()=>{this.hoveredMenu?.onStopHover?.(this.env);});}
get menuItemsAndSeparators(){const menuItemsAndSeparators=[];for(let i=0;i<this.props.menuItems.length;i++){const menuItem=this.props.menuItems[i];if(menuItem.isVisible(this.env)){menuItemsAndSeparators.push(menuItem);}
if(menuItem.separator&&i!==this.props.menuItems.length-1&&menuItemsAndSeparators[menuItemsAndSeparators.length-1]!=="separator"){menuItemsAndSeparators.push("separator");}}
if(menuItemsAndSeparators[menuItemsAndSeparators.length-1]==="separator"){menuItemsAndSeparators.pop();}
if(menuItemsAndSeparators.length===1&&menuItemsAndSeparators[0]==="separator"){return[];}
return menuItemsAndSeparators;}
get childrenHaveIcon(){return this.props.menuItems.some((menuItem)=>!!this.getIconName(menuItem));}
getIconName(menu){if(menu.icon(this.env)){return menu.icon(this.env);}
if(menu.isActive?.(this.env)){return"o-spreadsheet-Icon.CHECK";}
return"";}
getColor(menu){return cssPropertiesToCss({color:menu.textColor});}
getIconColor(menu){return cssPropertiesToCss({color:menu.iconColor});}
getName(menu){return menu.name(this.env);}
isRoot(menu){return!menu.execute;}
isEnabled(menu){if(menu.isEnabled(this.env)){return this.env.model.getters.isReadonly()?menu.isReadonlyAllowed:true;}
return false;}
get menuStyle(){return this.props.width?cssPropertiesToCss({width:this.props.width+"px"}):"";}
onMouseEnter(menu,ev){this.hoveredMenu=menu;menu.onStartHover?.(this.env);this.props.onMouseEnter?.(menu,ev);}
onMouseLeave(menu,ev){this.hoveredMenu=undefined;menu.onStopHover?.(this.env);this.props.onMouseLeave?.(menu,ev);}
onClickMenu(menu,ev){if(!this.isEnabled(menu)){return;}
this.props.onClickMenu?.(menu,ev);}}
function rectIntersection(rect1,rect2){return zoneToRect(intersection(rectToZone(rect1),rectToZone(rect2)));}
function rectUnion(...rects){return zoneToRect(union(...rects.map(rectToZone)));}
function rectToZone(rect){return{left:rect.x,top:rect.y,right:rect.x+rect.width,bottom:rect.y+rect.height,};}
function zoneToRect(zone){if(!zone)
return undefined;return{x:zone.left,y:zone.top,width:zone.right-zone.left,height:zone.bottom-zone.top,};}
function isPointInsideRect(x,y,rect){return x>=rect.x&&x<=rect.x+rect.width&&y>=rect.y&&y<=rect.y+rect.height;}
function useSpreadsheetRect(){const position=useState({x:0,y:0,width:0,height:0});let spreadsheetElement=null;function updatePosition(){if(!spreadsheetElement){spreadsheetElement=document.querySelector(".o-spreadsheet");}
if(spreadsheetElement){const{top,left,width,height}=spreadsheetElement.getBoundingClientRect();position.x=left;position.y=top;position.width=width;position.height=height;}}
onMounted(updatePosition);onPatched(updatePosition);return position;}
function usePopoverContainer(){const container=useState({x:0,y:0,width:0,height:0});const component=useComponent();const spreadsheetRect=useSpreadsheetRect();function updateRect(){const env=component.env;const newRect="getPopoverContainerRect"in env&&env.getPopoverContainerRect?env.getPopoverContainerRect():spreadsheetRect;container.x=newRect.x;container.y=newRect.y;container.width=newRect.width;container.height=newRect.height;}
updateRect();onMounted(updateRect);onPatched(updateRect);return container;}
css`
  .o-popover {
    position: absolute;
    z-index: ${ComponentsImportance.Popover};
    overflow: auto;
    box-shadow: 1px 2px 5px 2px rgb(51 51 51 / 15%);
    width: fit-content;
    height: fit-content;
  }
`;class Popover extends Component{static template="o-spreadsheet-Popover";static props={anchorRect:Object,containerRect:{type:Object,optional:true},positioning:{type:String,optional:true},maxWidth:{type:Number,optional:true},maxHeight:{type:Number,optional:true},verticalOffset:{type:Number,optional:true},onMouseWheel:{type:Function,optional:true},onPopoverHidden:{type:Function,optional:true},onPopoverMoved:{type:Function,optional:true},zIndex:{type:Number,optional:true},class:{type:String,optional:true},slots:Object,};static defaultProps={positioning:"bottom-left",verticalOffset:0,onMouseWheel:()=>{},onPopoverMoved:()=>{},onPopoverHidden:()=>{},zIndex:ComponentsImportance.Popover,};popoverRef=useRef("popover");popoverContentRef=useRef("popoverContent");currentPosition=undefined;currentDisplayValue=undefined;spreadsheetRect=useSpreadsheetRect();containerRect;setup(){this.containerRect=usePopoverContainer();const resizeObserver=new ResizeObserver(this.computePopoverPosition.bind(this));onMounted(()=>{resizeObserver.observe(this.popoverContentRef.el);});onWillUnmount(()=>{resizeObserver.disconnect();});useEffect(this.computePopoverPosition.bind(this));}
get popoverStyle(){return cssPropertiesToCss({"z-index":`${this.props.zIndex}`,});}
computePopoverPosition(){if(!this.containerRect)
throw new Error("Popover container is not defined");const el=this.popoverRef.el;const contentEl=this.popoverContentRef.el;const anchor=rectIntersection(this.props.anchorRect,this.containerRect);const newDisplay=anchor?"block":"none";if(this.currentDisplayValue!=="none"&&newDisplay==="none"){this.props.onPopoverHidden?.();}
el.style.display=newDisplay;this.currentDisplayValue=newDisplay;if(!anchor)
return;const propsMaxSize={width:this.props.maxWidth,height:this.props.maxHeight};let elDims={width:contentEl.getBoundingClientRect().width,height:contentEl.getBoundingClientRect().height,};const spreadsheetRect=this.spreadsheetRect;const popoverPositionHelper=this.props.positioning==="bottom-left"?new BottomLeftPopoverContext(anchor,this.containerRect,propsMaxSize,spreadsheetRect,this.currentPosition):new TopRightPopoverContext(anchor,this.containerRect,propsMaxSize,spreadsheetRect,this.currentPosition);el.style["max-height"]=popoverPositionHelper.getMaxHeight(elDims.height)+"px";el.style["max-width"]=popoverPositionHelper.getMaxWidth(elDims.width)+"px";elDims={width:el.getBoundingClientRect().width,height:el.getBoundingClientRect().height,};const style=popoverPositionHelper.getCss(elDims,this.props.verticalOffset);for(const property of Object.keys(style)){el.style[property]=style[property];}
const newPosition=popoverPositionHelper.getCurrentPosition(elDims);if(this.currentPosition&&newPosition!==this.currentPosition){this.props.onPopoverMoved?.();}
this.currentPosition=newPosition;}}
class PopoverPositionContext{anchorRect;containerRect;propsMaxSize;spreadsheetOffset;lastPosition;constructor(anchorRect,containerRect,propsMaxSize,spreadsheetOffset,lastPosition){this.anchorRect=anchorRect;this.containerRect=containerRect;this.propsMaxSize=propsMaxSize;this.spreadsheetOffset=spreadsheetOffset;this.lastPosition=lastPosition;}
shouldRenderAtBottom(elementHeight){if(this.lastPosition==="top-left"||this.lastPosition==="top-right"){const shouldRenderAtTop=elementHeight<=this.availableHeightUp||this.availableHeightUp>=this.availableHeightDown;return!shouldRenderAtTop;}
const shouldRenderAtBottom=elementHeight<=this.availableHeightDown||this.availableHeightDown>=this.availableHeightUp;return shouldRenderAtBottom;}
shouldRenderAtRight(elementWidth){if(this.lastPosition==="bottom-left"||this.lastPosition==="top-left"){const shouldRenderAtLeft=elementWidth<=this.availableWidthLeft||this.availableWidthLeft>=this.availableWidthRight;return!shouldRenderAtLeft;}
const shouldRenderAtRight=elementWidth<=this.availableWidthRight||this.availableWidthRight>=this.availableWidthLeft;return shouldRenderAtRight;}
getMaxHeight(elementHeight){const shouldRenderAtBottom=this.shouldRenderAtBottom(elementHeight);const availableHeight=shouldRenderAtBottom?this.availableHeightDown:this.availableHeightUp;return this.propsMaxSize.height?Math.min(availableHeight,this.propsMaxSize.height):availableHeight;}
getMaxWidth(elementWidth){const shouldRenderAtRight=this.shouldRenderAtRight(elementWidth);const availableWidth=shouldRenderAtRight?this.availableWidthRight:this.availableWidthLeft;return this.propsMaxSize.width?Math.min(availableWidth,this.propsMaxSize.width):availableWidth;}
getCss(elDims,verticalOffset){const maxHeight=this.getMaxHeight(elDims.height);const maxWidth=this.getMaxWidth(elDims.width);const actualHeight=Math.min(maxHeight,elDims.height);const actualWidth=Math.min(maxWidth,elDims.width);const shouldRenderAtBottom=this.shouldRenderAtBottom(elDims.height);const shouldRenderAtRight=this.shouldRenderAtRight(elDims.width);verticalOffset=shouldRenderAtBottom?verticalOffset:-verticalOffset;return{top:this.getTopCoordinate(actualHeight,shouldRenderAtBottom)-
this.spreadsheetOffset.y-
verticalOffset+"px",left:this.getLeftCoordinate(actualWidth,shouldRenderAtRight)-this.spreadsheetOffset.x+"px",};}
getCurrentPosition(elDims){const shouldRenderAtBottom=this.shouldRenderAtBottom(elDims.height);const shouldRenderAtRight=this.shouldRenderAtRight(elDims.width);if(shouldRenderAtBottom&&shouldRenderAtRight)
return"bottom-right";if(shouldRenderAtBottom&&!shouldRenderAtRight)
return"bottom-left";if(!shouldRenderAtBottom&&shouldRenderAtRight)
return"top-right";return"top-left";}}
class BottomLeftPopoverContext extends PopoverPositionContext{get availableHeightUp(){return this.anchorRect.y-this.containerRect.y;}
get availableHeightDown(){return this.containerRect.height-this.availableHeightUp-this.anchorRect.height;}
get availableWidthRight(){return this.containerRect.x+this.containerRect.width-this.anchorRect.x;}
get availableWidthLeft(){return this.anchorRect.x+this.anchorRect.width-this.containerRect.x;}
getTopCoordinate(elementHeight,shouldRenderAtBottom){if(shouldRenderAtBottom){return this.anchorRect.y+this.anchorRect.height;}
else{return this.anchorRect.y-elementHeight;}}
getLeftCoordinate(elementWidth,shouldRenderAtRight){if(shouldRenderAtRight){return this.anchorRect.x;}
else{return this.anchorRect.x+this.anchorRect.width-elementWidth;}}}
class TopRightPopoverContext extends PopoverPositionContext{get availableHeightUp(){return this.anchorRect.y+this.anchorRect.height-this.containerRect.y;}
get availableHeightDown(){return this.containerRect.y+this.containerRect.height-this.anchorRect.y;}
get availableWidthRight(){return this.containerRect.width-this.anchorRect.width-this.availableWidthLeft;}
get availableWidthLeft(){return this.anchorRect.x-this.containerRect.x;}
getTopCoordinate(elementHeight,shouldRenderAtBottom){if(shouldRenderAtBottom){return this.anchorRect.y;}
else{return this.anchorRect.y+this.anchorRect.height-elementHeight;}}
getLeftCoordinate(elementWidth,shouldRenderAtRight){if(shouldRenderAtRight){return this.anchorRect.x+this.anchorRect.width;}
else{return this.anchorRect.x-elementWidth;}}}
css`
  .o-menu-wrapper {
    padding: ${MENU_VERTICAL_PADDING}px 0px;
    background-color: white;
  }
`;const TIMEOUT_DELAY=250;class MenuPopover extends Component{static template="o-spreadsheet-Menu-Popover";static props={anchorRect:Object,popoverPositioning:{type:String,optional:true},menuItems:Array,depth:{type:Number,optional:true},maxHeight:{type:Number,optional:true},onClose:Function,onMenuClicked:{type:Function,optional:true},menuId:{type:String,optional:true},onMouseOver:{type:Function,optional:true},width:{type:Number,optional:true},};static components={MenuPopover,Menu,Popover};static defaultProps={depth:1,popoverPositioning:"top-right",};subMenu=useState({isOpen:false,anchorRect:null,scrollOffset:0,menuItems:[],isHoveringChild:false,});menuRef=useRef("menu");hoveredMenu=undefined;openingTimeOut=useTimeOut();setup(){useExternalListener(window,"click",this.onExternalClick,{capture:true});useExternalListener(window,"contextmenu",this.onExternalClick,{capture:true});onWillUpdateProps((nextProps)=>{if(nextProps.menuItems!==this.props.menuItems){this.closeSubMenu();}});onWillUnmount(()=>{this.hoveredMenu?.onStopHover?.(this.env);});}
get menuProps(){return{menuItems:this.props.menuItems,onClose:this.close.bind(this),onClickMenu:this.onClickMenu.bind(this),onMouseOver:this.onMouseOver.bind(this),onMouseLeave:this.onMouseLeave.bind(this),width:this.props.width||MENU_WIDTH,isActive:this.isActive.bind(this),onScroll:this.onScroll.bind(this),};}
get subMenuAnchorRect(){const anchorRect=Object.assign({},this.subMenu.anchorRect);anchorRect.y-=this.subMenu.scrollOffset||0;return anchorRect;}
get popoverProps(){const isRoot=this.props.depth===1;return{anchorRect:{x:this.props.anchorRect.x,y:this.props.anchorRect.y,width:isRoot?this.props.anchorRect.width:this.props.width||MENU_WIDTH,height:isRoot?this.props.anchorRect.height:DESKTOP_MENU_ITEM_HEIGHT,},positioning:this.props.popoverPositioning,verticalOffset:isRoot?0:MENU_VERTICAL_PADDING,onPopoverHidden:()=>this.closeSubMenu(),onPopoverMoved:()=>this.closeSubMenu(),maxHeight:this.props.maxHeight,};}
get childrenHaveIcon(){return this.props.menuItems.some((menuItem)=>!!this.getIconName(menuItem));}
getIconName(menu){if(menu.icon(this.env)){return menu.icon(this.env);}
if(menu.isActive?.(this.env)){return"o-spreadsheet-Icon.CHECK";}
return"";}
getColor(menu){return cssPropertiesToCss({color:menu.textColor});}
getIconColor(menu){return cssPropertiesToCss({color:menu.iconColor});}
async activateMenu(menu,isMiddleClick){const result=await menu.execute?.(this.env,isMiddleClick);this.close();this.props.onMenuClicked?.({detail:result});}
close(){this.closeSubMenu();this.props.onClose();}
onExternalClick(ev){const el=this.menuRef.el;if(el&&getOpenedMenus().some((el)=>isChildEvent(el,ev))){return;}
ev.closedMenuId=this.props.menuId;this.close();}
getName(menu){return menu.name(this.env);}
isRoot(menu){return!menu.execute;}
isEnabled(menu){if(menu.isEnabled(this.env)){return this.env.model.getters.isReadonly()?menu.isReadonlyAllowed:true;}
return false;}
isActive(menuItem){return(this.subMenu?.isHoveringChild||false)&&this.isParentMenu(this.subMenu,menuItem);}
onScroll(ev){this.subMenu.scrollOffset=ev.target.scrollTop;}
openSubMenu(menu,parentMenuEl){if(!parentMenuEl){return;}
const y=parentMenuEl.getBoundingClientRect().top;this.subMenu.anchorRect={x:getRefBoundingRect(this.menuRef).x,y:y-(this.subMenu.scrollOffset||0),width:this.props.width||MENU_WIDTH,height:DESKTOP_MENU_ITEM_HEIGHT,};this.subMenu.menuItems=menu.children(this.env);this.subMenu.isOpen=true;this.subMenu.parentMenu=menu;}
isParentMenu(subMenu,menuItem){return subMenu.parentMenu?.id===menuItem.id;}
closeSubMenu(){if(this.subMenu.isHoveringChild){return;}
this.subMenu.isOpen=false;this.subMenu.parentMenu=undefined;}
onClickMenu(menu,ev){if(this.isRoot(menu)){this.openSubMenu(menu,ev.currentTarget);}
else{this.activateMenu(menu,isMiddleClickOrCtrlClick(ev));}}
onMouseOver(menu,ev){if(this.isEnabled(menu)){if(this.isParentMenu(this.subMenu,menu)){this.openingTimeOut.clear();return;}
const currentTarget=ev.currentTarget;if(this.isRoot(menu)){this.openingTimeOut.schedule(()=>{this.openSubMenu(menu,currentTarget);},TIMEOUT_DELAY);}}}
onMouseOverMainMenu(){this.props.onMouseOver?.();this.subMenu.isHoveringChild=false;}
onMouseOverChildMenu(){this.subMenu.isHoveringChild=true;this.openingTimeOut.clear();}
onMouseLeave(menu){this.openingTimeOut.schedule(this.closeSubMenu.bind(this),TIMEOUT_DELAY);}
get menuStyle(){return this.props.width?cssPropertiesToCss({width:this.props.width+"px"}):"";}}
class ChartDashboardMenu extends Component{static template="spreadsheet.ChartDashboardMenu";static components={MenuPopover};static props={figureUI:Object};originalChartDefinition;fullScreenFigureStore;menuState=useState({isOpen:false,anchorRect:null,menuItems:[]});setup(){super.setup();this.fullScreenFigureStore=useStore(FullScreenChartStore);this.originalChartDefinition=this.env.model.getters.getChartDefinition(this.props.figureUI.id);onWillUpdateProps(({figureUI})=>{if(figureUI.id!==this.props.figureUI.id){this.originalChartDefinition=this.env.model.getters.getChartDefinition(figureUI.id);}});}
getMenuItems(){return[this.fullScreenMenuItem,...this.changeChartTypeMenuItems].filter(isDefined);}
get changeChartTypeMenuItems(){const definition=this.env.model.getters.getChartDefinition(this.props.figureUI.id);if(!["line","bar","pie"].includes(definition.type)){return[];}
return["column","line","pie"].map((type)=>{const item=chartSubtypeRegistry.get(type);return{id:item.chartType,label:item.displayName,onClick:()=>this.onTypeChange(item.chartType),isSelected:item.chartType===this.selectedChartType,iconClass:this.getIconClasses(item.chartType),};});}
getIconClasses(type){if(type.includes("bar")){return"fa fa-bar-chart";}
if(type.includes("line")){return"fa fa-line-chart";}
if(type.includes("pie")){return"fa fa-pie-chart";}
return"";}
onTypeChange(type){const figureId=this.props.figureUI.id;const currentDefinition=this.env.model.getters.getChartDefinition(figureId);if(currentDefinition.type===type){return;}
let definition;if(this.originalChartDefinition.type===type){definition=this.originalChartDefinition;}
else{const newChartInfo=chartSubtypeRegistry.get(type);const ChartClass=chartRegistry.get(newChartInfo.chartType);const chartCreationContext=this.env.model.getters.getContextCreationChart(figureId);if(!chartCreationContext)
return;definition={...ChartClass.getChartDefinitionFromContextCreation(chartCreationContext),...newChartInfo.subtypeDefinition,};}
this.env.model.dispatch("UPDATE_CHART",{definition,figureId,sheetId:this.env.model.getters.getActiveSheetId(),});}
get selectedChartType(){return this.env.model.getters.getChartDefinition(this.props.figureUI.id).type;}
get backgroundColor(){const color=this.env.model.getters.getChartDefinition(this.props.figureUI.id).background;return"background-color: "+(color||BACKGROUND_CHART_COLOR);}
openContextMenu(ev){this.menuState.isOpen=true;this.menuState.anchorRect={x:ev.clientX,y:ev.clientY,width:0,height:0};this.menuState.menuItems=getChartMenuActions(this.props.figureUI.id,()=>{},this.env);}
get fullScreenMenuItem(){const definition=this.env.model.getters.getChartDefinition(this.props.figureUI.id);if(definition.type==="scorecard"){return undefined;}
if(this.props.figureUI.id===this.fullScreenFigureStore.fullScreenFigure?.id){return{id:"fullScreenChart",label:_t("Exit Full Screen"),iconClass:"fa fa-compress",onClick:()=>{this.fullScreenFigureStore.toggleFullScreenChart(this.props.figureUI.id);},};}
return{id:"fullScreenChart",label:_t("Full Screen"),iconClass:"fa fa-expand",onClick:()=>{this.fullScreenFigureStore.toggleFullScreenChart(this.props.figureUI.id);},};}}
css`
  .o-chart-container {
    width: 100%;
    height: 100%;
    position: relative;
  }
`;class ChartFigure extends Component{static template="o-spreadsheet-ChartFigure";static props={figureUI:Object,onFigureDeleted:Function,};static components={ChartDashboardMenu};onDoubleClick(){this.env.model.dispatch("SELECT_FIGURE",{figureId:this.props.figureUI.id});this.env.openSidePanel("ChartPanel");}
get chartType(){return this.env.model.getters.getChartType(this.props.figureUI.id);}
get chartComponent(){const type=this.chartType;const component=chartComponentRegistry.get(type);if(!component){throw new Error(`Component is not defined for type ${type}`);}
return component;}}
class ImageFigure extends Component{static template="o-spreadsheet-ImageFigure";static props={figureUI:Object,onFigureDeleted:Function,};static components={};get figureId(){return this.props.figureUI.id;}
get getImagePath(){return this.env.model.getters.getImagePath(this.figureId);}}
const figureRegistry=new Registry();figureRegistry.add("chart",{Component:ChartFigure,SidePanelComponent:"ChartPanel",menuBuilder:getChartMenuActions,});figureRegistry.add("image",{Component:ImageFigure,keepRatio:true,minFigSize:20,borderWidth:0,menuBuilder:getImageMenuActions,});const ANCHOR_SIZE=8;const BORDER_WIDTH=1;const ACTIVE_BORDER_WIDTH=2;css`
  div.o-figure {
    position: absolute;
    width: 100%;
    height: 100%;
    user-select: none;

    &:focus {
      outline: none;
    }
  }

  div.o-figure-border {
    z-index: 1;
  }

  .o-figure-wrapper {
    position: absolute;
    box-sizing: content-box;

    .o-fig-anchor {
      z-index: ${ComponentsImportance.FigureAnchor};
      position: absolute;
      width: ${ANCHOR_SIZE}px;
      height: ${ANCHOR_SIZE}px;
      background-color: #1a73e8;
      outline: ${BORDER_WIDTH}px solid white;

      &.o-top {
        cursor: n-resize;
      }
      &.o-topRight {
        cursor: ne-resize;
      }
      &.o-right {
        cursor: e-resize;
      }
      &.o-bottomRight {
        cursor: se-resize;
      }
      &.o-bottom {
        cursor: s-resize;
      }
      &.o-bottomLeft {
        cursor: sw-resize;
      }
      &.o-left {
        cursor: w-resize;
      }
      &.o-topLeft {
        cursor: nw-resize;
      }
    }

    .o-figure-menu {
      right: 0px;
      top: 0px;
      display: none;
    }

    .o-figure-menu-item {
      cursor: pointer;
    }

    .o-figure.active:focus,
    .o-figure:hover {
      .o-figure-menu {
        display: flex;
      }
    }
  }
`;class FigureComponent extends Component{static template="o-spreadsheet-FigureComponent";static props={figureUI:Object,style:{type:String,optional:true},onFigureDeleted:{type:Function,optional:true},onMouseDown:{type:Function,optional:true},onClickAnchor:{type:Function,optional:true},};static components={MenuPopover};static defaultProps={onFigureDeleted:()=>{},onMouseDown:()=>{},onClickAnchor:()=>{},};menuState=useState({isOpen:false,anchorRect:null,menuItems:[]});figureRef=useRef("figure");menuButtonRef=useRef("menuButton");borderWidth;get isSelected(){return this.env.model.getters.getSelectedFigureId()===this.props.figureUI.id;}
get figureRegistry(){return figureRegistry;}
getBorderWidth(){if(this.env.isDashboard())
return 0;return this.isSelected?ACTIVE_BORDER_WIDTH:this.borderWidth;}
get borderStyle(){const borderWidth=this.getBorderWidth();const borderColor=this.isSelected?SELECTION_BORDER_COLOR:FIGURE_BORDER_COLOR;return`border: ${borderWidth}px solid ${borderColor};`;}
get wrapperStyle(){const{x,y,width,height}=this.props.figureUI;return cssPropertiesToCss({left:`${x}px`,top:`${y}px`,width:`${width}px`,height:`${height}px`,"z-index":String(ComponentsImportance.Figure+(this.isSelected?1:0)),});}
getResizerPosition(resizer){const anchorCenteringOffset=(ANCHOR_SIZE-ACTIVE_BORDER_WIDTH)/2;const style={};if(resizer.includes("top")){style.top=`${-anchorCenteringOffset}px`;}
else if(resizer.includes("bottom")){style.bottom=`${-anchorCenteringOffset}px`;}
else{style.bottom=`calc(50% - ${anchorCenteringOffset}px)`;}
if(resizer.includes("left")){style.left=`${-anchorCenteringOffset}px`;}
else if(resizer.includes("right")){style.right=`${-anchorCenteringOffset}px`;}
else{style.right=`calc(50% - ${anchorCenteringOffset}px)`;}
return cssPropertiesToCss(style);}
setup(){const borderWidth=figureRegistry.get(this.props.figureUI.tag).borderWidth;this.borderWidth=borderWidth!==undefined?borderWidth:BORDER_WIDTH;useEffect((selectedFigureId,thisFigureId,el)=>{if(selectedFigureId===thisFigureId){el?.focus({preventScroll:true});}},()=>[this.env.model.getters.getSelectedFigureId(),this.props.figureUI.id,this.figureRef.el,]);onWillUnmount(()=>{this.props.onFigureDeleted();});}
clickAnchor(dirX,dirY,ev){this.props.onClickAnchor(dirX,dirY,ev);}
onMouseDown(ev){if(!this.env.isMobile()){this.props.onMouseDown(ev);}}
onClick(ev){if(this.env.isMobile()){this.props.onMouseDown(ev);}}
onKeyDown(ev){const keyDownShortcut=keyboardEventToShortcutString(ev);switch(keyDownShortcut){case"Delete":case"Backspace":this.env.model.dispatch("DELETE_FIGURE",{sheetId:this.env.model.getters.getActiveSheetId(),figureId:this.props.figureUI.id,});this.props.onFigureDeleted();ev.preventDefault();ev.stopPropagation();break;case"ArrowDown":case"ArrowLeft":case"ArrowRight":case"ArrowUp":const{col,row,offset}=this.postionInBoundary(this.props.figureUI,ev.key);this.env.model.dispatch("UPDATE_FIGURE",{sheetId:this.env.model.getters.getActiveSheetId(),figureId:this.props.figureUI.id,offset,col,row,});ev.preventDefault();ev.stopPropagation();break;case"Ctrl+A":ev.preventDefault();ev.stopPropagation();break;case"Ctrl+Y":case"Ctrl+Z":if(keyDownShortcut==="Ctrl+Y"){this.env.model.dispatch("REQUEST_REDO");}
else if(keyDownShortcut==="Ctrl+Z"){this.env.model.dispatch("REQUEST_UNDO");}
ev.preventDefault();ev.stopPropagation();break;}}
postionInBoundary(position,key){const sheetId=this.env.model.getters.getActiveSheetId();let{col,row,offset}=position;offset={...offset};switch(key){case"ArrowUp":if(offset.y===0){row--;offset.y=this.env.model.getters.getRowSize(sheetId,row)-1;}
else{offset.y--;}
break;case"ArrowLeft":if(offset.x===0){col--;offset.x=this.env.model.getters.getColSize(sheetId,col)-1;}
else{offset.x--;}
break;case"ArrowDown":if(offset.y===this.env.model.getters.getRowSize(sheetId,row)){row++;offset.y=0;}
else{offset.y++;}
break;case"ArrowRight":if(offset.x===this.env.model.getters.getColSize(sheetId,row)){col++;offset.x=0;}
else{offset.x++;}}
return{col,row,offset};}
onContextMenu(ev){if(this.env.isDashboard())
return;this.openContextMenu({x:ev.clientX,y:ev.clientY,width:0,height:0});}
showMenu(){this.openContextMenu(getRefBoundingRect(this.menuButtonRef));}
openContextMenu(anchorRect){this.menuState.isOpen=true;this.menuState.anchorRect=anchorRect;this.menuState.menuItems=figureRegistry.get(this.props.figureUI.tag).menuBuilder(this.props.figureUI.id,this.props.onFigureDeleted,this.env);}}
class DelayedHoveredCellStore extends SpreadsheetStore{mutators=["clear","hover"];col;row;handle(cmd){switch(cmd.type){case"ACTIVATE_SHEET":this.clear();}}
hover(position){if(position.col===this.col&&position.row===this.row){return"noStateChange";}
this.col=position.col;this.row=position.row;return;}
clear(){if(this.col===undefined&&this.row===undefined){return"noStateChange";}
this.col=undefined;this.row=undefined;return;}}
const cellPopoverRegistry=new Registry();class CellPopoverStore extends SpreadsheetStore{mutators=["open","close"];persistentPopover;hoveredCell=this.get(DelayedHoveredCellStore);handle(cmd){switch(cmd.type){case"ACTIVATE_SHEET":this.close();}}
open({col,row},type){const sheetId=this.getters.getActiveSheetId();if(!cellPopoverRegistry.contains(type)){return;}
this.persistentPopover={col,row,sheetId,type};}
close(){if(!this.persistentPopover){return"noStateChange";}
this.persistentPopover=undefined;return;}
get persistentCellPopover(){return((this.persistentPopover&&{isOpen:true,...this.persistentPopover})||{isOpen:false});}
get isOpen(){return this.persistentPopover!==undefined;}
get cellPopover(){const sheetId=this.getters.getActiveSheetId();if(this.persistentPopover&&this.getters.isVisibleInViewport(this.persistentPopover)){const position=this.getters.getMainCellPosition(this.persistentPopover);const popover=cellPopoverRegistry.get(this.persistentPopover.type).onOpen?.(position,this.getters);return!popover?.isOpen?{isOpen:false}:{...popover,anchorRect:this.computePopoverAnchorRect(this.persistentPopover),};}
const{col,row}=this.hoveredCell;if(col===undefined||row===undefined||!this.getters.isVisibleInViewport({sheetId,col,row})){return{isOpen:false};}
const position=this.getters.getMainCellPosition({sheetId,col,row});const popover=cellPopoverRegistry.getAll().map((matcher)=>matcher.onHover?.(position,this.getters)).find((popover)=>popover?.isOpen);return!popover?.isOpen?{isOpen:false}:{...popover,anchorRect:this.computePopoverAnchorRect(position),};}
computePopoverAnchorRect({col,row}){const sheetId=this.getters.getActiveSheetId();const merge=this.getters.getMerge({sheetId,col,row});if(merge){return this.getters.getVisibleRect(merge);}
return this.getters.getVisibleRect(positionToZone({col,row}));}}
const ERROR_TOOLTIP_MAX_HEIGHT=80;const ERROR_TOOLTIP_WIDTH=180;css`
  .o-error-tooltip {
    font-size: 13px;
    background-color: white;
    border-left: 3px solid red;
    padding: 10px;
    width: ${ERROR_TOOLTIP_WIDTH}px;
    overflow-wrap: break-word;

    .o-error-tooltip-message {
      overflow: hidden;
    }
  }
`;class ErrorToolTip extends Component{static maxSize={maxHeight:ERROR_TOOLTIP_MAX_HEIGHT};static template="o-spreadsheet-ErrorToolTip";static props={cellPosition:Object,onClosed:{type:Function,optional:true},};get dataValidationErrorMessage(){return this.env.model.getters.getInvalidDataValidationMessage(this.props.cellPosition);}
get evaluationError(){const cell=this.env.model.getters.getEvaluatedCell(this.props.cellPosition);if(cell.message){return cell;}
return undefined;}
get errorOriginPositionString(){if(this.env.model.getters.isDashboard()){return"";}
const evaluationError=this.evaluationError;const position=evaluationError?.errorOriginPosition;if(!position||deepEquals(position,this.props.cellPosition)){return"";}
const sheetId=position.sheetId;return this.env.model.getters.getRangeString(this.env.model.getters.getRangeFromZone(sheetId,positionToZone(position)),this.env.model.getters.getActiveSheetId());}
selectCell(){const position=this.evaluationError?.errorOriginPosition;if(!position){return;}
const activeSheetId=this.env.model.getters.getActiveSheetId();if(position.sheetId!==activeSheetId){this.env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:activeSheetId,sheetIdTo:position.sheetId,});}
this.env.model.selection.selectCell(position.col,position.row);}}
const ErrorToolTipPopoverBuilder={onHover:(position,getters)=>{const cell=getters.getEvaluatedCell(position);if((cell.type===CellValueType.error&&!!cell.message)||getters.getInvalidDataValidationMessage(position)){return{isOpen:true,props:{cellPosition:position,},Component:ErrorToolTip,cellCorner:"top-right",};}
return{isOpen:false};},};class Collapse extends Component{static template="o-spreadsheet-Collapse";static props={isCollapsed:Boolean,slots:Object,};contentRef=useRef("content");setup(){onMounted(()=>{if(this.props.isCollapsed){this.contentRef.el?.classList.add("d-none");}});onWillUpdateProps((nextProps)=>{if(nextProps.isCollapsed!==this.props.isCollapsed){this.startTransition(nextProps.isCollapsed);}});}
startTransition(isCollapsed){const el=this.contentRef.el;if(!el){return;}
el.classList.remove("d-none");el.classList.add("overflow-hidden");const startHeight=isCollapsed?el.scrollHeight:0;const endHeight=isCollapsed?0:el.scrollHeight;const animation=el.animate([{maxHeight:startHeight+"px"},{maxHeight:endHeight+"px"}],{duration:350,easing:"ease"});animation.onfinish=()=>{el.classList.remove("overflow-hidden");if(this.props.isCollapsed){el.classList.add("d-none");}};}}
css`
  .o_side_panel_collapsible_title {
    font-size: 16px;
    cursor: pointer;
    padding: 6px 0px 6px 6px !important;

    .collapsor-arrow {
      transform: rotate(-90deg);
      display: inline-block;
      transform-origin: 8px 11px;
      transition: transform 0.2s ease-in-out;

      .o-icon {
        width: 16px;
        height: 22px;
      }
    }
    .collapsor:not(.collapsed) .collapsor-arrow {
      transform: rotate(0);
    }

    .collapsor {
      width: 100%;
      transition-delay: 0.35s;
      transition-property: all;
    }
  }
`;class SidePanelCollapsible extends Component{static template="o-spreadsheet-SidePanelCollapsible";static props={slots:Object,title:{type:String,optional:true},isInitiallyCollapsed:{type:Boolean,optional:true},class:{type:String,optional:true},};static components={Collapse};state=useState({isCollapsed:this.props.isInitiallyCollapsed,});toggle(){this.state.isCollapsed=!this.state.isCollapsed;}}
class CriterionForm extends Component{static props={criterion:Object,onCriterionChanged:Function,disableFormulas:{type:Boolean,optional:true},};setup(){const composerFocusStore=useStore(ComposerFocusStore);onMounted(()=>{composerFocusStore.activeComposer.stopEdition();});}
updateCriterion(criterion){const filteredCriterion={...this.props.criterion,...criterion,};this.props.onCriterionChanged(filteredCriterion);}}
const criterionEvaluatorRegistry=new Registry();criterionEvaluatorRegistry.add("containsText",{type:"containsText",isValueValid:(value,criterion)=>{const strValue=String(value);return strValue.toLowerCase().includes(String(criterion.values[0]).toLowerCase());},getErrorString:(criterion)=>{return _t('The value must be a text that contains "%s"',String(criterion.values[0]));},isCriterionValueValid:(value)=>!!value,criterionValueErrorString:DVTerms.CriterionError.notEmptyValue,numberOfValues:()=>1,name:_t("Text contains"),getPreview:(criterion)=>_t('Text contains "%s"',criterion.values[0]),});criterionEvaluatorRegistry.add("notContainsText",{type:"notContainsText",isValueValid:(value,criterion)=>{const strValue=String(value);return!strValue.toLowerCase().includes(String(criterion.values[0]).toLowerCase());},getErrorString:(criterion)=>{return _t('The value must be a text that does not contain "%s"',String(criterion.values[0]));},isCriterionValueValid:(value)=>!!value,criterionValueErrorString:DVTerms.CriterionError.notEmptyValue,numberOfValues:()=>1,name:_t("Text does not contain"),getPreview:(criterion)=>_t('Text does not contain "%s"',criterion.values[0]),});criterionEvaluatorRegistry.add("isEqualText",{type:"isEqualText",isValueValid:(value,criterion)=>{const strValue=String(value);return strValue.toLowerCase()===String(criterion.values[0]).toLowerCase();},getErrorString:(criterion)=>{return _t('The value must be exactly "%s"',String(criterion.values[0]));},isCriterionValueValid:(value)=>!!value,criterionValueErrorString:DVTerms.CriterionError.notEmptyValue,numberOfValues:()=>1,name:_t("Text is exactly"),getPreview:(criterion)=>_t('Text is exactly "%s"',criterion.values[0]),});const emailRegex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}$/;criterionEvaluatorRegistry.add("isEmail",{type:"isEmail",isValueValid:(value,criterion)=>typeof value==="string"&&emailRegex.test(value),getErrorString:()=>_t("The value must be a valid email address"),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>0,name:_t("Text is valid email"),getPreview:()=>_t("Text is valid email"),});criterionEvaluatorRegistry.add("isLink",{type:"isLink",isValueValid:(value,criterion)=>detectLink(value)!==undefined,getErrorString:()=>_t("The value must be a valid link"),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>0,name:_t("Text is valid link"),getPreview:()=>_t("Text is valid link"),});criterionEvaluatorRegistry.add("dateIs",{type:"dateIs",isValueValid:(value,criterion)=>{const criterionValue=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE)[0];const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);if(dateValue===undefined||criterionValue===undefined){return false;}
if(["lastWeek","lastMonth","lastYear"].includes(criterion.dateValue)){const today=jsDateToRoundNumber(DateTime.now());return isDateBetween(dateValue,today,criterionValue);}
return areDatesSameDay(dateValue,criterionValue);},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();return criterion.dateValue==="exactDate"?_t("The value must be the date %s",getDateCriterionLocalizedValues(criterion,locale)[0]):_t("The value must be %s",DVTerms.DateIs[criterion.dateValue]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:(criterion)=>(criterion.dateValue==="exactDate"?1:0),name:_t("Date is"),getPreview:(criterion,getters)=>{return criterion.dateValue==="exactDate"?_t("Date is %s",getDateCriterionFormattedValues(criterion.values,getters.getLocale())[0]):_t("Date is %s",DVTerms.DateIs[criterion.dateValue]);},});criterionEvaluatorRegistry.add("dateIsBefore",{type:"dateIsBefore",isValueValid:(value,criterion)=>{const criterionValue=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE)[0];const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);return(dateValue!==undefined&&criterionValue!==undefined&&isDateStrictlyBefore(dateValue,criterionValue));},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();return criterion.dateValue==="exactDate"?_t("The value must be a date before %s",getDateCriterionLocalizedValues(criterion,locale)[0]):_t("The value must be a date before %s",DVTerms.DateIsBefore[criterion.dateValue]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:(criterion)=>(criterion.dateValue==="exactDate"?1:0),name:_t("Date is before"),getPreview:(criterion,getters)=>{return criterion.dateValue==="exactDate"?_t("Date is before %s",getDateCriterionFormattedValues(criterion.values,getters.getLocale())[0]):_t("Date is before %s",DVTerms.DateIsBefore[criterion.dateValue]);},});criterionEvaluatorRegistry.add("dateIsOnOrBefore",{type:"dateIsOnOrBefore",isValueValid:(value,criterion)=>{const criterionValue=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE)[0];const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);return(dateValue!==undefined&&criterionValue!==undefined&&isDateBefore(dateValue,criterionValue));},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();return criterion.dateValue==="exactDate"?_t("The value must be a date on or before %s",getDateCriterionLocalizedValues(criterion,locale)[0]):_t("The value must be a date on or before %s",DVTerms.DateIsBefore[criterion.dateValue]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:(criterion)=>(criterion.dateValue==="exactDate"?1:0),name:_t("Date is on or before"),getPreview:(criterion,getters)=>{return criterion.dateValue==="exactDate"?_t("Date is on or before %s",getDateCriterionFormattedValues(criterion.values,getters.getLocale())[0]):_t("Date is on or before %s",DVTerms.DateIsBefore[criterion.dateValue]);},});criterionEvaluatorRegistry.add("dateIsAfter",{type:"dateIsAfter",isValueValid:(value,criterion)=>{const criterionValue=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE)[0];const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);return(dateValue!==undefined&&criterionValue!==undefined&&isDateStrictlyAfter(dateValue,criterionValue));},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();return criterion.dateValue==="exactDate"?_t("The value must be a date after %s",getDateCriterionLocalizedValues(criterion,locale)[0]):_t("The value must be a date after %s",DVTerms.DateIsBefore[criterion.dateValue]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:(criterion)=>(criterion.dateValue==="exactDate"?1:0),name:_t("Date is after"),getPreview:(criterion,getters)=>{return criterion.dateValue==="exactDate"?_t("Date is after %s",getDateCriterionFormattedValues(criterion.values,getters.getLocale())[0]):_t("Date is after %s",DVTerms.DateIsBefore[criterion.dateValue]);},});criterionEvaluatorRegistry.add("dateIsOnOrAfter",{type:"dateIsOnOrAfter",isValueValid:(value,criterion)=>{const criterionValue=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE)[0];const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);return(dateValue!==undefined&&criterionValue!==undefined&&isDateAfter(dateValue,criterionValue));},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();return criterion.dateValue==="exactDate"?_t("The value must be a date on or after %s",getDateCriterionLocalizedValues(criterion,locale)[0]):_t("The value must be a date on or after %s",DVTerms.DateIsBefore[criterion.dateValue]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:(criterion)=>(criterion.dateValue==="exactDate"?1:0),name:_t("Date is on or after"),getPreview:(criterion,getters)=>{return criterion.dateValue==="exactDate"?_t("Date is on or after %s",getDateCriterionFormattedValues(criterion.values,getters.getLocale())[0]):_t("Date is on or after %s",DVTerms.DateIsBefore[criterion.dateValue]);},});criterionEvaluatorRegistry.add("dateIsBetween",{type:"dateIsBetween",isValueValid:(value,criterion)=>{const criterionValues=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE);const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);if(dateValue===undefined||criterionValues[0]===undefined||criterionValues[1]===undefined){return false;}
return isDateBetween(dateValue,criterionValues[0],criterionValues[1]);},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const criterionValues=getDateCriterionLocalizedValues(criterion,locale);return _t("The value must be a date between %s and %s",criterionValues[0],criterionValues[1]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:()=>2,name:_t("Date is between"),getPreview:(criterion,getters)=>{const values=getDateCriterionFormattedValues(criterion.values,getters.getLocale());return _t("Date is between %s and %s",values[0],values[1]);},});criterionEvaluatorRegistry.add("dateIsNotBetween",{type:"dateIsNotBetween",isValueValid:(value,criterion)=>{const criterionValues=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE);const dateValue=valueToDateNumber(value,DEFAULT_LOCALE);if(dateValue===undefined||criterionValues[0]===undefined||criterionValues[1]===undefined){return false;}
return!isDateBetween(dateValue,criterionValues[0],criterionValues[1]);},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const criterionValues=getDateCriterionLocalizedValues(criterion,locale);return _t("The value must be a date not between %s and %s",criterionValues[0],criterionValues[1]);},isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:DVTerms.CriterionError.dateValue,numberOfValues:()=>2,name:_t("Date is not between"),getPreview:(criterion,getters)=>{const values=getDateCriterionFormattedValues(criterion.values,getters.getLocale());return _t("Date is not between %s and %s",values[0],values[1]);},});criterionEvaluatorRegistry.add("dateIsValid",{type:"dateIsValid",isValueValid:(value,criterion)=>{return valueToDateNumber(value,DEFAULT_LOCALE)!==undefined;},getErrorString:()=>_t("The value must be a valid date"),isCriterionValueValid:(value)=>checkValueIsDate(value),criterionValueErrorString:"",numberOfValues:()=>0,name:_t("Is valid date"),getPreview:()=>_t("Date is valid"),});criterionEvaluatorRegistry.add("isEqual",{type:"isEqual",isValueValid:(value,criterion)=>{return value===criterion.values[0];},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be equal to %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is equal to"),getPreview:(criterion)=>_t("Value is equal to %s",criterion.values[0]),});criterionEvaluatorRegistry.add("isNotEqual",{type:"isNotEqual",isValueValid:(value,criterion)=>{return value!==criterion.values[0];},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must not be equal to %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is not equal to"),getPreview:(criterion)=>_t("Value is not equal to %s",criterion.values[0]),});criterionEvaluatorRegistry.add("isGreaterThan",{type:"isGreaterThan",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValue=criterion.values[0];if(typeof criterionValue!=="number"){return false;}
return value>criterionValue;},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be greater than %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is greater than"),getPreview:(criterion)=>_t("Value is greater than %s",criterion.values[0]),});criterionEvaluatorRegistry.add("isGreaterOrEqualTo",{type:"isGreaterOrEqualTo",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValue=criterion.values[0];if(typeof criterionValue!=="number"){return false;}
return value>=criterionValue;},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be greater or equal to %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is greater or equal to"),getPreview:(criterion)=>_t("Value is greater or equal to %s",criterion.values[0]),});criterionEvaluatorRegistry.add("isLessThan",{type:"isLessThan",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValue=criterion.values[0];if(typeof criterionValue!=="number"){return false;}
return value<criterionValue;},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be less than %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is less than"),getPreview:(criterion)=>_t("Value is less than %s",criterion.values[0]),});criterionEvaluatorRegistry.add("isLessOrEqualTo",{type:"isLessOrEqualTo",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
const criterionValue=criterion.values[0];if(typeof criterionValue!=="number"){return false;}
return value<=criterionValue;},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be less or equal to %s",values[0]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>1,name:_t("Is less or equal to"),getPreview:(criterion)=>_t("Value is less or equal to %s",criterion.values[0]),});criterionEvaluatorRegistry.add("isBetween",{type:"isBetween",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
if(typeof criterion.values[0]!=="number"||typeof criterion.values[1]!=="number"){return false;}
return isNumberBetween(value,criterion.values[0],criterion.values[1]);},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must be between %s and %s",values[0],values[1]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>2,name:_t("Is between"),getPreview:(criterion)=>_t("Value is between %s and %s",criterion.values[0],criterion.values[1]),});criterionEvaluatorRegistry.add("isNotBetween",{type:"isNotBetween",isValueValid:(value,criterion)=>{if(typeof value!=="number"){return false;}
if(typeof criterion.values[0]!=="number"||typeof criterion.values[1]!=="number"){return false;}
return!isNumberBetween(value,criterion.values[0],criterion.values[1]);},getErrorString:(criterion,getters)=>{const locale=getters.getLocale();const values=getNumberCriterionlocalizedValues(criterion,locale);return _t("The value must not be between %s and %s",values[0],values[1]);},isCriterionValueValid:(value)=>checkValueIsNumber(value),criterionValueErrorString:DVTerms.CriterionError.numberValue,numberOfValues:()=>2,name:_t("Is not between"),getPreview:(criterion)=>_t("Value is not between %s and %s",criterion.values[0],criterion.values[1]),});criterionEvaluatorRegistry.add("isBoolean",{type:"isBoolean",isValueValid:(value,criterion)=>value===""||typeof value==="boolean",getErrorString:()=>_t("The value must be a boolean"),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>0,name:_t("Checkbox"),getPreview:()=>_t("Checkbox"),});criterionEvaluatorRegistry.add("isValueInList",{type:"isValueInList",isValueValid:(value,criterion)=>{if(value===null){return false;}
return criterion.values.map((str)=>String(str).toLowerCase()).includes(value.toString().toLowerCase());},getErrorString:(criterion)=>_t("The value must be one of: %s",criterion.values.join(", ")),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>undefined,allowedValues:"onlyLiterals",name:_t("Value in list"),getPreview:(criterion)=>_t("Value one of: %s",criterion.values.join(", ")),});criterionEvaluatorRegistry.add("isValueInRange",{type:"isValueInList",isValueValid:(value,criterion,getters,sheetId)=>{if(!value){return false;}
const criterionValues=getters.getDataValidationRangeValues(sheetId,criterion);return criterionValues.map((value)=>value.toLowerCase()).includes(value.toString().toLowerCase());},getErrorString:(criterion)=>_t("The value must be a value in the range %s",String(criterion.values[0])),isCriterionValueValid:(value)=>rangeReference.test(value),criterionValueErrorString:DVTerms.CriterionError.validRange,numberOfValues:()=>1,allowedValues:"onlyLiterals",name:_t("Value in range"),getPreview:(criterion)=>_t("Value in range %s",criterion.values[0]),});criterionEvaluatorRegistry.add("customFormula",{type:"customFormula",isValueValid:(value,criterion)=>{const parsedValue=criterion.values[0];if(typeof parsedValue==="number"||typeof parsedValue==="boolean"){return!!parsedValue;}
return false;},getErrorString:()=>_t("The value does not match the custom formula data validation rule"),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>1,allowedValues:"onlyFormulas",name:_t("Custom formula"),getPreview:(criterion)=>_t("Custom formula %s",criterion.values[0]),});criterionEvaluatorRegistry.add("beginsWithText",{type:"beginsWithText",isValueValid:(value,criterion)=>{const strValue=String(value);return strValue.toLowerCase().startsWith(String(criterion.values[0]).toLowerCase());},getErrorString:(criterion)=>{return _t('The value must be a text that begins with "%s"',String(criterion.values[0]));},isCriterionValueValid:(value)=>!!value,criterionValueErrorString:DVTerms.CriterionError.notEmptyValue,numberOfValues:()=>1,name:_t("Text begins with"),getPreview:(criterion)=>_t('Text begins with "%s"',criterion.values[0]),});criterionEvaluatorRegistry.add("endsWithText",{type:"endsWithText",isValueValid:(value,criterion)=>{const strValue=String(value);return strValue.toLowerCase().endsWith(String(criterion.values[0]).toLowerCase());},getErrorString:(criterion)=>{return _t('The value must be a text that ends with "%s"',String(criterion.values[0]));},isCriterionValueValid:(value)=>!!value,criterionValueErrorString:DVTerms.CriterionError.notEmptyValue,numberOfValues:()=>1,name:_t("Text ends with"),getPreview:(criterion)=>_t('Text ends with "%s"',criterion.values[0]),});criterionEvaluatorRegistry.add("isEmpty",{type:"isEmpty",isValueValid:(value,criterion)=>(value??"").toString().trim()==="",getErrorString:()=>_t("The value must be empty"),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>0,name:_t("Is empty"),getPreview:()=>_t("Is empty"),});criterionEvaluatorRegistry.add("isNotEmpty",{type:"isNotEmpty",isValueValid:(value,criterion)=>(value??"").toString().trim()!=="",getErrorString:()=>_t("The value must not be empty"),isCriterionValueValid:()=>true,criterionValueErrorString:"",numberOfValues:()=>0,name:_t("Is not empty"),getPreview:()=>_t("Is not empty"),});function getNumberCriterionlocalizedValues(criterion,locale){return criterion.values.map((value)=>{return value!==undefined?localizeContent(String(value),locale):CellErrorType.InvalidReference;});}
function getDateCriterionLocalizedValues(criterion,locale){const values=getDateNumberCriterionValues(criterion,DEFAULT_LOCALE);return values.map((value)=>value!==undefined?formatValue(value,{locale,format:locale.dateFormat}):CellErrorType.InvalidReference);}
function checkValueIsDate(value){const valueAsNumber=valueToDateNumber(value,DEFAULT_LOCALE);return valueAsNumber!==undefined;}
function checkValueIsNumber(value){const valueAsNumber=tryToNumber(value,DEFAULT_LOCALE);return valueAsNumber!==undefined;}
class DOMFocusableElementStore{mutators=["setFocusableElement","focus"];focusableElement=undefined;setFocusableElement(element){this.focusableElement=element;return"noStateChange";}
focus(){if(this.focusableElement===document.activeElement){return"noStateChange";}
this.focusableElement?.focus();return;}}
const arrowMap={ArrowDown:"down",ArrowLeft:"left",ArrowRight:"right",ArrowUp:"up",};function updateSelectionWithArrowKeys(ev,selection){const direction=arrowMap[ev.key];if(ev.shiftKey){selection.resizeAnchorZone(direction,isCtrlKey(ev)?"end":1);}
else{selection.moveAnchorCell(direction,isCtrlKey(ev)?"end":1);}}
css`
  .o-autocomplete-dropdown {
    pointer-events: auto;
    cursor: pointer;
    background-color: #fff;
    max-width: 400px;
    z-index: 1;

    .o-autocomplete-value-focus {
      background-color: #f2f2f2;
    }

    & > div {
      padding: 1px 5px 5px 5px;
      .o-autocomplete-description {
        padding-left: 5px;
        font-size: 11px;
      }
    }
  }
`;class TextValueProvider extends Component{static template="o-spreadsheet-TextValueProvider";static props={proposals:Array,selectedIndex:{type:Number,optional:true},onValueSelected:Function,onValueHovered:Function,};autoCompleteListRef=useRef("autoCompleteList");setup(){useEffect(()=>{const selectedIndex=this.props.selectedIndex;if(selectedIndex===undefined){return;}
const selectedElement=this.autoCompleteListRef.el?.children[selectedIndex];selectedElement?.scrollIntoView?.({block:"nearest"});},()=>[this.props.selectedIndex,this.autoCompleteListRef.el]);}
getCss(html){return cssPropertiesToCss({color:html.color||"#000000",background:html.backgroundColor,});}}
class ContentEditableHelper{el;constructor(el){this.el=el;}
updateEl(el){this.el=el;}
selectRange(start,end){const selection=window.getSelection();const{start:currentStart,end:currentEnd}=this.getCurrentSelection();if(currentStart===start&&currentEnd===end){return;}
if(selection.rangeCount===0){const range=document.createRange();selection.addRange(range);}
const currentRange=selection.getRangeAt(0);let range;if(this.el.contains(currentRange.startContainer)){range=currentRange;}
else{range=document.createRange();selection.removeAllRanges();selection.addRange(range);}
if(start===end&&start===0){range.setStart(this.el,0);range.setEnd(this.el,0);}
else{const textLength=this.getText().length;if(start<0||end>textLength){console.warn(`wrong selection asked start ${start}, end ${end}, text content length ${textLength}`);if(start<0)
start=0;if(end>textLength)
end=textLength;if(start>textLength)
start=textLength;}
const startNode=this.findChildAtCharacterIndex(start);const endNode=this.findChildAtCharacterIndex(end);if(start<=end){range.setStart(startNode.node,startNode.offset);range.setEnd(endNode.node,endNode.offset);}
else{range.setStart(endNode.node,endNode.offset);range.setEnd(startNode.node,startNode.offset);}}}
findChildAtCharacterIndex(offset){const it=iterateChildren(this.el);let current,previous;let usedCharacters=offset;let isFirstParagraph=true;do{current=it.next();if(!current.done&&!current.value.hasChildNodes()){if(current.value.textContent&&current.value.textContent.length<usedCharacters){usedCharacters-=current.value.textContent.length;}
else if(current.value.textContent&&current.value.textContent.length>=usedCharacters){it.return(current.value);}
previous=current.value;}
if(!current.done&&current.value.nodeName==="P"){if(isFirstParagraph){isFirstParagraph=false;}
else{usedCharacters--;}}}while(!current.done&&usedCharacters);if(current.value){return{node:current.value,offset:usedCharacters};}
return{node:previous,offset:usedCharacters};}
setText(contents){if(contents.length===0){this.removeAll();return;}
const childElements=Array.from(this.el.childNodes);const contentLength=contents.length;for(let i=0;i<contentLength;i++){const line=contents[i];const childElement=childElements[i];let newChild=false;let p;if(childElement&&childElement.nodeName==="P"){p=childElement;}
else{newChild=true;p=document.createElement("p");}
const lineLength=line.length;const existingChildren=Array.from(p.childNodes);for(let j=0;j<lineLength;j++){const content=line[j];const child=existingChildren[j];const childIsSpan=child&&"tagName"in child&&child.tagName==="SPAN";if(childIsSpan&&compareContentToSpanElement(content,child)){continue;}
if(!content.value&&!content.classes?.length){if(child)
p.removeChild(child);continue;}
const span=document.createElement("span");span.innerText=content.value;span.style.color=content.color||"";span.addEventListener("mousemove",()=>{content.onHover?.(getBoundingRectAsPOJO(span));});span.addEventListener("mouseleave",()=>{content.onStopHover?.();});span.classList.add(...(content.classes||[]));if(child){p.replaceChild(span,child);}
else{p.appendChild(span);}}
if(existingChildren.length>lineLength){for(let i=lineLength;i<existingChildren.length;i++){p.removeChild(existingChildren[i]);}}
if(!p.hasChildNodes()){p.appendChild(document.createElement("span"));}
if(newChild){if(childElement){this.el.replaceChild(p,childElement);}
else{this.el.appendChild(p);}}}
if(childElements.length>contentLength){for(let i=contentLength;i<childElements.length;i++){this.el.removeChild(childElements[i]);}}}
scrollSelectionIntoView(){const focusedNode=document.getSelection()?.focusNode;if(!focusedNode||!this.el.contains(focusedNode))
return;const element=focusedNode instanceof HTMLElement?focusedNode:focusedNode.parentElement;element?.scrollIntoView?.({block:"nearest"});}
removeSelection(){const selection=window.getSelection();selection.removeAllRanges();}
removeAll(){if(this.el){while(this.el.firstChild){this.el.removeChild(this.el.firstChild);}}}
getCurrentSelection(){return getCurrentSelection(this.el);}
getText(){let text="";let isFirstParagraph=true;let emptyParagraph=false;const it=iterateChildren(this.el);for(let current=it.next();!current.done;current=it.next()){if(current.value.nodeName==="P"||(current.value.nodeName==="DIV"&&current.value!==this.el)){if(isFirstParagraph){isFirstParagraph=false;}
else{text+=NEWLINE;}
emptyParagraph=["<br>","<span><br></span>"].includes(current.value.innerHTML);continue;}
if(!current.value.hasChildNodes()){if(current.value.nodeName==="BR"&&!emptyParagraph){text+=NEWLINE;}
text+=current.value.textContent;}}
return text;}}
function compareContentToSpanElement(content,node){const contentColor=content.color?toHex(content.color):"";const nodeColor=node.style?.color?toHex(node.style.color):"";const sameColor=contentColor===nodeColor;const sameClass=deepEquals(content.classes,[...node.classList]);const sameContent=node.innerText===content.value;return sameColor&&sameClass&&sameContent;}
css`
  .o-formula-assistant {
    background: #ffffff;
    .o-formula-assistant-head {
      background-color: #f2f2f2;
      padding: 10px;
    }
    .collapsed {
      transform: rotate(180deg);
    }
    .o-formula-assistant-core {
      border-bottom: 1px solid gray;
    }
    .o-formula-assistant-arg-description {
      font-size: 85%;
    }
    .o-formula-assistant-focus {
      div:first-child,
      span {
        color: ${COMPOSER_ASSISTANT_COLOR};
        text-shadow: 0px 0px 1px ${COMPOSER_ASSISTANT_COLOR};
      }
      div:last-child {
        color: black;
      }
    }
    .o-formula-assistant-gray {
      color: gray;
    }
  }
`;class FunctionDescriptionProvider extends Component{static template="o-spreadsheet-FunctionDescriptionProvider";static props={functionDescription:Object,argsToFocus:Array,};static components={Collapse};state=useState({isCollapsed:true,});toggle(){this.state.isCollapsed=!this.state.isCollapsed;}
getContext(){return this.props;}
get formulaArgSeparator(){return this.env.model.getters.getLocale().formulaArgSeparator+" ";}}
const BUBBLE_ARROW_SIZE=7;css`
  .o-spreadsheet {
    .o-speech-bubble {
      background-color: white;
      box-sizing: border-box;
      box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.15);
      border: 1px solid #ccc;
      z-index: ${ComponentsImportance.Popover};

      &::after {
        content: "";
        position: absolute;
        top: 100%;
        left: 50%;
        background-color: white;
        height: ${BUBBLE_ARROW_SIZE}px;
        width: ${BUBBLE_ARROW_SIZE}px;
        transform-origin: top left;
        transform: translate(0, -67%) rotate(45deg);
        border-right: 1px solid #ccc;
        border-bottom: 1px solid #ccc;
        box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.15);
      }
    }

    .o-speech-content {
      max-width: 300px;
    }
  }
`;class SpeechBubble extends Component{static template="o-spreadsheet-SpeechBubble";static props={content:String,anchorRect:Object};static components={};spreadsheetRect=useSpreadsheetRect();bubbleRef=useRef("bubble");setup(){useEffect(()=>{const el=this.bubbleRef.el;if(!el){return;}
const anchorRect=this.props.anchorRect;const rect=getBoundingRectAsPOJO(el);const x=anchorRect.x+anchorRect.width/2-rect.width/2-this.spreadsheetRect.x;const y=anchorRect.y-rect.height-BUBBLE_ARROW_SIZE-this.spreadsheetRect.y;el.style.left=`${x}px`;el.style.top=`${y}px`;});}}
class KeepLast{lastId=0;add(promise){this.lastId++;const currentId=this.lastId;return new Promise((resolve,reject)=>{promise.then((value)=>{if(this.lastId===currentId){resolve(value);}}).catch((reason)=>{if(this.lastId===currentId){reject(reason);}});});}}
const autoCompleteProviders=new Registry();function drawHighlight(renderingContext,highlight,rect){const{x,y,width,height}=rect;if(width<0||height<0){return;}
const color=highlight.color||HIGHLIGHT_COLOR;const{ctx}=renderingContext;ctx.save();if(!highlight.noBorder){if(highlight.dashed){ctx.setLineDash([5,3]);}
ctx.strokeStyle=color;if(highlight.thinLine){ctx.lineWidth=1;ctx.strokeRect(x,y,width,height);}
else{ctx.lineWidth=2;ctx.strokeRect(x+0.5,y+0.5,width,height);}}
if(!highlight.noFill){ctx.fillStyle=setColorAlpha(toHex(color),highlight.fillAlpha??0.12);ctx.fillRect(x,y,width,height);}
ctx.restore();}
class HighlightStore extends SpreadsheetStore{mutators=["register","unRegister"];providers=[];constructor(get){super(get);this.onDispose(()=>{this.providers=[];});}
get renderingLayers(){return["Highlights"];}
get highlights(){const activeSheetId=this.getters.getActiveSheetId();return this.providers.flatMap((h)=>h.highlights).filter((h)=>h.range.sheetId===activeSheetId).map((highlight)=>{const{numberOfRows,numberOfCols}=zoneToDimension(highlight.range.zone);const zone=numberOfRows*numberOfCols===1?this.getters.expandZone(highlight.range.sheetId,highlight.range.zone):highlight.range.unboundedZone;return{...highlight,range:this.model.getters.getRangeFromZone(highlight.range.sheetId,zone),};});}
register(highlightProvider){this.providers.push(highlightProvider);}
unRegister(highlightProvider){this.providers=this.providers.filter((h)=>h!==highlightProvider);}
drawLayer(ctx,layer){if(layer==="Highlights"){for(const highlight of this.highlights){const rect=this.getters.getVisibleRect(highlight.range.zone);drawHighlight(ctx,highlight,rect);}}}}
class NotificationStore{mutators=["notifyUser","raiseError","askConfirmation","updateNotificationCallbacks",];notifyUser=(notification)=>window.alert(notification.text);askConfirmation=(content,confirm,cancel)=>{if(window.confirm(content)){confirm();}
else{cancel?.();}};raiseError=(text,callback)=>{window.alert(text);callback?.();};updateNotificationCallbacks(methods){this.notifyUser=methods.notifyUser||this.notifyUser;this.raiseError=methods.raiseError||this.raiseError;this.askConfirmation=methods.askConfirmation||this.askConfirmation;}}
class AutoCompleteStore extends SpreadsheetStore{mutators=["useProvider","moveSelection","hide","selectIndex"];selectedIndex=undefined;provider;get selectedProposal(){if(this.selectedIndex===undefined||this.provider===undefined){return undefined;}
return this.provider.proposals[this.selectedIndex];}
useProvider(provider){this.provider=provider;this.selectedIndex=provider.autoSelectFirstProposal?0:undefined;}
hide(){this.provider=undefined;this.selectedIndex=undefined;}
selectIndex(index){this.selectedIndex=index;}
moveSelection(direction){if(!this.provider){return;}
if(this.selectedIndex===undefined){this.selectedIndex=0;return;}
if(direction==="previous"){this.selectedIndex--;if(this.selectedIndex<0){this.selectedIndex=this.provider.proposals.length-1;}}
else{this.selectedIndex=(this.selectedIndex+1)%this.provider.proposals.length;}}}
const DEFAULT_TOKEN_COLOR="#000000";const functionColor=DEFAULT_TOKEN_COLOR;const operatorColor="#3da4ab";const tokenColors={OPERATOR:operatorColor,NUMBER:"#02c39a",STRING:"#00a82d",FUNCTION:functionColor,DEBUGGER:operatorColor,LEFT_PAREN:functionColor,RIGHT_PAREN:functionColor,ARG_SEPARATOR:functionColor,ORPHAN_RIGHT_PAREN:"#ff0000",};class AbstractComposerStore extends SpreadsheetStore{mutators=["startEdition","setCurrentContent","stopEdition","stopComposerRangeSelection","cancelEdition","cycleReferences","hideHelp","autoCompleteOrStop","insertAutoCompleteValue","moveAutoCompleteSelection","selectAutoCompleteIndex","toggleEditionMode","changeComposerCursorSelection","replaceComposerCursorSelection","hoverToken",];col=0;row=0;editionMode="inactive";sheetId="";_currentContent="";currentTokens=[];selectionStart=0;selectionEnd=0;initialContent="";colorIndexByRange={};autoComplete=new AutoCompleteStore(this.get);hoveredTokens=[];hoveredContentEvaluation="";autoCompleteKeepLast=new KeepLast();notificationStore=this.get(NotificationStore);highlightStore=this.get(HighlightStore);constructor(get){super(get);this.highlightStore.register(this);this.onDispose(()=>{this.highlightStore.unRegister(this);});}
handleEvent(event){this.hideHelp();const sheetId=this.getters.getActiveSheetId();let unboundedZone;if(event.options.unbounded){unboundedZone=this.getters.getUnboundedZone(sheetId,event.anchor.zone);}
else{unboundedZone=event.anchor.zone;}
switch(event.mode){case"newAnchor":if(this.editionMode==="selecting"){this.insertSelectedRange(unboundedZone);}
break;default:if(this.editionMode==="selecting"){this.replaceSelectedRange(unboundedZone);}
else{this.updateComposerRange(event.previousAnchor.zone,unboundedZone);}
break;}}
changeComposerCursorSelection(start,end){if(!this.isSelectionValid(this._currentContent.length,start,end)){return;}
this.selectionStart=start;this.selectionEnd=end;this.computeFormulaCursorContext();this.computeParenthesisRelatedToCursor();this.updateAutoCompleteProvider();}
stopComposerRangeSelection(){if(this.isSelectingRange){this.editionMode="editing";}}
startEdition(text,selection){if(selection){const content=text||this.getComposerContent(this.getters.getActivePosition());const validSelection=this.isSelectionValid(content.length,selection.start,selection.end);if(!validSelection){return;}}
const{col,row}=this.getters.getActivePosition();this.model.dispatch("SELECT_FIGURE",{figureId:null});this.model.dispatch("SCROLL_TO_CELL",{col,row});if(this.editionMode!=="inactive"&&text){this.setContent(text,selection);}
else{this._startEdition(text,selection);}
this.updateTokenColor();this.computeFormulaCursorContext();this.computeParenthesisRelatedToCursor();this.updateAutoCompleteProvider();}
cancelEdition(){this.resetContent();this.cancelEditionAndActivateSheet();}
setCurrentContent(content,selection){if(selection&&!this.isSelectionValid(content.length,selection.start,selection.end)){return;}
this.setContent(content,selection,true);this.updateTokenColor();this.computeFormulaCursorContext();this.computeParenthesisRelatedToCursor();}
replaceComposerCursorSelection(text){this.replaceSelection(text);}
handle(cmd){switch(cmd.type){case"SELECT_FIGURE":if(cmd.figureId){this.resetContent();this.cancelEditionAndActivateSheet();}
break;case"START_CHANGE_HIGHLIGHT":const{left,top}=cmd.zone;if(this.isSelectingRange){this.editionMode="editing";}
this.model.selection.resetAnchor(this,{cell:{col:left,row:top},zone:cmd.zone,});break;}}
get currentContent(){if(this.editionMode==="inactive"){return this.getComposerContent(this.getters.getActivePosition());}
return this._currentContent;}
get composerSelection(){return{start:this.selectionStart,end:this.selectionEnd,};}
get isSelectingRange(){return this.editionMode==="selecting";}
get showSelectionIndicator(){return this.isSelectingRange&&this.canStartComposerRangeSelection();}
get tokenAtCursor(){const start=Math.min(this.selectionStart,this.selectionEnd);const end=Math.max(this.selectionStart,this.selectionEnd);if(start===end&&end===0){return undefined;}
else{return this.currentTokens.find((t)=>t.start<=start&&t.end>=end);}}
get autoCompleteProposals(){return this.autoComplete.provider?.proposals||[];}
get autoCompleteSelectedIndex(){return this.autoComplete.selectedIndex;}
get isAutoCompleteDisplayed(){return!!this.autoComplete.provider;}
cycleReferences(){const locale=this.getters.getLocale();const updated=cycleFixedReference(this.composerSelection,this._currentContent,locale);if(updated===undefined){return;}
this.setCurrentContent(updated.content,updated.selection);}
toggleEditionMode(){if(this.editionMode==="inactive")
return;const start=Math.min(this.selectionStart,this.selectionEnd);const end=Math.max(this.selectionStart,this.selectionEnd);const refToken=[...this.currentTokens].reverse().find((tk)=>tk.end>=start&&end>=tk.start&&tk.type==="REFERENCE");if(this.editionMode==="editing"&&refToken){const currentSheetId=this.getters.getActiveSheetId();const{sheetName,xc}=splitReference(refToken.value);const sheetId=this.getters.getSheetIdByName(sheetName);if(sheetId&&sheetId!==currentSheetId){this.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:currentSheetId,sheetIdTo:sheetId});}
this.selectionStart=this.selectionEnd=refToken.end;const zone=this.getters.getRangeFromSheetXC(this.sheetId,xc).zone;this.captureSelection(zone);this.editionMode="selecting";}
else{this.editionMode="editing";}}
hoverToken(tokenIndex){this.currentTokens.forEach((t)=>(t.isInHoverContext=undefined));const tokens=[...this.currentTokens];if(tokenIndex===undefined||["ARG_SEPARATOR","SPACE"].includes(tokens[tokenIndex].type)){this.hoveredContentEvaluation="";this.hoveredTokens=[];return;}
const missingParenthesis=this.getNumberOfMissingParenthesis(tokens);if(missingParenthesis>0){tokens.push(...Array(missingParenthesis).fill({value:")",type:"RIGHT_PAREN"}));}
let hoveredContextTokens=tokens;if(tokenIndex!==0){const relatedTokens=this.getRelatedTokens(tokens,tokenIndex);const notHoveredTokens=tokens.filter((t)=>!relatedTokens.includes(t)&&t.type!=="SPACE");hoveredContextTokens=notHoveredTokens.length===1&&notHoveredTokens[0]===tokens[0]?tokens:relatedTokens;}
hoveredContextTokens.forEach((t)=>(t.isInHoverContext=true));let hoveredFormula=hoveredContextTokens.map((t)=>t.value).join("");if(!isFormula(hoveredFormula)){hoveredFormula=`=${hoveredFormula}`;}
const canonicalFormula=canonicalizeNumberContent(hoveredFormula,this.getters.getLocale());const result=this.getters.evaluateFormulaResult(this.sheetId,canonicalFormula);this.hoveredTokens=hoveredContextTokens;this.hoveredContentEvaluation=this.evaluationResultToDisplayString(result);}
getRelatedTokens(tokens,tokenIndex){try{const ast=parseTokens(tokens);let match=undefined;for(const node of iterateAstNodes(ast)){if(tokenIndex>=node.tokenStartIndex&&tokenIndex<=node.tokenEndIndex){match=node;}
else if(tokenIndex<node.tokenStartIndex){break;}}
if(!match){return tokens;}
return tokens.slice(match.tokenStartIndex,match.tokenEndIndex+1);}
catch(e){if(e instanceof EvaluationError){return tokens;}
throw e;}}
evaluationResultToDisplayString(result){const locale=this.getters.getLocale();if(isMatrix(result)){const rowSeparator=locale.decimalSeparator===","?"/":",";const arrayStr=transposeMatrix(result).map((row)=>row.map((val)=>this.cellValueToDisplayString(val)).join(rowSeparator)).join(";");return`{${arrayStr}}`;}
return this.cellValueToDisplayString(result);}
cellValueToDisplayString(result){const value=result.value;switch(typeof value){case"number":return formatValue(value,{locale:this.getters.getLocale(),format:result.format});case"string":if(isEvaluationError(value)){return value;}
return`"${value}"`;case"boolean":return value?"TRUE":"FALSE";}
return"0";}
captureSelection(zone,col,row){this.model.selection.capture(this,{cell:{col:col??zone.left,row:row??zone.right},zone,},{handleEvent:this.handleEvent.bind(this),release:()=>{this._stopEdition();},});}
isSelectionValid(length,start,end){return start>=0&&start<=length&&end>=0&&end<=length;}
startComposerRangeSelection(){if(this.sheetId===this.getters.getActiveSheetId()){const zone=positionToZone({col:this.col,row:this.row});this.model.selection.resetAnchor(this,{cell:{col:this.col,row:this.row},zone,});}
this.editionMode="selecting";}
_startEdition(str,selection){const evaluatedCell=this.getters.getActiveCell();const locale=this.getters.getLocale();if(str&&evaluatedCell.format?.includes("%")&&isNumber(str,locale)){selection=selection||{start:str.length,end:str.length};str=`${str}%`;}
const{col,row,sheetId}=this.getters.getActivePosition();this.col=col;this.sheetId=sheetId;this.row=row;this.initialContent=this.getComposerContent({sheetId,col,row});this.editionMode="editing";this.setContent(str||this.initialContent,selection);this.colorIndexByRange={};const zone=positionToZone({col:this.col,row:this.row});this.captureSelection(zone,col,row);}
_stopEdition(){if(this.editionMode!=="inactive"){this.cancelEditionAndActivateSheet();let content=this.getCurrentCanonicalContent();const didChange=this.initialContent!==content;if(!didChange){return;}
if(content){if(isFormula(content)){const missing=this.getNumberOfMissingParenthesis(this.currentTokens);if(missing>0){content+=concat(new Array(missing).fill(")"));}}}
this.confirmEdition(content);}}
getCurrentCanonicalContent(){return canonicalizeNumberContent(this._currentContent,this.getters.getLocale());}
cancelEditionAndActivateSheet(){if(this.editionMode==="inactive"){return;}
this._cancelEdition();const sheetId=this.getters.getActiveSheetId();if(sheetId!==this.sheetId){this.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:this.getters.getActiveSheetId(),sheetIdTo:this.sheetId,});}}
_cancelEdition(){if(this.editionMode==="inactive"){return;}
this.editionMode="inactive";this.model.selection.release(this);this.colorIndexByRange={};this.hoveredTokens=[];this.hoveredContentEvaluation="";}
resetContent(){this.setContent(this.initialContent||"");}
setContent(text,selection,raise){const isNewCurrentContent=this._currentContent!==text;this._currentContent=text;if(selection){this.selectionStart=selection.start;this.selectionEnd=selection.end;}
else{this.selectionStart=this.selectionEnd=text.length;}
if(isNewCurrentContent||this.editionMode!=="inactive"){const locale=this.getters.getLocale();this.currentTokens=isFormula(text)?composerTokenize(text,locale):[];if(this.currentTokens.length>100){if(raise){this.notificationStore.raiseError(_t("This formula has over 100 parts. It can't be processed properly, consider splitting it into multiple cells"));}}}
if(this.canStartComposerRangeSelection()){this.startComposerRangeSelection();}
this.updateAutoCompleteProvider();}
getAutoCompleteProviders(){return autoCompleteProviders.getAll();}
insertSelectedRange(zone){const start=Math.min(this.selectionStart,this.selectionEnd);const ref=this.getZoneReference(zone);if(this.canStartComposerRangeSelection()){this.insertText(ref,start);}
else{this.insertText(","+ref,start);}}
replaceSelectedRange(zone){const ref=this.getZoneReference(zone);const currentToken=this.tokenAtCursor;const start=currentToken?.type==="REFERENCE"?currentToken.start:this.selectionStart;this.replaceText(ref,start,this.selectionEnd);}
updateComposerRange(oldZone,newZone){const activeSheetId=this.getters.getActiveSheetId();const tokentAtCursor=this.tokenAtCursor;const tokens=tokentAtCursor?[tokentAtCursor,...this.currentTokens]:this.currentTokens;const previousRefToken=tokens.filter((token)=>token.type==="REFERENCE").find((token)=>{const{xc,sheetName:sheet}=splitReference(token.value);const sheetName=sheet||this.getters.getSheetName(this.sheetId);if(!isSheetNameEqual(this.getters.getSheetName(activeSheetId),sheetName)){return false;}
const refRange=this.getters.getRangeFromSheetXC(activeSheetId,xc);return isEqual(this.getters.expandZone(activeSheetId,refRange.zone),oldZone);});if(!previousRefToken){return;}
const previousRange=this.getters.getRangeFromSheetXC(activeSheetId,previousRefToken.value);this.selectionStart=previousRefToken.start;this.selectionEnd=this.selectionStart+previousRefToken.value.length;const newRange=this.getters.getRangeFromZone(activeSheetId,newZone);const newRef=this.getRangeReference(newRange,previousRange.parts);this.replaceSelection(newRef);}
getZoneReference(zone){const inputSheetId=this.sheetId;const sheetId=this.getters.getActiveSheetId();const range=this.getters.getRangeFromZone(sheetId,zone);return this.getters.getSelectionRangeString(range,inputSheetId);}
getRangeReference(range,fixedParts){const _fixedParts=[...fixedParts];const newRange={...range,parts:_fixedParts};return this.getters.getSelectionRangeString(newRange,this.sheetId);}
replaceSelection(text){const start=Math.min(this.selectionStart,this.selectionEnd);const end=Math.max(this.selectionStart,this.selectionEnd);this.replaceText(text,start,end);}
replaceText(text,start,end){this._currentContent=this._currentContent.slice(0,start)+
this._currentContent.slice(end,this._currentContent.length);this.insertText(text,start);}
insertText(text,start){const content=this._currentContent.slice(0,start)+text+this._currentContent.slice(start);const end=start+text.length;this.setCurrentContent(content,{start:end,end});}
updateTokenColor(){this.updateRangeColor();for(let i=0;i<this.currentTokens.length;i++){this.currentTokens[i].color=this.getTokenColor(this.currentTokens[i]);}}
getTokenColor(token){if(token.type==="REFERENCE"){const{xc,sheetName}=splitReference(token.value);return this.rangeColor(xc,sheetName)||DEFAULT_TOKEN_COLOR;}
if(token.type==="SYMBOL"){const upperCaseValue=token.value.toUpperCase();if(upperCaseValue==="TRUE"||upperCaseValue==="FALSE"){return tokenColors.NUMBER;}
if(upperCaseValue in functionRegistry.content){return tokenColors.FUNCTION;}}
if(["LEFT_PAREN","RIGHT_PAREN"].includes(token.type)){if(token.parenthesesCode===""){return tokenColors.ORPHAN_RIGHT_PAREN;}}
return tokenColors[token.type]||DEFAULT_TOKEN_COLOR;}
rangeColor(xc,sheetName){const refSheet=sheetName?this.model.getters.getSheetIdByName(sheetName):this.sheetId;const highlight=this.highlights.find((highlight)=>{if(highlight.range.sheetId!==refSheet)
return false;const range=this.model.getters.getRangeFromSheetXC(refSheet,xc);let zone=range.zone;zone=getZoneArea(zone)===1?this.model.getters.expandZone(refSheet,zone):zone;return isEqual(zone,highlight.range.zone);});return highlight&&highlight.color?highlight.color:undefined;}
computeFormulaCursorContext(){for(let i=0;i<this.currentTokens.length;i++){this.currentTokens[i].isBlurred=false;}
if(this.selectionStart!==this.selectionEnd){return;}
const parenthesesCodeAtCursor=this.getParenthesesCodeAfterCursor();const previousSymbolAtCursor=[...this.currentTokens].reverse().find((t)=>parenthesesCodeAtCursor.startsWith(t.parenthesesCode)&&t.type==="SYMBOL");if(!previousSymbolAtCursor){return;}
for(let i=0;i<this.currentTokens.length;i++){if(!(this.currentTokens[i].parenthesesCode||"").startsWith(previousSymbolAtCursor.parenthesesCode||"")){this.currentTokens[i].isBlurred=true;}}}
getParenthesesCodeAfterCursor(){const code=this.tokenAtCursor?.parenthesesCode||"";if(this.tokenAtCursor?.type==="RIGHT_PAREN"){return code.slice(0,-1)||"";}
return code;}
computeParenthesisRelatedToCursor(){for(let i=0;i<this.currentTokens.length;i++){this.currentTokens[i].isParenthesisLinkedToCursor=false;}
const tokenAtCursor=this.tokenAtCursor;if(!tokenAtCursor||tokenAtCursor.parenthesesCode===""||!["LEFT_PAREN","RIGHT_PAREN"].includes(tokenAtCursor.type)){return;}
for(let i=0;i<this.currentTokens.length;i++){const currentToken=this.currentTokens[i];if(["LEFT_PAREN","RIGHT_PAREN"].includes(currentToken.type)&&currentToken.parenthesesCode===tokenAtCursor.parenthesesCode&&currentToken!==tokenAtCursor){this.currentTokens[i].isParenthesisLinkedToCursor=true;this.tokenAtCursor.isParenthesisLinkedToCursor=true;}}}
updateRangeColor(){if(!isFormula(this._currentContent)||this.editionMode==="inactive"){return;}
const editionSheetId=this.sheetId;const XCs=this.getReferencedRanges().map((range)=>this.getters.getRangeString(range,editionSheetId));const colorsToKeep={};for(const xc of XCs){if(this.colorIndexByRange[xc]!==undefined){colorsToKeep[xc]=this.colorIndexByRange[xc];}}
const usedIndexes=new Set(Object.values(colorsToKeep));let currentIndex=0;const nextIndex=()=>{while(usedIndexes.has(currentIndex))
currentIndex++;usedIndexes.add(currentIndex);return currentIndex;};for(const xc of XCs){const colorIndex=xc in colorsToKeep?colorsToKeep[xc]:nextIndex();colorsToKeep[xc]=colorIndex;}
this.colorIndexByRange=colorsToKeep;}
get highlights(){if(!isFormula(this.currentContent)||this.editionMode==="inactive"){return[];}
const editionSheetId=this.sheetId;const rangeColor=(rangeString)=>{const colorIndex=this.colorIndexByRange[rangeString];return colors[colorIndex%colors.length];};return this.getReferencedRanges().map((range)=>{const rangeString=this.getters.getRangeString(range,editionSheetId);const{numberOfRows,numberOfCols}=zoneToDimension(range.zone);const zone=numberOfRows*numberOfCols===1?this.getters.expandZone(range.sheetId,range.zone):range.unboundedZone;return{range:this.model.getters.getRangeFromZone(range.sheetId,zone),color:rangeColor(rangeString),interactive:true,};});}
getReferencedRanges(){const editionSheetId=this.sheetId;const referenceRanges=this.currentTokens.filter((token)=>token.type==="REFERENCE").map((token)=>this.getters.getRangeFromSheetXC(editionSheetId,token.value));return referenceRanges.filter((range)=>!range.invalidSheetName&&!range.invalidXc);}
async updateAutoCompleteProvider(){this.autoComplete.hide();const provider=await this.autoCompleteKeepLast.add(this.findAutocompleteProvider());if(provider){this.autoComplete.useProvider(provider);this.model.trigger("update");}}
async findAutocompleteProvider(){const content=this.currentContent;const tokenAtCursor=isFormula(content)?this.tokenAtCursor:{type:"STRING",value:content};if(this.editionMode==="inactive"||!tokenAtCursor||["TRUE","FALSE"].includes(tokenAtCursor.value.toUpperCase())||!(this.canStartComposerRangeSelection()||["SYMBOL","STRING","UNKNOWN"].includes(tokenAtCursor.type))){return;}
const thisCtx={composer:this,getters:this.getters};const providersDefinitions=this.getAutoCompleteProviders();const providers=providersDefinitions.sort((a,b)=>(a.sequence??Infinity)-(b.sequence??Infinity)).map((provider)=>({...provider,getProposals:provider.getProposals.bind(thisCtx,tokenAtCursor,content),selectProposal:provider.selectProposal.bind(thisCtx,tokenAtCursor),}));for(const provider of providers){let proposals=await provider.getProposals();const exactMatch=proposals?.find((p)=>p.text===tokenAtCursor.value);const searchTerm=tokenAtCursor.value.replace(/[ ,\(\)]/g,"");if(this._currentContent===this.initialContent&&provider.displayAllOnInitialContent&&proposals?.length){return{proposals,selectProposal:provider.selectProposal,autoSelectFirstProposal:provider.autoSelectFirstProposal??false,};}
if(exactMatch&&this._currentContent!==this.initialContent){return;}
if(searchTerm&&proposals&&!["ARG_SEPARATOR","LEFT_PAREN","OPERATOR"].includes(tokenAtCursor.type)){const filteredProposals=fuzzyLookup(searchTerm,proposals,(p)=>p.fuzzySearchKey||p.text);if(!exactMatch||filteredProposals.length){proposals=filteredProposals;}}
if(provider.maxDisplayedProposals){proposals=proposals?.slice(0,provider.maxDisplayedProposals);}
if(proposals?.length){return{proposals,selectProposal:provider.selectProposal,autoSelectFirstProposal:provider.autoSelectFirstProposal??false,};}}
return;}
hideHelp(){this.autoComplete.hide();}
autoCompleteOrStop(direction){if(this.editionMode!=="inactive"){const autoComplete=this.autoComplete;if(autoComplete.provider&&autoComplete.selectedIndex!==undefined){const autoCompleteValue=autoComplete.provider.proposals[autoComplete.selectedIndex]?.text;if(autoCompleteValue){this.autoComplete.provider?.selectProposal(autoCompleteValue);return;}}
this.stopEdition(direction);}}
insertAutoCompleteValue(value){this.autoComplete.provider?.selectProposal(value);}
selectAutoCompleteIndex(index){this.autoComplete.selectIndex(clip(0,index,10));}
moveAutoCompleteSelection(direction){this.autoComplete.moveSelection(direction);}
canStartComposerRangeSelection(){if(isFormula(this._currentContent)){const tokenAtCursor=this.tokenAtCursor;if(!tokenAtCursor){return false;}
const tokenIdex=this.currentTokens.map((token)=>token.start).indexOf(tokenAtCursor.start);let count=tokenIdex;let currentToken=tokenAtCursor;while(!["ARG_SEPARATOR","LEFT_PAREN","OPERATOR"].includes(currentToken.type)||POSTFIX_UNARY_OPERATORS.includes(currentToken.value)){if(currentToken.type!=="SPACE"||count<1){return false;}
count--;currentToken=this.currentTokens[count];}
count=tokenIdex+1;currentToken=this.currentTokens[count];while(currentToken&&!["ARG_SEPARATOR","RIGHT_PAREN","OPERATOR"].includes(currentToken.type)){if(currentToken.type!=="SPACE"){return false;}
count++;currentToken=this.currentTokens[count];}
return true;}
return false;}
getNumberOfMissingParenthesis(tokens){const left=tokens.filter((t)=>t.type==="LEFT_PAREN").length;const right=tokens.filter((t)=>t.type==="RIGHT_PAREN").length;return left-right;}}
const functions=functionRegistry.content;const ASSISTANT_WIDTH=300;const CLOSE_ICON_RADIUS=9;const selectionIndicatorClass="selector-flag";const highlightParenthesisClass="highlight-parenthesis-flag";const highlightClass="highlight-flag";const selectionIndicatorColor="#a9a9a9";const selectionIndicator="␣";css`
  .o-composer-container {
    .o-composer {
      overflow-y: auto;
      overflow-x: hidden;
      word-break: break-all;
      padding-right: 2px;

      caret-color: black;
      padding-left: 3px;
      padding-right: 3px;
      outline: none;

      p {
        margin-bottom: 0px;

        span {
          white-space: pre-wrap;
          /* On some browsers (chromium ?) it is somehow possible to hover two of the composer's spans at the same time, leading to
           * flickering with a succession of onmouseenter/onmouseleave events. A small invisible padding seems to prevent the issue.*/
          padding-left: 0.01px;

          &.${selectionIndicatorClass}:after {
            content: "${selectionIndicator}";
            color: ${selectionIndicatorColor};
          }

          &.${highlightParenthesisClass}:not(.${highlightClass}) {
            border-radius: 5px;
            background-color: lightgray;
            padding: 1.5px 0px 1.5px 0px;
          }

          &.${highlightClass} {
            background-color: #e6edf3;
          }
        }
      }
    }
    .o-composer[placeholder]:empty:not(:focus):not(.active)::before {
      content: attr(placeholder);
      color: #bdbdbd;
      position: relative;
      top: 0%;
      pointer-events: none;
    }

    .fa-stack {
      /* reset stack size which is doubled by default */
      width: ${CLOSE_ICON_RADIUS * 2}px;
      height: ${CLOSE_ICON_RADIUS * 2}px;
      line-height: ${CLOSE_ICON_RADIUS * 2}px;
    }

    .force-open-assistant {
      left: -1px;
      top: -1px;

      .fa-question-circle {
        color: ${PRIMARY_BUTTON_BG};
      }
    }

    .o-composer-assistant {
      margin-top: 1px;

      .o-semi-bold {
        /* FIXME: to remove in favor of Bootstrap
        * 'fw-semibold' when we upgrade to Bootstrap 5.2
        */
        font-weight: 600 !important;
      }
    }
  }
`;class Composer extends Component{static template="o-spreadsheet-Composer";static props={focus:{validate:(value)=>["inactive","cellFocus","contentFocus"].includes(value),},inputStyle:{type:String,optional:true},rect:{type:Object,optional:true},delimitation:{type:Object,optional:true},onComposerCellFocused:{type:Function,optional:true},onComposerContentFocused:Function,isDefaultFocus:{type:Boolean,optional:true},onInputContextMenu:{type:Function,optional:true},composerStore:Object,placeholder:{type:String,optional:true},inputMode:{type:String,optional:true},showAssistant:{type:Boolean,optional:true},};static components={TextValueProvider,FunctionDescriptionProvider,SpeechBubble};static defaultProps={inputStyle:"",isDefaultFocus:false,inputMode:"text",showAssistant:true,};DOMFocusableElementStore;composerRef=useRef("o_composer");contentHelper=new ContentEditableHelper(this.composerRef.el);composerState=useState({positionStart:0,positionEnd:0,hoveredRect:undefined,});functionDescriptionState=useState({showDescription:false,functionDescription:{},argsToFocus:[],});assistant=useState({forcedClosed:false,});compositionActive=false;spreadsheetRect=useSpreadsheetRect();lastHoveredTokenIndex=undefined;debouncedHover=debounce((tokenIndex,hoveredRect)=>{const selection=this.contentHelper.getCurrentSelection();if(selection.start!==selection.end){return;}
const currentHoveredContext=this.props.composerStore.hoveredTokens;this.props.composerStore.hoverToken(tokenIndex);if(!deepEquals(currentHoveredContext,this.props.composerStore.hoveredTokens)){this.composerState.hoveredRect=hoveredRect;}},120);get assistantStyleProperties(){const composerRect=this.composerRef.el.getBoundingClientRect();const assistantStyle={};const minWidth=Math.min(this.props.rect?.width||Infinity,ASSISTANT_WIDTH);assistantStyle["min-width"]=`${minWidth}px`;const proposals=this.props.composerStore.autoCompleteProposals;const proposalsHaveDescription=proposals?.some((proposal)=>proposal.description);if(this.functionDescriptionState.showDescription||proposalsHaveDescription){assistantStyle.width=`${ASSISTANT_WIDTH}px`;}
if(this.props.delimitation&&this.props.rect){const{x:cellX,y:cellY,height:cellHeight}=this.props.rect;const remainingHeight=this.props.delimitation.height-(cellY+cellHeight);assistantStyle["max-height"]=`${remainingHeight}px`;if(cellY>remainingHeight){const availableSpaceAbove=cellY;assistantStyle["max-height"]=`${availableSpaceAbove - CLOSE_ICON_RADIUS}px`;assistantStyle.transform=`translate(0, calc(-100% - ${cellHeight + 3}px))`;}
if(cellX+ASSISTANT_WIDTH>this.props.delimitation.width){assistantStyle.right=`0px`;}}
else{assistantStyle["max-height"]=`${this.spreadsheetRect.height - composerRect.bottom - 1}px`;if(composerRect.left+ASSISTANT_WIDTH+SCROLLBAR_WIDTH+CLOSE_ICON_RADIUS>this.spreadsheetRect.width){assistantStyle.right=`${CLOSE_ICON_RADIUS}px`;}}
return assistantStyle;}
get assistantStyle(){const allProperties=this.assistantStyleProperties;return cssPropertiesToCss({"max-height":allProperties["max-height"],width:allProperties["width"],"min-width":allProperties["min-width"],});}
get assistantContainerStyle(){const allProperties=this.assistantStyleProperties;return cssPropertiesToCss({top:allProperties["top"],right:allProperties["right"],transform:allProperties["transform"],});}
shouldProcessInputEvents=false;tokens=[];keyMapping={Enter:(ev)=>this.processEnterKey(ev,"down"),"Shift+Enter":(ev)=>this.processEnterKey(ev,"up"),"Alt+Enter":this.processNewLineEvent,"Ctrl+Enter":this.processNewLineEvent,Escape:this.processEscapeKey,F2:(ev)=>this.toggleEditionMode(ev),F4:(ev)=>this.processF4Key(ev),Tab:(ev)=>this.processTabKey(ev,"right"),"Shift+Tab":(ev)=>this.processTabKey(ev,"left"),};keyCodeMapping={NumpadDecimal:this.processNumpadDecimal,};setup(){this.DOMFocusableElementStore=useStore(DOMFocusableElementStore);onMounted(()=>{const el=this.composerRef.el;if(this.props.isDefaultFocus){this.DOMFocusableElementStore.setFocusableElement(el);}
this.contentHelper.updateEl(el);});onWillUnmount(()=>{this.debouncedHover.stopDebounce();});useEffect(()=>{this.processContent();if(document.activeElement===this.contentHelper.el&&this.props.composerStore.editionMode==="inactive"&&!this.props.isDefaultFocus){this.DOMFocusableElementStore.focus();}});useEffect(()=>{this.processTokenAtCursor();},()=>[this.props.composerStore.editionMode!=="inactive"]);useEffect(()=>{this.contentHelper.scrollSelectionIntoView();},()=>[this.props.composerStore.composerSelection.start,this.props.composerStore.composerSelection.end,]);}
processArrowKeys(ev){const tokenAtCursor=this.props.composerStore.tokenAtCursor;if((this.props.composerStore.isSelectingRange||this.props.composerStore.editionMode==="inactive")&&!(["ArrowUp","ArrowDown"].includes(ev.key)&&this.props.composerStore.isAutoCompleteDisplayed&&tokenAtCursor?.type!=="REFERENCE")){this.functionDescriptionState.showDescription=false;this.props.composerStore.hideHelp();ev.preventDefault();ev.stopPropagation();updateSelectionWithArrowKeys(ev,this.env.model.selection);return;}
const content=this.props.composerStore.currentContent;if(this.props.focus==="cellFocus"&&!this.props.composerStore.isAutoCompleteDisplayed&&!isFormula(content)){this.props.composerStore.stopEdition();return;}
ev.stopPropagation();this.handleArrowKeysForAutocomplete(ev);}
handleArrowKeysForAutocomplete(ev){if(["ArrowUp","ArrowDown"].includes(ev.key)&&this.props.composerStore.isAutoCompleteDisplayed){ev.preventDefault();this.props.composerStore.moveAutoCompleteSelection(ev.key==="ArrowDown"?"next":"previous");}}
processTabKey(ev,direction){ev.preventDefault();ev.stopPropagation();if(!this.assistant.forcedClosed){this.props.composerStore.autoCompleteOrStop(direction);}}
processEnterKey(ev,direction){ev.preventDefault();ev.stopPropagation();if(!this.assistant.forcedClosed){this.props.composerStore.autoCompleteOrStop(direction);}}
processNewLineEvent(ev){ev.preventDefault();ev.stopPropagation();const content=this.contentHelper.getText();const selection=this.contentHelper.getCurrentSelection();const start=Math.min(selection.start,selection.end);const end=Math.max(selection.start,selection.end);this.props.composerStore.stopComposerRangeSelection();this.props.composerStore.setCurrentContent(content.slice(0,start)+NEWLINE+content.slice(end),{start:start+1,end:start+1,});this.processContent();}
processEscapeKey(ev){this.props.composerStore.cancelEdition();ev.stopPropagation();ev.preventDefault();}
processF4Key(ev){ev.stopPropagation();this.props.composerStore.cycleReferences();this.processContent();}
toggleEditionMode(ev){ev.stopPropagation();this.props.composerStore.toggleEditionMode();this.processContent();}
processNumpadDecimal(ev){ev.stopPropagation();ev.preventDefault();const locale=this.env.model.getters.getLocale();const selection=this.contentHelper.getCurrentSelection();const currentContent=this.props.composerStore.currentContent;const content=currentContent.slice(0,selection.start)+
locale.decimalSeparator+
currentContent.slice(selection.end);this.props.composerStore.setCurrentContent(content,{start:selection.start+1,end:selection.start+1,});this.processContent();}
onCompositionStart(){this.compositionActive=true;}
onCompositionEnd(){this.compositionActive=false;}
onKeydown(ev){if(this.props.composerStore.editionMode==="inactive"){return;}
if(ev.key.startsWith("Arrow")){this.processArrowKeys(ev);return;}
const handler=this.keyMapping[keyboardEventToShortcutString(ev)]||this.keyCodeMapping[keyboardEventToShortcutString(ev,"code")];if(handler){handler.call(this,ev);}
else{ev.stopPropagation();}}
onPaste(ev){if(this.props.composerStore.editionMode!=="inactive"){ev.stopPropagation();}
else{ev.preventDefault();}}
onInput(ev){if(!this.shouldProcessInputEvents){return;}
ev.stopPropagation();let content;if(this.props.composerStore.editionMode==="inactive"){content=ev.data||"";}
else{content=this.contentHelper.getText();}
if(this.props.focus==="inactive"){return this.props.onComposerCellFocused?.(content);}
const selection=this.contentHelper.getCurrentSelection();this.props.composerStore.stopComposerRangeSelection();this.props.composerStore.setCurrentContent(content,selection);this.processTokenAtCursor();}
onKeyup(ev){if(this.contentHelper.el===document.activeElement){if(this.props.composerStore.isAutoCompleteDisplayed&&["ArrowUp","ArrowDown"].includes(ev.key)){return;}
if(this.props.composerStore.isSelectingRange&&ev.key?.startsWith("Arrow")){return;}
const{start:oldStart,end:oldEnd}=this.props.composerStore.composerSelection;const{start,end}=this.contentHelper.getCurrentSelection();if(start!==oldStart||end!==oldEnd){this.props.composerStore.changeComposerCursorSelection(start,end);}
this.processTokenAtCursor();}}
onBlur(ev){if(this.props.composerStore.editionMode==="inactive"){return;}
const target=ev.relatedTarget;if(!target||!(target instanceof HTMLElement)){this.props.composerStore.stopEdition();return;}
if(target.attributes.getNamedItem("composerFocusableElement")){this.contentHelper.el.focus();return;}
if(target.classList.contains("o-composer")){return;}
this.props.composerStore.stopEdition();}
onMousedown(ev){if(ev.button>0){return;}
if(this.env.isMobile()&&!isIOS()){return;}
this.debouncedHover.stopDebounce();this.contentHelper.removeSelection();}
onMouseup(){const selection=this.contentHelper.getCurrentSelection();if(selection.start!==selection.end){this.props.composerStore.hoverToken(undefined);}}
onClick(){if(this.env.model.getters.isReadonly()){return;}
const newSelection=this.contentHelper.getCurrentSelection();this.props.composerStore.stopComposerRangeSelection();this.props.onComposerContentFocused();this.props.composerStore.changeComposerCursorSelection(newSelection.start,newSelection.end);this.processTokenAtCursor();}
onDblClick(){if(this.env.model.getters.isReadonly()){return;}
const composerContent=this.props.composerStore.currentContent;const isValidFormula=isFormula(composerContent);if(isValidFormula){const tokens=this.props.composerStore.currentTokens;const currentSelection=this.contentHelper.getCurrentSelection();if(currentSelection.start===currentSelection.end)
return;const currentSelectedText=composerContent.substring(currentSelection.start,currentSelection.end);const token=tokens.filter((token)=>token.value.includes(currentSelectedText)&&token.start<=currentSelection.start&&token.end>=currentSelection.end)[0];if(!token){return;}
if(token.type==="REFERENCE"){this.props.composerStore.changeComposerCursorSelection(token.start,token.end);}}}
onContextMenu(ev){if(this.props.composerStore.editionMode==="inactive"){this.props.onInputContextMenu?.(ev);}}
closeAssistant(){this.assistant.forcedClosed=true;}
openAssistant(){this.assistant.forcedClosed=false;}
onWheel(event){if(this.composerRef.el&&this.composerRef.el.scrollHeight>this.composerRef.el.clientHeight){event.stopPropagation();}}
processContent(){if(this.compositionActive){return;}
this.shouldProcessInputEvents=false;if(this.props.focus!=="inactive"&&document.activeElement!==this.contentHelper.el){this.contentHelper.el.focus();}
const content=this.getContentLines();this.contentHelper.setText(content);if(content.length!==0&&content.length[0]!==0){if(this.props.focus!=="inactive"){const{start,end}=this.props.composerStore.composerSelection;this.contentHelper.selectRange(start,end);}}
this.shouldProcessInputEvents=true;}
getContentLines(){const value=this.props.composerStore.currentContent;const isValidFormula=isFormula(value);if(value===""){return[];}
else if(isValidFormula&&this.props.focus!=="inactive"){return this.splitHtmlContentIntoLines(this.getHtmlContentFromTokens());}
return this.splitHtmlContentIntoLines([{value,classes:[]}]);}
getHtmlContentFromTokens(){const tokens=this.props.composerStore.currentTokens;const result=[];const{end,start}=this.props.composerStore.composerSelection;for(let index=0;index<tokens.length;index++){const token=tokens[index];let color=token.color||DEFAULT_TOKEN_COLOR;if(token.isBlurred){color=setColorAlpha(color,0.5);}
const classes=[];if(token.type==="REFERENCE"&&this.props.composerStore.tokenAtCursor===token&&this.props.composerStore.editionMode==="selecting"){classes.push("text-decoration-underline");}
if(end===start&&token.isParenthesisLinkedToCursor){classes.push(highlightParenthesisClass);}
if(token.isInHoverContext){classes.push(highlightClass);}
if(this.props.composerStore.showSelectionIndicator&&end===start&&end===token.end){classes.push(selectionIndicatorClass);}
result.push({value:token.value,color,classes,onHover:(rect)=>this.onTokenHover(index,rect),onStopHover:()=>this.onTokenHover(undefined),});}
return result;}
onTokenHover(tokenIndex,hoveredRect){if(this.lastHoveredTokenIndex!==tokenIndex){this.lastHoveredTokenIndex=tokenIndex;this.debouncedHover(tokenIndex,hoveredRect);}}
splitHtmlContentIntoLines(contents){const contentSplitInLines=[];let currentLine=[];for(const content of contents){if(content.value.includes(NEWLINE)){const lines=content.value.split(NEWLINE);const lastLine=lines.pop();for(const line of lines){currentLine.push({color:content.color,value:line});contentSplitInLines.push(currentLine);currentLine=[];}
currentLine.push({...content,value:lastLine});}
else{currentLine.push(content);}}
if(currentLine.length){contentSplitInLines.push(currentLine);}
const filteredLines=[];for(const line of contentSplitInLines){if(line.every(this.isContentEmpty)){filteredLines.push([line[0]]);}
else{filteredLines.push(line.filter((content)=>!this.isContentEmpty(content)));}}
return filteredLines;}
isContentEmpty(content){return!(content.value||content.classes?.length);}
processTokenAtCursor(){const composerStore=this.props.composerStore;this.functionDescriptionState.showDescription=false;const token=this.props.composerStore.tokenAtCursor;if(isFormula(composerStore.currentContent)&&token&&token.type!=="SYMBOL"){const tokenContext=token.functionContext;const parentFunction=tokenContext?.parent.toUpperCase();if(tokenContext&&parentFunction&&parentFunction in functions&&token.type!=="UNKNOWN"){const description=functions[parentFunction];const argPosition=tokenContext.argPosition;const nbrArgSupplied=tokenContext.args.length;this.functionDescriptionState.functionDescription=description;const isParenthesisClosed=this.props.composerStore.currentTokens.some((t)=>t.type==="RIGHT_PAREN"&&t.parenthesesCode===token.parenthesesCode);this.functionDescriptionState.argsToFocus=this.getArgsToFocus(isParenthesisClosed,description,nbrArgSupplied,argPosition);this.functionDescriptionState.showDescription=true;}}}
getArgsToFocus(isParenthesisClosed,description,nbrArgSupplied,argPosition){const{nbrArgRepeating,minArgRequired,nbrArgOptional,maxArgPossible}=description;if(isParenthesisClosed){const focusedArg=argTargeting(description,Math.max(Math.min(maxArgPossible,nbrArgSupplied),minArgRequired))(argPosition);return focusedArg!==undefined?[focusedArg]:[];}
const minArgsNumberPossibility=Math.max(nbrArgSupplied,minArgRequired);const maxArgsNumberPossibility=nbrArgRepeating?minArgRequired+
Math.ceil((minArgsNumberPossibility-minArgRequired)/nbrArgRepeating)*nbrArgRepeating+
nbrArgOptional:maxArgPossible;const argsToFocus=[];for(let i=minArgsNumberPossibility;i<=maxArgsNumberPossibility;i++){const focusedArg=argTargeting(description,i)(argPosition);if(focusedArg!==undefined){argsToFocus.push(focusedArg);}}
return[...new Set(argsToFocus)];}
autoComplete(value){if(!value||this.assistant.forcedClosed){return;}
this.props.composerStore.insertAutoCompleteValue(value);this.processTokenAtCursor();}
get displaySpeechBubble(){return!!(this.props.focus!=="inactive"&&this.composerState.hoveredRect&&this.props.composerStore.hoveredContentEvaluation);}}
class StandaloneComposerStore extends AbstractComposerStore{args;constructor(get,args){super(get);this.args=args;this._currentContent=this.getComposerContent();}
getAutoCompleteProviders(){const providersDefinitions=super.getAutoCompleteProviders();const contextualAutocomplete=this.args().contextualAutocomplete;if(contextualAutocomplete){providersDefinitions.push(contextualAutocomplete);}
return providersDefinitions;}
getZoneReference(zone){const res=super.getZoneReference(zone);if(this.args().defaultStatic){return setXcToFixedReferenceType(res,"colrow");}
return res;}
getComposerContent(){let content=this._currentContent;if(this.editionMode==="inactive"){const defaultRangeSheetId=this.args().defaultRangeSheetId;content=rangeTokenize(this.args().content).map((token)=>{if(token.type==="REFERENCE"){const range=this.getters.getRangeFromSheetXC(defaultRangeSheetId,token.value);return this.getters.getRangeString(range,this.getters.getActiveSheetId());}
return token.value;}).join("");}
return localizeContent(content,this.getters.getLocale());}
stopEdition(){this._stopEdition();}
confirmEdition(content){this.args().onConfirm(content);}
getTokenColor(token){if(token.type==="SYMBOL"){const matchedColor=this.args().getContextualColoredSymbolToken?.(token);if(matchedColor){return matchedColor;}}
return super.getTokenColor(token);}}
css`
  .o-spreadsheet {
    .o-standalone-composer {
      min-height: 24px;

      border-bottom: 1px solid;
      border-color: ${GRAY_300};

      &.active {
        border-color: ${ACTION_COLOR};
      }

      &.o-invalid {
        border-bottom: 2px solid red;
      }

      /* As the standalone composer is potentially very small (eg. in a side panel), we remove the scrollbar display */
      scrollbar-width: none; /* Firefox */
      &::-webkit-scrollbar {
        display: none;
      }
    }
  }
`;class StandaloneComposer extends Component{static template="o-spreadsheet-StandaloneComposer";static props={composerContent:{type:String,optional:true},defaultRangeSheetId:{type:String,optional:true},defaultStatic:{type:Boolean,optional:true},onConfirm:Function,contextualAutocomplete:{type:Object,optional:true},placeholder:{type:String,optional:true},title:{type:String,optional:true},class:{type:String,optional:true},invalid:{type:Boolean,optional:true},getContextualColoredSymbolToken:{type:Function,optional:true},};static components={Composer};static defaultProps={composerContent:"",defaultStatic:false,};composerFocusStore;standaloneComposerStore;composerInterface;spreadsheetRect=useSpreadsheetRect();setup(){this.composerFocusStore=useStore(ComposerFocusStore);const standaloneComposerStore=useLocalStore(StandaloneComposerStore,()=>({onConfirm:this.props.onConfirm,content:this.props.composerContent,defaultStatic:this.props.defaultStatic??false,contextualAutocomplete:this.props.contextualAutocomplete,defaultRangeSheetId:this.props.defaultRangeSheetId,getContextualColoredSymbolToken:this.props.getContextualColoredSymbolToken,}));this.standaloneComposerStore=standaloneComposerStore;this.composerInterface={id:"standaloneComposer",get editionMode(){return standaloneComposerStore.editionMode;},startEdition:this.standaloneComposerStore.startEdition,setCurrentContent:this.standaloneComposerStore.setCurrentContent,stopEdition:this.standaloneComposerStore.stopEdition,};}
get focus(){return this.composerFocusStore.activeComposer===this.composerInterface?this.composerFocusStore.focusMode:"inactive";}
get composerStyle(){return this.props.invalid?cssPropertiesToCss({padding:"1px 0px 0px 0px"}):cssPropertiesToCss({padding:"1px 0px"});}
get containerClass(){const classes=[this.focus==="inactive"?"":"active",this.props.invalid?"o-invalid":"",this.props.class||"",];return classes.join(" ");}
onFocus(selection){this.composerFocusStore.focusComposer(this.composerInterface,{selection});}}
css`
  .o-dv-input {
    &.o-invalid {
      background-color: #ffdddd;
    }
    .error-icon {
      right: 7px;
      top: 7px;
    }
  }
`;class CriterionInput extends Component{static template="o-spreadsheet-CriterionInput";static props={value:{type:String,optional:true},criterionType:String,onValueChanged:Function,onKeyDown:{type:Function,optional:true},focused:{type:Boolean,optional:true},onBlur:{type:Function,optional:true},onFocus:{type:Function,optional:true},disableFormulas:{type:Boolean,optional:true},};static defaultProps={value:"",onKeyDown:()=>{},focused:false,onBlur:()=>{},};static components={StandaloneComposer:StandaloneComposer};inputRef=useRef("input");setup(){useEffect(()=>{if(this.props.focused){this.inputRef.el.focus();}},()=>[this.props.focused,this.inputRef.el]);}
state=useState({shouldDisplayError:!!this.props.value,});get placeholder(){if(this.allowedValues==="onlyFormulas"){return _t("Formula");}
else if(this.allowedValues==="onlyLiterals"){return _t("Value");}
return _t("Value or formula");}
get allowedValues(){const evaluator=criterionEvaluatorRegistry.get(this.props.criterionType);if(evaluator.allowedValues==="onlyFormulas"&&this.props.disableFormulas){throw new Error(`Cannot disable formulas for criterion type ${this.props.criterionType} that accept only formulas`);}
const allowedValues=this.props.disableFormulas?"onlyLiterals":evaluator.allowedValues;return allowedValues??"any";}
onInputValueChanged(ev){this.state.shouldDisplayError=true;this.props.onValueChanged(ev.target.value);}
onChangeComposerValue(str){this.state.shouldDisplayError=true;this.props.onValueChanged(str);}
getDataValidationRuleInputComposerProps(){return{onConfirm:(str)=>this.onChangeComposerValue(str),composerContent:this.props.value,placeholder:this.placeholder,class:"o-sidePanel-composer",defaultRangeSheetId:this.env.model.getters.getActiveSheetId(),invalid:this.state.shouldDisplayError&&!!this.errorMessage,defaultStatic:true,};}
get errorMessage(){if(!this.state.shouldDisplayError){return undefined;}
return this.env.model.getters.getDataValidationInvalidCriterionValueMessage(this.props.criterionType,canonicalizeContent(this.props.value,this.env.model.getters.getLocale()));}}
const DATES_VALUES={today:_t("today"),yesterday:_t("yesterday"),tomorrow:_t("tomorrow"),lastWeek:_t("in the past week"),lastMonth:_t("in the past month"),lastYear:_t("in the past year"),exactDate:_t("exact date"),};class DateCriterionForm extends CriterionForm{static template="o-spreadsheet-DataValidationDateCriterion";static components={CriterionInput};setup(){super.setup();const setupDefault=(props)=>{if(props.criterion.dateValue===undefined){this.updateCriterion({dateValue:"exactDate"});}};onWillUpdateProps(setupDefault);onWillStart(()=>setupDefault(this.props));}
onValueChanged(value){this.updateCriterion({values:[value]});}
onDateValueChanged(ev){const dateValue=ev.target.value;this.updateCriterion({dateValue});}
get dateValues(){return Object.keys(DATES_VALUES).map((key)=>({value:key,title:DATES_VALUES[key],}));}}
class DoubleInputCriterionForm extends CriterionForm{static template="o-spreadsheet-DoubleInputCriterionForm";static components={CriterionInput};onFirstValueChanged(value){const values=this.props.criterion.values;this.updateCriterion({values:[value,values[1]||""],});}
onSecondValueChanged(value){const values=this.props.criterion.values;this.updateCriterion({values:[values[0]||"",value],});}}
class SingleInputCriterionForm extends CriterionForm{static template="o-spreadsheet-SingleInputCriterionForm";static components={CriterionInput};onValueChanged(value){const criterion=deepCopy(this.props.criterion);criterion.values[0]=value;this.updateCriterion(criterion);}}
function startDnd(onPointerMove,onPointerUp){const removeListeners=()=>{window.removeEventListener("pointerup",_onPointerUp,{capture:true});window.removeEventListener("dragstart",_onDragStart);window.removeEventListener("pointermove",onPointerMove);window.removeEventListener("wheel",onPointerMove);};const _onPointerUp=(ev)=>{onPointerUp(ev);removeListeners();};function _onDragStart(ev){ev.preventDefault();}
window.addEventListener("pointerup",_onPointerUp,{capture:true});window.addEventListener("dragstart",_onDragStart);window.addEventListener("pointermove",onPointerMove);window.addEventListener("wheel",onPointerMove,{passive:false});return removeListeners;}
const LINE_VERTICAL_PADDING=1;const PICKER_PADDING=8;const ITEM_BORDER_WIDTH=1;const ITEM_EDGE_LENGTH=18;const ITEMS_PER_LINE=10;const MAGNIFIER_EDGE=16;const ITEM_GAP=2;const CONTENT_WIDTH=ITEMS_PER_LINE*(ITEM_EDGE_LENGTH+2*ITEM_BORDER_WIDTH)+(ITEMS_PER_LINE-1)*ITEM_GAP;const INNER_GRADIENT_WIDTH=CONTENT_WIDTH-2*ITEM_BORDER_WIDTH;const INNER_GRADIENT_HEIGHT=CONTENT_WIDTH-30-2*ITEM_BORDER_WIDTH;const CONTAINER_WIDTH=CONTENT_WIDTH+2*PICKER_PADDING;css`
  .o-color-picker {
    padding: ${PICKER_PADDING}px 0;
    /* FIXME: this is useless, overiden by the popover container */
    box-shadow: 1px 2px 5px 2px rgba(51, 51, 51, 0.15);
    background-color: white;
    line-height: 1.2;
    overflow-y: auto;
    overflow-x: hidden;
    width: ${CONTAINER_WIDTH}px;

    .o-color-picker-section-name {
      margin: 0px ${ITEM_BORDER_WIDTH}px;
      padding: 4px ${PICKER_PADDING}px;
    }
    .colors-grid {
      display: grid;
      padding: ${LINE_VERTICAL_PADDING}px ${PICKER_PADDING}px;
      grid-template-columns: repeat(${ITEMS_PER_LINE}, 1fr);
      grid-gap: ${ITEM_GAP}px;
    }
    .o-color-picker-toggler-button {
      display: flex;
      .o-color-picker-toggler-sign {
        display: flex;
        margin: auto auto;
        width: 55%;
        height: 55%;
        .o-icon {
          width: 100%;
          height: 100%;
        }
      }
    }
    .o-color-picker-line-item {
      width: ${ITEM_EDGE_LENGTH + 2 * ITEM_BORDER_WIDTH}px;
      height: ${ITEM_EDGE_LENGTH + 2 * ITEM_BORDER_WIDTH}px;
      margin: 0px;
      border-radius: 50px;
      border: ${ITEM_BORDER_WIDTH}px solid #666666;
      padding: 0px;
      font-size: 16px;
      background: white;
      &:hover {
        background-color: rgba(0, 0, 0, 0.08);
        outline: 1px solid gray;
        cursor: pointer;
      }
    }
    .o-buttons {
      padding: ${PICKER_PADDING}px;
      display: flex;
      .o-cancel {
        border: ${ITEM_BORDER_WIDTH}px solid #c0c0c0;
        width: 100%;
        padding: 5px;
        font-size: 14px;
        background: white;
        border-radius: 4px;
        &:hover:enabled {
          background-color: rgba(0, 0, 0, 0.08);
        }
      }
    }
    .o-add-button {
      border: ${ITEM_BORDER_WIDTH}px solid #c0c0c0;
      padding: 4px;
      background: white;
      border-radius: 4px;
      &:hover:enabled {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }
    .o-separator {
      border-bottom: ${MENU_SEPARATOR_BORDER_WIDTH}px solid ${SEPARATOR_COLOR};
      margin-top: ${MENU_SEPARATOR_PADDING}px;
      margin-bottom: ${MENU_SEPARATOR_PADDING}px;
    }

    .o-custom-selector {
      padding: ${PICKER_PADDING + 2}px ${PICKER_PADDING}px;
      position: relative;
      .o-gradient {
        margin-bottom: ${MAGNIFIER_EDGE / 2}px;
        border: ${ITEM_BORDER_WIDTH}px solid #c0c0c0;
        width: ${INNER_GRADIENT_WIDTH + 2 * ITEM_BORDER_WIDTH}px;
        height: ${INNER_GRADIENT_HEIGHT + 2 * ITEM_BORDER_WIDTH}px;
        position: relative;
      }

      .magnifier {
        height: ${MAGNIFIER_EDGE}px;
        width: ${MAGNIFIER_EDGE}px;
        border-radius: 50%;
        border: 2px solid #fff;
        box-shadow: 0px 0px 3px #c0c0c0;
        position: absolute;
        z-index: 2;
      }
      .saturation {
        background: linear-gradient(to right, #fff 0%, transparent 100%);
      }
      .lightness {
        background: linear-gradient(to top, #000 0%, transparent 100%);
      }
      .o-hue-picker {
        border: ${ITEM_BORDER_WIDTH}px solid #c0c0c0;
        width: 100%;
        height: 12px;
        border-radius: 4px;
        background: linear-gradient(
          to right,
          hsl(0 100% 50%) 0%,
          hsl(0.2turn 100% 50%) 20%,
          hsl(0.3turn 100% 50%) 30%,
          hsl(0.4turn 100% 50%) 40%,
          hsl(0.5turn 100% 50%) 50%,
          hsl(0.6turn 100% 50%) 60%,
          hsl(0.7turn 100% 50%) 70%,
          hsl(0.8turn 100% 50%) 80%,
          hsl(0.9turn 100% 50%) 90%,
          hsl(1turn 100% 50%) 100%
        );
        position: relative;
        cursor: crosshair;
      }
      .o-hue-slider {
        margin-top: -3px;
      }
      .o-custom-input-preview {
        padding: 2px 0px;
        display: flex;
        input {
          width: 50%;
          border-radius: 4px;
          padding: 4px 23px 4px 10px;
          height: 24px;
          border: 1px solid #c0c0c0;
          margin-right: 2px;
        }
        .o-wrong-color {
          /* FIXME bootstrap class instead? */
          outline-color: red;
          border-color: red;
          &:focus {
            outline-style: solid;
            outline-width: 1px;
          }
        }
      }
      .o-custom-input-buttons {
        padding: 2px 0px;
        display: flex;
        justify-content: end;
      }
      .o-color-preview {
        border: 1px solid #c0c0c0;
        border-radius: 4px;
        width: 50%;
      }
    }
  }
`;class ColorPicker extends Component{static template="o-spreadsheet-ColorPicker";static props={onColorPicked:Function,currentColor:{type:String,optional:true},maxHeight:{type:Number,optional:true},anchorRect:Object,disableNoColor:{type:Boolean,optional:true},};static defaultProps={currentColor:""};static components={Popover};COLORS=COLOR_PICKER_DEFAULTS;state=useState({showGradient:false,currentHslaColor:isColorValid(this.props.currentColor)?{...hexToHSLA(this.props.currentColor),a:1}:{h:0,s:100,l:100,a:1},customHexColor:isColorValid(this.props.currentColor)?toHex(this.props.currentColor):"",});get colorPickerStyle(){if(this.props.maxHeight!==undefined&&this.props.maxHeight<=0){return cssPropertiesToCss({display:"none"});}
return"";}
get popoverProps(){return{anchorRect:this.props.anchorRect,maxHeight:this.props.maxHeight,positioning:"bottom-left",verticalOffset:0,};}
get gradientHueStyle(){const hue=this.state.currentHslaColor?.h||0;return cssPropertiesToCss({background:`hsl(${hue} 100% 50%)`,});}
get sliderStyle(){const hue=this.state.currentHslaColor?.h||0;const delta=Math.round((hue/360)*INNER_GRADIENT_WIDTH);const left=clip(delta,1,INNER_GRADIENT_WIDTH)-ICON_EDGE_LENGTH/2;return cssPropertiesToCss({"margin-left":`${left}px`,});}
get pointerStyle(){const{s,l}=this.state.currentHslaColor||{s:0,l:0};const left=Math.round(INNER_GRADIENT_WIDTH*clip(s/100,0,1));const top=Math.round(INNER_GRADIENT_HEIGHT*clip(1-(2*l)/(200-s),0,1));return cssPropertiesToCss({left:`${-MAGNIFIER_EDGE / 2 + left}px`,top:`${-MAGNIFIER_EDGE / 2 + top}px`,background:hslaToHex(this.state.currentHslaColor),});}
get colorPreviewStyle(){return cssPropertiesToCss({"background-color":hslaToHex(this.state.currentHslaColor),});}
get checkmarkColor(){return chartFontColor(this.props.currentColor);}
get isHexColorInputValid(){return!this.state.customHexColor||isColorValid(this.state.customHexColor);}
setCustomGradient({x,y}){const offsetX=clip(x,0,INNER_GRADIENT_WIDTH);const offsetY=clip(y,0,INNER_GRADIENT_HEIGHT);const deltaX=offsetX/INNER_GRADIENT_WIDTH;const deltaY=offsetY/INNER_GRADIENT_HEIGHT;const s=100*deltaX;const l=100*(1-deltaY)*(1-0.5*deltaX);this.updateColor({s,l});}
setCustomHue(x){const h=Math.round(clip((360*x)/INNER_GRADIENT_WIDTH,0,359));this.updateColor({h});}
updateColor(newHsl){this.state.currentHslaColor={...this.state.currentHslaColor,...newHsl};this.state.customHexColor=hslaToHex(this.state.currentHslaColor);}
onColorClick(color){if(color){this.props.onColorPicked(toHex(color));}}
resetColor(){this.props.onColorPicked("");}
toggleColorPicker(){this.state.showGradient=!this.state.showGradient;}
dragGradientPointer(ev){const initialGradientCoordinates={x:ev.offsetX,y:ev.offsetY};this.setCustomGradient(initialGradientCoordinates);const initialMousePosition={x:ev.clientX,y:ev.clientY};const onMouseMove=(ev)=>{const currentMousePosition={x:ev.clientX,y:ev.clientY};const deltaX=currentMousePosition.x-initialMousePosition.x;const deltaY=currentMousePosition.y-initialMousePosition.y;const currentGradientCoordinates={x:initialGradientCoordinates.x+deltaX,y:initialGradientCoordinates.y+deltaY,};this.setCustomGradient(currentGradientCoordinates);};startDnd(onMouseMove,()=>{});}
dragHuePointer(ev){const initialX=ev.offsetX;const initialMouseX=ev.clientX;this.setCustomHue(initialX);const onMouseMove=(ev)=>{const currentMouseX=ev.clientX;const deltaX=currentMouseX-initialMouseX;const x=initialX+deltaX;this.setCustomHue(x);};startDnd(onMouseMove,()=>{});}
setHexColor(ev){const val=ev.target.value.replace("##","#").slice(0,7);this.state.customHexColor=val;if(!isColorValid(val));else{this.state.currentHslaColor={...hexToHSLA(val),a:1};}}
addCustomColor(ev){if(!isHSLAValid(this.state.currentHslaColor)||!isColorValid(this.state.customHexColor)){return;}
this.props.onColorPicked(toHex(this.state.customHexColor));}
isSameColor(color1,color2){return isSameColor(color1,color2);}}
class Section extends Component{static template="o_spreadsheet.Section";static props={class:{type:String,optional:true},title:{type:String,optional:true},slots:Object,};}
const TRANSPARENT_BACKGROUND_SVG=`
<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10">
  <path fill="#d9d9d9" d="M5 5h5v5H5zH0V0h5"/>
</svg>
`;css`
  .o-round-color-picker-button {
    width: 20px;
    height: 20px;
    cursor: pointer;
    border: 1px solid ${GRAY_300};
    background-position: 1px 1px;
    background-image: url("data:image/svg+xml,${encodeURIComponent(TRANSPARENT_BACKGROUND_SVG)}");
  }
`;class RoundColorPicker extends Component{static template="o-spreadsheet.RoundColorPicker";static components={Section,ColorPicker};static props={currentColor:{type:String,optional:true},title:{type:String,optional:true},onColorPicked:Function,disableNoColor:{type:Boolean,optional:true},};colorPickerButtonRef=useRef("colorPickerButton");state;setup(){this.state=useState({pickerOpened:false});useExternalListener(window,"click",this.closePicker);}
closePicker(){this.state.pickerOpened=false;}
togglePicker(){this.state.pickerOpened=!this.state.pickerOpened;}
onColorPicked(color){this.props.onColorPicked(color);this.state.pickerOpened=false;}
get colorPickerAnchorRect(){const button=this.colorPickerButtonRef.el;return getBoundingRectAsPOJO(button);}
get buttonStyle(){return cssPropertiesToCss({background:this.props.currentColor,});}}
css`
  .o-dv-list-item-delete {
    color: #666666;
    cursor: pointer;
  }
`;class ListCriterionForm extends CriterionForm{static template="o-spreadsheet-ListCriterionForm";static components={CriterionInput,RoundColorPicker};state=useState({numberOfValues:Math.max(this.props.criterion.values.length,2),});setup(){super.setup();const setupDefault=(props)=>{if(props.criterion.displayStyle===undefined){this.updateCriterion({displayStyle:"chip"});}};onWillUpdateProps(setupDefault);onWillStart(()=>setupDefault(this.props));}
onValueChanged(value,index){const values=[...this.displayedValues];values[index]=value;this.updateCriterion({values});}
onColorChanged(color,value){const colors={...this.props.criterion.colors};colors[value]=color||undefined;this.updateCriterion({colors});}
onAddAnotherValue(){this.state.numberOfValues++;}
removeItem(index){const values=[...this.displayedValues];values.splice(index,1);this.state.numberOfValues--;this.updateCriterion({values});}
onChangedDisplayStyle(ev){const displayStyle=ev.target.value;this.updateCriterion({displayStyle});}
onKeyDown(ev,index){if((ev.key==="Enter"||ev.key==="Tab")&&index===this.state.numberOfValues-1){this.onAddAnotherValue();this.state.focusedValueIndex=index+1;ev.preventDefault();}
else if(ev.key==="Enter"){this.state.focusedValueIndex=index+1;}}
onBlurInput(){this.state.focusedValueIndex=undefined;}
get displayedValues(){const values=[];for(let i=0;i<this.state.numberOfValues;i++){values.push(this.props.criterion.values[i]||"");}
return values;}}
function useDragAndDropListItems(){let dndHelper;const previousCursor=document.body.style.cursor;let cleanupFns=[];const cleanUp=()=>{dndHelper=undefined;document.body.style.cursor=previousCursor;cleanupFns.forEach((fn)=>fn());cleanupFns=[];};const start=(direction,args)=>{const onChange=()=>{document.body.style.cursor="move";if(!dndHelper)
return;Object.assign(state.itemsStyle,dndHelper.getItemStyles());args.onChange?.();};state.cancel=()=>{state.draggedItemId=undefined;state.itemsStyle={};document.body.style.cursor=previousCursor;args.onCancel?.();cleanUp();};const onDragEnd=(itemId,indexAtEnd)=>{state.draggedItemId=undefined;state.itemsStyle={};document.body.style.cursor=previousCursor;args.onDragEnd?.(itemId,indexAtEnd);cleanUp();};document.body.style.cursor="move";state.draggedItemId=args.draggedItemId;const container=direction==="horizontal"?new HorizontalContainer(args.scrollableContainerEl):new VerticalContainer(args.scrollableContainerEl);dndHelper=new DOMDndHelper({...args,container,onChange,onDragEnd,onCancel:state.cancel,});const stopListening=startDnd(dndHelper.onMouseMove.bind(dndHelper),dndHelper.onMouseUp.bind(dndHelper));cleanupFns.push(stopListening);const onScroll=dndHelper.onScroll.bind(dndHelper);args.scrollableContainerEl.addEventListener("scroll",onScroll);cleanupFns.push(()=>args.scrollableContainerEl.removeEventListener("scroll",onScroll));cleanupFns.push(dndHelper.destroy.bind(dndHelper));};onWillUnmount(()=>{cleanUp();});const state=useState({itemsStyle:{},draggedItemId:undefined,start,cancel:()=>{},});return state;}
class DOMDndHelper{draggedItemId;items;container;initialMousePosition;currentMousePosition;initialScroll;minPosition;maxPosition;edgeScrollIntervalId;onChange;onCancel;onDragEnd;deadZone;constructor(args){this.items=args.items.map((item)=>({...item,positionAtStart:item.position}));this.draggedItemId=args.draggedItemId;this.container=args.container;this.onChange=args.onChange;this.onCancel=args.onCancel;this.onDragEnd=args.onDragEnd;this.initialMousePosition=args.initialMousePosition;this.currentMousePosition=args.initialMousePosition;this.initialScroll=this.container.scroll;this.minPosition=this.items[0].position;this.maxPosition=this.items[this.items.length-1].position+this.items[this.items.length-1].size;}
getItemStyles(){const styles={};for(const item of this.items){styles[item.id]=this.getItemStyle(item.id);}
return styles;}
getItemStyle(itemId){const position=this.container.cssPositionProperty;const style={};style.position="relative";style[position]=(this.getItemsPositions()[itemId]||0)+"px";style.transition=`${position} 0.5s`;style["pointer-events"]="none";if(this.draggedItemId===itemId){style.transition=`${position} 0s`;style["z-index"]="1000";}
return cssPropertiesToCss(style);}
onScroll(){this.moveDraggedItemToPosition(this.currentMousePosition+this.scrollOffset);}
onMouseMove(ev){if(ev.button>1){this.onCancel();return;}
const mousePosition=this.container.getMousePosition(ev);this.currentMousePosition=mousePosition;if(mousePosition<this.container.start||mousePosition>this.container.end){this.startEdgeScroll(mousePosition<this.container.start?-1:1);return;}
else{this.stopEdgeScroll();}
this.moveDraggedItemToPosition(mousePosition+this.scrollOffset);}
moveDraggedItemToPosition(position){const hoveredItemIndex=this.getHoveredItemIndex(position,this.items);const draggedItemIndex=this.items.findIndex((item)=>item.id===this.draggedItemId);const draggedItem=this.items[draggedItemIndex];if(this.deadZone&&this.isInZone(position,this.deadZone)){this.onChange(this.getItemsPositions());return;}
else if(this.isInZone(position,{start:draggedItem.position,end:draggedItem.position+draggedItem.size,})){this.deadZone=undefined;}
if(draggedItemIndex===hoveredItemIndex){this.onChange(this.getItemsPositions());return;}
const startIndex=Math.min(draggedItemIndex,hoveredItemIndex);const endIndex=Math.max(draggedItemIndex,hoveredItemIndex);const direction=Math.sign(hoveredItemIndex-draggedItemIndex);let draggedItemMoveSize=0;for(let i=startIndex;i<=endIndex;i++){if(i===draggedItemIndex){continue;}
this.items[i].position-=direction*draggedItem.size;draggedItemMoveSize+=this.items[i].size;}
draggedItem.position+=direction*draggedItemMoveSize;this.items.sort((item1,item2)=>item1.position-item2.position);this.deadZone=direction>0?{start:position,end:draggedItem.position}:{start:draggedItem.position+draggedItem.size,end:position};this.onChange(this.getItemsPositions());}
onMouseUp(ev){if(ev.button!==0){this.onCancel();}
ev.stopPropagation();ev.preventDefault();const targetItemIndex=this.items.findIndex((item)=>item.id===this.draggedItemId);this.onDragEnd(this.draggedItemId,targetItemIndex);this.stopEdgeScroll();return false;}
startEdgeScroll(direction){if(this.edgeScrollIntervalId)
return;this.edgeScrollIntervalId=window.setInterval(()=>{const offset=direction*3;this.container.scroll+=offset;},5);}
stopEdgeScroll(){window.clearInterval(this.edgeScrollIntervalId);this.edgeScrollIntervalId=undefined;}
getHoveredItemIndex(mousePosition,items){if(mousePosition<=this.minPosition)
return 0;if(mousePosition>=this.maxPosition)
return items.length-1;return items.findIndex((item)=>item.position+item.size>=mousePosition);}
getItemsPositions(){const positions={};for(const item of this.items){if(item.id!==this.draggedItemId){positions[item.id]=item.position-item.positionAtStart;continue;}
const mouseOffset=this.currentMousePosition-this.initialMousePosition;let start=mouseOffset+this.scrollOffset;start=Math.max(this.minPosition-item.positionAtStart,start);start=Math.min(this.maxPosition-item.positionAtStart-item.size,start);positions[item.id]=start;}
return positions;}
isInZone(position,zone){return position>=zone.start&&position<=zone.end;}
get scrollOffset(){return this.container.scroll-this.initialScroll;}
destroy(){this.stopEdgeScroll();}}
class ContainerWrapper{el;constructor(el){this.el=el;}
get containerRect(){return this.el.getBoundingClientRect();}}
class VerticalContainer extends ContainerWrapper{get start(){return this.containerRect.top;}
get end(){return this.containerRect.bottom;}
get cssPositionProperty(){return"top";}
get scroll(){return this.el.scrollTop;}
set scroll(scroll){this.el.scrollTop=scroll;}
getMousePosition(ev){return ev.clientY;}}
class HorizontalContainer extends ContainerWrapper{get start(){return this.containerRect.left;}
get end(){return this.containerRect.right;}
get cssPositionProperty(){return"left";}
get scroll(){return this.el.scrollLeft;}
set scroll(scroll){this.el.scrollLeft=scroll;}
getMousePosition(ev){return ev.clientX;}}
class FocusStore{mutators=["focus","unfocus"];focusedElement=null;focus(element){this.focusedElement=element;}
unfocus(element){if(this.focusedElement&&this.focusedElement===element){this.focusedElement=null;}}}
class SelectionInputStore extends SpreadsheetStore{initialRanges;inputHasSingleRange;colors;disabledRanges;mutators=["resetWithRanges","focusById","unfocus","addEmptyRange","removeRange","changeRange","reset","confirm","updateColors","updateDisabledRanges",];ranges=[];focusedRangeIndex=null;inputSheetId;focusStore=this.get(FocusStore);highlightStore=this.get(HighlightStore);constructor(get,initialRanges=[],inputHasSingleRange=false,colors=[],disabledRanges=[]){super(get);this.initialRanges=initialRanges;this.inputHasSingleRange=inputHasSingleRange;this.colors=colors;this.disabledRanges=disabledRanges;if(inputHasSingleRange&&initialRanges.length>1){throw new Error("Input with a single range cannot be instantiated with several range references.");}
this.inputSheetId=this.getters.getActiveSheetId();this.resetWithRanges(initialRanges);this.highlightStore.register(this);this.onDispose(()=>{this.unfocus();this.highlightStore.unRegister(this);});}
handleEvent(event){if(this.focusedRangeIndex===null){return;}
const inputSheetId=this.inputSheetId;const activeSheetId=this.getters.getActiveSheetId();const zone=event.options.unbounded?this.getters.getUnboundedZone(activeSheetId,event.anchor.zone):event.anchor.zone;const range=this.getters.getRangeFromZone(activeSheetId,zone);const willAddNewRange=event.mode==="newAnchor"&&!this.inputHasSingleRange&&this.ranges[this.focusedRangeIndex].xc.trim()!=="";if(willAddNewRange){const xc=this.getters.getSelectionRangeString(range,inputSheetId);this.insertNewRange(this.ranges.length,[xc]);this.focusLast();}
else{let parts=range.parts;const previousXc=this.ranges[this.focusedRangeIndex].xc.trim();if(previousXc){parts=this.getters.getRangeFromSheetXC(inputSheetId,previousXc).parts;}
const newRange={...range,parts};const xc=this.getters.getSelectionRangeString(newRange,inputSheetId);this.setRange(this.focusedRangeIndex,[xc]);}}
handle(cmd){switch(cmd.type){case"ACTIVATE_SHEET":{if(cmd.sheetIdFrom!==cmd.sheetIdTo){const{col,row}=this.getters.getNextVisibleCellPosition({sheetId:cmd.sheetIdTo,col:0,row:0,});const zone=this.getters.expandZone(cmd.sheetIdTo,positionToZone({col,row}));this.model.selection.resetAnchor(this,{cell:{col,row},zone});}
break;}
case"START_CHANGE_HIGHLIGHT":const activeSheetId=this.getters.getActiveSheetId();const newZone=this.getters.expandZone(activeSheetId,cmd.zone);const focusIndex=this.ranges.findIndex((range)=>{const{xc,sheetName:sheet}=splitReference(range.xc);const sheetName=sheet||this.getters.getSheetName(this.inputSheetId);if(this.getters.getSheetName(activeSheetId)!==sheetName){return false;}
const refRange=this.getters.getRangeFromSheetXC(activeSheetId,xc);return isEqual(this.getters.expandZone(activeSheetId,refRange.zone),newZone);});if(focusIndex!==-1){this.focus(focusIndex);const{left,top}=newZone;this.model.selection.resetAnchor(this,{cell:{col:left,row:top},zone:newZone,});}
break;}}
changeRange(rangeId,value){if(this.inputHasSingleRange&&value.split(",").length>1){return;}
const index=this.getIndex(rangeId);if(index!==null&&this.focusedRangeIndex!==index){this.focus(index);}
if(index!==null){const valueWithoutLeadingComma=value.replace(/^,+/,"");const values=valueWithoutLeadingComma.split(",").map((reference)=>reference.trim());this.setRange(index,values);this.captureSelection();}}
addEmptyRange(){if(this.inputHasSingleRange&&this.ranges.length===1){return;}
this.insertNewRange(this.ranges.length,[""]);this.focusLast();}
removeRange(rangeId){if(this.ranges.length===1){return;}
const index=this.getIndex(rangeId);if(index!==null){this.removeRangeByIndex(index);}}
updateColors(colors){this.colors=colors;const colorGenerator=new ColorGenerator(this.ranges.length,this.colors);this.ranges=this.ranges.map((range)=>({...range,color:colorGenerator.next(),}));}
updateDisabledRanges(disabledRanges){this.disabledRanges=disabledRanges;}
confirm(){for(const range of this.selectionInputs){if(range.xc===""){this.removeRange(range.id);}}
const activeSheetId=this.getters.getActiveSheetId();if(this.inputSheetId!==activeSheetId){this.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:activeSheetId,sheetIdTo:this.inputSheetId,});}
if(this.selectionInputValues.join()!==this.initialRanges.join()){this.resetWithRanges(this.selectionInputValues);}
this.initialRanges=this.selectionInputValues;this.unfocus();}
reset(){this.resetWithRanges(this.initialRanges);this.confirm();}
get selectionInputValues(){return this.cleanInputs(this.ranges.map((range)=>{return range.xc?range.xc:"";}));}
get selectionInputs(){return this.ranges.map((input,index)=>Object.assign({},input,{color:this.hasMainFocus&&this.focusedRangeIndex!==null&&this.getters.isRangeValid(input.xc)?input.color:null,isFocused:this.hasMainFocus&&this.focusedRangeIndex===index,isValidRange:input.xc===""||this.getters.isRangeValid(input.xc),disabled:this.disabledRanges?.[index],}));}
get isResettable(){return this.initialRanges.join()!==this.ranges.map((r)=>r.xc).join();}
get isConfirmable(){return this.selectionInputs.every((range)=>range.isValidRange);}
get hasFocus(){return this.selectionInputs.some((i)=>i.isFocused);}
get hasMainFocus(){const focusedElement=this.focusStore.focusedElement;return!!focusedElement&&focusedElement===this;}
get highlights(){if(!this.hasMainFocus){return[];}
return this.ranges.map((input)=>this.inputToHighlights(input)).flat();}
focusById(rangeId){this.focus(this.getIndex(rangeId));}
focus(index){this.focusStore.focus(this);this.focusedRangeIndex=index;this.captureSelection();}
focusLast(){this.focus(this.ranges.length-1);}
unfocus(){this.focusedRangeIndex=null;this.focusStore.unfocus(this);this.model.selection.release(this);}
captureSelection(){if(this.focusedRangeIndex===null){return;}
const range=this.ranges[this.focusedRangeIndex];const sheetId=this.getters.getActiveSheetId();const zone=this.getters.getRangeFromSheetXC(sheetId,range?.xc||"A1").zone;this.model.selection.capture(this,{cell:{col:zone.left,row:zone.top},zone},{handleEvent:this.handleEvent.bind(this),release:this.unfocus.bind(this),});}
resetWithRanges(ranges){if(ranges.length&&ranges.every((r)=>this.getters.isRangeValid(r))){this.initialRanges=ranges;}
this.ranges=[];this.insertNewRange(0,ranges);if(this.ranges.length===0){this.insertNewRange(this.ranges.length,[""]);this.focusLast();}}
setContent(index,xc){this.ranges[index]={...this.ranges[index],xc,};}
insertNewRange(index,values){const currentMaxId=Math.max(0,...this.ranges.map((range)=>Number(range.id)));const colors=new ColorGenerator(this.ranges.length,this.colors);for(let i=0;i<index;i++){colors.next();}
this.ranges.splice(index,0,...values.map((xc,i)=>({xc,id:currentMaxId+i+1,color:colors.next(),})));}
setRange(index,values){const[,...additionalValues]=values;this.setContent(index,values[0]);this.insertNewRange(index+1,additionalValues);if(additionalValues.length){this.focus(index+additionalValues.length);}}
removeRangeByIndex(index){this.ranges.splice(index,1);if(this.focusedRangeIndex!==null){this.focusLast();}}
inputToHighlights({xc,color}){const XCs=this.cleanInputs([xc]).filter((range)=>this.getters.isRangeValid(range)).filter((reference)=>this.shouldBeHighlighted(this.inputSheetId,reference));return XCs.map((xc)=>{const{sheetName}=splitReference(xc);const sheetId=(sheetName&&this.getters.getSheetIdByName(sheetName))||this.inputSheetId;return{range:this.getters.getRangeFromSheetXC(sheetId,xc),color,interactive:true,};});}
cleanInputs(ranges){return ranges.map((xc)=>xc.split(",")).flat().map((xc)=>xc.trim()).filter((xc)=>xc!=="");}
shouldBeHighlighted(inputSheetId,reference){const{sheetName}=splitReference(reference);const sheetId=this.getters.getSheetIdByName(sheetName);const activeSheetId=this.getters.getActiveSheet().id;const valid=this.getters.isRangeValid(reference);return(valid&&(sheetId===activeSheetId||(sheetId===undefined&&activeSheetId===inputSheetId)));}
getIndex(rangeId){const index=this.ranges.findIndex((range)=>range.id===rangeId);return index>=0?index:null;}}
css`
  .o-selection {
    .o-selection-input {
      padding: 2px 0px;

      input.o-invalid {
        background-color: ${ALERT_DANGER_BG};
      }
      .input-icon {
        right: 7px;
        top: 4px;
      }
      .o-drag-handle {
        cursor: move;
      }
    }
    .o-disabled-ranges {
      color: #888 !important;
    }
    .o-button {
      flex-grow: 0;
    }

    /* Make the character a bit bigger
    compared to its neighbor INPUT box  */
    .o-remove-selection {
      font-size: calc(100% + 4px);
    }
  }
`;class SelectionInput extends Component{static template="o-spreadsheet-SelectionInput";static props={ranges:Array,hasSingleRange:{type:Boolean,optional:true},required:{type:Boolean,optional:true},isInvalid:{type:Boolean,optional:true},class:{type:String,optional:true},onSelectionChanged:{type:Function,optional:true},onSelectionConfirmed:{type:Function,optional:true},onSelectionReordered:{type:Function,optional:true},onSelectionRemoved:{type:Function,optional:true},colors:{type:Array,optional:true,default:[]},disabledRanges:{type:Array,optional:true,default:[]},disabledRangeTitle:{type:String,optional:true},};state=useState({isMissing:false,mode:"select-range",});dragAndDrop=useDragAndDropListItems();focusedInput=useRef("focusedInput");selectionRef=useRef("o-selection");store;get ranges(){return this.store.selectionInputs;}
get canAddRange(){return!this.props.hasSingleRange;}
get isInvalid(){return this.props.isInvalid||this.state.isMissing;}
get isConfirmable(){return this.store.isConfirmable;}
get isResettable(){return this.store.isResettable;}
get hasDisabledRanges(){return this.store.disabledRanges.some(Boolean);}
setup(){useEffect(()=>this.focusedInput.el?.focus(),()=>[this.focusedInput.el]);this.store=useLocalStore(SelectionInputStore,this.props.ranges,this.props.hasSingleRange||false,this.props.colors,this.props.disabledRanges);onWillUpdateProps((nextProps)=>{if(nextProps.ranges.join()!==this.store.selectionInputValues.join()){this.triggerChange();}
if(nextProps.ranges.join()!==this.props.ranges.join()&&nextProps.ranges.join()!==this.store.selectionInputValues.join()){this.store.resetWithRanges(nextProps.ranges);}
if(nextProps.colors?.join()!==this.props.colors?.join()&&nextProps.colors?.join()!==this.store.colors.join()){this.store.updateColors(nextProps.colors||[]);}
if(!deepEquals(nextProps.disabledRanges,this.props.disabledRanges)&&!deepEquals(nextProps.disabledRanges,this.store.disabledRanges)){this.store.updateDisabledRanges(nextProps.disabledRanges||[]);}});}
startDragAndDrop(rangeId,event){if(event.button!==0||event.target.tagName==="SELECT"){return;}
const rects=this.getRangeElementsRects();const draggableIds=this.ranges.map((range)=>range.id);const draggableItems=draggableIds.map((id,index)=>({id:id.toString(),size:rects[index].height,position:rects[index].y,}));this.dragAndDrop.start("vertical",{draggedItemId:rangeId.toString(),initialMousePosition:event.clientY,items:draggableItems,scrollableContainerEl:this.selectionRef.el,onDragEnd:(dimensionName,finalIndex)=>{const originalIndex=draggableIds.findIndex((id)=>id===rangeId);if(originalIndex===finalIndex){return;}
const indexes=range(0,draggableIds.length);indexes.splice(originalIndex,1);indexes.splice(finalIndex,0,originalIndex);this.props.onSelectionReordered?.(indexes);this.props.onSelectionConfirmed?.();this.store.confirm();},});}
getRangeElementsRects(){return Array.from(this.selectionRef.el.children).map((el)=>el.getBoundingClientRect());}
getColor(range){if(!range.color){return"";}
return cssPropertiesToCss({color:range.color});}
triggerChange(){const ranges=this.store.selectionInputValues;this.props.onSelectionChanged?.(ranges);}
onKeydown(ev){if(ev.key==="F2"){ev.preventDefault();ev.stopPropagation();this.state.mode=this.state.mode==="select-range"?"text-edit":"select-range";}
else if(ev.key.startsWith("Arrow")){ev.stopPropagation();if(this.state.mode==="select-range"){ev.preventDefault();updateSelectionWithArrowKeys(ev,this.env.model.selection);}}
else if(ev.key==="Enter"){const target=ev.target;target.blur();if(this.isConfirmable){this.confirm();}}}
extractRanges(value){return this.props.hasSingleRange?value.split(",")[0]:value;}
focus(rangeId){this.state.isMissing=false;this.state.mode="select-range";this.store.focusById(rangeId);}
addEmptyInput(){this.store.addEmptyRange();}
removeInput(rangeId){const index=this.store.selectionInputs.findIndex((range)=>range.id===rangeId);if(this.ranges.find((range)=>range.id===rangeId)?.xc){this.props.onSelectionRemoved?.(index);this.props.onSelectionConfirmed?.();}
this.store.removeRange(rangeId);}
onInputChanged(rangeId,ev){const target=ev.target;const value=this.extractRanges(target.value);this.store.changeRange(rangeId,value);this.triggerChange();}
reset(){this.store.reset();this.triggerChange();}
confirm(){this.store.confirm();const anyValidInput=this.store.selectionInputs.some((range)=>this.env.model.getters.isRangeValid(range.xc));if(this.props.required&&!anyValidInput){this.state.isMissing=true;}
this.props.onSelectionChanged?.(this.store.selectionInputValues);this.props.onSelectionConfirmed?.();}}
class ValueInRangeCriterionForm extends CriterionForm{static template="o-spreadsheet-ValueInRangeCriterionForm";static components={RoundColorPicker,SelectionInput};setup(){super.setup();const setupDefault=(props)=>{if(props.criterion.displayStyle===undefined){this.updateCriterion({displayStyle:"chip"});}};onWillUpdateProps(setupDefault);onWillStart(()=>setupDefault(this.props));}
onRangeChanged(rangeXc){this.updateCriterion({values:[rangeXc]});}
onChangedDisplayStyle(ev){const displayStyle=ev.target.value;this.updateCriterion({displayStyle});}
onColorChanged(color,value){const colors={...this.props.criterion.colors};colors[value]=color||undefined;this.updateCriterion({colors});}
get values(){const sheetId=this.env.model.getters.getActiveSheetId();const values=this.env.model.getters.getDataValidationRangeValues(sheetId,this.props.criterion);return new Set(values);}}
const criterionCategoriesSequences={list:10,text:20,date:30,number:40,misc:50,};const criterionComponentRegistry=new Registry();criterionComponentRegistry.add("containsText",{type:"containsText",component:SingleInputCriterionForm,category:"text",sequence:10,});criterionComponentRegistry.add("notContainsText",{type:"notContainsText",component:SingleInputCriterionForm,category:"text",sequence:20,});criterionComponentRegistry.add("beginsWithText",{type:"beginsWithText",component:SingleInputCriterionForm,category:"text",sequence:25,});criterionComponentRegistry.add("endsWithText",{type:"endsWithText",component:SingleInputCriterionForm,category:"text",sequence:26,});criterionComponentRegistry.add("isEqualText",{type:"isEqualText",component:SingleInputCriterionForm,category:"text",sequence:30,});criterionComponentRegistry.add("isEmail",{type:"isEmail",component:undefined,category:"text",sequence:40,});criterionComponentRegistry.add("isLink",{type:"isLink",component:undefined,category:"text",sequence:50,});criterionComponentRegistry.add("dateIs",{type:"dateIs",component:DateCriterionForm,category:"date",sequence:20,});criterionComponentRegistry.add("dateIsBefore",{type:"dateIsBefore",component:DateCriterionForm,category:"date",sequence:30,});criterionComponentRegistry.add("dateIsOnOrBefore",{type:"dateIsOnOrBefore",component:DateCriterionForm,category:"date",sequence:40,});criterionComponentRegistry.add("dateIsAfter",{type:"dateIsAfter",component:DateCriterionForm,category:"date",sequence:50,});criterionComponentRegistry.add("dateIsOnOrAfter",{type:"dateIsOnOrAfter",component:DateCriterionForm,category:"date",sequence:60,});criterionComponentRegistry.add("dateIsBetween",{type:"dateIsBetween",component:DoubleInputCriterionForm,category:"date",sequence:70,});criterionComponentRegistry.add("dateIsNotBetween",{type:"dateIsNotBetween",component:DoubleInputCriterionForm,category:"date",sequence:80,});criterionComponentRegistry.add("dateIsValid",{type:"dateIsValid",component:undefined,category:"date",sequence:10,});criterionComponentRegistry.add("isEqual",{type:"isEqual",component:SingleInputCriterionForm,category:"number",sequence:10,});criterionComponentRegistry.add("isNotEqual",{type:"isNotEqual",component:SingleInputCriterionForm,category:"number",sequence:20,});criterionComponentRegistry.add("isGreaterThan",{type:"isGreaterThan",component:SingleInputCriterionForm,category:"number",sequence:50,});criterionComponentRegistry.add("isGreaterOrEqualTo",{type:"isGreaterOrEqualTo",component:SingleInputCriterionForm,category:"number",sequence:60,});criterionComponentRegistry.add("isLessThan",{type:"isLessThan",component:SingleInputCriterionForm,category:"number",sequence:30,});criterionComponentRegistry.add("isLessOrEqualTo",{type:"isLessOrEqualTo",component:SingleInputCriterionForm,category:"number",sequence:40,});criterionComponentRegistry.add("isBetween",{type:"isBetween",component:DoubleInputCriterionForm,category:"number",sequence:70,});criterionComponentRegistry.add("isNotBetween",{type:"isNotBetween",component:DoubleInputCriterionForm,category:"number",sequence:80,});criterionComponentRegistry.add("isBoolean",{type:"isBoolean",component:undefined,category:"misc",sequence:10,});criterionComponentRegistry.add("isValueInList",{type:"isValueInList",component:ListCriterionForm,category:"list",sequence:10,});criterionComponentRegistry.add("isValueInRange",{type:"isValueInRange",component:ValueInRangeCriterionForm,category:"list",sequence:20,});criterionComponentRegistry.add("customFormula",{type:"customFormula",component:SingleInputCriterionForm,category:"misc",sequence:20,});criterionComponentRegistry.add("isEmpty",{type:"isEmpty",component:undefined,category:"misc",sequence:5,});criterionComponentRegistry.add("isNotEmpty",{type:"isNotEmpty",component:undefined,category:"misc",sequence:6,});function getCriterionMenuItems(callback,availableTypes){const items=criterionComponentRegistry.getAll().filter((item)=>availableTypes.has(item.type)).sort((a,b)=>{if(a.category===b.category){return a.sequence-b.sequence;}
return criterionCategoriesSequences[a.category]-criterionCategoriesSequences[b.category];});const actionSpecs=items.map((item,index)=>{const evaluator=criterionEvaluatorRegistry.get(item.type);return{name:evaluator.name,id:item.type,separator:item.category!==items[index+1]?.category,execute:()=>callback(item.type),};});return createActions(actionSpecs);}
class SelectMenu extends Component{static template="o-spreadsheet-SelectMenu";static props={menuItems:Array,selectedValue:String,class:{type:String,optional:true},};static components={MenuPopover};menuId=new UuidGenerator().uuidv4();selectRef=useRef("select");state=useState({isMenuOpen:false,});onClick(ev){if(ev.closedMenuId===this.menuId){return;}
this.state.isMenuOpen=!this.state.isMenuOpen;}
onMenuClosed(){this.state.isMenuOpen=false;}
get menuAnchorRect(){return getRefBoundingRect(this.selectRef);}}
class FilterMenuCriterion extends Component{static template="o-spreadsheet-FilterMenuCriterion";static props={filterPosition:Object,onCriterionChanged:Function,criterionOperators:Array,};static components={SelectMenu};state;setup(){onWillUpdateProps((nextProps)=>{if(!deepEquals(nextProps.filterPosition,this.props.filterPosition)){this.state.criterion=this.getFilterCriterionValue(nextProps.filterPosition);}});this.state=useState({criterion:this.getFilterCriterionValue(this.props.filterPosition),});}
getFilterCriterionValue(position){const sheetId=this.env.model.getters.getActiveSheetId();const filterValue=this.env.model.getters.getFilterCriterionValue({sheetId,...position});return filterValue?.filterType==="criterion"?deepCopy(filterValue):{filterType:"criterion",type:"none",values:[]};}
get criterionMenuItems(){const noCriterionMenuItem=createAction({name:_t("None"),id:"none",separator:true,execute:()=>this.onCriterionTypeChange("none"),});return[noCriterionMenuItem,...getCriterionMenuItems((type)=>this.onCriterionTypeChange(type),new Set(this.props.criterionOperators)),];}
get selectedCriterionName(){return this.state.criterion.type==="none"?_t("None"):criterionEvaluatorRegistry.get(this.state.criterion.type).name;}
get criterionComponent(){return this.state.criterion.type==="none"?undefined:criterionComponentRegistry.get(this.state.criterion.type).component;}
onCriterionChanged(criterion){this.state.criterion.values=criterion.values;this.state.criterion.dateValue=criterion.dateValue;this.props.onCriterionChanged(this.state.criterion);}
onCriterionTypeChange(type){this.state.criterion.type=type;this.props.onCriterionChanged(this.state.criterion);}}
const CHECK_SVG=`
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'>
  <path fill='none' stroke='#FFF' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/>
</svg>
`;const CHECKBOX_WIDTH=14;css`
  label.o-checkbox {
    input {
      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: none;
      border-radius: 0;
      width: ${CHECKBOX_WIDTH}px;
      height: ${CHECKBOX_WIDTH}px;
      vertical-align: top;
      outline: none;
      border: 1px solid ${GRAY_300};
      cursor: pointer;

      &:hover {
        border-color: ${ACTION_COLOR};
      }

      &:checked {
        background: url("data:image/svg+xml,${encodeURIComponent(CHECK_SVG)}");
        background-color: ${ACTION_COLOR};
        border-color: ${ACTION_COLOR};
      }

      &:focus {
        outline: none;
        box-shadow: 0 0 0 0.25rem rgba(113, 75, 103, 0.25);
        border-color: ${ACTION_COLOR};
      }
    }
  }
`;class Checkbox extends Component{static template="o-spreadsheet.Checkbox";static props={label:{type:String,optional:true},value:{type:Boolean,optional:true},className:{type:String,optional:true},name:{type:String,optional:true},title:{type:String,optional:true},disabled:{type:Boolean,optional:true},onChange:Function,};static defaultProps={value:false};onChange(ev){const value=ev.target.checked;this.props.onChange(value);}}
class FilterMenuValueItem extends Component{static template="o-spreadsheet-FilterMenuValueItem";static components={Checkbox};static props={value:String,isChecked:Boolean,isSelected:Boolean,onMouseMove:Function,onClick:Function,scrolledTo:{type:String,optional:true},};itemRef=useRef("menuValueItem");setup(){onWillPatch(()=>{if(this.props.scrolledTo){this.scrollListToSelectedValue();}});}
scrollListToSelectedValue(){if(!this.itemRef.el){return;}
this.itemRef.el.scrollIntoView?.({block:this.props.scrolledTo==="bottom"?"end":"start",});}}
class FilterMenuValueList extends Component{static template="o-spreadsheet-FilterMenuValueList";static props={filterPosition:Object,onUpdateHiddenValues:Function,};static components={FilterMenuValueItem};state=useState({values:[],displayedValues:[],textFilter:"",selectedValue:undefined,numberOfDisplayedValues:50,hasMoreValues:false,});searchBar=useRef("filterMenuSearchBar");setup(){onWillUpdateProps((nextProps)=>{if(!deepEquals(nextProps.filterPosition,this.props.filterPosition)){this.state.values=this.getFilterHiddenValues(nextProps.filterPosition);this.computeDisplayedValues();}});this.state.values=this.getFilterHiddenValues(this.props.filterPosition);this.computeDisplayedValues();}
getFilterHiddenValues(position){const sheetId=this.env.model.getters.getActiveSheetId();const filter=this.env.model.getters.getFilter({sheetId,...position});if(!filter){return[];}
const filterValue=this.env.model.getters.getFilterValue({sheetId,...position});let cells=(filter.filteredRange?positions(filter.filteredRange.zone):[]).map((position)=>({position,cellValue:this.env.model.getters.getEvaluatedCell({sheetId,...position}).formattedValue,}));if(filterValue?.filterType!=="criterion"){cells=cells.filter((val)=>!this.env.model.getters.isRowHidden(sheetId,val.position.row));}
const cellValues=cells.map((val)=>val.cellValue);const filterValues=filterValue?.filterType==="values"?filterValue.hiddenValues:[];const normalizedFilteredValues=new Set(filterValues.map(toLowerCase));const set=new Set();const values=[];const addValue=(value)=>{const normalizedValue=toLowerCase(value);if(!set.has(normalizedValue)){values.push({string:value||"",checked:filterValue?.filterType!=="criterion"?!normalizedFilteredValues.has(normalizedValue):false,normalizedValue,});set.add(normalizedValue);}};cellValues.forEach(addValue);filterValues.forEach(addValue);return values.sort((val1,val2)=>val1.normalizedValue.localeCompare(val2.normalizedValue,undefined,{numeric:true,sensitivity:"base",}));}
checkValue(value){this.state.selectedValue=value.string;value.checked=!value.checked;this.searchBar.el?.focus();this.updateHiddenValues();}
onMouseMove(value){this.state.selectedValue=value.string;}
selectAll(){this.state.displayedValues.forEach((value)=>(value.checked=true));this.props.onUpdateHiddenValues([]);}
clearAll(){this.state.displayedValues.forEach((value)=>(value.checked=false));const hiddenValues=this.state.values.map((val)=>val.string);this.props.onUpdateHiddenValues(hiddenValues);}
updateHiddenValues(){const hiddenValues=this.state.values.filter((val)=>!val.checked).map((val)=>val.string);this.props.onUpdateHiddenValues(hiddenValues);}
updateSearch(ev){const target=ev.target;this.state.textFilter=target.value;this.state.selectedValue=undefined;this.computeDisplayedValues();}
computeDisplayedValues(){const values=!this.state.textFilter?this.state.values:fuzzyLookup(this.state.textFilter,this.state.values,(val)=>val.string);this.state.displayedValues=values.slice(0,this.state.numberOfDisplayedValues);this.state.hasMoreValues=values.length>this.state.numberOfDisplayedValues;}
loadMoreValues(){this.state.numberOfDisplayedValues+=100;this.computeDisplayedValues();}
onKeyDown(ev){const displayedValues=this.state.displayedValues;if(displayedValues.length===0)
return;let selectedIndex=undefined;if(this.state.selectedValue!==undefined){const index=displayedValues.findIndex((val)=>val.string===this.state.selectedValue);selectedIndex=index===-1?undefined:index;}
switch(ev.key){case"ArrowDown":if(selectedIndex===undefined){selectedIndex=0;}
else{selectedIndex=Math.min(selectedIndex+1,displayedValues.length-1);}
ev.preventDefault();ev.stopPropagation();break;case"ArrowUp":if(selectedIndex===undefined){selectedIndex=displayedValues.length-1;}
else{selectedIndex=Math.max(selectedIndex-1,0);}
ev.preventDefault();ev.stopPropagation();break;case"Enter":if(selectedIndex!==undefined){this.checkValue(displayedValues[selectedIndex]);}
ev.stopPropagation();ev.preventDefault();break;}
this.state.selectedValue=selectedIndex!==undefined?displayedValues[selectedIndex].string:undefined;if(ev.key==="ArrowUp"||ev.key==="ArrowDown"){this.scrollListToSelectedValue(ev.key);}}
clearScrolledToValue(){this.state.values.forEach((val)=>(val.scrolledTo=undefined));}
scrollListToSelectedValue(arrow){this.clearScrolledToValue();const selectedValue=this.state.values.find((val)=>val.string===this.state.selectedValue);if(selectedValue){selectedValue.scrolledTo=arrow==="ArrowUp"?"top":"bottom";}}}
css`
  .o-filter-menu {
    width: 245px;
    padding: 8px 0;
    user-select: none;

    .o-filter-menu-content {
      padding: 0 16px;
    }

    .o-sort-item {
      padding-left: 34px;
    }

    .o_side_panel_collapsible_title {
      font-size: inherit;
      padding: 0 0 4px 0 !important;
      font-weight: 400 !important;

      .collapsor .o-icon {
        opacity: 0.8;
      }

      .collapsor-arrow {
        transform-origin: 6px 8px;

        .o-icon {
          width: 12px;
          height: 16px;
        }
      }
    }

    .o-filter-menu-item {
      display: flex;
      cursor: pointer;
      user-select: none;
      line-height: 1;

      &.selected,
      &:hover {
        background-color: ${BUTTON_ACTIVE_BG};
      }
    }

    .o-filter-menu-buttons {
      margin-top: 9px;

      .o-button {
        height: 26px;
      }
    }
  }
`;class FilterMenu extends Component{static template="o-spreadsheet-FilterMenu";static props={filterPosition:Object,onClosed:{type:Function,optional:true},};static components={FilterMenuValueList,SidePanelCollapsible,FilterMenuCriterion};criterionCategory="text";updatedCriterionValue;setup(){onWillUpdateProps((nextProps)=>{if(!deepEquals(nextProps.filterPosition,this.props.filterPosition)){this.updatedCriterionValue=undefined;this.criterionCategory=this.getCriterionCategory(nextProps.filterPosition);}});this.criterionCategory=this.getCriterionCategory(this.props.filterPosition);}
get isSortable(){if(!this.table){return false;}
const coreTable=this.env.model.getters.getCoreTableMatchingTopLeft(this.table.range.sheetId,this.table.range.zone);return!this.env.model.getters.isReadonly()&&coreTable?.type!=="dynamic";}
get table(){const sheetId=this.env.model.getters.getActiveSheetId();const position=this.props.filterPosition;return this.env.model.getters.getTable({sheetId,...position});}
get filterValueType(){const sheetId=this.env.model.getters.getActiveSheetId();const position=this.props.filterPosition;const filterValue=this.env.model.getters.getFilterValue({sheetId,...position});return filterValue?.filterType;}
getCriterionCategory(position){const sheetId=this.env.model.getters.getActiveSheetId();const filter=this.env.model.getters.getFilter({sheetId,...position});if(!filter||!filter.filteredRange){return"text";}
const cellTypesCount={text:0,number:0,date:0};const filteredZone=filter.filteredRange.zone;for(let row=filteredZone.top;row<=filteredZone.bottom;row++){if(row>100){break;}
const cell=this.env.model.getters.getEvaluatedCell({sheetId,row,col:position.col});if(cell.type===CellValueType.text||cell.type===CellValueType.boolean){cellTypesCount.text++;}
else if(cell.type===CellValueType.number){if(cell.format&&isDateTimeFormat(cell.format)){cellTypesCount.date++;}
else{cellTypesCount.number++;}}}
const max=Math.max(cellTypesCount.text,cellTypesCount.number,cellTypesCount.date);const type=Object.keys(cellTypesCount).find((key)=>cellTypesCount[key]===max);return(type||"text");}
onUpdateHiddenValues(values){this.updatedCriterionValue={filterType:"values",hiddenValues:values};}
onCriterionChanged(criterion){this.updatedCriterionValue=criterion;}
confirm(){if(!this.updatedCriterionValue){this.props.onClosed?.();return;}
const position=this.props.filterPosition;this.env.model.dispatch("UPDATE_FILTER",{...position,sheetId:this.env.model.getters.getActiveSheetId(),value:this.updatedCriterionValue,});this.props.onClosed?.();}
get criterionOperators(){if(this.criterionCategory==="date"){return filterDateCriterionOperators;}
else if(this.criterionCategory==="number"){return filterNumberCriterionOperators;}
return filterTextCriterionOperators;}
cancel(){this.props.onClosed?.();}
sortFilterZone(sortDirection){const filterPosition=this.props.filterPosition;const table=this.table;const tableZone=table?.range.zone;if(!filterPosition||!tableZone||tableZone.top===tableZone.bottom){return;}
const sheetId=this.env.model.getters.getActiveSheetId();const contentZone={...tableZone,top:tableZone.top+1};const sortAnchor={col:filterPosition.col,row:contentZone.top};const sortOptions={emptyCellAsZero:true,sortHeaders:true};interactiveSort(this.env,sheetId,sortAnchor,contentZone,sortDirection,sortOptions);this.props.onClosed?.();}}
const FilterMenuPopoverBuilder={onOpen:(position,getters)=>{return{isOpen:true,props:{filterPosition:position},Component:FilterMenu,cellCorner:"bottom-left",};},};const LINK_TOOLTIP_HEIGHT=32;const LINK_TOOLTIP_WIDTH=220;css`
  .o-link-tool {
    font-size: 13px;
    background-color: white;
    box-shadow: 0 1px 4px 3px rgba(60, 64, 67, 0.15);
    padding: 6px 12px;
    border-radius: 4px;
    display: flex;
    justify-content: space-between;
    height: ${LINK_TOOLTIP_HEIGHT}px;
    width: ${LINK_TOOLTIP_WIDTH}px;

    img {
      margin-right: 3px;
      width: 16px;
      height: 16px;
    }

    a.o-link {
      color: ${LINK_COLOR};
      text-decoration: none;
      flex-grow: 2;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    a.o-link:hover {
      text-decoration: none;
      color: #001d1f;
      cursor: pointer;
    }
  }
  .o-link-icon {
    float: right;
    padding-left: 5px;
    .o-icon {
      height: 16px;
    }
  }
  .o-link-icon .o-icon {
    height: 13px;
  }
  .o-link-icon:hover {
    cursor: pointer;
    color: #000;
  }
`;class LinkDisplay extends Component{static template="o-spreadsheet-LinkDisplay";static props={cellPosition:Object,onClosed:{type:Function,optional:true},};cellPopovers;setup(){this.cellPopovers=useStore(CellPopoverStore);}
get cell(){const{col,row}=this.props.cellPosition;const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getEvaluatedCell({sheetId,col,row});}
get link(){if(this.cell.link){return this.cell.link;}
const{col,row}=this.props.cellPosition;throw new Error(`LinkDisplay Component can only be used with link cells. ${toXC(col, row)} is not a link.`);}
getUrlRepresentation(link){return urlRepresentation(link,this.env.model.getters);}
openLink(ev){openLink(this.link,this.env,isMiddleClickOrCtrlClick(ev));}
edit(){const{col,row}=this.props.cellPosition;this.env.model.selection.selectCell(col,row);this.cellPopovers.open({col,row},"LinkEditor");}
unlink(){const sheetId=this.env.model.getters.getActiveSheetId();const{col,row}=this.props.cellPosition;const style=this.env.model.getters.getCellComputedStyle({sheetId,col,row});const textColor=style?.textColor===LINK_COLOR?undefined:style?.textColor;this.env.model.dispatch("UPDATE_CELL",{col,row,sheetId,content:this.link.label,style:{...style,textColor,underline:undefined},});}}
const LinkCellPopoverBuilder={onHover:(position,getters)=>{const cell=getters.getEvaluatedCell(position);const shouldDisplayLink=!getters.isDashboard()&&cell.link&&getters.isVisibleInViewport(position);if(!shouldDisplayLink)
return{isOpen:false};return{isOpen:true,Component:LinkDisplay,props:{cellPosition:position},cellCorner:"bottom-left",};},};const linkSheet={name:_t("Link sheet"),children:[(env)=>{const sheets=env.model.getters.getSheetIds().map((sheetId)=>env.model.getters.getSheet(sheetId));return sheets.map((sheet)=>({id:sheet.id,name:sheet.name,execute:()=>markdownLink(sheet.name,buildSheetLink(sheet.id)),}));},],};const deleteSheet={name:_t("Delete"),isVisible:(env)=>{return env.model.getters.getVisibleSheetIds().length>1;},execute:(env)=>env.askConfirmation(_t("Are you sure you want to delete this sheet?"),()=>{env.model.dispatch("DELETE_SHEET",{sheetId:env.model.getters.getActiveSheetId(),sheetName:env.model.getters.getActiveSheetName(),});}),icon:"o-spreadsheet-Icon.TRASH",};const duplicateSheet={name:_t("Duplicate"),execute:(env)=>{const sheetIdFrom=env.model.getters.getActiveSheetId();const sheetNameFrom=env.model.getters.getSheetName(sheetIdFrom);const sheetIdTo=env.model.uuidGenerator.smallUuid();const sheetNameTo=env.model.getters.getDuplicateSheetName(sheetNameFrom);env.model.dispatch("DUPLICATE_SHEET",{sheetId:sheetIdFrom,sheetIdTo,sheetNameTo,});env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom,sheetIdTo});},icon:"o-spreadsheet-Icon.COPY",};const renameSheet=(args)=>{return{name:_t("Rename"),execute:args.renameSheetCallback,icon:"o-spreadsheet-Icon.RENAME_SHEET",};};const changeSheetColor=(args)=>{return{name:_t("Change color"),execute:args.openSheetColorPickerCallback,icon:"o-spreadsheet-Icon.PAINT_FORMAT",};};const sheetMoveRight={name:_t("Move right"),isVisible:(env)=>{const sheetId=env.model.getters.getActiveSheetId();const sheetIds=env.model.getters.getVisibleSheetIds();return sheetIds.indexOf(sheetId)!==sheetIds.length-1;},execute:(env)=>env.model.dispatch("MOVE_SHEET",{sheetId:env.model.getters.getActiveSheetId(),delta:1,}),icon:"o-spreadsheet-Icon.MOVE_SHEET_RIGHT",};const sheetMoveLeft={name:_t("Move left"),isVisible:(env)=>{const sheetId=env.model.getters.getActiveSheetId();return env.model.getters.getVisibleSheetIds()[0]!==sheetId;},execute:(env)=>env.model.dispatch("MOVE_SHEET",{sheetId:env.model.getters.getActiveSheetId(),delta:-1,}),icon:"o-spreadsheet-Icon.MOVE_SHEET_LEFT",};const hideSheet={name:_t("Hide sheet"),isVisible:(env)=>env.model.getters.getVisibleSheetIds().length!==1,execute:(env)=>env.model.dispatch("HIDE_SHEET",{sheetId:env.model.getters.getActiveSheetId()}),icon:"o-spreadsheet-Icon.HIDE_SHEET",};class MenuItemRegistry extends Registry{replace(key,value){if(value.id===undefined){value.id=key;}
this.content[key]=value;return this;}
addChild(key,path,value){return this._replaceChild(key,path,value,{force:false});}
replaceChild(key,path,value){return this._replaceChild(key,path,value,{force:true});}
_replaceChild(key,path,value,options={force:true}){if(typeof value!=="function"&&value.id===undefined){value.id=key;}
const root=path.splice(0,1)[0];let node=this.content[root];if(!node){throw new Error(`Path ${root + ":" + path.join(":")} not found`);}
for(const p of path){const children=node.children;if(!children||typeof children==="function"){throw new Error(`${p} is either not a node or it's dynamically computed`);}
node=children.find((elt)=>elt.id===p);if(!node){throw new Error(`Path ${root + ":" + path.join(":")} not found`);}}
if(!node.children){node.children=[];}
const children=node.children;if(!children||typeof children==="function"){throw new Error(`${path} is either not a node or it's dynamically computed`);}
if("id"in value){const valueIndex=children.findIndex((elt)=>"id"in elt&&elt.id===value.id);if(valueIndex>-1){if(!options.force)
throw new Error(`A child with the id "${value.id}" already exists.`);node.children.splice(valueIndex,1,value);return this;}}
node.children.push(value);return this;}
getMenuItems(){return createActions(this.getAll());}}
const linkMenuRegistry=new MenuItemRegistry();linkMenuRegistry.add("sheet",{...linkSheet,sequence:10,});const PADDING=12;const LINK_EDITOR_WIDTH=340+2*PADDING;css`
  .o-link-editor {
    font-size: 13px;
    background-color: white;
    box-shadow: 0 1px 4px 3px rgba(60, 64, 67, 0.15);
    padding: ${PADDING}px;
    display: flex;
    flex-direction: column;
    border-radius: 4px;
    width: ${LINK_EDITOR_WIDTH}px;

    .o-section {
      .o-section-title {
        font-weight: bold;
        margin-bottom: 5px;
      }
    }
    .o-buttons {
      padding-left: 16px;
      padding-top: 16px;
      text-align: right;
    }
    input.o-input {
      width: 100%;
      padding: 0 23px 4px 0;
    }
    .o-link-url {
      position: relative;
      flex-grow: 1;
      button {
        position: absolute;
        right: 0px;
        top: 0px;
        border: none;
        height: 20px;
        width: 20px;
        background-color: #fff;
        margin: 2px 3px 1px 0px;
        padding: 0px 1px 0px 0px;
      }
      button:hover {
        cursor: pointer;
      }
    }
  }
`;class LinkEditor extends Component{static template="o-spreadsheet-LinkEditor";static props={cellPosition:Object,onClosed:{type:Function,optional:true},};static components={MenuPopover};menuItems=linkMenuRegistry.getMenuItems();link=useState(this.defaultState);menu=useState({isOpen:false,});linkEditorMenuButtonRef=useRef("linkEditorMenuButton");urlInput=useRef("urlInput");setup(){onMounted(()=>this.urlInput.el?.focus());}
get defaultState(){const{col,row}=this.props.cellPosition;const sheetId=this.env.model.getters.getActiveSheetId();const cell=this.env.model.getters.getEvaluatedCell({sheetId,col,row});if(cell.link){return{url:cell.link.url,label:cell.formattedValue,isUrlEditable:cell.link.isUrlEditable,};}
return{label:cell.formattedValue,url:"",isUrlEditable:true,};}
get menuButtonRect(){return getRefBoundingRect(this.linkEditorMenuButtonRef);}
onSpecialLink(ev){const{detail:markdownLink}=ev;const link=detectLink(markdownLink);if(!link){return;}
this.link.url=link.url;this.link.label=link.label;this.link.isUrlEditable=link.isUrlEditable;}
getUrlRepresentation(link){return urlRepresentation(link,this.env.model.getters);}
openMenu(){this.menu.isOpen=true;}
removeLink(){this.link.url="";this.link.isUrlEditable=true;}
save(){const{col,row}=this.props.cellPosition;const locale=this.env.model.getters.getLocale();const label=this.link.label?canonicalizeNumberContent(this.link.label,locale):this.link.url;this.env.model.dispatch("UPDATE_CELL",{col:col,row:row,sheetId:this.env.model.getters.getActiveSheetId(),content:markdownLink(label,this.link.url),});this.props.onClosed?.();}
cancel(){this.props.onClosed?.();}
onKeyDown(ev){switch(ev.key){case"Enter":if(this.link.url){this.save();}
ev.stopPropagation();ev.preventDefault();break;case"Escape":this.cancel();ev.stopPropagation();break;}}}
const LinkEditorPopoverBuilder={onOpen:(position,getters)=>{return{isOpen:true,props:{cellPosition:position},Component:LinkEditor,cellCorner:"bottom-left",};},};cellPopoverRegistry.add("ErrorToolTip",ErrorToolTipPopoverBuilder).add("LinkCell",LinkCellPopoverBuilder).add("LinkEditor",LinkEditorPopoverBuilder).add("FilterMenu",FilterMenuPopoverBuilder);const TABLE_STYLE_CATEGORIES={light:_t("Light"),medium:_t("Medium"),dark:_t("Dark"),custom:_t("Custom"),};const DEFAULT_TABLE_CONFIG={hasFilters:false,totalRow:false,firstColumn:false,lastColumn:false,numberOfHeaders:1,bandedRows:true,bandedColumns:false,automaticAutofill:true,styleId:"TableStyleMedium2",};function generateTableColorSet(name,highlightColor){return{coloredText:darkenColor(highlightColor,0.3),light:lightenColor(highlightColor,0.8),medium:lightenColor(highlightColor,0.6),dark:darkenColor(highlightColor,0.3),mediumBorder:lightenColor(highlightColor,0.45),highlight:highlightColor,name,};}
const COLOR_SETS={black:{name:_t("Black"),coloredText:"#000000",light:"#D9D9D9",medium:"#A6A6A6",dark:"#404040",mediumBorder:"#000000",highlight:"#000000",},lightBlue:generateTableColorSet(_t("Light blue"),"#346B90"),red:generateTableColorSet(_t("Red"),"#C53628"),lightGreen:generateTableColorSet(_t("Light green"),"#748747"),purple:generateTableColorSet(_t("Purple"),"#6C4E65"),gray:{name:_t("Gray"),coloredText:"#666666",light:"#EEEEEE",medium:"#DDDDDD",dark:"#767676",mediumBorder:"#D0D0D0",highlight:"#A9A9A9",},orange:generateTableColorSet(_t("Orange"),"#C37034"),};const DARK_COLOR_SETS={black:COLOR_SETS.black,orangeBlue:{...COLOR_SETS.lightBlue,highlight:COLOR_SETS.orange.highlight},purpleGreen:{...COLOR_SETS.lightGreen,highlight:COLOR_SETS.purple.highlight},redBlue:{...COLOR_SETS.lightBlue,highlight:COLOR_SETS.red.highlight},};const lightColoredText=(colorSet)=>({category:"light",templateName:"lightColoredText",primaryColor:colorSet.highlight,wholeTable:{style:{textColor:colorSet.coloredText},border:{top:{color:colorSet.highlight,style:"thin"},bottom:{color:colorSet.highlight,style:"thin"},},},headerRow:{border:{bottom:{color:colorSet.highlight,style:"thin"}}},totalRow:{border:{top:{color:colorSet.highlight,style:"thin"}}},firstRowStripe:{style:{fillColor:colorSet.light}},});const lightWithHeader=(colorSet)=>({category:"light",templateName:"lightWithHeader",primaryColor:colorSet.highlight,wholeTable:{border:{top:{color:colorSet.highlight,style:"thin"},bottom:{color:colorSet.highlight,style:"thin"},left:{color:colorSet.highlight,style:"thin"},right:{color:colorSet.highlight,style:"thin"},},},headerRow:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"},border:{bottom:{color:colorSet.highlight,style:"thin"}},},totalRow:{border:{top:{color:colorSet.highlight,style:"medium"}}},firstRowStripe:{border:{bottom:{color:colorSet.highlight,style:"thin"}}},secondRowStripe:{border:{bottom:{color:colorSet.highlight,style:"thin"}}},});const lightAllBorders=(colorSet)=>({category:"light",templateName:"lightAllBorders",primaryColor:colorSet.highlight,wholeTable:{border:{top:{color:colorSet.highlight,style:"thin"},bottom:{color:colorSet.highlight,style:"thin"},left:{color:colorSet.highlight,style:"thin"},right:{color:colorSet.highlight,style:"thin"},horizontal:{color:colorSet.highlight,style:"thin"},vertical:{color:colorSet.highlight,style:"thin"},},},headerRow:{border:{bottom:{color:colorSet.highlight,style:"medium"}}},totalRow:{border:{top:{color:colorSet.highlight,style:"medium"}}},firstRowStripe:{style:{fillColor:colorSet.light}},firstColumnStripe:{style:{fillColor:colorSet.light}},});const mediumBandedBorders=(colorSet)=>({category:"medium",templateName:"mediumBandedBorders",primaryColor:colorSet.highlight,wholeTable:{border:{top:{color:colorSet.mediumBorder,style:"thin"},bottom:{color:colorSet.mediumBorder,style:"thin"},left:{color:colorSet.mediumBorder,style:"thin"},right:{color:colorSet.mediumBorder,style:"thin"},horizontal:{color:colorSet.mediumBorder,style:"thin"},},},headerRow:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"},},totalRow:{border:{top:{color:colorSet.highlight,style:"medium"}}},firstRowStripe:{style:{fillColor:colorSet.light}},firstColumnStripe:{style:{fillColor:colorSet.light}},});const mediumWhiteBorders=(colorSet)=>({category:"medium",templateName:"mediumWhiteBorders",primaryColor:colorSet.highlight,wholeTable:{border:{horizontal:{color:"#FFFFFF",style:"thin"},vertical:{color:"#FFFFFF",style:"thin"},},style:{fillColor:colorSet.light},},headerRow:{border:{bottom:{color:"#FFFFFF",style:"thick"}},style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"},},totalRow:{border:{top:{color:"#FFFFFF",style:"thick"}},style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"},},firstColumn:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},lastColumn:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},firstRowStripe:{style:{fillColor:colorSet.medium}},firstColumnStripe:{style:{fillColor:colorSet.medium}},});const mediumMinimalBorders=(colorSet)=>({category:"medium",templateName:"mediumMinimalBorders",primaryColor:colorSet.highlight,wholeTable:{border:{top:{color:"#000000",style:"medium"},bottom:{color:"#000000",style:"medium"},},},totalRow:{border:{top:{color:"#000000",style:"medium"}}},headerRow:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"},border:{bottom:{color:"#000000",style:"medium"}},},firstColumn:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},lastColumn:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},firstRowStripe:{style:{fillColor:COLOR_SETS.black.light}},firstColumnStripe:{style:{fillColor:COLOR_SETS.black.light}},});const mediumAllBorders=(colorSet)=>({category:"medium",templateName:"mediumAllBorders",primaryColor:colorSet.highlight,wholeTable:{border:{top:{color:colorSet.mediumBorder,style:"thin"},bottom:{color:colorSet.mediumBorder,style:"thin"},left:{color:colorSet.mediumBorder,style:"thin"},right:{color:colorSet.mediumBorder,style:"thin"},horizontal:{color:colorSet.mediumBorder,style:"thin"},vertical:{color:colorSet.mediumBorder,style:"thin"},},style:{fillColor:colorSet.light},},totalRow:{border:{top:{color:colorSet.highlight,style:"medium"}}},firstRowStripe:{style:{fillColor:colorSet.medium}},firstColumnStripe:{style:{fillColor:colorSet.medium}},});const dark=(colorSet)=>({category:"dark",templateName:"dark",primaryColor:colorSet.highlight,wholeTable:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},totalRow:{style:{fillColor:colorSet.dark,textColor:"#FFFFFF"},border:{top:{color:"#FFFFFF",style:"thick"}},},headerRow:{style:{fillColor:"#000000"},border:{bottom:{color:"#FFFFFF",style:"thick"}},},firstColumn:{style:{fillColor:colorSet.dark},border:{right:{color:"#FFFFFF",style:"thick"}},},lastColumn:{style:{fillColor:colorSet.dark},border:{left:{color:"#FFFFFF",style:"thick"}},},firstRowStripe:{style:{fillColor:colorSet.dark}},firstColumnStripe:{style:{fillColor:colorSet.dark}},});const darkNoBorders=(colorSet)=>({category:"dark",templateName:"darkNoBorders",primaryColor:colorSet.highlight,wholeTable:{style:{fillColor:colorSet.light}},totalRow:{border:{top:{color:"#000000",style:"medium"}}},headerRow:{style:{fillColor:colorSet.highlight,textColor:"#FFFFFF"}},firstRowStripe:{style:{fillColor:colorSet.medium}},firstColumnStripe:{style:{fillColor:colorSet.medium}},});const darkTemplateInBlack=dark(COLOR_SETS.black);darkTemplateInBlack.wholeTable.style.fillColor="#737373";const mediumMinimalBordersInBlack=mediumMinimalBorders(COLOR_SETS.black);mediumMinimalBordersInBlack.wholeTable.border={...mediumMinimalBordersInBlack.wholeTable.border,left:{color:"#000000",style:"thin"},right:{color:"#000000",style:"thin"},horizontal:{color:"#000000",style:"thin"},vertical:{color:"#000000",style:"thin"},};function buildPreset(name,template,colorSet){return{...template(colorSet),displayName:`${colorSet.name}, ${name}`};}
const TABLE_PRESETS={None:{category:"light",templateName:"none",primaryColor:"",displayName:"none"},TableStyleLight1:buildPreset("TableStyleLight1",lightColoredText,COLOR_SETS.black),TableStyleLight2:buildPreset("TableStyleLight2",lightColoredText,COLOR_SETS.lightBlue),TableStyleLight3:buildPreset("TableStyleLight3",lightColoredText,COLOR_SETS.red),TableStyleLight4:buildPreset("TableStyleLight4",lightColoredText,COLOR_SETS.lightGreen),TableStyleLight5:buildPreset("TableStyleLight5",lightColoredText,COLOR_SETS.purple),TableStyleLight6:buildPreset("TableStyleLight6",lightColoredText,COLOR_SETS.gray),TableStyleLight7:buildPreset("TableStyleLight7",lightColoredText,COLOR_SETS.orange),TableStyleLight8:buildPreset("TableStyleLight8",lightWithHeader,COLOR_SETS.black),TableStyleLight9:buildPreset("TableStyleLight9",lightWithHeader,COLOR_SETS.lightBlue),TableStyleLight10:buildPreset("TableStyleLight10",lightWithHeader,COLOR_SETS.red),TableStyleLight11:buildPreset("TableStyleLight11",lightWithHeader,COLOR_SETS.lightGreen),TableStyleLight12:buildPreset("TableStyleLight12",lightWithHeader,COLOR_SETS.purple),TableStyleLight13:buildPreset("TableStyleLight13",lightWithHeader,COLOR_SETS.gray),TableStyleLight14:buildPreset("TableStyleLight14",lightWithHeader,COLOR_SETS.orange),TableStyleLight15:buildPreset("TableStyleLight15",lightAllBorders,COLOR_SETS.black),TableStyleLight16:buildPreset("TableStyleLight16",lightAllBorders,COLOR_SETS.lightBlue),TableStyleLight17:buildPreset("TableStyleLight17",lightAllBorders,COLOR_SETS.red),TableStyleLight18:buildPreset("TableStyleLight18",lightAllBorders,COLOR_SETS.lightGreen),TableStyleLight19:buildPreset("TableStyleLight19",lightAllBorders,COLOR_SETS.purple),TableStyleLight20:buildPreset("TableStyleLight20",lightAllBorders,COLOR_SETS.gray),TableStyleLight21:buildPreset("TableStyleLight21",lightAllBorders,COLOR_SETS.orange),TableStyleMedium1:buildPreset("TableStyleMedium1",mediumBandedBorders,COLOR_SETS.black),TableStyleMedium2:buildPreset("TableStyleMedium2",mediumBandedBorders,COLOR_SETS.lightBlue),TableStyleMedium3:buildPreset("TableStyleMedium3",mediumBandedBorders,COLOR_SETS.red),TableStyleMedium4:buildPreset("TableStyleMedium4",mediumBandedBorders,COLOR_SETS.lightGreen),TableStyleMedium5:buildPreset("TableStyleMedium5",mediumBandedBorders,COLOR_SETS.purple),TableStyleMedium6:buildPreset("TableStyleMedium6",mediumBandedBorders,COLOR_SETS.gray),TableStyleMedium7:buildPreset("TableStyleMedium7",mediumBandedBorders,COLOR_SETS.orange),TableStyleMedium8:buildPreset("TableStyleMedium8",mediumWhiteBorders,COLOR_SETS.black),TableStyleMedium9:buildPreset("TableStyleMedium9",mediumWhiteBorders,COLOR_SETS.lightBlue),TableStyleMedium10:buildPreset("TableStyleMedium10",mediumWhiteBorders,COLOR_SETS.red),TableStyleMedium11:buildPreset("TableStyleMedium11",mediumWhiteBorders,COLOR_SETS.lightGreen),TableStyleMedium12:buildPreset("TableStyleMedium12",mediumWhiteBorders,COLOR_SETS.purple),TableStyleMedium13:buildPreset("TableStyleMedium13",mediumWhiteBorders,COLOR_SETS.gray),TableStyleMedium14:buildPreset("TableStyleMedium14",mediumWhiteBorders,COLOR_SETS.orange),TableStyleMedium15:{...mediumMinimalBordersInBlack,displayName:"Black, TableStyleMedium15"},TableStyleMedium16:buildPreset("TableStyleMedium16",mediumMinimalBorders,COLOR_SETS.lightBlue),TableStyleMedium17:buildPreset("TableStyleMedium17",mediumMinimalBorders,COLOR_SETS.red),TableStyleMedium18:buildPreset("TableStyleMedium18",mediumMinimalBorders,COLOR_SETS.lightGreen),TableStyleMedium19:buildPreset("TableStyleMedium19",mediumMinimalBorders,COLOR_SETS.purple),TableStyleMedium20:buildPreset("TableStyleMedium20",mediumMinimalBorders,COLOR_SETS.gray),TableStyleMedium21:buildPreset("TableStyleMedium21",mediumMinimalBorders,COLOR_SETS.orange),TableStyleMedium22:buildPreset("TableStyleMedium22",mediumAllBorders,COLOR_SETS.black),TableStyleMedium23:buildPreset("TableStyleMedium23",mediumAllBorders,COLOR_SETS.lightBlue),TableStyleMedium24:buildPreset("TableStyleMedium24",mediumAllBorders,COLOR_SETS.red),TableStyleMedium25:buildPreset("TableStyleMedium25",mediumAllBorders,COLOR_SETS.lightGreen),TableStyleMedium26:buildPreset("TableStyleMedium26",mediumAllBorders,COLOR_SETS.purple),TableStyleMedium27:buildPreset("TableStyleMedium27",mediumAllBorders,COLOR_SETS.gray),TableStyleMedium28:buildPreset("TableStyleMedium28",mediumAllBorders,COLOR_SETS.orange),TableStyleDark1:{...darkTemplateInBlack,displayName:"Black, TableStyleDark1"},TableStyleDark2:buildPreset("TableStyleDark2",dark,COLOR_SETS.lightBlue),TableStyleDark3:buildPreset("TableStyleDark3",dark,COLOR_SETS.red),TableStyleDark4:buildPreset("TableStyleDark4",dark,COLOR_SETS.lightGreen),TableStyleDark5:buildPreset("TableStyleDark5",dark,COLOR_SETS.purple),TableStyleDark6:buildPreset("TableStyleDark6",dark,COLOR_SETS.gray),TableStyleDark7:buildPreset("TableStyleDark7",dark,COLOR_SETS.orange),TableStyleDark8:buildPreset("TableStyleDark8",darkNoBorders,DARK_COLOR_SETS.black),TableStyleDark9:buildPreset("TableStyleDark9",darkNoBorders,DARK_COLOR_SETS.redBlue),TableStyleDark10:buildPreset("TableStyleDark10",darkNoBorders,DARK_COLOR_SETS.purpleGreen),TableStyleDark11:buildPreset("TableStyleDark11",darkNoBorders,DARK_COLOR_SETS.orangeBlue),};const TABLE_STYLES_TEMPLATES={none:()=>({category:"none",templateName:"none",primaryColor:"",name:"none"}),lightColoredText:lightColoredText,lightAllBorders:lightAllBorders,mediumAllBorders:mediumAllBorders,lightWithHeader:lightWithHeader,mediumBandedBorders:mediumBandedBorders,mediumMinimalBorders:mediumMinimalBorders,darkNoBorders:darkNoBorders,mediumWhiteBorders:mediumWhiteBorders,dark:dark,};function buildTableStyle(name,templateName,primaryColor){const colorSet=generateTableColorSet("",primaryColor);return{...TABLE_STYLES_TEMPLATES[templateName](colorSet),category:"custom",displayName:name,};}
css`
  .o-spreadsheet {
    .o-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: ${ICON_EDGE_LENGTH}px;
      height: ${ICON_EDGE_LENGTH}px;
      font-size: ${ICON_EDGE_LENGTH}px;
      vertical-align: middle;

      .small-text {
        font: bold 9px sans-serif;
      }
      .heavy-text {
        font: bold 16px sans-serif;
      }
    }
    .fa-small {
      font-size: 14px;
    }
  }
`;const ARROW_DOWN={name:"ARROW_DOWN",width:448,height:512,paths:[{fillColor:"#E06666",path:"M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z",},],};const ARROW_UP={name:"ARROW_UP",width:448,height:512,paths:[{fillColor:"#6AA84F",path:"M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z",},],};const ARROW_RIGHT={name:"ARROW_RIGHT",width:448,height:512,paths:[{fillColor:"#F0AD4E",path:"M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z",},],};const SMILE={name:"SMILE",width:496,height:512,paths:[{fillColor:"#6AA84F",path:"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm4 72.6c-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.7-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8-10.1-8.4-25.3-7.1-33.8 3.1z",},],};const MEH={name:"MEH",width:496,height:512,paths:[{fillColor:"#F0AD4E",path:"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm8 144H160c-13.2 0-24 10.8-24 24s10.8 24 24 24h176c13.2 0 24-10.8 24-24s-10.8-24-24-24z",},],};const FROWN={name:"FROWN",width:496,height:512,paths:[{fillColor:"#E06666",path:"M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-80 128c-40.2 0-78 17.7-103.8 48.6-8.5 10.2-7.1 25.3 3.1 33.8 10.2 8.4 25.3 7.1 33.8-3.1 16.6-19.9 41-31.4 66.9-31.4s50.3 11.4 66.9 31.4c8.1 9.7 23.1 11.9 33.8 3.1 10.2-8.5 11.5-23.6 3.1-33.8C326 321.7 288.2 304 248 304z",},],};const DOT_PATH="M256 9 a247 247 0 1 0.1 0 0";const GREEN_DOT={name:"GREEN_DOT",width:512,height:512,paths:[{fillColor:"#6AA84F",path:DOT_PATH}],};const YELLOW_DOT={name:"YELLOW_DOT",width:512,height:512,paths:[{fillColor:"#F0AD4E",path:DOT_PATH}],};const RED_DOT={name:"RED_DOT",width:512,height:512,paths:[{fillColor:"#E06666",path:DOT_PATH}],};function getCaretDownSvg(color){return{name:"CARET_DOWN",width:512,height:512,paths:[{fillColor:color.textColor||TEXT_BODY_MUTED,path:"M120 195 h270 l-135 130"}],};}
function getHoveredCaretDownSvg(color){return{name:"CARET_DOWN",width:512,height:512,paths:[{fillColor:color.textColor||TEXT_BODY_MUTED,path:"M15 15 h482 v482 h-482"},{fillColor:color.fillColor||"#fff",path:"M120 195 h270 l-135 130"},],};}
const CHIP_CARET_DOWN_PATH="M40 185 h270 l-135 128";function getChipSvg(chipStyle){return{name:"CHIP",width:512,height:512,paths:[{fillColor:chipStyle.textColor||TEXT_BODY_MUTED,path:CHIP_CARET_DOWN_PATH}],};}
function getHoveredChipSvg(chipStyle){return{name:"CHIP",width:512,height:512,paths:[{fillColor:chipStyle.textColor||TEXT_BODY_MUTED,path:"M0,225 A175,175 0 1,0 350,225 A175,175 0 1,0 0,225",},{fillColor:chipStyle.fillColor||TEXT_BODY_MUTED,path:CHIP_CARET_DOWN_PATH},],};}
const CHECKBOX_UNCHECKED={name:"CHECKBOX_UNCHECKED",width:512,height:512,paths:[{fillColor:GRAY_300,path:"M45,45 h422 v422 h-422 v-422 m30,30 v362 h362 v-362"}],};const CHECKBOX_UNCHECKED_HOVERED={name:"CHECKBOX_UNCHECKED",width:512,height:512,paths:[{fillColor:ACTION_COLOR,path:"M45,45 h422 v422 h-422 v-422 m30,30 v362 h362 v-362"}],};const CHECKBOX_CHECKED={name:"CHECKBOX_CHECKED",width:512,height:512,paths:[{fillColor:ACTION_COLOR,path:"M45,45 h422 v422 h-422 v-422"},{fillColor:"#FFF",path:"M165,240 l45,45 l135,-135 h60 l-195,195 l-105,-105"},],};function getPivotIconSvg(isCollapsed,isHovered){const symbolPath=isCollapsed?"M149,235 h213 v43 h-213 M235,149 h43 v213 h-43":"M149,235 h213 v43 h-213";return{name:"PIVOT_ICON",width:512,height:512,paths:[{path:"M21,21 h469 v469 h-469",fillColor:isHovered?GRAY_900:"#777"},{path:"M64,64 v384 h384 v-384",fillColor:isHovered?GRAY_200:"#eee"},{path:symbolPath,fillColor:isHovered?GRAY_900:"#777"},],};}
function getDataFilterIcon(isActive,isHighContrast,isHovered){const symbolPath=isActive?"M18.6 3.5H4.29c-.7 0-1.06.85-.56 1.35l6.1 6.1v6.8c0 .26.13.5.34.65l2.64 1.85a.79.79 0 0 0 1.25-.65v-8.64l6.1-6.1a.79.79 0 0 0-.56-1.35":"M 339.667 681 L 510.333 681 L 510.333 595.667 L 339.667 595.667 L 339.667 681 Z M 41 169 L 41 254.333 L 809 254.333 L 809 169 L 41 169 Z M 169 467.667 L 681 467.667 L 681 382.333 L 169 382.333 L 169 467.667 Z";const hoverBackgroundPath=isActive?"M0,0 h24 v24 h-24":"M0,0 h850 v850 h-850";const colors={iconColor:FILTERS_COLOR,hoverBackgroundColor:FILTERS_COLOR};if(isHovered&&!isHighContrast){colors.iconColor="#fff";}
else if(!isHovered&&isHighContrast){colors.iconColor="#defade";}
else if(isHovered&&isHighContrast){colors.iconColor=FILTERS_COLOR;colors.hoverBackgroundColor="#fff";}
return{name:"DATA_FILTER_ICON",width:isActive?24:850,height:isActive?24:850,paths:[isHovered?{path:hoverBackgroundPath,fillColor:colors.hoverBackgroundColor}:undefined,{path:symbolPath,fillColor:colors.iconColor},].filter(isDefined),};}
const ICONS={arrowGood:{template:"ARROW_UP",svg:ARROW_UP,},arrowNeutral:{template:"ARROW_RIGHT",svg:ARROW_RIGHT,},arrowBad:{template:"ARROW_DOWN",svg:ARROW_DOWN,},smileyGood:{template:"SMILE",svg:SMILE,},smileyNeutral:{template:"MEH",svg:MEH,},smileyBad:{template:"FROWN",svg:FROWN,},dotGood:{template:"GREEN_DOT",svg:GREEN_DOT,},dotNeutral:{template:"YELLOW_DOT",svg:YELLOW_DOT,},dotBad:{template:"RED_DOT",svg:RED_DOT,},};const ICON_SETS={arrows:{good:"arrowGood",neutral:"arrowNeutral",bad:"arrowBad",},smiley:{good:"smileyGood",neutral:"smileyNeutral",bad:"smileyBad",},dots:{good:"dotGood",neutral:"dotNeutral",bad:"dotBad",},};const path2DCache={};function getPath2D(svgPath){if(path2DCache[svgPath]){return path2DCache[svgPath];}
const path2D=new Path2D(svgPath);path2DCache[svgPath]=path2D;return path2D;}
var WarningTypes;(function(WarningTypes){WarningTypes["DiagonalBorderNotSupported"]="Diagonal Borders";WarningTypes["BorderStyleNotSupported"]="Border style";WarningTypes["FillStyleNotSupported"]="Fill Style";WarningTypes["FontNotSupported"]="Font";WarningTypes["HorizontalAlignmentNotSupported"]="Horizontal Alignment";WarningTypes["VerticalAlignmentNotSupported"]="Vertical Alignments";WarningTypes["MultipleRulesCfNotSupported"]="Multiple rules conditional formats";WarningTypes["CfTypeNotSupported"]="Conditional format type";WarningTypes["CfFormatBorderNotSupported"]="Borders in conditional formats";WarningTypes["CfFormatAlignmentNotSupported"]="Alignment in conditional formats";WarningTypes["CfFormatNumFmtNotSupported"]="Num formats in conditional formats";WarningTypes["CfIconSetEmptyIconNotSupported"]="IconSets with empty icons";WarningTypes["BadlyFormattedHyperlink"]="Badly formatted hyperlink";WarningTypes["NumFmtIdNotSupported"]="Number format";WarningTypes["TimeDataValidationNotSupported"]="Time data validation rules";WarningTypes["TextLengthDataValidationNotSupported"]="Text length data validation rules";WarningTypes["WholeNumberDataValidationNotSupported"]="Whole number data validation rules";WarningTypes["NotEqualDateDataValidationNotSupported"]="Not equal date data validation rules";})(WarningTypes||(WarningTypes={}));class XLSXImportWarningManager{_parsingWarnings=new Set();_conversionWarnings=new Set();addParsingWarning(warning){this._parsingWarnings.add(warning);}
addConversionWarning(warning){this._conversionWarnings.add(warning);}
get warnings(){return[...this._parsingWarnings,...this._conversionWarnings];}
generateNotSupportedWarning(type,name,supported){let warning=`${type} ${name ? '"' + name + '" is' : "are"} not yet supported. `;if(supported){warning+=`Only ${supported.join(", ")} are currently supported.`;}
if(!this._conversionWarnings.has(warning)){this._conversionWarnings.add(warning);}}}
const SUPPORTED_BORDER_STYLES=["thin","medium","thick","dashed","dotted"];const SUPPORTED_HORIZONTAL_ALIGNMENTS=["general","left","center","right",];const SUPPORTED_VERTICAL_ALIGNMENTS=["top","center","bottom"];const SUPPORTED_FONTS=["Arial"];const SUPPORTED_FILL_PATTERNS=["solid"];const SUPPORTED_CF_TYPES=["expression","cellIs","colorScale","iconSet","containsText","notContainsText","beginsWith","endsWithText","containsBlanks","notContainsBlanks",];const CELL_TYPE_CONVERSION_MAP={b:"boolean",d:"date",e:"error",inlineStr:"inlineStr",n:"number",s:"sharedString",str:"str",};const BORDER_STYLE_CONVERSION_MAP={dashDot:"thin",dashDotDot:"thin",dashed:"dashed",dotted:"dotted",double:"thin",hair:"thin",medium:"medium",mediumDashDot:"thin",mediumDashDotDot:"thin",mediumDashed:"thin",none:undefined,slantDashDot:"thin",thick:"thick",thin:"thin",};const H_ALIGNMENT_CONVERSION_MAP={general:undefined,left:"left",center:"center",right:"right",fill:"left",justify:"left",centerContinuous:"center",distributed:"center",};const V_ALIGNMENT_CONVERSION_MAP={top:"top",center:"middle",bottom:"bottom",justify:"middle",distributed:"middle",};const V_ALIGNMENT_EXPORT_CONVERSION_MAP={top:"top",middle:"center",bottom:"bottom",};const CF_OPERATOR_TYPE_CONVERSION_MAP={beginsWith:"beginsWithText",endsWith:"endsWithText",containsText:"containsText",notContains:"notContainsText",between:"isBetween",notBetween:"isNotBetween",equal:"isEqual",notEqual:"isNotEqual",greaterThan:"isGreaterThan",greaterThanOrEqual:"isGreaterOrEqualTo",lessThan:"isLessThan",lessThanOrEqual:"isLessOrEqualTo",};const CF_TYPE_CONVERSION_MAP={aboveAverage:undefined,expression:undefined,cellIs:undefined,colorScale:undefined,dataBar:undefined,iconSet:undefined,top10:undefined,uniqueValues:undefined,duplicateValues:undefined,containsText:"containsText",notContainsText:"notContainsText",beginsWith:"beginsWithText",endsWith:"endsWithText",containsBlanks:"isEmpty",notContainsBlanks:"isNotEmpty",containsErrors:undefined,notContainsErrors:undefined,timePeriod:undefined,};const CF_THRESHOLD_CONVERSION_MAP={num:"number",percent:"percentage",max:"value",min:"value",percentile:"percentile",formula:"formula",};const ICON_SET_CONVERSION_MAP={NoIcons:undefined,"3Arrows":"arrows","3ArrowsGray":"arrows","3Symbols":"smiley","3Symbols2":"smiley","3Signs":"dots","3Flags":"dots","3TrafficLights1":"dots","3TrafficLights2":"dots","4Arrows":"arrows","4ArrowsGray":"arrows","4RedToBlack":"dots","4Rating":"smiley","4TrafficLights":"dots","5Arrows":"arrows","5ArrowsGray":"arrows","5Rating":"smiley","5Quarters":"dots","3Stars":"smiley","3Triangles":"arrows","5Boxes":"dots",};const DRAWING_LEGEND_POSITION_CONVERSION_MAP={none:"none",b:"bottom",t:"top",l:"left",r:"right",tr:"right",};const CHART_TYPE_CONVERSION_MAP={areaChart:undefined,area3DChart:undefined,lineChart:"line",line3DChart:undefined,stockChart:undefined,radarChart:"radar",scatterChart:"scatter",pieChart:"pie",pie3DChart:undefined,doughnutChart:"pie",barChart:"bar",bar3DChart:undefined,ofPieChart:undefined,surfaceChart:undefined,surface3DChart:undefined,bubbleChart:undefined,comboChart:"combo",};const EXCEL_TO_SPREADSHEET_TRENDLINE_TYPE_MAPPING={exp:"exponential",log:"logarithmic",poly:"polynomial",movingAvg:"trailingMovingAverage",};const SUBTOTAL_FUNCTION_CONVERSION_MAP={"1":"AVERAGE","2":"COUNT","3":"COUNTA","4":"MAX","5":"MIN","6":"PRODUCT","7":"STDEV","8":"STDEVP","9":"SUM","10":"VAR","11":"VARP","101":"AVERAGE","102":"COUNT","103":"COUNTA","104":"MAX","105":"MIN","106":"PRODUCT","107":"STDEV","108":"STDEVP","109":"SUM","110":"VAR","111":"VARP",};const XLSX_FORMATS_CONVERSION_MAP={0:"",1:"0",2:"0.00",3:"#,#00",4:"#,##0.00",9:"0%",10:"0.00%",11:undefined,12:undefined,13:undefined,14:"m/d/yyyy",15:"m/d/yyyy",16:"m/d/yyyy",17:"m/d/yyyy",18:"hh:mm:ss a",19:"hh:mm:ss a",20:"hhhh:mm:ss",21:"hhhh:mm:ss",22:"m/d/yy h:mm",37:undefined,38:undefined,39:undefined,40:undefined,45:"hhhh:mm:ss",46:"hhhh:mm:ss",47:"hhhh:mm:ss",48:undefined,49:"@",};const XLSX_FORMAT_MAP={"0":1,"0.00":2,"#,#00":3,"#,##0.00":4,"0%":9,"0.00%":10,"0.00E+00":11,"# ?/?":12,"# ??/??":13,"mm-dd-yy":14,"d-mm-yy":15,"mm-yy":16,"mmm-yy":17,"h:mm AM/PM":18,"h:mm:ss AM/PM":19,"h:mm":20,"h:mm:ss":21,"m/d/yy h:mm":22,"#,##0 ;(#,##0)":37,"#,##0 ;[Red](#,##0)":38,"#,##0.00;(#,##0.00)":39,"#,##0.00;[Red](#,##0.00)":40,"mm:ss":45,"[h]:mm:ss":46,"mmss.0":47,"##0.0E+0":48,"@":49,"hh:mm:ss a":19,};const XLSX_INDEXED_COLORS={0:"000000",1:"FFFFFF",2:"FF0000",3:"00FF00",4:"0000FF",5:"FFFF00",6:"FF00FF",7:"00FFFF",8:"000000",9:"FFFFFF",10:"FF0000",11:"00FF00",12:"0000FF",13:"FFFF00",14:"FF00FF",15:"00FFFF",16:"800000",17:"008000",18:"000080",19:"808000",20:"800080",21:"008080",22:"C0C0C0",23:"808080",24:"9999FF",25:"993366",26:"FFFFCC",27:"CCFFFF",28:"660066",29:"FF8080",30:"0066CC",31:"CCCCFF",32:"000080",33:"FF00FF",34:"FFFF00",35:"00FFFF",36:"800080",37:"800000",38:"008080",39:"0000FF",40:"00CCFF",41:"CCFFFF",42:"CCFFCC",43:"FFFF99",44:"99CCFF",45:"FF99CC",46:"CC99FF",47:"FFCC99",48:"3366FF",49:"33CCCC",50:"99CC00",51:"FFCC00",52:"FF9900",53:"FF6600",54:"666699",55:"969696",56:"003366",57:"339966",58:"003300",59:"333300",60:"993300",61:"993366",62:"333399",63:"333333",64:"000000",65:"FFFFFF",};const IMAGE_MIMETYPE_TO_EXTENSION_MAPPING={"image/avif":"avif","image/bmp":"bmp","image/gif":"gif","image/vnd.microsoft.icon":"ico","image/jpeg":"jpeg","image/png":"png","image/tiff":"tiff","image/webp":"webp",};const IMAGE_EXTENSION_TO_MIMETYPE_MAPPING={avif:"image/avif",bmp:"image/bmp",gif:"image/gif",ico:"image/vnd.microsoft.icon",jpeg:"image/jpeg",png:"image/png",tiff:"image/tiff",webp:"image/webp",jpg:"image/jpeg",};const XLSX_DV_DECIMAL_OPERATOR_MAPPING={between:"isBetween",notBetween:"isNotBetween",equal:"isEqual",notEqual:"isNotEqual",greaterThan:"isGreaterThan",greaterThanOrEqual:"isGreaterOrEqualTo",lessThan:"isLessThan",lessThanOrEqual:"isLessOrEqualTo",};const XLSX_DV_DATE_OPERATOR_TO_DV_TYPE_MAPPING={between:"dateIsBetween",notBetween:"dateIsNotBetween",equal:"dateIs",greaterThan:"dateIsAfter",greaterThanOrEqual:"dateIsOnOrAfter",lessThan:"dateIsBefore",lessThanOrEqual:"dateIsOnOrBefore",};function convertColor(xlsxColor){if(!xlsxColor){return undefined;}
let rgb;if(xlsxColor.rgb){rgb=xlsxColor.rgb;}
else if(xlsxColor.auto){rgb=AUTO_COLOR;}
else if(xlsxColor.indexed){rgb=XLSX_INDEXED_COLORS[xlsxColor.indexed];}
else{return undefined;}
rgb=xlsxColorToHEXA(rgb);if(xlsxColor.tint){rgb=applyTint(rgb,xlsxColor.tint);}
rgb=rgb.toUpperCase();if(rgb.length===9&&rgb.endsWith("FF")){rgb=rgb.slice(0,7);}
return rgb;}
function xlsxColorToHEXA(color){if(color.length===6)
return"#"+color+"FF";return"#"+color.slice(2)+color.slice(0,2);}
function applyTint(color,tint){const rgba=colorToRGBA(color);const hsla=rgbaToHSLA(rgba);if(tint<0){hsla.l=hsla.l*(1+tint);}
if(tint>0){hsla.l=hsla.l*(1-tint)+(100-100*(1-tint));}
return rgbaToHex(hslaToRGBA(hsla));}
function hexaToInt(hex){if(hex.length===9){hex=hex.slice(0,7);}
return parseInt(hex.replace("#",""),16);}
const DEFAULT_SYSTEM_COLOR="FF000000";function getRelativePath(from,to){const fromPathParts=from.split("/");const toPathParts=to.split("/");let relPath="";let startIndex=0;for(let i=0;i<fromPathParts.length-1;i++){if(fromPathParts[i]===toPathParts[i]){startIndex++;}
else{relPath+="../";}}
relPath+=toPathParts.slice(startIndex).join("/");return relPath;}
function arrayToObject(array,indexOffset=0){const obj={};for(let i=0;i<array.length;i++){if(array[i]){obj[i+indexOffset]=array[i];}}
return obj;}
function fixXlsxUnicode(str){return str.replace(/_x([0-9a-zA-Z]{4})_/g,(match,code)=>{return String.fromCharCode(parseInt(code,16));});}
function getSheetDataHeader(sheetData,dimension,index){if(dimension==="COL"){if(!sheetData.cols[index]){sheetData.cols[index]={};}
return sheetData.cols[index];}
if(!sheetData.rows[index]){sheetData.rows[index]={};}
return sheetData.rows[index];}
const XLSX_DATE_FORMAT_REGEX=/^(yy|yyyy|m{1,5}|d{1,4}|h{1,2}|s{1,2}|am\/pm|a\/m|\s|-|\/|\.|:)+$/i;function convertXlsxFormat(numFmtId,formats,warningManager){if(numFmtId===0){return undefined;}
const format=XLSX_FORMATS_CONVERSION_MAP[numFmtId]||formats.find((f)=>f.id===numFmtId)?.format;if(format){try{let convertedFormat=format.replace(/\[(.*)-[A-Z0-9]{3}\]/g,"[$1]");convertedFormat=convertedFormat.replace(/\[\$\]/g,"");convertedFormat=convertedFormat.replace(/_.{1}/g,"");convertedFormat=convertedFormat.replace(/\*.{1}/g,"");if(isXlsxDateFormat(convertedFormat)){convertedFormat=convertDateFormat$1(convertedFormat);}
if(isFormatSupported(convertedFormat)){return convertedFormat;}}
catch(e){}}
warningManager.generateNotSupportedWarning(WarningTypes.NumFmtIdNotSupported,format||`nmFmtId ${numFmtId}`);return undefined;}
function isFormatSupported(format){try{formatValue(0,{format,locale:DEFAULT_LOCALE});return true;}
catch(e){return false;}}
function isXlsxDateFormat(format){return XLSX_DATE_FORMAT_REGEX.test(format);}
function convertDateFormat$1(format){format=format.toLowerCase();format=format.replace(/mmmmm/g,"mmm");format=format.replace(/am\/pm|a\/m/g,"a");format=format.replace(/hhhh/g,"hh");format=format.replace(/\bh\b/g,"hh");return format;}
function convertBorders(data,warningManager){const borderArray=data.borders.map((border)=>{addBorderWarnings(border,warningManager);const b={top:convertBorderDescr(border.top,warningManager),bottom:convertBorderDescr(border.bottom,warningManager),left:convertBorderDescr(border.left,warningManager),right:convertBorderDescr(border.right,warningManager),};Object.keys(b).forEach((key)=>b[key]===undefined&&delete b[key]);return b;});return arrayToObject(borderArray,1);}
function convertBorderDescr(borderDescr,warningManager){if(!borderDescr)
return undefined;addBorderDescrWarnings(borderDescr,warningManager);const style=BORDER_STYLE_CONVERSION_MAP[borderDescr.style];return style?{style,color:convertColor(borderDescr.color)}:undefined;}
function convertStyles(data,warningManager){const stylesArray=data.styles.map((style)=>{return convertStyle({fontStyle:data.fonts[style.fontId],fillStyle:data.fills[style.fillId],alignment:style.alignment,},warningManager);});return arrayToObject(stylesArray,1);}
function convertStyle(styleStruct,warningManager){addStyleWarnings(styleStruct?.fontStyle,styleStruct?.fillStyle,warningManager);addHorizontalAlignmentWarnings(styleStruct?.alignment?.horizontal,warningManager);addVerticalAlignmentWarnings(styleStruct?.alignment?.vertical,warningManager);return{bold:styleStruct.fontStyle?.bold,italic:styleStruct.fontStyle?.italic,strikethrough:styleStruct.fontStyle?.strike,underline:styleStruct.fontStyle?.underline,verticalAlign:styleStruct.alignment?.vertical?V_ALIGNMENT_CONVERSION_MAP[styleStruct.alignment.vertical]:undefined,align:styleStruct.alignment?.horizontal?H_ALIGNMENT_CONVERSION_MAP[styleStruct.alignment.horizontal]:undefined,fillColor:styleStruct.fillStyle?.patternType==="solid"?convertColor(styleStruct.fillStyle?.fgColor):convertColor(styleStruct.fillStyle?.bgColor),textColor:convertColor(styleStruct.fontStyle?.color),fontSize:styleStruct.fontStyle?.size,wrapping:styleStruct.alignment?.wrapText?"wrap":"overflow",};}
function convertFormats(data,warningManager){const formats=[];for(const style of data.styles){const format=convertXlsxFormat(style.numFmtId,data.numFmts,warningManager);if(format){formats[style.numFmtId]=format;}}
return arrayToObject(formats,1);}
function addStyleWarnings(font,fill,warningManager){if(font&&font.name&&!SUPPORTED_FONTS.includes(font.name)){warningManager.generateNotSupportedWarning(WarningTypes.FontNotSupported,font.name,SUPPORTED_FONTS);}
if(fill&&fill.patternType&&!SUPPORTED_FILL_PATTERNS.includes(fill.patternType)){warningManager.generateNotSupportedWarning(WarningTypes.FillStyleNotSupported,fill.patternType,SUPPORTED_FILL_PATTERNS);}}
function addBorderDescrWarnings(borderDescr,warningManager){if(!SUPPORTED_BORDER_STYLES.includes(borderDescr.style)){warningManager.generateNotSupportedWarning(WarningTypes.BorderStyleNotSupported,borderDescr.style,SUPPORTED_BORDER_STYLES);}}
function addBorderWarnings(border,warningManager){if(border.diagonal){warningManager.generateNotSupportedWarning(WarningTypes.DiagonalBorderNotSupported);}}
function addHorizontalAlignmentWarnings(alignment,warningManager){if(alignment&&!SUPPORTED_HORIZONTAL_ALIGNMENTS.includes(alignment)){warningManager.generateNotSupportedWarning(WarningTypes.HorizontalAlignmentNotSupported,alignment,SUPPORTED_HORIZONTAL_ALIGNMENTS);}}
function addVerticalAlignmentWarnings(alignment,warningManager){if(alignment&&!SUPPORTED_VERTICAL_ALIGNMENTS.includes(alignment)){warningManager.generateNotSupportedWarning(WarningTypes.VerticalAlignmentNotSupported,alignment,SUPPORTED_VERTICAL_ALIGNMENTS);}}
function convertConditionalFormats(xlsxCfs,dxfs,warningManager){const cfs=[];let cfId=1;for(const cf of xlsxCfs){if(cf.cfRules.length===0)
continue;addCfConversionWarnings(cf,dxfs,warningManager);const rule=cf.cfRules[0];let operator;const values=[];if(rule.dxfId===undefined&&!(rule.type==="colorScale"||rule.type==="iconSet"||rule.type==="dataBar"))
continue;switch(rule.type){case"aboveAverage":case"containsErrors":case"notContainsErrors":case"duplicateValues":case"expression":case"top10":case"uniqueValues":case"timePeriod":continue;case"dataBar":const dataBar=convertDataBar(cfId++,cf);if(dataBar){cfs.push(dataBar);}
continue;case"colorScale":const colorScale=convertColorScale(cfId++,cf);if(colorScale){cfs.push(colorScale);}
continue;case"iconSet":const iconSet=convertIconSet(cfId++,cf,warningManager);if(iconSet){cfs.push(iconSet);}
continue;case"containsText":case"notContainsText":case"beginsWith":case"endsWith":if(!rule.text)
continue;operator=CF_TYPE_CONVERSION_MAP[rule.type];values.push(rule.text);break;case"containsBlanks":case"notContainsBlanks":operator=CF_TYPE_CONVERSION_MAP[rule.type];break;case"cellIs":if(!rule.operator||!rule.formula||rule.formula.length===0)
continue;operator=CF_OPERATOR_TYPE_CONVERSION_MAP[rule.operator];values.push(rule.formula[0]);if(rule.formula.length===2){values.push(rule.formula[1]);}
break;}
if(operator&&rule.dxfId!==undefined){cfs.push({id:(cfId++).toString(),ranges:cf.sqref,stopIfTrue:rule.stopIfTrue,rule:{type:"CellIsRule",operator:operator,values:values,style:convertStyle({fontStyle:dxfs[rule.dxfId].font,fillStyle:dxfs[rule.dxfId].fill},warningManager),},});}}
return cfs;}
function convertDataBar(id,xlsxCf){const dataBar=xlsxCf.cfRules[0].dataBar;if(!dataBar)
return undefined;const color=hexaToInt(convertColor(dataBar.color)||"#FFFFFF");return{id:id.toString(),stopIfTrue:xlsxCf.cfRules[0].stopIfTrue,ranges:xlsxCf.sqref,rule:{type:"DataBarRule",color,},};}
function convertColorScale(id,xlsxCf){const scale=xlsxCf.cfRules[0].colorScale;if(!scale||scale.cfvos.length!==scale.colors.length||scale.cfvos.length<2||scale.cfvos.length>3){return undefined;}
const thresholds=[];for(let i=0;i<scale.cfvos.length;i++){thresholds.push({color:hexaToInt(convertColor(scale.colors[i])||"#FFFFFF"),type:CF_THRESHOLD_CONVERSION_MAP[scale.cfvos[i].type],value:scale.cfvos[i].value,});}
const minimum=thresholds[0];const maximum=thresholds.length===2?thresholds[1]:thresholds[2];const midpoint=thresholds.length===3?thresholds[1]:undefined;return{id:id.toString(),stopIfTrue:xlsxCf.cfRules[0].stopIfTrue,ranges:xlsxCf.sqref,rule:{type:"ColorScaleRule",minimum,midpoint,maximum},};}
function convertIconSet(id,xlsxCf,warningManager){const xlsxIconSet=xlsxCf.cfRules[0].iconSet;if(!xlsxIconSet)
return undefined;let cfVos=xlsxIconSet.cfvos;let cfIcons=xlsxIconSet.cfIcons;if(cfVos.length<3||(cfIcons&&cfIcons.length<3)){return undefined;}
if(cfVos.length>3){cfVos=[cfVos[0],cfVos[Math.floor(cfVos.length/2)],cfVos[cfVos.length-1]];}
if(cfIcons&&cfIcons.length>3){cfIcons=[cfIcons[0],cfIcons[Math.floor(cfIcons.length/2)],cfIcons[cfIcons.length-1]];}
const thresholds=[];for(let i=1;i<=2;i++){const type=CF_THRESHOLD_CONVERSION_MAP[cfVos[i].type];if(type==="value"){return undefined;}
thresholds.push({value:cfVos[i].value||"",operator:cfVos[i].gte?"ge":"gt",type:type,});}
let icons={lower:cfIcons?convertIcons(cfIcons[0].iconSet,cfIcons[0].iconId):convertIcons(xlsxIconSet.iconSet,0),middle:cfIcons?convertIcons(cfIcons[1].iconSet,cfIcons[1].iconId):convertIcons(xlsxIconSet.iconSet,1),upper:cfIcons?convertIcons(cfIcons[2].iconSet,cfIcons[2].iconId):convertIcons(xlsxIconSet.iconSet,2),};if(xlsxIconSet.reverse){icons={upper:icons.lower,middle:icons.middle,lower:icons.upper};}
for(const key of Object.keys(icons)){if(!icons[key]){warningManager.generateNotSupportedWarning(WarningTypes.CfIconSetEmptyIconNotSupported);switch(key){case"upper":icons[key]=ICON_SETS.dots.good;break;case"middle":icons[key]=ICON_SETS.dots.neutral;break;case"lower":icons[key]=ICON_SETS.dots.bad;break;}}}
return{id:id.toString(),stopIfTrue:xlsxCf.cfRules[0].stopIfTrue,ranges:xlsxCf.sqref,rule:{type:"IconSetRule",icons:icons,upperInflectionPoint:thresholds[1],lowerInflectionPoint:thresholds[0],},};}
function convertIcons(xlsxIconSet,index){const iconSet=ICON_SET_CONVERSION_MAP[xlsxIconSet];if(!iconSet)
return"";return index===0?ICON_SETS[iconSet].bad:index===1?ICON_SETS[iconSet].neutral:ICON_SETS[iconSet].good;}
function addCfConversionWarnings(cf,dxfs,warningManager){if(cf.cfRules.length>1){warningManager.generateNotSupportedWarning(WarningTypes.MultipleRulesCfNotSupported);}
if(!SUPPORTED_CF_TYPES.includes(cf.cfRules[0].type)){warningManager.generateNotSupportedWarning(WarningTypes.CfTypeNotSupported,cf.cfRules[0].type);}
if(cf.cfRules[0].dxfId){const dxf=dxfs[cf.cfRules[0].dxfId];if(dxf.border){warningManager.generateNotSupportedWarning(WarningTypes.CfFormatBorderNotSupported);}
if(dxf.alignment){warningManager.generateNotSupportedWarning(WarningTypes.CfFormatAlignmentNotSupported);}
if(dxf.numFmt){warningManager.generateNotSupportedWarning(WarningTypes.CfFormatNumFmtNotSupported);}}}
function convertOperator(operator){switch(operator){case"isNotEmpty":return"notContainsBlanks";case"isEmpty":return"containsBlanks";case"notContainsText":return"notContainsBlanks";case"containsText":return"containsText";case"beginsWithText":return"beginsWith";case"endsWithText":return"endsWith";case"isGreaterThan":return"greaterThan";case"isGreaterOrEqualTo":return"greaterThanOrEqual";case"isLessThan":return"lessThan";case"isLessOrEqualTo":return"lessThanOrEqual";case"isBetween":return"between";case"isNotBetween":return"notBetween";case"isEqual":return"equal";case"isNotEqual":return"notEqual";}}
function getCellType(value){switch(typeof value){case"boolean":return"b";case"string":return"str";case"number":return"n";default:return undefined;}}
function convertHeightToExcel(height){return Math.round(HEIGHT_FACTOR*height*100)/100;}
function convertWidthToExcel(width){return Math.round(WIDTH_FACTOR*width*100)/100;}
function convertHeightFromExcel(height){if(!height)
return height;return Math.round((height/HEIGHT_FACTOR)*100)/100;}
function convertWidthFromExcel(width){if(!width)
return width;return Math.round((width/WIDTH_FACTOR)*100)/100;}
function extractStyle(data,content,styleId,formatId,borderId){const style=styleId?data.styles[styleId]:{};const format=formatId?data.formats[formatId]:undefined;const styles={font:{size:style?.fontSize||DEFAULT_FONT_SIZE,color:{rgb:style?.textColor?style.textColor:"000000"},family:2,name:"Arial",},fill:style?.fillColor?{fgColor:{rgb:style.fillColor},}:{reservedAttribute:"none"},numFmt:format?{format:format,id:0}:undefined,border:borderId||0,alignment:{horizontal:style.align,vertical:style.verticalAlign?V_ALIGNMENT_EXPORT_CONVERSION_MAP[style.verticalAlign]:undefined,wrapText:style.wrapping==="wrap"||content?.includes(NEWLINE)?true:undefined,},};styles.font["strike"]=!!style?.strikethrough||undefined;styles.font["underline"]=!!style?.underline||undefined;styles.font["bold"]=!!style?.bold||undefined;styles.font["italic"]=!!style?.italic||undefined;return styles;}
function normalizeStyle(construct,styles){const numFmtId=convertFormat(styles["numFmt"],construct.numFmts);const style={fontId:pushElement(styles.font,construct.fonts),fillId:pushElement(styles.fill,construct.fills),borderId:styles.border,numFmtId,alignment:{vertical:styles.alignment.vertical,horizontal:styles.alignment.horizontal,wrapText:styles.alignment.wrapText,},};return pushElement(style,construct.styles);}
function convertFormat(format,numFmtStructure){if(!format){return 0;}
let formatId=XLSX_FORMAT_MAP[format.format];if(!formatId){formatId=pushElement(format,numFmtStructure)+FIRST_NUMFMT_ID;}
return formatId;}
function addRelsToFile(relsFiles,path,rel){const relsFile=relsFiles.find((file)=>file.path===path);let id;if(!relsFile){id="rId1";relsFiles.push({path,rels:[{...rel,id}]});}
else{id=`rId${(relsFile.rels.length + 1).toString()}`;relsFile.rels.push({...rel,id,});}
return id;}
const globalReverseLookup=new WeakMap();function pushElement(property,propertyList){let reverseLookup=globalReverseLookup.get(propertyList);if(!reverseLookup){reverseLookup=new Map();for(let i=0;i<propertyList.length;i++){const canonical=getCanonicalRepresentation(propertyList[i]);reverseLookup.set(canonical,i);}
globalReverseLookup.set(propertyList,reverseLookup);}
const canonical=getCanonicalRepresentation(property);if(reverseLookup.has(canonical)){return reverseLookup.get(canonical);}
const maxId=propertyList.length;propertyList.push(property);reverseLookup.set(canonical,maxId);return maxId;}
const chartIds=[];function convertChartId(chartId){const xlsxId=chartIds.findIndex((id)=>id===chartId);if(xlsxId===-1){chartIds.push(chartId);return chartIds.length;}
return xlsxId+1;}
const imageIds=[];function convertImageId(imageId){const xlsxId=imageIds.findIndex((id)=>id===imageId);if(xlsxId===-1){imageIds.push(imageId);return imageIds.length;}
return xlsxId+1;}
function convertDotValueToEMU(value){const DPI=96;return Math.round((value*914400)/DPI);}
function getRangeSize(reference,defaultSheetIndex,data){let xc=reference;let sheetName=undefined;({xc,sheetName}=splitReference(reference));let rangeSheetIndex;if(sheetName){const index=data.sheets.findIndex((sheet)=>isSheetNameEqual(sheet.name,sheetName));if(index<0){throw new Error("Unable to find a sheet with the name "+sheetName);}
rangeSheetIndex=index;}
else{rangeSheetIndex=Number(defaultSheetIndex);}
const zone=toUnboundedZone(xc);if(zone.right===undefined){zone.right=data.sheets[rangeSheetIndex].colNumber;}
if(zone.bottom===undefined){zone.bottom=data.sheets[rangeSheetIndex].rowNumber;}
return(zone.right-zone.left+1)*(zone.bottom-zone.top+1);}
function convertEMUToDotValue(value){const DPI=96;return Math.round((value*DPI)/914400);}
function getColPosition(colIndex,sheetData){let position=0;for(let i=0;i<colIndex;i++){const colAtIndex=sheetData.cols.find((col)=>i>=col.min&&i<=col.max);if(colAtIndex?.width){position+=colAtIndex.width;}
else if(sheetData.sheetFormat?.defaultColWidth){position+=sheetData.sheetFormat.defaultColWidth;}
else{position+=EXCEL_DEFAULT_COL_WIDTH;}}
return position/WIDTH_FACTOR;}
function getRowPosition(rowIndex,sheetData){let position=0;for(let i=0;i<rowIndex;i++){const rowAtIndex=sheetData.rows[i];if(rowAtIndex?.height){position+=rowAtIndex.height;}
else if(sheetData.sheetFormat?.defaultRowHeight){position+=sheetData.sheetFormat.defaultRowHeight;}
else{position+=EXCEL_DEFAULT_ROW_HEIGHT;}}
return position/HEIGHT_FACTOR;}
function convertDecimalCriterionTypeToExcelOperator(operator){return Object.keys(XLSX_DV_DECIMAL_OPERATOR_MAPPING).find((key)=>XLSX_DV_DECIMAL_OPERATOR_MAPPING[key]===operator);}
function convertDateCriterionTypeToExcelOperator(operator){return Object.keys(XLSX_DV_DATE_OPERATOR_TO_DV_TYPE_MAPPING).find((key)=>XLSX_DV_DATE_OPERATOR_TO_DV_TYPE_MAPPING[key]===operator);}
function convertFigures(sheetData){let id=1;return sheetData.figures.map((figure)=>convertFigure(figure,(id++).toString(),sheetData)).filter(isDefined);}
function convertFigure(figure,id,sheetData){let col;let row;let offset;let height,width;if(figure.anchors.length===1){({col,row,offset}=convertAnchor(figure.anchors[0]));width=convertEMUToDotValue(figure.figureSize.cx);height=convertEMUToDotValue(figure.figureSize.cy);}
else{({col,row,offset}=convertAnchor(figure.anchors[0]));const{x:x1,y:y1}=getPositionFromAnchor(figure.anchors[0],sheetData);const{x:x2,y:y2}=getPositionFromAnchor(figure.anchors[1],sheetData);width=x2-x1;height=y2-y1;}
const figureData={id,col,row,offset};if(isChartData(figure.data)){return{...figureData,width,height,tag:"chart",data:convertChartData(figure.data),};}
else if(isImageData(figure.data)){return{...figureData,width:convertEMUToDotValue(figure.data.size.cx),height:convertEMUToDotValue(figure.data.size.cy),tag:"image",data:{path:figure.data.imageSrc,mimetype:figure.data.mimetype,},};}
return undefined;}
function isChartData(data){return"dataSets"in data&&data.dataSets.length>0;}
function isImageData(data){return"imageSrc"in data;}
function convertChartData(chartData){const dataSetsHaveTitle=chartData.dataSets.some((ds)=>"reference"in(ds.label??{}));const labelRange=chartData.labelRange?convertExcelRangeToSheetXC(chartData.labelRange,dataSetsHaveTitle):undefined;const dataSets=chartData.dataSets.map((data)=>{let label=undefined;if(data.label&&"text"in data.label){label=data.label.text;}
return{dataRange:convertExcelRangeToSheetXC(data.range,dataSetsHaveTitle),label,backgroundColor:data.backgroundColor,trend:convertExcelTrendline(data.trend),};});if(chartData.type==="pie"){dataSets.reverse();}
const creationContext={range:dataSets,dataSetsHaveTitle,auxiliaryRange:labelRange,title:chartData.title??{text:""},background:convertColor({rgb:chartData.backgroundColor})||"#FFFFFF",legendPosition:chartData.legendPosition,stacked:chartData.stacked||false,aggregated:false,cumulative:chartData.cumulative||false,labelsAsText:false,};try{const ChartClass=chartRegistry.get(chartData.type);return ChartClass.getChartDefinitionFromContextCreation(creationContext);}
catch(e){return undefined;}}
function convertExcelRangeToSheetXC(range,dataSetsHaveTitle){const{sheetName,xc}=splitReference(range);let zone=toUnboundedZone(xc);if(dataSetsHaveTitle&&zone.bottom!==undefined&&zone.right!==undefined){const height=zone.bottom-zone.top+1;const width=zone.right-zone.left+1;if(height===1){zone={...zone,left:zone.left-1};}
else if(width===1){zone={...zone,top:zone.top-1};}}
const dataXC=zoneToXc(zone);return getFullReference(sheetName,dataXC);}
function convertExcelTrendline(trend){if(!trend||!trend.type){return undefined;}
return{type:trend.type==="linear"?"polynomial":EXCEL_TO_SPREADSHEET_TRENDLINE_TYPE_MAPPING[trend.type],order:trend.type==="linear"?1:trend.order,color:trend.color,window:trend.window||DEFAULT_WINDOW_SIZE,display:true,};}
function convertAnchor(XLSXanchor){const offset={x:convertEMUToDotValue(XLSXanchor.colOffset),y:convertEMUToDotValue(XLSXanchor.rowOffset),};return{col:XLSXanchor.col,row:XLSXanchor.row,offset};}
function getPositionFromAnchor(anchor,sheetData){return{x:getColPosition(anchor.col,sheetData)+convertEMUToDotValue(anchor.colOffset),y:getRowPosition(anchor.row,sheetData)+convertEMUToDotValue(anchor.rowOffset),};}
function convertDataValidationRules(xlsxDataValidations,warningManager){const dvRules=[];let dvId=1;for(const dv of xlsxDataValidations){if(!dv){continue;}
switch(dv.type){case"time":warningManager.generateNotSupportedWarning(WarningTypes.TimeDataValidationNotSupported);break;case"textLength":warningManager.generateNotSupportedWarning(WarningTypes.TextLengthDataValidationNotSupported);break;case"whole":warningManager.generateNotSupportedWarning(WarningTypes.WholeNumberDataValidationNotSupported);break;case"decimal":const decimalRule=convertDecimalRule(dvId++,dv);dvRules.push(decimalRule);break;case"list":const listRule=convertListrule(dvId++,dv);dvRules.push(listRule);break;case"date":if(dv.operator==="notEqual"){warningManager.generateNotSupportedWarning(WarningTypes.NotEqualDateDataValidationNotSupported);break;}
const dateRule=convertDateRule(dvId++,dv);dvRules.push(dateRule);break;case"custom":const customRule=convertCustomRule(dvId++,dv);dvRules.push(customRule);break;}}
return dvRules;}
function convertDecimalRule(id,dv){const values=[dv.formula1.toString()];if(dv.formula2){values.push(dv.formula2.toString());}
return{id:id.toString(),ranges:dv.sqref,isBlocking:dv.errorStyle!=="warning",criterion:{type:XLSX_DV_DECIMAL_OPERATOR_MAPPING[dv.operator],values,},};}
function convertListrule(id,dv){const formula1=dv.formula1.toString();const isRangeRule=rangeReference.test(formula1);return{id:id.toString(),ranges:dv.sqref,isBlocking:dv.errorStyle!=="warning",criterion:{type:isRangeRule?"isValueInRange":"isValueInList",values:isRangeRule?[formula1]:formula1.replaceAll('"',"").split(","),displayStyle:"arrow",},};}
function convertDateRule(id,dv){let criterion;const values=[dv.formula1.toString()];if(dv.formula2){values.push(dv.formula2.toString());criterion={type:XLSX_DV_DATE_OPERATOR_TO_DV_TYPE_MAPPING[dv.operator],values:getDateCriterionFormattedValues(values,DEFAULT_LOCALE),};}
else{criterion={type:XLSX_DV_DATE_OPERATOR_TO_DV_TYPE_MAPPING[dv.operator],values:getDateCriterionFormattedValues(values,DEFAULT_LOCALE),dateValue:"exactDate",};}
return{id:id.toString(),ranges:dv.sqref,isBlocking:dv.errorStyle!=="warning",criterion:criterion,};}
function convertCustomRule(id,dv){return{id:id.toString(),ranges:dv.sqref,isBlocking:dv.errorStyle!=="warning",criterion:{type:"customFormula",values:[`=${dv.formula1.toString()}`],},};}
const externalReferenceRegex=new RegExp(/'?\[([0-9]*)\](.*)'?!(\$?[a-zA-Z]*\$?[0-9]*)/g);const subtotalRegex=new RegExp(/SUBTOTAL\(([0-9]*),/g);const cellRegex=new RegExp(cellReference.source,"ig");function convertFormulasContent(sheet,data){const sfMap=getSharedFormulasMap(sheet);for(const cell of sheet.rows.map((row)=>row.cells).flat()){if(cell?.formula){cell.formula.content=cell.formula.sharedIndex!==undefined&&!cell.formula.content?"="+adaptFormula(cell.xc,sfMap[cell.formula.sharedIndex]):"="+cell.formula.content;cell.formula.content=convertFormula(cell.formula.content,data);}}}
function getSharedFormulasMap(sheet){const formulas={};for(const row of sheet.rows){for(const cell of row.cells){if(cell.formula&&cell.formula.sharedIndex!==undefined&&cell.formula.content){formulas[cell.formula.sharedIndex]={refCellXc:cell.xc,formula:cell.formula.content};}}}
return formulas;}
function convertFormula(formula,data){formula=formula.replace("_xlfn.","");formula=formula.replace(/#REF!/g,"#REF");formula=formula.replace(subtotalRegex,(match,functionId)=>{const convertedFunction=SUBTOTAL_FUNCTION_CONVERSION_MAP[functionId];return convertedFunction?convertedFunction+"(":match;});formula=formula.replace(externalReferenceRegex,(match,externalRefId,sheetName,cellRef)=>{externalRefId=Number(externalRefId)-1;cellRef=cellRef.replace(/\$/g,"");const sheetIndex=data.externalBooks[externalRefId].sheetNames.findIndex((name)=>isSheetNameEqual(name,sheetName));if(sheetIndex===-1){return match;}
const externalDataset=data.externalBooks[externalRefId].datasets.find((dataset)=>dataset.sheetId===sheetIndex)?.data;if(!externalDataset){return match;}
const datasetValue=externalDataset&&externalDataset[cellRef];const convertedValue=Number(datasetValue)?datasetValue:`"${datasetValue}"`;return convertedValue||match;});return formula;}
function adaptFormula(targetCell,sf){const refPosition=toCartesian(sf.refCellXc);let newFormula=sf.formula.slice();let match;do{match=cellRegex.exec(newFormula);if(match){const formulaPosition=toCartesian(match[0].replace("$",""));const targetPosition=toCartesian(targetCell);const rangePart={colFixed:match[0].startsWith("$"),rowFixed:match[0].includes("$",1),};const offset={col:targetPosition.col-refPosition.col,row:targetPosition.row-refPosition.row,};const offsettedPosition={col:rangePart.colFixed?formulaPosition.col:formulaPosition.col+offset.col,row:rangePart.rowFixed?formulaPosition.row:formulaPosition.row+offset.row,};newFormula=newFormula.slice(0,match.index)+
toXC(offsettedPosition.col,offsettedPosition.row,rangePart)+
newFormula.slice(match.index+match[0].length);}}while(match);return newFormula;}
function convertSheets(data,warningManager){return data.sheets.map((sheet)=>{convertFormulasContent(sheet,data);const sheetDims=getSheetDims(sheet);const sheetOptions=sheet.sheetViews[0];const rowHeaderGroups=convertHeaderGroup(sheet,"ROW",sheetDims[1]);const colHeaderGroups=convertHeaderGroup(sheet,"COL",sheetDims[0]);return{id:sheet.sheetName,areGridLinesVisible:sheetOptions?sheetOptions.showGridLines:true,name:sheet.sheetName,colNumber:sheetDims[0],rowNumber:sheetDims[1],...convertCells(sheet,data,sheetDims,warningManager),merges:sheet.merges,cols:convertCols(sheet,sheetDims[0],colHeaderGroups),rows:convertRows(sheet,sheetDims[1],rowHeaderGroups),conditionalFormats:convertConditionalFormats(sheet.cfs,data.dxfs,warningManager),dataValidationRules:convertDataValidationRules(sheet.dataValidations,warningManager),figures:convertFigures(sheet),isVisible:sheet.isVisible,panes:sheetOptions?{xSplit:sheetOptions.pane.xSplit,ySplit:sheetOptions.pane.ySplit}:{xSplit:0,ySplit:0},tables:[],headerGroups:{COL:colHeaderGroups,ROW:rowHeaderGroups},color:convertColor(sheet.sheetProperties?.tabColor),};});}
function convertCols(sheet,numberOfCols,headerGroups){const cols={};for(let i=1;i<numberOfCols+1;i++){const col=sheet.cols.find((col)=>col.min<=i&&i<=col.max);let colSize;if(col&&col.width)
colSize=col.width;else if(sheet.sheetFormat?.defaultColWidth)
colSize=sheet.sheetFormat.defaultColWidth;else
colSize=EXCEL_DEFAULT_COL_WIDTH;const colIndex=i-1;const isColFolded=headerGroups.some((group)=>group.isFolded&&group.start<=colIndex&&colIndex<=group.end);cols[colIndex]={size:convertWidthFromExcel(colSize),isHidden:!isColFolded&&col?.hidden,};}
return cols;}
function convertRows(sheet,numberOfRows,headerGroups){const rows={};for(let i=1;i<numberOfRows+1;i++){const row=sheet.rows.find((row)=>row.index===i);let rowSize;if(row&&row.height)
rowSize=row.height;else if(sheet.sheetFormat?.defaultRowHeight)
rowSize=sheet.sheetFormat.defaultRowHeight;else
rowSize=EXCEL_DEFAULT_ROW_HEIGHT;const rowIndex=i-1;const isRowFolded=headerGroups.some((group)=>group.isFolded&&group.start<=rowIndex&&rowIndex<=group.end);rows[rowIndex]={size:convertHeightFromExcel(rowSize),isHidden:!isRowFolded&&row?.hidden,};}
return rows;}
function convertSharedStrings(xlsxSharedStrings){return xlsxSharedStrings.map(replaceNewLines);}
function convertCells(sheet,data,sheetDims,warningManager){const cells={};const styles={};const formats={};const borders={};const sharedStrings=convertSharedStrings(data.sharedStrings);const hyperlinkMap=sheet.hyperlinks.reduce((map,link)=>{map[link.xc]=link;return map;},{});for(const row of sheet.rows){for(const cell of row.cells){cells[cell.xc]=getCellValue(cell,hyperlinkMap,sharedStrings,warningManager);if(cell.styleIndex){styles[cell.xc]=cell.styleIndex+1;formats[cell.xc]=data.styles[cell.styleIndex].numFmtId+1;borders[cell.xc]=data.styles[cell.styleIndex].borderId+1;}}}
for(const row of sheet.rows.filter((row)=>row.styleIndex)){for(let colIndex=1;colIndex<=sheetDims[0];colIndex++){const xc=toXC(colIndex-1,row.index-1);styles[xc]??=row.styleIndex+1;borders[xc]??=data.styles[row.styleIndex].borderId+1;formats[xc]??=data.styles[row.styleIndex].numFmtId+1;}}
for(const col of sheet.cols.filter((col)=>col.styleIndex)){for(let colIndex=col.min;colIndex<=Math.min(col.max,sheetDims[0]);colIndex++){for(let rowIndex=1;rowIndex<=sheetDims[1];rowIndex++){const xc=toXC(colIndex-1,rowIndex-1);styles[xc]??=col.styleIndex+1;borders[xc]??=data.styles[col.styleIndex].borderId+1;formats[xc]??=data.styles[col.styleIndex].numFmtId+1;}}}
return{cells,styles,formats,borders};}
function getCellValue(cell,hyperLinksMap,sharedStrings,warningManager){let cellValue;switch(cell.type){case"sharedString":const ssIndex=parseInt(cell.value,10);cellValue=sharedStrings[ssIndex];break;case"boolean":cellValue=Number(cell.value)?"TRUE":"FALSE";break;case"date":case"error":case"inlineStr":case"number":case"str":cellValue=cell.value;break;}
if(cellValue&&hyperLinksMap[cell.xc]){cellValue=convertHyperlink(hyperLinksMap[cell.xc],cellValue,warningManager);}
if(cell.formula){cellValue=cell.formula.content;}
return cellValue;}
function convertHyperlink(link,cellValue,warningManager){const label=link.display||cellValue;if(!link.relTarget&&!link.location){warningManager.generateNotSupportedWarning(WarningTypes.BadlyFormattedHyperlink);}
const url=link.relTarget?link.relTarget:buildSheetLink(splitReference(link.location).sheetName);return markdownLink(label,url);}
function getSheetDims(sheet){const dims=[0,0];for(const row of sheet.rows){dims[0]=Math.max(dims[0],largeMax(row.cells.map((cell)=>toCartesian(cell.xc).col)));dims[1]=Math.max(dims[1],row.index);}
dims[0]=Math.max(dims[0],EXCEL_IMPORT_DEFAULT_NUMBER_OF_COLS);dims[1]=Math.max(dims[1],EXCEL_IMPORT_DEFAULT_NUMBER_OF_ROWS);return dims;}
function convertHeaderGroup(sheet,dim,numberOfHeaders){const outlineProperties=sheet?.sheetProperties?.outlinePr;const headerGroups=[];let currentLayer=0;for(let i=0;i<numberOfHeaders;i++){const header=getHeader(sheet,dim,i);const headerLayer=header?.outlineLevel||0;if(headerLayer>currentLayer){const collapseFlagAfter=(dim==="ROW"?outlineProperties?.summaryBelow:outlineProperties?.summaryRight)??true;const group=computeHeaderGroup(sheet,dim,i,collapseFlagAfter);if(group){headerGroups.push(group);}}
currentLayer=headerLayer;}
return headerGroups;}
function computeHeaderGroup(sheet,dim,startIndex,collapseFlagAfter){const startHeader=getHeader(sheet,dim,startIndex);const startLayer=startHeader?.outlineLevel;if(!startLayer||!startLayer){return undefined;}
let currentLayer=startLayer;let currentIndex=startIndex;let currentHeader=startHeader;while(currentHeader&&currentLayer>=startLayer){currentIndex++;currentHeader=getHeader(sheet,dim,currentIndex);currentLayer=currentHeader?.outlineLevel||0;}
const start=startIndex;const end=currentIndex-1;const collapseFlagHeader=collapseFlagAfter?getHeader(sheet,dim,end+1):getHeader(sheet,dim,start-1);const isFolded=collapseFlagHeader?.collapsed||false;return{start:start-1,end:end-1,isFolded};}
function getHeader(sheet,dim,index){return"COL"===dim?sheet.cols.find((col)=>col.min<=index&&index<=col.max):sheet.rows.find((row)=>row.index===index);}
function convertTables(convertedData,xlsxData){for(const xlsxSheet of xlsxData.sheets){const sheet=convertedData.sheets.find((sheet)=>sheet.name===xlsxSheet.sheetName);if(!sheet)
continue;if(!sheet.tables)
sheet.tables=[];for(const table of xlsxSheet.tables){sheet.tables.push({range:table.ref,config:convertTableConfig(table)});}
for(const pivotTable of xlsxSheet.pivotTables){sheet.tables.push({range:pivotTable.location.ref,config:convertPivotTableConfig(pivotTable),});}}
convertTableFormulaReferences(convertedData.sheets,xlsxData.sheets);}
function convertTableConfig(table){const styleId=table.style?.name||"";return{hasFilters:table.autoFilter!==undefined,numberOfHeaders:table.headerRowCount,totalRow:table.totalsRowCount>0,firstColumn:table.style?.showFirstColumn||false,lastColumn:table.style?.showLastColumn||false,bandedRows:table.style?.showRowStripes||false,bandedColumns:table.style?.showColumnStripes||false,styleId:TABLE_PRESETS[styleId]?styleId:DEFAULT_TABLE_CONFIG.styleId,};}
function convertPivotTableConfig(pivotTable){return{hasFilters:false,numberOfHeaders:pivotTable.location.firstDataRow,totalRow:pivotTable.rowGrandTotals,firstColumn:true,lastColumn:pivotTable.style?.showLastColumn||false,bandedRows:pivotTable.style?.showRowStripes||false,bandedColumns:pivotTable.style?.showColStripes||false,styleId:DEFAULT_TABLE_CONFIG.styleId,};}
function convertTableFormulaReferences(convertedSheets,xlsxSheets){let deconstructedSheets=null;for(const tableSheet of convertedSheets){const tables=xlsxSheets.find((s)=>isSheetNameEqual(s.sheetName,tableSheet.name)).tables;if(!tables||tables.length===0){continue;}
if(!deconstructedSheets){deconstructedSheets=deconstructSheets(convertedSheets);}
for(const table of tables){for(const sheetId in deconstructedSheets){const sheet=convertedSheets.find((s)=>s.id===sheetId);for(const xc in deconstructedSheets[sheetId]){const deconstructedCell=deconstructedSheets[sheetId][xc];for(let i=deconstructedCell.length-3;i>=0;i-=2){const possibleTable=deconstructedSheets[sheetId][xc][i];if(!possibleTable.endsWith(table.name)){continue;}
const possibleRef=deconstructedSheets[sheetId][xc][i+1];const sheetPrefix=tableSheet.id===sheet.id?"":tableSheet.name+"!";const convertedRef=convertTableReference(sheetPrefix,possibleRef,table,xc);deconstructedSheets[sheetId][xc][i+2]=possibleTable.slice(0,possibleTable.indexOf(table.name))+
convertedRef+
deconstructedSheets[sheetId][xc][i+2];deconstructedSheets[sheetId][xc].splice(i,2);}}}}}
if(!deconstructedSheets){return;}
for(const sheetId in deconstructedSheets){const sheet=convertedSheets.find((s)=>s.id===sheetId);for(const xc in deconstructedSheets[sheetId]){const deconstructedCell=deconstructedSheets[sheetId][xc];if(deconstructedCell.length===1){sheet.cells[xc]=deconstructedCell[0];continue;}
let newContent="";for(let i=0;i<deconstructedCell.length;i+=2){newContent+=deconstructedCell[i]+"["+deconstructedCell[i+1]+"]";}
newContent+=deconstructedCell[deconstructedCell.length-1];sheet.cells[xc]=newContent;}}}
function deconstructSheets(convertedSheets){const deconstructedSheets={};for(const sheet of convertedSheets){for(const xc in sheet.cells){const cellContent=sheet.cells[xc];if(!cellContent||!cellContent.startsWith("=")){continue;}
const startIndex=cellContent.indexOf("[");if(startIndex===-1){continue;}
const deconstructedCell=[];let possibleTable=cellContent.slice(0,startIndex);let possibleRef="";let openBrackets=1;let mainPossibleTableIndex=0;let mainOpenBracketIndex=startIndex;for(let index=startIndex+1;index<cellContent.length;index++){if(cellContent[index]==="["){if(openBrackets===0){possibleTable=cellContent.slice(mainPossibleTableIndex,index);mainOpenBracketIndex=index;}
openBrackets++;continue;}
if(cellContent[index]==="]"){openBrackets--;if(openBrackets===0){possibleRef=cellContent.slice(mainOpenBracketIndex+1,index);deconstructedCell.push(possibleTable);deconstructedCell.push(possibleRef);mainPossibleTableIndex=index+1;}}}
if(deconstructedCell.length){if(!deconstructedSheets[sheet.id]){deconstructedSheets[sheet.id]={};}
deconstructedCell.push(cellContent.slice(mainPossibleTableIndex));deconstructedSheets[sheet.id][xc]=[...deconstructedCell];}}}
return deconstructedSheets;}
function convertTableReference(sheetPrefix,expr,table,cellXc){const parts=expr.split(",").map((part)=>part.trim());const tableZone=toZone(table.ref);const colIndexes=[];const rowIndexes=[];const foundKeywords=[];for(const part of parts){if(removeBrackets(part).startsWith("#")){const keyWord=removeBrackets(part);foundKeywords.push(keyWord);switch(keyWord){case"#All":rowIndexes.push(tableZone.top,tableZone.bottom);break;case"#Data":const top=table.headerRowCount?tableZone.top+table.headerRowCount:tableZone.top;const bottom=table.totalsRowCount?tableZone.bottom-table.totalsRowCount:tableZone.bottom;rowIndexes.push(top,bottom);break;case"#This Row":rowIndexes.push(toCartesian(cellXc).row);break;case"#Headers":if(!table.headerRowCount){return CellErrorType.InvalidReference;}
rowIndexes.push(tableZone.top);break;case"#Totals":if(!table.totalsRowCount){return CellErrorType.InvalidReference;}
rowIndexes.push(tableZone.bottom);break;}}
else{const columns=part.split(":").map((part)=>part.trim()).map(removeBrackets);if(colIndexes.length){return CellErrorType.InvalidReference;}
const colRelativeIndex=table.cols.findIndex((col)=>col.name===columns[0]);if(colRelativeIndex===-1){return CellErrorType.InvalidReference;}
colIndexes.push(colRelativeIndex+tableZone.left);if(columns[1]){const colRelativeIndex2=table.cols.findIndex((col)=>col.name===columns[1]);if(colRelativeIndex2===-1){return CellErrorType.InvalidReference;}
colIndexes.push(colRelativeIndex2+tableZone.left);}}}
if(!areKeywordsCompatible(foundKeywords)){return CellErrorType.InvalidReference;}
if(rowIndexes.length===0){const top=table.headerRowCount?tableZone.top+table.headerRowCount:tableZone.top;const bottom=table.totalsRowCount?tableZone.bottom-table.totalsRowCount:tableZone.bottom;rowIndexes.push(top,bottom);}
if(colIndexes.length===0){colIndexes.push(tableZone.left,tableZone.right);}
const refZone={top:Math.min(...rowIndexes),left:Math.min(...colIndexes),bottom:Math.max(...rowIndexes),right:Math.max(...colIndexes),};return sheetPrefix+zoneToXc(refZone);}
function removeBrackets(str){return str.startsWith("[")&&str.endsWith("]")?str.slice(1,str.length-1):str;}
function areKeywordsCompatible(keywords){if(keywords.length<2){return true;}
else if(keywords.length>2){return false;}
else if(keywords.includes("#Data")&&keywords.includes("#Totals")){return true;}
else if(keywords.includes("#Headers")&&keywords.includes("#Data")){return true;}
return false;}
class AttributeValue{value;constructor(value){this.value=value;}
asString(){return fixXlsxUnicode(String(this.value));}
asBool(){if(this.value==="true")
return true;if(this.value==="false")
return false;return Boolean(Number(this.value));}
asNum(){return Number(this.value);}}
class XlsxBaseExtractor{rootFile;xlsxFileStructure;warningManager;relationships;currentFile=undefined;constructor(rootFile,xlsxStructure,warningManager){this.rootFile=rootFile;this.currentFile=rootFile.file.fileName;this.xlsxFileStructure=xlsxStructure;this.warningManager=warningManager;this.relationships={};if(rootFile.rels){this.extractRelationships(rootFile.rels).map((rel)=>{this.relationships[rel.id]=rel;});}}
extractRelationships(relFile){return this.mapOnElements({parent:relFile.xml,query:"Relationship"},(relationshipElement)=>{return{id:this.extractAttr(relationshipElement,"Id",{required:true}).asString(),target:this.extractAttr(relationshipElement,"Target",{required:true}).asString(),type:this.extractAttr(relationshipElement,"Type",{required:true}).asString(),};});}
getListOfXMLFiles(){return Object.entries(this.xlsxFileStructure).filter(([key])=>key!=="images").map(([_,value])=>value).flat().filter(isDefined);}
mapOnElements(args,fct){const ret=[];const oldWorkingDocument=this.currentFile;let elements;if(args.children){const children=this.querySelector(args.parent,args.query)?.children;elements=children?children:[];}
else{elements=this.querySelectorAll(args.parent,args.query);}
if(elements){for(const element of elements){try{ret.push(fct(element));}
catch(e){this.catchErrorOnElement(e,element);}}}
this.currentFile=oldWorkingDocument;return ret;}
catchErrorOnElement(error,onElement){const errorMsg=onElement?`Error when parsing an element <${onElement.tagName}> of file ${this.currentFile}, skip this element. \n${error.stack}`:`Error when parsing file ${this.currentFile}.`;this.warningManager.addParsingWarning([errorMsg,error.message].join("\n"));}
extractAttr(e,attName,optionalArgs){const attribute=e.attributes[attName];if(!attribute)
this.handleMissingValue(e,`attribute "${attName}"`,optionalArgs);const value=attribute?.value?attribute.value:optionalArgs?.default;return(value===undefined?undefined:new AttributeValue(value));}
extractTextContent(element,optionalArgs){if(optionalArgs?.default!==undefined&&typeof optionalArgs.default!=="string"){throw new Error("extractTextContent default value should be a string");}
const shouldPreserveSpaces=element?.attributes["xml:space"]?.value==="preserve";let textContent=element?.textContent;if(!element||textContent===null){this.handleMissingValue(element,`text content`,optionalArgs);}
if(textContent){textContent=shouldPreserveSpaces?textContent:textContent.trim();}
return(textContent?fixXlsxUnicode(textContent):optionalArgs?.default);}
extractChildAttr(e,childRef,attName,optionalArgs){let child;if(typeof childRef==="number"){child=e.children[childRef];}
else{child=this.querySelector(e,childRef);}
if(!child){this.handleMissingValue(e,typeof childRef==="number"?`child at index ${childRef}`:`child <${childRef}>`,optionalArgs);}
const value=child?this.extractAttr(child,attName,optionalArgs)?.asString():optionalArgs?.default;return(value!==undefined?new AttributeValue(value):undefined);}
extractChildTextContent(e,childRef,optionalArgs){if(optionalArgs?.default!==undefined&&typeof optionalArgs.default!=="string"){throw new Error("extractTextContent default value should be a string");}
const child=this.querySelector(e,childRef);if(!child){this.handleMissingValue(e,`child <${childRef}>`,optionalArgs);}
return(child?this.extractTextContent(child,optionalArgs):optionalArgs?.default);}
handleMissingValue(parentElement,missingElementName,optionalArgs){if(optionalArgs?.required){if(optionalArgs?.default!==undefined){this.warningManager.addParsingWarning(`Missing required ${missingElementName} in element <${parentElement.tagName}> of ${this.currentFile}, replacing it by the default value ${optionalArgs.default}`);}
else{throw new Error(`Missing required ${missingElementName} in element <${parentElement.tagName}> of ${this.currentFile}, and no default value was set`);}}}
extractColor(colorElement,theme,defaultColor){if(!colorElement){return defaultColor?{rgb:defaultColor}:undefined;}
const themeIndex=this.extractAttr(colorElement,"theme")?.asString();let rgb;if(themeIndex!==undefined){if(!theme||!theme.clrScheme){throw new Error("Color referencing a theme but no theme was provided");}
rgb=this.getThemeColor(themeIndex,theme.clrScheme);}
else{rgb=this.extractAttr(colorElement,"rgb")?.asString();rgb=rgb===DEFAULT_SYSTEM_COLOR?undefined:rgb;}
return{rgb:rgb||defaultColor,auto:this.extractAttr(colorElement,"auto")?.asBool(),indexed:this.extractAttr(colorElement,"indexed")?.asNum(),tint:this.extractAttr(colorElement,"tint")?.asNum(),};}
getTargetXmlFile(relationship){if(!relationship)
throw new Error("Undefined target file");const target=this.processRelationshipTargetName(relationship.target);const f=this.getListOfXMLFiles().find((f)=>f.file.fileName.endsWith(target));if(!f||!f.file)
throw new Error("Cannot find target file");return f;}
getTargetImageFile(relationship){if(!relationship)
throw new Error("Undefined target file");const target=this.processRelationshipTargetName(relationship.target);const f=this.xlsxFileStructure.images.find((f)=>f.fileName.endsWith(target));if(!f)
throw new Error("Cannot find target file");return f;}
querySelector(element,query){const escapedQuery=escapeQueryNameSpaces(query);return element.querySelector(escapedQuery);}
querySelectorAll(element,query){const escapedQuery=escapeQueryNameSpaces(query);return element.querySelectorAll(escapedQuery);}
getThemeColor(colorId,clrScheme){switch(colorId){case"0":return"FFFFFF";case"1":return"000000";case"2":return clrScheme["3"].value;case"3":return clrScheme["2"].value;default:return clrScheme[colorId].value;}}
processRelationshipTargetName(targetName){return targetName.replace(/\.+\//,"");}}
class XlsxMiscExtractor extends XlsxBaseExtractor{getTheme(){const clrScheme=this.mapOnElements({query:"a:clrScheme",parent:this.rootFile.file.xml,children:true},(element)=>{return{name:element.tagName,value:this.extractChildAttr(element,0,"val",{required:true,default:AUTO_COLOR,}).asString(),lastClr:this.extractChildAttr(element,0,"lastClr",{default:AUTO_COLOR,}).asString(),};});return{clrScheme};}
getSharedStrings(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"si"},(ssElement)=>{return this.mapOnElements({parent:ssElement,query:"t"},(textElement)=>{return this.extractTextContent(textElement)||"";}).join("");});}}
class XlsxCfExtractor extends XlsxBaseExtractor{theme;constructor(sheetFile,xlsxStructure,warningManager,theme){super(sheetFile,xlsxStructure,warningManager);this.theme=theme;}
extractConditionalFormattings(){const cfs=this.mapOnElements({parent:this.rootFile.file.xml,query:"worksheet > conditionalFormatting"},(cfElement)=>{return{sqref:this.extractAttr(cfElement,"sqref",{required:true}).asString().split(" "),pivot:this.extractAttr(cfElement,"pivot")?.asBool(),cfRules:this.extractCFRules(cfElement,this.theme),};});cfs.push(...this.mapOnElements({parent:this.rootFile.file.xml,query:"extLst x14:conditionalFormatting"},(cfElement)=>{return{sqref:this.extractChildTextContent(cfElement,"xm:sqref",{required:true}).split(" "),pivot:this.extractAttr(cfElement,"xm:pivot")?.asBool(),cfRules:this.extractCFRules(cfElement,this.theme),};}));return cfs;}
extractCFRules(cfElement,theme){return this.mapOnElements({parent:cfElement,query:"cfRule, x14:cfRule"},(cfRuleElement)=>{const cfType=this.extractAttr(cfRuleElement,"type",{required:true,}).asString();return{type:cfType,priority:this.extractAttr(cfRuleElement,"priority",{required:true}).asNum(),colorScale:this.extractCfColorScale(cfRuleElement,theme),formula:this.extractCfFormula(cfRuleElement),iconSet:this.extractCfIconSet(cfRuleElement),dxfId:this.extractAttr(cfRuleElement,"dxfId")?.asNum(),stopIfTrue:this.extractAttr(cfRuleElement,"stopIfTrue")?.asBool(),aboveAverage:this.extractAttr(cfRuleElement,"aboveAverage")?.asBool(),percent:this.extractAttr(cfRuleElement,"percent")?.asBool(),bottom:this.extractAttr(cfRuleElement,"bottom")?.asBool(),operator:this.extractAttr(cfRuleElement,"operator")?.asString(),text:this.extractAttr(cfRuleElement,"text")?.asString(),timePeriod:this.extractAttr(cfRuleElement,"timePeriod")?.asString(),rank:this.extractAttr(cfRuleElement,"rank")?.asNum(),stdDev:this.extractAttr(cfRuleElement,"stdDev")?.asNum(),equalAverage:this.extractAttr(cfRuleElement,"equalAverage")?.asBool(),dataBar:this.extractCfDataBar(cfRuleElement,theme),};});}
extractCfFormula(cfRulesElement){return this.mapOnElements({parent:cfRulesElement,query:"formula"},(cfFormulaElements)=>{return this.extractTextContent(cfFormulaElements,{required:true});});}
extractCfColorScale(cfRulesElement,theme){const colorScaleElement=this.querySelector(cfRulesElement,"colorScale");if(!colorScaleElement)
return undefined;return{colors:this.mapOnElements({parent:colorScaleElement,query:"color"},(colorElement)=>{return this.extractColor(colorElement,theme,"ffffff");}),cfvos:this.extractCFVos(colorScaleElement),};}
extractCfDataBar(cfRulesElement,theme){const dataBarElement=this.querySelector(cfRulesElement,"dataBar");if(!dataBarElement)
return undefined;return{color:this.extractColor(dataBarElement.querySelector("color"),theme,"EFF7FF"),cfvos:this.extractCFVos(dataBarElement),};}
extractCfIconSet(cfRulesElement){const iconSetElement=this.querySelector(cfRulesElement,"iconSet, x14:iconSet");if(!iconSetElement)
return undefined;return{iconSet:this.extractAttr(iconSetElement,"iconSet",{default:"3TrafficLights1",}).asString(),showValue:this.extractAttr(iconSetElement,"showValue",{default:true}).asBool(),percent:this.extractAttr(iconSetElement,"percent",{default:true}).asBool(),reverse:this.extractAttr(iconSetElement,"reverse")?.asBool(),custom:this.extractAttr(iconSetElement,"custom")?.asBool(),cfvos:this.extractCFVos(iconSetElement),cfIcons:this.extractCfIcons(iconSetElement),};}
extractCfIcons(iconSetElement){const icons=this.mapOnElements({parent:iconSetElement,query:"cfIcon, x14:cfIcon"},(cfIconElement)=>{return{iconSet:this.extractAttr(cfIconElement,"iconSet",{required:true,}).asString(),iconId:this.extractAttr(cfIconElement,"iconId",{required:true}).asNum(),};});return icons.length===0?undefined:icons;}
extractCFVos(parent){return this.mapOnElements({parent,query:"cfvo, x14:cfvo"},(cfVoElement)=>{return{type:this.extractAttr(cfVoElement,"type",{required:true,}).asString(),gte:this.extractAttr(cfVoElement,"gte",{default:true})?.asBool(),value:cfVoElement.attributes["val"]?this.extractAttr(cfVoElement,"val")?.asString():this.extractChildTextContent(cfVoElement,"f, xm:f"),};});}}
class XlsxDataValidationExtractor extends XlsxBaseExtractor{theme;constructor(sheetFile,xlsxStructure,warningManager,theme){super(sheetFile,xlsxStructure,warningManager);this.theme=theme;}
extractDataValidations(){const dataValidations=this.mapOnElements({parent:this.rootFile.file.xml,query:"worksheet > dataValidations > dataValidation"},(dvElement)=>{return{type:this.extractAttr(dvElement,"type",{required:true}).asString(),operator:this.extractAttr(dvElement,"operator",{default:"between",})?.asString(),sqref:this.extractAttr(dvElement,"sqref",{required:true}).asString().split(" "),errorStyle:this.extractAttr(dvElement,"errorStyle")?.asString(),formula1:this.extractDataValidationFormula(dvElement,1)[0],formula2:this.extractDataValidationFormula(dvElement,2)[0],showErrorMessage:this.extractAttr(dvElement,"showErrorMessage")?.asBool(),errorTitle:this.extractAttr(dvElement,"errorTitle")?.asString(),error:this.extractAttr(dvElement,"error")?.asString(),showInputMessage:this.extractAttr(dvElement,"showInputMessage")?.asBool(),promptTitle:this.extractAttr(dvElement,"promptTitle")?.asString(),prompt:this.extractAttr(dvElement,"prompt")?.asString(),allowBlank:this.extractAttr(dvElement,"allowBlank")?.asBool(),};});return dataValidations;}
extractDataValidationFormula(dvElement,index){return this.mapOnElements({parent:dvElement,query:`formula${index}`},(cfFormulaElements)=>{return this.extractTextContent(cfFormulaElements,{required:true});});}}
class XlsxChartExtractor extends XlsxBaseExtractor{extractChart(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"c:chartSpace"},(rootChartElement)=>{const chartType=this.getChartType(rootChartElement);if(!CHART_TYPE_CONVERSION_MAP[chartType]){throw new Error(`Unsupported chart type ${chartType}`);}
if(CHART_TYPE_CONVERSION_MAP[chartType]==="combo"){return this.extractComboChart(rootChartElement);}
const chartTitle=this.mapOnElements({parent:rootChartElement,query:"c:chart > c:title a:t"},(textElement)=>{return textElement.textContent||"";}).join("");const barChartGrouping=this.extractChildAttr(rootChartElement,"c:grouping","val",{default:"clustered",}).asString();return{title:{text:chartTitle},type:CHART_TYPE_CONVERSION_MAP[chartType],dataSets:this.extractChartDatasets(this.querySelectorAll(rootChartElement,`c:${chartType}`),chartType),labelRange:this.extractLabelRange(chartType,rootChartElement),backgroundColor:this.extractChildAttr(rootChartElement,"c:chartSpace > c:spPr a:srgbClr","val",{default:"ffffff",}).asString(),legendPosition:DRAWING_LEGEND_POSITION_CONVERSION_MAP[this.extractChildAttr(rootChartElement,"c:legendPos","val",{default:"none",}).asString()],stacked:barChartGrouping==="stacked",fontColor:"000000",};})[0];}
extractLabelRange(chartType,rootChartElement){if(chartType==="scatterChart"){return(this.extractChildTextContent(rootChartElement,`c:ser c:strRef c:f`)||this.extractChildTextContent(rootChartElement,`c:ser c:numRef c:f`));}
return this.extractChildTextContent(rootChartElement,`c:ser c:cat c:f`);}
extractComboChart(chartElement){const chartTitle=this.mapOnElements({parent:chartElement,query:"c:title a:t"},(textElement)=>{return textElement.textContent||"";}).join("");const barChartGrouping=this.extractChildAttr(chartElement,"c:grouping","val",{default:"clustered",}).asString();return{title:{text:chartTitle},type:"combo",dataSets:[...this.extractChartDatasets(this.querySelectorAll(chartElement,`c:barChart`),"comboChart"),...this.extractChartDatasets(this.querySelectorAll(chartElement,`c:lineChart`),"comboChart"),],labelRange:this.extractChildTextContent(chartElement,"c:ser c:cat c:f"),backgroundColor:this.extractChildAttr(chartElement,"c:chartSpace > c:spPr a:srgbClr","val",{default:"ffffff",}).asString(),legendPosition:DRAWING_LEGEND_POSITION_CONVERSION_MAP[this.extractChildAttr(chartElement,"c:legendPos","val",{default:"none",}).asString()],stacked:barChartGrouping==="stacked",fontColor:"000000",};}
extractChartDatasets(chartElements,chartType){return Array.from(chartElements).map((element)=>{if(chartType==="scatterChart"){return this.extractScatterChartDatasets(element);}
return this.mapOnElements({parent:element,query:"c:ser"},(chartDataElement)=>{let label={};const reference=this.extractChildTextContent(chartDataElement,"c:tx c:f");if(reference){label={reference};}
else{const text=this.extractChildTextContent(chartDataElement,"c:tx c:v");if(text){label={text};}}
const colorElements=this.querySelectorAll(chartDataElement,"c:spPr a:solidFill");const datasetColorElement=colorElements.length?this.querySelector(colorElements[0],"a:srgbClr"):undefined;const color=datasetColorElement?datasetColorElement.getAttribute("val"):undefined;return{label,range:this.extractChildTextContent(chartDataElement,"c:val c:f",{required:true,}),backgroundColor:color&&isColorValid(color)?`${toHex(color)}`:undefined,trend:this.extractChartTrendline(chartDataElement),};});}).flat();}
extractChartTrendline(chartDataElement){const trendlineElement=this.querySelector(chartDataElement,"c:trendline");if(!trendlineElement){return undefined;}
const trendlineType=this.extractChildAttr(trendlineElement,"c:trendlineType","val");const trendlineColor=this.extractChildAttr(trendlineElement,"a:solidFill a:srgbClr","val");return{type:trendlineType?trendlineType.asString():undefined,order:this.extractChildAttr(trendlineElement,"c:order","val")?.asNum(),window:this.extractChildAttr(trendlineElement,"c:period","val")?.asNum(),color:trendlineColor&&isColorValid(trendlineColor.asString())?`${toHex(trendlineColor.asString())}`:undefined,};}
extractScatterChartDatasets(chartElement){return this.mapOnElements({parent:chartElement,query:"c:ser"},(chartDataElement)=>{let label={};const colorElements=this.querySelectorAll(chartDataElement,"c:spPr a:solidFill a:srgbClr");const color=colorElements.length?colorElements[0].getAttribute("val"):undefined;const reference=this.extractChildTextContent(chartDataElement,"c:tx c:f");if(reference){label={reference};}
else{const text=this.extractChildTextContent(chartDataElement,"c:tx c:v");if(text){label={text};}}
return{label,range:this.extractChildTextContent(chartDataElement,"c:yVal c:f",{required:true}),trend:this.extractChartTrendline(chartDataElement),backgroundColor:color&&isColorValid(color)?`${toHex(color)}`:undefined,};});}
getChartType(chartElement){const plotAreaElement=this.querySelector(chartElement,"c:plotArea");if(!plotAreaElement){throw new Error("Missing plot area in the chart definition.");}
let globalTag=undefined;for(const child of plotAreaElement.children){const tag=removeTagEscapedNamespaces(child.tagName);if(XLSX_CHART_TYPES.some((chartType)=>chartType===tag)){if(!globalTag){globalTag=tag;}
else if(globalTag!==tag){globalTag="comboChart";}}}
if(globalTag){return globalTag;}
throw new Error("Unknown chart type");}}
const ONE_CELL_ANCHOR="oneCellAnchor";const TWO_CELL_ANCHOR="twoCellAnchor";class XlsxFigureExtractor extends XlsxBaseExtractor{extractFigures(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"xdr:wsDr",children:true},(figureElement)=>{const anchorType=removeTagEscapedNamespaces(figureElement.tagName);const anchors=this.extractFigureAnchorsByType(figureElement,anchorType);const chartElement=this.querySelector(figureElement,"c:chart");const imageElement=this.querySelector(figureElement,"a:blip");if(!chartElement&&!imageElement){throw new Error("Only chart and image figures are currently supported.");}
return{anchors,data:chartElement?this.extractChart(chartElement):this.extractImage(figureElement),figureSize:anchorType===ONE_CELL_ANCHOR?this.extractFigureSizeFromSizeTag(figureElement,"xdr:ext"):undefined,};});}
extractFigureAnchorsByType(figureElement,anchorType){switch(anchorType){case ONE_CELL_ANCHOR:return[this.extractFigureAnchor("xdr:from",figureElement)];case TWO_CELL_ANCHOR:return[this.extractFigureAnchor("xdr:from",figureElement),this.extractFigureAnchor("xdr:to",figureElement),];default:throw new Error(`${anchorType} is not supported for xlsx drawings. `);}}
extractFigureSizeFromSizeTag(figureElement,sizeTag){const sizeElement=this.querySelector(figureElement,sizeTag);if(!sizeElement){throw new Error(`Missing size element '${sizeTag}'`);}
return{cx:this.extractAttr(sizeElement,"cx",{required:true}).asNum(),cy:this.extractAttr(sizeElement,"cy",{required:true}).asNum(),};}
extractFigureAnchor(anchorTag,figureElement){const anchor=this.querySelector(figureElement,anchorTag);if(!anchor){throw new Error(`Missing anchor element ${anchorTag}`);}
return{col:Number(this.extractChildTextContent(anchor,"xdr:col",{required:true})),colOffset:Number(this.extractChildTextContent(anchor,"xdr:colOff",{required:true})),row:Number(this.extractChildTextContent(anchor,"xdr:row",{required:true})),rowOffset:Number(this.extractChildTextContent(anchor,"xdr:rowOff",{required:true})),};}
extractChart(chartElement){const chartId=this.extractAttr(chartElement,"r:id",{required:true}).asString();const chartFile=this.getTargetXmlFile(this.relationships[chartId]);const chartDefinition=new XlsxChartExtractor(chartFile,this.xlsxFileStructure,this.warningManager).extractChart();if(!chartDefinition){throw new Error("Unable to extract chart definition");}
return chartDefinition;}
extractImage(figureElement){const imageElement=this.querySelector(figureElement,"a:blip");const imageId=this.extractAttr(imageElement,"r:embed",{required:true}).asString();const image=this.getTargetImageFile(this.relationships[imageId]);if(!image){throw new Error("Unable to extract image");}
const extension=image.fileName.split(".").at(-1);const anchorType=removeTagEscapedNamespaces(figureElement.tagName);const sizeElement=anchorType===TWO_CELL_ANCHOR?this.querySelector(figureElement,"a:xfrm"):figureElement;const sizeTag=anchorType===TWO_CELL_ANCHOR?"a:ext":"xdr:ext";const size=this.extractFigureSizeFromSizeTag(sizeElement,sizeTag);return{imageSrc:image.imageSrc,mimetype:extension?IMAGE_EXTENSION_TO_MIMETYPE_MAPPING[extension]:undefined,size,};}}
class XlsxPivotExtractor extends XlsxBaseExtractor{getPivotTable(){return this.mapOnElements({query:":root",parent:this.rootFile.file.xml},(pivotElement)=>{return{name:this.extractAttr(pivotElement,"name",{required:true}).asString(),rowGrandTotals:this.extractAttr(pivotElement,"rowGrandTotals",{default:true,}).asBool(),location:this.extractPivotLocation(pivotElement),style:this.extractPivotStyleInfo(pivotElement),};})[0];}
extractPivotLocation(pivotElement){return this.mapOnElements({query:"location",parent:pivotElement},(pivotStyleElement)=>{return{ref:this.extractAttr(pivotStyleElement,"ref",{required:true}).asString(),firstHeaderRow:this.extractAttr(pivotStyleElement,"firstHeaderRow",{required:true,}).asNum(),firstDataRow:this.extractAttr(pivotStyleElement,"firstDataRow",{required:true,}).asNum(),firstDataCol:this.extractAttr(pivotStyleElement,"firstDataCol",{required:true,}).asNum(),};})[0];}
extractPivotStyleInfo(pivotElement){return this.mapOnElements({query:"pivotTableStyleInfo",parent:pivotElement},(pivotStyleElement)=>{return{name:this.extractAttr(pivotStyleElement,"name",{required:true}).asString(),showRowHeaders:this.extractAttr(pivotStyleElement,"showRowHeaders",{required:true,}).asBool(),showColHeaders:this.extractAttr(pivotStyleElement,"showColHeaders",{required:true,}).asBool(),showRowStripes:this.extractAttr(pivotStyleElement,"showRowStripes",{required:true,}).asBool(),showColStripes:this.extractAttr(pivotStyleElement,"showColStripes",{required:true,}).asBool(),showLastColumn:this.extractAttr(pivotStyleElement,"showLastColumn")?.asBool(),};})[0];}}
class XlsxTableExtractor extends XlsxBaseExtractor{getTable(){return this.mapOnElements({query:"table",parent:this.rootFile.file.xml},(tableElement)=>{return{displayName:this.extractAttr(tableElement,"displayName",{required:true,}).asString(),name:this.extractAttr(tableElement,"name")?.asString(),id:this.extractAttr(tableElement,"id",{required:true}).asString(),ref:this.extractAttr(tableElement,"ref",{required:true}).asString(),headerRowCount:this.extractAttr(tableElement,"headerRowCount",{default:1,}).asNum(),totalsRowCount:this.extractAttr(tableElement,"totalsRowCount",{default:0,}).asNum(),cols:this.extractTableCols(tableElement),style:this.extractTableStyleInfo(tableElement),autoFilter:this.extractTableAutoFilter(tableElement),};})[0];}
extractTableCols(tableElement){return this.mapOnElements({query:"tableColumn",parent:tableElement},(tableColElement)=>{return{id:this.extractAttr(tableColElement,"id",{required:true}).asString(),name:this.extractAttr(tableColElement,"name",{required:true}).asString(),colFormula:this.extractChildTextContent(tableColElement,"calculatedColumnFormula"),};});}
extractTableStyleInfo(tableElement){return this.mapOnElements({query:"tableStyleInfo",parent:tableElement},(tableStyleElement)=>{return{name:this.extractAttr(tableStyleElement,"name")?.asString(),showFirstColumn:this.extractAttr(tableStyleElement,"showFirstColumn")?.asBool(),showLastColumn:this.extractAttr(tableStyleElement,"showLastColumn")?.asBool(),showRowStripes:this.extractAttr(tableStyleElement,"showRowStripes")?.asBool(),showColumnStripes:this.extractAttr(tableStyleElement,"showColumnStripes")?.asBool(),};})[0];}
extractTableAutoFilter(tableElement){return this.mapOnElements({query:"autoFilter",parent:tableElement},(autoFilterElement)=>{return{columns:this.extractFilterColumns(autoFilterElement),zone:this.extractAttr(autoFilterElement,"ref",{required:true}).asString(),};})[0];}
extractFilterColumns(autoFilterElement){return this.mapOnElements({query:"tableColumn",parent:autoFilterElement},(filterColumnElement)=>{return{colId:this.extractAttr(autoFilterElement,"colId",{required:true}).asNum(),hiddenButton:this.extractAttr(autoFilterElement,"hiddenButton",{default:false,}).asBool(),filters:this.extractSimpleFilter(filterColumnElement),};});}
extractSimpleFilter(filterColumnElement){return this.mapOnElements({query:"filter",parent:filterColumnElement},(filterColumnElement)=>{return{val:this.extractAttr(filterColumnElement,"val",{required:true}).asString(),};});}}
class XlsxSheetExtractor extends XlsxBaseExtractor{theme;constructor(sheetFile,xlsxStructure,warningManager,theme){super(sheetFile,xlsxStructure,warningManager);this.theme=theme;}
getSheet(){return this.mapOnElements({query:"worksheet",parent:this.rootFile.file.xml},(sheetElement)=>{const sheetWorkbookInfo=this.getSheetWorkbookInfo();return{sheetName:this.extractSheetName(),sheetViews:this.extractSheetViews(sheetElement),sheetFormat:this.extractSheetFormat(sheetElement),sheetProperties:this.extractSheetProperties(sheetElement),cols:this.extractCols(sheetElement),rows:this.extractRows(sheetElement),sharedFormulas:this.extractSharedFormulas(sheetElement),merges:this.extractMerges(sheetElement),cfs:this.extractConditionalFormats(),dataValidations:this.extractDataValidations(),figures:this.extractFigures(sheetElement),hyperlinks:this.extractHyperLinks(sheetElement),tables:this.extractTables(sheetElement),pivotTables:this.extractPivotTables(),isVisible:sheetWorkbookInfo.state==="visible",};})[0];}
extractSheetViews(worksheet){return this.mapOnElements({parent:worksheet,query:"sheetView"},(sheetViewElement)=>{const paneElement=this.querySelector(sheetViewElement,"pane");return{tabSelected:this.extractAttr(sheetViewElement,"tabSelected",{default:false,}).asBool(),showFormulas:this.extractAttr(sheetViewElement,"showFormulas",{default:false,}).asBool(),showGridLines:this.extractAttr(sheetViewElement,"showGridLines",{default:true,}).asBool(),showRowColHeaders:this.extractAttr(sheetViewElement,"showRowColHeaders",{default:true,}).asBool(),pane:{xSplit:paneElement?this.extractAttr(paneElement,"xSplit",{default:0}).asNum():0,ySplit:paneElement?this.extractAttr(paneElement,"ySplit",{default:0}).asNum():0,},};});}
extractSheetName(){const relativePath=getRelativePath(this.xlsxFileStructure.workbook.file.fileName,this.rootFile.file.fileName);const workbookRels=this.extractRelationships(this.xlsxFileStructure.workbook.rels);const relId=workbookRels.find((rel)=>rel.target===relativePath).id;for(const sheetElement of this.querySelectorAll(this.xlsxFileStructure.workbook.file.xml,"sheet")){if(sheetElement.attributes["r:id"].value===relId){return sheetElement.attributes["name"].value;}}
throw new Error("Missing sheet name");}
getSheetWorkbookInfo(){const relativePath=getRelativePath(this.xlsxFileStructure.workbook.file.fileName,this.rootFile.file.fileName);const workbookRels=this.extractRelationships(this.xlsxFileStructure.workbook.rels);const relId=workbookRels.find((rel)=>rel.target===relativePath).id;const workbookSheets=this.mapOnElements({parent:this.xlsxFileStructure.workbook.file.xml,query:"sheet"},(sheetElement)=>{return{relationshipId:this.extractAttr(sheetElement,"r:id",{required:true}).asString(),sheetId:this.extractAttr(sheetElement,"sheetId",{required:true}).asString(),sheetName:this.extractAttr(sheetElement,"name",{required:true}).asString(),state:this.extractAttr(sheetElement,"state",{default:"visible",}).asString(),};});const info=workbookSheets.find((info)=>info.relationshipId===relId);if(!info){throw new Error("Cannot find corresponding workbook sheet");}
return info;}
extractConditionalFormats(){return new XlsxCfExtractor(this.rootFile,this.xlsxFileStructure,this.warningManager,this.theme).extractConditionalFormattings();}
extractDataValidations(){return new XlsxDataValidationExtractor(this.rootFile,this.xlsxFileStructure,this.warningManager,this.theme).extractDataValidations();}
extractFigures(worksheet){const figures=this.mapOnElements({parent:worksheet,query:"drawing"},(drawingElement)=>{const drawingId=this.extractAttr(drawingElement,"r:id",{required:true})?.asString();const drawingFile=this.getTargetXmlFile(this.relationships[drawingId]);return new XlsxFigureExtractor(drawingFile,this.xlsxFileStructure,this.warningManager).extractFigures();})[0];return figures||[];}
extractTables(worksheet){return this.mapOnElements({query:"tablePart",parent:worksheet},(tablePartElement)=>{const tableId=this.extractAttr(tablePartElement,"r:id",{required:true})?.asString();const tableFile=this.getTargetXmlFile(this.relationships[tableId]);const tableExtractor=new XlsxTableExtractor(tableFile,this.xlsxFileStructure,this.warningManager);return tableExtractor.getTable();});}
extractPivotTables(){try{return Object.values(this.relationships).filter((relationship)=>relationship.type.endsWith("pivotTable")).map((pivotRelationship)=>{const pivotFile=this.getTargetXmlFile(pivotRelationship);return new XlsxPivotExtractor(pivotFile,this.xlsxFileStructure,this.warningManager).getPivotTable();});}
catch(e){this.catchErrorOnElement(e);return[];}}
extractMerges(worksheet){return this.mapOnElements({parent:worksheet,query:"mergeCell"},(mergeElement)=>{return this.extractAttr(mergeElement,"ref",{required:true}).asString();});}
extractSheetFormat(worksheet){const formatElement=this.querySelector(worksheet,"sheetFormatPr");if(!formatElement)
return undefined;return{defaultColWidth:this.extractAttr(formatElement,"defaultColWidth",{default:EXCEL_DEFAULT_COL_WIDTH.toString(),}).asNum(),defaultRowHeight:this.extractAttr(formatElement,"defaultRowHeight",{default:EXCEL_DEFAULT_ROW_HEIGHT.toString(),}).asNum(),};}
extractSheetProperties(worksheet){const propertiesElement=this.querySelector(worksheet,"sheetPr");if(!propertiesElement)
return undefined;return{outlinePr:this.extractSheetOutlineProperties(propertiesElement),tabColor:this.extractColor(this.querySelector(propertiesElement,"tabColor"),this.theme),};}
extractSheetOutlineProperties(sheetProperties){const properties=this.querySelector(sheetProperties,"outlinePr");if(!properties)
return undefined;return{summaryBelow:this.extractAttr(properties,"summaryBelow",{default:true}).asBool(),summaryRight:this.extractAttr(properties,"summaryRight",{default:true}).asBool(),};}
extractCols(worksheet){return this.mapOnElements({parent:worksheet,query:"cols col"},(colElement)=>{return{width:this.extractAttr(colElement,"width")?.asNum(),customWidth:this.extractAttr(colElement,"customWidth")?.asBool(),bestFit:this.extractAttr(colElement,"bestFit")?.asBool(),hidden:this.extractAttr(colElement,"hidden")?.asBool(),min:this.extractAttr(colElement,"min",{required:true})?.asNum(),max:this.extractAttr(colElement,"max",{required:true})?.asNum(),styleIndex:this.extractAttr(colElement,"style")?.asNum(),outlineLevel:this.extractAttr(colElement,"outlineLevel")?.asNum(),collapsed:this.extractAttr(colElement,"collapsed")?.asBool(),};});}
extractRows(worksheet){return this.mapOnElements({parent:worksheet,query:"sheetData row"},(rowElement)=>{return{index:this.extractAttr(rowElement,"r",{required:true})?.asNum(),cells:this.extractCells(rowElement),height:this.extractAttr(rowElement,"ht")?.asNum(),customHeight:this.extractAttr(rowElement,"customHeight")?.asBool(),hidden:this.extractAttr(rowElement,"hidden")?.asBool(),styleIndex:this.extractAttr(rowElement,"s")?.asNum(),outlineLevel:this.extractAttr(rowElement,"outlineLevel")?.asNum(),collapsed:this.extractAttr(rowElement,"collapsed")?.asBool(),};});}
extractCells(row){return this.mapOnElements({parent:row,query:"c"},(cellElement)=>{return{xc:this.extractAttr(cellElement,"r",{required:true})?.asString(),styleIndex:this.extractAttr(cellElement,"s")?.asNum(),type:CELL_TYPE_CONVERSION_MAP[this.extractAttr(cellElement,"t",{default:"n"})?.asString()],value:this.extractChildTextContent(cellElement,"v"),formula:this.extractCellFormula(cellElement),};});}
extractCellFormula(cellElement){const formulaElement=this.querySelector(cellElement,"f");if(!formulaElement)
return undefined;return{content:this.extractTextContent(formulaElement),sharedIndex:this.extractAttr(formulaElement,"si")?.asNum(),ref:this.extractAttr(formulaElement,"ref")?.asString(),};}
extractHyperLinks(worksheet){return this.mapOnElements({parent:worksheet,query:"hyperlink"},(linkElement)=>{const relId=this.extractAttr(linkElement,"r:id")?.asString();return{xc:this.extractAttr(linkElement,"ref",{required:true})?.asString(),location:this.extractAttr(linkElement,"location")?.asString(),display:this.extractAttr(linkElement,"display")?.asString(),relTarget:relId?this.relationships[relId].target:undefined,};});}
extractSharedFormulas(worksheet){const sfElements=this.querySelectorAll(worksheet,`f[si][ref]`);const sfMap={};for(const sfElement of sfElements){const index=this.extractAttr(sfElement,"si",{required:true}).asNum();const formula=this.extractTextContent(sfElement,{required:true});sfMap[index]=formula;}
const sfs=[];for(let i=0;i<Object.keys(sfMap).length;i++){if(!sfMap[i]){this.warningManager.addParsingWarning(`Missing shared formula ${i}, replacing it by empty formula`);sfs.push("");}
else{sfs.push(sfMap[i]);}}
return sfs;}}
class XlsxStyleExtractor extends XlsxBaseExtractor{theme;constructor(xlsxStructure,warningManager,theme){super(xlsxStructure.styles,xlsxStructure,warningManager);this.theme=theme;}
getNumFormats(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"numFmt"},(numFmtElement)=>{return this.extractNumFormats(numFmtElement);});}
extractNumFormats(numFmtElement){return{id:this.extractAttr(numFmtElement,"numFmtId",{required:true,}).asNum(),format:this.extractAttr(numFmtElement,"formatCode",{required:true,default:"",}).asString(),};}
getFonts(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"font"},(font)=>{return this.extractFont(font);});}
extractFont(fontElement){const name=this.extractChildAttr(fontElement,"name","val",{default:"Arial",}).asString();const size=this.extractChildAttr(fontElement,"sz","val",{default:DEFAULT_FONT_SIZE.toString(),}).asNum();const color=this.extractColor(this.querySelector(fontElement,`color`),this.theme);const italicElement=this.querySelector(fontElement,`i`)||undefined;const italic=italicElement&&italicElement.attributes["val"]?.value!=="0";const boldElement=this.querySelector(fontElement,`b`)||undefined;const bold=boldElement&&boldElement.attributes["val"]?.value!=="0";const strikeElement=this.querySelector(fontElement,`strike`)||undefined;const strike=strikeElement&&strikeElement.attributes["val"]?.value!=="0";const underlineElement=this.querySelector(fontElement,`u`)||undefined;const underline=underlineElement&&underlineElement.attributes["val"]?.value!=="none";return{name,size,color,italic,bold,underline,strike};}
getFills(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"fill"},(fillElement)=>{return this.extractFill(fillElement);});}
extractFill(fillElement){const fillChild=fillElement.children[0];if(fillChild.tagName==="patternFill"){return{patternType:fillChild.attributes["patternType"]?.value,bgColor:this.extractColor(this.querySelector(fillChild,"bgColor"),this.theme),fgColor:this.extractColor(this.querySelector(fillChild,"fgColor"),this.theme),};}
else{return{patternType:"solid",fgColor:this.extractColor(this.querySelectorAll(fillChild,"color")[1],this.theme),};}}
getBorders(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"border"},(borderElement)=>{return this.extractBorder(borderElement);});}
extractBorder(borderElement){const border={left:this.extractSingleBorder(borderElement,"left",this.theme),right:this.extractSingleBorder(borderElement,"right",this.theme),top:this.extractSingleBorder(borderElement,"top",this.theme),bottom:this.extractSingleBorder(borderElement,"bottom",this.theme),diagonal:this.extractSingleBorder(borderElement,"diagonal",this.theme),};if(border.diagonal){border.diagonalUp=this.extractAttr(borderElement,"diagonalUp")?.asBool();border.diagonalDown=this.extractAttr(borderElement,"diagonalDown")?.asBool();}
return border;}
extractSingleBorder(borderElement,direction,theme){const directionElement=this.querySelector(borderElement,direction);if(!directionElement||!directionElement.attributes["style"])
return undefined;return{style:this.extractAttr(directionElement,"style",{required:true,default:"thin",}).asString(),color:this.extractColor(directionElement.children[0],theme,"000000"),};}
extractAlignment(alignmentElement){return{horizontal:this.extractAttr(alignmentElement,"horizontal",{default:"general",}).asString(),vertical:this.extractAttr(alignmentElement,"vertical",{default:"bottom",}).asString(),textRotation:this.extractAttr(alignmentElement,"textRotation")?.asNum(),wrapText:this.extractAttr(alignmentElement,"wrapText")?.asBool(),indent:this.extractAttr(alignmentElement,"indent")?.asNum(),relativeIndent:this.extractAttr(alignmentElement,"relativeIndent")?.asNum(),justifyLastLine:this.extractAttr(alignmentElement,"justifyLastLine")?.asBool(),shrinkToFit:this.extractAttr(alignmentElement,"shrinkToFit")?.asBool(),readingOrder:this.extractAttr(alignmentElement,"readingOrder")?.asNum(),};}
getDxfs(){return this.mapOnElements({query:"dxf",parent:this.rootFile.file.xml},(dxfElement)=>{const fontElement=this.querySelector(dxfElement,"font");const fillElement=this.querySelector(dxfElement,"fill");const borderElement=this.querySelector(dxfElement,"border");const numFmtElement=this.querySelector(dxfElement,"numFmt");const alignmentElement=this.querySelector(dxfElement,"alignment");return{font:fontElement?this.extractFont(fontElement):undefined,fill:fillElement?this.extractFill(fillElement):undefined,numFmt:numFmtElement?this.extractNumFormats(numFmtElement):undefined,alignment:alignmentElement?this.extractAlignment(alignmentElement):undefined,border:borderElement?this.extractBorder(borderElement):undefined,};});}
getStyles(){return this.mapOnElements({query:"cellXfs xf",parent:this.rootFile.file.xml},(styleElement)=>{const alignmentElement=this.querySelector(styleElement,"alignment");return{fontId:this.extractAttr(styleElement,"fontId",{required:true,default:0,}).asNum(),fillId:this.extractAttr(styleElement,"fillId",{required:true,default:0,}).asNum(),borderId:this.extractAttr(styleElement,"borderId",{required:true,default:0,}).asNum(),numFmtId:this.extractAttr(styleElement,"numFmtId",{required:true,default:0,}).asNum(),alignment:alignmentElement?this.extractAlignment(alignmentElement):undefined,};});}}
class XlsxExternalBookExtractor extends XlsxBaseExtractor{getExternalBook(){return this.mapOnElements({parent:this.rootFile.file.xml,query:"externalBook"},(bookElement)=>{return{rId:this.extractAttr(bookElement,"r:id",{required:true}).asString(),sheetNames:this.mapOnElements({parent:bookElement,query:"sheetName"},(sheetNameElement)=>{return this.extractAttr(sheetNameElement,"val",{required:true}).asString();}),datasets:this.extractExternalSheetData(bookElement),};})[0];}
extractExternalSheetData(externalBookElement){return this.mapOnElements({parent:externalBookElement,query:"sheetData"},(sheetDataElement)=>{const cellsData=this.mapOnElements({parent:sheetDataElement,query:"cell"},(cellElement)=>{return{xc:this.extractAttr(cellElement,"r",{required:true}).asString(),value:this.extractChildTextContent(cellElement,"v",{required:true}),};});const dataMap={};for(const cell of cellsData){dataMap[cell.xc]=cell.value;}
return{sheetId:this.extractAttr(sheetDataElement,"sheetId",{required:true}).asNum(),data:dataMap,};});}}
function getXLSXFilesOfType(contentType,xmls){const paths=getPathsOfContent(contentType,xmls);return getXlsxFile(paths,xmls);}
function getXlsxFile(files,xmls){const ret=[];for(const file of files){const rels=getRelationFile(file,xmls);ret.push({file:{fileName:file,xml:xmls[file]},rels:rels?{fileName:rels,xml:xmls[rels]}:undefined,});}
return ret;}
function getPathsOfContent(contentType,xmls){const xml=xmls[CONTENT_TYPES_FILE];const sheetItems=xml.querySelectorAll(`Override[ContentType="${contentType}"]`);const paths=[];for(const item of sheetItems){const file=item?.attributes["PartName"].value;paths.push(file.substring(1));}
return paths;}
function getRelationFile(file,xmls){if(file===CONTENT_TYPES_FILE){return"_rels/.rels";}
let relsFile="";const pathParts=file.split("/");for(let i=0;i<pathParts.length-1;i++){relsFile+=pathParts[i]+"/";}
relsFile+="_rels/";relsFile+=pathParts[pathParts.length-1]+".rels";if(!xmls[relsFile]){relsFile=undefined;}
return relsFile;}
const EXCEL_IMPORT_VERSION="18.4.1";class XlsxReader{warningManager;xmls;images;constructor(files){this.warningManager=new XLSXImportWarningManager();this.xmls={};this.images=[];for(const key of Object.keys(files)){if(key.endsWith(".xml")||key.endsWith(".rels")){const contentString=escapeTagNamespaces(files[key]);this.xmls[key]=parseXML(new XMLString(contentString));}
else if(key.includes("media/image")){this.images.push({fileName:key,imageSrc:files[key]["imageSrc"],});}}}
convertXlsx(){const xlsxData=this.getXlsxData();return this.convertImportedData(xlsxData);}
getXlsxData(){const xlsxFileStructure=this.buildXlsxFileStructure();const theme=xlsxFileStructure.theme?new XlsxMiscExtractor(xlsxFileStructure.theme,xlsxFileStructure,this.warningManager).getTheme():undefined;const sharedStrings=xlsxFileStructure.sharedStrings?new XlsxMiscExtractor(xlsxFileStructure.sharedStrings,xlsxFileStructure,this.warningManager).getSharedStrings():[];const sheets=xlsxFileStructure.sheets.sort((a,b)=>a.file.fileName.localeCompare(b.file.fileName,undefined,{numeric:true})).map((sheetFile)=>{return new XlsxSheetExtractor(sheetFile,xlsxFileStructure,this.warningManager,theme).getSheet();});const externalBooks=xlsxFileStructure.externalLinks.map((externalLinkFile)=>{return new XlsxExternalBookExtractor(externalLinkFile,xlsxFileStructure,this.warningManager).getExternalBook();});const styleExtractor=new XlsxStyleExtractor(xlsxFileStructure,this.warningManager,theme);return{fonts:styleExtractor.getFonts(),fills:styleExtractor.getFills(),borders:styleExtractor.getBorders(),dxfs:styleExtractor.getDxfs(),numFmts:styleExtractor.getNumFormats(),styles:styleExtractor.getStyles(),sheets:sheets,sharedStrings,externalBooks,};}
buildXlsxFileStructure(){const xlsxFileStructure={sheets:getXLSXFilesOfType(CONTENT_TYPES.sheet,this.xmls),workbook:getXLSXFilesOfType(CONTENT_TYPES.workbook,this.xmls)[0]||getXLSXFilesOfType(CONTENT_TYPES.macroEnabledWorkbook,this.xmls)[0]||getXLSXFilesOfType(CONTENT_TYPES.templateWorkbook,this.xmls)[0]||getXLSXFilesOfType(CONTENT_TYPES.macroEnabledTemplateWorkbook,this.xmls)[0]||getXLSXFilesOfType(CONTENT_TYPES.excelAddInWorkbook,this.xmls)[0],styles:getXLSXFilesOfType(CONTENT_TYPES.styles,this.xmls)[0],sharedStrings:getXLSXFilesOfType(CONTENT_TYPES.sharedStrings,this.xmls)[0],theme:getXLSXFilesOfType(CONTENT_TYPES.themes,this.xmls)[0],charts:getXLSXFilesOfType(CONTENT_TYPES.chart,this.xmls),figures:getXLSXFilesOfType(CONTENT_TYPES.drawing,this.xmls),tables:getXLSXFilesOfType(CONTENT_TYPES.table,this.xmls),pivots:getXLSXFilesOfType(CONTENT_TYPES.pivot,this.xmls),externalLinks:getXLSXFilesOfType(CONTENT_TYPES.externalLink,this.xmls),images:this.images,};if(!xlsxFileStructure.workbook.rels){throw Error(_t("Cannot find workbook relations file"));}
return xlsxFileStructure;}
convertImportedData(data){const convertedData={version:EXCEL_IMPORT_VERSION,sheets:convertSheets(data,this.warningManager),styles:convertStyles(data,this.warningManager),formats:convertFormats(data,this.warningManager),borders:convertBorders(data,this.warningManager),revisionId:DEFAULT_REVISION_ID,};convertTables(convertedData,data);Object.keys(data.styles).map((key)=>{data.styles[key]=removeFalsyAttributes(data.styles[key]);});return convertedData;}}
function normalizeV9(formula){const tokens=rangeTokenize(formula);const dependencies=[];const noRefFormula="".concat(...tokens.map((token)=>{if(token.type==="REFERENCE"&&cellReference.test(token.value)){const value=token.value.trim();if(!dependencies.includes(value)){dependencies.push(value);}
return`${FORMULA_REF_IDENTIFIER}${dependencies.indexOf(value)}${FORMULA_REF_IDENTIFIER}`;}
else{return token.value;}}));return{text:noRefFormula,dependencies};}
const WEEK_START={am_ET:7,ar_001:6,ar_SY:6,az_AZ:1,eu_ES:1,be_BY:1,bn_IN:1,bs_BA:1,bg_BG:1,ca_ES:1,zh_CN:7,zh_HK:7,zh_TW:7,hr_HR:1,cs_CZ:1,da_DK:1,nl_BE:1,nl_NL:1,en_AU:7,en_CA:7,en_GB:1,en_IN:7,en_NZ:7,et_EE:1,fi_FI:1,fr_BE:1,fr_CA:7,fr_CH:1,fr_FR:1,gl_ES:1,ka_GE:1,de_DE:1,de_CH:1,el_GR:1,gu_IN:7,he_IL:7,hi_IN:7,hu_HU:1,id_ID:7,it_IT:1,ja_JP:7,kab_DZ:6,km_KH:7,ko_KP:1,ko_KR:7,lo_LA:7,lv_LV:1,lt_LT:1,lb_LU:1,mk_MK:1,ml_IN:1,mn_MN:7,ms_MY:1,nb_NO:1,fa_IR:6,pl_PL:1,pt_AO:1,pt_BR:7,pt_PT:1,ro_RO:1,ru_RU:1,sr_RS:7,"sr@latin":7,sk_SK:1,sl_SI:1,es_AR:7,es_BO:1,es_CL:1,es_CO:7,es_CR:1,es_DO:1,es_EC:1,es_GT:7,es_MX:7,es_PA:7,es_PE:7,es_PY:7,es_UY:1,es_VE:7,sw:1,sv_SE:1,th_TH:7,tl_PH:1,tr_TR:1,uk_UA:1,vi_VN:1,sq_AL:1,te_IN:7,en_US:7,my_MM:7,es_ES:1,es_419:1,};const migrationStepRegistry=new Registry();migrationStepRegistry.add("0.1",{migrate(data){if(data.sheets&&data.sheets[0]){data.activeSheet=data.sheets[0].name;}
return data;},}).add("0.2",{migrate(data){if(data.sheets&&data.sheets.length){for(const sheet of data.sheets){sheet.id=sheet.id||sheet.name;}}
return data;},}).add("0.3",{migrate(data){if(data.sheets&&data.activeSheet){const activeSheet=data.sheets.find((s)=>s.name===data.activeSheet);data.activeSheet=activeSheet.id;}
return data;},}).add("0.4",{migrate(data){for(const sheet of data.sheets||[]){sheet.figures=sheet.figures||[];}
return data;},}).add("0.5",{migrate(data){for(const sheet of data.sheets||[]){for(const xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.content&&cell.content.startsWith("=")){cell.formula=normalizeV9(cell.content);}}}
return data;},}).add("0.6",{migrate(data){for(const sheet of data.sheets||[]){for(const f in sheet.figures||[]){const{dataSets,...newData}=sheet.figures[f].data;const newDataSets=[];for(const ds of dataSets){if(ds.labelCell){const dataRange=toZone(ds.dataRange);const newRange=ds.labelCell+":"+toXC(dataRange.right,dataRange.bottom);newDataSets.push(newRange);}
else{newDataSets.push(ds.dataRange);}}
newData.dataSetsHaveTitle=Boolean(dataSets[0].labelCell);newData.dataSets=newDataSets;sheet.figures[f].data=newData;}}
return data;},}).add("0.7",{migrate(data){const namesTaken=[];for(const sheet of data.sheets||[]){if(!sheet.name){continue;}
const oldName=sheet.name;const escapedName=sanitizeSheetName(oldName,"_");const newName=getUniqueText(escapedName,namesTaken,{compute:(name,i)=>`${name}${i}`,});sheet.name=newName;namesTaken.push(newName);const replaceName=(str)=>{if(str===undefined){return str;}
let newString=str.replace(oldName,newName);let currentString=str;while(currentString!==newString){currentString=newString;newString=currentString.replace(oldName,newName);}
return currentString;};for(const xc in sheet.cells){const cell=sheet.cells[xc];if(cell.formula){cell.formula.dependencies=cell.formula.dependencies.map(replaceName);}}
for(const figure of sheet.figures||[]){if(figure.type==="chart"){const dataSets=figure.data.dataSets.map(replaceName);const labelRange=replaceName(figure.data.labelRange);figure.data={...figure.data,dataSets,labelRange};}}
for(const cf of sheet.conditionalFormats||[]){cf.ranges=cf.ranges.map(replaceName);for(const thresholdName of["minimum","maximum","midpoint","upperInflectionPoint","lowerInflectionPoint",]){if(cf.rule[thresholdName]?.type==="formula"){cf.rule[thresholdName].value=replaceName(cf.rule[thresholdName].value);}}}}
return data;},}).add("0.8",{migrate(data){for(const sheet of data.sheets||[]){for(const chart of sheet.figures||[]){chart.data.background=BACKGROUND_CHART_COLOR;chart.data.verticalAxisPosition="left";chart.data.legendPosition="top";chart.data.stacked=false;}}
return data;},}).add("0.9",{migrate(data){for(const sheet of data.sheets||[]){for(const xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.formula){let{text,dependencies}=cell.formula;for(const[index,d]of Object.entries(dependencies)){const stringPosition=`\\${FORMULA_REF_IDENTIFIER}${index}\\${FORMULA_REF_IDENTIFIER}`;text=text.replace(new RegExp(stringPosition,"g"),d);}
cell.content=text;delete cell.formula;}}}
return data;},}).add("0.10",{migrate(data){const formats={};for(const sheet of data.sheets||[]){for(const xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.format){cell.format=getItemId(cell.format,formats);}}}
data.formats=formats;return data;},}).add("15.4",{migrate(data){for(const sheet of data.sheets||[]){sheet.isVisible=true;}
return data;},}).add("15.4.1",{migrate(data){return fixOverlappingFilters(data);},}).add("16.3",{migrate(data){for(const borderId in data.borders){const border=data.borders[borderId];for(const position in border){if(Array.isArray(border[position])){border[position]={style:border[position][0],color:border[position][1],};}}}
return data;},}).add("16.4",{migrate(data){if(!data.settings){data.settings={};}
if(!data.settings.locale){data.settings.locale=DEFAULT_LOCALE;}
return data;},}).add("16.4.1",{migrate(data){return fixOverlappingFilters(data);},}).add("17.2",{migrate(data){for(const sheetData of data.sheets||[]){sheetData.tables=sheetData.tables||sheetData.filterTables||[];delete sheetData.filterTables;}
return data;},}).add("17.3",{migrate(data){if(!data.pivots){data.pivots={};}
if(!data.pivotNextId){data.pivotNextId=getMaxObjectId(data.pivots)+1;}
return data;},}).add("17.4",{migrate(data){for(const sheet of data.sheets||[]){for(const f in sheet.figures||[]){const figure=sheet.figures[f];if("title"in figure.data&&typeof figure.data.title==="string"){figure.data.title={text:figure.data.title};}
const figureType=figure.data.type;if(!["line","bar","pie","scatter","waterfall","combo"].includes(figureType)){continue;}
const{dataSets,...newData}=sheet.figures[f].data;const newDataSets=dataSets.map((dataRange)=>({dataRange}));newData.dataSets=newDataSets;sheet.figures[f].data=newData;}}
return data;},}).add("18.0",{migrate(data){return data;},}).add("18.0.1",{migrate(data){for(const pivot of Object.values(data.pivots||{})){pivot.measures=pivot.measures.map((measure)=>({id:measure.name,fieldName:measure.name,aggregator:measure.aggregator,}));pivot.columns=pivot.columns.map((column)=>({fieldName:column.name,order:column.order,granularity:column.granularity,}));pivot.rows=pivot.rows.map((row)=>({fieldName:row.name,order:row.order,granularity:row.granularity,}));}
return data;},}).add("18.0.2",{migrate(data){const locale=data.settings?.locale;if(locale){const code=locale.code;locale.weekStart=WEEK_START[code]||1;}
return data;},}).add("18.0.3",{migrate(data){for(const sheet of data.sheets||[]){sheet.styles={};sheet.formats={};sheet.borders={};for(const xc in sheet.cells){sheet.styles[xc]=sheet.cells[xc].style;sheet.formats[xc]=sheet.cells[xc].format;sheet.borders[xc]=sheet.cells[xc].border;delete sheet.cells[xc].style;delete sheet.cells[xc].format;delete sheet.cells[xc].border;}}
return data;},}).add("18.0.4",{migrate(data){for(const sheet of data.sheets||[]){for(const figure of sheet.figures||[]){if(figure.tag!=="chart"||figure.data.type!=="gauge"){continue;}
const gaugeData=figure.data;if(gaugeData?.sectionRule?.lowerInflectionPoint){gaugeData.sectionRule.lowerInflectionPoint.operator="<=";}
if(gaugeData?.sectionRule?.upperInflectionPoint){gaugeData.sectionRule.upperInflectionPoint.operator="<=";}}}
return data;},}).add("18.1",{migrate(data){for(const sheet of data.sheets||[]){for(const table of sheet.tables||[]){if(!table.config){table.config={...DEFAULT_TABLE_CONFIG,hasFilters:true};}}}
return data;},}).add("18.1.1",{migrate(data){for(const sheet of data.sheets||[]){for(const xc in sheet.cells){const cell=sheet.cells[xc];if(cell){sheet.cells[xc]=cell.content;}}}
return data;},}).add("18.2",{migrate(data){return data;},}).add("18.3",{migrate(data){if(!data.pivots){return data;}
for(const pivot of Object.values(data.pivots)){if(!pivot.sortedColumn){continue;}
const measureIds=pivot.measures.map((measure)=>measure.id);if(!measureIds.includes(pivot.sortedColumn.measure)){delete pivot.sortedColumn;}}
return data;},}).add("18.3.1",{migrate(data){for(const sheet of data.sheets||[]){for(const figure of sheet.figures||[]){const figureData=figure;figure.offset={x:figureData.x||0,y:figureData.y||0};figure.col=0;figure.row=0;delete figure["x"];delete figure["y"];}}
return data;},}).add("18.4.1",{migrate(data){const dvConversionMap={textContains:"containsText",textNotContains:"notContainsText",textIs:"isEqualText",textIsEmail:"isEmail",textIsLink:"isLink",};const cfConversionMap={BeginsWith:"beginsWithText",Between:"isBetween",ContainsText:"containsText",EndsWith:"endsWithText",Equal:"isEqual",GreaterThan:"isGreaterThan",GreaterThanOrEqual:"isGreaterOrEqualTo",IsEmpty:"isEmpty",IsNotEmpty:"isNotEmpty",LessThan:"isLessThan",LessThanOrEqual:"isLessOrEqualTo",NotBetween:"isNotBetween",NotContains:"notContainsText",NotEqual:"isNotEqual",};for(const sheet of data.sheets||[]){for(const cf of sheet.conditionalFormats||[]){if(cf.rule.type==="CellIsRule"){cf.rule.operator=cfConversionMap[cf.rule.operator];}}}
for(const sheet of data.sheets||[]){for(const dv of sheet.dataValidationRules||[]){if(dv.criterion.type in dvConversionMap){dv.criterion.type=dvConversionMap[dv.criterion.type];}}}
return data;},}).add("18.4.2",{migrate(data){for(const sheet of data.sheets||[]){for(const figure of sheet.figures||[]){if(figure.tag!=="chart"||figure.data.type!=="scorecard"){continue;}
const scData=figure.data;if(scData.baselineDescr){scData.baselineDescr={text:scData.baselineDescr};}}}
return data;},}).add("18.4.3",{migrate(data){if(!data.pivots){return data;}
for(const pivotId in data.pivots){const pivot=data.pivots[pivotId];if(pivot.sortedColumn){const measure=pivot.measures.find((measure)=>measure.fieldName===pivot.sortedColumn?.measure);if(measure){pivot.sortedColumn.measure=measure.id;}}}
return data;},});function fixOverlappingFilters(data){for(const sheet of data.sheets||[]){const knownDataFilterZones=[];for(const filterTable of sheet.filterTables||[]){const zone=toZone(filterTable.range);const intersectZoneIndex=knownDataFilterZones.findIndex((knownZone)=>overlap(knownZone,zone));if(intersectZoneIndex!==-1){knownDataFilterZones[intersectZoneIndex]=zone;}
else{knownDataFilterZones.push(zone);}}
sheet.filterTables=knownDataFilterZones.map((zone)=>({range:zoneToXc(zone),}));}
return data;}
function getCurrentVersion(){return getSortedVersions().at(-1);}
function getSortedVersions(){return migrationStepRegistry.getKeys().sort(compareVersions);}
const INITIAL_SHEET_ID="Sheet1";function load(data,verboseImport){if(!data){return createEmptyWorkbookData();}
console.debug("### Loading data ###");const start=performance.now();if(data["[Content_Types].xml"]){const reader=new XlsxReader(data);data=reader.convertXlsx();if(verboseImport){for(const parsingError of reader.warningManager.warnings.sort()){console.warn(parsingError);}}}
if("version"in data){if(isLegacyVersioning(data)){data.version=LEGACY_VERSION_MAPPING[data.version];}
if(data.version!==getCurrentVersion()){console.debug("Migrating data from version",data.version);data=migrate(data);}}
data=repairData(data);console.debug("Data loaded in",performance.now()-start,"ms");console.debug("###");return data;}
const LEGACY_VERSION_MAPPING={25:"18.2",24:"18.1.1",23:"18.1",22:"18.0.4",21:"18.0.3",20:"18.0.2",19:"18.0.1",18:"18.0",17:"17.4",16:"17.3",15:"17.2",14:"16.4",13:"16.3",12:"15.4",11:"0.10",10:"0.9",9:"0.8",8:"0.7",7:"0.6",6:"0.5",5:"0.4",4:"0.3",3:"0.2",2:"0.1",1:"0",};function isLegacyVersioning(data){return typeof data.version==="number";}
function compareVersions(v1,v2){const version1=v1.split(".").map(Number);const version2=v2.split(".").map(Number);for(let i=0;i<Math.max(version1.length,version2.length);i++){const part1=version1[i]||0;const part2=version2[i]||0;if(part1>part2){return 1;}
if(part1<part2){return-1;}}
return 0;}
function migrate(data){const start=performance.now();const versions=getSortedVersions();const index=versions.findIndex((v)=>v===data.version);for(let i=index+1;i<versions.length;i++){const nextVersion=versions[i];data=migrationStepRegistry.get(nextVersion).migrate(data);}
console.debug("Data migrated in",performance.now()-start,"ms");return data;}
function repairData(data){data=forceUnicityOfFigure(data);data=setDefaults(data);return data;}
function forceUnicityOfFigure(data){if(data.uniqueFigureIds){return data;}
const figureIds=new Set();const uuidGenerator=new UuidGenerator();for(const sheet of data.sheets||[]){for(const figure of sheet.figures||[]){if(figureIds.has(figure.id)){figure.id+=uuidGenerator.smallUuid();}
figureIds.add(figure.id);}}
data.uniqueFigureIds=true;return data;}
function setDefaults(partialData){const data=Object.assign(createEmptyWorkbookData(),partialData,{version:getCurrentVersion(),});data.sheets=data.sheets?data.sheets.map((s,i)=>Object.assign(createEmptySheet(`Sheet${i + 1}`,`Sheet${i + 1}`),s)):[];if(data.sheets.length===0){data.sheets.push(createEmptySheet(INITIAL_SHEET_ID,"Sheet1"));}
if(!isValidLocale(data.settings.locale)){data.settings.locale=DEFAULT_LOCALE;}
return data;}
function repairInitialMessages(data,initialMessages){initialMessages=fixTranslatedSheetIds(data,initialMessages);initialMessages=dropCommands(initialMessages,"SORT_CELLS");initialMessages=dropCommands(initialMessages,"SET_DECIMAL");initialMessages=fixChartDefinitions(data,initialMessages);initialMessages=fixFigureOffset(data,initialMessages);initialMessages=fixTranslatedDuplicateSheetName(data,initialMessages);return initialMessages;}
function fixTranslatedSheetIds(data,initialMessages){if(Object.keys(data).length!==0){return initialMessages;}
const sheetIds=[];const messages=[];const fixSheetId=(cmd)=>{if(cmd.type==="CREATE_SHEET"){sheetIds.push(cmd.sheetId);}
else if("sheetId"in cmd&&!sheetIds.includes(cmd.sheetId)){return{...cmd,sheetId:INITIAL_SHEET_ID};}
return cmd;};for(const message of initialMessages){if(message.type==="REMOTE_REVISION"){messages.push({...message,commands:message.commands.map(fixSheetId),});}
else{messages.push(message);}}
return messages;}
function dropCommands(initialMessages,commandType){const messages=[];for(const message of initialMessages){if(message.type==="REMOTE_REVISION"){messages.push({...message,commands:message.commands.filter((command)=>command.type!==commandType),});}
else{messages.push(message);}}
return messages;}
function fixChartDefinitions(data,initialMessages){const messages=[];const map={};for(const sheet of data.sheets||[]){sheet.figures?.forEach((figure)=>{if(figure.tag==="chart"){map[figure.id]=figure.data;}});}
for(const message of initialMessages){if(message.type==="REMOTE_REVISION"){const commands=[];for(const cmd of message.commands){let command=cmd;switch(cmd.type){case"CREATE_CHART":map[cmd.figureId]=cmd.definition;break;case"UPDATE_CHART":if(!map[cmd.figureId]){console.log(`Fix chart definition: chart with id ${cmd.figureId} not found.`);continue;}
const definition=map[cmd.figureId];const newDefinition={...definition,...cmd.definition};command={...cmd,definition:newDefinition};map[cmd.figureId]=newDefinition;break;}
commands.push(command);}
messages.push({...message,commands,});}
else{messages.push(message);}}
return messages;}
function fixFigureOffset(data,messages){const offset={};for(const sheet of data.sheets||[]){sheet.figures?.forEach((figure)=>{offset[figure.id]=figure.offset;});}
for(const message of messages){if(message.type==="REMOTE_REVISION"){for(const cmd of message.commands){switch(cmd.type){case"UPDATE_FIGURE":if(cmd.offset){if(cmd.offset.x===undefined){cmd.offset.x=offset[cmd.figureId]||0;}
if(cmd.offset.y===undefined){cmd.offset.y=offset[cmd.figureId]||0;}
offset[cmd.figureId]=offset;}
break;case"CREATE_IMAGE":case"CREATE_CHART":case"CREATE_FIGURE":offset[cmd.figureId]=cmd.offset;break;}}}}
return messages;}
function fixTranslatedDuplicateSheetName(data,initialMessages){const sheetNames={};for(const sheet of data.sheets||[]){sheetNames[sheet.id]=sheet.name;}
const messages=[];for(const message of initialMessages){if(message.type==="REMOTE_REVISION"){const commands=[];for(const cmd of message.commands){switch(cmd.type){case"DUPLICATE_SHEET":cmd.sheetNameTo=cmd.sheetNameTo??getDuplicateSheetName(sheetNames[cmd.sheetId],Object.values(sheetNames));break;case"CREATE_SHEET":sheetNames[cmd.sheetId]=cmd.name||getNextSheetName(Object.values(sheetNames));break;case"RENAME_SHEET":sheetNames[cmd.sheetId]=cmd.newName||getNextSheetName(Object.values(sheetNames));break;}
commands.push(cmd);}
messages.push({...message,commands,});}
else{messages.push(message);}}
return initialMessages;}
function createEmptySheet(sheetId,name){return{id:sheetId,name,colNumber:26,rowNumber:100,cells:{},styles:{},formats:{},borders:{},cols:{},rows:{},merges:[],conditionalFormats:[],dataValidationRules:[],figures:[],tables:[],isVisible:true,};}
function createEmptyWorkbookData(sheetName="Sheet1"){return{version:getCurrentVersion(),sheets:[createEmptySheet(INITIAL_SHEET_ID,sheetName)],styles:{},formats:{},borders:{},revisionId:DEFAULT_REVISION_ID,uniqueFigureIds:true,settings:{locale:DEFAULT_LOCALE},pivots:{},pivotNextId:1,customTableStyles:{},};}
function createEmptyExcelSheet(sheetId,name){return{...createEmptySheet(sheetId,name),charts:[],images:[],cellValues:{},};}
function createEmptyExcelWorkbookData(){return{...createEmptyWorkbookData(),sheets:[createEmptyExcelSheet(INITIAL_SHEET_ID,"Sheet1")],};}
const PasteInteractiveContent={wrongPasteSelection:_t("This operation is not allowed with multiple selections."),willRemoveExistingMerge:RemoveDuplicateTerms.Errors.WillRemoveExistingMerge,wrongFigurePasteOption:_t("Cannot do a special paste of a figure."),frozenPaneOverlap:_t("This operation is not allowed due to an overlapping frozen pane."),};function handlePasteResult(env,result){if(!result.isSuccessful){if(result.reasons.includes("WrongPasteSelection")){env.raiseError(PasteInteractiveContent.wrongPasteSelection);}
else if(result.reasons.includes("WillRemoveExistingMerge")){env.raiseError(PasteInteractiveContent.willRemoveExistingMerge);}
else if(result.reasons.includes("WrongFigurePasteOption")){env.raiseError(PasteInteractiveContent.wrongFigurePasteOption);}
else if(result.reasons.includes("FrozenPaneOverlap")){env.raiseError(PasteInteractiveContent.frozenPaneOverlap);}}}
function interactivePaste(env,target,pasteOption){const result=env.model.dispatch("PASTE",{target,pasteOption});handlePasteResult(env,result);}
async function interactivePasteFromOS(env,target,parsedClipboardContent,pasteOption){let result;try{const clipboarContent=parsedClipboardContent;if(parsedClipboardContent.imageBlob){try{const imageData=await env.imageProvider?.uploadFile(parsedClipboardContent.imageBlob);clipboarContent.imageData=imageData;}
catch(e){const msg=_t("An error occurred while uploading the image. %s",e.message);console.error(e);env.raiseError(msg);}
delete parsedClipboardContent.imageBlob;}
result=env.model.dispatch("PASTE_FROM_OS_CLIPBOARD",{target,clipboardContent:parsedClipboardContent,pasteOption,});}
catch(error){const parsedSpreadsheetContent=parsedClipboardContent.data;if(parsedSpreadsheetContent?.version!==getCurrentVersion()){env.raiseError(_t("An unexpected error occurred while pasting content.\
          This is probably due to a spreadsheet version mismatch."));}
else{env.raiseError(_t("An unexpected error occurred while pasting content.\
          Additional information can be found in the browser console."));console.error(error);}
result=env.model.dispatch("PASTE_FROM_OS_CLIPBOARD",{target,clipboardContent:{text:parsedClipboardContent.text,},pasteOption,});}
handlePasteResult(env,result);}
function interactiveCreateTable(env,sheetId,tableConfig=DEFAULT_TABLE_CONFIG){let target=env.model.getters.getSelectedZones();let isDynamic=env.model.getters.canCreateDynamicTableOnZones(sheetId,target);if(target.length===1&&!isDynamic&&getZoneArea(target[0])===1){env.model.selection.selectTableAroundSelection();target=env.model.getters.getSelectedZones();isDynamic=env.model.getters.canCreateDynamicTableOnZones(sheetId,target);}
const ranges=target.map((zone)=>env.model.getters.getRangeDataFromZone(sheetId,zone));const result=env.model.dispatch("CREATE_TABLE",{ranges,sheetId,config:tableConfig,tableType:isDynamic?"dynamic":"static",});if(result.isCancelledBecause("TableOverlap")){env.raiseError(TableTerms.Errors.TableOverlap);}
else if(result.isCancelledBecause("NonContinuousTargets")){env.raiseError(TableTerms.Errors.NonContinuousTargets);}
return result;}
function setFormatter(env,format){env.model.dispatch("SET_FORMATTING_WITH_PIVOT",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),format,});}
function setStyle(env,style){env.model.dispatch("SET_FORMATTING",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),style,});}
const PASTE_ACTION=async(env)=>paste$1(env);const PASTE_AS_VALUE_ACTION=async(env)=>paste$1(env,"asValue");async function paste$1(env,pasteOption){const osClipboard=await env.clipboard.read();switch(osClipboard.status){case"ok":const clipboardId=env.model.getters.getClipboardId();const osClipboardContent=parseOSClipboardContent(osClipboard.content);const osClipboardId=osClipboardContent.data?.clipboardId;const target=env.model.getters.getSelectedZones();if(clipboardId!==osClipboardId){await interactivePasteFromOS(env,target,osClipboardContent,pasteOption);}
else{interactivePaste(env,target,pasteOption);}
if(env.model.getters.isCutOperation()&&pasteOption!=="asValue"){await env.clipboard.write({[ClipboardMIMEType.PlainText]:""});}
break;case"notImplemented":env.raiseError(_t("Pasting from the context menu is not supported in this browser. Use keyboard shortcuts ctrl+c / ctrl+v instead."));break;case"permissionDenied":env.raiseError(_t("Access to the clipboard denied by the browser. Please enable clipboard permission for this page in your browser settings."));break;}}
const PASTE_FORMAT_ACTION=(env)=>paste$1(env,"onlyFormat");const DELETE_CONTENT_ROWS_NAME=(env)=>{if(env.model.getters.getSelectedZones().length>1){return _t("Clear rows");}
let first;let last;const activesRows=env.model.getters.getActiveRows();if(activesRows.size!==0){first=largeMin([...activesRows]);last=largeMax([...activesRows]);}
else{const zone=env.model.getters.getSelectedZones()[0];first=zone.top;last=zone.bottom;}
if(first===last){return _t("Clear row %s",(first+1).toString());}
return _t("Clear rows %s - %s",(first+1).toString(),(last+1).toString());};const DELETE_CONTENT_ROWS_ACTION=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const target=[...env.model.getters.getActiveRows()].map((index)=>env.model.getters.getRowsZone(sheetId,index,index));env.model.dispatch("DELETE_CONTENT",{target,sheetId:env.model.getters.getActiveSheetId(),});};const DELETE_CONTENT_COLUMNS_NAME=(env)=>{if(env.model.getters.getSelectedZones().length>1){return _t("Clear columns");}
let first;let last;const activeCols=env.model.getters.getActiveCols();if(activeCols.size!==0){first=largeMin([...activeCols]);last=largeMax([...activeCols]);}
else{const zone=env.model.getters.getSelectedZones()[0];first=zone.left;last=zone.right;}
if(first===last){return _t("Clear column %s",numberToLetters(first));}
return _t("Clear columns %s - %s",numberToLetters(first),numberToLetters(last));};const DELETE_CONTENT_COLUMNS_ACTION=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const target=[...env.model.getters.getActiveCols()].map((index)=>env.model.getters.getColsZone(sheetId,index,index));env.model.dispatch("DELETE_CONTENT",{target,sheetId:env.model.getters.getActiveSheetId(),});};const REMOVE_ROWS_NAME=(env)=>{if(env.model.getters.getSelectedZones().length>1){return _t("Delete rows");}
let first;let last;const activesRows=env.model.getters.getActiveRows();if(activesRows.size!==0){first=largeMin([...activesRows]);last=largeMax([...activesRows]);}
else{const zone=env.model.getters.getSelectedZones()[0];first=zone.top;last=zone.bottom;}
if(first===last){return _t("Delete row %s",(first+1).toString());}
return _t("Delete rows %s - %s",(first+1).toString(),(last+1).toString());};const REMOVE_ROWS_ACTION=(env)=>{const rows=[...env.model.getters.getActiveRows()];if(!rows.length){const zone=env.model.getters.getSelectedZones()[0];for(let i=zone.top;i<=zone.bottom;i++){rows.push(i);}}
env.model.dispatch("REMOVE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),sheetName:env.model.getters.getActiveSheetName(),dimension:"ROW",elements:rows,});};const CAN_REMOVE_COLUMNS_ROWS=(dimension,env)=>{if((dimension==="COL"&&env.model.getters.getActiveRows().size>0)||(dimension==="ROW"&&env.model.getters.getActiveCols().size>0)){return false;}
const sheetId=env.model.getters.getActiveSheetId();const selectedElements=env.model.getters.getElementsFromSelection(dimension);const includesAllVisibleHeaders=env.model.getters.checkElementsIncludeAllVisibleHeaders(sheetId,dimension,selectedElements);const includesAllNonFrozenHeaders=env.model.getters.checkElementsIncludeAllNonFrozenHeaders(sheetId,dimension,selectedElements);return!includesAllVisibleHeaders&&!includesAllNonFrozenHeaders;};const REMOVE_COLUMNS_NAME=(env)=>{if(env.model.getters.getSelectedZones().length>1){return _t("Delete columns");}
let first;let last;const activeCols=env.model.getters.getActiveCols();if(activeCols.size!==0){first=largeMin([...activeCols]);last=largeMax([...activeCols]);}
else{const zone=env.model.getters.getSelectedZones()[0];first=zone.left;last=zone.right;}
if(first===last){return _t("Delete column %s",numberToLetters(first));}
return _t("Delete columns %s - %s",numberToLetters(first),numberToLetters(last));};const NOT_ALL_VISIBLE_ROWS_SELECTED=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const selectedRows=env.model.getters.getElementsFromSelection("ROW");return!env.model.getters.checkElementsIncludeAllVisibleHeaders(sheetId,"ROW",selectedRows);};const REMOVE_COLUMNS_ACTION=(env)=>{const columns=[...env.model.getters.getActiveCols()];if(!columns.length){const zone=env.model.getters.getSelectedZones()[0];for(let i=zone.left;i<=zone.right;i++){columns.push(i);}}
env.model.dispatch("REMOVE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),sheetName:env.model.getters.getActiveSheetName(),dimension:"COL",elements:columns,});};const NOT_ALL_VISIBLE_COLS_SELECTED=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const selectedCols=env.model.getters.getElementsFromSelection("COL");return!env.model.getters.checkElementsIncludeAllVisibleHeaders(sheetId,"COL",selectedCols);};const INSERT_ROWS_BEFORE_ACTION=(env)=>{const activeRows=env.model.getters.getActiveRows();let row;let quantity;if(activeRows.size){row=largeMin([...activeRows]);quantity=activeRows.size;}
else{const zone=env.model.getters.getSelectedZones()[0];row=zone.top;quantity=zone.bottom-zone.top+1;}
env.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),sheetName:env.model.getters.getActiveSheetName(),position:"before",base:row,quantity,dimension:"ROW",});};const INSERT_ROWS_AFTER_ACTION=(env)=>{const activeRows=env.model.getters.getActiveRows();let row;let quantity;if(activeRows.size){row=largeMax([...activeRows]);quantity=activeRows.size;}
else{const zone=env.model.getters.getSelectedZones()[0];row=zone.bottom;quantity=zone.bottom-zone.top+1;}
env.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),sheetName:env.model.getters.getActiveSheetName(),position:"after",base:row,quantity,dimension:"ROW",});};const INSERT_COLUMNS_BEFORE_ACTION=(env)=>{const activeCols=env.model.getters.getActiveCols();let column;let quantity;if(activeCols.size){column=largeMin([...activeCols]);quantity=activeCols.size;}
else{const zone=env.model.getters.getSelectedZones()[0];column=zone.left;quantity=zone.right-zone.left+1;}
env.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),sheetName:env.model.getters.getActiveSheetName(),position:"before",dimension:"COL",base:column,quantity,});};const INSERT_COLUMNS_AFTER_ACTION=(env)=>{const activeCols=env.model.getters.getActiveCols();let column;let quantity;if(activeCols.size){column=largeMax([...activeCols]);quantity=activeCols.size;}
else{const zone=env.model.getters.getSelectedZones()[0];column=zone.right;quantity=zone.right-zone.left+1;}
env.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),sheetName:env.model.getters.getActiveSheetName(),position:"after",dimension:"COL",base:column,quantity,});};const HIDE_COLUMNS_NAME=(env)=>{const cols=env.model.getters.getElementsFromSelection("COL");const first=cols[0];const last=cols[cols.length-1];if(cols.length===1){return _t("Hide column %s",numberToLetters(first).toString());}
else if(last-first+1===cols.length){return _t("Hide columns %s - %s",numberToLetters(first).toString(),numberToLetters(last).toString());}
else{return _t("Hide columns");}};const HIDE_ROWS_NAME=(env)=>{const rows=env.model.getters.getElementsFromSelection("ROW");const first=rows[0];const last=rows[rows.length-1];if(rows.length===1){return _t("Hide row %s",(first+1).toString());}
else if(last-first+1===rows.length){return _t("Hide rows %s - %s",(first+1).toString(),(last+1).toString());}
else{return _t("Hide rows");}};const CREATE_CHART=(env)=>{const getters=env.model.getters;const figureId=env.model.uuidGenerator.smallUuid();const sheetId=getters.getActiveSheetId();if(getZoneArea(env.model.getters.getSelectedZone())===1){env.model.selection.selectTableAroundSelection();}
const size={width:DEFAULT_FIGURE_WIDTH,height:DEFAULT_FIGURE_HEIGHT};const{col,row,offset}=centerFigurePosition(getters,size);const result=env.model.dispatch("CREATE_CHART",{sheetId,figureId,col,row,offset,size,definition:getSmartChartDefinition(env.model.getters.getSelectedZone(),env.model.getters),});if(result.isSuccessful){env.model.dispatch("SELECT_FIGURE",{figureId});env.openSidePanel("ChartPanel");}};const CREATE_PIVOT=(env)=>{const pivotId=env.model.uuidGenerator.smallUuid();const newSheetId=env.model.uuidGenerator.smallUuid();const result=env.model.dispatch("INSERT_NEW_PIVOT",{pivotId,newSheetId});if(result.isSuccessful){env.openSidePanel("PivotSidePanel",{pivotId});}};const REINSERT_DYNAMIC_PIVOT_CHILDREN=(env)=>env.model.getters.getPivotIds().map((pivotId,index)=>({id:`reinsert_dynamic_pivot_${env.model.getters.getPivotFormulaId(pivotId)}`,name:env.model.getters.getPivotDisplayName(pivotId),sequence:index,execute:(env)=>{const zone=env.model.getters.getSelectedZone();const table=env.model.getters.getPivot(pivotId).getCollapsedTableStructure().export();env.model.dispatch("INSERT_PIVOT_WITH_TABLE",{pivotId,table,col:zone.left,row:zone.top,sheetId:env.model.getters.getActiveSheetId(),pivotMode:"dynamic",});env.model.dispatch("REFRESH_PIVOT",{id:pivotId});},isVisible:(env)=>env.model.getters.getPivot(pivotId).isValid(),}));const REINSERT_STATIC_PIVOT_CHILDREN=(env)=>env.model.getters.getPivotIds().map((pivotId,index)=>({id:`reinsert_static_pivot_${env.model.getters.getPivotFormulaId(pivotId)}`,name:env.model.getters.getPivotDisplayName(pivotId),sequence:index,execute:(env)=>{const zone=env.model.getters.getSelectedZone();const table=env.model.getters.getPivot(pivotId).getExpandedTableStructure().export();env.model.dispatch("INSERT_PIVOT_WITH_TABLE",{pivotId,table,col:zone.left,row:zone.top,sheetId:env.model.getters.getActiveSheetId(),pivotMode:"static",});env.model.dispatch("REFRESH_PIVOT",{id:pivotId});},isVisible:(env)=>env.model.getters.getPivot(pivotId).isValid(),}));async function requestImage(env){try{return await env.imageProvider.requestImage();}
catch{env.raiseError(_t("An unexpected error occurred during the image transfer"));return;}}
const CREATE_IMAGE=async(env)=>{if(env.imageProvider){const sheetId=env.model.getters.getActiveSheetId();const figureId=env.model.uuidGenerator.smallUuid();const image=await requestImage(env);if(!image){return;}
const size=getMaxFigureSize(env.model.getters,image.size);const{col,row,offset}=centerFigurePosition(env.model.getters,size);env.model.dispatch("CREATE_IMAGE",{sheetId,figureId,col,row,offset,size,definition:image,});}};const FORMAT_PERCENT_ACTION=(env)=>setFormatter(env,"0.00%");const OPEN_CF_SIDEPANEL_ACTION=(env)=>{env.openSidePanel("ConditionalFormatting",{selection:env.model.getters.getSelectedZones()});};const INSERT_LINK=(env)=>{const{col,row}=env.model.getters.getActivePosition();env.getStore(CellPopoverStore).open({col,row},"LinkEditor");};const INSERT_LINK_NAME=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const{col,row}=env.model.getters.getActivePosition();const cell=env.model.getters.getEvaluatedCell({sheetId,col,row});return cell&&cell.link?_t("Edit link"):_t("Insert link");};const SELECTED_TABLE_HAS_FILTERS=(env)=>{const table=env.model.getters.getFirstTableInSelection();return table?.config.hasFilters||false;};const SELECTION_CONTAINS_SINGLE_TABLE=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const selectedZones=env.model.getters.getSelectedZones();return env.model.getters.getTablesOverlappingZones(sheetId,selectedZones).length===1;};const IS_SELECTION_CONTINUOUS=(env)=>{return areZonesContinuous(env.model.getters.getSelectedZones());};const ADD_DATA_FILTER=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const table=env.model.getters.getFirstTableInSelection();if(table){env.model.dispatch("UPDATE_TABLE",{sheetId,zone:table.range.zone,config:{hasFilters:true},});}
else{const tableConfig={...DEFAULT_TABLE_CONFIG,hasFilters:true,bandedRows:false,styleId:"TableStyleLight11",};interactiveCreateTable(env,sheetId,tableConfig);}};const REMOVE_DATA_FILTER=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const table=env.model.getters.getFirstTableInSelection();if(!table){return;}
env.model.dispatch("UPDATE_TABLE",{sheetId,zone:table.range.zone,config:{hasFilters:false},});};const INSERT_TABLE=(env)=>{const sheetId=env.model.getters.getActiveSheetId();const result=interactiveCreateTable(env,sheetId);if(result.isSuccessful){env.openSidePanel("TableSidePanel",{});}};const DELETE_SELECTED_TABLE=(env)=>{const position=env.model.getters.getActivePosition();const table=env.model.getters.getTable(position);if(!table){return;}
env.model.dispatch("REMOVE_TABLE",{sheetId:position.sheetId,target:[table.range.zone],});};const IS_ONLY_ONE_RANGE=(env)=>{return env.model.getters.getSelectedZones().length===1;};const CAN_INSERT_HEADER=(env,dimension)=>{if(!IS_ONLY_ONE_RANGE(env)){return false;}
const activeHeaders=dimension==="COL"?env.model.getters.getActiveCols():env.model.getters.getActiveRows();const ortogonalActiveHeaders=dimension==="COL"?env.model.getters.getActiveRows():env.model.getters.getActiveCols();const sheetId=env.model.getters.getActiveSheetId();const zone=env.model.getters.getSelectedZone();const allSheetSelected=isEqual(zone,env.model.getters.getSheetZone(sheetId));return isConsecutive(activeHeaders)&&(ortogonalActiveHeaders.size===0||allSheetSelected);};const CREATE_OR_REMOVE_FILTER_ACTION={name:(env)=>SELECTED_TABLE_HAS_FILTERS(env)?_t("Remove selected filters"):_t("Add filters"),isEnabled:(env)=>IS_SELECTION_CONTINUOUS(env),execute:(env)=>SELECTED_TABLE_HAS_FILTERS(env)?REMOVE_DATA_FILTER(env):ADD_DATA_FILTER(env),icon:"o-spreadsheet-Icon.FILTER_ICON_ACTIVE",};function interactiveFreezeColumnsRows(env,dimension,base){const sheetId=env.model.getters.getActiveSheetId();const cmd=dimension==="COL"?"FREEZE_COLUMNS":"FREEZE_ROWS";const result=env.model.dispatch(cmd,{sheetId,quantity:base});if(result.isCancelledBecause("MergeOverlap")){env.raiseError(MergeErrorMessage);}}
class PositionMap{map={};constructor(entries=[]){for(const[position,value]of entries){this.set(position,value);}}
set({sheetId,col,row},value){const map=this.map;if(!map[sheetId]){map[sheetId]={};}
if(!map[sheetId][col]){map[sheetId][col]={};}
map[sheetId][col][row]=value;}
get({sheetId,col,row}){return this.map[sheetId]?.[col]?.[row];}
getSheet(sheetId){return this.map[sheetId];}
has({sheetId,col,row}){return this.map[sheetId]?.[col]?.[row]!==undefined;}
delete({sheetId,col,row}){delete this.map[sheetId]?.[col]?.[row];}
keys(){const map=this.map;const keys=[];for(const sheetId in map){for(const col in map[sheetId]){for(const row in map[sheetId][col]){keys.push({sheetId,col:parseInt(col),row:parseInt(row)});}}}
return keys;}
keysForSheet(sheetId){const map=this.map[sheetId];if(!map){return[];}
const keys=[];for(const col in map){for(const row in map[col]){keys.push({sheetId,col:parseInt(col),row:parseInt(row)});}}
return keys;}*entries(){const map=this.map;for(const position of this.keys()){const{sheetId,col,row}=position;yield[position,map[sheetId][col][row]];}}}
class FormulaFingerprintStore extends SpreadsheetStore{mutators=["enable","disable"];isInvalidated=false;fingerprintColors={[DATA_FINGERPRINT]:"#D9D9D9",};isEnabled=false;colors=new PositionMap();handle(cmd){if(isCoreCommand(cmd)&&this.isEnabled){this.isInvalidated=true;}
switch(cmd.type){case"UNDO":case"REDO":case"ACTIVATE_SHEET":if(this.isEnabled){this.isInvalidated=true;}
break;}}
finalize(){if(this.isInvalidated){this.isInvalidated=false;this.computeFingerprints();}}
enable(){this.isEnabled=true;this.computeFingerprints();}
disable(){this.isEnabled=false;this.colors=new PositionMap();}
computeFingerprints(){this.colors=new PositionMap();const fingerprints=new PositionMap();const allFingerprints=new Set();const activeSheetId=this.getters.getActiveSheetId();const cells=this.getters.getCells(activeSheetId);for(const cellId in cells){const fingerprint=this.computeFingerprint(cells[cellId]);if(!fingerprint){continue;}
allFingerprints.add(fingerprint);const position=this.getters.getCellPosition(cellId);fingerprints.set(position,fingerprint);}
this.assignColors(allFingerprints);for(const[position,fingerprint]of fingerprints.entries()){const color=this.fingerprintColors[fingerprint];this.colors.set(position,color);this.colorSpreadZone(position,color);}}
colorSpreadZone(position,fingerprintColor){const spreadZone=this.getters.getSpreadZone(position);if(!spreadZone){return;}
const sheetId=position.sheetId;for(let row=spreadZone.top;row<=spreadZone.bottom;row++){for(let col=spreadZone.left;col<=spreadZone.right;col++){const spreadPosition={sheetId,col,row};this.colors.set(spreadPosition,fingerprintColor);}}}
assignColors(fingerprints){const colors=new AlternatingColorGenerator(fingerprints.size);Object.keys(this.fingerprintColors).forEach(()=>colors.next());for(const fingerprint of fingerprints){if(!this.fingerprintColors[fingerprint]){this.fingerprintColors[fingerprint]=setColorAlpha(colors.next(),0.8);}}}
computeFingerprint(cell){const position=this.getters.getCellPosition(cell.id);if(cell.isFormula){return this.computeFormulaFingerprint(position,cell);}
else{return this.getLiteralFingerprint(position);}}
computeFormulaFingerprint(position,cell){const dependencies=cell.compiledFormula.dependencies;const colCellOffset=position.col;const rowCellOffset=position.row;const positionSheetIndex=this.getters.getSheetIds().indexOf(position.sheetId);const fingerprintVector={dx:0,dy:0,dSheet:0,};for(const range of dependencies){const zone=range.zone;const[left,right]=range.parts;const rangeSheetIndex=this.getters.getSheetIds().indexOf(range.sheetId);fingerprintVector.dSheet=rangeSheetIndex-positionSheetIndex;const isLeftUnbounded=isFullRowRange(range)&&!range.unboundedZone.hasHeader;const isTopUnbounded=isFullColRange(range)&&!range.unboundedZone.hasHeader;const leftOffset=isLeftUnbounded||left?.colFixed?0:colCellOffset;const topOffset=isTopUnbounded||left?.rowFixed?0:rowCellOffset;const isRightFixed=(!right&&left?.colFixed)||right?.colFixed;const isBottomFixed=(!right&&left.rowFixed)||right?.rowFixed;const isRightUnbounded=range.unboundedZone.right===undefined;const isBottomUnbounded=range.unboundedZone.bottom===undefined;const rightOffset=isRightUnbounded||isRightFixed?0:colCellOffset;const bottomOffset=isBottomUnbounded||isBottomFixed?0:rowCellOffset;const referenceZone=reorderZone({top:zone.top-topOffset,left:zone.left-leftOffset,right:zone.right-rightOffset,bottom:zone.bottom-bottomOffset,});for(let dy=referenceZone.top;dy<=referenceZone.bottom;dy++){for(let dx=referenceZone.left;dx<=referenceZone.right;dx++){fingerprintVector.dx+=dx;fingerprintVector.dy+=dy;}}}
const normalizedFormula=cell.compiledFormula.normalizedFormula;return hash(fingerprintVector)+normalizedFormula;}
getLiteralFingerprint(position){const evaluatedCell=this.getters.getEvaluatedCell(position);switch(evaluatedCell.type){case CellValueType.number:case CellValueType.boolean:return DATA_FINGERPRINT;case CellValueType.text:case CellValueType.empty:case CellValueType.error:return undefined;}}}
function hash(vector){return Object.entries(vector).sort(([a],[b])=>a.localeCompare(b)).map(([_,value])=>value).join(",");}
const DATA_FINGERPRINT="DATA_FINGERPRINT";const hideCols={name:HIDE_COLUMNS_NAME,execute:(env)=>{const columns=env.model.getters.getElementsFromSelection("COL");env.model.dispatch("HIDE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),dimension:"COL",elements:columns,});},isVisible:NOT_ALL_VISIBLE_COLS_SELECTED,icon:"o-spreadsheet-Icon.HIDE_COL",};const unhideCols={name:_t("Unhide columns"),execute:(env)=>{const columns=env.model.getters.getElementsFromSelection("COL");env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),dimension:"COL",elements:columns,});},isVisible:(env)=>{const hiddenCols=env.model.getters.getHiddenColsGroups(env.model.getters.getActiveSheetId()).flat();const currentCols=env.model.getters.getElementsFromSelection("COL");return currentCols.some((col)=>hiddenCols.includes(col));},icon:"o-spreadsheet-Icon.UNHIDE_COL",};const unhideAllCols={name:_t("Unhide all columns"),execute:(env)=>{const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId,dimension:"COL",elements:Array.from(Array(env.model.getters.getNumberCols(sheetId)).keys()),});},isVisible:(env)=>env.model.getters.getHiddenColsGroups(env.model.getters.getActiveSheetId()).length>0,icon:"o-spreadsheet-Icon.UNHIDE_COL",};const hideRows={name:HIDE_ROWS_NAME,execute:(env)=>{const rows=env.model.getters.getElementsFromSelection("ROW");env.model.dispatch("HIDE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),dimension:"ROW",elements:rows,});},isVisible:NOT_ALL_VISIBLE_ROWS_SELECTED,icon:"o-spreadsheet-Icon.HIDE_ROW",};const unhideRows={name:_t("Unhide rows"),execute:(env)=>{const columns=env.model.getters.getElementsFromSelection("ROW");env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),dimension:"ROW",elements:columns,});},isVisible:(env)=>{const hiddenRows=env.model.getters.getHiddenRowsGroups(env.model.getters.getActiveSheetId()).flat();const currentRows=env.model.getters.getElementsFromSelection("ROW");return currentRows.some((col)=>hiddenRows.includes(col));},icon:"o-spreadsheet-Icon.UNHIDE_ROW",};const unhideAllRows={name:_t("Unhide all rows"),execute:(env)=>{const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId,dimension:"ROW",elements:Array.from(Array(env.model.getters.getNumberRows(sheetId)).keys()),});},isVisible:(env)=>env.model.getters.getHiddenRowsGroups(env.model.getters.getActiveSheetId()).length>0,icon:"o-spreadsheet-Icon.UNHIDE_ROW",};const unFreezePane={name:_t("Unfreeze"),isVisible:(env)=>{const{xSplit,ySplit}=env.model.getters.getPaneDivisions(env.model.getters.getActiveSheetId());return xSplit+ySplit>0;},execute:(env)=>env.model.dispatch("UNFREEZE_COLUMNS_ROWS",{sheetId:env.model.getters.getActiveSheetId(),}),icon:"o-spreadsheet-Icon.UNFREEZE",};const freezePane={name:_t("Freeze"),icon:"o-spreadsheet-Icon.FREEZE",};const unFreezeRows={name:_t("No rows"),execute:(env)=>env.model.dispatch("UNFREEZE_ROWS",{sheetId:env.model.getters.getActiveSheetId(),}),isReadonlyAllowed:true,isVisible:(env)=>!!env.model.getters.getPaneDivisions(env.model.getters.getActiveSheetId()).ySplit,};const freezeFirstRow={name:_t("1 row"),execute:(env)=>interactiveFreezeColumnsRows(env,"ROW",1),isReadonlyAllowed:true,};const freezeSecondRow={name:_t("2 rows"),execute:(env)=>interactiveFreezeColumnsRows(env,"ROW",2),isReadonlyAllowed:true,};const freezeCurrentRow={name:_t("Up to current row"),execute:(env)=>{const{bottom}=env.model.getters.getSelectedZone();interactiveFreezeColumnsRows(env,"ROW",bottom+1);},isReadonlyAllowed:true,};const unFreezeCols={name:_t("No columns"),execute:(env)=>env.model.dispatch("UNFREEZE_COLUMNS",{sheetId:env.model.getters.getActiveSheetId(),}),isReadonlyAllowed:true,isVisible:(env)=>!!env.model.getters.getPaneDivisions(env.model.getters.getActiveSheetId()).xSplit,};const freezeFirstCol={name:_t("1 column"),execute:(env)=>interactiveFreezeColumnsRows(env,"COL",1),isReadonlyAllowed:true,};const freezeSecondCol={name:_t("2 columns"),execute:(env)=>interactiveFreezeColumnsRows(env,"COL",2),isReadonlyAllowed:true,};const freezeCurrentCol={name:_t("Up to current column"),execute:(env)=>{const{right}=env.model.getters.getSelectedZone();interactiveFreezeColumnsRows(env,"COL",right+1);},isReadonlyAllowed:true,};const viewGridlines={name:_t("Gridlines"),execute:(env)=>{const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("SET_GRID_LINES_VISIBILITY",{sheetId,areGridLinesVisible:!env.model.getters.getGridLinesVisibility(sheetId),});},isActive:(env)=>{const sheetId=env.model.getters.getActiveSheetId();return env.model.getters.getGridLinesVisibility(sheetId);},};const irregularityMap={name:_t("Irregularity map"),execute:(env)=>{const fingerprintStore=env.getStore(FormulaFingerprintStore);if(fingerprintStore.isEnabled){fingerprintStore.disable();}
else{fingerprintStore.enable();}},isReadonlyAllowed:true,icon:"o-spreadsheet-Icon.IRREGULARITY_MAP",};const viewFormulas={name:_t("Formulas"),isActive:(env)=>env.model.getters.shouldShowFormulas(),execute:(env)=>env.model.dispatch("SET_FORMULA_VISIBILITY",{show:!env.model.getters.shouldShowFormulas()}),isReadonlyAllowed:true,};const groupColumns={name:(env)=>{const selection=env.model.getters.getSelectedZone();if(selection.left===selection.right){return _t("Group column %s",numberToLetters(selection.left));}
return _t("Group columns %s - %s",numberToLetters(selection.left),numberToLetters(selection.right));},execute:(env)=>groupHeadersAction(env,"COL"),isVisible:(env)=>{const sheetId=env.model.getters.getActiveSheetId();const selection=env.model.getters.getSelectedZone();const groups=env.model.getters.getHeaderGroupsInZone(sheetId,"COL",selection);return(IS_ONLY_ONE_RANGE(env)&&!groups.some((group)=>group.start===selection.left&&group.end===selection.right));},icon:"o-spreadsheet-Icon.GROUP_COLUMNS",};const groupRows={name:(env)=>{const selection=env.model.getters.getSelectedZone();if(selection.top===selection.bottom){return _t("Group row %s",String(selection.top+1));}
return _t("Group rows %s - %s",String(selection.top+1),String(selection.bottom+1));},execute:(env)=>groupHeadersAction(env,"ROW"),isVisible:(env)=>{const sheetId=env.model.getters.getActiveSheetId();const selection=env.model.getters.getSelectedZone();const groups=env.model.getters.getHeaderGroupsInZone(sheetId,"ROW",selection);return(IS_ONLY_ONE_RANGE(env)&&!groups.some((group)=>group.start===selection.top&&group.end===selection.bottom));},icon:"o-spreadsheet-Icon.GROUP_ROWS",};const ungroupColumns={name:(env)=>{const selection=env.model.getters.getSelectedZone();if(selection.left===selection.right){return _t("Ungroup column %s",numberToLetters(selection.left));}
return _t("Ungroup columns %s - %s",numberToLetters(selection.left),numberToLetters(selection.right));},execute:(env)=>ungroupHeaders(env,"COL"),icon:"o-spreadsheet-Icon.UNGROUP_COLUMNS",};const ungroupRows={name:(env)=>{const selection=env.model.getters.getSelectedZone();if(selection.top===selection.bottom){return _t("Ungroup row %s",String(selection.top+1));}
return _t("Ungroup rows %s - %s",String(selection.top+1),String(selection.bottom+1));},execute:(env)=>ungroupHeaders(env,"ROW"),icon:"o-spreadsheet-Icon.UNGROUP_ROWS",};function groupHeadersAction(env,dim){const selection=env.model.getters.getSelectedZone();const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("GROUP_HEADERS",{sheetId,dimension:dim,start:dim==="COL"?selection.left:selection.top,end:dim==="COL"?selection.right:selection.bottom,});}
function ungroupHeaders(env,dim){const selection=env.model.getters.getSelectedZone();const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("UNGROUP_HEADERS",{sheetId,dimension:dim,start:dim==="COL"?selection.left:selection.top,end:dim==="COL"?selection.right:selection.bottom,});}
function canUngroupHeaders(env,dimension){const sheetId=env.model.getters.getActiveSheetId();const selection=env.model.getters.getSelectedZones();return(selection.length===1&&env.model.getters.getHeaderGroupsInZone(sheetId,dimension,selection[0]).length>0);}
const TABLE_ELEMENTS_BY_PRIORITY=["wholeTable","firstColumnStripe","secondColumnStripe","firstRowStripe","secondRowStripe","firstColumn","lastColumn","headerRow","totalRow",];function getTableContentZone(tableZone,tableConfig){const numberOfHeaders=tableConfig.numberOfHeaders;const contentZone={...tableZone,top:tableZone.top+numberOfHeaders};return contentZone.top<=contentZone.bottom?contentZone:undefined;}
function getTableTopLeft(table){const range=table.range;return{row:range.zone.top,col:range.zone.left,sheetId:range.sheetId};}
function createFilter(id,range,config,createRange){const zone=range.zone;if(zone.left!==zone.right){throw new Error("Can only define a filter on a single column");}
const filteredZone={...zone,top:zone.top+config.numberOfHeaders};const filteredRange=createRange(range.sheetId,filteredZone);return{id,rangeWithHeaders:range,col:zone.left,filteredRange:filteredZone.top>filteredZone.bottom?undefined:filteredRange,};}
function isStaticTable(table){return table.type==="static"||table.type==="forceStatic";}
function getComputedTableStyle(tableConfig,style,numberOfCols,numberOfRows){return{borders:getAllTableBorders(tableConfig,style,numberOfCols,numberOfRows),styles:getAllTableStyles(tableConfig,style,numberOfCols,numberOfRows),};}
function getAllTableBorders(tableConfig,style,nOfCols,nOfRows){const borders=generateMatrix(nOfCols,nOfRows,()=>({}));for(const tableElement of TABLE_ELEMENTS_BY_PRIORITY){const styleBorder=style[tableElement]?.border;if(!styleBorder)
continue;const zones=getTableElementZones(tableElement,tableConfig,nOfCols,nOfRows);for(const zone of zones){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const noInsideBorder=tableElement==="wholeTable"&&row<=tableConfig.numberOfHeaders-1;if(row===zone.top&&styleBorder?.top){setBorderDescr(borders,"top",styleBorder.top,col,row,nOfCols,nOfRows);}
else if(row!==zone.top&&!noInsideBorder&&styleBorder?.horizontal){setBorderDescr(borders,"top",styleBorder.horizontal,col,row,nOfCols,nOfRows);}
if(row===zone.bottom&&styleBorder?.bottom){setBorderDescr(borders,"bottom",styleBorder.bottom,col,row,nOfCols,nOfRows);}
if(col===zone.left&&styleBorder?.left){setBorderDescr(borders,"left",styleBorder.left,col,row,nOfCols,nOfRows);}
if(col===zone.right&&styleBorder?.right){setBorderDescr(borders,"right",styleBorder.right,col,row,nOfCols,nOfRows);}
else if(col!==zone.right&&!noInsideBorder&&styleBorder?.vertical){setBorderDescr(borders,"right",styleBorder.vertical,col,row,nOfCols,nOfRows);}}}}}
return borders;}
function setBorderDescr(computedBorders,dir,borderDescr,col,row,numberOfCols,numberOfRows){switch(dir){case"top":computedBorders[col][row].top=borderDescr;if(row!==0){computedBorders[col][row-1].bottom=borderDescr;}
return;case"bottom":computedBorders[col][row].bottom=borderDescr;if(row!==numberOfRows-1){computedBorders[col][row+1].top=borderDescr;}
return;case"left":computedBorders[col][row].left=borderDescr;if(col!==0){computedBorders[col-1][row].right=borderDescr;}
return;case"right":computedBorders[col][row].right=borderDescr;if(col!==numberOfCols-1){computedBorders[col+1][row].left=borderDescr;}
return;}}
function getAllTableStyles(tableConfig,style,numberOfCols,numberOfRows){const styles=generateMatrix(numberOfCols,numberOfRows,()=>({}));for(const tableElement of TABLE_ELEMENTS_BY_PRIORITY){const tableElStyle=style[tableElement];const bold=isTableElementInBold(tableElement);if(!tableElStyle&&!bold){continue;}
const zones=getTableElementZones(tableElement,tableConfig,numberOfCols,numberOfRows);for(const zone of zones){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){if(!styles[col][row]){styles[col][row]={};}
styles[col][row]={...styles[col][row],...tableElStyle?.style,};if(bold){styles[col][row].bold=true;}}}}}
return styles;}
function isTableElementInBold(tableElement){return(tableElement==="firstColumn"||tableElement==="lastColumn"||tableElement==="headerRow"||tableElement==="totalRow");}
function getTableElementZones(el,tableConfig,numberOfCols,numberOfRows){const zones=[];const headerRows=Math.min(tableConfig.numberOfHeaders,numberOfRows);const totalRows=tableConfig.totalRow?1:0;const lastCol=numberOfCols-1;const lastRow=numberOfRows-1;switch(el){case"wholeTable":zones.push({top:0,left:0,bottom:lastRow,right:lastCol});break;case"firstColumn":if(!tableConfig.firstColumn)
break;zones.push({top:0,left:0,bottom:lastRow,right:0});break;case"lastColumn":if(!tableConfig.lastColumn)
break;zones.push({top:0,left:lastCol,bottom:lastRow,right:lastCol});break;case"headerRow":if(!tableConfig.numberOfHeaders)
break;zones.push({top:0,left:0,bottom:headerRows-1,right:lastCol});break;case"totalRow":if(!tableConfig.totalRow)
break;zones.push({top:lastRow,left:0,bottom:lastRow,right:lastCol});break;case"firstRowStripe":if(!tableConfig.bandedRows)
break;for(let i=headerRows;i<numberOfRows-totalRows;i+=2){zones.push({top:i,left:0,bottom:i,right:lastCol});}
break;case"secondRowStripe":if(!tableConfig.bandedRows)
break;for(let i=headerRows+1;i<numberOfRows-totalRows;i+=2){zones.push({top:i,left:0,bottom:i,right:lastCol});}
break;case"firstColumnStripe":if(!tableConfig.bandedColumns)
break;for(let i=0;i<numberOfCols;i+=2){zones.push({top:headerRows,left:i,bottom:lastRow-totalRows,right:i});}
break;case"secondColumnStripe":if(!tableConfig.bandedColumns)
break;for(let i=1;i<numberOfCols;i+=2){zones.push({top:headerRows,left:i,bottom:lastRow-totalRows,right:i});}
break;}
return zones;}
function interactiveCut(env){const result=env.model.dispatch("CUT");if(!result.isSuccessful){if(result.isCancelledBecause("WrongCutSelection")){env.raiseError(_t("This operation is not allowed with multiple selections."));}}}
const AddMergeInteractiveContent={MergeIsDestructive:_t("Merging these cells will only preserve the top-leftmost value. Merge anyway?"),MergeInFilter:_t("You can't merge cells inside of an existing filter."),};function interactiveAddMerge(env,sheetId,target){const result=env.model.dispatch("ADD_MERGE",{sheetId,target});if(result.isCancelledBecause("MergeInTable")){env.raiseError(AddMergeInteractiveContent.MergeInFilter);}
else if(result.isCancelledBecause("MergeIsDestructive")){env.askConfirmation(AddMergeInteractiveContent.MergeIsDestructive,()=>{env.model.dispatch("ADD_MERGE",{sheetId,target,force:true});});}}
const undo={name:_t("Undo"),description:"Ctrl+Z",execute:(env)=>env.model.dispatch("REQUEST_UNDO"),isEnabled:(env)=>env.model.getters.canUndo(),icon:"o-spreadsheet-Icon.UNDO",};const redo={name:_t("Redo"),description:"Ctrl+Y",execute:(env)=>env.model.dispatch("REQUEST_REDO"),isEnabled:(env)=>env.model.getters.canRedo(),icon:"o-spreadsheet-Icon.REDO",};const copy={name:_t("Copy"),description:"Ctrl+C",isReadonlyAllowed:true,execute:async(env)=>{env.model.dispatch("COPY");await env.clipboard.write(await env.model.getters.getClipboardTextAndImageContent());},icon:"o-spreadsheet-Icon.CLIPBOARD",};const cut={name:_t("Cut"),description:"Ctrl+X",execute:async(env)=>{interactiveCut(env);await env.clipboard.write(await env.model.getters.getClipboardTextAndImageContent());},icon:"o-spreadsheet-Icon.CUT",};const paste={name:_t("Paste"),description:"Ctrl+V",execute:PASTE_ACTION,icon:"o-spreadsheet-Icon.PASTE",};const pasteSpecial={name:_t("Paste special"),isVisible:(env)=>{return!env.model.getters.isCutOperation();},icon:"o-spreadsheet-Icon.PASTE",};const pasteSpecialValue={name:_t("Paste as value"),description:"Ctrl+Shift+V",execute:PASTE_AS_VALUE_ACTION,};const pasteSpecialFormat={name:_t("Paste format only"),execute:PASTE_FORMAT_ACTION,};const findAndReplace={name:_t("Find and replace"),description:"Ctrl+H",isReadonlyAllowed:true,execute:(env)=>{env.openSidePanel("FindAndReplace",{});},isEnabled:(env)=>!env.isSmall,icon:"o-spreadsheet-Icon.SEARCH",};const deleteValues={name:_t("Delete values"),execute:(env)=>env.model.dispatch("DELETE_UNFILTERED_CONTENT",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),}),};const deleteRows={name:REMOVE_ROWS_NAME,execute:REMOVE_ROWS_ACTION,isVisible:(env)=>CAN_REMOVE_COLUMNS_ROWS("ROW",env),};const deleteRow={...deleteRows,isVisible:IS_ONLY_ONE_RANGE,};const clearRows={name:DELETE_CONTENT_ROWS_NAME,execute:DELETE_CONTENT_ROWS_ACTION,};const deleteCols={name:REMOVE_COLUMNS_NAME,execute:REMOVE_COLUMNS_ACTION,isVisible:(env)=>CAN_REMOVE_COLUMNS_ROWS("COL",env),};const deleteCol={...deleteCols,isVisible:IS_ONLY_ONE_RANGE,};const clearCols={name:DELETE_CONTENT_COLUMNS_NAME,execute:DELETE_CONTENT_COLUMNS_ACTION,};const deleteCells={name:_t("Delete cells"),isVisible:IS_ONLY_ONE_RANGE,};const deleteCellShiftUp={name:_t("Delete cell and shift up"),execute:(env)=>{const zone=env.model.getters.getSelectedZone();const result=env.model.dispatch("DELETE_CELL",{zone,shiftDimension:"ROW"});handlePasteResult(env,result);},};const deleteCellShiftLeft={name:_t("Delete cell and shift left"),execute:(env)=>{const zone=env.model.getters.getSelectedZone();const result=env.model.dispatch("DELETE_CELL",{zone,shiftDimension:"COL"});handlePasteResult(env,result);},};const mergeCells={name:_t("Merge cells"),isEnabled:(env)=>!cannotMerge(env),isActive:(env)=>hasMergeInAnySelectedZone(env),execute:(env)=>toggleMerge(env),icon:"o-spreadsheet-Icon.MERGE_CELL",};const editTable={name:()=>_t("Edit table"),execute:(env)=>env.openSidePanel("TableSidePanel",{}),icon:"o-spreadsheet-Icon.EDIT_TABLE",};const deleteTable={name:()=>_t("Delete table"),execute:DELETE_SELECTED_TABLE,icon:"o-spreadsheet-Icon.DELETE_TABLE",};function cannotMerge(env){const zones=env.model.getters.getSelectedZones();const{sheetId}=env.model.getters.getActivePosition();const{xSplit,ySplit}=env.model.getters.getPaneDivisions(sheetId);return(zones.every((zone)=>getZoneArea(zone)===1)||doesAnyZoneCrossFrozenPane(zones,xSplit,ySplit)||hasOverlappingZones(zones));}
function hasMergeInAnySelectedZone(env){if(cannotMerge(env)){return false;}
const sheetId=env.model.getters.getActiveSheetId();const zones=env.model.getters.getSelectedZones();return zones.some((zone)=>{return env.model.getters.getMergesInZone(sheetId,zone).length>0;});}
function toggleMerge(env){if(cannotMerge(env)){return;}
const target=env.model.getters.getSelectedZones();const sheetId=env.model.getters.getActiveSheetId();if(hasMergeInAnySelectedZone(env)){const mergesToRemove=target.flatMap((zone)=>env.model.getters.getMergesInZone(sheetId,zone));env.model.dispatch("REMOVE_MERGE",{sheetId,target:mergesToRemove});}
else{interactiveAddMerge(env,sheetId,target);}}
const insertRow={name:(env)=>{const number=getRowsNumber(env);return number===1?_t("Insert row"):_t("Insert %s rows",number.toString());},isVisible:(env)=>CAN_INSERT_HEADER(env,"ROW"),icon:"o-spreadsheet-Icon.INSERT_ROW",};const rowInsertRowBefore={name:(env)=>{const number=getRowsNumber(env);return number===1?_t("Insert row above"):_t("Insert %s rows above",number.toString());},execute:INSERT_ROWS_BEFORE_ACTION,isVisible:(env)=>CAN_INSERT_HEADER(env,"ROW"),icon:"o-spreadsheet-Icon.INSERT_ROW_BEFORE",};const topBarInsertRowsBefore={...rowInsertRowBefore,name:(env)=>{const number=getRowsNumber(env);if(number===1){return _t("Row above");}
return _t("%s Rows above",number.toString());},};const cellInsertRowsBefore={...rowInsertRowBefore,name:(env)=>{const number=getRowsNumber(env);if(number===1){return _t("Insert row");}
return _t("Insert %s rows",number.toString());},isVisible:IS_ONLY_ONE_RANGE,icon:"o-spreadsheet-Icon.INSERT_ROW_BEFORE",};const rowInsertRowsAfter={execute:INSERT_ROWS_AFTER_ACTION,name:(env)=>{const number=getRowsNumber(env);return number===1?_t("Insert row below"):_t("Insert %s rows below",number.toString());},isVisible:(env)=>CAN_INSERT_HEADER(env,"ROW"),icon:"o-spreadsheet-Icon.INSERT_ROW_AFTER",};const topBarInsertRowsAfter={...rowInsertRowsAfter,name:(env)=>{const number=getRowsNumber(env);if(number===1){return _t("Row below");}
return _t("%s Rows below",number.toString());},};const insertCol={name:(env)=>{const number=getColumnsNumber(env);return number===1?_t("Insert column"):_t("Insert %s columns",number.toString());},isVisible:(env)=>CAN_INSERT_HEADER(env,"COL"),icon:"o-spreadsheet-Icon.INSERT_COL",};const colInsertColsBefore={name:(env)=>{const number=getColumnsNumber(env);return number===1?_t("Insert column left"):_t("Insert %s columns left",number.toString());},execute:INSERT_COLUMNS_BEFORE_ACTION,isVisible:(env)=>CAN_INSERT_HEADER(env,"COL"),icon:"o-spreadsheet-Icon.INSERT_COL_BEFORE",};const topBarInsertColsBefore={...colInsertColsBefore,name:(env)=>{const number=getColumnsNumber(env);if(number===1){return _t("Column left");}
return _t("%s Columns left",number.toString());},};const cellInsertColsBefore={...colInsertColsBefore,name:(env)=>{const number=getColumnsNumber(env);if(number===1){return _t("Insert column");}
return _t("Insert %s columns",number.toString());},isVisible:IS_ONLY_ONE_RANGE,icon:"o-spreadsheet-Icon.INSERT_COL_BEFORE",};const colInsertColsAfter={name:(env)=>{const number=getColumnsNumber(env);return number===1?_t("Insert column right"):_t("Insert %s columns right",number.toString());},execute:INSERT_COLUMNS_AFTER_ACTION,isVisible:(env)=>CAN_INSERT_HEADER(env,"COL"),icon:"o-spreadsheet-Icon.INSERT_COL_AFTER",};const topBarInsertColsAfter={...colInsertColsAfter,name:(env)=>{const number=getColumnsNumber(env);if(number===1){return _t("Column right");}
return _t("%s Columns right",number.toString());},execute:INSERT_COLUMNS_AFTER_ACTION,};const insertCell={name:_t("Insert cells"),isVisible:(env)=>IS_ONLY_ONE_RANGE(env)&&env.model.getters.getActiveCols().size===0&&env.model.getters.getActiveRows().size===0,icon:"o-spreadsheet-Icon.INSERT_CELL",};const insertCellShiftDown={name:_t("Insert cells and shift down"),execute:(env)=>{const zone=env.model.getters.getSelectedZone();const result=env.model.dispatch("INSERT_CELL",{zone,shiftDimension:"ROW"});handlePasteResult(env,result);},isVisible:(env)=>env.model.getters.getActiveRows().size===0&&env.model.getters.getActiveCols().size===0,icon:"o-spreadsheet-Icon.INSERT_CELL_SHIFT_DOWN",};const insertCellShiftRight={name:_t("Insert cells and shift right"),execute:(env)=>{const zone=env.model.getters.getSelectedZone();const result=env.model.dispatch("INSERT_CELL",{zone,shiftDimension:"COL"});handlePasteResult(env,result);},isVisible:(env)=>env.model.getters.getActiveRows().size===0&&env.model.getters.getActiveCols().size===0,icon:"o-spreadsheet-Icon.INSERT_CELL_SHIFT_RIGHT",};const insertChart={name:_t("Chart"),execute:CREATE_CHART,isEnabled:(env)=>!env.isSmall,icon:"o-spreadsheet-Icon.INSERT_CHART",};const insertPivot={name:_t("Pivot table"),execute:CREATE_PIVOT,isEnabled:(env)=>!env.isSmall,icon:"o-spreadsheet-Icon.PIVOT",};const insertImage={name:_t("Image"),description:"Ctrl+O",execute:CREATE_IMAGE,isVisible:(env)=>env.imageProvider!==undefined,isEnabled:(env)=>!env.isSmall,icon:"o-spreadsheet-Icon.INSERT_IMAGE",};const insertTable={name:()=>_t("Table"),execute:INSERT_TABLE,isVisible:(env)=>IS_SELECTION_CONTINUOUS(env)&&!env.model.getters.getFirstTableInSelection(),isEnabled:(env)=>!env.isSmall,icon:"o-spreadsheet-Icon.PAINT_TABLE",};const insertFunction={name:_t("Function"),icon:"o-spreadsheet-Icon.FORMULA",};const insertFunctionSum={name:_t("SUM"),execute:(env)=>env.startCellEdition(`=SUM(`),};const insertFunctionAverage={name:_t("AVERAGE"),execute:(env)=>env.startCellEdition(`=AVERAGE(`),};const insertFunctionCount={name:_t("COUNT"),execute:(env)=>env.startCellEdition(`=COUNT(`),};const insertFunctionMax={name:_t("MAX"),execute:(env)=>env.startCellEdition(`=MAX(`),};const insertFunctionMin={name:_t("MIN"),execute:(env)=>env.startCellEdition(`=MIN(`),};const categorieFunctionAll={name:_t("All"),children:[allFunctionListMenuBuilder],};function allFunctionListMenuBuilder(){const fnNames=functionRegistry.getKeys().filter((key)=>!functionRegistry.get(key).hidden);return createFormulaFunctions(fnNames);}
const categoriesFunctionListMenuBuilder=()=>{const functions=functionRegistry.content;const categories=[...new Set(functionRegistry.getAll().filter((fn)=>!fn.hidden).map((fn)=>fn.category)),].filter(isDefined);return categories.sort().map((category,i)=>{const functionsInCategory=Object.keys(functions).filter((key)=>functions[key].category===category&&!functions[key].hidden);return{name:category,children:createFormulaFunctions(functionsInCategory),};});};const insertLink={name:_t("Link"),execute:INSERT_LINK,icon:"o-spreadsheet-Icon.INSERT_LINK",};const insertCheckbox={name:_t("Checkbox"),execute:(env)=>{const zones=env.model.getters.getSelectedZones();const sheetId=env.model.getters.getActiveSheetId();const ranges=zones.map((zone)=>env.model.getters.getRangeDataFromZone(sheetId,zone));env.model.dispatch("ADD_DATA_VALIDATION_RULE",{ranges,sheetId,rule:{id:env.model.uuidGenerator.smallUuid(),criterion:{type:"isBoolean",values:[],},},});},icon:"o-spreadsheet-Icon.INSERT_CHECKBOX",};const insertDropdown={name:_t("Dropdown list"),execute:(env)=>{const zones=env.model.getters.getSelectedZones();const sheetId=env.model.getters.getActiveSheetId();const ranges=zones.map((zone)=>env.model.getters.getRangeDataFromZone(sheetId,zone));const ruleID=env.model.uuidGenerator.smallUuid();env.model.dispatch("ADD_DATA_VALIDATION_RULE",{ranges,sheetId,rule:{id:ruleID,criterion:{type:"isValueInList",values:[],displayStyle:"chip",},},});const rule=env.model.getters.getDataValidationRule(sheetId,ruleID);if(!rule){return;}
env.openSidePanel("DataValidationEditor",{rule:localizeDataValidationRule(rule,env.model.getters.getLocale()),onExit:()=>{env.openSidePanel("DataValidation");},});},isEnabled:(env)=>!env.isSmall,icon:"o-spreadsheet-Icon.INSERT_DROPDOWN",};const insertSheet={name:_t("Insert sheet"),execute:(env)=>{const activeSheetId=env.model.getters.getActiveSheetId();const position=env.model.getters.getSheetIds().indexOf(activeSheetId)+1;const sheetId=env.model.uuidGenerator.smallUuid();env.model.dispatch("CREATE_SHEET",{sheetId,position,name:env.model.getters.getNextSheetName(),});env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:activeSheetId,sheetIdTo:sheetId});},icon:"o-spreadsheet-Icon.INSERT_SHEET",};function createFormulaFunctions(fnNames){return fnNames.sort().map((fnName,i)=>{return{name:fnName,sequence:i*10,execute:(env)=>env.startCellEdition(`=${fnName}(`),};});}
function getRowsNumber(env){const activeRows=env.model.getters.getActiveRows();if(activeRows.size){return activeRows.size;}
else{const zone=env.model.getters.getSelectedZones()[0];return zone.bottom-zone.top+1;}}
function getColumnsNumber(env){const activeCols=env.model.getters.getActiveCols();if(activeCols.size){return activeCols.size;}
else{const zone=env.model.getters.getSelectedZones()[0];return zone.right-zone.left+1;}}
const PREVIOUS_VALUE="(previous)";const NEXT_VALUE="(next)";function getDomainOfParentRow(pivot,domain){const{colDomain,rowDomain}=domainToColRowDomain(pivot,domain);return[...colDomain,...rowDomain.slice(0,rowDomain.length-1)];}
function getDomainOfParentCol(pivot,domain){const{colDomain,rowDomain}=domainToColRowDomain(pivot,domain);return[...colDomain.slice(0,colDomain.length-1),...rowDomain];}
function domainToColRowDomain(pivot,domain){const rowFields=pivot.definition.rows.map((c)=>c.nameWithGranularity);const rowDomain=domain.filter((node)=>rowFields.includes(node.field));const columnFields=pivot.definition.columns.map((c)=>c.nameWithGranularity);const colDomain=domain.filter((node)=>columnFields.includes(node.field));return{colDomain,rowDomain};}
function getDimensionDomain(pivot,dimension,domain){return dimension==="column"?domainToColRowDomain(pivot,domain).colDomain:domainToColRowDomain(pivot,domain).rowDomain;}
function getFieldValueInDomain(fieldNameWithGranularity,domain){const node=domain.find((n)=>n.field===fieldNameWithGranularity);return node?.value;}
function isDomainIsInPivot(pivot,domain){for(const node of domain){if(pivot.definition.rows.find((row)=>row.nameWithGranularity===node.field)===undefined&&pivot.definition.columns.find((col)=>col.nameWithGranularity===node.field)===undefined){return false;}}
const{rowDomain,colDomain}=domainToColRowDomain(pivot,domain);return(checkIfDomainInInTree(rowDomain,pivot.getExpandedTableStructure().getRowTree())&&checkIfDomainInInTree(colDomain,pivot.getExpandedTableStructure().getColTree()));}
function checkIfDomainInInTree(domain,tree){return walkDomainTree(domain,tree)!==undefined;}
function walkDomainTree(domain,tree,stopAtField){let currentTreeNode=tree;for(const node of domain){const child=currentTreeNode.find((n)=>n.value===node.value);if(!child){return undefined;}
if(child.field===stopAtField){return currentTreeNode;}
currentTreeNode=child.children;}
return currentTreeNode;}
function getFieldParentDomain(pivot,parentFieldName,domain){let{rowDomain,colDomain}=domainToColRowDomain(pivot,domain);const dimension=getFieldDimensionType(pivot,parentFieldName);if(dimension==="row"){const index=rowDomain.findIndex((node)=>node.field===parentFieldName);if(index===-1){return domain;}
rowDomain=rowDomain.slice(0,index+1);}
else{const index=colDomain.findIndex((node)=>node.field===parentFieldName);if(index===-1){return domain;}
colDomain=colDomain.slice(0,index+1);}
return[...rowDomain,...colDomain];}
function replaceFieldValueInDomain(domain,fieldNameWithGranularity,value){domain=deepCopy(domain);const node=domain.find((n)=>n.field===fieldNameWithGranularity);if(!node){return domain;}
node.value=value;return domain;}
function isFieldInDomain(nameWithGranularity,domain){return domain.some((node)=>node.field===nameWithGranularity);}
function getFieldDimensionType(pivot,nameWithGranularity){const rowFields=pivot.definition.rows.map((c)=>c.nameWithGranularity);if(rowFields.includes(nameWithGranularity)){return"row";}
const columnFields=pivot.definition.columns.map((c)=>c.nameWithGranularity);if(columnFields.includes(nameWithGranularity)){return"column";}
throw new Error(`Field ${nameWithGranularity} not found in pivot`);}
function getPreviousOrNextValueDomain(pivot,domain,fieldNameWithGranularity,direction){const dimension=getFieldDimensionType(pivot,fieldNameWithGranularity);const tree=dimension==="row"?pivot.getExpandedTableStructure().getRowTree():pivot.getExpandedTableStructure().getColTree();const dimDomain=getDimensionDomain(pivot,dimension,domain);const currentTreeNode=walkDomainTree(dimDomain,tree,fieldNameWithGranularity);const values=currentTreeNode?.map((n)=>n.value)??[];const value=getFieldValueInDomain(fieldNameWithGranularity,domain);if(value===undefined){return undefined;}
const valueIndex=values.indexOf(value);if(value===undefined||valueIndex===-1){return undefined;}
const offset=direction===PREVIOUS_VALUE?-1:1;const newIndex=clip(valueIndex+offset,0,values.length-1);return replaceFieldValueInDomain(domain,fieldNameWithGranularity,values[newIndex]);}
function domainToString(domain){return domain?domain.map(domainNodeToString).join(", "):"";}
function domainNodeToString(domainNode){return domainNode?`${domainNode.field}=${domainNode.value}`:"";}
function getRankingDomainKey(domain,fieldNameWithGranularity){const index=domain.findIndex((node)=>node.field===fieldNameWithGranularity);if(index===-1){return"";}
const parent=domain.slice(0,index);const lastNode=domain.at(-1);return domainToString(lastNode.field===fieldNameWithGranularity?parent:[...parent,lastNode]);}
function getRunningTotalDomainKey(domain,fieldNameWithGranularity){const index=domain.findIndex((node)=>node.field===fieldNameWithGranularity);if(index===-1){return"";}
return domainToString([...domain.slice(0,index),...domain.slice(index+1)]);}
function sortPivotTree(tree,baseDomain,sortFn){const sortedTree=[...tree];const domain=[...baseDomain];sortedTree.sort((node1,node2)=>sortFn([...domain,node1],[...domain,node2]));for(const node of tree){const children=sortPivotTree(node.children,[...domain,node],sortFn);node.children=children;}
return sortedTree;}
function isParentDomain(domain,parentDomain){return(domain.length>parentDomain.length&&parentDomain.every((node,i)=>deepEquals(node,domain[i])));}
const pivotProperties={name:_t("See pivot properties"),execute(env){const position=env.model.getters.getActivePosition();const pivotId=env.model.getters.getPivotIdFromPosition(position);env.openSidePanel("PivotSidePanel",{pivotId});},isVisible:(env)=>{const position=env.model.getters.getActivePosition();const pivotId=env.model.getters.getPivotIdFromPosition(position);return(!env.isSmall&&pivotId&&env.model.getters.isExistingPivot(pivotId))||false;},isReadonlyAllowed:true,icon:"o-spreadsheet-Icon.PIVOT",};const pivotSortingAsc={name:_t("Ascending"),execute:(env)=>sortPivot(env,"asc"),isActive:(env)=>isPivotSortMenuItemActive(env,"asc"),};const pivotSortingDesc={name:_t("Descending"),execute:(env)=>sortPivot(env,"desc"),isActive:(env)=>isPivotSortMenuItemActive(env,"desc"),};const noPivotSorting={name:_t("No sorting"),execute:(env)=>sortPivot(env,"none"),isActive:(env)=>isPivotSortMenuItemActive(env,"none"),};const FIX_FORMULAS={name:_t("Convert to individual formulas"),execute(env){const position=env.model.getters.getActivePosition();const cell=env.model.getters.getCorrespondingFormulaCell(position);const pivotId=env.model.getters.getPivotIdFromPosition(position);if(!cell||!pivotId){return;}
const{sheetId,col,row}=env.model.getters.getCellPosition(cell.id);const pivot=env.model.getters.getPivot(pivotId);pivot.init();if(!pivot.isValid()){return;}
env.model.dispatch("SPLIT_PIVOT_FORMULA",{sheetId,col,row,pivotId,});},isVisible:(env)=>{const position=env.model.getters.getActivePosition();const pivotId=env.model.getters.getPivotIdFromPosition(position);if(!pivotId){return false;}
const pivot=env.model.getters.getPivot(pivotId);const cell=env.model.getters.getEvaluatedCell(position);return(pivot.isValid()&&env.model.getters.isSpillPivotFormula(position)&&cell.type!==CellValueType.error);},icon:"o-spreadsheet-Icon.PIVOT",};function canSortPivot(env){const position=env.model.getters.getActivePosition();const pivotId=env.model.getters.getPivotIdFromPosition(position);if(!pivotId||!env.model.getters.isExistingPivot(pivotId)||!env.model.getters.isSpillPivotFormula(position)){return false;}
const pivot=env.model.getters.getPivot(pivotId);if(!pivot.isValid()){return false;}
const pivotCell=env.model.getters.getPivotCellFromPosition(position);return pivotCell.type==="VALUE"||pivotCell.type==="MEASURE_HEADER";}
function sortPivot(env,order){const position=env.model.getters.getActivePosition();const pivotId=env.model.getters.getPivotIdFromPosition(position);const pivotCell=env.model.getters.getPivotCellFromPosition(position);if(pivotCell.type==="EMPTY"||pivotCell.type==="HEADER"||!pivotId){return;}
if(order==="none"){env.model.dispatch("UPDATE_PIVOT",{pivotId:pivotId,pivot:{...env.model.getters.getPivotCoreDefinition(pivotId),sortedColumn:undefined,},});return;}
const pivot=env.model.getters.getPivot(pivotId);const colDomain=domainToColRowDomain(pivot,pivotCell.domain).colDomain;env.model.dispatch("UPDATE_PIVOT",{pivotId:pivotId,pivot:{...env.model.getters.getPivotCoreDefinition(pivotId),sortedColumn:{domain:colDomain,order,measure:pivotCell.measure},},});}
function isPivotSortMenuItemActive(env,order){const position=env.model.getters.getActivePosition();const pivotId=env.model.getters.getPivotIdFromPosition(position);const pivotCell=env.model.getters.getPivotCellFromPosition(position);if(pivotCell.type==="EMPTY"||pivotCell.type==="HEADER"||!pivotId){return false;}
const pivot=env.model.getters.getPivot(pivotId);const colDomain=domainToColRowDomain(pivot,pivotCell.domain).colDomain;const sortedColumn=pivot.definition.sortedColumn;if(order==="none"){return!sortedColumn;}
if(!sortedColumn||sortedColumn.order!==order){return false;}
return sortedColumn.measure===pivotCell.measure&&deepEquals(sortedColumn.domain,colDomain);}
const cellMenuRegistry=new MenuItemRegistry();cellMenuRegistry.add("cut",{...cut,sequence:10,}).add("copy",{...copy,sequence:20,}).add("paste",{...paste,sequence:30,}).add("paste_special",{...pasteSpecial,sequence:40,separator:true,}).addChild("paste_value_only",["paste_special"],{...pasteSpecialValue,sequence:10,}).addChild("paste_format_only",["paste_special"],{...pasteSpecialFormat,sequence:20,}).add("add_row_before",{...cellInsertRowsBefore,sequence:70,}).add("add_column_before",{...cellInsertColsBefore,sequence:90,}).add("insert_cell",{...insertCell,sequence:100,separator:true,}).addChild("insert_cell_down",["insert_cell"],{...insertCellShiftDown,name:_t("Shift down"),sequence:10,}).addChild("insert_cell_right",["insert_cell"],{...insertCellShiftRight,name:_t("Shift right"),sequence:20,}).add("delete_row",{...deleteRow,sequence:110,icon:"o-spreadsheet-Icon.TRASH",}).add("delete_column",{...deleteCol,sequence:120,icon:"o-spreadsheet-Icon.TRASH",}).add("delete_cell",{...deleteCells,sequence:130,separator:true,icon:"o-spreadsheet-Icon.TRASH",}).addChild("delete_cell_up",["delete_cell"],{...deleteCellShiftUp,name:_t("Shift up"),sequence:10,icon:"o-spreadsheet-Icon.DELETE_CELL_SHIFT_UP",}).addChild("delete_cell_left",["delete_cell"],{...deleteCellShiftLeft,name:_t("Shift left"),sequence:20,icon:"o-spreadsheet-Icon.DELETE_CELL_SHIFT_LEFT",}).add("edit_table",{...editTable,isVisible:SELECTION_CONTAINS_SINGLE_TABLE,isEnabled:(env)=>!env.isSmall,sequence:140,}).add("delete_table",{...deleteTable,isVisible:SELECTION_CONTAINS_SINGLE_TABLE,sequence:145,separator:true,}).add("insert_link",{...insertLink,name:INSERT_LINK_NAME,sequence:150,separator:true,}).add("pivot_sorting",{name:_t("Sort pivot"),sequence:155,icon:"o-spreadsheet-Icon.SORT_RANGE",isVisible:canSortPivot,}).add("pivot_fix_formulas",{...FIX_FORMULAS,sequence:160,}).add("pivot_properties",{...pivotProperties,sequence:170,separator:true,}).addChild("pivot_sorting_asc",["pivot_sorting"],{...pivotSortingAsc,sequence:10,}).addChild("pivot_sorting_desc",["pivot_sorting"],{...pivotSortingDesc,sequence:20,}).addChild("pivot_sorting_none",["pivot_sorting"],{...noPivotSorting,sequence:30,});const sortRange={name:_t("Sort range"),isVisible:IS_ONLY_ONE_RANGE,icon:"o-spreadsheet-Icon.SORT_RANGE",};const sortAscending={name:_t("Ascending (A ⟶ Z)"),execute:(env)=>{const{anchor,zones}=env.model.getters.getSelection();const sheetId=env.model.getters.getActiveSheetId();interactiveSortSelection(env,sheetId,anchor.cell,zones[0],"asc");},icon:"o-spreadsheet-Icon.SORT_ASCENDING",};const dataCleanup={name:_t("Data cleanup"),icon:"o-spreadsheet-Icon.DATA_CLEANUP",};const removeDuplicates={name:_t("Remove duplicates"),execute:(env)=>{if(getZoneArea(env.model.getters.getSelectedZone())===1){env.model.selection.selectTableAroundSelection();}
env.openSidePanel("RemoveDuplicates",{});},isEnabled:(env)=>!env.isSmall,};const trimWhitespace={name:_t("Trim whitespace"),execute:(env)=>{env.model.dispatch("TRIM_WHITESPACE");},};const sortDescending={name:_t("Descending (Z ⟶ A)"),execute:(env)=>{const{anchor,zones}=env.model.getters.getSelection();const sheetId=env.model.getters.getActiveSheetId();interactiveSortSelection(env,sheetId,anchor.cell,zones[0],"desc");},icon:"o-spreadsheet-Icon.SORT_DESCENDING",};const createRemoveFilter={...CREATE_OR_REMOVE_FILTER_ACTION,};const createRemoveFilterTool={...CREATE_OR_REMOVE_FILTER_ACTION,isActive:(env)=>SELECTED_TABLE_HAS_FILTERS(env),};const splitToColumns={name:_t("Split text to columns"),sequence:1,execute:(env)=>env.openSidePanel("SplitToColumns",{}),isEnabled:(env)=>!env.isSmall&&env.model.getters.isSingleColSelected(),icon:"o-spreadsheet-Icon.SPLIT_TEXT",};const reinsertDynamicPivotMenu={id:"reinsert_dynamic_pivot",name:_t("Re-insert dynamic pivot"),sequence:1020,icon:"o-spreadsheet-Icon.INSERT_PIVOT",children:[REINSERT_DYNAMIC_PIVOT_CHILDREN],isVisible:(env)=>env.model.getters.getPivotIds().some((id)=>env.model.getters.getPivot(id).isValid()),};const reinsertStaticPivotMenu={id:"reinsert_static_pivot",name:_t("Re-insert static pivot"),sequence:1020,icon:"o-spreadsheet-Icon.INSERT_PIVOT",children:[REINSERT_STATIC_PIVOT_CHILDREN],isVisible:(env)=>env.model.getters.getPivotIds().some((id)=>env.model.getters.getPivot(id).isValid()),};function createFormatActionSpec({name,format,descriptionValue,}){const formatCallback=typeof format==="function"?format:()=>format;return{name,description:(env)=>formatValue(descriptionValue,{format:formatCallback(env),locale:env.model.getters.getLocale(),}),execute:(env)=>setFormatter(env,formatCallback(env)),isActive:(env)=>isFormatSelected(env,formatCallback(env)),format,};}
const formatNumberAutomatic={name:_t("Automatic"),execute:(env)=>setFormatter(env,""),isActive:(env)=>isAutomaticFormatSelected(env),};const formatNumberPlainText={name:_t("Plain text"),execute:(env)=>setFormatter(env,"@"),isActive:(env)=>isFormatSelected(env,"@"),};const formatNumberNumber=createFormatActionSpec({name:_t("Number"),descriptionValue:1000.12,format:"#,##0.00",});const formatPercent={name:_t("Format as percent"),execute:FORMAT_PERCENT_ACTION,icon:"o-spreadsheet-Icon.PERCENT",};const formatNumberPercent=createFormatActionSpec({name:_t("Percent"),descriptionValue:0.1012,format:"0.00%",});const formatNumberCurrency=createFormatActionSpec({name:_t("Currency"),descriptionValue:1000.12,format:(env)=>createCurrencyFormat(env.model.config.defaultCurrency||DEFAULT_CURRENCY),});const formatNumberCurrencyRounded={...createFormatActionSpec({name:_t("Currency rounded"),descriptionValue:1000,format:(env)=>roundFormat(createCurrencyFormat(env.model.config.defaultCurrency||DEFAULT_CURRENCY)),}),isVisible:(env)=>{const currencyFormat=createCurrencyFormat(env.model.config.defaultCurrency||DEFAULT_CURRENCY);const roundedFormat=roundFormat(currencyFormat);return currencyFormat!==roundedFormat;},};const formatNumberAccounting=createFormatActionSpec({name:_t("Accounting"),descriptionValue:-1000.12,format:(env)=>createAccountingFormat(env.model.config.defaultCurrency||DEFAULT_CURRENCY),});const EXAMPLE_DATE=parseLiteral("2023/09/26 10:43:00 PM",DEFAULT_LOCALE);const formatCustomCurrency={name:_t("Custom currency"),isVisible:(env)=>env.loadCurrencies!==undefined&&!env.isSmall,execute:(env)=>env.openSidePanel("CustomCurrency",{}),};const formatNumberDate=createFormatActionSpec({name:_t("Date"),descriptionValue:EXAMPLE_DATE,format:(env)=>env.model.getters.getLocale().dateFormat,});const formatNumberTime=createFormatActionSpec({name:_t("Time"),descriptionValue:EXAMPLE_DATE,format:(env)=>env.model.getters.getLocale().timeFormat,});const formatNumberDateTime=createFormatActionSpec({name:_t("Date time"),descriptionValue:EXAMPLE_DATE,format:(env)=>{const locale=env.model.getters.getLocale();return getDateTimeFormat(locale);},});const formatNumberDuration=createFormatActionSpec({name:_t("Duration"),descriptionValue:"27:51:38",format:"hhhh:mm:ss",});const formatNumberQuarter=createFormatActionSpec({name:_t("Quarter"),descriptionValue:EXAMPLE_DATE,format:"qq yyyy",});const formatNumberFullQuarter=createFormatActionSpec({name:_t("Full quarter"),descriptionValue:EXAMPLE_DATE,format:"qqqq yyyy",});const moreFormats={name:_t("More date formats"),execute:(env)=>env.openSidePanel("MoreFormats",{}),};const formatNumberFullDateTime=createFormatActionSpec({name:_t("Full date time"),format:"dddd d mmmm yyyy hh:mm:ss a",descriptionValue:EXAMPLE_DATE,});const formatNumberISODate=createFormatActionSpec({name:_t("ISO Date"),format:"yyyy-mm-dd",descriptionValue:EXAMPLE_DATE,});const formatNumberISODateTime=createFormatActionSpec({name:_t("ISO Date time"),format:"yyyy-mm-dd hh:mm:ss",descriptionValue:EXAMPLE_DATE,});const formatNumberFullWeekDayAndMonth=createFormatActionSpec({name:_t("Full week day and month"),format:"dddd d mmmm yyyy",descriptionValue:EXAMPLE_DATE,});const formatNumberDayAndFullMonth=createFormatActionSpec({name:_t("Day and full month"),format:"d mmmm yyyy",descriptionValue:EXAMPLE_DATE,});const formatNumberShortWeekDay=createFormatActionSpec({name:_t("Short week day"),format:"ddd d mmm yyyy",descriptionValue:EXAMPLE_DATE,});const formatNumberDayAndShortMonth=createFormatActionSpec({name:_t("Day and short month"),format:"d mmm yyyy",descriptionValue:EXAMPLE_DATE,});const formatNumberFullMonth=createFormatActionSpec({name:_t("Full month"),format:"mmmm yyyy",descriptionValue:EXAMPLE_DATE,});const formatNumberShortMonth=createFormatActionSpec({name:_t("Short month"),format:"mmm yyyy",descriptionValue:EXAMPLE_DATE,});const increaseDecimalPlaces={name:_t("Increase decimal places"),icon:"o-spreadsheet-Icon.INCREASE_DECIMAL",execute:(env)=>env.model.dispatch("SET_DECIMAL",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),step:1,}),};const decreaseDecimalPlaces={name:_t("Decrease decimal places"),icon:"o-spreadsheet-Icon.DECRASE_DECIMAL",execute:(env)=>env.model.dispatch("SET_DECIMAL",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),step:-1,}),};const formatBold={name:_t("Bold"),description:"Ctrl+B",execute:(env)=>setStyle(env,{bold:!env.model.getters.getCurrentStyle().bold}),icon:"o-spreadsheet-Icon.BOLD",isActive:(env)=>!!env.model.getters.getCurrentStyle().bold,};const formatItalic={name:_t("Italic"),description:"Ctrl+I",execute:(env)=>setStyle(env,{italic:!env.model.getters.getCurrentStyle().italic}),icon:"o-spreadsheet-Icon.ITALIC",isActive:(env)=>!!env.model.getters.getCurrentStyle().italic,};const formatUnderline={name:_t("Underline"),description:"Ctrl+U",execute:(env)=>setStyle(env,{underline:!env.model.getters.getCurrentStyle().underline}),icon:"o-spreadsheet-Icon.UNDERLINE",isActive:(env)=>!!env.model.getters.getCurrentStyle().underline,};const formatStrikethrough={name:_t("Strikethrough"),execute:(env)=>setStyle(env,{strikethrough:!env.model.getters.getCurrentStyle().strikethrough}),icon:"o-spreadsheet-Icon.STRIKE",isActive:(env)=>!!env.model.getters.getCurrentStyle().strikethrough,};const formatFontSize={name:_t("Font size"),children:fontSizeMenuBuilder(),icon:"o-spreadsheet-Icon.FONT_SIZE",};const formatAlignment={name:_t("Alignment"),icon:"o-spreadsheet-Icon.ALIGN_LEFT",};const formatAlignmentHorizontal={name:_t("Horizontal align"),icon:(env)=>getHorizontalAlignmentIcon(env),};const formatAlignmentLeft={name:_t("Left"),description:"Ctrl+Shift+L",execute:(env)=>setStyle(env,{align:"left"}),isActive:(env)=>getHorizontalAlign(env)==="left",icon:"o-spreadsheet-Icon.ALIGN_LEFT",};const formatAlignmentCenter={name:_t("Center"),description:"Ctrl+Shift+E",execute:(env)=>setStyle(env,{align:"center"}),isActive:(env)=>getHorizontalAlign(env)==="center",icon:"o-spreadsheet-Icon.ALIGN_CENTER",};const formatAlignmentRight={name:_t("Right"),description:"Ctrl+Shift+R",execute:(env)=>setStyle(env,{align:"right"}),isActive:(env)=>getHorizontalAlign(env)==="right",icon:"o-spreadsheet-Icon.ALIGN_RIGHT",};const formatAlignmentVertical={name:_t("Vertical align"),icon:(env)=>getVerticalAlignmentIcon(env),};const formatAlignmentTop={name:_t("Top"),execute:(env)=>setStyle(env,{verticalAlign:"top"}),isActive:(env)=>getVerticalAlign(env)==="top",icon:"o-spreadsheet-Icon.ALIGN_TOP",};const formatAlignmentMiddle={name:_t("Middle"),execute:(env)=>setStyle(env,{verticalAlign:"middle"}),isActive:(env)=>getVerticalAlign(env)==="middle",icon:"o-spreadsheet-Icon.ALIGN_MIDDLE",};const formatAlignmentBottom={name:_t("Bottom"),execute:(env)=>setStyle(env,{verticalAlign:"bottom"}),isActive:(env)=>getVerticalAlign(env)==="bottom",icon:"o-spreadsheet-Icon.ALIGN_BOTTOM",};const formatWrappingIcon={name:_t("Wrapping"),icon:"o-spreadsheet-Icon.WRAPPING_OVERFLOW",};const formatWrapping={name:_t("Wrapping"),icon:(env)=>getWrapModeIcon(env),};const formatWrappingOverflow={name:_t("Overflow"),execute:(env)=>setStyle(env,{wrapping:"overflow"}),isActive:(env)=>getWrappingMode(env)==="overflow",icon:"o-spreadsheet-Icon.WRAPPING_OVERFLOW",};const formatWrappingWrap={name:_t("Wrap"),execute:(env)=>setStyle(env,{wrapping:"wrap"}),isActive:(env)=>getWrappingMode(env)==="wrap",icon:"o-spreadsheet-Icon.WRAPPING_WRAP",};const formatWrappingClip={name:_t("Clip"),execute:(env)=>setStyle(env,{wrapping:"clip"}),isActive:(env)=>getWrappingMode(env)==="clip",icon:"o-spreadsheet-Icon.WRAPPING_CLIP",};({name:_t("Text Color"),icon:"o-spreadsheet-Icon.TEXT_COLOR",});({name:_t("Fill Color"),icon:"o-spreadsheet-Icon.FILL_COLOR",});const formatCF={name:_t("Conditional formatting"),execute:OPEN_CF_SIDEPANEL_ACTION,isEnabled:(env)=>!env.isSmall,icon:"o-spreadsheet-Icon.CONDITIONAL_FORMAT",};const clearFormat={name:_t("Clear formatting"),description:"Ctrl+<",execute:(env)=>env.model.dispatch("CLEAR_FORMATTING",{sheetId:env.model.getters.getActiveSheetId(),target:env.model.getters.getSelectedZones(),}),icon:"o-spreadsheet-Icon.CLEAR_FORMAT",};function fontSizeMenuBuilder(){return FONT_SIZES.map((fs)=>{return{name:fs.toString(),sequence:fs,id:`font_size_${fs}`,execute:(env)=>setStyle(env,{fontSize:fs}),isActive:(env)=>isFontSizeSelected(env,fs),};});}
function isAutomaticFormatSelected(env){const activePosition=env.model.getters.getActivePosition();const pivotCell=env.model.getters.getPivotCellFromPosition(activePosition);if(pivotCell.type==="VALUE"){return!env.model.getters.getEvaluatedCell(activePosition).format;}
return!env.model.getters.getCell(activePosition)?.format;}
function isFormatSelected(env,format){const activePosition=env.model.getters.getActivePosition();const pivotCell=env.model.getters.getPivotCellFromPosition(activePosition);if(pivotCell.type==="VALUE"){return env.model.getters.getEvaluatedCell(activePosition).format===format;}
return env.model.getters.getCell(activePosition)?.format===format;}
function isFontSizeSelected(env,fontSize){const currentFontSize=env.model.getters.getCurrentStyle().fontSize||DEFAULT_FONT_SIZE;return currentFontSize===fontSize;}
function getHorizontalAlign(env){const style=env.model.getters.getCurrentStyle();if(style.align){return style.align;}
const cell=env.model.getters.getActiveCell();return cell.defaultAlign;}
function getVerticalAlign(env){const style=env.model.getters.getCurrentStyle();if(style.verticalAlign){return style.verticalAlign;}
return DEFAULT_VERTICAL_ALIGN;}
function getWrappingMode(env){const style=env.model.getters.getCurrentStyle();if(style.wrapping){return style.wrapping;}
return DEFAULT_WRAPPING_MODE;}
function getHorizontalAlignmentIcon(env){const horizontalAlign=getHorizontalAlign(env);switch(horizontalAlign){case"right":return"o-spreadsheet-Icon.ALIGN_RIGHT";case"center":return"o-spreadsheet-Icon.ALIGN_CENTER";default:return"o-spreadsheet-Icon.ALIGN_LEFT";}}
function getVerticalAlignmentIcon(env){const verticalAlign=getVerticalAlign(env);switch(verticalAlign){case"top":return"o-spreadsheet-Icon.ALIGN_TOP";case"middle":return"o-spreadsheet-Icon.ALIGN_MIDDLE";default:return"o-spreadsheet-Icon.ALIGN_BOTTOM";}}
function getWrapModeIcon(env){const wrapMode=getWrappingMode(env);switch(wrapMode){case"wrap":return"o-spreadsheet-Icon.WRAPPING_WRAP";case"clip":return"o-spreadsheet-Icon.WRAPPING_CLIP";default:return"o-spreadsheet-Icon.WRAPPING_OVERFLOW";}}
const colMenuRegistry=new MenuItemRegistry();colMenuRegistry.add("cut",{...cut,sequence:10,}).add("copy",{...copy,sequence:20,}).add("paste",{...paste,sequence:30,}).add("paste_special",{...pasteSpecial,sequence:40,separator:true,}).addChild("paste_value_only",["paste_special"],{...pasteSpecialValue,sequence:10,}).addChild("paste_format_only",["paste_special"],{...pasteSpecialFormat,sequence:20,}).add("sort_columns",{...sortRange,name:(env)=>env.model.getters.getActiveCols().size>1?_t("Sort columns"):_t("Sort column"),sequence:50,separator:true,}).addChild("sort_ascending",["sort_columns"],{...sortAscending,sequence:10,}).addChild("sort_descending",["sort_columns"],{...sortDescending,sequence:20,}).add("add_column_before",{...colInsertColsBefore,sequence:70,}).add("add_column_after",{...colInsertColsAfter,sequence:80,}).add("delete_column",{...deleteCols,sequence:90,icon:"o-spreadsheet-Icon.TRASH",}).add("clear_column",{...clearCols,sequence:100,icon:"o-spreadsheet-Icon.CLEAR",}).add("hide_columns",{...hideCols,sequence:105,separator:true,}).add("unhide_columns",{...unhideCols,sequence:106,separator:true,}).add("conditional_formatting",{...formatCF,sequence:110,separator:true,}).add("edit_table",{...editTable,isVisible:SELECTION_CONTAINS_SINGLE_TABLE,sequence:120,}).add("delete_table",{...deleteTable,isVisible:SELECTION_CONTAINS_SINGLE_TABLE,sequence:125,separator:true,}).add("group_columns",{sequence:150,...groupColumns,}).add("ungroup_columns",{sequence:155,...ungroupColumns,isVisible:(env)=>canUngroupHeaders(env,"COL"),});const ToggleGroupInteractiveContent={CannotHideAllRows:_t("Cannot hide all the rows of a sheet."),CannotHideAllColumns:_t("Cannot hide all the columns of a sheet."),};function interactiveToggleGroup(env,sheetId,dimension,start,end){const group=env.model.getters.getHeaderGroup(sheetId,dimension,start,end);if(!group){return;}
const command=group.isFolded?"UNFOLD_HEADER_GROUP":"FOLD_HEADER_GROUP";const result=env.model.dispatch(command,{sheetId,dimension,start:group.start,end:group.end,});if(!result.isSuccessful){if(result.isCancelledBecause("NotEnoughElements")){const errorMessage=dimension==="ROW"?ToggleGroupInteractiveContent.CannotHideAllRows:ToggleGroupInteractiveContent.CannotHideAllColumns;env.raiseError(errorMessage);}}}
function createHeaderGroupContainerContextMenu(sheetId,dimension){return createActions([{id:"unfold_all",name:dimension==="ROW"?_t("Expand all row groups"):_t("Expand all column groups"),execute:(env)=>{env.model.dispatch("UNFOLD_ALL_HEADER_GROUPS",{sheetId,dimension});},},{id:"fold_all",name:dimension==="ROW"?_t("Collapse all row groups"):_t("Collapse all column groups"),execute:(env)=>{env.model.dispatch("FOLD_ALL_HEADER_GROUPS",{sheetId,dimension});},},]);}
function getHeaderGroupContextMenu(sheetId,dimension,start,end){const groupActions=createActions([{id:"toggle_group",name:(env)=>{const sheetId=env.model.getters.getActiveSheetId();const groupIsFolded=env.model.getters.isGroupFolded(sheetId,dimension,start,end);if(groupIsFolded){return dimension==="ROW"?_t("Expand row group"):_t("Expand column group");}
else{return dimension==="ROW"?_t("Collapse row group"):_t("Collapse column group");}},execute:(env)=>{const sheetId=env.model.getters.getActiveSheetId();interactiveToggleGroup(env,sheetId,dimension,start,end);},},{id:"remove_group",name:dimension==="ROW"?_t("Remove row group"):_t("Remove column group"),execute:(env)=>{const sheetId=env.model.getters.getActiveSheetId();env.model.dispatch("UNGROUP_HEADERS",{sheetId,dimension,start,end});},separator:true,},]);return[...groupActions,...createHeaderGroupContainerContextMenu(sheetId,dimension)];}
const groupHeadersMenuRegistry=new MenuItemRegistry();groupHeadersMenuRegistry.add("group_columns",{sequence:10,...groupColumns,isVisible:()=>true,isEnabled:groupColumns.isVisible,}).add("group_rows",{sequence:20,...groupRows,isVisible:()=>true,isEnabled:groupRows.isVisible,});const unGroupHeadersMenuRegistry=new MenuItemRegistry();unGroupHeadersMenuRegistry.add("ungroup_columns",{sequence:10,...ungroupColumns,isEnabled:(env)=>canUngroupHeaders(env,"COL"),}).add("ungroup_rows",{sequence:20,...ungroupRows,isEnabled:(env)=>canUngroupHeaders(env,"ROW"),});const rowMenuRegistry=new MenuItemRegistry();rowMenuRegistry.add("cut",{...cut,sequence:10,}).add("copy",{...copy,sequence:20,}).add("paste",{...paste,sequence:30,}).add("paste_special",{...pasteSpecial,sequence:40,separator:true,}).addChild("paste_value_only",["paste_special"],{...pasteSpecialValue,sequence:10,}).addChild("paste_format_only",["paste_special"],{...pasteSpecialFormat,sequence:20,}).add("add_row_before",{...rowInsertRowBefore,sequence:50,}).add("add_row_after",{...rowInsertRowsAfter,sequence:60,}).add("delete_row",{...deleteRows,sequence:70,icon:"o-spreadsheet-Icon.TRASH",}).add("clear_row",{...clearRows,sequence:80,icon:"o-spreadsheet-Icon.CLEAR",}).add("hide_rows",{...hideRows,sequence:85,separator:true,}).add("unhide_rows",{...unhideRows,sequence:86,separator:true,}).add("conditional_formatting",{...formatCF,sequence:90,separator:true,}).add("group_rows",{sequence:100,...groupRows,}).add("ungroup_rows",{sequence:110,...ungroupRows,isVisible:(env)=>canUngroupHeaders(env,"ROW"),});class ArrayFormulaHighlight extends SpreadsheetStore{highlightStore=this.get(HighlightStore);constructor(get){super(get);this.highlightStore.register(this);}
get highlights(){const position=this.model.getters.getActivePosition();const cell=this.getters.getEvaluatedCell(position);const spreader=this.model.getters.getArrayFormulaSpreadingOn(position);const zone=spreader?this.model.getters.getSpreadZone(spreader,{ignoreSpillError:true}):this.model.getters.getSpreadZone(position,{ignoreSpillError:true});if(!zone){return[];}
return[{range:this.model.getters.getRangeFromZone(position.sheetId,zone),dashed:cell.value===CellErrorType.SpilledBlocked,color:"#17A2B8",noFill:true,thinLine:true,},];}}
class ClientFocusStore extends SpreadsheetStore{mutators=["focusClient","unfocusClient","showClientTag","hideClientTag","jumpToClient",];_showClientTag=false;clientFocusTimeout={};constructor(get){super(get);this.onDispose(()=>{for(const clientId in this.clientFocusTimeout){this.unfocusClient(clientId);}});}
get focusedClients(){const focused=new Set();this.model.getters.getConnectedClients().forEach((client)=>{if(this._showClientTag||this.clientFocusTimeout[client.id]!==undefined){focused.add(client.id);}});return focused;}
jumpToClient(clientId){const client=this.model.getters.getClient(clientId);this.focusClient(clientId);if(client.position){this.model.dispatch("ACTIVATE_SHEET",{sheetIdTo:client.position.sheetId,sheetIdFrom:this.getters.getActiveSheetId(),});this.model.dispatch("SCROLL_TO_CELL",{col:client.position.col,row:client.position.row});}}
showClientTag(){this._showClientTag=true;}
hideClientTag(){this._showClientTag=false;}
focusClient(clientId){if(this.clientFocusTimeout[clientId]){clearTimeout(this.clientFocusTimeout[clientId]);}
this.clientFocusTimeout[clientId]=setTimeout(()=>this.unfocusClient(clientId),3000);}
unfocusClient(clientId){if(this.clientFocusTimeout[clientId]){clearTimeout(this.clientFocusTimeout[clientId]);}
this.clientFocusTimeout[clientId]=undefined;}}
function useDragAndDropBeyondTheViewport(env){let timeOutId=null;let currentEv;let previousEvClientPosition;let startingX;let startingY;let scrollDirection="all";const getters=env.model.getters;let cleanUpFns=[];const cleanUp=()=>{clearTimeout(timeOutId);timeOutId=null;cleanUpFns.forEach((fn)=>fn());cleanUpFns=[];};let pointerMoveCallback;let pointerUpCallback;const pointerMoveHandler=(ev)=>{currentEv=ev;if(timeOutId){return;}
const sheetId=getters.getActiveSheetId();const position=gridOverlayPosition();const{x:offsetCorrectionX,y:offsetCorrectionY}=getters.getMainViewportCoordinates();const{top,left,bottom,right}=getters.getActiveMainViewport();let{scrollX,scrollY}=getters.getActiveSheetScrollInfo();const{xSplit,ySplit}=getters.getPaneDivisions(sheetId);let canEdgeScroll=false;let timeoutDelay=MAX_DELAY;const x=currentEv.clientX-position.left;let colIndex=getters.getColIndex(x);if(scrollDirection!=="vertical"){const previousX=previousEvClientPosition.clientX-position.left;const edgeScrollInfoX=getters.getEdgeScrollCol(x,previousX,startingX);if(edgeScrollInfoX.canEdgeScroll){canEdgeScroll=true;timeoutDelay=Math.min(timeoutDelay,edgeScrollInfoX.delay);let newTarget=colIndex;switch(edgeScrollInfoX.direction){case"reset":colIndex=newTarget=xSplit;break;case 1:colIndex=right;newTarget=left+1;break;case-1:colIndex=left-1;while(env.model.getters.isColHidden(sheetId,colIndex)){colIndex--;}
newTarget=colIndex;break;}
scrollX=getters.getColDimensions(sheetId,newTarget).start-offsetCorrectionX;}}
const y=currentEv.clientY-position.top;let rowIndex=getters.getRowIndex(y);if(scrollDirection!=="horizontal"){const previousY=previousEvClientPosition.clientY-position.top;const edgeScrollInfoY=getters.getEdgeScrollRow(y,previousY,startingY);if(edgeScrollInfoY.canEdgeScroll){canEdgeScroll=true;timeoutDelay=Math.min(timeoutDelay,edgeScrollInfoY.delay);let newTarget=rowIndex;switch(edgeScrollInfoY.direction){case"reset":rowIndex=newTarget=ySplit;break;case 1:rowIndex=bottom;newTarget=top+1;break;case-1:rowIndex=top-1;while(env.model.getters.isRowHidden(sheetId,rowIndex)){rowIndex--;}
newTarget=rowIndex;break;}
scrollY=env.model.getters.getRowDimensions(sheetId,newTarget).start-offsetCorrectionY;}}
if(!canEdgeScroll){colIndex=adjustIndexWithinBounds(colIndex,x,getters.getNumberCols(sheetId)-1);rowIndex=adjustIndexWithinBounds(rowIndex,y,getters.getNumberRows(sheetId)-1);}
pointerMoveCallback?.(colIndex,rowIndex,currentEv);if(canEdgeScroll){env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:scrollX,offsetY:scrollY});timeOutId=setTimeout(()=>{timeOutId=null;pointerMoveHandler(currentEv);},Math.round(timeoutDelay));}
previousEvClientPosition={clientX:currentEv.clientX,clientY:currentEv.clientY};};const pointerUpHandler=()=>{pointerUpCallback?.();cleanUp();};const startFn=(initialPointerCoordinates,onPointerMove,onPointerUp,startScrollDirection="all")=>{cleanUp();const position=gridOverlayPosition();scrollDirection=startScrollDirection;startingX=initialPointerCoordinates.clientX-position.left;startingY=initialPointerCoordinates.clientY-position.top;previousEvClientPosition={clientX:initialPointerCoordinates.clientX,clientY:initialPointerCoordinates.clientY,};pointerMoveCallback=onPointerMove;pointerUpCallback=onPointerUp;cleanUpFns.push(startDnd(pointerMoveHandler,pointerUpHandler));};onWillUnmount(()=>{cleanUp();});useEffect(()=>{cleanUp();},()=>[getters.getActiveSheetId()]);return{start:startFn};}
function adjustIndexWithinBounds(index,position,max){if(index===-1){return position<0?0:max;}
return index;}
css`
  .o-autofill {
    position: absolute;
    height: ${AUTOFILL_EDGE_LENGTH}px;
    width: ${AUTOFILL_EDGE_LENGTH}px;
    border: 1px solid white;
    background-color: #1a73e8;
  }

  .o-autofill-handler {
    position: absolute;
    height: ${AUTOFILL_EDGE_LENGTH}px;
    width: ${AUTOFILL_EDGE_LENGTH}px;
    &:hover {
      cursor: crosshair;
    }
  }

  .o-autofill-nextvalue {
    position: absolute;
    background-color: #ffffff;
    border: 1px solid black;
    padding: 5px;
    font-size: 12px;
    pointer-events: none;
    white-space: nowrap;
  }
`;class Autofill extends Component{static template="o-spreadsheet-Autofill";static props={position:Object,isVisible:Boolean,};state=useState({position:{left:0,top:0},handler:false,});dragNDropGrid=useDragAndDropBeyondTheViewport(this.env);get style(){const{left,top}=this.props.position;return cssPropertiesToCss({top:`${top}px`,left:`${left}px`,visibility:this.props.isVisible?"visible":"hidden",});}
get handlerStyle(){const{left,top}=this.state.handler?this.state.position:this.props.position;return cssPropertiesToCss({top:`${top}px`,left:`${left}px`,});}
get styleNextValue(){const{left,top}=this.state.position;return cssPropertiesToCss({top:`${top + 5}px`,left:`${left + 15}px`,});}
getTooltip(){const tooltip=this.env.model.getters.getAutofillTooltip();if(tooltip&&!tooltip.component){tooltip.component=TooltipComponent;}
return tooltip;}
onMouseDown(ev){this.state.handler=true;let lastCol;let lastRow;const start={left:ev.clientX-this.props.position.left,top:ev.clientY-this.props.position.top,};const onMouseUp=()=>{this.state.handler=false;this.state.position={...this.props.position};this.env.model.dispatch("AUTOFILL");};const onMouseMove=(col,row,ev)=>{this.state.position={left:ev.clientX-start.left,top:ev.clientY-start.top,};if(lastCol!==col||lastRow!==row){const activeSheetId=this.env.model.getters.getActiveSheetId();const numberOfCols=this.env.model.getters.getNumberCols(activeSheetId);const numberOfRows=this.env.model.getters.getNumberRows(activeSheetId);lastCol=col===-1?lastCol:clip(col,0,numberOfCols);lastRow=row===-1?lastRow:clip(row,0,numberOfRows);if(lastCol!==undefined&&lastRow!==undefined){this.env.model.dispatch("AUTOFILL_SELECT",{col:lastCol,row:lastRow});}}};this.dragNDropGrid.start(ev,onMouseMove,onMouseUp);}
onDblClick(){this.env.model.dispatch("AUTOFILL_AUTO");}}
class TooltipComponent extends Component{static props={content:String,};static template=xml`
    <div t-esc="props.content"/>
  `;}
css`
  .o-client-tag {
    position: absolute;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    font-size: ${DEFAULT_FONT_SIZE};
    color: white;
    pointer-events: none;
  }
`;class ClientTag extends Component{static template="o-spreadsheet-ClientTag";static props={active:Boolean,name:String,color:String,col:Number,row:Number,};get tagStyle(){const{col,row,color}=this.props;const{height}=this.env.model.getters.getSheetViewDimensionWithHeaders();const visible=this.env.model.getters.isVisibleInViewport({sheetId:this.env.model.getters.getActiveSheetId(),col,row,});const{x,y}=this.env.model.getters.getVisibleRect({left:col,top:row,right:col,bottom:row,});return cssPropertiesToCss({bottom:`${height - y + 15}px`,left:`${x - 1}px`,border:`1px solid ${color}`,"background-color":color,visibility:visible?"visible":"hidden",});}}
const CELL_DELETED_MESSAGE=_t("The cell you are trying to edit has been deleted.");class CellComposerStore extends AbstractComposerStore{canStopEdition(){if(this.editionMode==="inactive"){return true;}
return this.checkDataValidation();}
stopEdition(direction){const canStopEdition=this.canStopEdition();if(canStopEdition){this._stopEdition();if(direction){this.model.selection.moveAnchorCell(direction,1);}
return;}
const editedCell=this.currentEditedCell;const cellXc=toXC(editedCell.col,editedCell.row);const rule=this.getters.getValidationRuleForCell(editedCell);if(!rule){return;}
const evaluator=criterionEvaluatorRegistry.get(rule.criterion.type);const errorStr=evaluator.getErrorString(rule.criterion,this.getters,editedCell.sheetId);this.notificationStore.raiseError(_t("The data you entered in %s violates the data validation rule set on the cell:\n%s",cellXc,errorStr));this.cancelEdition();}
handle(cmd){super.handle(cmd);switch(cmd.type){case"SET_FORMATTING":this.cancelEdition();break;case"ADD_COLUMNS_ROWS":this.onAddElements(cmd);break;case"REMOVE_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.onColumnsRemoved(cmd);}
else{this.onRowsRemoved(cmd);}
break;case"ACTIVATE_SHEET":if(!isFormula(this._currentContent)){this._cancelEdition();this.resetContent();}
if(cmd.sheetIdFrom!==cmd.sheetIdTo){const activePosition=this.getters.getActivePosition();const{col,row}=this.getters.getNextVisibleCellPosition({sheetId:cmd.sheetIdTo,col:activePosition.col,row:activePosition.row,});const zone=this.getters.expandZone(cmd.sheetIdTo,positionToZone({col,row}));this.model.selection.resetAnchor(this,{cell:{col,row},zone});}
break;case"DELETE_SHEET":case"UNDO":case"REDO":const sheetIdExists=!!this.getters.tryGetSheet(this.sheetId);if(!sheetIdExists&&this.editionMode!=="inactive"){this.sheetId=this.getters.getActiveSheetId();this.resetContent();this.cancelEditionAndActivateSheet();this.notificationStore.raiseError(CELL_DELETED_MESSAGE);}
break;}}
get placeholder(){const position=this.getters.getActivePosition();const spreader=this.model.getters.getArrayFormulaSpreadingOn(position);if(!spreader){return undefined;}
return this.getters.getCellText(spreader,{showFormula:true});}
get currentEditedCell(){return{sheetId:this.sheetId,col:this.col,row:this.row,};}
onColumnsRemoved(cmd){if(cmd.elements.includes(this.col)&&this.editionMode!=="inactive"){this.cancelEdition();this.notificationStore.raiseError(CELL_DELETED_MESSAGE);return;}
const{top,left}=updateSelectionOnDeletion({left:this.col,right:this.col,top:this.row,bottom:this.row},"left",[...cmd.elements]);this.col=left;this.row=top;}
onRowsRemoved(cmd){if(cmd.elements.includes(this.row)&&this.editionMode!=="inactive"){this.cancelEdition();this.notificationStore.raiseError(CELL_DELETED_MESSAGE);return;}
const{top,left}=updateSelectionOnDeletion({left:this.col,right:this.col,top:this.row,bottom:this.row},"top",[...cmd.elements]);this.col=left;this.row=top;}
onAddElements(cmd){const{top,left}=updateSelectionOnInsertion({left:this.col,right:this.col,top:this.row,bottom:this.row},cmd.dimension==="COL"?"left":"top",cmd.base,cmd.position,cmd.quantity);this.col=left;this.row=top;}
confirmEdition(content){if(content){const sheetId=this.getters.getActiveSheetId();const cell=this.getters.getEvaluatedCell({sheetId,col:this.col,row:this.row});if(cell.link&&!isFormula(content)){content=markdownLink(content,cell.link.url);}
this.addHeadersForSpreadingFormula(content);this.model.dispatch("UPDATE_CELL",{...this.currentEditedCell,content,});}
else{this.model.dispatch("UPDATE_CELL",{...this.currentEditedCell,content:"",});}
this.model.dispatch("AUTOFILL_TABLE_COLUMN",{...this.currentEditedCell});this.setContent("");}
getComposerContent(position){const locale=this.getters.getLocale();const cell=this.getters.getCell(position);if(cell?.isFormula){return localizeFormula(cell.content,locale);}
const spreader=this.model.getters.getArrayFormulaSpreadingOn(position);if(spreader){return"";}
const{format,value,type,formattedValue}=this.getters.getEvaluatedCell(position);switch(type){case CellValueType.empty:return"";case CellValueType.text:case CellValueType.error:return value;case CellValueType.boolean:return formattedValue;case CellValueType.number:if(format&&isDateTimeFormat(format)){if(parseDateTime(formattedValue,locale)!==null){return formattedValue;}
const timeFormat=Number.isInteger(value)?locale.dateFormat:getDateTimeFormat(locale);return formatValue(value,{locale,format:timeFormat});}
return this.numberComposerContent(value,format,locale);}}
numberComposerContent(value,format,locale){if(format?.includes("%")){return`${numberToString(value * 100, locale.decimalSeparator)}%`;}
return numberToString(value,locale.decimalSeparator);}
addHeadersForSpreadingFormula(content){if(!isFormula(content)){return;}
const evaluated=this.getters.evaluateFormula(this.sheetId,content);if(!isMatrix(evaluated)){return;}
const numberOfRows=this.getters.getNumberRows(this.sheetId);const numberOfCols=this.getters.getNumberCols(this.sheetId);const missingRows=this.row+evaluated[0].length-numberOfRows;const missingCols=this.col+evaluated.length-numberOfCols;if(missingCols>0){this.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:this.sheetId,sheetName:this.getters.getSheetName(this.sheetId),dimension:"COL",base:numberOfCols-1,position:"after",quantity:missingCols+20,});}
if(missingRows>0){this.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:this.sheetId,sheetName:this.getters.getSheetName(this.sheetId),dimension:"ROW",base:numberOfRows-1,position:"after",quantity:missingRows+50,});}}
checkDataValidation(){const cellPosition={sheetId:this.sheetId,col:this.col,row:this.row};const content=this.getCurrentCanonicalContent();const cellValue=isFormula(content)?this.getters.evaluateFormula(this.sheetId,content):parseLiteral(content,this.getters.getLocale());if(isMultipleElementMatrix(cellValue)){return true;}
const validationResult=this.getters.getValidationResultForCellValue(toScalar(cellValue),cellPosition);if(!validationResult.isValid&&validationResult.rule.isBlocking){return false;}
return true;}}
const COMPOSER_BORDER_WIDTH=3*0.4*window.devicePixelRatio||1;const GRID_CELL_REFERENCE_TOP_OFFSET=28;css`
  div.o-grid-composer {
    z-index: ${ComponentsImportance.GridComposer};
    position: absolute;
    border: ${COMPOSER_BORDER_WIDTH}px solid ${SELECTION_BORDER_COLOR};
    font-family: ${DEFAULT_FONT};

    display: flex;
    align-items: center;
  }

  div.o-cell-reference {
    position: absolute;
    z-index: ${ComponentsImportance.GridComposer};
    background: ${SELECTION_BORDER_COLOR};
    color: white;
    font-size: 12px;
    line-height: 14px;
    padding: 6px 7px;
    border-radius: 4px;
  }
`;class GridComposer extends Component{static template="o-spreadsheet-GridComposer";static props={gridDims:Object,onInputContextMenu:Function,};static components={Composer};rect=this.defaultRect;isEditing=false;isCellReferenceVisible=false;currentEditedCell={col:0,row:0,sheetId:this.env.model.getters.getActiveSheetId(),};composerStore;composerFocusStore;composerInterface;get defaultRect(){return{x:0,y:0,width:0,height:0};}
setup(){const composerStore=useStore(CellComposerStore);this.composerStore=composerStore;this.composerFocusStore=useStore(ComposerFocusStore);this.composerInterface={id:"gridComposer",get editionMode(){return composerStore.editionMode;},startEdition:this.composerStore.startEdition,setCurrentContent:this.composerStore.setCurrentContent,stopEdition:this.composerStore.stopEdition,};this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"inactive"});onWillUpdateProps(()=>{this.updateComponentPosition();this.updateCellReferenceVisibility();});}
get shouldDisplayCellReference(){return!this.env.isMobile()&&this.isCellReferenceVisible;}
get cellReference(){const{col,row,sheetId}=this.composerStore.currentEditedCell;const prefixSheet=sheetId!==this.env.model.getters.getActiveSheetId();return getFullReference(prefixSheet?this.env.model.getters.getSheetName(sheetId):undefined,toXC(col,row));}
get cellReferenceStyle(){const{x:left,y:top}=this.rect;return cssPropertiesToCss({left:`${left - COMPOSER_BORDER_WIDTH}px`,top:`${top - GRID_CELL_REFERENCE_TOP_OFFSET}px`,});}
get focus(){return this.composerFocusStore.activeComposer===this.composerInterface?this.composerFocusStore.focusMode:"inactive";}
get composerProps(){const{width,height}=this.env.model.getters.getSheetViewDimensionWithHeaders();const maxHeight=this.props.gridDims.height-this.rect.y-2*COMPOSER_BORDER_WIDTH;return{rect:{...this.rect},delimitation:{width,height,},focus:this.focus,isDefaultFocus:true,onComposerContentFocused:()=>this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"contentFocus",}),onComposerCellFocused:(content)=>this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"cellFocus",content,}),onInputContextMenu:this.props.onInputContextMenu,composerStore:this.composerStore,inputStyle:`max-height: ${maxHeight}px;`,inputMode:this.composerStore.editionMode==="inactive"?"none":undefined,};}
get containerStyle(){if(this.composerStore.editionMode==="inactive"||this.env.isMobile()){return`z-index: -1000; opacity: 0;`;}
const _isFormula=isFormula(this.composerStore.currentContent);const cell=this.env.model.getters.getActiveCell();const position=this.env.model.getters.getActivePosition();const style=this.env.model.getters.getCellComputedStyle(position);const{x:left,y:top,width,height}=this.rect;const background=(!_isFormula&&style.fillColor)||"#ffffff";const color=(!_isFormula&&style.textColor)||"#000000";const fontSize=(!_isFormula&&style.fontSize)||10;const fontWeight=!_isFormula&&style.bold?"bold":undefined;const fontStyle=!_isFormula&&style.italic?"italic":"normal";const textDecoration=!_isFormula?getTextDecoration(style):"none";let textAlign="left";if(!_isFormula){textAlign=style.align||cell.defaultAlign;}
const maxHeight=this.props.gridDims.height-this.rect.y;const maxWidth=this.props.gridDims.width-this.rect.x;const minHeight=Math.min(height+1,maxHeight);const minWidth=Math.min(width+1,maxWidth);return cssPropertiesToCss({left:`${left - 1}px`,top:`${top}px`,"min-width":`${minWidth}px`,"min-height":`${minHeight}px`,"max-width":`${maxWidth}px`,"max-height":`${maxHeight}px`,background,color,"font-size":`${fontSizeInPixels(fontSize)}px`,"font-weight":fontWeight,"font-style":fontStyle,"text-decoration":textDecoration,"text-align":textAlign,});}
updateComponentPosition(){const isEditing=this.composerFocusStore.activeComposer.editionMode!=="inactive";if(!isEditing&&this.composerFocusStore.activeComposer!==this.composerInterface){this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"inactive"});}
let shouldRecomputeRect=!deepEquals(this.currentEditedCell,this.composerStore.currentEditedCell);if(this.isEditing!==isEditing){this.isEditing=isEditing;if(!isEditing){this.rect=this.defaultRect;return;}
this.currentEditedCell=this.composerStore.currentEditedCell;shouldRecomputeRect=true;}
if(shouldRecomputeRect){const position=this.env.model.getters.getActivePosition();const zone=this.env.model.getters.expandZone(position.sheetId,positionToZone(position));this.rect=this.env.model.getters.getVisibleRect(zone);}}
updateCellReferenceVisibility(){if(this.composerStore.editionMode==="inactive"){this.isCellReferenceVisible=false;return;}
if(this.isCellReferenceVisible){return;}
const sheetId=this.env.model.getters.getActiveSheetId();const zone=positionToZone(this.env.model.getters.getSelection().anchor.cell);const rect=this.env.model.getters.getVisibleRect(zone);if(!deepEquals(rect,this.rect)||sheetId!==this.composerStore.currentEditedCell.sheetId){this.isCellReferenceVisible=true;}}
onFocus(){this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"contentFocus"});}}
function dragFigureForMove({x:mouseX,y:mouseY},{x:mouseInitialX,y:mouseInitialY},initialFigure,{maxX,maxY},{scrollX:initialScrollX,scrollY:initialScrollY},{scrollX,scrollY}){const deltaX=mouseX-mouseInitialX+scrollX-initialScrollX;const newX=clip(initialFigure.x+deltaX,0,maxX-initialFigure.width);const deltaY=mouseY-mouseInitialY+scrollY-initialScrollY;const newY=clip(initialFigure.y+deltaY,0,maxY-initialFigure.height);return{...initialFigure,x:newX,y:newY};}
function dragFigureForResize(initialFigure,dirX,dirY,{x:mouseX,y:mouseY},{x:mouseInitialX,y:mouseInitialY},keepRatio,minFigSize,{scrollX:initialScrollX,scrollY:initialScrollY},{scrollX,scrollY},{maxX,maxY}){let{x,y,width,height}=initialFigure;if(keepRatio&&dirX!==0&&dirY!==0){const deltaX=Math.min(dirX*(mouseInitialX-mouseX+scrollX-initialScrollX),width-minFigSize);const deltaY=Math.min(dirY*(mouseInitialY-mouseY+scrollY-initialScrollY),height-minFigSize);const fraction=Math.min(deltaX/width,deltaY/height);if(dirX<0){x=x+width*fraction;}
if(dirY<0){y=y+height*fraction;}
width=width*(1-fraction);height=height*(1-fraction);}
else{const deltaX=Math.max(dirX*(mouseX-mouseInitialX+scrollX-initialScrollX),minFigSize-width);const deltaY=Math.max(dirY*(mouseY-mouseInitialY+scrollY-initialScrollY),minFigSize-height);width=width+deltaX;height=height+deltaY;if(dirX<0){x=x-deltaX;}
if(dirY<0){y=y-deltaY;}}
if(x+scrollX<=0){width=width+x+scrollX;x=-scrollX;}
else if(x+width>maxX){width=maxX-x;}
if(y+scrollY<=0){height=height+y+scrollY;y=-scrollY;}
else if(y+height>maxY){height=maxY-y;}
return{...initialFigure,x,y,width,height};}
const SNAP_MARGIN=5;function snapForMove(getters,figureToSnap,otherFigures){const verticalSnapLine=getSnapLine(getters,figureToSnap,["hCenter","right","left"],otherFigures,["hCenter","right","left"]);const horizontalSnapLine=getSnapLine(getters,figureToSnap,["vCenter","bottom","top"],otherFigures,["vCenter","bottom","top"]);const{y:viewportY,x:viewportX}=getters.getMainViewportCoordinates();const{scrollY,scrollX}=getters.getActiveSheetScrollInfo();if(horizontalSnapLine){figureToSnap.y-=horizontalSnapLine.snapOffset;const isBaseFigFrozenY=figureToSnap.y<viewportY;const isSnappedFrozenY=figureToSnap.y<viewportY;if(isBaseFigFrozenY&&!isSnappedFrozenY)
figureToSnap.y+=scrollY;else if(!isBaseFigFrozenY&&isSnappedFrozenY)
figureToSnap.y-=scrollY;}
if(verticalSnapLine){figureToSnap.x-=verticalSnapLine.snapOffset;const isBaseFigFrozenX=figureToSnap.x<viewportX;const isSnappedFrozenX=figureToSnap.x<viewportX;if(isBaseFigFrozenX&&!isSnappedFrozenX)
figureToSnap.x+=scrollX;else if(!isBaseFigFrozenX&&isSnappedFrozenX)
figureToSnap.x-=scrollX;}
return{snappedFigure:figureToSnap,verticalSnapLine,horizontalSnapLine};}
function snapForResize(getters,resizeDirX,resizeDirY,figureToSnap,otherFigures){const verticalSnapLine=getSnapLine(getters,figureToSnap,[resizeDirX===-1?"left":"right"],otherFigures,["right","left"]);if(verticalSnapLine){if(resizeDirX===1){figureToSnap.width-=verticalSnapLine.snapOffset;}
else if(resizeDirX===-1){figureToSnap.x-=verticalSnapLine.snapOffset;figureToSnap.width+=verticalSnapLine.snapOffset;}}
const horizontalSnapLine=getSnapLine(getters,figureToSnap,[resizeDirY===-1?"top":"bottom"],otherFigures,["bottom","top"]);if(horizontalSnapLine){if(resizeDirY===1){figureToSnap.height-=horizontalSnapLine.snapOffset;}
else if(resizeDirY===-1){figureToSnap.y-=horizontalSnapLine.snapOffset;figureToSnap.height+=horizontalSnapLine.snapOffset;}}
figureToSnap.x=Math.round(figureToSnap.x);figureToSnap.y=Math.round(figureToSnap.y);figureToSnap.height=Math.round(figureToSnap.height);figureToSnap.width=Math.round(figureToSnap.width);return{snappedFigure:figureToSnap,verticalSnapLine,horizontalSnapLine};}
function getVisibleAxes(getters,figure,axesTypes){const axes=axesTypes.map((axisType)=>getAxis(getters,figure,false,axisType));return axes.filter((axis)=>isAxisVisible(getters,figure,axis));}
function isAxisVisible(getters,figureUI,axis){const{x:mainViewportX,y:mainViewportY}=getters.getMainViewportCoordinates();const axisStartEndPositions=[];switch(axis.axisType){case"top":case"bottom":case"vCenter":if(figureUI.y<mainViewportY)
return true;axisStartEndPositions.push({x:figureUI.x,y:axis.position});axisStartEndPositions.push({x:figureUI.x+figureUI.width,y:axis.position});break;case"left":case"right":case"hCenter":if(figureUI.x<mainViewportX)
return true;axisStartEndPositions.push({x:axis.position,y:figureUI.y});axisStartEndPositions.push({x:axis.position,y:figureUI.y+figureUI.height});break;}
return axisStartEndPositions.some(getters.isPixelPositionVisible);}
function getSnapLine(getters,figureToSnap,figAxesTypes,otherFigures,otherAxesTypes){const axesOfFigure=figAxesTypes.map((axisType)=>getAxis(getters,figureToSnap,true,axisType));let closestMatch=undefined;for(const otherFigure of otherFigures){const axesOfOtherFig=getVisibleAxes(getters,otherFigure,otherAxesTypes);for(const axisOfFigure of axesOfFigure){for(const axisOfOtherFig of axesOfOtherFig){if(!canSnap(axisOfFigure.position,axisOfOtherFig.position))
continue;const snapOffset=axisOfFigure.position-axisOfOtherFig.position;if(closestMatch&&snapOffset===closestMatch.snapOffset){closestMatch.matchedFigIds.push(otherFigure.id);}
else if(!closestMatch||Math.abs(snapOffset)<=Math.abs(closestMatch.snapOffset)){closestMatch={matchedFigIds:[otherFigure.id],snapOffset,snappedAxisType:axisOfFigure.axisType,position:axisOfOtherFig.position,};}}}}
return closestMatch;}
function canSnap(axisPosition1,axisPosition2){return Math.abs(axisPosition1-axisPosition2)<=SNAP_MARGIN;}
function getAxis(getters,figureUI,dnd,axisType){let position=0;const{scrollX,scrollY}=getters.getActiveSheetScrollInfo();const{x:viewportX,y:viewportY}=getters.getMainViewportCoordinates();const y=!dnd&&figureUI.y<viewportY?figureUI.y+scrollY:figureUI.y;const x=!dnd&&figureUI.x<viewportX?figureUI.x+scrollX:figureUI.x;switch(axisType){case"top":position=y;break;case"bottom":position=y+figureUI.height-FIGURE_BORDER_WIDTH;break;case"vCenter":position=y+Math.floor(figureUI.height/2)-FIGURE_BORDER_WIDTH;break;case"left":position=x;break;case"right":position=x+figureUI.width-FIGURE_BORDER_WIDTH;break;case"hCenter":position=x+Math.floor(figureUI.width/2)-FIGURE_BORDER_WIDTH;break;}
return{position,axisType:axisType};}
css`
  .o-figure-snap-line {
    position: relative;
    z-index: ${ComponentsImportance.FigureSnapLine};
    &.vertical {
      width: 0px;
      border-left: 1px dashed black;
    }
    &.horizontal {
      border-top: 1px dashed black;
      height: 0px;
    }
  }
  .o-figure-container {
    -webkit-user-select: none; /* safari */
    user-select: none;
  }
`;class FiguresContainer extends Component{static template="o-spreadsheet-FiguresContainer";static props={onFigureDeleted:Function,};static components={FigureComponent};dnd=useState({draggedFigure:undefined,horizontalSnap:undefined,verticalSnap:undefined,cancelDnd:undefined,});setup(){onMounted(()=>{this.render();});onWillUpdateProps(()=>{const sheetId=this.env.model.getters.getActiveSheetId();const draggedFigureId=this.dnd.draggedFigure?.id;if(draggedFigureId&&!this.env.model.getters.getFigure(sheetId,draggedFigureId)){if(this.dnd.cancelDnd){this.dnd.cancelDnd();}
this.dnd.draggedFigure=undefined;this.dnd.horizontalSnap=undefined;this.dnd.verticalSnap=undefined;this.dnd.cancelDnd=undefined;}});}
getVisibleFigures(){const visibleFigures=this.env.model.getters.getVisibleFigures();if(this.dnd.draggedFigure&&!visibleFigures.some((figureUI)=>figureUI.id===this.dnd.draggedFigure?.id)){if(this.dnd.draggedFigure){visibleFigures.push(this.dnd.draggedFigure);}}
return visibleFigures;}
get containers(){const visibleFigures=this.getVisibleFigures();const containers=[];for(const containerType of["topLeft","topRight","bottomLeft","bottomRight",]){const containerFigures=visibleFigures.filter((figure)=>this.getFigureContainer(figure)===containerType);if(containerFigures.length>0){containers.push({type:containerType,figures:containerFigures,style:this.getContainerStyle(containerType),inverseViewportStyle:this.getInverseViewportPositionStyle(containerType),});}}
if(this.dnd.draggedFigure){containers.push({type:"dnd",figures:[this.getDndFigure()],style:this.getContainerStyle("dnd"),inverseViewportStyle:this.getInverseViewportPositionStyle("dnd"),});}
return containers;}
getContainerStyle(container){return this.rectToCss(this.getContainerRect(container));}
rectToCss(rect){return cssPropertiesToCss({left:`${rect.x}px`,top:`${rect.y}px`,width:`${rect.width}px`,height:`${rect.height}px`,});}
getContainerRect(container){const{width:viewWidth,height:viewHeight}=this.env.model.getters.getSheetViewDimension();const{x:viewportX,y:viewportY}=this.env.model.getters.getMainViewportCoordinates();const x=["bottomRight","topRight"].includes(container)?viewportX:0;const width=viewWidth-x;const y=["bottomRight","bottomLeft"].includes(container)?viewportY:0;const height=viewHeight-y;return{x,y,width,height};}
getInverseViewportPositionStyle(container){const{scrollX,scrollY}=this.env.model.getters.getActiveSheetScrollInfo();const{x:viewportX,y:viewportY}=this.env.model.getters.getMainViewportCoordinates();let left=0;let top=0;if(container==="dnd"){left=-scrollX;top=-scrollY;}
if(["bottomRight","topRight"].includes(container)){left=-scrollX-viewportX;}
if(["bottomRight","bottomLeft"].includes(container)){top=-scrollY-viewportY;}
return cssPropertiesToCss({left:`${left}px`,top:`${top}px`,});}
getFigureContainer(figureUI){const{x:viewportX,y:viewportY}=this.env.model.getters.getMainViewportCoordinates();if(figureUI.id===this.dnd.draggedFigure?.id){return"dnd";}
else if(figureUI.x<viewportX&&figureUI.y<viewportY){return"topLeft";}
else if(figureUI.x<viewportX){return"bottomLeft";}
else if(figureUI.y<viewportY){return"topRight";}
else{return"bottomRight";}}
toBottomRightViewport(figureUI){const container=this.getFigureContainer(figureUI);const initialScrollPosition=this.env.model.getters.getActiveSheetScrollInfo();const bottomRightFigure={...figureUI};if(["bottomLeft","topLeft"].includes(container)){bottomRightFigure.x+=initialScrollPosition.scrollX;}
if(["topLeft","topRight"].includes(container)){bottomRightFigure.y+=initialScrollPosition.scrollY;}
return bottomRightFigure;}
startDraggingFigure(figureUI,ev){if(ev.button>0||this.env.model.getters.isReadonly()){return;}
const selectResult=this.env.model.dispatch("SELECT_FIGURE",{figureId:figureUI.id});if(!selectResult.isSuccessful){return;}
if(this.env.isMobile()){return;}
const sheetId=this.env.model.getters.getActiveSheetId();const initialMousePosition={x:ev.clientX,y:ev.clientY};const initialScrollPosition=this.env.model.getters.getActiveSheetScrollInfo();const initialFigure=this.toBottomRightViewport(figureUI);const maxDimensions={maxX:this.env.model.getters.getColDimensions(sheetId,this.env.model.getters.getNumberCols(sheetId)-1).end,maxY:this.env.model.getters.getRowDimensions(sheetId,this.env.model.getters.getNumberRows(sheetId)-1).end,};const onMouseMove=(ev)=>{const getters=this.env.model.getters;const currentMousePosition={x:ev.clientX,y:ev.clientY};const draggedFigure=dragFigureForMove(currentMousePosition,initialMousePosition,initialFigure,maxDimensions,initialScrollPosition,getters.getActiveSheetScrollInfo());const otherFigures=this.getOtherFigures(initialFigure.id);const snapResult=snapForMove(getters,draggedFigure,otherFigures);this.dnd.draggedFigure=snapResult.snappedFigure;this.dnd.horizontalSnap=this.getSnap(snapResult.horizontalSnapLine);this.dnd.verticalSnap=this.getSnap(snapResult.verticalSnapLine);};const onMouseUp=(ev)=>{if(!this.dnd.draggedFigure){return;}
const{col,row,offset}=this.env.model.getters.getPositionAnchorOffset(this.dnd.draggedFigure);this.dnd.draggedFigure=undefined;this.dnd.horizontalSnap=undefined;this.dnd.verticalSnap=undefined;this.env.model.dispatch("UPDATE_FIGURE",{sheetId,figureId:figureUI.id,offset,col,row,});};this.dnd.cancelDnd=startDnd(onMouseMove,onMouseUp);}
startResize(figureUI,dirX,dirY,ev){ev.stopPropagation();const initialMousePosition={x:ev.clientX,y:ev.clientY};const initialScrollPosition=this.env.model.getters.getActiveSheetScrollInfo();const keepRatio=figureRegistry.get(figureUI.tag).keepRatio||false;const minFigSize=figureRegistry.get(figureUI.tag).minFigSize||MIN_FIG_SIZE;const sheetId=this.env.model.getters.getActiveSheetId();const maxDimensions={maxX:this.env.model.getters.getColDimensions(sheetId,this.env.model.getters.getNumberCols(sheetId)-1).end,maxY:this.env.model.getters.getRowDimensions(sheetId,this.env.model.getters.getNumberRows(sheetId)-1).end,};const onMouseMove=(ev)=>{const currentMousePosition={x:ev.clientX,y:ev.clientY};const draggedFigure=dragFigureForResize(figureUI,dirX,dirY,currentMousePosition,initialMousePosition,keepRatio,minFigSize,initialScrollPosition,this.env.model.getters.getActiveSheetScrollInfo(),maxDimensions);const otherFigures=this.getOtherFigures(figureUI.id);const snapResult=snapForResize(this.env.model.getters,dirX,dirY,draggedFigure,otherFigures);this.dnd.draggedFigure=snapResult.snappedFigure;this.dnd.horizontalSnap=this.getSnap(snapResult.horizontalSnapLine);this.dnd.verticalSnap=this.getSnap(snapResult.verticalSnapLine);};const onMouseUp=(ev)=>{if(!this.dnd.draggedFigure){return;}
const update=this.env.model.getters.getPositionAnchorOffset(this.dnd.draggedFigure);if(dirX){update.width=this.dnd.draggedFigure.width;}
if(dirY){update.height=this.dnd.draggedFigure.height;}
this.env.model.dispatch("UPDATE_FIGURE",{sheetId:this.env.model.getters.getActiveSheetId(),figureId:figureUI.id,...update,});this.dnd.draggedFigure=undefined;this.dnd.horizontalSnap=undefined;this.dnd.verticalSnap=undefined;};this.dnd.cancelDnd=startDnd(onMouseMove,onMouseUp);}
getOtherFigures(figId){return this.getVisibleFigures().filter((f)=>f.id!==figId);}
getDndFigure(){const figure=this.dnd.draggedFigure;if(!figure)
throw new Error("Dnd figure not found");return figure;}
getFigureStyle(figureUI){if(figureUI.id!==this.dnd.draggedFigure?.id)
return"";return cssPropertiesToCss({opacity:"0.9",cursor:"grabbing",});}
getSnap(snapLine){if(!snapLine||!this.dnd.draggedFigure)
return undefined;const{scrollX,scrollY}=this.env.model.getters.getActiveSheetScrollInfo();const figureVisibleRects=snapLine.matchedFigIds.map((id)=>this.getVisibleFigures().find((figureUI)=>figureUI.id===id)).filter(isDefined).map((figureUI)=>{return{x:figureUI.x-scrollX,y:figureUI.y-scrollY,width:figureUI.width,height:figureUI.height,};}).filter(isDefined);const containerRect=rectUnion({...this.dnd.draggedFigure,x:this.dnd.draggedFigure.x-scrollX,y:this.dnd.draggedFigure.y-scrollY,},...figureVisibleRects);return{line:snapLine,containerStyle:this.rectToCss(containerRect),lineStyle:this.getSnapLineStyle(snapLine,containerRect),};}
getSnapLineStyle(snapLine,containerRect){if(!snapLine)
return"";const{scrollX,scrollY}=this.env.model.getters.getActiveSheetScrollInfo();if(["top","vCenter","bottom"].includes(snapLine.snappedAxisType)){return cssPropertiesToCss({top:`${snapLine.position - containerRect.y - scrollY}px`,left:`0px`,width:`100%`,});}
else{return cssPropertiesToCss({top:`0px`,left:`${snapLine.position - containerRect.x - scrollX}px`,height:`100%`,});}}}
css`
  .o-validation {
    border-radius: 4px;
    border-width: 0 0 0 3px;
    border-style: solid;
    gap: 3px;

    .o-icon {
      margin-right: 5px;
      height: 1.2em;
      width: 1.2em;
    }
  }

  .o-validation-warning {
    border-color: ${ALERT_WARNING_BORDER};
    color: ${ALERT_WARNING_TEXT_COLOR};
    background-color: ${ALERT_WARNING_BG};
  }

  .o-validation-error {
    border-color: ${ALERT_DANGER_BORDER};
    color: ${ALERT_DANGER_TEXT_COLOR};
    background-color: ${ALERT_DANGER_BG};
  }

  .o-validation-info {
    border-color: ${ALERT_INFO_BORDER};
    color: ${ALERT_INFO_TEXT_COLOR};
    background-color: ${ALERT_INFO_BG};
  }
`;class ValidationMessages extends Component{static template="o-spreadsheet-ValidationMessages";static props={messages:Array,msgType:String,singleBox:{type:Boolean,optional:true},};get divClasses(){if(this.props.msgType==="warning"){return"o-validation-warning";}
if(this.props.msgType==="info"){return"o-validation-info";}
return"o-validation-error";}
get alertBoxes(){return this.props.singleBox?[this.props.messages]:this.props.messages.map((msg)=>[msg]);}}
css`
  .o-grid-add-rows {
    input.o-input {
      width: 60px;
      height: 30px;
    }

    .o-validation-error {
      display: inline-block !important;
      margin-top: 0;
      margin-left: 8px;
    }
  }
`;class GridAddRowsFooter extends Component{static template="o-spreadsheet-GridAddRowsFooter";static props={focusGrid:Function,};static components={ValidationMessages};inputRef=useRef("inputRef");state=useState({inputValue:"100",errorFlag:false,});setup(){useExternalListener(window,"click",this.onExternalClick,{capture:true});}
get addRowsPosition(){const activeSheetId=this.env.model.getters.getActiveSheetId();const{numberOfRows}=this.env.model.getters.getSheetSize(activeSheetId);const{scrollY}=this.env.model.getters.getActiveSheetScrollInfo();const rowDimensions=this.env.model.getters.getRowDimensions(activeSheetId,numberOfRows-1);const top=rowDimensions.end-scrollY;return cssPropertiesToCss({top:`${top}px`,});}
get errorMessages(){return[_t("Please enter a number between 0 and 10000.")];}
onKeydown(ev){if(ev.key.toUpperCase()==="ESCAPE"){this.props.focusGrid();}
else if(ev.key.toUpperCase()==="ENTER"){this.onConfirm();}}
onInput(ev){const value=ev.target.value;this.state.inputValue=value;const quantity=Number(value);this.state.errorFlag=Number.isNaN(quantity)||quantity<=0||quantity>10000;}
onConfirm(){if(this.state.errorFlag){return;}
const quantity=Number(this.state.inputValue);const activeSheetId=this.env.model.getters.getActiveSheetId();const rowNumber=this.env.model.getters.getNumberRows(activeSheetId);this.env.model.dispatch("ADD_COLUMNS_ROWS",{sheetId:activeSheetId,sheetName:this.env.model.getters.getSheetName(activeSheetId),position:"after",base:rowNumber-1,quantity,dimension:"ROW",});this.props.focusGrid();const{scrollX}=this.env.model.getters.getActiveSheetScrollInfo();const{end}=this.env.model.getters.getRowDimensions(activeSheetId,rowNumber+quantity-1);this.env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:scrollX,offsetY:end,});}
onExternalClick(ev){if(this.inputRef.el!==document.activeElement||ev.target===this.inputRef.el){return;}
this.props.focusGrid();}}
function useRefListener(ref,...listener){useEffect((el)=>{el?.addEventListener(...listener);return()=>el?.removeEventListener(...listener);},()=>[ref.el]);}
function useHoveredElement(ref){const state=useState({hovered:false});useRefListener(ref,"mouseenter",()=>(state.hovered=true));useRefListener(ref,"mouseleave",()=>(state.hovered=false));return state;}
const PAINT_FORMAT_HANDLER_KEYS=["cell","border","table","conditionalFormat","merge",];class PaintFormatStore extends SpreadsheetStore{mutators=["activate","cancel","pasteFormat"];highlightStore=this.get(HighlightStore);status="inactive";copiedData;constructor(get){super(get);this.highlightStore.register(this);this.onDispose(()=>{this.highlightStore.unRegister(this);});}
handle(cmd){switch(cmd.type){case"PAINT_FORMAT":this.paintFormat(cmd.sheetId,cmd.target);break;}}
activate(args){this.copiedData=this.copyFormats();this.status=args.persistent?"persistent":"oneOff";}
cancel(){this.status="inactive";this.copiedData=undefined;}
pasteFormat(target){this.model.dispatch("PAINT_FORMAT",{target,sheetId:this.getters.getActiveSheetId()});}
get isActive(){return this.status!=="inactive";}
get clipboardHandlers(){return PAINT_FORMAT_HANDLER_KEYS.map((handlerName)=>{const HandlerClass=clipboardHandlersRegistries.cellHandlers.get(handlerName);return{handlerName,handler:new HandlerClass(this.getters,this.model.dispatch),};});}
copyFormats(){const sheetId=this.getters.getActiveSheetId();const zones=this.getters.getSelectedZones();const copiedData={zones,sheetId};for(const{handlerName,handler}of this.clipboardHandlers){const handlerResult=handler.copy(getClipboardDataPositions(sheetId,zones),false);if(handlerResult!==undefined){copiedData[handlerName]=handlerResult;}}
return copiedData;}
paintFormat(sheetId,target){if(!this.copiedData){return;}
const options={isCutOperation:false,pasteOption:"onlyFormat",};const{target:pasteTarget,selectedZones}=getPasteTargetFromHandlers(sheetId,target,this.copiedData,this.clipboardHandlers,options);applyClipboardHandlersPaste(this.clipboardHandlers,this.copiedData,pasteTarget,options);selectPastedZone(this.model.selection,target,selectedZones);if(this.status==="oneOff"){this.cancel();}}
get highlights(){const data=this.copiedData;if(!data){return[];}
return data.zones.map((zone)=>({range:this.model.getters.getRangeFromZone(data.sheetId,zone),color:SELECTION_BORDER_COLOR,dashed:true,sheetId:data.sheetId,noFill:true,thinLine:true,interactive:false,}));}}
class HoveredTableStore extends SpreadsheetStore{mutators=["clear","hover"];col;row;overlayColors=new PositionMap();handle(cmd){switch(cmd.type){case"ACTIVATE_SHEET":this.clear();}}
hover(position){if(!this.getters.isDashboard()||(position.col===this.col&&position.row===this.row)){return"noStateChange";}
this.col=position.col;this.row=position.row;this.computeOverlay();return;}
clear(){this.col=undefined;this.row=undefined;}
computeOverlay(){this.overlayColors=new PositionMap();const{col,row}=this;if(col===undefined||row===undefined){return;}
const sheetId=this.getters.getActiveSheetId();const table=this.getters.getTable({sheetId,col,row});if(!table){return;}
const{left,right,top}=table.range.zone;const isTableHeader=row<top+table.config.numberOfHeaders;const doesTableRowHaveContent=range(left,right+1).some((col)=>{return(!this.getters.isColHidden(sheetId,col)&&this.getters.getEvaluatedCell({sheetId,col,row}).formattedValue);});if(!isTableHeader&&doesTableRowHaveContent){for(let col=left;col<=right;col++){this.overlayColors.set({sheetId,col,row},TABLE_HOVER_BACKGROUND_COLOR);}}}}
class HoveredIconStore extends SpreadsheetStore{mutators=["setHoveredIcon"];hoveredIcon=undefined;setHoveredIcon(icon){this.hoveredIcon=icon;}}
const CURSOR_SVG=`
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="14" height="16"><path d="M6.5.4c1.3-.8 2.9-.1 3.8 1.4l2.9 5.1c.2.4.9 1.6-.4 2.3l-1.6.9 1.8 3.1c.2.4.1 1-.2 1.2l-1.6 1c-.3.1-.9 0-1.1-.4l-1.8-3.1-1.6 1c-.6.4-1.7 0-2.2-.8L0 4.3"/><path fill="#fff" d="M9.1 2a1.4 1.1 60 0 0-1.7-.6L5.5 2.5l.9 1.6-1 .6-.9-1.6-.6.4 1.8 3.1-1.3.7-1.8-3.1-1 .6 3.8 6.6 6.8-3.98M3.9 8.8 10.82 5l.795 1.4-6.81 3.96"/></svg>
`;css`
  .o-paint-format-cursor {
    cursor: url("data:image/svg+xml,${encodeURIComponent(CURSOR_SVG)}"), auto;
  }
`;function useCellHovered(env,gridRef){const delayedHoveredCell=useStore(DelayedHoveredCellStore);const hoveredTable=useStore(HoveredTableStore);const hoveredPosition={col:undefined,row:undefined,};const{Date}=window;let x=undefined;let y=undefined;let lastMoved=0;function getPosition(){if(x===undefined||y===undefined){return{col:-1,row:-1};}
const col=env.model.getters.getColIndex(x);const row=env.model.getters.getRowIndex(y);return{col,row};}
function getOffsetRelativeToOverlay(ev){const gridRect=getBoundingRectAsPOJO(gridRef.el);return{x:ev.clientX-gridRect.x,y:ev.clientY-gridRect.y,};}
const{pause,resume}=useInterval(checkTiming,200);function checkTiming(){const{col,row}=getPosition();const delta=Date.now()-lastMoved;if(delta>300&&(col!==hoveredPosition.col||row!==hoveredPosition.row)){setPosition(undefined,undefined);}
if(delta>300){if(col<0||row<0){return;}
setPosition(col,row);}}
function updateMousePosition(e){if(isChildEvent(gridRef.el,e)){({x,y}=getOffsetRelativeToOverlay(e));lastMoved=Date.now();hoveredTable.hover(getPosition());}}
function recompute(){const{col,row}=getPosition();if(col!==hoveredPosition.col||row!==hoveredPosition.row){setPosition(undefined,undefined);}}
function onMouseLeave(e){const{x,y}=getOffsetRelativeToOverlay(e);const gridRect=getBoundingRectAsPOJO(gridRef.el);if(y<0||y>gridRect.height||x<0||x>gridRect.width){return updateMousePosition(e);}
else{return pause();}}
useRefListener(gridRef,"pointermove",(ev)=>!env.isMobile()&&updateMousePosition(ev));useRefListener(gridRef,"mouseleave",onMouseLeave);useRefListener(gridRef,"mouseenter",resume);useRefListener(gridRef,"pointerdown",recompute);useRefListener(gridRef,"pointerdown",(ev)=>env.isMobile()&&updateMousePosition(ev));useExternalListener(window,"click",handleGlobalClick);function handleGlobalClick(e){const target=e.target;const grid=gridRef.el;if(!grid.contains(target)){setPosition(undefined,undefined);}}
function setPosition(col,row){if(col!==hoveredPosition.col||row!==hoveredPosition.row){hoveredPosition.col=col;hoveredPosition.row=row;delayedHoveredCell.hover({col,row});}}
return hoveredPosition;}
class GridOverlay extends Component{static template="o-spreadsheet-GridOverlay";static props={onCellDoubleClicked:{type:Function,optional:true},onCellClicked:{type:Function,optional:true},onCellRightClicked:{type:Function,optional:true},onGridResized:{type:Function,optional:true},onFigureDeleted:{type:Function,optional:true},onGridMoved:Function,gridOverlayDimensions:String,slots:{type:Object,optional:true},getGridSize:Function,};static components={FiguresContainer,GridAddRowsFooter,};static defaultProps={onCellDoubleClicked:()=>{},onCellClicked:()=>{},onCellRightClicked:()=>{},onGridResized:()=>{},onFigureDeleted:()=>{},};gridOverlay=useRef("gridOverlay");cellPopovers;paintFormatStore;hoveredIconStore;setup(){useCellHovered(this.env,this.gridOverlay);const resizeObserver=new ResizeObserver(()=>{const boundingRect=this.gridOverlayEl.getBoundingClientRect();const{width,height}=this.props.getGridSize();this.props.onGridResized({x:boundingRect.left,y:boundingRect.top,height:height,width:width,});});onMounted(()=>{resizeObserver.observe(this.gridOverlayEl);});onWillUnmount(()=>{resizeObserver.disconnect();});this.cellPopovers=useStore(CellPopoverStore);this.paintFormatStore=useStore(PaintFormatStore);this.hoveredIconStore=useStore(HoveredIconStore);}
get gridOverlayEl(){if(!this.gridOverlay.el){throw new Error("GridOverlay el is not defined.");}
return this.gridOverlay.el;}
get style(){return(this.props.gridOverlayDimensions+
cssPropertiesToCss({cursor:this.hoveredIconStore.hoveredIcon?"pointer":"default"}));}
get isPaintingFormat(){return this.paintFormatStore.isActive;}
onPointerMove(ev){if(this.env.isMobile()){return;}
const icon=this.getInteractiveIconAtEvent(ev);const hoveredIcon=icon?.type?{id:icon.type,position:icon.position}:undefined;if(!deepEquals(hoveredIcon,this.hoveredIconStore.hoveredIcon)){this.hoveredIconStore.setHoveredIcon(hoveredIcon);}}
onPointerDown(ev){if(ev.button>0||this.env.isMobile()){return;}
this.onCellClicked(ev);}
onClick(ev){if(ev.button>0||!this.env.isMobile()){return;}
this.onCellClicked(ev);}
onCellClicked(ev){const openedPopover=this.cellPopovers.persistentCellPopover;const[col,row]=this.getCartesianCoordinates(ev);const clickedIcon=this.getInteractiveIconAtEvent(ev);if(clickedIcon){this.env.model.selection.getBackToDefault();}
this.props.onCellClicked(col,row,{expandZone:ev.shiftKey,addZone:isCtrlKey(ev),},ev);if(clickedIcon?.onClick){clickedIcon.onClick(clickedIcon.position,this.env);}
if(ev.target===this.gridOverlay.el&&this.cellPopovers.isOpen&&deepEquals(openedPopover,this.cellPopovers.persistentCellPopover)){this.cellPopovers.close();return;}}
onDoubleClick(ev){if(this.getInteractiveIconAtEvent(ev)){return;}
const[col,row]=this.getCartesianCoordinates(ev);this.props.onCellDoubleClicked(col,row);}
onContextMenu(ev){const[col,row]=this.getCartesianCoordinates(ev);this.props.onCellRightClicked(col,row,{x:ev.clientX,y:ev.clientY});}
getCartesianCoordinates(ev){const gridOverLayRect=getRefBoundingRect(this.gridOverlay);const x=ev.clientX-gridOverLayRect.x;const y=ev.clientY-gridOverLayRect.y;const colIndex=this.env.model.getters.getColIndex(x);const rowIndex=this.env.model.getters.getRowIndex(y);return[colIndex,rowIndex];}
getInteractiveIconAtEvent(ev){const gridOverLayRect=getRefBoundingRect(this.gridOverlay);const gridOffset=this.env.model.getters.getGridOffset();const x=ev.clientX-gridOverLayRect.x+gridOffset.x;const y=ev.clientY-gridOverLayRect.y+gridOffset.y;const[col,row]=this.getCartesianCoordinates(ev);const sheetId=this.env.model.getters.getActiveSheetId();let position={col,row,sheetId};const merge=this.env.model.getters.getMerge(position);if(merge){position={col:merge.left,row:merge.top,sheetId};}
const icons=this.env.model.getters.getCellIcons(position);const icon=icons.find((icon)=>{const merge=this.env.model.getters.getMerge(position);const zone=merge||positionToZone(position);const cellRect=this.env.model.getters.getRect(zone);return isPointInsideRect(x,y,this.env.model.getters.getCellIconRect(icon,cellRect));});return icon?.onClick?icon:undefined;}}
class GridPopover extends Component{static template="o-spreadsheet-GridPopover";static props={onClosePopover:Function,onMouseWheel:Function,gridRect:Object,};static components={Popover};cellPopovers;zIndex=ComponentsImportance.GridPopover;setup(){this.cellPopovers=useStore(CellPopoverStore);}
get cellPopover(){const popover=this.cellPopovers.cellPopover;if(!popover.isOpen){return{isOpen:false};}
const anchorRect=popover.anchorRect;return{...popover,anchorRect:{...anchorRect,x:anchorRect.x+this.props.gridRect.x,y:anchorRect.y+this.props.gridRect.y,},};}}
class UnhideRowHeaders extends Component{static template="o-spreadsheet-UnhideRowHeaders";static props={headersGroups:Array,headerRange:Object,offset:{type:Number,optional:true},};static defaultProps={offset:0};get sheetId(){return this.env.model.getters.getActiveSheetId();}
getUnhidePreviousButtonStyle(hiddenIndex){const rect=this.env.model.getters.getRect(positionToZone({col:0,row:hiddenIndex}));const y=rect.y+rect.height-HEADER_HEIGHT;return cssPropertiesToCss({top:y-this.props.offset+"px","margin-right":"1px"});}
getUnhideNextButtonStyle(hiddenIndex){const rect=this.env.model.getters.getRect(positionToZone({col:0,row:hiddenIndex}));const y=rect.y-HEADER_HEIGHT;return cssPropertiesToCss({top:y-this.props.offset+"px","margin-right":"1px"});}
unhide(hiddenElements){this.env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId:this.sheetId,dimension:"ROW",elements:hiddenElements,});}
isVisible(header){return header>=this.props.headerRange.start&&header<=this.props.headerRange.end;}}
class UnhideColumnHeaders extends Component{static template="o-spreadsheet-UnhideColumnHeaders";static props={headersGroups:Array,headerRange:Object,offset:{type:Number,optional:true},};static defaultProps={offset:0};get sheetId(){return this.env.model.getters.getActiveSheetId();}
getUnhidePreviousButtonStyle(hiddenIndex){const rect=this.env.model.getters.getRect(positionToZone({col:hiddenIndex,row:0}));const x=rect.x+rect.width-HEADER_WIDTH;return cssPropertiesToCss({left:x-this.props.offset+"px"});}
getUnhideNextButtonStyle(hiddenIndex){const rect=this.env.model.getters.getRect(positionToZone({col:hiddenIndex,row:0}));const x=rect.x-HEADER_WIDTH;return cssPropertiesToCss({left:x-this.props.offset+"px"});}
unhide(hiddenElements){this.env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId:this.sheetId,dimension:"COL",elements:hiddenElements,});}
isVisible(header){return header>=this.props.headerRange.start&&header<=this.props.headerRange.end;}}
class AbstractResizer extends Component{static props={onOpenContextMenu:Function,};composerFocusStore;PADDING=0;MAX_SIZE_MARGIN=0;MIN_ELEMENT_SIZE=0;lastSelectedElementIndex=null;state=useState({resizerIsActive:false,isResizing:false,isMoving:false,isSelecting:false,waitingForMove:false,activeElement:0,draggerLinePosition:0,draggerShadowPosition:0,draggerShadowThickness:0,delta:0,base:0,position:"before",});dragNDropGrid=useDragAndDropBeyondTheViewport(this.env);setup(){this.composerFocusStore=useStore(ComposerFocusStore);}
_computeHandleDisplay(ev){const position=this._getEvOffset(ev);const elementIndex=this._getElementIndex(position);if(elementIndex<0){return;}
const dimensions=this._getDimensionsInViewport(elementIndex);if(position-dimensions.start<this.PADDING&&elementIndex!==this._getViewportOffset()){this.state.resizerIsActive=true;this.state.draggerLinePosition=dimensions.start;this.state.activeElement=this._getPreviousVisibleElement(elementIndex);}
else if(dimensions.end-position<this.PADDING){this.state.resizerIsActive=true;this.state.draggerLinePosition=dimensions.end;this.state.activeElement=elementIndex;}
else{this.state.resizerIsActive=false;}}
_computeGrabDisplay(ev){const index=this._getElementIndex(this._getEvOffset(ev));const activeElements=this._getActiveElements();const selectedZoneStart=this._getSelectedZoneStart();const selectedZoneEnd=this._getSelectedZoneEnd();if(activeElements.has(selectedZoneStart)){if(selectedZoneStart<=index&&index<=selectedZoneEnd){this.state.waitingForMove=true;return;}}
this.state.waitingForMove=false;}
onMouseMove(ev){if(this.env.isMobile()){return;}
if(this.state.isResizing||this.state.isMoving||this.state.isSelecting){return;}
this._computeHandleDisplay(ev);this._computeGrabDisplay(ev);}
onMouseLeave(){this.state.resizerIsActive=this.state.isResizing;this.state.waitingForMove=false;}
onDblClick(ev){this._fitElementSize(this.state.activeElement);this.state.isResizing=false;this._computeHandleDisplay(ev);this._computeGrabDisplay(ev);}
onMouseDown(ev){this.state.isResizing=true;this.state.delta=0;const initialPosition=this._getClientPosition(ev);const styleValue=this.state.draggerLinePosition;const size=this._getElementSize(this.state.activeElement);const minSize=styleValue-size+this.MIN_ELEMENT_SIZE;const maxSize=this._getMaxSize();const onMouseUp=(ev)=>{this.state.isResizing=false;if(this.state.delta!==0){this._updateSize();}};const onMouseMove=(ev)=>{this.state.delta=this._getClientPosition(ev)-initialPosition;this.state.draggerLinePosition=styleValue+this.state.delta;if(this.state.draggerLinePosition<minSize){this.state.draggerLinePosition=minSize;this.state.delta=this.MIN_ELEMENT_SIZE-size;}
if(this.state.draggerLinePosition>maxSize){this.state.draggerLinePosition=maxSize;this.state.delta=maxSize-styleValue;}};startDnd(onMouseMove,onMouseUp);}
onClick(ev){if(!this.env.isMobile()){return;}
if(ev.button>0){return;}
const index=this._getElementIndex(this._getEvOffset(ev));this._selectElement(index,false);}
select(ev){if(this.env.isMobile()){return;}
if(ev.button>0){return;}
const index=this._getElementIndex(this._getEvOffset(ev));if(index<0){return;}
if(this.state.waitingForMove){if(!this.env.model.getters.isGridSelectionActive()){this._selectElement(index,false);}
else{this.startMovement(ev);}
return;}
if(this.composerFocusStore.activeComposer.editionMode==="editing"){this.env.model.selection.getBackToDefault();}
this.startSelection(ev,index);}
startMovement(ev){this.state.waitingForMove=false;this.state.isMoving=true;const startDimensions=this._getDimensionsInViewport(this._getSelectedZoneStart());const endDimensions=this._getDimensionsInViewport(this._getSelectedZoneEnd());const defaultPosition=startDimensions.start;this.state.draggerLinePosition=defaultPosition;this.state.base=this._getSelectedZoneStart();this.state.draggerShadowPosition=defaultPosition;this.state.draggerShadowThickness=endDimensions.end-startDimensions.start;const mouseMoveMovement=(col,row)=>{const elementIndex=this._getType()==="COL"?col:row;if(elementIndex>=0){const dimensions=this._getDimensionsInViewport(elementIndex);if(elementIndex<=this._getSelectedZoneStart()){this.state.draggerLinePosition=dimensions.start;this.state.draggerShadowPosition=dimensions.start;this.state.base=elementIndex;this.state.position="before";}
else if(this._getSelectedZoneEnd()<elementIndex){this.state.draggerLinePosition=dimensions.end;this.state.draggerShadowPosition=dimensions.end-this.state.draggerShadowThickness;this.state.base=elementIndex;this.state.position="after";}
else{this.state.draggerLinePosition=startDimensions.start;this.state.draggerShadowPosition=startDimensions.start;this.state.base=this._getSelectedZoneStart();}}};const mouseUpMovement=()=>{this.state.isMoving=false;if(this.state.base!==this._getSelectedZoneStart()){this._moveElements();}
this._computeGrabDisplay(ev);};this.dragNDropGrid.start(ev,mouseMoveMovement,mouseUpMovement);}
startSelection(ev,index){if(this.env.isMobile()){return;}
this.state.isSelecting=true;if(ev.shiftKey){this._increaseSelection(index);}
else{this._selectElement(index,isCtrlKey(ev));}
this.lastSelectedElementIndex=index;const mouseMoveSelect=(col,row)=>{const newIndex=this._getType()==="COL"?col:row;if(newIndex!==this.lastSelectedElementIndex&&newIndex!==-1){this._increaseSelection(newIndex);this.lastSelectedElementIndex=newIndex;}};const mouseUpSelect=()=>{this.state.isSelecting=false;this.lastSelectedElementIndex=null;this._computeGrabDisplay(ev);};this.dragNDropGrid.start(ev,mouseMoveSelect,mouseUpSelect);}
onMouseUp(ev){this.lastSelectedElementIndex=null;}
onContextMenu(ev){ev.preventDefault();const index=this._getElementIndex(this._getEvOffset(ev));if(index<0)
return;if(!this._getActiveElements().has(index)){this._selectElement(index,false);}
const type=this._getType();this.props.onOpenContextMenu(type,ev.clientX,ev.clientY);}}
css`
  .o-col-resizer {
    position: absolute;
    top: 0;
    left: ${HEADER_WIDTH}px;
    right: ${SCROLLBAR_WIDTH}px;
    height: ${HEADER_HEIGHT}px;
    width: calc(100% - ${HEADER_WIDTH + SCROLLBAR_WIDTH}px);
    &.o-dragging {
      cursor: grabbing;
    }
    &.o-grab {
      cursor: grab;
    }
    .dragging-col-line {
      top: ${HEADER_HEIGHT}px;
      position: absolute;
      width: 2px;
      height: 10000px;
      background-color: black;
    }
    .dragging-col-shadow {
      top: ${HEADER_HEIGHT}px;
      position: absolute;
      height: 10000px;
      background-color: black;
      opacity: 0.1;
    }
    .o-handle {
      position: absolute;
      height: ${HEADER_HEIGHT}px;
      width: 4px;
      cursor: e-resize;
      background-color: ${SELECTION_BORDER_COLOR};
    }
    .dragging-resizer {
      top: ${HEADER_HEIGHT}px;
      position: absolute;
      margin-left: 2px;
      width: 1px;
      height: 10000px;
      background-color: ${SELECTION_BORDER_COLOR};
    }
    .o-unhide {
      color: ${ICONS_COLOR};
    }
    .o-unhide:hover {
      z-index: ${ComponentsImportance.Grid + 1};
      background-color: lightgrey;
    }
  }
`;class ColResizer extends AbstractResizer{static props={onOpenContextMenu:Function,};static template="o-spreadsheet-ColResizer";static components={UnhideColumnHeaders};colResizerRef;setup(){super.setup();this.colResizerRef=useRef("colResizer");this.PADDING=15;this.MAX_SIZE_MARGIN=90;this.MIN_ELEMENT_SIZE=MIN_COL_WIDTH;}
get sheetId(){return this.env.model.getters.getActiveSheetId();}
_getEvOffset(ev){return ev.offsetX;}
_getViewportOffset(){return this.env.model.getters.getActiveMainViewport().left;}
_getClientPosition(ev){return ev.clientX;}
_getElementIndex(position){return this.env.model.getters.getColIndex(position);}
_getSelectedZoneStart(){return this.env.model.getters.getSelectedZone().left;}
_getSelectedZoneEnd(){return this.env.model.getters.getSelectedZone().right;}
_getEdgeScroll(position){return this.env.model.getters.getEdgeScrollCol(position,position,position);}
_getDimensionsInViewport(index){return this.env.model.getters.getColDimensionsInViewport(this.sheetId,index);}
_getElementSize(index){return this.env.model.getters.getColSize(this.sheetId,index);}
_getMaxSize(){return this.colResizerRef.el.clientWidth;}
_updateSize(){const index=this.state.activeElement;const size=this.state.delta+this._getElementSize(index);const cols=this.env.model.getters.getActiveCols();this.env.model.dispatch("RESIZE_COLUMNS_ROWS",{dimension:"COL",sheetId:this.sheetId,elements:cols.has(index)?[...cols]:[index],size,});}
_moveElements(){const elements=[];const start=this._getSelectedZoneStart();const end=this._getSelectedZoneEnd();for(let colIndex=start;colIndex<=end;colIndex++){elements.push(colIndex);}
const result=this.env.model.dispatch("MOVE_COLUMNS_ROWS",{sheetId:this.sheetId,sheetName:this.env.model.getters.getActiveSheetName(),dimension:"COL",base:this.state.base,elements,position:this.state.position,});if(!result.isSuccessful&&result.reasons.includes("WillRemoveExistingMerge")){this.env.raiseError(MergeErrorMessage);}}
_selectElement(index,addDistinctHeader){this.env.model.selection.selectColumn(index,addDistinctHeader?"newAnchor":"overrideSelection");}
_increaseSelection(index){this.env.model.selection.selectColumn(index,"updateAnchor");}
_fitElementSize(index){const cols=this.env.model.getters.getActiveCols();this.env.model.dispatch("AUTORESIZE_COLUMNS",{sheetId:this.sheetId,cols:cols.has(index)?[...cols]:[index],});}
_getType(){return"COL";}
_getActiveElements(){return this.env.model.getters.getActiveCols();}
_getPreviousVisibleElement(index){const sheetId=this.sheetId;let row;for(row=index-1;row>=0;row--){if(!this.env.model.getters.isColHidden(sheetId,row)){break;}}
return row;}
unhide(hiddenElements){this.env.model.dispatch("UNHIDE_COLUMNS_ROWS",{sheetId:this.sheetId,elements:hiddenElements,dimension:"COL",});}
get mainUnhideHeadersProps(){const{left,right}=this.env.model.getters.getActiveMainViewport();const{xSplit}=this.env.model.getters.getPaneDivisions(this.sheetId);const hiddenGroups=this.env.model.getters.getHiddenColsGroups(this.sheetId);const index=hiddenGroups.findIndex((group)=>group[0]>=xSplit-1);return{headersGroups:hiddenGroups.slice(index),offset:this.env.model.getters.getMainViewportCoordinates().x,headerRange:{start:left,end:right},};}
get frozenUnhideHeadersProps(){const{xSplit}=this.env.model.getters.getPaneDivisions(this.sheetId);const hiddenGroups=this.env.model.getters.getHiddenColsGroups(this.sheetId);const index=hiddenGroups.findIndex((group)=>group[0]>=xSplit-1);return{headersGroups:hiddenGroups.slice(0,index+1),headerRange:{start:0,end:xSplit-1},};}
get frozenContainerStyle(){return cssPropertiesToCss({width:this.env.model.getters.getMainViewportCoordinates().x+"px",});}
get hasFrozenPane(){return this.env.model.getters.getPaneDivisions(this.sheetId).xSplit>0;}}
css`
  .o-row-resizer {
    position: absolute;
    top: ${HEADER_HEIGHT}px;
    left: 0;
    bottom: ${SCROLLBAR_WIDTH}px;
    width: ${HEADER_WIDTH}px;
    &.o-dragging {
      cursor: grabbing;
    }
    &.o-grab {
      cursor: grab;
    }
    .dragging-row-line {
      left: ${HEADER_WIDTH}px;
      position: absolute;
      width: 10000px;
      height: 2px;
      background-color: black;
    }
    .dragging-row-shadow {
      left: ${HEADER_WIDTH}px;
      position: absolute;
      width: 10000px;
      background-color: black;
      opacity: 0.1;
    }
    .o-handle {
      position: absolute;
      height: 4px;
      width: ${HEADER_WIDTH}px;
      cursor: n-resize;
      background-color: ${SELECTION_BORDER_COLOR};
    }
    .dragging-resizer {
      left: ${HEADER_WIDTH}px;
      position: absolute;
      margin-top: 2px;
      width: 10000px;
      height: 1px;
      background-color: ${SELECTION_BORDER_COLOR};
    }
    .o-unhide {
      color: ${ICONS_COLOR};
    }
    .o-unhide:hover {
      z-index: ${ComponentsImportance.Grid + 1};
      background-color: lightgrey;
    }
  }
`;class RowResizer extends AbstractResizer{static props={onOpenContextMenu:Function,};static template="o-spreadsheet-RowResizer";static components={UnhideRowHeaders};setup(){super.setup();this.rowResizerRef=useRef("rowResizer");this.PADDING=5;this.MAX_SIZE_MARGIN=60;this.MIN_ELEMENT_SIZE=MIN_ROW_HEIGHT;}
rowResizerRef;get sheetId(){return this.env.model.getters.getActiveSheetId();}
_getEvOffset(ev){return ev.offsetY;}
_getViewportOffset(){return this.env.model.getters.getActiveMainViewport().top;}
_getClientPosition(ev){return ev.clientY;}
_getElementIndex(position){return this.env.model.getters.getRowIndex(position);}
_getSelectedZoneStart(){return this.env.model.getters.getSelectedZone().top;}
_getSelectedZoneEnd(){return this.env.model.getters.getSelectedZone().bottom;}
_getEdgeScroll(position){return this.env.model.getters.getEdgeScrollRow(position,position,position);}
_getDimensionsInViewport(index){return this.env.model.getters.getRowDimensionsInViewport(this.sheetId,index);}
_getElementSize(index){return this.env.model.getters.getRowSize(this.sheetId,index);}
_getMaxSize(){return this.rowResizerRef.el.clientHeight;}
_updateSize(){const index=this.state.activeElement;const size=this.state.delta+this._getElementSize(index);const rows=this.env.model.getters.getActiveRows();this.env.model.dispatch("RESIZE_COLUMNS_ROWS",{dimension:"ROW",sheetId:this.sheetId,elements:rows.has(index)?[...rows]:[index],size,});}
_moveElements(){const elements=[];const start=this._getSelectedZoneStart();const end=this._getSelectedZoneEnd();for(let rowIndex=start;rowIndex<=end;rowIndex++){elements.push(rowIndex);}
const result=this.env.model.dispatch("MOVE_COLUMNS_ROWS",{sheetId:this.sheetId,sheetName:this.env.model.getters.getActiveSheetName(),dimension:"ROW",base:this.state.base,elements,position:this.state.position,});if(!result.isSuccessful&&result.reasons.includes("WillRemoveExistingMerge")){this.env.raiseError(MergeErrorMessage);}}
_selectElement(index,addDistinctHeader){this.env.model.selection.selectRow(index,addDistinctHeader?"newAnchor":"overrideSelection");}
_increaseSelection(index){this.env.model.selection.selectRow(index,"updateAnchor");}
_fitElementSize(index){const rows=this.env.model.getters.getActiveRows();this.env.model.dispatch("AUTORESIZE_ROWS",{sheetId:this.sheetId,rows:rows.has(index)?[...rows]:[index],});}
_getType(){return"ROW";}
_getActiveElements(){return this.env.model.getters.getActiveRows();}
_getPreviousVisibleElement(index){const sheetId=this.sheetId;let row;for(row=index-1;row>=0;row--){if(!this.env.model.getters.isRowHidden(sheetId,row)){break;}}
return row;}
get mainUnhideHeadersProps(){const{top,bottom}=this.env.model.getters.getActiveMainViewport();const{ySplit}=this.env.model.getters.getPaneDivisions(this.sheetId);const hiddenGroups=this.env.model.getters.getHiddenRowsGroups(this.sheetId);const index=hiddenGroups.findIndex((group)=>group[0]>=ySplit-1);return{headersGroups:hiddenGroups.slice(index),offset:this.env.model.getters.getMainViewportCoordinates().y,headerRange:{start:top,end:bottom},};}
get frozenUnhideHeadersProps(){const{ySplit}=this.env.model.getters.getPaneDivisions(this.sheetId);const hiddenGroups=this.env.model.getters.getHiddenRowsGroups(this.sheetId);const index=hiddenGroups.findIndex((group)=>group[0]>=ySplit-1);return{headersGroups:hiddenGroups.slice(0,index+1),headerRange:{start:0,end:ySplit-1},};}
get frozenContainerStyle(){return cssPropertiesToCss({height:this.env.model.getters.getMainViewportCoordinates().y+"px",});}
get hasFrozenPane(){return this.env.model.getters.getPaneDivisions(this.sheetId).ySplit>0;}}
css`
  .o-overlay {
    .all {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      width: ${HEADER_WIDTH}px;
      height: ${HEADER_HEIGHT}px;
    }
  }
`;class HeadersOverlay extends Component{static props={onOpenContextMenu:Function,};static template="o-spreadsheet-HeadersOverlay";static components={ColResizer,RowResizer};selectAll(){this.env.model.selection.selectAll();}}
const CELL_ANIMATION_DURATION=200;class GridRenderer extends SpreadsheetStore{fingerprints;hoveredTables;hoveredIcon;lastRenderBoxes=new Map();preventNewAnimationsInNextFrame=false;zonesWithPreventedAnimationsInNextFrame=[];animations=new Map();constructor(get){super(get);this.getters=get(ModelStore).getters;this.fingerprints=get(FormulaFingerprintStore);this.hoveredTables=get(HoveredTableStore);this.hoveredIcon=get(HoveredIconStore);}
handle(cmd){switch(cmd.type){case"START":case"ACTIVATE_SHEET":case"ADD_COLUMNS_ROWS":case"REMOVE_COLUMNS_ROWS":this.animations.clear();this.preventNewAnimationsInNextFrame=true;break;case"RESIZE_COLUMNS_ROWS":this.preventNewAnimationsInNextFrame=true;break;case"REDO":this.zonesWithPreventedAnimationsInNextFrame=[];break;case"UNDO":for(const command of cmd.commands){if(command.type==="ADD_COLUMNS_ROWS"||command.type==="REMOVE_COLUMNS_ROWS"||command.type==="RESIZE_COLUMNS_ROWS"){this.animations.clear();this.preventNewAnimationsInNextFrame=true;break;}}
break;case"PASTE":this.zonesWithPreventedAnimationsInNextFrame.push(...this.getters.getSelectedZones());break;case"UPDATE_CELL":const zones=this.getters.getCommandZones(cmd);this.zonesWithPreventedAnimationsInNextFrame.push(...zones);break;}}
get renderingLayers(){return["Background","Headers"];}
drawLayer(renderingContext,layer,timeStamp){switch(layer){case"Background":this.drawGlobalBackground(renderingContext);const oldBoxes=this.lastRenderBoxes;this.lastRenderBoxes=new Map();for(const{zone,rect}of this.getters.getAllActiveViewportsZonesAndRect()){const{ctx}=renderingContext;ctx.save();ctx.beginPath();ctx.rect(rect.x,rect.y,rect.width,rect.height);ctx.clip();const boxesWithoutAnimations=this.getGridBoxes(zone);const boxes=this.getBoxesWithAnimations(boxesWithoutAnimations,oldBoxes,timeStamp);this.drawBackground(renderingContext,boxes);this.drawOverflowingCellBackground(renderingContext,boxes);this.drawCellBackground(renderingContext,boxes);this.drawBorders(renderingContext,boxes);this.drawTexts(renderingContext,boxes);this.drawIcon(renderingContext,boxes);ctx.restore();}
this.drawFrozenPanes(renderingContext);this.preventNewAnimationsInNextFrame=false;this.zonesWithPreventedAnimationsInNextFrame=[];break;case"Headers":if(!this.getters.isDashboard()){this.drawHeaders(renderingContext);this.drawFrozenPanesHeaders(renderingContext);}
break;}}
drawGlobalBackground(renderingContext){const{ctx}=renderingContext;const{width,height}=this.getters.getSheetViewDimensionWithHeaders();ctx.fillStyle="#ffffff";ctx.fillRect(0,0,width+CANVAS_SHIFT,height+CANVAS_SHIFT);}
drawBackground(renderingContext,boxes){const{ctx,thinLineWidth}=renderingContext;const areGridLinesVisible=!this.getters.isDashboard()&&this.getters.getGridLinesVisibility(this.getters.getActiveSheetId());const inset=areGridLinesVisible?0.1*thinLineWidth:0;if(areGridLinesVisible){for(const box of boxes){if(box.skipCellGridLines)
continue;ctx.strokeStyle=CELL_BORDER_COLOR;ctx.lineWidth=thinLineWidth;ctx.strokeRect(box.x+inset,box.y+inset,box.width-2*inset,box.height-2*inset);}}}
drawCellBackground(renderingContext,boxes){const{ctx}=renderingContext;for(const box of boxes){const style=box.style;if(style.fillColor&&style.fillColor!=="#ffffff"){ctx.fillStyle=style.fillColor||"#ffffff";ctx.fillRect(box.x,box.y,box.width,box.height);}
if(box.dataBarFill){ctx.fillStyle=box.dataBarFill.color;const percentage=box.dataBarFill.percentage;const width=box.width*(percentage/100);ctx.fillRect(box.x,box.y,width,box.height);}
if(box?.chip){ctx.save();ctx.beginPath();ctx.rect(box.x,box.y,box.width,box.height);ctx.clip();const chip=box.chip;ctx.fillStyle=chip.color;const radius=10;ctx.beginPath();ctx.roundRect(chip.x,chip.y,chip.width,chip.height,radius);ctx.fill();ctx.restore();}
if(box.overlayColor){ctx.fillStyle=box.overlayColor;ctx.fillRect(box.x,box.y,box.width,box.height);}
if(box.isError){ctx.fillStyle="red";ctx.beginPath();ctx.moveTo(box.x+box.width-5,box.y);ctx.lineTo(box.x+box.width,box.y);ctx.lineTo(box.x+box.width,box.y+5);ctx.fill();}}}
drawOverflowingCellBackground(renderingContext,boxes){const{ctx,thinLineWidth}=renderingContext;for(const box of boxes){if(box.content&&box.isOverflow){const align=box.content.align||"left";let x;let width;const y=box.y+thinLineWidth/2;const height=box.height-thinLineWidth;const clipWidth=Math.min(box.clipRect?.width||Infinity,box.content.width);if(align==="left"){x=box.x+thinLineWidth/2;width=clipWidth-2*thinLineWidth;}
else if(align==="right"){x=box.x+box.width-thinLineWidth/2;width=-clipWidth+2*thinLineWidth;}
else{x=(box.clipRect?.x||box.x+box.width/2-box.content.width/2)+thinLineWidth/2;width=clipWidth-2*thinLineWidth;}
ctx.fillStyle="#ffffff";ctx.fillRect(x,y,width,height);}}}
drawBorders(renderingContext,boxes){const{ctx}=renderingContext;for(const box of boxes){const border=box.border;if(border){const{x,y,width,height}=box;if(border.left){drawBorder(border.left,x,y,x,y+height);}
if(border.top){drawBorder(border.top,x,y,x+width,y);}
if(border.right){drawBorder(border.right,x+width,y,x+width,y+height);}
if(border.bottom){drawBorder(border.bottom,x,y+height,x+width,y+height);}}}
function drawBorder({color,style,opacity},x1,y1,x2,y2){ctx.globalAlpha=opacity??1;ctx.strokeStyle=color;switch(style){case"medium":ctx.lineWidth=2;x1+=y1===y2?-0.5:0.5;x2+=y1===y2?1.5:0.5;y1+=x1===x2?-0.5:0.5;y2+=x1===x2?1.5:0.5;break;case"thick":ctx.lineWidth=3;if(y1===y2){x1--;x2++;}
if(x1===x2){y1--;y2++;}
break;case"dashed":ctx.lineWidth=1;ctx.setLineDash([1,3]);break;case"dotted":ctx.lineWidth=1;if(y1===y2){x1+=0.5;x2+=0.5;}
if(x1===x2){y1+=0.5;y2+=0.5;}
ctx.setLineDash([1,1]);break;case"thin":default:ctx.lineWidth=1;break;}
ctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.stroke();ctx.lineWidth=1;ctx.setLineDash([]);ctx.globalAlpha=1;}}
drawTexts(renderingContext,boxes){const{ctx}=renderingContext;ctx.textBaseline="top";let currentFont;for(const box of boxes){if(box.content){ctx.globalAlpha=box.textOpacity??1;const style=box.style||{};const align=box.content.align||"left";const font=computeTextFont(style);if(font!==currentFont){currentFont=font;ctx.font=font;}
ctx.fillStyle=style.textColor||"#000";ctx.textAlign=align;if(box.clipRect){ctx.save();ctx.beginPath();const{x,y,width,height}=box.clipRect;ctx.rect(x,y,width,height);ctx.clip();}
const x=box.content.x;let y=box.content.y;for(const brokenLine of box.content.textLines){drawDecoratedText(ctx,brokenLine,{x,y},style.underline,style.strikethrough);y+=MIN_CELL_TEXT_MARGIN+box.content.fontSizePx;}
if(box.clipRect){ctx.restore();}
ctx.globalAlpha=1;}}}
drawIcon(renderingContext,boxes){const{ctx}=renderingContext;for(const box of boxes){for(const icon of Object.values(box.icons)){if(!icon){continue;}
const isHovered=deepEquals({id:icon.type,position:icon.position},this.hoveredIcon.hoveredIcon);const svg=isHovered?icon.hoverSvg||icon.svg:icon.svg;if(!svg){continue;}
ctx.save();ctx.globalAlpha=icon.opacity??1;ctx.beginPath();const clipRect=icon.clipRect||box;ctx.rect(clipRect.x,clipRect.y,clipRect.width,clipRect.height);ctx.clip();const iconSize=icon.size;const{x,y}=this.getters.getCellIconRect(icon,box);ctx.translate(x,y);ctx.scale(iconSize/svg.width,iconSize/svg.height);for(const path of svg.paths){ctx.fillStyle=path.fillColor;ctx.fill(getPath2D(path.path));}
ctx.restore();}}}
drawHeaders(renderingContext){const{ctx,thinLineWidth}=renderingContext;const visibleCols=this.getters.getSheetViewVisibleCols();const left=visibleCols[0];const visibleRows=this.getters.getSheetViewVisibleRows();const top=visibleRows[0];const{width,height}=this.getters.getSheetViewDimensionWithHeaders();const selection=this.getters.getSelectedZones();const selectedCols=getZonesCols(selection);const selectedRows=getZonesRows(selection);const sheetId=this.getters.getActiveSheetId();const numberOfCols=this.getters.getNumberCols(sheetId);const numberOfRows=this.getters.getNumberRows(sheetId);const activeCols=this.getters.getActiveCols();const activeRows=this.getters.getActiveRows();ctx.font=`400 ${HEADER_FONT_SIZE}px ${DEFAULT_FONT}`;ctx.textAlign="center";ctx.textBaseline="middle";ctx.lineWidth=thinLineWidth;ctx.strokeStyle="#333";for(const col of visibleCols){const colZone={left:col,right:col,top:0,bottom:numberOfRows-1};const{x,width}=this.getters.getVisibleRect(colZone);const isColActive=activeCols.has(col);const isColSelected=selectedCols.has(col);if(isColActive){ctx.fillStyle=BACKGROUND_HEADER_ACTIVE_COLOR;}
else if(isColSelected){ctx.fillStyle=BACKGROUND_HEADER_SELECTED_COLOR;}
else{ctx.fillStyle=BACKGROUND_HEADER_COLOR;}
ctx.fillRect(x,0,width,HEADER_HEIGHT);}
for(const row of visibleRows){const rowZone={top:row,bottom:row,left:0,right:numberOfCols-1};const{y,height}=this.getters.getVisibleRect(rowZone);const isRowActive=activeRows.has(row);const isRowSelected=selectedRows.has(row);if(isRowActive){ctx.fillStyle=BACKGROUND_HEADER_ACTIVE_COLOR;}
else if(isRowSelected){ctx.fillStyle=BACKGROUND_HEADER_SELECTED_COLOR;}
else{ctx.fillStyle=BACKGROUND_HEADER_COLOR;}
ctx.fillRect(0,y,HEADER_WIDTH,height);}
ctx.beginPath();ctx.moveTo(HEADER_WIDTH,0);ctx.lineTo(HEADER_WIDTH,height);ctx.moveTo(0,HEADER_HEIGHT);ctx.lineTo(width,HEADER_HEIGHT);ctx.strokeStyle=HEADER_BORDER_COLOR;ctx.stroke();for(const col of visibleCols){const colName=numberToLetters(col);ctx.fillStyle=activeCols.has(col)?"#fff":TEXT_HEADER_COLOR;const zone={left:col,right:col,top:top,bottom:top};const{x:colStart,width:colSize}=this.getters.getRect(zone);const{x,width}=this.getters.getVisibleRect(zone);ctx.save();ctx.beginPath();ctx.rect(x,0,width,HEADER_HEIGHT);ctx.clip();ctx.fillText(colName,colStart+colSize/2,HEADER_HEIGHT/2);ctx.restore();ctx.beginPath();ctx.moveTo(colStart+colSize,0);ctx.lineTo(colStart+colSize,HEADER_HEIGHT);ctx.stroke();}
for(const row of visibleRows){ctx.fillStyle=activeRows.has(row)?"#fff":TEXT_HEADER_COLOR;const zone={top:row,bottom:row,left:left,right:left};const{y:rowStart,height:rowSize}=this.getters.getRect(zone);const{y,height}=this.getters.getVisibleRect(zone);ctx.save();ctx.beginPath();ctx.rect(0,y,HEADER_WIDTH,height);ctx.clip();ctx.fillText(String(row+1),HEADER_WIDTH/2,rowStart+rowSize/2);ctx.restore();ctx.beginPath();ctx.moveTo(0,rowStart+rowSize);ctx.lineTo(HEADER_WIDTH,rowStart+rowSize);ctx.stroke();}}
drawFrozenPanesHeaders(renderingContext){const{ctx,thinLineWidth}=renderingContext;const{x:offsetCorrectionX,y:offsetCorrectionY}=this.getters.getMainViewportCoordinates();const widthCorrection=this.getters.isDashboard()?0:HEADER_WIDTH;const heightCorrection=this.getters.isDashboard()?0:HEADER_HEIGHT;ctx.lineWidth=6*thinLineWidth;ctx.strokeStyle=FROZEN_PANE_HEADER_BORDER_COLOR;ctx.beginPath();if(offsetCorrectionX){ctx.moveTo(widthCorrection+offsetCorrectionX,0);ctx.lineTo(widthCorrection+offsetCorrectionX,heightCorrection);}
if(offsetCorrectionY){ctx.moveTo(0,heightCorrection+offsetCorrectionY);ctx.lineTo(widthCorrection,heightCorrection+offsetCorrectionY);}
ctx.stroke();}
drawFrozenPanes(renderingContext){const{ctx,thinLineWidth}=renderingContext;const{x:offsetCorrectionX,y:offsetCorrectionY}=this.getters.getMainViewportCoordinates();const visibleCols=this.getters.getSheetViewVisibleCols();const left=visibleCols[0];const right=visibleCols[visibleCols.length-1];const visibleRows=this.getters.getSheetViewVisibleRows();const top=visibleRows[0];const bottom=visibleRows[visibleRows.length-1];const viewport={left,right,top,bottom};const rect=this.getters.getVisibleRect(viewport);const widthCorrection=this.getters.isDashboard()?0:HEADER_WIDTH;const heightCorrection=this.getters.isDashboard()?0:HEADER_HEIGHT;ctx.lineWidth=6*thinLineWidth;ctx.strokeStyle=FROZEN_PANE_BORDER_COLOR;ctx.beginPath();if(offsetCorrectionX){ctx.moveTo(widthCorrection+offsetCorrectionX,heightCorrection);ctx.lineTo(widthCorrection+offsetCorrectionX,rect.height+heightCorrection);}
if(offsetCorrectionY){ctx.moveTo(widthCorrection,heightCorrection+offsetCorrectionY);ctx.lineTo(rect.width+widthCorrection,heightCorrection+offsetCorrectionY);}
ctx.stroke();}
findNextEmptyCol(base,max,row){const sheetId=this.getters.getActiveSheetId();let col=base;while(col<max){const position={sheetId,col:col+1,row};const nextCell=this.getters.getEvaluatedCell(position);const nextCellBorder=this.getters.getCellComputedBorder(position);const doesCellHaveGridIcon=this.getters.doesCellHaveGridIcon(position);if(nextCell.type!==CellValueType.empty||this.getters.isInMerge(position)||nextCellBorder?.left||doesCellHaveGridIcon){return col;}
col++;}
return col;}
findPreviousEmptyCol(base,min,row){const sheetId=this.getters.getActiveSheetId();let col=base;while(col>min){const position={sheetId,col:col-1,row};const previousCell=this.getters.getEvaluatedCell(position);const previousCellBorder=this.getters.getCellComputedBorder(position);const doesCellHaveGridIcon=this.getters.doesCellHaveGridIcon(position);if(previousCell.type!==CellValueType.empty||this.getters.isInMerge(position)||previousCellBorder?.right||doesCellHaveGridIcon){return col;}
col--;}
return col;}
computeCellAlignment(position,isOverflowing){const cell=this.getters.getCell(position);if(cell?.isFormula&&this.getters.shouldShowFormulas()){return"left";}
const{align}=this.getters.getCellStyle(position);const evaluatedCell=this.getters.getEvaluatedCell(position);if(isOverflowing&&evaluatedCell.type===CellValueType.number){return align!=="center"?"left":align;}
return align||evaluatedCell.defaultAlign;}
createZoneBox(sheetId,zone,viewport){const{left,right}=viewport;const col=zone.left;const row=zone.top;const position={sheetId,col,row};const cell=this.getters.getEvaluatedCell(position);const showFormula=this.getters.shouldShowFormulas();const{x,y,width,height}=this.getters.getRect(zone);const chipStyle=this.getters.getDataValidationChipStyle(position);let style=this.getters.getCellComputedStyle(position);if(this.fingerprints.isEnabled){const fingerprintColor=this.fingerprints.colors.get(position);style={...style,fillColor:fingerprintColor};}
if(chipStyle?.textColor){style={...style,textColor:chipStyle.textColor};}
const dataBarFill=this.fingerprints.isEnabled?undefined:this.getters.getConditionalDataBar(position);const iconsList=this.getters.getCellIcons(position);const cellIcons={left:iconsList.find((icon)=>icon?.horizontalAlign==="left"),right:iconsList.find((icon)=>icon?.horizontalAlign==="right"),center:iconsList.find((icon)=>icon?.horizontalAlign==="center"),};const box={id:zoneToXc(zone),x,y,width,height,border:this.getters.getCellComputedBorder(position)||undefined,style,dataBarFill,overlayColor:this.hoveredTables.overlayColors.get(position),isError:(cell.type===CellValueType.error&&!!cell.message)||this.getters.isDataValidationInvalid(position),icons:cellIcons,disabledAnimation:this.zonesWithPreventedAnimationsInNextFrame.some((z)=>isZoneInside(zone,z)||overlap(zone,z)),};const fontSizePX=computeTextFontSizeInPixels(box.style);if(cell.type===CellValueType.empty||box.icons.center){return box;}
const wrapping=style.wrapping||"overflow";const wrapText=wrapping==="wrap"&&!showFormula;const maxWidth=width-2*MIN_CELL_TEXT_MARGIN;const multiLineText=this.getters.getCellMultiLineText(position,{maxWidth,wrapText});const textWidth=Math.max(...multiLineText.map((line)=>this.getters.getTextWidth(line,style)+MIN_CELL_TEXT_MARGIN));const chipMargin=chipStyle?DATA_VALIDATION_CHIP_MARGIN:0;const leftIconWidth=box.icons.left?box.icons.left.size+box.icons.left.margin:0;const leftMargin=leftIconWidth+chipMargin;const rightIconWidth=box.icons.right?box.icons.right.size+box.icons.right.margin:0;const rightMargin=rightIconWidth+chipMargin;const contentWidth=leftMargin+textWidth+rightMargin;const align=this.computeCellAlignment(position,contentWidth>width);const numberOfLines=multiLineText.length;const contentY=Math.round(this.getters.computeTextYCoordinate(box,fontSizePX,style.verticalAlign,numberOfLines));let contentX=box.x;if(align==="left"){contentX+=MIN_CELL_TEXT_MARGIN+leftMargin;}
else if(align==="right"){contentX+=box.width-MIN_CELL_TEXT_MARGIN-rightMargin;}
else{contentX+=box.width/2;}
contentX=Math.round(contentX);const textHeight=computeTextLinesHeight(fontSizePX,numberOfLines);box.content={textLines:multiLineText,width:wrapping==="overflow"?textWidth:width,align,x:contentX,y:contentY,fontSizePx:fontSizePX,};if(chipStyle?.fillColor){const chipMarginLeft=leftMargin;const chipMarginRight=DATA_VALIDATION_CHIP_MARGIN;box.chip={color:chipStyle.fillColor,width:box.width-chipMarginLeft-chipMarginRight,height:textHeight+2,x:box.x+chipMarginLeft,y:contentY-2,};}
const isOverflowing=contentWidth>width||fontSizePX>height;if(box.icons.left||box.icons.right||box.chip){box.clipRect={x:box.x+leftMargin,y:box.y,width:Math.max(0,width-leftMargin-rightMargin),height,};}
else if(isOverflowing&&wrapping==="overflow"){let nextColIndex,previousColIndex;const isCellInMerge=this.getters.isInMerge(position);if(isCellInMerge){nextColIndex=this.getters.getMerge(position).right;previousColIndex=col;}
else{nextColIndex=box.border?.right?zone.right:this.findNextEmptyCol(col,right,row);previousColIndex=box.border?.left?zone.left:this.findPreviousEmptyCol(col,left,row);box.isOverflow=true;}
switch(align){case"left":{const emptyZoneOnTheLeft=positionToZone({col:nextColIndex,row});const{x,y,width,height}=this.getters.getVisibleRect(union(zone,emptyZoneOnTheLeft));if(width<contentWidth||fontSizePX>height||multiLineText.length>1){box.clipRect={x,y,width,height};}
break;}
case"right":{const emptyZoneOnTheRight=positionToZone({col:previousColIndex,row});const{x,y,width,height}=this.getters.getVisibleRect(union(zone,emptyZoneOnTheRight));if(width<contentWidth||fontSizePX>height||multiLineText.length>1){box.clipRect={x,y,width,height};}
break;}
case"center":{const emptyZone={...zone,left:previousColIndex,right:nextColIndex,};const{x,y,height,width}=this.getters.getVisibleRect(emptyZone);const halfContentWidth=contentWidth/2;const boxMiddle=box.x+box.width/2;if(x+width<boxMiddle+halfContentWidth||x>boxMiddle-halfContentWidth||fontSizePX>height||multiLineText.length>1){const clipX=x>boxMiddle-halfContentWidth?x:boxMiddle-halfContentWidth;const clipWidth=x+width-clipX;box.clipRect={x:clipX,y,width:clipWidth,height};}
break;}}}
else if(wrapping==="clip"||wrapping==="wrap"||multiLineText.length>1){box.clipRect={x:box.x,y:box.y,width,height,};}
return box;}
getGridBoxes(zone){const boxes=[];const visibleCols=this.getters.getSheetViewVisibleCols().filter((col)=>col>=zone.left&&col<=zone.right);const left=visibleCols[0];const right=visibleCols[visibleCols.length-1];const visibleRows=this.getters.getSheetViewVisibleRows().filter((row)=>row>=zone.top&&row<=zone.bottom);const top=visibleRows[0];const bottom=visibleRows[visibleRows.length-1];const viewport={left,right,top,bottom};const sheetId=this.getters.getActiveSheetId();for(const row of visibleRows){for(const col of visibleCols){const position={sheetId,col,row};if(this.getters.isInMerge(position)){continue;}
boxes.push(this.createZoneBox(sheetId,positionToZone(position),viewport));}}
for(const merge of this.getters.getMerges(sheetId)){if(this.getters.isMergeHidden(sheetId,merge)){continue;}
if(overlap(merge,viewport)){const box=this.createZoneBox(sheetId,merge,viewport);const borderBottomRight=this.getters.getCellComputedBorder({sheetId,col:merge.right,row:merge.bottom,});box.border={...box.border,bottom:borderBottomRight?borderBottomRight.bottom:undefined,right:borderBottomRight?borderBottomRight.right:undefined,};box.isMerge=true;boxes.push(box);}}
return boxes;}
getBoxesWithAnimations(boxes,oldBoxes,timeStamp){this.updateAnimationsProgress(timeStamp);this.addNewAnimations(boxes,oldBoxes,timeStamp);if(this.animations.size>0){this.renderer.startAnimation("grid_renderer_animation");return this.updateBoxesWithAnimations(boxes);}
else{this.renderer.stopAnimation("grid_renderer_animation");return boxes;}}
updateBoxesWithAnimations(boxes){const boxesWithAnimations=[];for(const box of boxes){const animation=this.animations.get(box.id);if(!animation){boxesWithAnimations.push(box);continue;}
const animatedBox=deepCopy(box);boxesWithAnimations.push(animatedBox);for(const animationId of animation.animationTypes){const animationItem=cellAnimationRegistry.get(animationId);const newBoxes=animationItem.updateAnimation(animation.progress,animatedBox,animation.oldBox,box);if(newBoxes){boxesWithAnimations.push(...newBoxes.newBoxes);}}}
return boxesWithAnimations;}
updateAnimationsProgress(timeStamp){if(timeStamp===undefined){return;}
for(const boxId of this.animations.keys()){const animation=this.animations.get(boxId);if(animation.startTime===undefined){animation.startTime=timeStamp;continue;}
const elapsedTime=timeStamp-animation.startTime;const progress=Math.min(1,elapsedTime/CELL_ANIMATION_DURATION);if(progress>=1){this.animations.delete(boxId);}
animation.progress=progress;}}
addNewAnimations(boxes,oldBoxes,timeStamp){for(const box of boxes){this.lastRenderBoxes.set(box.id,box);const oldBox=oldBoxes.get(box.id);if(this.preventNewAnimationsInNextFrame||!oldBox||box.disabledAnimation){continue;}
const animationTypes=[];for(const animationItem of cellAnimationRegistry.getAll()){if(animationItem.hasAnimation(oldBox,box)){animationTypes.push(animationItem.id);}}
const animation=animationTypes.length>0?{animationTypes,oldBox,progress:0,startTime:timeStamp}:undefined;if(animation){this.animations.set(box.id,animation);}}}}
function useGridDrawing(refName,model,canvasSize){const canvasRef=useRef(refName);useEffect(drawGrid);const rendererStore=useStore(RendererStore);useStore(GridRenderer);function drawGrid(){const canvas=canvasRef.el;const dpr=window.devicePixelRatio||1;const ctx=canvas.getContext("2d",{alpha:false});const thinLineWidth=0.4*dpr;const renderingContext={ctx,dpr,thinLineWidth,};const{width,height}=canvasSize();canvas.style.width=`${width}px`;canvas.style.height=`${height}px`;canvas.width=width*dpr;canvas.height=height*dpr;canvas.setAttribute("style",`width:${width}px;height:${height}px;`);if(width===0||height===0){return;}
ctx.translate(-CANVAS_SHIFT,-CANVAS_SHIFT);ctx.scale(dpr,dpr);rendererStore.draw(renderingContext);}}
const friction=0.95;const verticalScrollFactor=1;const horizontalScrollFactor=1;const resetTimeoutDuration=100;function useTouchScroll(ref,updateScroll,canMoveUp){let lastX=0;let lastY=0;let velocityX=0;let velocityY=0;let isMouseDown=false;let lastTime=0;let resetTimeout=null;useRefListener(ref,"touchstart",onTouchStart,{capture:false});useRefListener(ref,"touchmove",onTouchMove,{capture:false});useRefListener(ref,"touchend",onTouchEnd,{capture:false});function onTouchStart(event){isMouseDown=true;({clientX:lastX,clientY:lastY}=event.touches[0]);velocityX=0;velocityY=0;}
function onTouchMove(event){if(!isMouseDown)
return;if(resetTimeout){clearTimeout(resetTimeout);resetTimeout=null;}
const currentTime=Date.now();const{clientX,clientY}=event.touches[0];const deltaX=lastX-clientX;const deltaY=lastY-clientY;const elapsedTime=currentTime-lastTime;if(!elapsedTime){return;}
velocityX=deltaX/elapsedTime;velocityY=deltaY/elapsedTime;lastX=clientX;lastY=clientY;lastTime=currentTime;if(canMoveUp()){if(event.cancelable){event.preventDefault();}
event.stopPropagation();}
resetTimeout=setTimeout(()=>{velocityX=0;velocityY=0;},resetTimeoutDuration);updateScroll(deltaX*horizontalScrollFactor,deltaY*verticalScrollFactor);}
function onTouchEnd(ev){isMouseDown=false;lastX=lastY=0;if(resetTimeout){clearTimeout(resetTimeout);}
velocityX*=1.2;velocityY*=1.2;requestAnimationFrame(scroll);}
function scroll(){if(Math.abs(velocityX)<0.05){velocityX=0;}
if(Math.abs(velocityY)<0.05){velocityY=0;}
if(!velocityX&&!velocityY){return;}
const currentTime=Date.now();const elapsedTime=Math.abs(currentTime-lastTime);const deltaX=velocityX*elapsedTime;const deltaY=velocityY*elapsedTime;updateScroll(deltaX*horizontalScrollFactor,deltaY*verticalScrollFactor);lastTime=currentTime;velocityX*=friction;velocityY*=friction;requestAnimationFrame(scroll);}}
function useWheelHandler(handler){function normalize(val,deltaMode){return val*(deltaMode===0?1:DEFAULT_CELL_HEIGHT);}
const onMouseWheel=(ev)=>{const deltaX=normalize(ev.shiftKey&&!isMacOS()?ev.deltaY:ev.deltaX,ev.deltaMode);const deltaY=normalize(ev.shiftKey&&!isMacOS()?ev.deltaX:ev.deltaY,ev.deltaMode);handler(deltaX,deltaY);};return onMouseWheel;}
css`
  .o-border {
    position: absolute;
    &:hover {
      cursor: grab;
    }
  }
  .o-moving {
    cursor: grabbing;
  }
`;class Border extends Component{static template="o-spreadsheet-Border";static props={zone:Object,orientation:String,isMoving:Boolean,onMoveHighlight:Function,};get style(){const isTop=["n","w","e"].includes(this.props.orientation);const isLeft=["n","w","s"].includes(this.props.orientation);const isHorizontal=["n","s"].includes(this.props.orientation);const isVertical=["w","e"].includes(this.props.orientation);const z=this.props.zone;const margin=2;const rect=this.env.model.getters.getVisibleRect(z);const left=rect.x;const right=rect.x+rect.width-2*margin;const top=rect.y;const bottom=rect.y+rect.height-2*margin;const lineWidth=4;const leftValue=isLeft?left:right;const topValue=isTop?top:bottom;const widthValue=isHorizontal?right-left:lineWidth;const heightValue=isVertical?bottom-top:lineWidth;return cssPropertiesToCss({left:`${leftValue}px`,top:`${topValue}px`,width:`${widthValue}px`,height:`${heightValue}px`,});}
onMouseDown(ev){this.props.onMoveHighlight(ev);}}
const MOBILE_HANDLER_WIDTH=40;css`
  .o-corner {
    position: absolute;
  }

  .o-corner-button {
    border: 1px solid white;
    height: ${AUTOFILL_EDGE_LENGTH}px;
    width: ${AUTOFILL_EDGE_LENGTH}px;
  }
  .o-corner-nw,
  .o-corner-se {
    &:hover {
      cursor: nwse-resize;
    }
  }
  .o-corner-ne,
  .o-corner-sw {
    &:hover {
      cursor: nesw-resize;
    }
  }
  .o-resizing {
    cursor: grabbing;
  }
`;class Corner extends Component{static template="o-spreadsheet-Corner";static props={zone:Object,color:String,orientation:String,isResizing:Boolean,onResizeHighlight:Function,};dirX;dirY;setup(){const{dirX,dirY}=orientationToDir(this.props.orientation);this.dirX=dirX;this.dirY=dirY;}
get handlerStyle(){const z=this.props.zone;const rect=this.env.model.getters.getVisibleRect({left:this.dirX===1?z.right:z.left,right:this.dirX===-1?z.left:z.right,top:this.dirY===1?z.bottom:z.top,bottom:this.dirY===-1?z.top:z.bottom,});if(rect.width*rect.height===0){return`display: none !important;`;}
const leftValue=rect.x+rect.width/2+(this.dirX*rect.width)/2;const topValue=rect.y+rect.height/2+(this.dirY*rect.height)/2;const edgeLength=this.getHandlerEdgeLength();const css={left:`${leftValue - edgeLength / 2}px`,top:`${topValue - edgeLength / 2}px`,height:`${edgeLength}px`,width:`${edgeLength}px`,};if(this.env.isMobile()){css["border-radius"]=`${edgeLength / 2}px`;}
return cssPropertiesToCss(css);}
getHandlerEdgeLength(){return this.env.isMobile()?MOBILE_HANDLER_WIDTH:AUTOFILL_EDGE_LENGTH;}
get buttonLook(){const css={"background-color":this.props.color,cursor:`${this.props.orientation}-resize`,};if(this.env.isMobile()){css["border-radius"]=`${AUTOFILL_EDGE_LENGTH / 2}px`;}
return cssPropertiesToCss(css);}
onMouseDown(ev){this.props.onResizeHighlight(ev,this.dirX,this.dirY);}}
function orientationToDir(or){const dirX=or.includes("w")?-1:or.includes("e")?1:0;const dirY=or.includes("n")?-1:or.includes("s")?1:0;return{dirX,dirY};}
css`
  .o-highlight {
    z-index: ${ComponentsImportance.Highlight};
  }
`;class Highlight extends Component{static template="o-spreadsheet-Highlight";static props={range:Object,color:String,};static components={Corner,Border,};highlightState=useState({shiftingMode:"none",});dragNDropGrid=useDragAndDropBeyondTheViewport(this.env);get cornerOrientations(){if(!this.env.isMobile()){return["nw","ne","sw","se"];}
const z=this.props.range.unboundedZone;if(z.bottom===undefined){return["w","e"];}
else if(z.right===undefined){return["n","s"];}
else{return["nw","se"];}}
onResizeHighlight(ev,dirX,dirY){const activeSheetId=this.env.model.getters.getActiveSheetId();this.highlightState.shiftingMode="isResizing";const z=this.props.range.zone;const pivotCol=dirX===1?z.left:z.right;const pivotRow=dirY===1?z.top:z.bottom;let lastCol=dirX===1?z.right:z.left;let lastRow=dirY===1?z.bottom:z.top;let currentZone=z;let scrollDirection="all";if(this.env.isMobile()){scrollDirection=dirX===0?"vertical":dirY===0?"horizontal":"all";}
this.env.model.dispatch("START_CHANGE_HIGHLIGHT",{zone:currentZone});const mouseMove=(col,row)=>{if(lastCol!==col||lastRow!==row){let{left,right,top,bottom}=currentZone;if(scrollDirection!=="horizontal"){lastRow=lastRow=clip(row===-1?lastRow:row,0,this.env.model.getters.getNumberRows(activeSheetId)-1);top=Math.min(pivotRow,lastRow);bottom=Math.max(pivotRow,lastRow);}
if(scrollDirection!=="vertical"){lastCol=clip(col===-1?lastCol:col,0,this.env.model.getters.getNumberCols(activeSheetId)-1);left=Math.min(pivotCol,lastCol);right=Math.max(pivotCol,lastCol);}
const newZone={left,right,top,bottom};if(!isEqual(newZone,currentZone)){this.env.model.selection.selectZone({cell:{col:newZone.left,row:newZone.top},zone:newZone,},{unbounded:true});currentZone=newZone;}}};const mouseUp=()=>{this.highlightState.shiftingMode="none";};this.dragNDropGrid.start(ev,mouseMove,mouseUp,scrollDirection);}
onMoveHighlight(ev){this.highlightState.shiftingMode="isMoving";const z=this.props.range.zone;const position=gridOverlayPosition();const activeSheetId=this.env.model.getters.getActiveSheetId();const initCol=this.env.model.getters.getColIndex(ev.clientX-position.left);const initRow=this.env.model.getters.getRowIndex(ev.clientY-position.top);const deltaColMin=-z.left;const deltaColMax=this.env.model.getters.getNumberCols(activeSheetId)-z.right-1;const deltaRowMin=-z.top;const deltaRowMax=this.env.model.getters.getNumberRows(activeSheetId)-z.bottom-1;let currentZone=z;this.env.model.dispatch("START_CHANGE_HIGHLIGHT",{zone:currentZone});let lastCol=initCol;let lastRow=initRow;const mouseMove=(col,row)=>{if(lastCol!==col||lastRow!==row){lastCol=col===-1?lastCol:col;lastRow=row===-1?lastRow:row;const deltaCol=clip(lastCol-initCol,deltaColMin,deltaColMax);const deltaRow=clip(lastRow-initRow,deltaRowMin,deltaRowMax);const newZone={left:z.left+deltaCol,top:z.top+deltaRow,right:z.right+deltaCol,bottom:z.bottom+deltaRow,};if(!isEqual(newZone,currentZone)){this.env.model.selection.selectZone({cell:{col:newZone.left,row:newZone.top},zone:newZone,},{unbounded:true});currentZone=newZone;}}};const mouseUp=()=>{this.highlightState.shiftingMode="none";};this.dragNDropGrid.start(ev,mouseMove,mouseUp);}}
let ScrollBar$1=class ScrollBar{direction;el;constructor(el,direction){this.el=el;this.direction=direction;}
get scroll(){return this.direction==="horizontal"?this.el.scrollLeft:this.el.scrollTop;}
set scroll(value){if(this.direction==="horizontal"){this.el.scrollLeft=value;}
else{this.el.scrollTop=value;}}};css`
  .o-scrollbar {
    position: absolute;
    overflow: auto;
    z-index: ${ComponentsImportance.ScrollBar};
    background-color: ${BACKGROUND_GRAY_COLOR};

    &.corner {
      box-sizing: content-box;
      right: 0px;
      bottom: 0px;
      height: ${SCROLLBAR_WIDTH}px;
      width: ${SCROLLBAR_WIDTH}px;
      border-top: 1px solid #e2e3e3;
      border-left: 1px solid #e2e3e3;
    }
  }
`;class ScrollBar extends Component{static props={width:{type:Number,optional:true},height:{type:Number,optional:true},direction:String,position:Object,offset:Number,onScroll:Function,};static template=xml`
    <div
        t-attf-class="o-scrollbar {{props.direction}}"
        t-on-scroll="onScroll"
        t-ref="scrollbar"
        t-att-style="positionCss">
      <div t-att-style="sizeCss"/>
    </div>
  `;static defaultProps={width:1,height:1,};scrollbarRef;scrollbar;setup(){this.scrollbarRef=useRef("scrollbar");this.scrollbar=new ScrollBar$1(this.scrollbarRef.el,this.props.direction);onMounted(()=>{this.scrollbar.el=this.scrollbarRef.el;});useEffect(()=>{if(this.scrollbar.scroll!==this.props.offset){this.scrollbar.scroll=this.props.offset;}},()=>[this.scrollbar.scroll,this.props.offset]);}
get sizeCss(){return cssPropertiesToCss({width:`${this.props.width}px`,height:`${this.props.height}px`,});}
get positionCss(){return cssPropertiesToCss(this.props.position);}
onScroll(ev){if(this.props.offset!==this.scrollbar.scroll){this.props.onScroll(this.scrollbar.scroll);}}}
class HorizontalScrollBar extends Component{static props={leftOffset:{type:Number,optional:true},};static components={ScrollBar};static template=xml`
      <ScrollBar
        t-if="isDisplayed"
        width="width"
        position="position"
        offset="offset"
        direction="'horizontal'"
        onScroll.bind="onScroll"
      />`;static defaultProps={leftOffset:0,};get offset(){return this.env.model.getters.getActiveSheetScrollInfo().scrollX;}
get width(){return this.env.model.getters.getMainViewportRect().width;}
get isDisplayed(){const{xRatio}=this.env.model.getters.getFrozenSheetViewRatio(this.env.model.getters.getActiveSheetId());return xRatio<1;}
get position(){const{x}=this.env.model.getters.getMainViewportRect();return{left:`${this.props.leftOffset + x}px`,bottom:"0px",height:`${SCROLLBAR_WIDTH}px`,right:isBrowserFirefox()?`${SCROLLBAR_WIDTH}px`:"0",};}
onScroll(offset){const{scrollY}=this.env.model.getters.getActiveSheetScrollInfo();this.env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:offset,offsetY:scrollY,});}}
class VerticalScrollBar extends Component{static props={topOffset:{type:Number,optional:true},};static components={ScrollBar};static template=xml`
    <ScrollBar
      t-if="isDisplayed"
      height="height"
      position="position"
      offset="offset"
      direction="'vertical'"
      onScroll.bind="onScroll"
    />`;static defaultProps={topOffset:0,};get offset(){return this.env.model.getters.getActiveSheetScrollInfo().scrollY;}
get height(){return this.env.model.getters.getMainViewportRect().height;}
get isDisplayed(){const{yRatio}=this.env.model.getters.getFrozenSheetViewRatio(this.env.model.getters.getActiveSheetId());return yRatio<1;}
get position(){const{y}=this.env.model.getters.getMainViewportRect();return{top:`${this.props.topOffset + y}px`,right:"0px",width:`${SCROLLBAR_WIDTH}px`,bottom:isBrowserFirefox()?`${SCROLLBAR_WIDTH}px`:"0",};}
onScroll(offset){const{scrollX}=this.env.model.getters.getActiveSheetScrollInfo();this.env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:scrollX,offsetY:offset,});}}
class Selection extends Component{static template="o-spreadsheet-Selection";static props={};static components={Highlight};get highlightProps(){const sheetId=this.env.model.getters.getActiveSheetId();const zone=this.env.model.getters.getUnboundedZone(sheetId,this.env.model.getters.getSelectedZone());const range=this.env.model.getters.getRangeFromZone(sheetId,zone);return{range,color:SELECTION_BORDER_COLOR};}}
class ChartDataSeries extends Component{static template="o-spreadsheet.ChartDataSeries";static components={SelectionInput,Section};static props={ranges:Array,hasSingleRange:{type:Boolean,optional:true},onSelectionChanged:Function,onSelectionReordered:{type:Function,optional:true},onSelectionRemoved:{type:Function,optional:true},onSelectionConfirmed:Function,title:{type:String,optional:true},maxNumberOfUsedRanges:{type:Number,optional:true},datasetOrientation:{type:String,optional:true},canChangeDatasetOrientation:{type:Boolean,optional:true},onFlipAxis:{type:Function,optional:true},};get ranges(){return this.props.ranges.map((r)=>r.dataRange);}
get disabledRanges(){return this.props.ranges.map((r,i)=>this.props.maxNumberOfUsedRanges?i>=this.props.maxNumberOfUsedRanges:false);}
get colors(){return this.props.ranges.map((r)=>r.backgroundColor);}
get title(){if(this.props.title){return this.props.title;}
return this.props.hasSingleRange?_t("Data range"):_t("Data series");}}
class ChartErrorSection extends Component{static template="o-spreadsheet.ChartErrorSection";static components={Section,ValidationMessages};static props={messages:{type:Array,element:String}};}
class ChartLabelRange extends Component{static template="o-spreadsheet.ChartLabelRange";static components={SelectionInput,Checkbox,Section};static props={title:{type:String,optional:true},range:String,isInvalid:Boolean,onSelectionChanged:Function,onSelectionConfirmed:Function,options:{type:Array,optional:true},};static defaultProps={title:_t("Categories / Labels"),options:[],};}
class GenericChartConfigPanel extends Component{static template="o-spreadsheet-GenericChartConfigPanel";static components={ChartDataSeries,ChartLabelRange,Section,Checkbox,ChartErrorSection,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,};state=useState({datasetDispatchResult:undefined,labelsDispatchResult:undefined,});dataSets=[];labelRange;datasetOrientation=undefined;chartTerms=ChartTerms;setup(){this.dataSets=this.props.definition.dataSets;this.labelRange=this.props.definition.labelRange;this.datasetOrientation=this.computeDatasetOrientation();}
get errorMessages(){const cancelledReasons=[...(this.state.datasetDispatchResult?.reasons||[]),...(this.state.labelsDispatchResult?.reasons||[]),].filter((reason)=>reason!=="NoChanges");return cancelledReasons.map((error)=>ChartTerms.Errors[error]||ChartTerms.Errors.Unexpected);}
get isDatasetInvalid(){return!!this.state.datasetDispatchResult?.isCancelledBecause("InvalidDataSet");}
get isLabelInvalid(){return!!this.state.labelsDispatchResult?.isCancelledBecause("InvalidLabelRange");}
get dataSetsHaveTitleLabel(){return this.datasetOrientation==="rows"?_t("Use col %(column_name)s as headers",{column_name:numberToLetters(this.calculateHeaderPosition()||0),}):_t("Use row %(row_position)s as headers",{row_position:this.calculateHeaderPosition()||"",});}
getLabelRangeOptions(){const definition=this.props.definition;return[{name:"aggregated",label:this.chartTerms.AggregatedChart,value:("aggregated"in definition?definition.aggregated:false)??false,onChange:this.onUpdateAggregated.bind(this),},{name:"dataSetsHaveTitle",label:this.dataSetsHaveTitleLabel,value:definition.dataSetsHaveTitle,onChange:this.onUpdateDataSetsHaveTitle.bind(this),},];}
onUpdateDataSetsHaveTitle(dataSetsHaveTitle){this.props.updateChart(this.props.figureId,{dataSetsHaveTitle,});}
get canChangeDatasetOrientation(){const sheetNames=new Set();const datasetZones=[];const currentSheetName=this.env.model.getters.getActiveSheetName();const ranges=this.dataSets.map((ds)=>ds.dataRange);if(this.labelRange){ranges.push(this.labelRange);}
for(const range of ranges){if(!isXcRepresentation(range)){return false;}
const reference=splitReference(range);const zone=toUnboundedZone(reference.xc);if(zone.bottom===undefined||zone.right===undefined){return false;}
datasetZones.push(zone);sheetNames.add(reference.sheetName||currentSheetName);if(sheetNames.size>1){return false;}}
const mergedZones=mergeContiguousZones(datasetZones);if(mergedZones.length!==1){return false;}
const{left,right,top,bottom}=mergedZones[0];if(datasetZones.some((zone)=>(zone.top!==top||zone.bottom!==bottom)&&(zone.left!==left||zone.right!==right))){return false;}
return true;}
computeDatasetOrientation(){let anyRow=false;let anyColumn=false;for(const dataSet of this.dataSets){if(!isXcRepresentation(dataSet.dataRange)){return undefined;}
const zone=toUnboundedZone(dataSet.dataRange);if(zone.bottom===undefined||zone.right===undefined){return undefined;}
if(zone.top===zone.bottom){anyRow=true;}
if(zone.left===zone.right){anyColumn=true;}}
if(anyRow&&!anyColumn){return"rows";}
else if(!anyRow&&anyColumn){return"columns";}
return undefined;}
setDatasetOrientation(datasetOrientation){const oldDataSets=this.props.definition.dataSets;const dataRanges=oldDataSets.map((d)=>d.dataRange);const dataSets=this.transposeDataSet([this.props.definition.labelRange,...dataRanges],datasetOrientation);if(dataSets.length===0){return;}
const labelRange=dataSets.length>1?dataSets.shift().dataRange:"";this.props.updateChart(this.props.figureId,{labelRange,dataSets,});this.dataSets=dataSets;this.labelRange=labelRange;this.datasetOrientation=datasetOrientation;}
onDataSeriesRangesChanged(ranges){this.dataSets=ranges.map((dataRange,i)=>({...this.dataSets?.[i],dataRange,}));this.state.datasetDispatchResult=this.props.canUpdateChart(this.props.figureId,{dataSets:this.dataSets,});}
onDataSeriesReordered(indexes){const colorGenerator=getChartColorsGenerator({dataSets:this.dataSets},this.dataSets.length);this.datasetOrientation=undefined;const colors=this.dataSets.map((ds)=>colorGenerator.next());this.dataSets=indexes.map((i)=>({backgroundColor:colors[i],...this.dataSets[i],}));this.state.datasetDispatchResult=this.props.updateChart(this.props.figureId,{dataSets:this.dataSets,});}
onDataSeriesRemoved(index){const colorGenerator=getChartColorsGenerator({dataSets:this.dataSets},this.dataSets.length);const colors=this.dataSets.map((ds)=>colorGenerator.next());this.dataSets=this.dataSets.map((ds,i)=>({backgroundColor:colors[i],...ds,})).filter((_,i)=>i!==index);this.state.datasetDispatchResult=this.props.updateChart(this.props.figureId,{dataSets:this.dataSets,});}
onDataSeriesConfirmed(){this.dataSets=this.splitRanges;this.datasetOrientation=this.computeDatasetOrientation();this.state.datasetDispatchResult=this.props.updateChart(this.props.figureId,{dataSets:this.dataSets,});if(this.state.datasetDispatchResult.isSuccessful){this.dataSets=this.env.model.getters.getChartDefinition(this.props.figureId).dataSets;}}
get splitRanges(){const postProcessedRanges=[];for(const dataSet of this.dataSets){const range=dataSet.dataRange;if(!this.env.model.getters.isRangeValid(range)){postProcessedRanges.push(dataSet);continue;}
const{sheetName}=splitReference(range);const sheetPrefix=sheetName?`${sheetName}!`:"";const zone=toUnboundedZone(range);if(zone.bottom!==zone.top&&zone.left!==zone.right){if(this.datasetOrientation!=="rows"){if(zone.right!==undefined){for(let j=zone.left;j<=zone.right;++j){const datasetOptions=j===zone.left?dataSet:{yAxisId:dataSet.yAxisId};postProcessedRanges.push({...datasetOptions,dataRange:`${sheetPrefix}${zoneToXc({
                                    left: j,
                                    right: j,
                                    top: zone.top,
                                    bottom: zone.bottom,
                                })}`,});}}
else if(zone.bottom!==undefined){for(let j=zone.top;j<=zone.bottom;++j){const datasetOptions=j===zone.top?dataSet:{yAxisId:dataSet.yAxisId};postProcessedRanges.push({...datasetOptions,dataRange:`${sheetPrefix}${zoneToXc({
                                    left: zone.left,
                                    right: zone.right,
                                    top: j,
                                    bottom: j,
                                })}`,});}}}
else{if(zone.bottom!==undefined){for(let j=zone.top;j<=zone.bottom;++j){const datasetOptions=j===zone.top?dataSet:{yAxisId:dataSet.yAxisId};postProcessedRanges.push({...datasetOptions,dataRange:`${sheetPrefix}${zoneToXc({
                                    left: zone.left,
                                    right: zone.right,
                                    top: j,
                                    bottom: j,
                                })}`,});}}
else if(zone.right!==undefined){for(let j=zone.left;j<=zone.right;++j){const datasetOptions=j===zone.left?dataSet:{yAxisId:dataSet.yAxisId};postProcessedRanges.push({...datasetOptions,dataRange:`${sheetPrefix}${zoneToXc({
                                    left: j,
                                    right: j,
                                    top: zone.top,
                                    bottom: zone.bottom,
                                })}`,});}}}}
else{postProcessedRanges.push(dataSet);}}
return postProcessedRanges;}
getDataSeriesRanges(){return this.dataSets;}
onLabelRangeChanged(ranges){this.labelRange=ranges[0];this.state.labelsDispatchResult=this.props.canUpdateChart(this.props.figureId,{labelRange:this.labelRange,});}
onLabelRangeConfirmed(){this.state.labelsDispatchResult=this.props.updateChart(this.props.figureId,{labelRange:this.labelRange,});}
getLabelRange(){return this.labelRange||"";}
onUpdateAggregated(aggregated){this.props.updateChart(this.props.figureId,{aggregated,});}
calculateHeaderPosition(){if(this.isDatasetInvalid||this.isLabelInvalid){return undefined;}
const getters=this.env.model.getters;const sheetId=getters.getActiveSheetId();const labelRange=createValidRange(getters,sheetId,this.labelRange);const dataSets=createDataSets(getters,this.dataSets,sheetId,this.props.definition.dataSetsHaveTitle);if(dataSets.length){return this.datasetOrientation==="rows"?dataSets[0].dataRange.zone.left:dataSets[0].dataRange.zone.top+1;}
else if(labelRange){return labelRange.zone.top+1;}
return undefined;}
get maxNumberOfUsedRanges(){return chartRegistry.get(this.props.definition.type).dataSeriesLimit;}
transposeDataSet(dataRanges,datasetOrientation){const getters=this.env.model.getters;if(datasetOrientation===undefined){return dataRanges.filter(isDefined).map((dataRange)=>({dataRange}));}
const zonesBySheetName={};const transposedDatasets=[];const figureSheetId=getters.getFigureSheetId(this.props.figureId);let name=getters.getActiveSheet().name;if(figureSheetId){name=getters.getSheet(figureSheetId).name;}
for(const dataRange of dataRanges){if(!dataRange){continue;}
if(!isXcRepresentation(dataRange)){return dataRanges.filter(isDefined).map((dataRange)=>({dataRange}));}
let{sheetName,xc}=splitReference(dataRange);sheetName=sheetName??name;if(!zonesBySheetName[sheetName]){zonesBySheetName[sheetName]=[];}
zonesBySheetName[sheetName].push(toZone(xc));}
for(const sheetName in zonesBySheetName){const zones=zonesBySheetName[sheetName];const contiguousZones=mergeContiguousZones(zones);if(datasetOrientation==="columns"){for(const zone of contiguousZones){for(let col=zone.left;col<=zone.right;col++){const dataRange=`${sheetName === name ? "" : sheetName + "!"}${zoneToXc({
                            ...zone,
                            left: col,
                            right: col,
                        })}`;transposedDatasets.push({dataRange});}}}
else{for(const zone of contiguousZones){for(let row=zone.top;row<=zone.bottom;row++){const dataRange=`${sheetName === name ? "" : sheetName + "!"}${zoneToXc({
                            ...zone,
                            top: row,
                            bottom: row,
                        })}`;transposedDatasets.push({dataRange});}}}}
return transposedDatasets;}}
class BarConfigPanel extends GenericChartConfigPanel{static template="o-spreadsheet-BarConfigPanel";get stackedLabel(){const definition=this.props.definition;return definition.horizontal?this.chartTerms.StackedBarChart:this.chartTerms.StackedColumnChart;}
onUpdateStacked(stacked){this.props.updateChart(this.props.figureId,{stacked,});}}
css`
  .o-badge-selection {
    gap: 1px;
    button.o-button {
      border-radius: 0;
      &.selected {
        color: ${GRAY_900};
        border-color: ${ACTION_COLOR};
        background: ${BADGE_SELECTED_COLOR};
        font-weight: 600;
      }

      &:first-child {
        border-radius: 4px 0 0 4px;
      }
      &:last-child {
        border-radius: 0 4px 4px 0;
      }
    }
  }
`;class BadgeSelection extends Component{static template="o-spreadsheet.BadgeSelection";static props={choices:Array,onChange:Function,selectedValue:String,};}
css`
  .o-menu-item-button {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 2px 1px;
    padding: 0px 1px;
    border-radius: 2px;
    min-width: 22px;
  }
  .o-disabled {
    opacity: 0.6;
    cursor: default;
  }
`;class ActionButton extends Component{static template="o-spreadsheet-ActionButton";static props={action:Object,hasTriangleDownIcon:{type:Boolean,optional:true},selectedColor:{type:String,optional:true},class:{type:String,optional:true},onClick:{type:Function,optional:true},};actionButton=createAction(this.props.action);setup(){onWillUpdateProps((nextProps)=>{if(nextProps.action!==this.props.action){this.actionButton=createAction(nextProps.action);}});}
get isVisible(){return this.actionButton.isVisible(this.env);}
get isEnabled(){return this.actionButton.isEnabled(this.env);}
get isActive(){return this.actionButton.isActive?.(this.env);}
get title(){const name=this.actionButton.name(this.env);const description=this.actionButton.description(this.env);return name+(description?` (${description})`:"");}
get iconTitle(){return this.actionButton.icon(this.env);}
onClick(ev){if(this.isEnabled){this.props.onClick?.(ev);this.actionButton.execute?.(this.env);}}
get buttonStyle(){if(this.props.selectedColor){return cssPropertiesToCss({"border-bottom":`4px solid ${this.props.selectedColor}`,height:"16px","margin-top":"2px",});}
return"";}}
css`
  .o-color-picker-widget {
    display: flex;
    position: relative;
    align-items: center;
    height: 30px;

    .o-color-picker-button-style {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 2px;
      padding: 3px;
      border-radius: 2px;
      cursor: pointer;
      &:not([disabled]):hover {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }

    .o-color-picker-button {
      > span {
        border-bottom: 4px solid;
        height: 20px;
        margin-top: 2px;
        display: block;
      }

      &[disabled] {
        pointer-events: none;
        opacity: 0.3;
      }
    }
  }
`;class ColorPickerWidget extends Component{static template="o-spreadsheet-ColorPickerWidget";static props={currentColor:{type:String,optional:true},toggleColorPicker:Function,showColorPicker:Boolean,onColorPicked:Function,icon:String,title:{type:String,optional:true},disabled:{type:Boolean,optional:true},dropdownMaxHeight:{type:Number,optional:true},class:{type:String,optional:true},};static components={ColorPicker};colorPickerButtonRef=useRef("colorPickerButton");get iconStyle(){return this.props.currentColor?`border-color: ${this.props.currentColor}`:"border-bottom-style: hidden";}
get colorPickerAnchorRect(){const button=this.colorPickerButtonRef.el;const buttonRect=button.getBoundingClientRect();return{x:buttonRect.x,y:buttonRect.y,width:buttonRect.width,height:buttonRect.height,};}}
css`
  .o-font-size-editor {
    width: max-content !important;
    height: calc(100% - 4px);
    input.o-font-size {
      outline: none;
      height: 20px;
      width: 31px;
      text-align: center;
    }
  }
  .o-text-options > div {
    cursor: pointer;
    line-height: 26px;
    padding: 3px 12px;
    &:hover {
      background-color: rgba(0, 0, 0, 0.08);
    }
  }
`;class FontSizeEditor extends Component{static template="o-spreadsheet-FontSizeEditor";static props={currentFontSize:Number,onFontSizeChanged:Function,onToggle:{type:Function,optional:true},onFocusInput:{type:Function,optional:true},class:String,};static defaultProps={onFocusInput:()=>{},};static components={Popover};fontSizes=FONT_SIZES;dropdown=useState({isOpen:false});inputRef=useRef("inputFontSize");rootEditorRef=useRef("FontSizeEditor");fontSizeListRef=useRef("fontSizeList");setup(){useExternalListener(window,"click",this.onExternalClick,{capture:true});}
get popoverProps(){const{x,y,width,height}=this.rootEditorRef.el.getBoundingClientRect();return{anchorRect:{x,y,width,height},positioning:"bottom-left",verticalOffset:0,};}
onExternalClick(ev){if(!isChildEvent(this.fontSizeListRef.el,ev)&&!isChildEvent(this.rootEditorRef.el,ev)){this.closeFontList();}}
toggleFontList(){const isOpen=this.dropdown.isOpen;if(!isOpen){this.props.onToggle?.();this.inputRef.el.focus();}
else{this.closeFontList();}}
closeFontList(){this.dropdown.isOpen=false;}
setSize(fontSizeStr){const fontSize=clip(Math.floor(parseFloat(fontSizeStr)),1,400);this.props.onFontSizeChanged(fontSize);this.closeFontList();}
setSizeFromInput(ev){this.setSize(ev.target.value);}
setSizeFromList(fontSizeStr){this.setSize(fontSizeStr);}
onInputFocused(ev){this.dropdown.isOpen=true;ev.target.select();}
onInputKeydown(ev){if(ev.key==="Enter"||ev.key==="Escape"){this.closeFontList();const target=ev.target;if(ev.key==="Escape"){target.value=`${this.props.currentFontSize}`;}
this.props.onToggle?.();}}}
css`
  .o-chart-title-designer {
    .o-hoverable-button {
      height: 30px;
    }
    .o-dropdown-content .o-hoverable-button {
      height: fit-content;
    }

    .o-divider {
      border-right: 1px solid ${GRAY_300};
      margin: 0px 4px;
      height: 14px;
    }

    .o-menu-item-button.active {
      background-color: #e6f4ea;
      color: #188038;
    }

    .o-dropdown-content {
      overflow-y: auto;
      overflow-x: hidden;
      padding: 2px;
      z-index: 100;
      box-shadow: 1px 2px 5px 2px rgba(51, 51, 51, 0.15);

      .o-dropdown-line {
        > span {
          padding: 4px;
        }
      }
    }
  }
`;class TextStyler extends Component{static template="o-spreadsheet.TextStyler";static components={ColorPickerWidget,ActionButton,FontSizeEditor};static props={style:Object,updateStyle:{type:Function,optional:true},defaultStyle:{type:Object,optional:true},hasVerticalAlign:{type:Boolean,optional:true},hasHorizontalAlign:{type:Boolean,optional:true},hasBackgroundColor:{type:Boolean,optional:true},class:{type:String,optional:true},};openedEl=null;setup(){useExternalListener(window,"click",this.onExternalClick);}
state=useState({activeTool:"",});updateFontSize(fontSize){this.props.updateStyle?.({...this.props.style,fontSize});}
toggleDropdownTool(tool,ev){const isOpen=this.state.activeTool===tool;this.closeMenus();this.state.activeTool=isOpen?"":tool;this.openedEl=isOpen?null:ev.target;}
onExternalClick(ev){if(this.openedEl===ev.target){return;}
this.closeMenus();}
onTextColorChange(color){this.props.updateStyle?.({...this.props.style,color});this.closeMenus();}
onFillColorChange(color){this.props.updateStyle?.({...this.props.style,fillColor:color});this.closeMenus();}
updateAlignment(align){this.props.updateStyle?.({...this.props.style,align});this.closeMenus();}
updateVerticalAlignment(verticalAlign){this.props.updateStyle?.({...this.props.style,verticalAlign});this.closeMenus();}
toggleBold(){this.props.updateStyle?.({...this.props.style,bold:!this.bold});}
toggleItalic(){this.props.updateStyle?.({...this.props.style,italic:!this.italic});}
closeMenus(){this.state.activeTool="";this.openedEl=null;}
get align(){return this.props.style.align??this.props.defaultStyle?.align;}
get verticalAlign(){return this.props.style.verticalAlign||this.props.defaultStyle?.verticalAlign;}
get bold(){return this.props.style.bold??this.props.defaultStyle?.bold;}
get italic(){return this.props.style.italic??this.props.defaultStyle?.italic;}
get currentFontSize(){return this.props.style.fontSize??this.props.defaultStyle?.fontSize??DEFAULT_STYLE.fontSize;}
get boldButtonAction(){return{name:_t("Bold"),execute:()=>this.toggleBold(),isActive:()=>this.bold||false,icon:"o-spreadsheet-Icon.BOLD",};}
get italicButtonAction(){return{name:_t("Italic"),execute:()=>this.toggleItalic(),isActive:()=>this.italic||false,icon:"o-spreadsheet-Icon.ITALIC",};}
get horizontalAlignButtonAction(){let icon="o-spreadsheet-Icon.ALIGN_LEFT";if(this.align==="center"){icon="o-spreadsheet-Icon.ALIGN_CENTER";}
else if(this.align==="right"){icon="o-spreadsheet-Icon.ALIGN_RIGHT";}
return{name:_t("Horizontal alignment"),icon};}
get horizontalAlignActions(){return[{name:_t("Left"),execute:()=>this.updateAlignment("left"),isActive:()=>this.align==="left",icon:"o-spreadsheet-Icon.ALIGN_LEFT",},{name:_t("Center"),execute:()=>this.updateAlignment("center"),isActive:()=>this.align==="center",icon:"o-spreadsheet-Icon.ALIGN_CENTER",},{name:_t("Right"),execute:()=>this.updateAlignment("right"),isActive:()=>this.align==="right",icon:"o-spreadsheet-Icon.ALIGN_RIGHT",},];}
get verticalAlignButtonAction(){let icon="o-spreadsheet-Icon.ALIGN_MIDDLE";if(this.verticalAlign==="top"){icon="o-spreadsheet-Icon.ALIGN_TOP";}
else if(this.verticalAlign==="bottom"){icon="o-spreadsheet-Icon.ALIGN_BOTTOM";}
return{name:_t("Vertical alignment"),icon};}
get verticalAlignActions(){return[{name:_t("Top"),execute:()=>this.updateVerticalAlignment("top"),isActive:()=>this.verticalAlign==="top",icon:"o-spreadsheet-Icon.ALIGN_TOP",},{name:_t("Middle"),execute:()=>this.updateVerticalAlignment("middle"),isActive:()=>this.verticalAlign==="middle",icon:"o-spreadsheet-Icon.ALIGN_MIDDLE",},{name:_t("Bottom"),execute:()=>this.updateVerticalAlignment("bottom"),isActive:()=>this.verticalAlign==="bottom",icon:"o-spreadsheet-Icon.ALIGN_BOTTOM",},];}}
css`
  .o-chart-title-designer {
    > span {
      height: 30px;
    }
  }
`;class ChartTitle extends Component{static template="o-spreadsheet.ChartTitle";static components={Section,TextStyler};static props={title:{type:String,optional:true},placeholder:{type:String,optional:true},updateTitle:Function,name:{type:String},style:Object,defaultStyle:{type:Object,optional:true},updateStyle:Function,};static defaultProps={title:"",placeholder:"",};updateTitle(ev){this.props.updateTitle(ev.target.value);}}
class AxisDesignEditor extends Component{static template="o-spreadsheet-AxisDesignEditor";static components={Section,ChartTitle,BadgeSelection};static props={figureId:String,definition:Object,updateChart:Function,axesList:Array};state=useState({currentAxis:"x"});defaultFontSize=CHART_AXIS_TITLE_FONT_SIZE;get axisTitleStyle(){return this.props.definition.axesDesign?.[this.state.currentAxis]?.title??{};}
get badgeAxes(){return this.props.axesList.map((axis)=>({value:axis.id,label:axis.name}));}
updateAxisEditor(ev){this.state.currentAxis=ev.target.value;}
getAxisTitle(){const axesDesign=this.props.definition.axesDesign??{};return axesDesign[this.state.currentAxis]?.title.text||"";}
updateAxisTitle(text){const axesDesign=deepCopy(this.props.definition.axesDesign)??{};axesDesign[this.state.currentAxis]={...axesDesign[this.state.currentAxis],title:{...axesDesign?.[this.state.currentAxis]?.title,text,},};this.props.updateChart(this.props.figureId,{axesDesign});}
updateAxisTitleStyle(style){const axesDesign=deepCopy(this.props.definition.axesDesign)??{};axesDesign[this.state.currentAxis]={...axesDesign[this.state.currentAxis],title:style,};this.props.updateChart(this.props.figureId,{axesDesign});}}
const CIRCLE_SVG=`
<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'>
  <circle r="2" fill="#FFF"/>
</svg>
`;css`
  .o-radio {
    input {
      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: none;
      width: 14px;
      height: 14px;
      border: 1px solid ${GRAY_300};
      outline: none;
      border-radius: 8px;

      &:checked {
        background: url("data:image/svg+xml,${encodeURIComponent(CIRCLE_SVG)}");
        background-color: ${ACTION_COLOR};
        border-color: ${ACTION_COLOR};
      }
    }
  }
`;class RadioSelection extends Component{static template="o-spreadsheet.RadioSelection";static props={choices:Array,onChange:Function,selectedValue:{optional:false},name:String,direction:{type:String,optional:true},};static defaultProps={direction:"horizontal",};}
class GeneralDesignEditor extends Component{static template="o-spreadsheet-GeneralDesignEditor";static components={RoundColorPicker,ChartTitle,Section,SidePanelCollapsible,RadioSelection,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,defaultChartTitleFontSize:{type:Number,optional:true},slots:{type:Object,optional:true},};static defaultProps={defaultChartTitleFontSize:CHART_TITLE_FONT_SIZE,};state;setup(){this.state=useState({activeTool:"",});}
get title(){return this.props.definition.title;}
toggleDropdownTool(tool,ev){const isOpen=this.state.activeTool===tool;this.state.activeTool=isOpen?"":tool;}
updateBackgroundColor(color){this.props.updateChart(this.props.figureId,{background:color,});}
updateTitle(newTitle){const title={...this.title,text:newTitle};this.props.updateChart(this.props.figureId,{title});}
updateChartTitleStyle(style){const title={...this.title,...style};this.props.updateChart(this.props.figureId,{title});this.state.activeTool="";}}
class ChartLegend extends Component{static template="o-spreadsheet-ChartLegend";static components={Section,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,};updateLegendPosition(ev){this.props.updateChart(this.props.figureId,{legendPosition:ev.target.value,});}}
class SeriesDesignEditor extends Component{static template="o-spreadsheet-SeriesDesignEditor";static components={SidePanelCollapsible,Section,RoundColorPicker,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,slots:{type:Object,optional:true},};state=useState({index:0});getDataSeries(){const runtime=this.env.model.getters.getChartRuntime(this.props.figureId);if(!runtime||!("chartJsConfig"in runtime)){return[];}
return runtime.chartJsConfig.data.datasets.filter((d)=>!isTrendLineAxis(d["xAxisID"]??"")).map((d)=>d.label);}
updateEditedSeries(ev){this.state.index=ev.target.selectedIndex;}
updateDataSeriesColor(color){const dataSets=this.props.definition.dataSets;if(!dataSets?.[this.state.index])
return;dataSets[this.state.index]={...dataSets[this.state.index],backgroundColor:color,};this.props.updateChart(this.props.figureId,{dataSets});}
getDataSeriesColor(){const dataSets=this.props.definition.dataSets;if(!dataSets?.[this.state.index])
return"";const color=dataSets[this.state.index].backgroundColor;return color?toHex(color):getNthColor(this.state.index,getColorsPalette(this.props.definition.dataSets.length));}
updateDataSeriesLabel(ev){const label=ev.target.value;const dataSets=this.props.definition.dataSets;if(!dataSets?.[this.state.index])
return;dataSets[this.state.index]={...dataSets[this.state.index],label,};this.props.updateChart(this.props.figureId,{dataSets});}
getDataSeriesLabel(){const dataSets=this.props.definition.dataSets;return dataSets[this.state.index]?.label||this.getDataSeries()[this.state.index];}}
class SeriesWithAxisDesignEditor extends Component{static template="o-spreadsheet-SeriesWithAxisDesignEditor";static components={SeriesDesignEditor,Checkbox,RadioSelection,Section,RoundColorPicker,};static props={figureId:String,definition:Object,canUpdateChart:Function,updateChart:Function,slots:{type:Object,optional:true},};axisChoices=CHART_AXIS_CHOICES;updateDataSeriesAxis(index,axis){const dataSets=[...this.props.definition.dataSets];if(!dataSets?.[index]){return;}
dataSets[index]={...dataSets[index],yAxisId:axis==="left"?"y":"y1",};this.props.updateChart(this.props.figureId,{dataSets});}
getDataSerieAxis(index){const dataSets=this.props.definition.dataSets;if(!dataSets?.[index]){return"left";}
return dataSets[index].yAxisId==="y1"?"right":"left";}
get canHaveTwoVerticalAxis(){return!("horizontal"in this.props.definition&&this.props.definition.horizontal);}
toggleDataTrend(index,display){const dataSets=[...this.props.definition.dataSets];if(!dataSets?.[index]){return;}
dataSets[index]={...dataSets[index],trend:{type:"polynomial",order:1,...dataSets[index].trend,display,},};this.props.updateChart(this.props.figureId,{dataSets});}
getTrendLineConfiguration(index){const dataSets=this.props.definition.dataSets;return dataSets?.[index]?.trend;}
getTrendType(config){if(!config){return"";}
return config.type==="polynomial"&&config.order===1?"linear":config.type;}
onChangeTrendType(index,ev){const type=ev.target.value;let config;switch(type){case"linear":case"polynomial":config={type:"polynomial",order:type==="linear"?1:this.getMaxPolynomialDegree(index),};break;case"exponential":case"logarithmic":case"trailingMovingAverage":config={type};break;default:return;}
this.updateTrendLineValue(index,config);}
getPolynomialDegrees(index){return range(1,this.getMaxPolynomialDegree(index)+1);}
onChangePolynomialDegree(index,ev){const element=ev.target;this.updateTrendLineValue(index,{order:parseInt(element.value)});}
getMaxPolynomialDegree(index){const runtime=this.env.model.getters.getChartRuntime(this.props.figureId);return Math.min(10,runtime.chartJsConfig.data.datasets[index].data.length-1);}
get defaultWindowSize(){return DEFAULT_WINDOW_SIZE;}
onChangeMovingAverageWindow(index,ev){const element=ev.target;let window=parseInt(element.value)||DEFAULT_WINDOW_SIZE;if(window<=1){window=DEFAULT_WINDOW_SIZE;}
this.updateTrendLineValue(index,{window});}
getDataSeriesColor(index){const dataSets=this.props.definition.dataSets;if(!dataSets?.[index])
return"";const color=dataSets[index].backgroundColor;return color?toHex(color):getNthColor(index,getColorsPalette(this.props.definition.dataSets.length));}
getTrendLineColor(index){return(this.getTrendLineConfiguration(index)?.color??setColorAlpha(this.getDataSeriesColor(index),0.5));}
updateTrendLineColor(index,color){this.updateTrendLineValue(index,{color});}
updateTrendLineValue(index,config){const dataSets=[...this.props.definition.dataSets];if(!dataSets?.[index]){return;}
dataSets[index]={...dataSets[index],trend:{...dataSets[index].trend,...config,},};this.props.updateChart(this.props.figureId,{dataSets});}}
class ChartShowValues extends Component{static template="o-spreadsheet-ChartShowValues";static components={Checkbox,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,defaultValue:{type:Boolean,optional:true},};}
class ChartWithAxisDesignPanel extends Component{static template="o-spreadsheet-ChartWithAxisDesignPanel";static components={GeneralDesignEditor,SidePanelCollapsible,Section,AxisDesignEditor,SeriesWithAxisDesignEditor,ChartLegend,ChartShowValues,};static props={figureId:String,definition:Object,canUpdateChart:Function,updateChart:Function,};get axesList(){const{useLeftAxis,useRightAxis}=getDefinedAxis(this.props.definition);const axes=[{id:"x",name:_t("Horizontal axis")}];if(useLeftAxis){axes.push({id:"y",name:useRightAxis?_t("Left axis"):_t("Vertical axis")});}
if(useRightAxis){axes.push({id:"y1",name:useLeftAxis?_t("Right axis"):_t("Vertical axis")});}
return axes;}}
class ChartShowDataMarkers extends Component{static template="o-spreadsheet-ChartShowDataMarkers";static components={Checkbox,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,};}
class ComboChartDesignPanel extends ChartWithAxisDesignPanel{static template="o-spreadsheet-ComboChartDesignPanel";static components={...ChartWithAxisDesignPanel.components,ChartShowDataMarkers,RadioSelection,};seriesTypeChoices=[{value:"bar",label:_t("Bar")},{value:"line",label:_t("Line")},];updateDataSeriesType(index,type){const dataSets=[...this.props.definition.dataSets];if(!dataSets?.[index]){return;}
dataSets[index]={...dataSets[index],type,};this.props.updateChart(this.props.figureId,{dataSets});}
getDataSeriesType(index){const dataSets=this.props.definition.dataSets;if(!dataSets?.[index]){return"bar";}
return dataSets[index].type??"line";}}
class FunnelChartConfigPanel extends GenericChartConfigPanel{getLabelRangeOptions(){const definition=this.props.definition;return[{name:"aggregated",label:this.chartTerms.AggregatedChart,value:definition.aggregated??false,onChange:this.onUpdateAggregated.bind(this),},{name:"cumulative",label:this.chartTerms.CumulativeData,value:definition.cumulative??false,onChange:this.onUpdateCumulative.bind(this),},{name:"dataSetsHaveTitle",label:this.dataSetsHaveTitleLabel,value:definition.dataSetsHaveTitle,onChange:this.onUpdateDataSetsHaveTitle.bind(this),},];}
onUpdateCumulative(cumulative){this.props.updateChart(this.props.figureId,{cumulative,});}}
class FunnelChartDesignPanel extends Component{static template="o-spreadsheet-FunnelChartDesignPanel";static components={ChartShowValues,GeneralDesignEditor,SidePanelCollapsible,RoundColorPicker,Section,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,};getFunnelColorItems(){const runtime=this.env.model.getters.getChartRuntime(this.props.figureId);const labels=(runtime.chartJsConfig.data.labels||[]);const colors=getFunnelLabelColors(labels,this.props.definition.funnelColors);return labels.map((label,index)=>({label:label||_t("Value %s",index+1),color:colors[index],}));}
updateFunnelItemColor(index,color){const funnelColors=replaceItemAtIndex(this.props.definition.funnelColors||[],color,index);this.props.updateChart(this.props.figureId,{funnelColors});}}
class GaugeChartConfigPanel extends Component{static template="o-spreadsheet-GaugeChartConfigPanel";static components={ChartErrorSection,ChartDataSeries};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,};state=useState({dataRangeDispatchResult:undefined,});dataRange=this.props.definition.dataRange;get configurationErrorMessages(){const cancelledReasons=[...(this.state.dataRangeDispatchResult?.reasons||[])];return cancelledReasons.map((error)=>ChartTerms.Errors[error]||ChartTerms.Errors.Unexpected);}
get isDataRangeInvalid(){return!!this.state.dataRangeDispatchResult?.isCancelledBecause("InvalidGaugeDataRange");}
onDataRangeChanged(ranges){this.dataRange=ranges[0];this.state.dataRangeDispatchResult=this.props.canUpdateChart(this.props.figureId,{dataRange:this.dataRange,});}
updateDataRange(){this.state.dataRangeDispatchResult=this.props.updateChart(this.props.figureId,{dataRange:this.dataRange,});}
getDataRange(){return{dataRange:this.dataRange||""};}}
css`
  .o-gauge-color-set {
    table {
      table-layout: fixed;
      margin-top: 2%;
      display: table;
      text-align: left;
      font-size: 12px;
      line-height: 18px;
      width: 100%;
      font-size: 12px;
    }

    td {
      height: 30px;
      padding: 6px 0;
    }
    th.o-gauge-color-set-colorPicker {
      width: 8%;
    }
    th.o-gauge-color-set-text {
      width: 25%;
    }
    th.o-gauge-color-set-operator {
      width: 10%;
    }
    th.o-gauge-color-set-value {
      width: 22%;
    }
    th.o-gauge-color-set-type {
      width: 30%;
    }
    input,
    select {
      width: 100%;
      height: 100%;
    }
  }
`;class GaugeChartDesignPanel extends Component{static template="o-spreadsheet-GaugeChartDesignPanel";static components={SidePanelCollapsible,Section,RoundColorPicker,GeneralDesignEditor,ChartErrorSection,StandaloneComposer,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:{type:Function,optional:true},};state;setup(){this.state=useState({sectionRuleCancelledReasons:this.checkSectionRuleFormulasAreValid(this.props.definition.sectionRule),sectionRule:deepCopy(this.props.definition.sectionRule),});}
get designErrorMessages(){const cancelledReasons=[...(this.state.sectionRuleCancelledReasons||[])];return cancelledReasons.map((error)=>ChartTerms.Errors[error]||ChartTerms.Errors.Unexpected);}
get isRangeMinInvalid(){return!!(this.state.sectionRuleCancelledReasons?.includes("EmptyGaugeRangeMin")||this.state.sectionRuleCancelledReasons?.includes("GaugeRangeMinNaN"));}
get isRangeMaxInvalid(){return!!(this.state.sectionRuleCancelledReasons?.includes("EmptyGaugeRangeMax")||this.state.sectionRuleCancelledReasons?.includes("GaugeRangeMaxNaN"));}
get isLowerInflectionPointInvalid(){return!!this.state.sectionRuleCancelledReasons?.includes("GaugeLowerInflectionPointNaN");}
get isUpperInflectionPointInvalid(){return!!this.state.sectionRuleCancelledReasons?.includes("GaugeUpperInflectionPointNaN");}
updateSectionColor(target,color){const sectionRule=deepCopy(this.state.sectionRule);sectionRule.colors[target]=color;this.updateSectionRule(sectionRule);}
updateSectionRule(sectionRule){this.state.sectionRuleCancelledReasons=[];this.state.sectionRuleCancelledReasons.push(...this.checkSectionRuleFormulasAreValid(this.state.sectionRule));const dispatchResult=this.props.updateChart(this.props.figureId,{sectionRule,});if(dispatchResult.isSuccessful){this.state.sectionRule=deepCopy(sectionRule);}
else{this.state.sectionRuleCancelledReasons.push(...dispatchResult.reasons);}}
onConfirmGaugeRange(editedRange,content){this.state.sectionRule={...this.state.sectionRule,[editedRange]:content};this.updateSectionRule(this.state.sectionRule);}
getGaugeInflectionComposerProps(sectionType){const inflectionPointName=sectionType==="lowerColor"?"lowerInflectionPoint":"upperInflectionPoint";const inflectionPoint=this.state.sectionRule[inflectionPointName];return{onConfirm:(str)=>{this.state.sectionRule={...this.state.sectionRule,[inflectionPointName]:{...inflectionPoint,value:str},};this.updateSectionRule(this.state.sectionRule);},composerContent:inflectionPoint.value,invalid:sectionType==="lowerColor"?this.isLowerInflectionPointInvalid:this.isUpperInflectionPointInvalid,defaultRangeSheetId:this.sheetId,class:inflectionPointName,placeholder:_t("Value"),title:_t("Value or formula"),};}
checkSectionRuleFormulasAreValid(sectionRule){const reasons=[];if(!this.valueIsValidNumber(sectionRule.rangeMin)){reasons.push("GaugeRangeMinNaN");}
if(!this.valueIsValidNumber(sectionRule.rangeMax)){reasons.push("GaugeRangeMaxNaN");}
if(!this.valueIsValidNumber(sectionRule.lowerInflectionPoint.value)){reasons.push("GaugeLowerInflectionPointNaN");}
if(!this.valueIsValidNumber(sectionRule.upperInflectionPoint.value)){reasons.push("GaugeUpperInflectionPointNaN");}
return reasons;}
valueIsValidNumber(value){const locale=this.env.model.getters.getLocale();if(!value.startsWith("=")){return tryToNumber(value,locale)!==undefined;}
const evaluatedValue=this.env.model.getters.evaluateFormula(this.sheetId,value);if(isMultipleElementMatrix(evaluatedValue)){return false;}
return tryToNumber(toScalar(evaluatedValue),locale)!==undefined;}
get sheetId(){const chart=this.env.model.getters.getChart(this.props.figureId);if(!chart){throw new Error("Chart not found with id "+this.props.figureId);}
return chart.sheetId;}}
class GeoChartRegionSelectSection extends Component{static template="o-spreadsheet-GeoChartRegionSelectSection";static components={Section};static props={figureId:String,definition:Object,updateChart:Function,};updateSelectedRegion(ev){const value=ev.target.value;this.props.updateChart(this.props.figureId,{region:value});}
get availableRegions(){return this.env.model.getters.getGeoChartAvailableRegions();}
get selectedRegion(){return this.props.definition.region||this.availableRegions[0]?.id;}}
class GeoChartConfigPanel extends GenericChartConfigPanel{static template="o-spreadsheet-GeoChartConfigPanel";static components={...GenericChartConfigPanel.components,GeoChartRegionSelectSection,};get dataRanges(){return this.getDataSeriesRanges();}
get disabledRanges(){return this.props.definition.dataSets.map((ds,i)=>i>0);}
getLabelRangeOptions(){return[{name:"dataSetsHaveTitle",label:this.dataSetsHaveTitleLabel,value:this.props.definition.dataSetsHaveTitle,onChange:this.onUpdateDataSetsHaveTitle.bind(this),},];}}
const DEFAULT_CUSTOM_COLOR_SCALE={minColor:"#FFF5EB",midColor:"#FD8D3C",maxColor:"#7F2704",};class GeoChartDesignPanel extends ChartWithAxisDesignPanel{static template="o-spreadsheet-GeoChartDesignPanel";static components={...ChartWithAxisDesignPanel.components,RoundColorPicker};colorScalesChoices=ChartTerms.GeoChart.ColorScales;updateColorScaleType(ev){const value=ev.target.value;value==="custom"?this.updateColorScale(DEFAULT_CUSTOM_COLOR_SCALE):this.updateColorScale(value);}
updateColorScale(colorScale){this.props.updateChart(this.props.figureId,{colorScale});}
updateMissingValueColor(color){this.props.updateChart(this.props.figureId,{missingValueColor:color});}
updateLegendPosition(ev){const value=ev.target.value;this.props.updateChart(this.props.figureId,{legendPosition:value});}
get selectedColorScale(){return typeof this.props.definition.colorScale==="object"?"custom":this.props.definition.colorScale||"oranges";}
get selectedMissingValueColor(){return this.props.definition.missingValueColor||"#ffffff";}
get customColorScale(){if(typeof this.props.definition.colorScale==="object"){return this.props.definition.colorScale;}
return undefined;}
getCustomColorScaleColor(color){return this.customColorScale?.[color]??"";}
setCustomColorScaleColor(colorType,color){if(!color&&colorType!=="midColor"){color="#fff";}
const customColorScale=this.customColorScale;if(!customColorScale){return;}
this.updateColorScale({...customColorScale,[colorType]:color});}}
class HierarchicalChartConfigPanel extends GenericChartConfigPanel{static template="o-spreadsheet-HierarchicalChartConfigPanel";static components={...GenericChartConfigPanel.components};getLabelRangeOptions(){return[{name:"dataSetsHaveTitle",label:this.dataSetsHaveTitleLabel,value:this.props.definition.dataSetsHaveTitle,onChange:this.onUpdateDataSetsHaveTitle.bind(this),},];}}
class LineConfigPanel extends GenericChartConfigPanel{static template="o-spreadsheet-LineConfigPanel";get canTreatLabelsAsText(){const chart=this.env.model.getters.getChart(this.props.figureId);if(chart&&chart instanceof LineChart){return canChartParseLabels(chart.getDefinition(),chart.dataSets,chart.labelRange,this.env.model.getters);}
return false;}
get stackedLabel(){const definition=this.props.definition;return definition.fillArea?this.chartTerms.StackedAreaChart:this.chartTerms.StackedLineChart;}
getLabelRangeOptions(){const options=super.getLabelRangeOptions();if(this.canTreatLabelsAsText){options.push({name:"labelsAsText",value:this.props.definition.labelsAsText,label:this.chartTerms.TreatLabelsAsText,onChange:this.onUpdateLabelsAsText.bind(this),});}
return options;}
onUpdateLabelsAsText(labelsAsText){this.props.updateChart(this.props.figureId,{labelsAsText,});}
onUpdateStacked(stacked){this.props.updateChart(this.props.figureId,{stacked,});}
onUpdateCumulative(cumulative){this.props.updateChart(this.props.figureId,{cumulative,});}}
class LineChartDesignPanel extends ChartWithAxisDesignPanel{static template="o-spreadsheet-LineChartDesignPanel";static components={...ChartWithAxisDesignPanel.components,ChartShowDataMarkers,};}
class PieHoleSize extends Component{static template="o-spreadsheet.PieHoleSize";static components={Section};static props={onValueChange:Function,value:Number};debouncedOnChange=debounce(this.onChange.bind(this),100);onChange(value){if(!isNaN(Number(value))){this.props.onValueChange(clip(Number(value),0,95));}}}
class PieChartDesignPanel extends Component{static template="o-spreadsheet-PieChartDesignPanel";static components={GeneralDesignEditor,Section,ChartLegend,ChartShowValues,PieHoleSize,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:{type:Function,optional:true},};onPieHoleSizeChange(pieHolePercentage){this.props.updateChart(this.props.figureId,{...this.props.definition,pieHolePercentage,});}}
class RadarChartDesignPanel extends Component{static template="o-spreadsheet-RadarChartDesignPanel";static components={GeneralDesignEditor,SeriesDesignEditor,Section,ChartLegend,ChartShowValues,ChartShowDataMarkers,};static props={figureId:String,definition:Object,canUpdateChart:Function,updateChart:Function,};}
class ScatterConfigPanel extends GenericChartConfigPanel{static template="o-spreadsheet-ScatterConfigPanel";get canTreatLabelsAsText(){const chart=this.env.model.getters.getChart(this.props.figureId);if(chart&&chart instanceof ScatterChart){return canChartParseLabels(chart.getDefinition(),chart.dataSets,chart.labelRange,this.env.model.getters);}
return false;}
onUpdateLabelsAsText(labelsAsText){this.props.updateChart(this.props.figureId,{labelsAsText,});}
getLabelRangeOptions(){const options=super.getLabelRangeOptions();if(this.canTreatLabelsAsText){options.push({name:"labelsAsText",value:this.props.definition.labelsAsText,label:this.chartTerms.TreatLabelsAsText,onChange:this.onUpdateLabelsAsText.bind(this),});}
return options;}}
class ScorecardChartConfigPanel extends Component{static template="o-spreadsheet-ScorecardChartConfigPanel";static components={SelectionInput,ChartErrorSection,Section};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:Function,};state=useState({keyValueDispatchResult:undefined,baselineDispatchResult:undefined,});keyValue=this.props.definition.keyValue;baseline=this.props.definition.baseline;get errorMessages(){const cancelledReasons=[...(this.state.keyValueDispatchResult?.reasons||[]),...(this.state.baselineDispatchResult?.reasons||[]),];return cancelledReasons.map((error)=>ChartTerms.Errors[error]||ChartTerms.Errors.Unexpected);}
get isKeyValueInvalid(){return!!this.state.keyValueDispatchResult?.isCancelledBecause("InvalidScorecardKeyValue");}
get isBaselineInvalid(){return!!this.state.keyValueDispatchResult?.isCancelledBecause("InvalidScorecardBaseline");}
onKeyValueRangeChanged(ranges){this.keyValue=ranges[0];this.state.keyValueDispatchResult=this.props.canUpdateChart(this.props.figureId,{keyValue:this.keyValue,});}
updateKeyValueRange(){this.state.keyValueDispatchResult=this.props.updateChart(this.props.figureId,{keyValue:this.keyValue,});}
getKeyValueRange(){return this.keyValue||"";}
onBaselineRangeChanged(ranges){this.baseline=ranges[0];this.state.baselineDispatchResult=this.props.canUpdateChart(this.props.figureId,{baseline:this.baseline,});}
updateBaselineRange(){this.state.baselineDispatchResult=this.props.updateChart(this.props.figureId,{baseline:this.baseline,});}
getBaselineRange(){return this.baseline||"";}
updateBaselineMode(ev){this.props.updateChart(this.props.figureId,{baselineMode:ev.target.value});}}
class ScorecardChartDesignPanel extends Component{static template="o-spreadsheet-ScorecardChartDesignPanel";static components={GeneralDesignEditor,RoundColorPicker,SidePanelCollapsible,Section,Checkbox,ChartTitle,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:{type:Function,optional:true},};get colorsSectionTitle(){return this.props.definition.baselineMode==="progress"?_t("Progress bar colors"):_t("Baseline colors");}
get humanizeNumbersLabel(){return _t("Humanize numbers");}
get defaultScorecardTitleFontSize(){return SCORECARD_CHART_TITLE_FONT_SIZE;}
updateHumanizeNumbers(humanize){this.props.updateChart(this.props.figureId,{humanize});}
translate(term){return _t(term);}
setColor(color,colorPickerId){switch(colorPickerId){case"backgroundColor":this.props.updateChart(this.props.figureId,{background:color});break;case"baselineColorDown":this.props.updateChart(this.props.figureId,{baselineColorDown:color});break;case"baselineColorUp":this.props.updateChart(this.props.figureId,{baselineColorUp:color});break;}}
get keyStyle(){return{align:"center",fontSize:DEFAULT_SCORECARD_KEY_VALUE_FONT_SIZE,...this.props.definition.keyDescr,};}
get baselineStyle(){return{align:"center",fontSize:DEFAULT_SCORECARD_BASELINE_FONT_SIZE,...this.props.definition.baselineDescr,};}
setKeyText(text){this.props.updateChart(this.props.figureId,{keyDescr:{...this.props.definition.keyDescr,text},});}
updateKeyStyle(style){const keyDescr={...this.keyStyle,...style};this.props.updateChart(this.props.figureId,{keyDescr});}
setBaselineText(text){this.props.updateChart(this.props.figureId,{baselineDescr:{...this.props.definition.baselineDescr,text},});}
updateBaselineStyle(style){const baselineDescr={...this.baselineStyle,...style};this.props.updateChart(this.props.figureId,{baselineDescr});}}
class SunburstChartDesignPanel extends Component{static template="o-spreadsheet-SunburstChartDesignPanel";static components={GeneralDesignEditor,Section,SidePanelCollapsible,ChartShowValues,Checkbox,TextStyler,RoundColorPicker,ChartLegend,PieHoleSize,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:{type:Function,optional:true},};defaults=SunburstChartDefaults;get showValues(){return this.props.definition.showValues??SunburstChartDefaults.showValues;}
get showLabels(){return this.props.definition.showLabels??SunburstChartDefaults.showLabels;}
get groupColors(){const figureId=this.props.figureId;const runtime=this.env.model.getters.getChartRuntime(figureId);const dataset=runtime.chartJsConfig.data.datasets[0];return dataset?.groupColors||[];}
onGroupColorChanged(index,color){const colors=deepCopy(this.props.definition.groupColors)??[];colors[index]=color;this.props.updateChart(this.props.figureId,{groupColors:colors});}
onPieHoleSizeChange(pieHolePercentage){this.props.updateChart(this.props.figureId,{...this.props.definition,pieHolePercentage,});}}
class TreeMapCategoryColors extends Component{static template="o-spreadsheet-TreeMapCategoryColors";static components={Checkbox,RoundColorPicker,};static props={figureId:String,definition:Object,onColorChanged:Function,};get coloringOptions(){const coloringOptions=this.props.definition.coloringOptions??TreeMapChartDefaults.coloringOptions;if(coloringOptions.type!=="categoryColor"){throw new Error("Coloring options is not solid color");}
return coloringOptions;}
getTreeGroupAndColors(){const runtime=this.env.model.getters.getChartRuntime(this.props.figureId);const config=runtime.chartJsConfig;return config.data.datasets[0]?.groupColors||[];}
onGroupColorChanged(index,color){const coloringOptions=deepCopy(this.coloringOptions);coloringOptions.colors[index]=color||undefined;this.props.onColorChanged(coloringOptions);}
useValueBasedGradient(useValueBasedGradient){if(this.coloringOptions.type!=="categoryColor"){throw new Error("Coloring options is not solid color");}
this.props.onColorChanged({...this.coloringOptions,useValueBasedGradient});}}
class TreeMapColorScale extends Component{static template="o-spreadsheet-TreeMapColorScale";static components={RoundColorPicker};static props={figureId:String,definition:Object,onColorChanged:Function,};get coloringOptions(){const coloringOptions=this.props.definition.coloringOptions??TreeMapChartDefaults.coloringOptions;if(coloringOptions.type!=="colorScale"){throw new Error("Coloring options is not a color scale");}
return coloringOptions;}
setColorScaleColor(point,color){this.props.onColorChanged({...this.coloringOptions,[point]:color});}}
const DEFAULT_COLOR_SCALE={type:"colorScale",minColor:"#FFF5EB",midColor:"#FD8D3C",maxColor:"#7F2704",};const DEFAULT_SOLID_COLOR={type:"categoryColor",colors:[],useValueBasedGradient:true,};class TreeMapChartDesignPanel extends Component{static template="o-spreadsheet-TreeMapChartDesignPanel";static components={GeneralDesignEditor,Section,SidePanelCollapsible,ChartShowValues,Checkbox,TextStyler,RoundColorPicker,BadgeSelection,TreeMapCategoryColors,TreeMapColorScale,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:{type:Function,optional:true},};savedColors={categoryColors:DEFAULT_SOLID_COLOR,colorScale:DEFAULT_COLOR_SCALE,};defaults=TreeMapChartDefaults;get showHeaders(){return this.props.definition.showHeaders??TreeMapChartDefaults.showHeaders;}
get showValues(){return this.props.definition.showValues??TreeMapChartDefaults.showValues;}
get showLabels(){return this.props.definition.showLabels??TreeMapChartDefaults.showLabels;}
get coloringOptions(){return this.props.definition.coloringOptions??TreeMapChartDefaults.coloringOptions;}
changeColoringOption(option){const coloringOptions=option==="categoryColor"?this.savedColors.categoryColors:this.savedColors.colorScale;this.props.updateChart(this.props.figureId,{coloringOptions});}
onCategoryColorChange(coloringOptions){this.savedColors.categoryColors=coloringOptions;this.props.updateChart(this.props.figureId,{coloringOptions});}
onColorScaleChange(coloringOptions){this.savedColors.colorScale=coloringOptions;this.props.updateChart(this.props.figureId,{coloringOptions});}
get coloringOptionChoices(){return[{label:_t("Category color"),value:"categoryColor"},{label:_t("Color scale"),value:"colorScale"},];}}
class WaterfallChartDesignPanel extends Component{static template="o-spreadsheet-WaterfallChartDesignPanel";static components={GeneralDesignEditor,ChartShowValues,Checkbox,SidePanelCollapsible,Section,RoundColorPicker,AxisDesignEditor,RadioSelection,ChartLegend,};static props={figureId:String,definition:Object,updateChart:Function,canUpdateChart:{type:Function,optional:true},};axisChoices=CHART_AXIS_CHOICES;onUpdateShowSubTotals(showSubTotals){this.props.updateChart(this.props.figureId,{showSubTotals});}
onUpdateShowConnectorLines(showConnectorLines){this.props.updateChart(this.props.figureId,{showConnectorLines});}
onUpdateFirstValueAsSubtotal(firstValueAsSubtotal){this.props.updateChart(this.props.figureId,{firstValueAsSubtotal});}
updateColor(colorName,color){this.props.updateChart(this.props.figureId,{[colorName]:color});}
get axesList(){return[{id:"x",name:_t("Horizontal axis")},{id:"y",name:_t("Vertical axis")},];}
get positiveValuesColor(){return(this.props.definition.positiveValuesColor||CHART_WATERFALL_POSITIVE_COLOR);}
get negativeValuesColor(){return(this.props.definition.negativeValuesColor||CHART_WATERFALL_NEGATIVE_COLOR);}
get subTotalValuesColor(){return(this.props.definition.subTotalValuesColor||CHART_WATERFALL_SUBTOTAL_COLOR);}
updateVerticalAxisPosition(value){this.props.updateChart(this.props.figureId,{verticalAxisPosition:value,});}}
const chartSidePanelComponentRegistry=new Registry();chartSidePanelComponentRegistry.add("line",{configuration:LineConfigPanel,design:LineChartDesignPanel,}).add("scatter",{configuration:ScatterConfigPanel,design:ChartWithAxisDesignPanel,}).add("bar",{configuration:BarConfigPanel,design:ChartWithAxisDesignPanel,}).add("combo",{configuration:GenericChartConfigPanel,design:ComboChartDesignPanel,}).add("pie",{configuration:GenericChartConfigPanel,design:PieChartDesignPanel,}).add("gauge",{configuration:GaugeChartConfigPanel,design:GaugeChartDesignPanel,}).add("scorecard",{configuration:ScorecardChartConfigPanel,design:ScorecardChartDesignPanel,}).add("waterfall",{configuration:GenericChartConfigPanel,design:WaterfallChartDesignPanel,}).add("pyramid",{configuration:GenericChartConfigPanel,design:ChartWithAxisDesignPanel,}).add("radar",{configuration:GenericChartConfigPanel,design:RadarChartDesignPanel,}).add("sunburst",{configuration:HierarchicalChartConfigPanel,design:SunburstChartDesignPanel,}).add("geo",{configuration:GeoChartConfigPanel,design:GeoChartDesignPanel,}).add("funnel",{configuration:FunnelChartConfigPanel,design:FunnelChartDesignPanel,}).add("treemap",{configuration:HierarchicalChartConfigPanel,design:TreeMapChartDesignPanel,});css`
  .o-section .o-input.o-type-selector {
    height: 30px;
    padding-left: 35px;
    padding-top: 5px;
  }
  .o-type-selector-preview {
    left: 5px;
    top: 3px;
    .o-chart-preview {
      width: 24px;
      height: 24px;
    }
  }

  .o-popover .o-chart-select-popover {
    background: #fff;
    .o-chart-type-item {
      cursor: pointer;
      padding: 3px 6px;
      margin: 1px 2px;
      &.selected,
      &:hover {
        border: 1px solid ${ACTION_COLOR};
        background: ${BADGE_SELECTED_COLOR};
        padding: 2px 5px;
      }
      .o-chart-preview {
        width: 48px;
        height: 48px;
      }
    }
  }
`;class ChartTypePicker extends Component{static template="o-spreadsheet-ChartTypePicker";static components={Section,Popover};static props={figureId:String,chartPanelStore:Object};categories=chartCategories;chartTypeByCategories={};popoverRef=useRef("popoverRef");selectRef=useRef("selectRef");state=useState({popoverProps:undefined,popoverStyle:""});setup(){useExternalListener(window,"pointerdown",this.onExternalClick,{capture:true});for(const subtypeProperties of chartSubtypeRegistry.getAll()){if(this.chartTypeByCategories[subtypeProperties.category]){this.chartTypeByCategories[subtypeProperties.category].push(subtypeProperties);}
else{this.chartTypeByCategories[subtypeProperties.category]=[subtypeProperties];}}}
onExternalClick(ev){if(isChildEvent(this.popoverRef.el?.parentElement,ev)||isChildEvent(this.selectRef.el,ev)){return;}
this.closePopover();}
onTypeChange(type){this.props.chartPanelStore.changeChartType(this.props.figureId,type);this.closePopover();}
getChartDefinition(figureId){return this.env.model.getters.getChartDefinition(figureId);}
getSelectedChartSubtypeProperties(){const definition=this.getChartDefinition(this.props.figureId);const matchedChart=chartSubtypeRegistry.getAll().find((c)=>c.matcher?.(definition)||false);return matchedChart||chartSubtypeRegistry.get(definition.type);}
onPointerDown(ev){if(this.state.popoverProps){this.closePopover();return;}
const target=ev.currentTarget;const{bottom,right,width}=target.getBoundingClientRect();this.state.popoverProps={anchorRect:{x:right,y:bottom,width:0,height:0},positioning:"top-right",verticalOffset:0,};this.state.popoverStyle=cssPropertiesToCss({width:`${width}px`});}
closePopover(){this.state.popoverProps=undefined;}}
class MainChartPanelStore extends SpreadsheetStore{mutators=["activatePanel","changeChartType"];panel="configuration";creationContexts={};activatePanel(panel){this.panel=panel;}
changeChartType(figureId,newDisplayType){const currentCreationContext=this.getters.getContextCreationChart(figureId);const savedCreationContext=this.creationContexts[figureId]||{};let newRanges=currentCreationContext?.range;if(newRanges?.every((range,i)=>deepEquals(range,savedCreationContext.range?.[i]))){newRanges=Object.assign([],savedCreationContext.range,currentCreationContext?.range);}
this.creationContexts[figureId]={...savedCreationContext,...currentCreationContext,range:newRanges,};const sheetId=this.getters.getFigureSheetId(figureId);if(!sheetId){return;}
const definition=this.getChartDefinitionFromContextCreation(figureId,newDisplayType);this.model.dispatch("UPDATE_CHART",{definition,figureId,sheetId,});}
getChartDefinitionFromContextCreation(figureId,newDisplayType){const newChartInfo=chartSubtypeRegistry.get(newDisplayType);const ChartClass=chartRegistry.get(newChartInfo.chartType);return{...ChartClass.getChartDefinitionFromContextCreation(this.creationContexts[figureId]),...newChartInfo.subtypeDefinition,};}}
css`
  .o-chart {
    .o-panel {
      display: flex;
      .o-panel-element {
        flex: 1 0 auto;
        padding: 8px 0px;
        text-align: center;
        cursor: pointer;
        border-right: 1px solid ${GRAY_300};

        &.inactive {
          color: ${TEXT_BODY};
          background-color: ${GRAY_100};
          border-bottom: 1px solid ${GRAY_300};
        }

        &:not(.inactive) {
          color: ${TEXT_HEADING};
          border-bottom: 1px solid #fff;
        }

        .fa {
          margin-right: 4px;
        }
      }
      .o-panel-element:last-child {
        border-right: none;
      }
    }
  }
`;class ChartPanel extends Component{static template="o-spreadsheet-ChartPanel";static components={Section,ChartTypePicker};static props={onCloseSidePanel:Function,figureId:String};panelContentRef;scrollPositions={configuration:0,design:0,};store;get figureId(){return this.props.figureId;}
setup(){this.store=useLocalStore(MainChartPanelStore);this.panelContentRef=useRef("panelContent");useEffect(()=>{const el=this.panelContentRef.el;const activePanel=this.store.panel;if(el){el.scrollTop=this.scrollPositions[activePanel];}},()=>[this.store.panel]);}
switchPanel(panel){const el=this.panelContentRef.el;if(el){this.scrollPositions[this.store.panel]=el.scrollTop;}
this.store.activatePanel(panel);}
updateChart(figureId,updateDefinition){if(figureId!==this.figureId){return;}
const definition={...this.getChartDefinition(this.figureId),...updateDefinition,};return this.env.model.dispatch("UPDATE_CHART",{definition,figureId,sheetId:this.env.model.getters.getFigureSheetId(figureId),});}
canUpdateChart(figureId,updateDefinition){if(figureId!==this.figureId||!this.env.model.getters.isChartDefined(figureId)){return;}
const definition={...this.getChartDefinition(this.figureId),...updateDefinition,};return this.env.model.canDispatch("UPDATE_CHART",{definition,figureId,sheetId:this.env.model.getters.getFigureSheetId(figureId),});}
onTypeChange(type){if(!this.figureId){return;}
this.store.changeChartType(this.figureId,type);}
get chartPanel(){if(!this.figureId){throw new Error("Chart not defined.");}
const type=this.env.model.getters.getChartType(this.figureId);if(!type){throw new Error("Chart not defined.");}
const chartPanel=chartSidePanelComponentRegistry.get(type);if(!chartPanel){throw new Error(`Component is not defined for type ${type}`);}
return chartPanel;}
getChartDefinition(figureId){return this.env.model.getters.getChartDefinition(figureId);}}
css`
  .o-icon-picker {
    position: absolute;
    z-index: ${ComponentsImportance.IconPicker};
    box-shadow: 1px 2px 5px 2px rgba(51, 51, 51, 0.15);
    background-color: white;
    padding: 2px 1px;
  }
  .o-cf-icon-line {
    display: flex;
    padding: 0 6px;
  }
  .o-icon-picker-item {
    cursor: pointer;
    &:hover {
      background-color: ${BADGE_SELECTED_COLOR};
      outline: ${ACTION_COLOR} solid 1px;
    }
  }
`;class IconPicker extends Component{static template="o-spreadsheet-IconPicker";static props={onIconPicked:Function,};icons=ICONS;iconSets=ICON_SETS;onIconClick(icon){if(icon){this.props.onIconPicked(icon);}}}
function useHighlightsOnHover(ref,highlightProvider){const hoverState=useHoveredElement(ref);useHighlights({get highlights(){return hoverState.hovered?highlightProvider.highlights:[];},});}
function useHighlights(highlightProvider){const stores=useStoreProvider();const store=useLocalStore(HighlightStore);onMounted(()=>{store.register(highlightProvider);});let currentHighlights=highlightProvider.highlights;useEffect((highlights)=>{if(!deepEquals(highlights,currentHighlights)){currentHighlights=highlights;stores.trigger("store-updated");}},()=>[highlightProvider.highlights]);}
css`
  .o-cf-preview {
    &.o-cf-cursor-ptr {
      cursor: pointer;
    }

    border-bottom: 1px solid ${GRAY_300};
    height: 80px;
    padding: 10px;
    position: relative;
    cursor: pointer;
    &:hover,
    &.o-cf-dragging {
      background-color: ${GRAY_200};
    }

    &:not(:hover) .o-cf-delete-button {
      display: none;
    }
    .o-cf-preview-icon {
      border: 1px solid ${GRAY_300};
      background-color: #fff;
      position: absolute;
      height: 50px;
      width: 50px;
      .o-icon {
        width: ${CF_ICON_EDGE_LENGTH}px;
        height: ${CF_ICON_EDGE_LENGTH}px;
      }
    }
    .o-cf-preview-description {
      left: 65px;
      margin-bottom: auto;
      margin-right: 8px;
      margin-top: auto;
      position: relative;
      width: 142px;
      .o-cf-preview-description-rule {
        margin-bottom: 4px;
        max-height: 2.8em;
        line-height: 1.4em;
      }
      .o-cf-preview-range {
        font-size: 12px;
      }
    }
    .o-cf-delete {
      left: 90%;
      top: 39%;
      position: absolute;
    }
    &:not(:hover):not(.o-cf-dragging) .o-cf-drag-handle {
      display: none !important;
    }
    .o-cf-drag-handle {
      left: -8px;
      cursor: move;
      .o-icon {
        width: 6px;
        height: 30px;
      }
    }

    .o-icon.arrow-down {
      color: #e06666;
    }
    .o-icon.arrow-up {
      color: #6aa84f;
    }
  }
`;class ConditionalFormatPreview extends Component{static template="o-spreadsheet-ConditionalFormatPreview";icons=ICONS;ref=useRef("cfPreview");setup(){useHighlightsOnHover(this.ref,this);}
getPreviewImageStyle(){const rule=this.props.conditionalFormat.rule;if(rule.type==="CellIsRule"){return cssPropertiesToCss(cellStyleToCss(rule.style));}
else if(rule.type==="ColorScaleRule"){const minColor=colorNumberString(rule.minimum.color);const midColor=rule.midpoint?colorNumberString(rule.midpoint.color):null;const maxColor=colorNumberString(rule.maximum.color);const baseString="background-image: linear-gradient(to right, ";return midColor?baseString+minColor+", "+midColor+", "+maxColor+")":baseString+minColor+", "+maxColor+")";}
else if(rule.type==="DataBarRule"){const color=colorNumberString(rule.color);return`background-image: linear-gradient(to right, ${color} 50%, white 50%)`;}
return"";}
getDescription(){const cf=this.props.conditionalFormat;switch(cf.rule.type){case"CellIsRule":return criterionEvaluatorRegistry.get(cf.rule.operator).getPreview({...cf.rule,type:cf.rule.operator},this.env.model.getters);case"ColorScaleRule":return CfTerms.ColorScale;case"IconSetRule":return CfTerms.IconSet;case"DataBarRule":return CfTerms.DataBar;}}
deleteConditionalFormat(){this.env.model.dispatch("REMOVE_CONDITIONAL_FORMAT",{id:this.props.conditionalFormat.id,sheetId:this.env.model.getters.getActiveSheetId(),});}
onMouseDown(event){this.props.onMouseDown(event);}
get highlights(){const sheetId=this.env.model.getters.getActiveSheetId();return this.props.conditionalFormat.ranges.map((range)=>({range:this.env.model.getters.getRangeFromSheetXC(sheetId,range),color:HIGHLIGHT_COLOR,fillAlpha:0.06,}));}}
ConditionalFormatPreview.props={conditionalFormat:Object,onPreviewClick:Function,onMouseDown:Function,class:String,};class ConditionalFormatPreviewList extends Component{static template="o-spreadsheet-ConditionalFormatPreviewList";static props={conditionalFormats:Array,onPreviewClick:Function,onAddConditionalFormat:Function,};static components={ConditionalFormatPreview};icons=ICONS;dragAndDrop=useDragAndDropListItems();cfListRef=useRef("cfList");setup(){onWillUpdateProps((nextProps)=>{if(!deepEquals(this.props.conditionalFormats,nextProps.conditionalFormats)){this.dragAndDrop.cancel();}});}
getPreviewDivStyle(cf){return this.dragAndDrop.itemsStyle[cf.id]||"";}
onPreviewMouseDown(cf,event){if(event.button!==0)
return;const previewRects=Array.from(this.cfListRef.el.children).map((previewEl)=>getBoundingRectAsPOJO(previewEl));const items=this.props.conditionalFormats.map((cf,index)=>({id:cf.id,size:previewRects[index].height,position:previewRects[index].y,}));this.dragAndDrop.start("vertical",{draggedItemId:cf.id,initialMousePosition:event.clientY,items:items,scrollableContainerEl:this.cfListRef.el,onDragEnd:(cfId,finalIndex)=>this.onDragEnd(cfId,finalIndex),});}
onDragEnd(cfId,finalIndex){const originalIndex=this.props.conditionalFormats.findIndex((sheet)=>sheet.id===cfId);const delta=originalIndex-finalIndex;if(delta!==0){this.env.model.dispatch("CHANGE_CONDITIONAL_FORMAT_PRIORITY",{cfId,delta,sheetId:this.env.model.getters.getActiveSheetId(),});}}}
css`
  .o-cf-ruleEditor {
    .o-cf-preview-display {
      border: 1px solid ${GRAY_300};
      padding: 10px;
    }

    .o-cf-cell-is-rule {
      .o-divider {
        border-right: 1px solid ${GRAY_300};
        margin: 4px 6px;
      }
    }
    .o-cf-color-scale-editor {
      .o-threshold {
        .o-select-with-input {
          max-width: 150px;
        }
        .o-threshold-value {
          flex-grow: 1;
          flex-basis: 60%;
          min-width: 0px; /* input overflows in Firefox otherwise */
        }
        .o-threshold-value input:disabled {
          background-color: #edebed;
        }
      }
    }
    .o-cf-iconset-rule {
      .o-cf-clickable-icon {
        border: 1px solid ${GRAY_200};
        border-radius: 4px;
        cursor: pointer;
        &:hover {
          border-color: ${ACTION_COLOR};
          background-color: ${BADGE_SELECTED_COLOR};
        }
        .o-icon {
          width: ${CF_ICON_EDGE_LENGTH}px;
          height: ${CF_ICON_EDGE_LENGTH}px;
        }
      }
      .o-cf-iconsets {
        gap: 11px;
        .o-cf-iconset {
          padding: 7px 8px;
          width: 95px;
          .o-icon {
            margin: 0 3px;
          }
          svg {
            vertical-align: baseline;
          }
        }
      }
      .o-inflection {
        .o-cf-icon-button {
          padding: 4px 10px;
        }
        table {
          font-size: 13px;
          td {
            padding: 6px 0;
          }

          th.o-cf-iconset-icons {
            width: 25px;
          }
          th.o-cf-iconset-text {
            width: 82px;
          }
          th.o-cf-iconset-operator {
            width: 20px;
          }
          .o-cf-iconset-type {
            min-width: 80px;
          }
        }
      }
    }

    .o-icon.arrow-down {
      color: #e06666;
    }
    .o-icon.arrow-up {
      color: #6aa84f;
    }
  }
`;class ConditionalFormattingEditor extends Component{static template="o-spreadsheet-ConditionalFormattingEditor";static props={editedCf:Object,onCancel:Function,onSave:Function,};static components={SelectionInput,IconPicker,ColorPickerWidget,ConditionalFormatPreviewList,Section,RoundColorPicker,StandaloneComposer,BadgeSelection,ValidationMessages,SelectMenu,};icons=ICONS;iconSets=ICON_SETS;getTextDecoration=getTextDecoration;colorNumberString=colorNumberString;state;setup(){this.state=useState({errors:[],currentCFType:this.props.editedCf.rule.type,ranges:this.props.editedCf.ranges,rules:this.getDefaultRules(),});switch(this.props.editedCf.rule.type){case"CellIsRule":this.state.rules.cellIs=this.props.editedCf.rule;break;case"ColorScaleRule":this.state.rules.colorScale=this.props.editedCf.rule;break;case"IconSetRule":this.state.rules.iconSet=this.props.editedCf.rule;break;case"DataBarRule":this.state.rules.dataBar=this.props.editedCf.rule;break;}
useExternalListener(window,"click",this.closeMenus);}
get isRangeValid(){return this.state.errors.includes("EmptyRange");}
get errorMessages(){return this.state.errors.map((error)=>CfTerms.Errors[error]||CfTerms.Errors.Unexpected);}
get cfTypesValues(){return[{value:"CellIsRule",label:_t("Single color")},{value:"ColorScaleRule",label:_t("Color scale")},{value:"IconSetRule",label:_t("Icon set")},{value:"DataBarRule",label:_t("Data bar")},];}
updateConditionalFormat(newCf){const ranges=newCf.ranges||this.state.ranges;const invalidRanges=this.state.ranges.some((xc)=>!xc.match(rangeReference));if(invalidRanges){if(!newCf.suppressErrors){this.state.errors=["InvalidRange"];}
return["InvalidRange"];}
const sheetId=this.env.model.getters.getActiveSheetId();const locale=this.env.model.getters.getLocale();const rule=newCf.rule||this.getEditedRule(this.state.currentCFType);const result=this.env.model.dispatch("ADD_CONDITIONAL_FORMAT",{cf:{rule:canonicalizeCFRule(rule,locale),id:this.props.editedCf.id,},ranges:ranges.map((xc)=>this.env.model.getters.getRangeDataFromXc(sheetId,xc)),sheetId,});const reasons=result.reasons.filter((r)=>r!=="NoChanges");if(!newCf.suppressErrors){this.state.errors=reasons;}
return reasons;}
getEditedRule(ruleType){switch(ruleType){case"CellIsRule":return this.state.rules.cellIs;case"ColorScaleRule":return this.state.rules.colorScale;case"IconSetRule":return this.state.rules.iconSet;case"DataBarRule":return this.state.rules.dataBar;}}
onSave(){const result=this.updateConditionalFormat({});if(result.length===0){this.props.onSave();}}
getDefaultRules(){return{cellIs:{type:"CellIsRule",operator:"isNotEmpty",values:[],style:{fillColor:"#b6d7a8"},},colorScale:{type:"ColorScaleRule",minimum:{type:"value",color:hexaToInt("EFF7FF")},midpoint:undefined,maximum:{type:"value",color:0x6aa84f},},iconSet:{type:"IconSetRule",icons:{upper:"arrowGood",middle:"arrowNeutral",lower:"arrowBad",},upperInflectionPoint:{type:"percentage",value:"66",operator:"gt",},lowerInflectionPoint:{type:"percentage",value:"33",operator:"gt",},},dataBar:{type:"DataBarRule",color:0xd9ead3,},};}
changeRuleType(ruleType){if(this.state.currentCFType===ruleType){return;}
this.state.errors=[];this.state.currentCFType=ruleType;this.updateConditionalFormat({rule:this.getEditedRule(ruleType),suppressErrors:true});}
onRangeUpdate(ranges){this.state.ranges=ranges;}
onRangeConfirmed(){this.updateConditionalFormat({ranges:this.state.ranges});}
toggleMenu(menu){const isSelected=this.state.openedMenu===menu;this.closeMenus();if(!isSelected){this.state.openedMenu=menu;}}
closeMenus(){this.state.openedMenu=undefined;}
get isValue1Invalid(){return(this.state.errors.includes("FirstArgMissing")||this.state.errors.includes("ValueCellIsInvalidFormula"));}
get isValue2Invalid(){return this.state.errors.includes("SecondArgMissing");}
toggleStyle(tool){const style=this.state.rules.cellIs.style;style[tool]=!style[tool];this.updateConditionalFormat({rule:this.state.rules.cellIs});this.closeMenus();}
onKeydown(event){if(event.key==="F4"){const target=event.target;const update=cycleFixedReference({start:target.selectionStart??0,end:target.selectionEnd??0},target.value,this.env.model.getters.getLocale());if(!update){return;}
target.value=update.content;target.setSelectionRange(update.selection.start,update.selection.end);target.dispatchEvent(new Event("input"));}}
setColor(target,color){this.state.rules.cellIs.style[target]=color;this.updateConditionalFormat({rule:this.state.rules.cellIs});this.closeMenus();}
editOperator(operator){this.state.rules.cellIs.operator=operator;this.updateConditionalFormat({rule:this.state.rules.cellIs,suppressErrors:true});this.closeMenus();}
get cfCriterionMenuItems(){return getCriterionMenuItems((type)=>this.editOperator(type),availableConditionalFormatOperators);}
get selectedCriterionName(){return criterionEvaluatorRegistry.get(this.state.rules.cellIs.operator).name;}
get criterionComponent(){return criterionComponentRegistry.get(this.state.rules.cellIs.operator).component;}
get genericCriterion(){return{type:this.state.rules.cellIs.operator,values:this.state.rules.cellIs.values,};}
onRuleValuesChanged(rule){this.state.rules.cellIs.values=rule.values;this.updateConditionalFormat({rule:{...this.state.rules.cellIs,values:rule.values}});}
isValueInvalid(threshold){switch(threshold){case"minimum":return(this.state.errors.includes("MinInvalidFormula")||this.state.errors.includes("MinBiggerThanMid")||this.state.errors.includes("MinBiggerThanMax")||this.state.errors.includes("MinNaN"));case"midpoint":return(this.state.errors.includes("MidInvalidFormula")||this.state.errors.includes("MidNaN")||this.state.errors.includes("MidBiggerThanMax"));case"maximum":return(this.state.errors.includes("MaxInvalidFormula")||this.state.errors.includes("MaxNaN"));default:return false;}}
setColorScaleColor(target,color){if(!isColorValid(color)){return;}
const point=this.state.rules.colorScale[target];if(point){point.color=colorToNumber(color);}
this.updateConditionalFormat({rule:this.state.rules.colorScale});this.closeMenus();}
getPreviewGradient(){const rule=this.state.rules.colorScale;const minColor=colorNumberString(rule.minimum.color);const midColor=colorNumberString(rule.midpoint?.color||DEFAULT_COLOR_SCALE_MIDPOINT_COLOR);const maxColor=colorNumberString(rule.maximum.color);const baseString="background-image: linear-gradient(to right, ";return rule.midpoint===undefined?baseString+minColor+", "+maxColor+")":baseString+minColor+", "+midColor+", "+maxColor+")";}
getThresholdColor(threshold){return threshold?colorNumberString(threshold.color):colorNumberString(DEFAULT_COLOR_SCALE_MIDPOINT_COLOR);}
onMidpointChange(ev){const type=ev.target.value;const rule=this.state.rules.colorScale;if(type==="none"){rule.midpoint=undefined;}
else{rule.midpoint={color:DEFAULT_COLOR_SCALE_MIDPOINT_COLOR,value:"",...rule.midpoint,type,};}
this.updateConditionalFormat({rule,suppressErrors:true});}
updateThresholdType(threshold,thresholdType){this.state.rules.colorScale[threshold].type=thresholdType;this.updateConditionalFormat({rule:this.state.rules.colorScale,suppressErrors:true});}
updateThresholdValue(threshold,value){this.state.rules.colorScale[threshold].value=value;this.updateConditionalFormat({rule:this.state.rules.colorScale});}
isInflectionPointInvalid(inflectionPoint){switch(inflectionPoint){case"lowerInflectionPoint":return(this.state.errors.includes("ValueLowerInflectionNaN")||this.state.errors.includes("ValueLowerInvalidFormula")||this.state.errors.includes("LowerBiggerThanUpper"));case"upperInflectionPoint":return(this.state.errors.includes("ValueUpperInflectionNaN")||this.state.errors.includes("ValueUpperInvalidFormula")||this.state.errors.includes("LowerBiggerThanUpper"));default:return true;}}
reverseIcons(){const icons=this.state.rules.iconSet.icons;const upper=icons.upper;icons.upper=icons.lower;icons.lower=upper;this.updateConditionalFormat({rule:this.state.rules.iconSet});}
setIconSet(iconSet){const icons=this.state.rules.iconSet.icons;icons.upper=this.iconSets[iconSet].good;icons.middle=this.iconSets[iconSet].neutral;icons.lower=this.iconSets[iconSet].bad;this.updateConditionalFormat({rule:this.state.rules.iconSet});}
setIcon(target,icon){this.state.rules.iconSet.icons[target]=icon;this.updateConditionalFormat({rule:this.state.rules.iconSet});}
setInflectionOperator(inflectionPoint,operator){this.state.rules.iconSet[inflectionPoint].operator=operator;this.updateConditionalFormat({rule:this.state.rules.iconSet});}
setInflectionValue(inflectionPoint,value){this.state.rules.iconSet[inflectionPoint].value=value;this.updateConditionalFormat({rule:this.state.rules.iconSet});}
setInflectionType(inflectionPoint,type,ev){this.state.rules.iconSet[inflectionPoint].type=type;this.updateConditionalFormat({rule:this.state.rules.iconSet,suppressErrors:true});}
getColorScaleComposerProps(thresholdType){const threshold=this.state.rules.colorScale[thresholdType];if(!threshold){throw new Error("Threshold not found");}
const isInvalid=this.isValueInvalid(thresholdType);return{onConfirm:(str)=>{threshold.value=str;this.updateConditionalFormat({rule:this.state.rules.colorScale});},composerContent:threshold.value||"",placeholder:_t("Formula"),defaultStatic:true,invalid:isInvalid,class:"o-sidePanel-composer",defaultRangeSheetId:this.env.model.getters.getActiveSheetId(),};}
getColorIconSetComposerProps(inflectionPoint){const inflection=this.state.rules.iconSet[inflectionPoint];const isInvalid=this.isInflectionPointInvalid(inflectionPoint);return{onConfirm:(str)=>{inflection.value=str;this.updateConditionalFormat({rule:this.state.rules.iconSet});},composerContent:inflection.value||"",placeholder:_t("Formula"),defaultStatic:true,invalid:isInvalid,class:"o-sidePanel-composer",defaultRangeSheetId:this.env.model.getters.getActiveSheetId(),};}
getRangeValues(){return[this.state.rules.dataBar.rangeValues||""];}
updateDataBarColor(color){if(!isColorValid(color)){return;}
this.state.rules.dataBar.color=Number.parseInt(color.slice(1),16);this.updateConditionalFormat({rule:this.state.rules.dataBar});}
onDataBarRangeUpdate(ranges){this.state.rules.dataBar.rangeValues=ranges[0];}
onDataBarRangeChange(){this.updateConditionalFormat({rule:this.state.rules.dataBar});}}
class ConditionalFormattingPanel extends Component{static template="o-spreadsheet-ConditionalFormattingPanel";static props={selection:{type:Object,optional:true},onCloseSidePanel:Function,};static components={ConditionalFormatPreviewList,ConditionalFormattingEditor,Section,};activeSheetId;originalEditedCf=undefined;state=useState({mode:"list",});setup(){this.activeSheetId=this.env.model.getters.getActiveSheetId();const sheetId=this.env.model.getters.getActiveSheetId();const rules=this.env.model.getters.getRulesSelection(sheetId,this.props.selection||[]);if(rules.length===1){const cf=this.conditionalFormats.find((c)=>c.id===rules[0]);if(cf){this.editConditionalFormat(cf);}}
onWillUpdateProps((nextProps)=>{const newActiveSheetId=this.env.model.getters.getActiveSheetId();if(newActiveSheetId!==this.activeSheetId){this.activeSheetId=newActiveSheetId;this.switchToList();}
else if(nextProps.selection!==this.props.selection){const sheetId=this.env.model.getters.getActiveSheetId();const rules=this.env.model.getters.getRulesSelection(sheetId,nextProps.selection||[]);if(rules.length===1){const cf=this.conditionalFormats.find((c)=>c.id===rules[0]);if(cf){this.editConditionalFormat(cf);}}
else{this.switchToList();}}
else if(!this.editedCF){this.switchToList();}});}
get conditionalFormats(){const cfs=this.env.model.getters.getConditionalFormats(this.env.model.getters.getActiveSheetId());return cfs.map((cf)=>({...cf,rule:localizeCFRule(cf.rule,this.env.model.getters.getLocale()),}));}
switchToList(){this.state.mode="list";this.state.editedCfId=undefined;this.originalEditedCf=undefined;}
addConditionalFormat(){const cfId=this.env.model.uuidGenerator.smallUuid();this.env.model.dispatch("ADD_CONDITIONAL_FORMAT",{sheetId:this.activeSheetId,ranges:this.env.model.getters.getSelectedZones().map((zone)=>this.env.model.getters.getRangeDataFromZone(this.activeSheetId,zone)),cf:{id:cfId,rule:{type:"CellIsRule",operator:"isNotEmpty",style:{fillColor:"#b6d7a8"},values:[],},},});this.state.editedCfId=cfId;this.state.mode="edit";this.originalEditedCf=undefined;}
editConditionalFormat(cf){this.state.mode="edit";this.state.editedCfId=cf.id;this.originalEditedCf=cf;}
cancelEdition(){if(this.originalEditedCf){this.env.model.dispatch("ADD_CONDITIONAL_FORMAT",{sheetId:this.activeSheetId,ranges:this.originalEditedCf.ranges.map((range)=>this.env.model.getters.getRangeDataFromXc(this.activeSheetId,range)),cf:this.originalEditedCf,});}
else if(this.state.editedCfId){this.env.model.dispatch("REMOVE_CONDITIONAL_FORMAT",{sheetId:this.activeSheetId,id:this.state.editedCfId,});}
this.switchToList();}
get editedCF(){return this.conditionalFormats.find((cf)=>cf.id===this.state.editedCfId);}}
const currenciesRegistry=new Registry();css`
  .o-custom-currency {
    .o-format-proposals {
      color: black;
    }

    .o-format-examples {
      background: #f9fafb;
      padding: 8px;
      border-radius: 4px;
      border: 1px solid #d8dadd;
      color: #374151;
    }

    table {
      table-layout: fixed;
    }
  }
`;class CustomCurrencyPanel extends Component{static template="o-spreadsheet-CustomCurrencyPanel";static components={Section,Checkbox};static props={onCloseSidePanel:Function};availableCurrencies;state;setup(){this.availableCurrencies=[];this.state=useState({selectedCurrencyIndex:0,currencyCode:"",currencySymbol:"",selectedFormatIndex:0,isAccountingFormat:false,});onWillStart(()=>this.updateAvailableCurrencies());}
get formatProposals(){const baseCurrency=this.availableCurrencies[this.state.selectedCurrencyIndex];const position=baseCurrency.position;const opposite=baseCurrency.position==="before"?"after":"before";const symbol=this.state.currencySymbol.trim()?this.state.currencySymbol:"";const code=this.state.currencyCode.trim()?this.state.currencyCode:"";const decimalPlaces=baseCurrency.decimalPlaces;if(!symbol&&!code){return[];}
const simple={symbol,position,decimalPlaces};const rounded={symbol,position,decimalPlaces:0};const simpleWithCode={symbol,position,decimalPlaces,code};const roundedWithCode={symbol,position,decimalPlaces:0,code};const simpleOpposite={symbol,position:opposite,decimalPlaces};const roundedOpposite={symbol,position:opposite,decimalPlaces:0};const simpleOppositeWithCode={symbol,position:opposite,decimalPlaces,code};const roundedOppositeWithCode={symbol,position:opposite,decimalPlaces:0,code};const currencies=[rounded,simple,roundedWithCode,simpleWithCode,roundedOpposite,simpleOpposite,roundedOppositeWithCode,simpleOppositeWithCode,];const usedFormats=new Set();const locale=this.env.model.getters.getLocale();return currencies.map((currency)=>{const format=createCurrencyFormat(currency);if((!currency.symbol&&!currency.code)||usedFormats.has(format)){return undefined;}
usedFormats.add(format);return{format,accountingFormat:createAccountingFormat(currency),example:formatValue(1000.0,{format,locale}),};}).filter(isDefined);}
get isSameFormat(){return this.selectedFormat?this.selectedFormat===this.getCommonFormat():false;}
async updateAvailableCurrencies(){if(currenciesRegistry.getAll().length===0){const currencies=(await this.env.loadCurrencies?.())||[];currencies.forEach((currency,index)=>{currenciesRegistry.add(index.toString(),currency);});}
const emptyCurrency={name:_t(CustomCurrencyTerms.Custom),code:"",symbol:"",decimalPlaces:2,position:"after",};this.availableCurrencies=[emptyCurrency,...currenciesRegistry.getAll()];}
updateSelectCurrency(ev){const target=ev.target;this.state.selectedCurrencyIndex=parseInt(target.value,10);const currency=this.availableCurrencies[this.state.selectedCurrencyIndex];this.state.currencyCode=currency.code;this.state.currencySymbol=currency.symbol;}
updateCode(ev){const target=ev.target;this.state.currencyCode=target.value;this.initAvailableCurrencies();}
updateSymbol(ev){const target=ev.target;this.state.currencySymbol=target.value;this.initAvailableCurrencies();}
updateSelectFormat(ev){const target=ev.target;this.state.selectedFormatIndex=parseInt(target.value,10);}
apply(){this.env.model.dispatch("SET_FORMATTING_WITH_PIVOT",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),format:this.selectedFormat,});}
initAvailableCurrencies(){this.state.selectedCurrencyIndex=0;}
getCommonFormat(){const selectedZones=this.env.model.getters.getSelectedZones();const sheetId=this.env.model.getters.getActiveSheetId();const cells=selectedZones.map((zone)=>this.env.model.getters.getEvaluatedCellsInZone(sheetId,zone)).flat();const firstFormat=cells[0].format;return cells.every((cell)=>cell.format===firstFormat)?firstFormat:undefined;}
currencyDisplayName(currency){return currency.name+(currency.code?` (${currency.code})`:"");}
toggleAccountingFormat(){this.state.isAccountingFormat=!this.state.isAccountingFormat;}
getFormatExamples(){const format=this.selectedFormat;const locale=this.env.model.getters.getLocale();return[{label:_t("positive")+":",value:formatValue(1234.56,{format,locale})},{label:_t("negative")+":",value:formatValue(-1234.56,{format,locale})},{label:_t("zero")+":",value:formatValue(0,{format,locale})},];}
get selectedFormat(){const proposal=this.formatProposals[this.state.selectedFormatIndex];return this.state.isAccountingFormat?proposal?.accountingFormat:proposal?.format;}}
class DataValidationEditor extends Component{static template="o-spreadsheet-DataValidationEditor";static components={SelectionInput,SelectMenu,Section,ValidationMessages};static props={rule:{type:Object,optional:true},onExit:Function,onCloseSidePanel:{type:Function,optional:true},};state=useState({rule:this.defaultDataValidationRule,errors:[]});setup(){if(this.props.rule){const sheetId=this.env.model.getters.getActiveSheetId();this.state.rule={...this.props.rule,ranges:this.props.rule.ranges.map((range)=>this.env.model.getters.getRangeString(range,sheetId)),};this.state.rule.criterion.type=this.props.rule.criterion.type;}}
onCriterionTypeChanged(type){this.state.rule.criterion.type=type;}
onRangesChanged(ranges){this.state.rule.ranges=ranges;}
onCriterionChanged(criterion){this.state.rule.criterion=criterion;}
changeRuleIsBlocking(ev){const isBlocking=ev.target.value;this.state.rule.isBlocking=isBlocking==="true";}
onSave(){if(this.state.rule){const result=this.env.model.dispatch("ADD_DATA_VALIDATION_RULE",this.dispatchPayload);if(!result.isSuccessful){this.state.errors=result.reasons;}
else{this.props.onExit();}}}
get dispatchPayload(){const rule={...this.state.rule,ranges:undefined};const locale=this.env.model.getters.getLocale();const criterion=rule.criterion;const criterionEvaluator=criterionEvaluatorRegistry.get(criterion.type);const sheetId=this.env.model.getters.getActiveSheetId();const values=criterion.values.slice(0,criterionEvaluator.numberOfValues(criterion)).map((value)=>value?.trim()).filter((value)=>value!==""&&value!==undefined).map((value)=>canonicalizeContent(value,locale));rule.criterion={...criterion,values};return{sheetId,ranges:this.state.rule.ranges.map((xc)=>this.env.model.getters.getRangeDataFromXc(sheetId,xc)),rule,};}
get dvCriterionMenuItems(){return getCriterionMenuItems((type)=>this.onCriterionTypeChanged(type),availableDataValidationOperators);}
get selectedCriterionName(){const selectedType=this.state.rule.criterion.type;return criterionEvaluatorRegistry.get(selectedType).name;}
get defaultDataValidationRule(){const sheetId=this.env.model.getters.getActiveSheetId();const ranges=this.env.model.getters.getSelectedZones().map((zone)=>zoneToXc(this.env.model.getters.getUnboundedZone(sheetId,zone)));return{id:this.env.model.uuidGenerator.smallUuid(),criterion:{type:"containsText",values:[""]},ranges,};}
get criterionComponent(){return criterionComponentRegistry.get(this.state.rule.criterion.type).component;}
get errorMessages(){return this.state.errors.map((error)=>DVTerms.Errors[error]||DVTerms.Errors.Unexpected);}}
css`
  .o-sidePanel {
    .o-dv-preview {
      height: 70px;
      cursor: pointer;
      border-bottom: 1px solid ${FIGURE_BORDER_COLOR};

      .o-dv-container {
        min-width: 0; /* otherwise flex won't shrink correctly */
      }

      .o-dv-preview-description {
        font-size: 13px;
      }

      &:hover {
        background-color: rgba(0, 0, 0, 0.08);
      }

      &:not(:hover) .o-dv-preview-delete {
        display: none !important;
      }
    }
  }
`;class DataValidationPreview extends Component{static template="o-spreadsheet-DataValidationPreview";static props={onClick:Function,rule:Object,};ref=useRef("dvPreview");setup(){useHighlightsOnHover(this.ref,this);}
deleteDataValidation(){const sheetId=this.env.model.getters.getActiveSheetId();this.env.model.dispatch("REMOVE_DATA_VALIDATION_RULE",{sheetId,id:this.props.rule.id});}
get highlights(){return this.props.rule.ranges.map((range)=>({range,color:HIGHLIGHT_COLOR,fillAlpha:0.06,}));}
get rangesString(){const sheetId=this.env.model.getters.getActiveSheetId();return this.props.rule.ranges.map((range)=>this.env.model.getters.getRangeString(range,sheetId)).join(", ");}
get descriptionString(){return criterionEvaluatorRegistry.get(this.props.rule.criterion.type).getPreview(this.props.rule.criterion,this.env.model.getters);}}
class DataValidationPanel extends Component{static template="o-spreadsheet-DataValidationPanel";static props={onCloseSidePanel:Function,};static components={DataValidationPreview,DataValidationEditor};state=useState({mode:"list",activeRule:undefined});onPreviewClick(id){const sheetId=this.env.model.getters.getActiveSheetId();const rule=this.env.model.getters.getDataValidationRule(sheetId,id);if(rule){this.state.mode="edit";this.state.activeRule=rule;}}
addDataValidationRule(){this.state.mode="edit";this.state.activeRule=undefined;}
onExitEditMode(){this.state.mode="list";this.state.activeRule=undefined;}
localizeDVRule(rule){if(!rule)
return rule;const locale=this.env.model.getters.getLocale();return localizeDataValidationRule(rule,locale);}
get validationRules(){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getDataValidationRules(sheetId);}}
const FIND_AND_REPLACE_HIGHLIGHT_COLOR="#8B008B";var Direction;(function(Direction){Direction[Direction["previous"]=-1]="previous";Direction[Direction["current"]=0]="current";Direction[Direction["next"]=1]="next";})(Direction||(Direction={}));class FindAndReplaceStore extends SpreadsheetStore{mutators=["updateSearchOptions","updateSearchContent","searchFormulas","selectPreviousMatch","selectNextMatch","replace",];allSheetsMatches=[];activeSheetMatches=[];specificRangeMatches=[];currentSearchRegex=null;initialShowFormulaState;preserveSelectedMatchIndex=false;irreplaceableMatchCount=0;isSearchDirty=false;shouldFinalizeUpdateSelection=false;notificationStore=this.get(NotificationStore);selectedMatchIndex=null;toSearch="";toReplace="";searchOptions={matchCase:false,exactMatch:false,searchFormulas:false,searchScope:"activeSheet",specificRange:undefined,};constructor(get){super(get);this.initialShowFormulaState=this.model.getters.shouldShowFormulas();this.searchOptions.searchFormulas=this.initialShowFormulaState;const highlightStore=get(HighlightStore);highlightStore.register(this);this.onDispose(()=>{this.model.dispatch("SET_FORMULA_VISIBILITY",{show:this.initialShowFormulaState});highlightStore.unRegister(this);});}
get searchMatches(){switch(this.searchOptions.searchScope){case"allSheets":return this.allSheetsMatches;case"activeSheet":return this.activeSheetMatches;case"specificRange":return this.specificRangeMatches;}}
updateSearchContent(toSearch){this._updateSearch(toSearch,this.searchOptions);}
updateSearchOptions(searchOptions){this._updateSearch(this.toSearch,{...this.searchOptions,...searchOptions});}
searchFormulas(showFormula){this.model.dispatch("SET_FORMULA_VISIBILITY",{show:showFormula});this.updateSearchOptions({searchFormulas:showFormula});}
selectPreviousMatch(){this.selectNextCell(Direction.previous,{jumpToMatchSheet:true,updateSelection:true,});}
selectNextMatch(){this.selectNextCell(Direction.next,{jumpToMatchSheet:true,updateSelection:true});}
handle(cmd){switch(cmd.type){case"SET_FORMULA_VISIBILITY":this.updateSearchOptions({searchFormulas:cmd.show});break;case"UNDO":case"REDO":case"REMOVE_TABLE":case"UPDATE_FILTER":case"REMOVE_COLUMNS_ROWS":case"HIDE_COLUMNS_ROWS":case"UNHIDE_COLUMNS_ROWS":case"ADD_COLUMNS_ROWS":case"EVALUATE_CELLS":case"UPDATE_CELL":this.isSearchDirty=true;break;case"ACTIVATE_SHEET":this.isSearchDirty=true;this.shouldFinalizeUpdateSelection=true;break;case"REPLACE_SEARCH":for(const match of cmd.matches){this.replaceMatch(match,cmd.searchString,cmd.replaceWith,cmd.searchOptions);}
if(this.irreplaceableMatchCount>0){this.showReplaceWarningMessage(cmd.matches.length,this.irreplaceableMatchCount);}
this.irreplaceableMatchCount=0;break;}}
finalize(){if(this.isSearchDirty){this.refreshSearch({jumpToMatchSheet:false,updateSelection:this.shouldFinalizeUpdateSelection,});this.shouldFinalizeUpdateSelection=false;this.isSearchDirty=false;}}
get allSheetMatchesCount(){return this.allSheetsMatches.length;}
get activeSheetMatchesCount(){return this.activeSheetMatches.length;}
get specificRangeMatchesCount(){return this.specificRangeMatches.length;}
_updateSearch(toSearch,searchOptions){this.searchOptions=searchOptions;if(toSearch!==this.toSearch){this.selectedMatchIndex=null;}
this.toSearch=toSearch;this.currentSearchRegex=getSearchRegex(this.toSearch,this.searchOptions);this.refreshSearch({jumpToMatchSheet:true,updateSelection:true});}
refreshSearch(options){if(!this.preserveSelectedMatchIndex){this.selectedMatchIndex=null;}
this.findMatches();this.selectNextCell(Direction.current,options);}
getSheetsInSearchOrder(){switch(this.searchOptions.searchScope){case"allSheets":const sheetIds=this.getters.getSheetIds();const activeSheetIndex=sheetIds.findIndex((id)=>id===this.getters.getActiveSheetId());return[sheetIds[activeSheetIndex],...sheetIds.slice(activeSheetIndex+1),...sheetIds.slice(0,activeSheetIndex),];case"activeSheet":return[this.getters.getActiveSheetId()];case"specificRange":const specificRange=this.searchOptions.specificRange;if(!specificRange){return[];}
return specificRange?[specificRange.sheetId]:[];}}
findMatches(){const matches=[];if(this.toSearch){for(const sheetId of this.getters.getSheetIds()){matches.push(...this.findMatchesInSheet(sheetId));}}
this.allSheetsMatches=matches;this.activeSheetMatches=matches.filter((match)=>match.sheetId===this.getters.getActiveSheetId());if(this.searchOptions.specificRange){const{sheetId,zone}=this.searchOptions.specificRange;this.specificRangeMatches=matches.filter((match)=>match.sheetId===sheetId&&isInside(match.col,match.row,zone));}
else{this.specificRangeMatches=[];}}
findMatchesInSheet(sheetId){const matches=[];const{left,right,top,bottom}=this.getters.getSheetZone(sheetId);for(let row=top;row<=bottom;row++){for(let col=left;col<=right;col++){const isColHidden=this.getters.isColHidden(sheetId,col);const isRowHidden=this.getters.isRowHidden(sheetId,row);if(isColHidden||isRowHidden){continue;}
const cellPosition={sheetId,col,row};if(this.currentSearchRegex?.test(this.getSearchableString(cellPosition))){const match={sheetId,col,row};matches.push(match);}}}
return matches;}
selectNextCell(indexChange,options){const matches=this.searchMatches;if(!matches.length){this.selectedMatchIndex=null;return;}
let nextIndex;if(this.selectedMatchIndex===null){let nextMatchIndex=-1;for(const sheetId of this.getSheetsInSearchOrder()){nextMatchIndex=matches.findIndex((match)=>match.sheetId===sheetId);if(nextMatchIndex!==-1){break;}}
nextIndex=nextMatchIndex;}
else{nextIndex=this.selectedMatchIndex+indexChange;}
nextIndex=(nextIndex+matches.length)%matches.length;this.selectedMatchIndex=nextIndex;const selectedMatch=matches[nextIndex];if(options.jumpToMatchSheet&&this.getters.getActiveSheetId()!==selectedMatch.sheetId){this.preserveSelectedMatchIndex=true;this.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:this.getters.getActiveSheetId(),sheetIdTo:selectedMatch.sheetId,});this.preserveSelectedMatchIndex=false;this.isSearchDirty=false;}
this.model.selection.getBackToDefault();if(options.updateSelection){this.model.selection.selectCell(selectedMatch.col,selectedMatch.row);}}
replace(){if(this.selectedMatchIndex===null){return;}
this.preserveSelectedMatchIndex=true;this.shouldFinalizeUpdateSelection=true;this.model.dispatch("REPLACE_SEARCH",{searchString:this.toSearch,replaceWith:this.toReplace,matches:[this.searchMatches[this.selectedMatchIndex]],searchOptions:this.searchOptions,});this.preserveSelectedMatchIndex=false;}
replaceAll(){this.model.dispatch("REPLACE_SEARCH",{searchString:this.toSearch,replaceWith:this.toReplace,matches:this.searchMatches,searchOptions:this.searchOptions,});}
showReplaceWarningMessage(totalMatches,irreplaceableMatches){const replaceableMatches=totalMatches-irreplaceableMatches;if(replaceableMatches===0){this.notificationStore.notifyUser({type:"warning",sticky:false,text:_t("Match(es) cannot be replaced as they are part of a formula."),});}
else{this.notificationStore.notifyUser({type:"warning",sticky:false,text:_t("%(replaceable_count)s match(es) replaced. %(irreplaceable_count)s match(es) cannot be replaced as they are part of a formula.",{replaceable_count:replaceableMatches,irreplaceable_count:irreplaceableMatches,}),});}}
replaceMatch(selectedMatch,searchString,replaceWith,searchOptions){const cell=this.getters.getCell(selectedMatch);if(!cell?.content){return;}
if(cell?.isFormula&&!searchOptions.searchFormulas){this.irreplaceableMatchCount++;return;}
const searchRegex=getSearchRegex(searchString,searchOptions);const replaceRegex=new RegExp(searchRegex.source,searchRegex.flags+"g");const toReplace=this.getters.getCellText(selectedMatch,{showFormula:searchOptions.searchFormulas,});const content=toReplace.replace(replaceRegex,replaceWith);const canonicalContent=canonicalizeNumberContent(content,this.getters.getLocale());this.model.dispatch("UPDATE_CELL",{...selectedMatch,content:canonicalContent});}
getSearchableString(position){return this.getters.getCellText(position,{showFormula:this.searchOptions.searchFormulas});}
get highlights(){const highlights=[];const sheetId=this.getters.getActiveSheetId();for(const[index,match]of this.searchMatches.entries()){if(match.sheetId!==sheetId){continue;}
const zone=positionToZone(match);const zoneWithMerge=this.getters.expandZone(sheetId,zone);const{width,height}=this.getters.getVisibleRect(zoneWithMerge);if(width>0&&height>0){highlights.push({range:this.model.getters.getRangeFromZone(sheetId,zoneWithMerge),color:FIND_AND_REPLACE_HIGHLIGHT_COLOR,noBorder:index!==this.selectedMatchIndex,thinLine:true,fillAlpha:0.2,});}}
if(this.searchOptions.searchScope==="specificRange"){const range=this.searchOptions.specificRange;if(range&&range.sheetId===sheetId){highlights.push({range,color:FIND_AND_REPLACE_HIGHLIGHT_COLOR,noFill:true,thinLine:true,});}}
return highlights;}}
css`
  .o-find-and-replace {
    outline: none;
    height: 100%;
    .o-input-search-container {
      display: flex;
      .o-input-with-count {
        flex-grow: 1;
        width: auto;
      }
      .o-input-without-count {
        width: 100%;
      }
      .o-input-count {
        width: fit-content;
        padding: 4px 0 4px 4px;
        white-space: nowrap;
      }
    }

    .o-result-buttons {
      .o-button {
        height: 19px;
        width: 19px;
        .o-icon {
          height: 14px;
          width: 14px;
        }
      }
    }
  }
`;class FindAndReplacePanel extends Component{static template="o-spreadsheet-FindAndReplacePanel";static components={SelectionInput,Section,Checkbox,ValidationMessages};static props={onCloseSidePanel:Function,};searchInput=useRef("searchInput");store;state;updateSearchContent;get hasSearchResult(){return this.store.selectedMatchIndex!==null;}
get searchOptions(){return this.store.searchOptions;}
get allSheetsMatchesCount(){return _t("%s matches in all sheets",this.store.allSheetMatchesCount);}
get currentSheetMatchesCount(){return _t("%(matches)s matches in %(sheetName)s",{matches:this.store.activeSheetMatchesCount,sheetName:this.env.model.getters.getSheetName(this.env.model.getters.getActiveSheetId()),});}
get specificRangeMatchesCount(){const range=this.searchOptions.specificRange;if(!range){return"";}
const{sheetId,zone}=range;return _t("%(matches)s matches in range %(range)s of %(sheetName)s",{matches:this.store.specificRangeMatchesCount,range:zoneToXc(zone),sheetName:this.env.model.getters.getSheetName(sheetId),});}
get searchInfo(){if(!this.store.toSearch){return[];}
return[this.specificRangeMatchesCount,this.currentSheetMatchesCount,this.allSheetsMatchesCount,];}
setup(){this.store=useLocalStore(FindAndReplaceStore);this.state=useState({dataRange:""});onMounted(()=>this.searchInput.el?.focus());onWillUnmount(()=>this.updateSearchContent.stopDebounce());this.updateSearchContent=debounce(this.store.updateSearchContent,200);useExternalListener(window,"keydown",(ev)=>{const code=keyboardEventToShortcutString(ev);if(code==="Ctrl+F"||code==="Ctrl+H"){this.searchInput.el?.focus();ev.preventDefault();ev.stopPropagation();}},{capture:true});}
onFocusSearch(){this.updateDataRange();}
onSearchInput(ev){this.updateSearchContent(ev.target.value);}
onKeydownSearch(ev){if(ev.key==="Enter"){ev.preventDefault();ev.stopPropagation();ev.shiftKey?this.store.selectPreviousMatch():this.store.selectNextMatch();}}
onKeydownReplace(ev){if(ev.key==="Enter"){ev.preventDefault();ev.stopPropagation();this.store.replace();}}
searchFormulas(searchFormulas){this.store.searchFormulas(searchFormulas);}
searchExactMatch(exactMatch){this.store.updateSearchOptions({exactMatch});}
searchMatchCase(matchCase){this.store.updateSearchOptions({matchCase});}
changeSearchScope(ev){const searchScope=ev.target.value;this.store.updateSearchOptions({searchScope});}
onSearchRangeChanged(ranges){this.state.dataRange=ranges[0];}
updateDataRange(){if(!this.state.dataRange||this.searchOptions.searchScope!=="specificRange"){return;}
const specificRange=this.env.model.getters.getRangeFromSheetXC(this.env.model.getters.getActiveSheetId(),this.state.dataRange);this.store.updateSearchOptions({specificRange});}
get pendingSearch(){return this.updateSearchContent.isDebouncePending();}}
css`
  .o-more-formats-panel {
    .format-preview {
      height: 49px;
      background-color: white;
      cursor: pointer;

      &:hover {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }
    .check-icon {
      width: 24px;
    }
  }
`;const DATE_FORMAT_ACTIONS=createActions([formatNumberFullDateTime,formatNumberISODate,formatNumberISODateTime,formatNumberFullWeekDayAndMonth,formatNumberDayAndFullMonth,formatNumberShortWeekDay,formatNumberDayAndShortMonth,formatNumberFullMonth,formatNumberShortMonth,formatNumberDate,formatNumberTime,formatNumberDateTime,formatNumberDuration,formatNumberQuarter,formatNumberFullQuarter,]);class MoreFormatsPanel extends Component{static template="o-spreadsheet-MoreFormatsPanel";static props={onCloseSidePanel:Function,};get dateFormatsActions(){return DATE_FORMAT_ACTIONS;}}
class PivotMeasureDisplayPanelStore extends SpreadsheetStore{pivotId;initialMeasure;mutators=["cancelMeasureDisplayEdition","updateMeasureDisplayType","updateMeasureDisplayField","updateMeasureDisplayValue",];measureDisplay;constructor(get,pivotId,initialMeasure){super(get);this.pivotId=pivotId;this.initialMeasure=initialMeasure;this.measureDisplay=initialMeasure.display||{type:"no_calculations"};}
updateMeasureDisplayType(measureDisplayType){this.updatePivotMeasureDisplay(this.getMeasureDisplay(measureDisplayType,this.measureDisplay.fieldNameWithGranularity,this.measureDisplay.value));}
updateMeasureDisplayField(fieldNameWithGranularity){this.updatePivotMeasureDisplay(this.getMeasureDisplay(this.measureDisplay.type,fieldNameWithGranularity,this.measureDisplay.value));}
updateMeasureDisplayValue(value){this.updatePivotMeasureDisplay(this.getMeasureDisplay(this.measureDisplay.type,this.measureDisplay.fieldNameWithGranularity,value));}
updatePivotMeasureDisplay(newDisplay){const pivotDefinition=deepCopy(this.model.getters.getPivotCoreDefinition(this.pivotId));const measureIndex=this.getMeasureIndex(this.initialMeasure.id,pivotDefinition);const newMeasure={...pivotDefinition.measures[measureIndex],display:newDisplay};pivotDefinition.measures[measureIndex]=newMeasure;const result=this.model.dispatch("UPDATE_PIVOT",{pivot:pivotDefinition,pivotId:this.pivotId,});if(result.isSuccessful){this.measureDisplay=newDisplay;}}
getMeasureDisplay(measureDisplayType,fieldNameWithGranularity,value){switch(measureDisplayType){case"no_calculations":case"%_of_grand_total":case"%_of_col_total":case"%_of_row_total":case"%_of_parent_row_total":case"%_of_parent_col_total":case"index":return{type:measureDisplayType};case"%_of_parent_total":case"running_total":case"%_running_total":case"rank_asc":case"rank_desc":if(!fieldNameWithGranularity){fieldNameWithGranularity=this.fields[0]?.nameWithGranularity;}
return{type:measureDisplayType,fieldNameWithGranularity};case"%_of":case"difference_from":case"%_difference_from":if(!fieldNameWithGranularity){fieldNameWithGranularity=this.fields[0]?.nameWithGranularity;}
const possibleValues=this.getPossibleValues(fieldNameWithGranularity);if(value===undefined||!possibleValues.find((v)=>v.value===value)){value=PREVIOUS_VALUE;}
return{type:measureDisplayType,fieldNameWithGranularity,value:value??PREVIOUS_VALUE,};}}
getMeasureIndex(measureId,pivotDefinition){const measureIndex=pivotDefinition.measures.findIndex((m)=>m.id===measureId);if(measureIndex===-1){throw new Error(`Measure with id ${measureId} not found in pivot.`);}
return measureIndex;}
get doesDisplayNeedsField(){return(["%_of_parent_total","running_total","%_running_total","rank_asc","rank_desc"].includes(this.measureDisplay.type)||this.doesDisplayNeedsValue);}
get fields(){const definition=this.getters.getPivot(this.pivotId).definition;return[...definition.columns,...definition.rows].map((f)=>({...f,displayName:getFieldDisplayName(f),}));}
get doesDisplayNeedsValue(){return this.isDisplayValueDependant(this.measureDisplay);}
isDisplayValueDependant(display){return["%_of","difference_from","%_difference_from"].includes(display.type);}
get values(){const display=this.measureDisplay;if(!this.isDisplayValueDependant(display)){return[];}
return this.getPossibleValues(display.fieldNameWithGranularity);}
getPossibleValues(fieldNameWithGranularity){const baseValues=[{value:PREVIOUS_VALUE,label:_t("(previous)")},{value:NEXT_VALUE,label:_t("(next)")},];const field=this.fields.find((f)=>f.nameWithGranularity===fieldNameWithGranularity);if(!field){return[];}
const values=this.getters.getPivot(this.pivotId).getPossibleFieldValues(field);return[...baseValues,...values];}
cancelMeasureDisplayEdition(){const pivotDefinition=deepCopy(this.model.getters.getPivotCoreDefinition(this.pivotId));const measureIndex=this.getMeasureIndex(this.initialMeasure.id,pivotDefinition);pivotDefinition.measures[measureIndex]={...pivotDefinition.measures[measureIndex],display:this.initialMeasure.display,};this.model.dispatch("UPDATE_PIVOT",{pivot:pivotDefinition,pivotId:this.pivotId,});}}
css`
  .o-sidePanel {
    .o-pivot-measure-display-field,
    .o-pivot-measure-display-value {
      border: solid 1px ${GRAY_300};
      border-radius: 3px;
    }

    .o-pivot-measure-display-description {
      white-space: pre-wrap;
      color: dimgray;
      border-left: 2px solid ${GRAY_300};
    }
  }
`;class PivotMeasureDisplayPanel extends Component{static template="o-spreadsheet-PivotMeasureDisplayPanel";static props={onCloseSidePanel:Function,pivotId:String,measure:Object,};static components={Section,Checkbox,RadioSelection};measureDisplayTypeLabels=measureDisplayTerms.labels;measureDisplayDescription=measureDisplayTerms.documentation;store;setup(){this.store=useLocalStore(PivotMeasureDisplayPanelStore,this.props.pivotId,this.props.measure);}
onSave(){this.env.openSidePanel("PivotSidePanel",{pivotId:this.props.pivotId});}
onCancel(){this.store.cancelMeasureDisplayEdition();this.env.openSidePanel("PivotSidePanel",{pivotId:this.props.pivotId});}
get fieldChoices(){return this.store.fields.map((field)=>({value:field.nameWithGranularity,label:field.displayName,}));}}
function getPivotHighlights(getters,pivotId){const sheetId=getters.getActiveSheetId();const pivotCellPositions=getVisiblePivotCellPositions(getters,pivotId);const mergedZones=mergeContiguousZones(pivotCellPositions.map(positionToZone));return mergedZones.map((zone)=>({range:getters.getRangeFromZone(sheetId,zone),noFill:true,color:HIGHLIGHT_COLOR,}));}
function getVisiblePivotCellPositions(getters,pivotId){const positions=[];const sheetId=getters.getActiveSheetId();for(const col of getters.getSheetViewVisibleCols()){for(const row of getters.getSheetViewVisibleRows()){const position={sheetId,col,row};const cellPivotId=getters.getPivotIdFromPosition(position);if(pivotId===cellPivotId){positions.push(position);}}}
return positions;}
css`
  .pivot-defer-update {
    min-height: 40px;
  }
`;class PivotDeferUpdate extends Component{static template="o-spreadsheet-PivotDeferUpdate";static props={deferUpdate:Boolean,isDirty:Boolean,toggleDeferUpdate:Function,discard:Function,apply:Function,};static components={Section,Checkbox,};get deferUpdatesLabel(){return _t("Defer updates");}
get deferUpdatesTooltip(){return _t("Changing the pivot definition requires to reload the data. It may take some time.");}}
function useAutofocus({refName}){const ref=useRef(refName);useEffect((el)=>{el?.focus();},()=>[ref.el]);}
function getHtmlContentFromPattern(pattern,value,highlightColor,className){const pendingHtmlContent=[];pattern=pattern.toLowerCase();for(const patternChar of pattern){const index=value.toLocaleLowerCase().indexOf(patternChar);if(index===-1){continue;}
pendingHtmlContent.push({value:value.slice(0,index),color:""},{value:value[index],color:highlightColor,classes:[className]});value=value.slice(index+1);}
pendingHtmlContent.push({value});return pendingHtmlContent.filter((content)=>content.value);}
css`
  input.pivot-dimension-search-field:focus {
    outline: none;
  }
  .pivot-dimension-search-field-icon svg {
    width: 13px;
    height: 13px;
  }
  .pivot-dimension-search {
    background-color: white;
  }
  .add-dimension.o-button {
    padding: 2px 7px;
    font-weight: 400;
    font-size: 12px;
    flex-grow: 0;
    height: inherit;
  }
`;class AddDimensionButton extends Component{static template="o-spreadsheet-AddDimensionButton";static components={Popover,TextValueProvider};static props={onFieldPicked:Function,fields:Array,slots:{type:Object,optional:true},};buttonRef=useRef("button");popover=useState({isOpen:false});search=useState({input:""});autoComplete;setup(){this.autoComplete=useLocalStore(AutoCompleteStore);this.autoComplete.useProvider(this.getProvider());useExternalListener(window,"click",(ev)=>{if(ev.target!==this.buttonRef.el){this.popover.isOpen=false;}});useAutofocus({refName:"autofocus"});}
getProvider(){return{proposals:this.proposals,autoSelectFirstProposal:false,selectProposal:(value)=>{const field=this.props.fields.find((field)=>field.string===value);if(field){this.pickField(field);}},};}
get proposals(){let fields;if(this.search.input){fields=fuzzyLookup(this.search.input,this.props.fields,(field)=>field.string);}
else{fields=this.props.fields;}
return fields.map((field)=>{const text=field.string;return{text,fuzzySearchKey:text,htmlContent:getHtmlContentFromPattern(this.search.input,text,COMPOSER_ASSISTANT_COLOR,"o-semi-bold"),};});}
get popoverProps(){const{x,y,width,height}=this.buttonRef.el.getBoundingClientRect();return{anchorRect:{x,y,width,height},positioning:"bottom-left",};}
updateSearch(searchInput){this.search.input=searchInput;this.autoComplete.useProvider(this.getProvider());}
pickField(field){this.props.onFieldPicked(field.name);this.togglePopover();}
togglePopover(){this.popover.isOpen=!this.popover.isOpen;this.search.input="";this.autoComplete.useProvider(this.getProvider());}
onKeyDown(ev){switch(ev.key){case"Enter":const proposals=this.autoComplete.provider?.proposals;if(proposals?.length===1){this.autoComplete.provider?.selectProposal(proposals[0].text||"");}
const proposal=this.autoComplete.selectedProposal;this.autoComplete.provider?.selectProposal(proposal?.text||"");break;case"ArrowUp":case"ArrowDown":this.autoComplete.moveSelection(ev.key==="ArrowDown"?"next":"previous");break;case"Escape":this.popover.isOpen=false;break;}}}
css`
  .o-spreadsheet {
    .os-input {
      border-width: 0 0 1px 0;
      border-color: transparent;
      outline: none;
      text-overflow: ellipsis;
      color: ${TEXT_BODY};
    }
    .os-input:hover,
    .os-input:focus {
      border-color: ${GRAY_300};
    }
  }
`;class TextInput extends Component{static template="o-spreadsheet-TextInput";static props={value:String,onChange:Function,class:{type:String,optional:true,},id:{type:String,optional:true,},placeholder:{type:String,optional:true,},autofocus:{type:Boolean,optional:true,},};inputRef=useRef("input");setup(){useExternalListener(window,"click",(ev)=>{if(ev.target!==this.inputRef.el&&this.inputRef.el?.value!==this.props.value){this.save();}},{capture:true});if(this.props.autofocus){useAutofocus({refName:"input"});}}
onKeyDown(ev){switch(ev.key){case"Enter":this.save();ev.preventDefault();ev.stopPropagation();break;case"Escape":if(this.inputRef.el){this.inputRef.el.value=this.props.value;this.inputRef.el.blur();}
ev.preventDefault();ev.stopPropagation();break;}}
save(){const currentValue=(this.inputRef.el?.value||"").trim();if(currentValue!==this.props.value){this.props.onChange(currentValue);}
this.inputRef.el?.blur();}
onMouseDown(ev){if(ev.target!==document.activeElement){ev.preventDefault();ev.stopPropagation();}}
onMouseUp(ev){const target=ev.target;if(target!==document.activeElement){target.focus();target.select();ev.preventDefault();ev.stopPropagation();}}}
class CogWheelMenu extends Component{static template="o-spreadsheet-CogWheelMenu";static components={MenuPopover};static props={items:Array,};buttonRef=useRef("button");menuState=useState({isOpen:false,anchorRect:null,menuItems:[]});menuId=this.env.model.uuidGenerator.uuidv4();toggleMenu(ev){if(ev.closedMenuId===this.menuId){return;}
this.menuState.isOpen=!this.menuState.isOpen;this.menuState.anchorRect=getBoundingRectAsPOJO(this.buttonRef.el);this.menuState.menuItems=createActions(this.props.items);}}
css`
  .pivot-dimension {
    background-color: white;
    border: 1px solid ${GRAY_300};
    border-radius: 4px;

    select.o-input {
      height: inherit;
    }

    select > option {
      background-color: white;
    }

    .pivot-dim-operator-label {
      min-width: 120px;
    }

    &.pivot-dimension-invalid {
      background-color: #ffdddd;
      border-color: red !important;
      select,
      input {
        background-color: #ffdddd;
      }
    }
  }
`;class PivotDimension extends Component{static template="o-spreadsheet-PivotDimension";static props={dimension:Object,onRemoved:{type:Function,optional:true},onNameUpdated:{type:Function,optional:true},slots:{type:Object,optional:true},};static components={CogWheelMenu,TextInput};updateName(name){this.props.onNameUpdated?.(this.props.dimension,name===""||name.startsWith("=")?undefined:name);}}
class PivotDimensionGranularity extends Component{static template="o-spreadsheet-PivotDimensionGranularity";static props={dimension:Object,onUpdated:Function,availableGranularities:Set,allGranularities:Array,};periods=ALL_PERIODS;}
class PivotDimensionOrder extends Component{static template="o-spreadsheet-PivotDimensionOrder";static props={dimension:Object,onUpdated:Function,};}
function createMeasureAutoComplete(pivot,forComputedMeasure){return{sequence:0,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const measureProposals=pivot.measures.filter((m)=>m!==forComputedMeasure).map((measure)=>{const text=getCanonicalSymbolName(measure.id);return{text:text,description:measure.displayName,htmlContent:[{value:text,color:PIVOT_TOKEN_COLOR}],fuzzySearchKey:measure.displayName+text+measure.fieldName,};});const dimensionsProposals=pivot.rows.concat(pivot.columns).map((dimension)=>{const text=getCanonicalSymbolName(dimension.nameWithGranularity);return{text:text,description:dimension.displayName,htmlContent:[{value:text,color:PIVOT_TOKEN_COLOR}],fuzzySearchKey:dimension.displayName+text+dimension.fieldName,};});return measureProposals.concat(dimensionsProposals);},selectProposal(tokenAtCursor,value){let start=tokenAtCursor.end;if(tokenAtCursor.type==="SYMBOL"){start=tokenAtCursor.start;}
const end=tokenAtCursor.end;this.composer.changeComposerCursorSelection(start,end);this.composer.replaceComposerCursorSelection(value);},};}
class PivotMeasureEditor extends Component{static template="o-spreadsheet-PivotMeasureEditor";static components={PivotDimension,StandaloneComposer,};static props={definition:Object,measure:Object,onMeasureUpdated:Function,onRemoved:Function,generateMeasureId:Function,aggregators:Object,pivotId:String,};getMeasureAutocomplete(){return createMeasureAutoComplete(this.props.definition,this.props.measure);}
updateMeasureFormula(formula){this.props.onMeasureUpdated({...this.props.measure,computedBy:{sheetId:this.env.model.getters.getActiveSheetId(),formula:formula[0]==="="?formula:"="+formula,},});}
updateAggregator(aggregator){this.props.onMeasureUpdated({...this.props.measure,aggregator,id:this.props.generateMeasureId(this.props.measure.fieldName,aggregator),});}
updateName(measure,userDefinedName){if(this.props.measure.computedBy&&userDefinedName){this.props.onMeasureUpdated({...this.props.measure,userDefinedName,id:this.props.generateMeasureId(userDefinedName,this.props.measure.aggregator),fieldName:userDefinedName,});}
else{this.props.onMeasureUpdated({...this.props.measure,userDefinedName,});}}
toggleMeasureVisibility(){this.props.onMeasureUpdated({...this.props.measure,isHidden:!this.props.measure.isHidden,});}
openShowValuesAs(){this.env.openSidePanel("PivotMeasureDisplayPanel",{pivotId:this.props.pivotId,measure:this.props.measure,});}
getColoredSymbolToken(token){if(token.type!=="SYMBOL"){return undefined;}
const tokenValue=unquote(token.value,"'");if(this.props.definition.columns.some((col)=>col.nameWithGranularity===tokenValue)||this.props.definition.rows.some((row)=>row.nameWithGranularity===tokenValue)||this.props.definition.measures.some((measure)=>measure.id===tokenValue&&measure.id!==this.props.measure.id)){return PIVOT_TOKEN_COLOR;}
return undefined;}
get isCalculatedMeasureInvalid(){return this.env.model.getters.getMeasureCompiledFormula(this.props.measure).isBadExpression;}}
css`
  .o-pivot-sort {
    .o-sort-card {
      width: fit-content;
      background-color: ${GRAY_100};
      border: 1px solid ${GRAY_300};

      .o-sort-value {
        color: ${PRIMARY_BUTTON_BG};
      }
    }
  }
`;class PivotSortSection extends Component{static template="o-spreadsheet-PivotSortSection";static components={Section,};static props={definition:Object,pivotId:String,};get hasValidSort(){const pivot=this.env.model.getters.getPivot(this.props.pivotId);return(!!this.props.definition.sortedColumn&&isSortedColumnValid(this.props.definition.sortedColumn,pivot));}
get sortDescription(){const sortOrder=this.props.definition.sortedColumn?.order==="asc"?_t("ascending"):_t("descending");return _t("Sorted on column (%(ascOrDesc)s):",{ascOrDesc:sortOrder,});}
get sortValuesAndFields(){const sortedColumn=this.props.definition.sortedColumn;if(!sortedColumn){return[];}
const pivot=this.env.model.getters.getPivot(this.props.pivotId);const locale=this.env.model.getters.getLocale();const currentDomain=[];const sortValues=[];for(const domainItem of sortedColumn.domain){currentDomain.push(domainItem);const{value,format}=pivot.getPivotHeaderValueAndFormat(currentDomain);const label=formatValue(value,{format,locale});const field=pivot.definition.getDimension(domainItem.field);sortValues.push({field:getFieldDisplayName(field),value:label});}
if(sortedColumn.domain.length===0){sortValues.push({value:_t("Total")});}
const measureLabel=pivot.getMeasure(sortedColumn.measure).displayName;sortValues.push({value:measureLabel,field:_t("Measure")});return sortValues;}}
css`
  .add-calculated-measure {
    cursor: pointer;
  }
`;class PivotLayoutConfigurator extends Component{static template="o-spreadsheet-PivotLayoutConfigurator";static components={AddDimensionButton,PivotDimension,PivotDimensionOrder,PivotDimensionGranularity,PivotMeasureEditor,PivotSortSection,};static props={definition:Object,onDimensionsUpdated:Function,unusedGroupableFields:Array,measureFields:Array,unusedGranularities:Object,dateGranularities:Array,datetimeGranularities:Array,getScrollableContainerEl:{type:Function,optional:true},pivotId:String,};dimensionsRef=useRef("pivot-dimensions");dragAndDrop=useDragAndDropListItems();AGGREGATORS=AGGREGATORS;composerFocus;isDateOrDatetimeField=isDateOrDatetimeField;setup(){this.composerFocus=useStore(ComposerFocusStore);}
startDragAndDrop(dimension,event){if(event.button!==0||event.target.tagName==="SELECT"){return;}
const rects=this.getDimensionElementsRects();const definition=this.props.definition;const{columns,rows}=definition;const draggableIds=[...columns.map((col)=>col.nameWithGranularity),"__rows_title__",...rows.map((row)=>row.nameWithGranularity),];const allDimensions=columns.concat(rows);const offset=1;const draggableItems=draggableIds.map((id,index)=>({id,size:rects[index+offset].height,position:rects[index+offset].y,}));this.dragAndDrop.start("vertical",{draggedItemId:dimension.nameWithGranularity,initialMousePosition:event.clientY,items:draggableItems,scrollableContainerEl:this.props.getScrollableContainerEl?.()||this.dimensionsRef.el,onDragEnd:(dimensionName,finalIndex)=>{const originalIndex=draggableIds.findIndex((id)=>id===dimensionName);if(originalIndex===finalIndex){return;}
const draggedItems=[...draggableIds];draggedItems.splice(originalIndex,1);draggedItems.splice(finalIndex,0,dimensionName);const columns=draggedItems.slice(0,draggedItems.indexOf("__rows_title__"));const rows=draggedItems.slice(draggedItems.indexOf("__rows_title__")+1);this.props.onDimensionsUpdated({columns:columns.map((nameWithGranularity)=>allDimensions.find((dimension)=>dimension.nameWithGranularity===nameWithGranularity)).filter(isDefined),rows:rows.map((nameWithGranularity)=>allDimensions.find((dimension)=>dimension.nameWithGranularity===nameWithGranularity)).filter(isDefined),});},});}
getGranularitiesFor(field){if(!isDateOrDatetimeField(field)){return[];}
return field.type==="date"?this.props.dateGranularities:this.props.datetimeGranularities;}
startDragAndDropMeasures(measure,event){if(event.button!==0||event.target.tagName==="SELECT"||event.target.tagName==="INPUT"||this.composerFocus.focusMode!=="inactive"){return;}
const rects=this.getDimensionElementsRects();const definition=this.props.definition;const{measures,columns,rows}=definition;const draggableIds=measures.map((m)=>m.id);const offset=3+columns.length+rows.length;const draggableItems=draggableIds.map((id,index)=>({id,size:rects[index+offset].height,position:rects[index+offset].y,}));this.dragAndDrop.start("vertical",{draggedItemId:measure.id,initialMousePosition:event.clientY,items:draggableItems,scrollableContainerEl:this.props.getScrollableContainerEl?.()||this.dimensionsRef.el,onDragEnd:(measureName,finalIndex)=>{const originalIndex=draggableIds.findIndex((id)=>id===measureName);if(originalIndex===finalIndex){return;}
const draggedItems=[...draggableIds];draggedItems.splice(originalIndex,1);draggedItems.splice(finalIndex,0,measureName);this.props.onDimensionsUpdated({measures:draggedItems.map((measureId)=>measures.find((measure)=>measure.id===measureId)).filter(isDefined),});},});}
getDimensionElementsRects(){return Array.from(this.dimensionsRef.el.children).map((el)=>{const style=getComputedStyle(el);const rect=el.getBoundingClientRect();return{x:rect.x,y:rect.y,width:rect.width+parseInt(style.marginLeft||"0")+parseInt(style.marginRight||"0"),height:rect.height+parseInt(style.marginTop||"0")+parseInt(style.marginBottom||"0"),};});}
removeDimension(dimension){const{columns,rows}=this.props.definition;this.props.onDimensionsUpdated({columns:columns.filter((col)=>col.nameWithGranularity!==dimension.nameWithGranularity),rows:rows.filter((row)=>row.nameWithGranularity!==dimension.nameWithGranularity),});}
removeMeasureDimension(measure){const{measures}=this.props.definition;this.props.onDimensionsUpdated({measures:measures.filter((m)=>m.id!==measure.id),});}
addColumnDimension(fieldName){const{columns}=this.props.definition;this.props.onDimensionsUpdated({columns:columns.concat([{fieldName:fieldName,order:"asc"}]),});}
addRowDimension(fieldName){const{rows}=this.props.definition;this.props.onDimensionsUpdated({rows:rows.concat([{fieldName:fieldName,order:"asc"}]),});}
addMeasureDimension(fieldName){const{measures}=this.props.definition;const aggregator=this.getDefaultMeasureAggregator(fieldName);this.props.onDimensionsUpdated({measures:measures.concat([{id:this.getMeasureId(fieldName,aggregator),fieldName,aggregator},]),});}
updateMeasure(measure,newMeasure){const{measures}=this.props.definition;const update={measures:measures.map((m)=>(m.id===measure.id?newMeasure:m)),};if(this.props.definition.sortedColumn?.measure===measure.id){update.sortedColumn={...this.props.definition.sortedColumn,measure:newMeasure.id};}
this.props.onDimensionsUpdated(update);}
getMeasureId(fieldName,aggregator){const baseId=fieldName+(aggregator?`:${aggregator}`:"");let id=baseId;let i=2;while(this.props.definition.measures.some((m)=>m.id===id)){id=`${baseId}:${i}`;i++;}
return id;}
getDefaultMeasureAggregator(fieldName){const field=this.props.measureFields.find((f)=>f.name===fieldName);return field?.aggregator?field.aggregator:"count";}
addCalculatedMeasure(){const{measures}=this.props.definition;const measureName=this.env.model.getters.generateNewCalculatedMeasureName(measures);this.props.onDimensionsUpdated({measures:measures.concat([{id:this.getMeasureId(measureName),fieldName:measureName,aggregator:"sum",computedBy:{sheetId:this.env.model.getters.getActiveSheetId(),formula:"=0",},},]),});}
updateOrder(updateDimension,order){const{rows,columns}=this.props.definition;this.props.onDimensionsUpdated({rows:rows.map((row)=>{if(row.nameWithGranularity===updateDimension.nameWithGranularity){return{...row,order:order||undefined};}
return row;}),columns:columns.map((col)=>{if(col.nameWithGranularity===updateDimension.nameWithGranularity){return{...col,order:order||undefined};}
return col;}),});}
updateGranularity(dimension,granularity){const{rows,columns}=this.props.definition;this.props.onDimensionsUpdated({rows:rows.map((row)=>{if(row.nameWithGranularity===dimension.nameWithGranularity){return{...row,granularity};}
return row;}),columns:columns.map((col)=>{if(col.nameWithGranularity===dimension.nameWithGranularity){return{...col,granularity};}
return col;}),});}
getMeasureDescription(measure){const measureDisplay=measure.display;if(!measureDisplay||measureDisplay.type==="no_calculations"){return"";}
const pivot=this.env.model.getters.getPivot(this.props.pivotId);const field=[...pivot.definition.columns,...pivot.definition.rows].find((f)=>f.nameWithGranularity===measureDisplay.fieldNameWithGranularity);const fieldName=field?getFieldDisplayName(field):"";return measureDisplayTerms.descriptions[measureDisplay.type](fieldName);}}
class PivotTitleSection extends Component{static template="o-spreadsheet-PivotTitleSection";static components={CogWheelMenu,Section,TextInput};static props={pivotId:String,flipAxis:Function,};get cogWheelMenuItems(){return[{name:_t("Flip axes"),icon:"o-spreadsheet-Icon.EXCHANGE",execute:this.props.flipAxis,},{name:_t("Duplicate"),icon:"o-spreadsheet-Icon.COPY",execute:()=>this.duplicatePivot(),},{name:_t("Delete"),icon:"o-spreadsheet-Icon.TRASH",execute:()=>this.delete(),},];}
get name(){return this.env.model.getters.getPivotName(this.props.pivotId);}
get displayName(){return this.env.model.getters.getPivotDisplayName(this.props.pivotId);}
duplicatePivot(){const newPivotId=this.env.model.uuidGenerator.smallUuid();const newSheetId=this.env.model.uuidGenerator.smallUuid();const result=this.env.model.dispatch("DUPLICATE_PIVOT_IN_NEW_SHEET",{pivotId:this.props.pivotId,newPivotId,newSheetId,});let text;if(result.isSuccessful){text=_t("Pivot duplicated.");}
else if(result.isCancelledBecause("PivotInError")){text=_t("Cannot duplicate a pivot in error.");}
else{text=_t("Pivot duplication failed.");}
const type=result.isSuccessful?"success":"danger";this.env.notifyUser({text,sticky:false,type,});if(result.isSuccessful){this.env.openSidePanel("PivotSidePanel",{pivotId:newPivotId});}}
delete(){this.env.askConfirmation(_t("Are you sure you want to delete this pivot?"),()=>{this.env.model.dispatch("REMOVE_PIVOT",{pivotId:this.props.pivotId});});}
onNameChanged(name){const pivot=this.env.model.getters.getPivotCoreDefinition(this.props.pivotId);this.env.model.dispatch("UPDATE_PIVOT",{pivotId:this.props.pivotId,pivot:{...pivot,name,},});}}
const PIVOT_FUNCTIONS=["PIVOT.VALUE","PIVOT.HEADER","PIVOT"];function makeFieldProposal(field,granularity){const groupBy=granularity?`${field.name}:${granularity}`:field.name;const quotedGroupBy=`"${groupBy}"`;const fuzzySearchKey=field.string!==field.name?field.string+quotedGroupBy:quotedGroupBy;return{text:quotedGroupBy,description:field.string+(field.help?` (${field.help})`:""),htmlContent:[{value:quotedGroupBy,color:tokenColors.STRING}],fuzzySearchKey,};}
function makeMeasureProposal(measure){const quotedMeasure=`"${measure.id}"`;const fuzzySearchKey=measure.displayName+measure.fieldName+quotedMeasure;return{text:quotedMeasure,description:measure.displayName,htmlContent:[{value:quotedMeasure,color:tokenColors.STRING}],fuzzySearchKey,};}
function insertTokenAfterArgSeparator(tokenAtCursor,value){let start=tokenAtCursor.end;const end=tokenAtCursor.end;if(tokenAtCursor.type!=="ARG_SEPARATOR"){start=tokenAtCursor.start;}
this.composer.stopComposerRangeSelection();this.composer.changeComposerCursorSelection(start,end);this.composer.replaceComposerCursorSelection(value);}
function insertTokenAfterLeftParenthesis(tokenAtCursor,value){let start=tokenAtCursor.end;const end=tokenAtCursor.end;if(tokenAtCursor.type!=="LEFT_PAREN"){start=tokenAtCursor.start;}
this.composer.stopComposerRangeSelection();this.composer.changeComposerCursorSelection(start,end);this.composer.replaceComposerCursorSelection(value);}
function extractFormulaIdFromToken(tokenAtCursor){const idAst=tokenAtCursor.functionContext?.args[0];if(!idAst||!["STRING","NUMBER"].includes(idAst.type)){return;}
return idAst.value;}
function getFirstPivotFunction(tokens){return getFunctionsFromTokens(tokens,PIVOT_FUNCTIONS)[0];}
function getNumberOfPivotFunctions(tokens){return getFunctionsFromTokens(tokens,PIVOT_FUNCTIONS).length;}
class PivotRuntimeDefinition{measures;columns;rows;sortedColumn;collapsedDomains;constructor(definition,fields){this.measures=definition.measures.map((measure)=>createMeasure(fields,measure));this.columns=definition.columns.map((dimension)=>createPivotDimension(fields,dimension));this.rows=definition.rows.map((dimension)=>createPivotDimension(fields,dimension));this.sortedColumn=definition.sortedColumn;this.collapsedDomains=definition.collapsedDomains;}
getDimension(nameWithGranularity){const dimension=this.columns.find((d)=>d.nameWithGranularity===nameWithGranularity)||this.rows.find((d)=>d.nameWithGranularity===nameWithGranularity);if(!dimension){throw new EvaluationError(_t("Dimension %s does not exist",nameWithGranularity));}
return dimension;}
getMeasure(id){const measure=this.measures.find((measure)=>measure.id===id);if(!measure){throw new EvaluationError(_t("Field %s is not a measure",id));}
return measure;}}
function createMeasure(fields,measure){const fieldName=measure.fieldName;const field=fieldName==="__count"?{name:"__count",string:_t("Count"),type:"integer",aggregator:"sum"}:fields[fieldName];const aggregator=measure.aggregator;return{id:measure.id,get displayName(){return measure.userDefinedName??field?.string??measure.fieldName;},userDefinedName:measure.userDefinedName,fieldName,aggregator,type:fieldName==="__count"?"integer":field?.type??"integer",isValid:!!(field||measure.computedBy),isHidden:measure.isHidden,format:measure.format,computedBy:measure.computedBy,display:measure.display,};}
function createPivotDimension(fields,dimension){const field=fields[dimension.fieldName];const type=field?.type??"integer";const granularity=field&&isDateOrDatetimeField(field)?dimension.granularity:undefined;return{displayName:field?.string??dimension.fieldName,nameWithGranularity:dimension.fieldName+(granularity?`:${granularity}`:""),fieldName:dimension.fieldName,granularity,type,order:dimension.order,isValid:!!field,};}
class SpreadsheetPivotRuntimeDefinition extends PivotRuntimeDefinition{range;constructor(definition,fields,getters){super(definition,fields);if(definition.dataSet){const{sheetId,zone}=definition.dataSet;this.range=getters.getRangeFromZone(sheetId,zone);}}}
class SpreadsheetPivotTable{columns;rows;measures;fieldsType;maxIndent;pivotCells={};rowTree;colTree;isSorted=false;constructor(columns,rows,measures,fieldsType,collapsedDomains={COL:[],ROW:[]}){this.measures=measures;this.fieldsType=fieldsType;if(collapsedDomains.COL.length){columns=this.removeCollapsedColumns(columns,measures,collapsedDomains.COL);}
this.columns=columns.map((cols)=>{let offset=1;return cols.map((col)=>{col={...col,offset};offset+=col.width;return col;});});this.rows=rows.filter((row)=>!this.isParentCollapsed(collapsedDomains.ROW,row));this.maxIndent=Math.max(...this.rows.map((row)=>row.indent));this.rowTree=lazy(()=>this.buildRowsTree());this.colTree=lazy(()=>this.buildColumnsTree());}
removeCollapsedColumns(columns,measures,collapsedDomains){const replaceCollapsedChildrenWithSubTotalColumns=(parentCol,depth)=>{const parentDomain=this.getDomain(parentCol);const cols=columns[depth];const startIndex=cols.findIndex((col)=>isParentDomain(this.getDomain(col),parentDomain));const endIndex=cols.findLastIndex((col)=>isParentDomain(this.getDomain(col),parentDomain));const isLeaf=depth===columns.length-1;const newColumns=measures.map((measure)=>{const fields=isLeaf?[...parentCol.fields,"measure"]:[];const values=isLeaf?[...parentCol.values,measure]:[];return{fields,values,width:1,offset:0,collapsedHeader:!isLeaf};});cols.splice(startIndex,endIndex-startIndex+1,...newColumns);};return columns.map((cols,i)=>{for(const col of cols){if(i>=columns.length-2){return cols;}
const domain=this.getDomain(col);if(!collapsedDomains.some((collapsedDomain)=>deepEquals(domain,collapsedDomain))){continue;}
col.width=measures.length;for(let depth=i+1;depth<columns.length;depth++){replaceCollapsedChildrenWithSubTotalColumns(col,depth);}}
return cols;});}
isParentCollapsed(collapsedDomains,dim){const domain=this.getDomain(dim);return collapsedDomains.some((collapsedDomain)=>isParentDomain(domain,collapsedDomain));}
getNumberOfDataColumns(){return this.columns.at(-1)?.length||0;}
getSkippedRows(visibilityOptions){const skippedRows=new Set();if(!visibilityOptions.displayColumnHeaders){for(let i=0;i<this.columns.length-1;i++){skippedRows.add(i);}}
if(!visibilityOptions.displayMeasuresRow){skippedRows.add(this.columns.length-1);}
return skippedRows;}
getPivotCells(visibilityOptions={displayColumnHeaders:true,displayTotals:true,displayMeasuresRow:true,}){const key=JSON.stringify(visibilityOptions);if(!this.pivotCells[key]){const{displayTotals}=visibilityOptions;const numberOfDataRows=this.rows.length;const numberOfDataColumns=this.getNumberOfDataColumns();let pivotHeight=this.columns.length+numberOfDataRows;let pivotWidth=1+numberOfDataColumns;if(!displayTotals&&numberOfDataRows!==1){pivotHeight-=1;}
if(!displayTotals&&numberOfDataColumns!==this.measures.length){pivotWidth-=this.measures.length;}
const domainArray=[];const skippedRows=this.getSkippedRows(visibilityOptions);for(let col=0;col<pivotWidth;col++){domainArray.push([]);for(let row=0;row<pivotHeight;row++){if(skippedRows.has(row)){continue;}
domainArray[col].push(this.getPivotCell(col,row,displayTotals));}}
this.pivotCells[key]=domainArray;}
return this.pivotCells[key];}
getRowTree(){return this.rowTree();}
getColTree(){return this.colTree();}
isTotalRow(index){return this.rows[index].indent!==this.maxIndent;}
getPivotCell(col,row,includeTotal=true){const colHeadersHeight=this.columns.length;if(col>0&&row===colHeadersHeight-1){const domain=this.getColHeaderDomain(col,row);if(!domain){return EMPTY_PIVOT_CELL;}
const measure=domain.at(-1)?.value?.toString()||"";return{type:"MEASURE_HEADER",domain:domain.slice(0,-1),measure};}
else if(row<=colHeadersHeight-1){const domain=this.getColHeaderDomain(col,row);return domain?{type:"HEADER",domain,dimension:"COL"}:EMPTY_PIVOT_CELL;}
else if(col===0){const rowIndex=row-colHeadersHeight;const domain=this.getDomain(this.rows[rowIndex]);return{type:"HEADER",domain,dimension:"ROW"};}
else{const rowIndex=row-colHeadersHeight;if(!includeTotal&&this.isTotalRow(rowIndex)){return EMPTY_PIVOT_CELL;}
const domain=[...this.getDomain(this.rows[rowIndex]),...this.getColDomain(col)];const measure=this.getColMeasure(col);return{type:"VALUE",domain,measure};}}
getColHeaderDomain(col,row){if(col===0){return undefined;}
const pivotCol=this.columns[row].find((pivotCol)=>pivotCol.offset===col);if(!pivotCol||pivotCol.collapsedHeader){return undefined;}
return this.getDomain(pivotCol);}
getDomain(dim){return dim.fields.map((fieldWithGranularity,i)=>{if(fieldWithGranularity==="measure"){return{type:"char",field:fieldWithGranularity,value:toNormalizedPivotValue({displayName:"measure",type:"char"},dim.values[i]),};}
else{const{fieldName,granularity}=parseDimension(fieldWithGranularity);const type=this.fieldsType[fieldName]||"char";return{type,field:fieldWithGranularity,value:toNormalizedPivotValue({displayName:fieldName,type,granularity},dim.values[i]),};}});}
getColDomain(col){const domain=this.getColHeaderDomain(col,this.columns.length-1);return domain?domain.slice(0,-1):[];}
getColMeasure(col){const domain=this.getColHeaderDomain(col,this.columns.length-1);const measure=domain?.at(-1)?.value;if(measure===undefined||measure===null){throw new Error("Measure is missing");}
return measure.toString();}
buildRowsTree(){const tree=[];let depth=0;const treesAtDepth={};treesAtDepth[0]=tree;for(const row of this.rows){if(row.fields.length===0||row.values.length===0){return tree;}
const rowDepth=row.fields.length-1;const fieldWithGranularity=row.fields[rowDepth];const{fieldName,granularity}=parseDimension(fieldWithGranularity);const type=this.fieldsType[fieldName]??"char";const value=toNormalizedPivotValue({displayName:fieldName,type,granularity},row.values[rowDepth]);if(rowDepth>depth){depth=rowDepth;treesAtDepth[depth]=[];const parentNode=treesAtDepth[depth-1].at(-1);if(parentNode){parentNode.children=treesAtDepth[depth];}}
depth=rowDepth;const node={value,field:row.fields[rowDepth],children:[],type:this.fieldsType[fieldName]||"char",width:0,};treesAtDepth[depth].push(node);}
return tree;}
buildColumnsTree(){const tree=[];const columns=this.columns.at(-2)||[];const treesAtDepth={};treesAtDepth[0]=tree;for(const leaf of columns){for(let depth=0;depth<leaf.fields.length;depth++){const fieldWithGranularity=leaf.fields[depth];const{fieldName,granularity}=parseDimension(fieldWithGranularity);const type=this.fieldsType[fieldName]??"char";const value=toNormalizedPivotValue({displayName:fieldName,type,granularity},leaf.values[depth]);const node={value,field:leaf.fields[depth],children:[],width:leaf.width,type:this.fieldsType[fieldName]||"char",};if(treesAtDepth[depth]?.at(-1)?.value!==value){treesAtDepth[depth+1]=[];node.children=treesAtDepth[depth+1];treesAtDepth[depth].push(node);}}}
return tree;}
export(){return{cols:this.columns,rows:this.rows,measures:this.measures,fieldsType:this.fieldsType,};}
sort(measure,sortedColumn,getValue){if(this.isSorted){return;}
const getSortValue=(measure,domain)=>{const rawValue=getValue(measure,domain).value;return typeof rawValue==="number"?rawValue:-Infinity;};const sortColDomain=sortedColumn.domain;const sortFn=(rowDomain1,rowDomain2)=>{const value1=getSortValue(measure,[...rowDomain1,...sortColDomain]);const value2=getSortValue(measure,[...rowDomain2,...sortColDomain]);return sortedColumn.order==="asc"?value1-value2:value2-value1;};const sortedRowTree=sortPivotTree(this.rowTree(),[],sortFn);this.rowTree=lazy(sortedRowTree);this.rows=[...this.rowTreeToRows(sortedRowTree),this.rows[this.rows.length-1]];this.isSorted=true;}
rowTreeToRows(tree,parentRow){return tree.flatMap((node)=>{const row={indent:parentRow?parentRow.indent+1:1,fields:[...(parentRow?.fields||[]),node.field],values:[...(parentRow?.values||[]),node.value],};return[row,...this.rowTreeToRows(node.children,row)];});}}
const EMPTY_PIVOT_CELL={type:"EMPTY"};function dataEntriesToSpreadsheetPivotTable(dataEntries,definition,mode){const measureIds=definition.measures.filter((measure)=>!measure.isHidden).map((m)=>m.id);const columnsTree=dataEntriesToColumnsTree(dataEntries,definition.columns,0);computeWidthOfColumnsNodes(columnsTree,measureIds.length);const cols=columnsTreeToColumns(columnsTree,definition);const rows=dataEntriesToRows(dataEntries,0,definition.rows,[],[]);rows.push({fields:[],values:[],indent:0,});const fieldsType={};for(const columns of definition.columns){fieldsType[columns.fieldName]=columns.type;}
for(const row of definition.rows){fieldsType[row.fieldName]=row.type;}
const collapsedDomains=mode==="collapsed"?definition.collapsedDomains:undefined;return new SpreadsheetPivotTable(cols,rows,measureIds,fieldsType,collapsedDomains);}
function dataEntriesToRows(dataEntries,index,rows,fields,values){if(index>=rows.length){return[];}
const row=rows[index];const rowName=row.nameWithGranularity;const groups=groupPivotDataEntriesBy(dataEntries,row);const orderedKeys=orderDataEntriesKeys(groups,row);const pivotTableRows=[];const _fields=fields.concat(rowName);for(const value of orderedKeys){const _values=values.concat(value);pivotTableRows.push({fields:_fields,values:_values,indent:index+1,});const record=groups[value];if(record){pivotTableRows.push(...dataEntriesToRows(record,index+1,rows,_fields,_values));}}
return pivotTableRows;}
function dataEntriesToColumnsTree(dataEntries,columns,index){if(index>=columns.length){return[];}
const column=columns[index];const colName=columns[index].nameWithGranularity;const groups=groupPivotDataEntriesBy(dataEntries,column);const orderedKeys=orderDataEntriesKeys(groups,columns[index]);return orderedKeys.map((key)=>{return{value:groups[key]?.[0]?.[column.nameWithGranularity]?.value??null,field:colName,children:dataEntriesToColumnsTree(groups[key]||[],columns,index+1),type:column.type,width:0,};});}
function computeWidthOfColumnsNodes(tree,measureCount){for(const key in tree){const node=tree[key];if(node.children.length===0){node.width=measureCount;}
else{computeWidthOfColumnsNodes(node.children,measureCount);node.width=node.children.reduce((acc,child)=>acc+child.width,0);}}}
function columnsTreeToColumns(mainTree,definition){const columnNames=definition.columns.map((col)=>col.nameWithGranularity);const height=columnNames.length;const measures=definition.measures.filter((measure)=>!measure.isHidden);const measureCount=measures.length;const headers=new Array(height).fill(0).map(()=>[]);function generateTreeHeaders(tree,rowIndex,val){const row=headers[rowIndex];for(const node of tree){const localVal=val.concat([node.value]);const cell={fields:columnNames.slice(0,rowIndex+1),values:localVal,width:node.width,offset:0,};row.push(cell);if(rowIndex<=height-1){generateTreeHeaders(node.children,rowIndex+1,localVal);}}}
generateTreeHeaders(mainTree,0,[]);const hasColGroupBys=columnNames.length>0;const measureRow=[];if(hasColGroupBys){headers[headers.length-1].forEach((cell)=>{measures.forEach((measure)=>{const measureCell={fields:[...cell.fields,"measure"],values:[...cell.values,measure.id],width:1,offset:0,};measureRow.push(measureCell);});});}
measures.forEach((measure)=>{const measureCell={fields:["measure"],values:[measure.id],width:1,offset:0,};measureRow.push(measureCell);});headers.push(measureRow);if(headers.length===1){headers.unshift([]);}
headers[headers.length-2].push({fields:[],values:[],width:measureCount,offset:0,});return headers;}
function groupPivotDataEntriesBy(dataEntries,dimension){return Object.groupBy(dataEntries,keySelector(dimension));}
function keySelector(dimension){const name=dimension.nameWithGranularity;return(item)=>{return`${item[name]?.value ?? null}`;};}
function orderDataEntriesKeys(groups,dimension){const order=dimension.order;if(!order){return Object.keys(groups);}
return Object.keys(groups).sort((a,b)=>compareDimensionValues(dimension,a,b));}
function compareDimensionValues(dimension,a,b){if(a==="null"){return dimension.order==="asc"?1:-1;}
if(b==="null"){return dimension.order==="asc"?-1:1;}
if(dimension.type==="integer"||dimension.type==="datetime"){return dimension.order==="asc"?toNumber(a,DEFAULT_LOCALE)-toNumber(b,DEFAULT_LOCALE):toNumber(b,DEFAULT_LOCALE)-toNumber(a,DEFAULT_LOCALE);}
return dimension.order==="asc"?a.localeCompare(b):b.localeCompare(a);}
const NULL_SYMBOL=Symbol("NULL");function createDate(dimension,value,locale){const granularity=dimension.granularity||"month";if(!(granularity in MAP_VALUE_DIMENSION_DATE)){throw new Error(`Unknown date granularity: ${granularity}`);}
const keyInMap=typeof value==="number"||typeof value==="string"?value:NULL_SYMBOL;if(!MAP_VALUE_DIMENSION_DATE[granularity].set.has(value)){MAP_VALUE_DIMENSION_DATE[granularity].set.add(value);let number=null;if(typeof value==="number"||typeof value==="string"){const date=toJsDate(value,locale);switch(granularity){case"year":number=date.getFullYear();break;case"quarter_number":number=Math.floor(date.getMonth()/3)+1;break;case"month_number":number=date.getMonth()+1;break;case"month":number=Math.floor(toNumber(value,locale));break;case"iso_week_number":number=date.getIsoWeek();break;case"day_of_month":number=date.getDate();break;case"day":number=Math.floor(toNumber(value,locale));break;case"day_of_week":number=((date.getDay()+7-locale.weekStart)%7)+1;break;case"hour_number":number=date.getHours();break;case"minute_number":number=date.getMinutes();break;case"second_number":number=date.getSeconds();break;}}
MAP_VALUE_DIMENSION_DATE[granularity].values[keyInMap]=toNormalizedPivotValue(dimension,number);}
return MAP_VALUE_DIMENSION_DATE[granularity].values[keyInMap];}
const MAP_VALUE_DIMENSION_DATE={year:{set:new Set(),values:{},},quarter_number:{set:new Set(),values:{},},month_number:{set:new Set(),values:{},},month:{set:new Set(),values:{},},iso_week_number:{set:new Set(),values:{},},day_of_month:{set:new Set(),values:{},},day:{set:new Set(),values:{},},day_of_week:{set:new Set(),values:{},},hour_number:{set:new Set(),values:{},},minute_number:{set:new Set(),values:{},},second_number:{set:new Set(),values:{},},};function resetMapValueDimensionDate(){for(const key in MAP_VALUE_DIMENSION_DATE){MAP_VALUE_DIMENSION_DATE[key].set.clear();MAP_VALUE_DIMENSION_DATE[key].values={};}}
var ReloadType;(function(ReloadType){ReloadType[ReloadType["NONE"]=0]="NONE";ReloadType[ReloadType["TABLE"]=1]="TABLE";ReloadType[ReloadType["DATA"]=2]="DATA";ReloadType[ReloadType["DEFINITION"]=3]="DEFINITION";ReloadType[ReloadType["ALL"]=4]="ALL";})(ReloadType||(ReloadType={}));class SpreadsheetPivot{type="SPREADSHEET";getters;_definition;coreDefinition;metaData={fields:{},fieldKeys:[]};dataEntries=[];collapsedTable;expandedTable;invalidRangeError;needsReevaluation=true;constructor(custom,params){this.getters=params.getters;this.coreDefinition=params.definition;}
init(params={}){if(!this._definition||params.reload){this.reload(ReloadType.ALL);this.needsReevaluation=false;}}
reload(type){if(type===ReloadType.ALL){this.metaData=this.loadMetaData();}
if(type>=ReloadType.DEFINITION){this._definition=this.loadRuntimeDefinition();}
if(type>=ReloadType.DATA){this.dataEntries=this.loadData();}
if(type>=ReloadType.TABLE){this.collapsedTable=undefined;this.expandedTable=undefined;}}
onDefinitionChange(nextDefinition){const actualDefinition=this.coreDefinition;this.coreDefinition=nextDefinition;if(this._definition){const reloadType=Math.max(this.computeShouldReload(actualDefinition,nextDefinition),ReloadType.NONE);this.reload(reloadType);}}
computeShouldReload(actualDefinition,nextDefinition){if(deepEquals(actualDefinition.dataSet,nextDefinition.dataSet)){return ReloadType.DEFINITION;}
return ReloadType.ALL;}
get isInvalidRange(){return!!this.invalidRangeError;}
get invalidRangeMessage(){return this.invalidRangeError?.message;}
get definition(){if(!this._definition){this.init();}
if(!this._definition){throw new Error("Pivot definition should be defined at this point.");}
return this._definition;}
isValid(){if(this.invalidRangeError||!this.definition){return false;}
for(const measure of this.definition.measures){if(!measure.isValid){return false;}}
for(const column of this.definition.columns){if(!column.isValid){return false;}}
for(const row of this.definition.rows){if(!row.isValid){return false;}}
return true;}
assertIsValid({throwOnError}){if(!this.isValid()){if(throwOnError){if(this.invalidRangeError){throw this.invalidRangeError;}
else{throw new EvaluationError(_t("At least one measure and/or dimension is not correct."));}}
return{value:CellErrorType.GenericError,message:this.invalidRangeError?.message??_t("At least one measure and/or dimension is not correct."),};}
return undefined;}
areDomainArgsFieldsValid(args){let dimensions=args.filter((_,index)=>index%2===0).map(toString);if(dimensions.length&&dimensions.at(-1)==="measure"){dimensions=dimensions.slice(0,-1);}
return areDomainArgsFieldsValid(dimensions,this.definition);}
parseArgsToPivotDomain(args){const domain=[];for(let i=0;i<args.length-1;i+=2){const fieldWithGranularity=toString(args[i]);const type=this.getTypeOfDimension(fieldWithGranularity);const normalizedValue=fieldWithGranularity==="measure"?toString(args[i+1]):toNormalizedPivotValue(this.getDimension(fieldWithGranularity),args[i+1]);domain.push({field:fieldWithGranularity,value:normalizedValue,type});}
return domain;}
markAsDirtyForEvaluation(){this.needsReevaluation=true;}
getMeasure(id){return this.definition.getMeasure(id);}
getPivotMeasureValue(id){return{value:this.getMeasure(id).displayName,};}
getPivotHeaderValueAndFormat(domain){const lastNode=domain.at(-1);if(!lastNode){return{value:_t("Total")};}
const dimension=this.getDimension(lastNode.field);const cells=this.filterDataEntriesFromDomain(this.dataEntries,domain);const finalCell=cells[0]?.[dimension.nameWithGranularity];if(dimension.type==="datetime"){const adapter=pivotTimeAdapter((dimension.granularity||"month"));return adapter.toValueAndFormat(lastNode.value,this.getters.getLocale());}
if(!finalCell){return{value:""};}
if(finalCell.value===null){return{value:_t("(Undefined)")};}
return finalCell;}
getPivotCellValueAndFormat(measureId,domain){const dataEntries=this.filterDataEntriesFromDomain(this.dataEntries,domain);if(dataEntries.length===0){return{value:""};}
const measure=this.getMeasure(measureId);const allValues=dataEntries.map((value)=>value[measure.fieldName]).filter(isDefined);const values=allValues.filter((cell)=>cell.type!==CellValueType.empty);const aggregator=measure.aggregator;const operator=AGGREGATORS_FN[aggregator];if(!operator){throw new Error(`Aggregator ${aggregator} does not exist`);}
try{const result=operator([allValues],this.getters.getLocale());if(values.length===0){return{...result,value:""};}
return result;}
catch(e){return handleError(e,aggregator.toUpperCase());}}
getPossibleFieldValues(dimension){const values=[];const groups=groupPivotDataEntriesBy(this.dataEntries,dimension);const orderedKeys=orderDataEntriesKeys(groups,dimension);for(const key of orderedKeys){values.push({value:groups[key]?.[0]?.[dimension.nameWithGranularity]?.value??"",label:groups[key]?.[0]?.[dimension.nameWithGranularity]?.formattedValue||"",});}
return values;}
getCollapsedTableStructure(){if(!this.isValid()){throw new Error("Pivot is not valid !");}
if(!this.collapsedTable){this.collapsedTable=dataEntriesToSpreadsheetPivotTable(this.dataEntries,this.definition,"collapsed");}
return this.collapsedTable;}
getExpandedTableStructure(){if(!this.isValid()){throw new Error("Pivot is not valid !");}
if(!this.expandedTable){this.expandedTable=dataEntriesToSpreadsheetPivotTable(this.dataEntries,this.definition,"expanded");}
return this.expandedTable;}
getFields(){return this.metaData.fields;}
get fields(){return this.getFields();}
loadMetaData(){this.invalidRangeError=undefined;if(this.coreDefinition.dataSet){const{zone,sheetId}=this.coreDefinition.dataSet;const range=this.getters.getRangeFromZone(sheetId,zone);try{return this.extractFieldsFromRange(range);}
catch(e){this.invalidRangeError=e;return{fields:{},fieldKeys:[]};}}
else{this.invalidRangeError=new EvaluationError(_t("The pivot cannot be created because the dataset is missing."));return{fields:{},fieldKeys:[]};}}
loadRuntimeDefinition(){return new SpreadsheetPivotRuntimeDefinition(this.coreDefinition,this.fields,this.getters);}
loadData(){const range=this._definition?.range;return this.isValid()&&range?this.extractDataEntriesFromRange(range):[];}
getTypeOfDimension(fieldWithGranularity){if(fieldWithGranularity==="measure"){return"char";}
const{fieldName}=parseDimension(fieldWithGranularity);const type=this.fields[fieldName]?.type;if(!type){throw new Error(`Field ${fieldName} does not exist`);}
return type;}
filterDataEntriesFromDomain(dataEntries,domain){return domain.reduce((current,acc)=>this.filterDataEntriesFromDomainNode(current,acc),dataEntries);}
filterDataEntriesFromDomainNode(dataEntries,domain){const{field,value}=domain;const{nameWithGranularity}=this.getDimension(field);return dataEntries.filter((entry)=>entry[nameWithGranularity]?.value===value);}
getDimension(nameWithGranularity){return this.definition.getDimension(nameWithGranularity);}
getTypeFromZone(sheetId,zone){const cells=this.getters.getEvaluatedCellsInZone(sheetId,zone);const nonEmptyCells=cells.filter((cell)=>!(cell.type===CellValueType.empty||cell.value===""));if(nonEmptyCells.length===0){return"integer";}
if(nonEmptyCells.every((cell)=>cell.type===CellValueType.number&&cell.format&&isDateTimeFormat(cell.format))){return"datetime";}
if(nonEmptyCells.every((cell)=>cell.type===CellValueType.boolean)){return"boolean";}
if(nonEmptyCells.some((cell)=>cell.type===CellValueType.text)){return"char";}
return"integer";}
assertCellIsValidField(col,row,cell){if(cell.type===CellValueType.error){throw new EvaluationError(_t("The pivot cannot be created because cell %s contains an error",toXC(col,row)));}
if(cell.type===CellValueType.empty||cell.value===""){throw new EvaluationError(_t("The pivot cannot be created because cell %s is empty",toXC(col,row)));}
if(cell.value==="__count"){throw new EvaluationError(_t("The pivot cannot be created because cell %s contains a reserved value",toXC(col,row)));}}
extractFieldsFromRange(range){const fields={};const fieldKeys=[];const sheetId=range.sheetId;const row=range.zone.top;for(let col=range.zone.left;col<=range.zone.right;col++){const cell=this.getters.getEvaluatedCell({sheetId,col,row});this.assertCellIsValidField(col,row,cell);const field=cell.value?.toString();if(field){const type=this.getTypeFromZone(sheetId,{top:range.zone.top+1,left:col,bottom:range.zone.bottom,right:col,});const string=this.findName(field,fields);fields[string]={name:string,type,string,aggregator:type==="integer"?"sum":"count",};fieldKeys.push(string);}}
return{fields,fieldKeys};}
findName(name,fields){return getUniqueText(name,Object.keys(fields),{compute:(name,i)=>`${name}${i}`,start:2,});}
extractDataEntriesFromRange(range){const dataEntries=[];for(let row=range.zone.top+1;row<=range.zone.bottom;row++){const zone={top:row,bottom:row,left:range.zone.left,right:range.zone.right};const cells=this.getters.getEvaluatedCellsInZone(range.sheetId,zone);const entry={};for(const index in cells){const cell=cells[index];const field=this.fields[this.metaData.fieldKeys[index]];if(!field){throw new Error(`Field ${this.metaData.fieldKeys[index]} does not exist`);}
if(cell.value===""){entry[field.name]={value:null,type:CellValueType.empty,formattedValue:""};}
else{entry[field.name]=cell;}}
entry["__count"]={value:1,type:CellValueType.number,formattedValue:"1"};dataEntries.push(entry);}
const dateDimensions=this.definition.columns.concat(this.definition.rows).filter((d)=>d.type==="datetime");if(dateDimensions.length){const locale=this.getters.getLocale();for(const entry of dataEntries){for(const dimension of dateDimensions){const value=createDate(dimension,entry[dimension.fieldName]?.value||null,this.getters.getLocale());const adapter=pivotTimeAdapter((dimension.granularity||"month"));const{format,value:valueToFormat}=adapter.toValueAndFormat(value,locale);entry[dimension.nameWithGranularity]={value,type:entry[dimension.fieldName]?.type||CellValueType.empty,format:entry[dimension.fieldName]?.format,formattedValue:formatValue(valueToFormat,{locale,format}),};}}}
return dataEntries;}}
const pivotRegistry=new Registry();const dateGranularities=["year","quarter_number","month_number","month","iso_week_number","day_of_month","day","day_of_week",];pivotRegistry.add("SPREADSHEET",{ui:SpreadsheetPivot,definition:SpreadsheetPivotRuntimeDefinition,externalData:false,dateGranularities:[...dateGranularities],datetimeGranularities:[...dateGranularities,"hour_number","minute_number","second_number"],isMeasureCandidate:(field)=>field.type!=="boolean",isGroupable:()=>true,});class PivotSidePanelStore extends SpreadsheetStore{pivotId;mutators=["reset","deferUpdates","applyUpdate","discardPendingUpdate","update"];updatesAreDeferred;draft=null;notification=this.get(NotificationStore);alreadyNotified=false;constructor(get,pivotId){super(get);this.pivotId=pivotId;this.updatesAreDeferred=this.getters.getPivotCoreDefinition(this.pivotId).deferUpdates??false;}
handle(cmd){switch(cmd.type){case"UPDATE_PIVOT":if(cmd.pivotId===this.pivotId){this.getters.getPivot(this.pivotId).init();}}}
get fields(){return this.pivot.getFields();}
get pivot(){return this.getters.getPivot(this.pivotId);}
get definition(){const Definition=pivotRegistry.get(this.pivot.type).definition;return this.draft?new Definition(this.draft,this.fields,this.getters):this.pivot.definition;}
get isDirty(){return!!this.draft;}
get measureFields(){const measureFields=[{name:"__count",string:_t("Count"),type:"integer",aggregator:"sum",},];const fields=this.fields;for(const fieldName in fields){const field=fields[fieldName];if(!field){continue;}
if(pivotRegistry.get(this.pivot.type).isMeasureCandidate(field)){measureFields.push(field);}}
return measureFields.sort((a,b)=>a.string.localeCompare(b.string));}
get unusedGroupableFields(){const groupableFields=[];const fields=this.fields;for(const fieldName in fields){const field=fields[fieldName];if(!field){continue;}
if(pivotRegistry.get(this.pivot.type).isGroupable(field)){groupableFields.push(field);}}
const{columns,rows,measures}=this.definition;const currentlyUsed=measures.concat(rows).concat(columns).map((field)=>field.fieldName);const unusedGranularities=this.unusedGranularities;return groupableFields.filter((field)=>{if(isDateOrDatetimeField(field)){return!currentlyUsed.includes(field.name)||unusedGranularities[field.name].size>0;}
return!currentlyUsed.includes(field.name);}).sort((a,b)=>a.string.localeCompare(b.string));}
get datetimeGranularities(){return pivotRegistry.get(this.pivot.type).datetimeGranularities;}
get dateGranularities(){return pivotRegistry.get(this.pivot.type).dateGranularities;}
get unusedGranularities(){return this.getUnusedGranularities(this.fields,this.draft??this.getters.getPivotCoreDefinition(this.pivotId));}
reset(pivotId){this.pivotId=pivotId;this.updatesAreDeferred=true;this.draft=null;}
deferUpdates(shouldDefer){if(shouldDefer===false&&this.draft){this.draft.deferUpdates=false;this.applyUpdate();}
else{this.update({deferUpdates:shouldDefer});}
this.updatesAreDeferred=shouldDefer;}
applyUpdate(){if(this.draft){this.model.dispatch("UPDATE_PIVOT",{pivotId:this.pivotId,pivot:this.draft,});this.draft=null;if(!this.alreadyNotified&&this.isUpdatedPivotVisibleInViewportOnlyAsStaticPivot()){const formulaId=this.getters.getPivotFormulaId(this.pivotId);const pivotExample=`=PIVOT(${formulaId})`;this.alreadyNotified=true;this.notification.notifyUser({type:"info",text:_t("Pivot updates only work with dynamic pivot tables. Use the formula '%s' or re-insert the static pivot from the Data menu.",pivotExample),sticky:true,});}}}
discardPendingUpdate(){this.draft=null;}
update(definitionUpdate){const coreDefinition=this.getters.getPivotCoreDefinition(this.pivotId);const definition={...coreDefinition,...this.draft,...definitionUpdate,};const cleanedDefinition={...definition,columns:definition.columns.map((col)=>({fieldName:col.fieldName,order:col.order,granularity:col.granularity,})),rows:definition.rows.map((row)=>({fieldName:row.fieldName,order:row.order,granularity:row.granularity,})),measures:definition.measures.map((measure)=>({id:measure.id,fieldName:measure.fieldName,aggregator:measure.aggregator,userDefinedName:measure.userDefinedName,computedBy:measure.computedBy,isHidden:measure.isHidden,format:measure.format,display:measure.display,})),sortedColumn:this.shouldKeepSortedColumn(definition)?definition.sortedColumn:undefined,};if(cleanedDefinition.collapsedDomains){const{COL,ROW}=cleanedDefinition.collapsedDomains;cleanedDefinition.collapsedDomains={COL:COL.filter((domain)=>this.areDomainFieldsValid(domain,cleanedDefinition.columns)),ROW:ROW.filter((domain)=>this.areDomainFieldsValid(domain,cleanedDefinition.rows)),};}
if(!this.draft&&deepEquals(coreDefinition,cleanedDefinition)){return;}
const cleanedWithGranularity=this.addDefaultDateTimeGranularity(this.fields,cleanedDefinition);this.draft=cleanedWithGranularity;if(!this.updatesAreDeferred){this.applyUpdate();}}
isUpdatedPivotVisibleInViewportOnlyAsStaticPivot(){let staticPivotCount=0;const updatedPivotFormulaId=this.getters.getPivotFormulaId(this.pivotId);for(const position of this.getters.getVisibleCellPositions()){const cell=this.getters.getCell(position);if(cell?.isFormula){const pivotFunction=getFirstPivotFunction(cell.compiledFormula.tokens);const pivotFormulaId=pivotFunction?.args[0]?.value;if(pivotFunction&&updatedPivotFormulaId===pivotFormulaId.toString()){if(pivotFunction.functionName==="PIVOT"){return false;}
else{staticPivotCount++;}}}}
return staticPivotCount>0;}
addDefaultDateTimeGranularity(fields,definition){const{columns,rows}=definition;const columnsWithGranularity=deepCopy(columns);const rowsWithGranularity=deepCopy(rows);const unusedGranularities=this.getUnusedGranularities(fields,definition);for(const dimension of columnsWithGranularity.concat(rowsWithGranularity)){const fieldType=fields[dimension.fieldName]?.type;if((fieldType==="date"||fieldType==="datetime")&&!dimension.granularity){const granularity=unusedGranularities[dimension.fieldName]?.values().next().value||"year";unusedGranularities[dimension.fieldName]?.delete(granularity);dimension.granularity=granularity;}}
return{...definition,columns:columnsWithGranularity,rows:rowsWithGranularity,};}
getUnusedGranularities(fields,definition){const{columns,rows,measures}=definition;const dateFields=columns.concat(rows).concat(measures).filter((dimension)=>{const fieldType=fields[dimension.fieldName]?.type;return fieldType==="date"||fieldType==="datetime";});const granularitiesPerFields={};for(const field of dateFields){granularitiesPerFields[field.fieldName]=new Set(fields[field.fieldName]?.type==="date"?this.dateGranularities:this.datetimeGranularities);}
for(const field of dateFields){granularitiesPerFields[field.fieldName].delete(field.granularity||"month");}
return granularitiesPerFields;}
shouldKeepSortedColumn(newDefinition){const{sortedColumn}=newDefinition;if(!sortedColumn){return true;}
const oldDefinition=this.getters.getPivotCoreDefinition(this.pivotId);return(newDefinition.measures.find((measure)=>measure.id===sortedColumn.measure)&&deepEquals(oldDefinition.columns,newDefinition.columns));}
areDomainFieldsValid(domain,dims){const fieldsNameWithGranularity=dims.map(({fieldName,granularity})=>fieldName+(granularity?`:${granularity}`:""));for(let i=0;i<domain.length;i++){if(domain[i].field!==fieldsNameWithGranularity[i]){return false;}}
return true;}}
class PivotSpreadsheetSidePanel extends Component{static template="o-spreadsheet-PivotSpreadsheetSidePanel";static props={pivotId:String,onCloseSidePanel:Function,};static components={PivotLayoutConfigurator,Section,SelectionInput,Checkbox,PivotDeferUpdate,PivotTitleSection,};store;state;pivotSidePanelRef=useRef("pivotSidePanel");setup(){this.store=useLocalStore(PivotSidePanelStore,this.props.pivotId);this.state=useState({range:undefined,rangeHasChanged:false,});}
get shouldDisplayInvalidRangeError(){if(this.store.isDirty&&this.state.rangeHasChanged){return false;}
return this.pivot.isInvalidRange;}
get ranges(){if(this.state.range){return[this.state.range];}
if(this.definition.range){return[this.env.model.getters.getRangeString(this.definition.range,"forceSheetReference")];}
return[];}
get pivot(){return this.store.pivot;}
get definition(){return this.store.definition;}
getScrollableContainerEl(){return this.pivotSidePanelRef.el;}
onSelectionChanged(ranges){this.state.rangeHasChanged=true;this.state.range=ranges[0];}
onSelectionConfirmed(){if(this.state.range){const range=this.env.model.getters.getRangeFromSheetXC(this.env.model.getters.getActiveSheetId(),this.state.range);if(range.invalidSheetName||range.invalidXc){return;}
const dataSet={sheetId:range.sheetId,zone:range.zone};this.store.update({dataSet});this.store.applyUpdate();}}
flipAxis(){const{rows,columns}=this.definition;this.onDimensionsUpdated({rows:columns,columns:rows,});}
onDimensionsUpdated(definition){this.store.update(definition);}}
const pivotSidePanelRegistry=new Registry();pivotSidePanelRegistry.add("SPREADSHEET",{editor:PivotSpreadsheetSidePanel,});class PivotSidePanel extends Component{static template="o-spreadsheet-PivotSidePanel";static props={pivotId:String,onCloseSidePanel:Function,};static components={PivotLayoutConfigurator,Section,};setup(){useHighlights(this);}
get sidePanelEditor(){const pivot=this.env.model.getters.getPivotCoreDefinition(this.props.pivotId);if(!pivot){throw new Error("pivotId does not correspond to a pivot.");}
return pivotSidePanelRegistry.get(pivot.type).editor;}
get highlights(){return getPivotHighlights(this.env.model.getters,this.props.pivotId);}}
css`
  .o-checkbox-selection {
    max-height: 300px;
  }
`;class RemoveDuplicatesPanel extends Component{static template="o-spreadsheet-RemoveDuplicatesPanel";static components={ValidationMessages,Section,Checkbox};static props={onCloseSidePanel:Function};state=useState({hasHeader:false,columns:{},});setup(){this.updateColumns();onWillUpdateProps(()=>this.updateColumns());}
toggleHasHeader(){this.state.hasHeader=!this.state.hasHeader;}
toggleAllColumns(){const newState=!this.isEveryColumnSelected;for(const index in this.state.columns){this.state.columns[index]=newState;}}
toggleColumn(colIndex){this.state.columns[colIndex]=!this.state.columns[colIndex];}
onRemoveDuplicates(){this.env.model.dispatch("REMOVE_DUPLICATES",{hasHeader:this.state.hasHeader,columns:this.getColsToAnalyze(),});}
getColLabel(colKey){const col=parseInt(colKey);let colLabel=_t("Column %s",numberToLetters(col));if(this.state.hasHeader){const sheetId=this.env.model.getters.getActiveSheetId();const row=this.env.model.getters.getSelectedZone().top;const colHeader=this.env.model.getters.getEvaluatedCell({sheetId,col,row});if(colHeader.type!=="empty"){colLabel+=` - ${colHeader.value}`;}}
return colLabel;}
get isEveryColumnSelected(){return Object.values(this.state.columns).every((value)=>value);}
get errorMessages(){const cancelledReasons=this.env.model.canDispatch("REMOVE_DUPLICATES",{hasHeader:this.state.hasHeader,columns:this.getColsToAnalyze(),}).reasons;const errors=new Set();for(const reason of cancelledReasons){errors.add(RemoveDuplicateTerms.Errors[reason]||RemoveDuplicateTerms.Errors.Unexpected);}
return Array.from(errors);}
get selectionStatisticalInformation(){const dimension=zoneToDimension(this.env.model.getters.getSelectedZone());return _t("%(row_count)s rows and %(column_count)s columns selected",{row_count:dimension.numberOfRows,column_count:dimension.numberOfCols,});}
get canConfirm(){return this.errorMessages.length===0;}
updateColumns(){const zone=this.env.model.getters.getSelectedZone();const oldColumns=this.state.columns;const newColumns={};for(let i=zone.left;i<=zone.right;i++){newColumns[i]=i in oldColumns?oldColumns[i]:true;}
this.state.columns=newColumns;}
getColsToAnalyze(){return Object.keys(this.state.columns).filter((colIndex)=>this.state.columns[colIndex]).map((colIndex)=>parseInt(colIndex));}}
css`
  .o-locale-preview {
    border: 1px solid ${GRAY_300};
    background-color: ${GRAY_100};
  }
`;class SettingsPanel extends Component{static template="o-spreadsheet-SettingsPanel";static components={Section,ValidationMessages,BadgeSelection};static props={onCloseSidePanel:Function};loadedLocales=[];setup(){onWillStart(()=>this.loadLocales());}
onLocaleChange(code){const locale=this.loadedLocales.find((l)=>l.code===code);if(!locale)
return;this.env.model.dispatch("UPDATE_LOCALE",{locale});}
async loadLocales(){this.loadedLocales=(await this.env.loadLocales()).filter((locale)=>{const isValid=isValidLocale(locale);if(!isValid){console.warn(`Invalid locale: ${locale["code"]} ${locale}`);}
return isValid;}).sort((a,b)=>a.name.localeCompare(b.name));}
get numberFormatPreview(){const locale=this.env.model.getters.getLocale();return formatValue(1234567.89,{format:"#,##0.00",locale});}
get dateFormatPreview(){const locale=this.env.model.getters.getLocale();return formatValue(1.6,{format:locale.dateFormat,locale});}
get dateTimeFormatPreview(){const locale=this.env.model.getters.getLocale();const dateTimeFormat=getDateTimeFormat(locale);return formatValue(1.6,{format:dateTimeFormat,locale});}
get firstDayOfWeek(){const locale=this.env.model.getters.getLocale();const weekStart=locale.weekStart;return DAYS$1[weekStart%7];}
get currentLocale(){return this.env.model.getters.getLocale();}
get supportedLocales(){const currentLocale=this.currentLocale;const localeInLoadedLocales=this.loadedLocales.find((l)=>l.code===currentLocale.code);if(!localeInLoadedLocales){return[...this.loadedLocales,currentLocale].sort((a,b)=>a.name.localeCompare(b.name));}
else if(!deepEquals(currentLocale,localeInLoadedLocales)){const index=this.loadedLocales.indexOf(localeInLoadedLocales);const locales=[...this.loadedLocales];locales[index]=currentLocale;locales.sort((a,b)=>a.name.localeCompare(b.name));return locales;}
return this.loadedLocales;}}
const SplitToColumnsInteractiveContent={SplitIsDestructive:_t("This will overwrite data in the subsequent columns. Split anyway?"),};function interactiveSplitToColumns(env,separator,addNewColumns){let result=env.model.dispatch("SPLIT_TEXT_INTO_COLUMNS",{separator,addNewColumns});if(result.isCancelledBecause("SplitWillOverwriteContent")){env.askConfirmation(SplitToColumnsInteractiveContent.SplitIsDestructive,()=>{result=env.model.dispatch("SPLIT_TEXT_INTO_COLUMNS",{separator,addNewColumns,force:true,});});}
return result;}
const SEPARATORS=[{name:_t("Detect automatically"),value:"auto"},{name:_t("Custom separator"),value:"custom"},{name:_t("Space"),value:" "},{name:_t("Comma"),value:","},{name:_t("Semicolon"),value:";"},{name:_t("Line Break"),value:NEWLINE},];class SplitIntoColumnsPanel extends Component{static template="o-spreadsheet-SplitIntoColumnsPanel";static components={ValidationMessages,Section,Checkbox};static props={onCloseSidePanel:Function};state=useState({separatorValue:"auto",addNewColumns:false,customSeparator:""});setup(){const composerFocusStore=useStore(ComposerFocusStore);useEffect((editionMode)=>{if(editionMode!=="inactive"){this.props.onCloseSidePanel();}},()=>[composerFocusStore.focusMode]);onMounted(()=>{composerFocusStore.activeComposer.stopEdition();});}
onSeparatorChange(value){this.state.separatorValue=value;}
updateCustomSeparator(ev){if(!ev.target)
return;this.state.customSeparator=ev.target.value;}
updateAddNewColumnsCheckbox(addNewColumns){this.state.addNewColumns=addNewColumns;}
confirm(){const result=interactiveSplitToColumns(this.env,this.separatorValue,this.state.addNewColumns);if(result.isSuccessful){this.props.onCloseSidePanel();}}
get errorMessages(){const cancelledReasons=this.env.model.canDispatch("SPLIT_TEXT_INTO_COLUMNS",{separator:this.separatorValue,addNewColumns:this.state.addNewColumns,force:true,}).reasons;const errors=new Set();for(const reason of cancelledReasons){switch(reason){case"SplitWillOverwriteContent":case"EmptySplitSeparator":break;default:errors.add(SplitToColumnsTerms.Errors[reason]||SplitToColumnsTerms.Errors.Unexpected);}}
return Array.from(errors);}
get warningMessages(){const warnings=[];const cancelledReasons=this.env.model.canDispatch("SPLIT_TEXT_INTO_COLUMNS",{separator:this.separatorValue,addNewColumns:this.state.addNewColumns,force:false,}).reasons;if(cancelledReasons.includes("SplitWillOverwriteContent")){warnings.push(SplitToColumnsTerms.Errors["SplitWillOverwriteContent"]);}
return warnings;}
get separatorValue(){if(this.state.separatorValue==="custom"){return this.state.customSeparator;}
else if(this.state.separatorValue==="auto"){return this.env.model.getters.getAutomaticSeparator();}
return this.state.separatorValue;}
get separators(){return SEPARATORS;}
get isConfirmDisabled(){return!this.separatorValue||this.errorMessages.length>0;}}
function createTableStyleContextMenuActions(env,styleId){if(!env.model.getters.isTableStyleEditable(styleId)){return[];}
return createActions([{id:"editTableStyle",name:_t("Edit table style"),execute:(env)=>env.openSidePanel("TableStyleEditorPanel",{styleId}),isEnabled:(env)=>!env.isSmall,icon:"o-spreadsheet-Icon.EDIT",},{id:"deleteTableStyle",name:_t("Delete table style"),execute:(env)=>env.model.dispatch("REMOVE_TABLE_STYLE",{tableStyleId:styleId}),icon:"o-spreadsheet-Icon.TRASH",},]);}
function drawPreviewTable(ctx,tableStyle,colWidth,rowHeight){ctx.resetTransform();drawBackgrounds(ctx,tableStyle,colWidth,rowHeight);drawBorders(ctx,tableStyle,colWidth,rowHeight);drawTexts(ctx,tableStyle,colWidth,rowHeight);}
function drawBackgrounds(ctx,tableStyle,colWidth,rowHeight){ctx.save();for(let col=0;col<5;col++){for(let row=0;row<5;row++){ctx.fillStyle=tableStyle.styles[col][row].fillColor||"#fff";ctx.fillRect(col*colWidth,row*rowHeight,colWidth,rowHeight);}}
ctx.restore();}
function drawBorders(ctx,tableStyle,colWidth,rowHeight){ctx.save();ctx.translate(0,0.5);ctx.lineWidth=1;for(let col=0;col<5;col++){for(let row=0;row<5;row++){const borders=tableStyle.borders[col][row];if(borders.top){ctx.strokeStyle=borders.top.color;ctx.beginPath();ctx.moveTo(col*colWidth,row*rowHeight);ctx.lineTo(col*colWidth+colWidth,row*rowHeight);ctx.stroke();}
if(borders.bottom){ctx.strokeStyle=borders.bottom.color;ctx.beginPath();ctx.moveTo(col*colWidth,row*rowHeight+rowHeight);ctx.lineTo(col*colWidth+colWidth,row*rowHeight+rowHeight);ctx.stroke();}}}
ctx.resetTransform();ctx.translate(0.5,0);for(let col=0;col<5;col++){for(let row=0;row<5;row++){const borders=tableStyle.borders[col][row];if(borders.left){ctx.strokeStyle=borders.left.color;ctx.beginPath();ctx.moveTo(col*colWidth,row*rowHeight);ctx.lineTo(col*colWidth,row*rowHeight+rowHeight);ctx.stroke();}
if(borders.right){ctx.strokeStyle=borders.right.color;ctx.beginPath();ctx.moveTo(col*colWidth+colWidth,row*rowHeight);ctx.lineTo(col*colWidth+colWidth,row*rowHeight+rowHeight+1);ctx.stroke();}}}
ctx.restore();}
function drawTexts(ctx,tableStyle,colWidth,rowHeight){ctx.save();ctx.translate(0,0.5);ctx.lineWidth=1;const xPadding=Math.floor(colWidth/4);const yPadding=Math.floor(rowHeight/2);for(let col=0;col<5;col++){for(let row=0;row<5;row++){ctx.strokeStyle=tableStyle.styles[col][row].textColor||"#000";ctx.beginPath();ctx.moveTo(col*colWidth+xPadding+1,row*rowHeight+yPadding);ctx.lineTo(col*colWidth+colWidth-xPadding,row*rowHeight+yPadding);ctx.stroke();}}
ctx.restore();}
css`
  .o-table-style-list-item {
    border: 1px solid transparent;
    border-radius: 4px;
    &.selected {
      border: 1px solid ${ACTION_COLOR};
      background: ${BADGE_SELECTED_COLOR};
    }

    &:hover {
      background: #ddd;
      .o-table-style-edit-button {
        display: block !important;
        right: 0;
        top: 0;
        background: #fff;
        cursor: pointer;
        border: 1px solid #ddd;
        padding: 1px 1px 1px 2px;
        .o-icon {
          font-size: 12px;
          width: 12px;
          height: 12px;
        }
      }
    }
  }
`;class TableStylePreview extends Component{static template="o-spreadsheet-TableStylePreview";static components={MenuPopover};static props={tableConfig:Object,tableStyle:Object,class:String,styleId:{type:String,optional:true},selected:{type:Boolean,optional:true},onClick:{type:Function,optional:true},};canvasRef=useRef("canvas");menu=useState({isOpen:false,anchorRect:null,menuItems:[]});setup(){onWillUpdateProps((nextProps)=>{if(!deepEquals(this.props.tableConfig,nextProps.tableConfig)||!deepEquals(this.props.tableStyle,nextProps.tableStyle)){this.drawTable(nextProps);}});onMounted(()=>this.drawTable(this.props));}
drawTable(props){const ctx=this.canvasRef.el.getContext("2d");const{width,height}=this.canvasRef.el.getBoundingClientRect();this.canvasRef.el.width=width;this.canvasRef.el.height=height;const computedStyle=getComputedTableStyle(props.tableConfig,props.tableStyle,5,5);drawPreviewTable(ctx,computedStyle,(width-1)/5,(height-1)/5);}
onContextMenu(event){if(!this.props.styleId){return;}
this.menu.menuItems=createTableStyleContextMenuActions(this.env,this.props.styleId);this.menu.isOpen=true;this.menu.anchorRect={x:event.clientX,y:event.clientY,width:0,height:0};}
closeMenu(){this.menu.isOpen=false;this.menu.anchorRect=null;this.menu.menuItems=[];}
get styleName(){if(!this.props.styleId){return"";}
return this.env.model.getters.getTableStyle(this.props.styleId).displayName;}
get isStyleEditable(){if(!this.props.styleId){return false;}
return this.env.model.getters.isTableStyleEditable(this.props.styleId);}
editTableStyle(){this.env.openSidePanel("TableStyleEditorPanel",{styleId:this.props.styleId});}}
css`
  .o-table-style-popover {
    /* 7 tables preview + padding by line */
    width: calc((66px + 4px * 2) * 7 + 1.5rem * 2);
    background: #fff;
    font-size: 14px;
    user-select: none;

    .o-notebook {
      border-bottom: 1px solid ${GRAY_300};

      .o-notebook-tab {
        padding: 5px 15px;
        border: 1px solid ${GRAY_300};
        margin-bottom: -1px;
        margin-left: -1px;
        color: ${TEXT_BODY};
        cursor: pointer;
        transition: color 0.2s, border-color 0.2s;

        &.selected {
          border-bottom-color: #fff;
          border-top-color: ${PRIMARY_BUTTON_BG};
          color: ${TEXT_HEADING};
        }
      }
    }

    .o-table-style-list-item {
      padding: 3px;
    }

    .o-table-style-popover-preview {
      width: 66px;
      height: 51px;
    }

    .o-new-table-style {
      font-size: 36px;
      color: #666;
      &:hover {
        background: #f5f5f5;
      }
    }
  }
`;class TableStylesPopover extends Component{static template="o-spreadsheet-TableStylesPopover";static components={Popover,TableStylePreview};static props={tableConfig:Object,popoverProps:{type:Object,optional:true},closePopover:Function,onStylePicked:Function,selectedStyleId:{type:String,optional:true},};categories=TABLE_STYLE_CATEGORIES;tableStyleListRef=useRef("tableStyleList");state=useState({selectedCategory:this.initialSelectedCategory});setup(){useExternalListener(window,"click",this.onExternalClick,{capture:true});}
onExternalClick(ev){if(this.tableStyleListRef.el&&!isChildEvent(this.tableStyleListRef.el,ev)){this.props.closePopover();ev.hasClosedTableStylesPopover=true;}}
get displayedStyles(){const styles=this.env.model.getters.getTableStyles();return Object.keys(styles).filter((styleId)=>styles[styleId].category===this.state.selectedCategory);}
get initialSelectedCategory(){return this.props.selectedStyleId?this.env.model.getters.getTableStyle(this.props.selectedStyleId).category:"medium";}
newTableStyle(){this.props.closePopover();this.env.openSidePanel("TableStyleEditorPanel",{onStylePicked:this.props.onStylePicked,});}}
css`
  .o-table-style-picker {
    border: 1px solid ${GRAY_300};
    border-radius: 3px;

    .o-table-style-picker-arrow {
      border-left: 1px solid ${GRAY_300};

      &:hover {
        background: #f5f5f5;
        cursor: pointer;
      }
    }

    .o-table-style-list-item {
      padding: 5px 6px;
      margin: 5px 2px;

      .o-table-style-picker-preview {
        width: 51px;
        height: 36px;
      }
    }
  }
`;class TableStylePicker extends Component{static template="o-spreadsheet-TableStylePicker";static components={TableStylesPopover,TableStylePreview};static props={table:Object};state=useState({popoverProps:undefined});getDisplayedTableStyles(){const allStyles=this.env.model.getters.getTableStyles();const selectedStyleCategory=allStyles[this.props.table.config.styleId].category;const styles=Object.keys(allStyles).filter((key)=>allStyles[key].category===selectedStyleCategory);const selectedStyleIndex=styles.indexOf(this.props.table.config.styleId);if(selectedStyleIndex===-1){return selectedStyleIndex;}
const index=Math.floor(selectedStyleIndex/4)*4;return styles.slice(index);}
onStylePicked(styleId){const sheetId=this.env.model.getters.getActiveSheetId();this.env.model.dispatch("UPDATE_TABLE",{sheetId,zone:this.props.table.range.zone,config:{styleId:styleId},});this.closePopover();}
onArrowButtonClick(ev){if(ev.hasClosedTableStylesPopover||this.state.popoverProps){this.closePopover();return;}
const target=ev.currentTarget;const{bottom,right}=target.getBoundingClientRect();this.state.popoverProps={anchorRect:{x:right,y:bottom,width:0,height:0},positioning:"top-right",verticalOffset:0,};}
closePopover(){this.state.popoverProps=undefined;}}
css`
  .o-table-panel {
    input.o-table-n-of-headers {
      width: 14px;
      text-align: center;
    }

    .o-info-icon {
      width: 14px;
      height: 14px;
    }
  }
`;class TablePanel extends Component{static template="o-spreadsheet-TablePanel";static components={TableStylePicker,SelectionInput,ValidationMessages,Checkbox,Section};static props={onCloseSidePanel:Function,table:Object};state;setup(){const sheetId=this.env.model.getters.getActiveSheetId();this.state=useState({tableZoneErrors:[],tableXc:this.env.model.getters.getRangeString(this.props.table.range,sheetId),filtersEnabledIfPossible:this.props.table.config.hasFilters,});}
updateHasFilters(hasFilters){this.state.filtersEnabledIfPossible=hasFilters;this.updateTableConfig("hasFilters",hasFilters);}
updateTableConfig(attName,value){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.dispatch("UPDATE_TABLE",{sheetId,zone:this.props.table.range.zone,config:{[attName]:value},});}
updateHasHeaders(hasHeaders){const numberOfHeaders=hasHeaders?1:0;this.updateNumberOfHeaders(numberOfHeaders);}
updateTableIsDynamic(isDynamic){const newTableType=isDynamic?"dynamic":"forceStatic";if(newTableType===this.props.table.type){return;}
const uiTable=this.env.model.getters.getTable(getTableTopLeft(this.props.table));if(!uiTable){return;}
const sheetId=this.env.model.getters.getActiveSheetId();const result=this.env.model.dispatch("UPDATE_TABLE",{sheetId,zone:this.props.table.range.zone,newTableRange:this.env.model.getters.getRangeData(uiTable.range),tableType:newTableType,});const updatedTable=this.env.model.getters.getCoreTable(getTableTopLeft(this.props.table));if(result.isSuccessful&&updatedTable){const newTableRange=updatedTable.range;this.state.tableXc=this.env.model.getters.getRangeString(newTableRange,sheetId);this.state.tableZoneErrors=[];}}
onChangeNumberOfHeaders(ev){const input=ev.target;const numberOfHeaders=parseInt(input.value);const result=this.updateNumberOfHeaders(numberOfHeaders);if(!result.isSuccessful){input.value=this.props.table.config.numberOfHeaders.toString();}}
updateNumberOfHeaders(numberOfHeaders){const hasFilters=numberOfHeaders>0&&(this.tableConfig.hasFilters||this.state.filtersEnabledIfPossible);return this.env.model.dispatch("UPDATE_TABLE",{sheetId:this.env.model.getters.getActiveSheetId(),zone:this.props.table.range.zone,config:{numberOfHeaders,hasFilters},});}
onRangeChanged(ranges){const sheetId=this.env.model.getters.getActiveSheetId();this.state.tableXc=ranges[0];const newTableRange=this.env.model.getters.getRangeFromSheetXC(sheetId,this.state.tableXc);this.state.tableZoneErrors=this.env.model.canDispatch("UPDATE_TABLE",{sheetId,zone:this.props.table.range.zone,newTableRange:this.env.model.getters.getRangeDataFromXc(sheetId,this.state.tableXc),tableType:this.getNewTableType(newTableRange.zone),}).reasons;}
onRangeConfirmed(){const sheetId=this.env.model.getters.getActiveSheetId();let newRange=this.env.model.getters.getRangeFromSheetXC(sheetId,this.state.tableXc);if(getZoneArea(newRange.zone)===1){const extendedZone=this.env.model.getters.getContiguousZone(sheetId,newRange.zone);newRange=this.env.model.getters.getRangeFromZone(sheetId,extendedZone);}
const newTableZone=newRange.zone;const oldTableZone=this.props.table.range.zone;const cmdToCall=newTableZone.top===oldTableZone.top&&newTableZone.left===oldTableZone.left?"RESIZE_TABLE":"UPDATE_TABLE";const result=this.env.model.dispatch(cmdToCall,{sheetId,zone:this.props.table.range.zone,newTableRange:this.env.model.getters.getRangeData(newRange),tableType:this.getNewTableType(newRange.zone),});const position={sheetId,col:newRange.zone.left,row:newRange.zone.top};const updatedTable=this.env.model.getters.getCoreTable(position);if(result.isSuccessful&&updatedTable){const newTopLeft=getTableTopLeft(updatedTable);this.env.model.selection.selectZone({zone:positionToZone(newTopLeft),cell:newTopLeft,});const newTableRange=updatedTable.range;this.state.tableXc=this.env.model.getters.getRangeString(newTableRange,sheetId);}}
deleteTable(){const sheetId=this.env.model.getters.getActiveSheetId();this.env.model.dispatch("REMOVE_TABLE",{sheetId,target:[this.props.table.range.zone],});}
getNewTableType(newTableZone){if(this.props.table.type==="forceStatic"){return"forceStatic";}
const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.canCreateDynamicTableOnZones(sheetId,[newTableZone])?"dynamic":"static";}
get tableConfig(){return this.props.table.config;}
get errorMessages(){const cancelledReasons=this.state.tableZoneErrors||[];return cancelledReasons.map((error)=>TableTerms.Errors[error]||TableTerms.Errors.Unexpected);}
getCheckboxLabel(attName){return TableTerms.Checkboxes[attName];}
get canHaveFilters(){return this.tableConfig.numberOfHeaders>0;}
get hasFilterCheckboxTooltip(){return this.canHaveFilters?undefined:TableTerms.Tooltips.filterWithoutHeader;}
get canBeDynamic(){const sheetId=this.env.model.getters.getActiveSheetId();return(this.props.table.type==="dynamic"||this.env.model.getters.canCreateDynamicTableOnZones(sheetId,[this.props.table.range.zone]));}
get dynamicTableTooltip(){return TableTerms.Tooltips.isDynamic;}}
css`
  .o-table-style-editor-panel {
    .o-table-style-list-item {
      margin: 2px 7px;
      padding: 6px 9px;

      .o-table-style-edit-template-preview {
        width: 71px;
        height: 51px;
      }
    }
  }
`;const DEFAULT_TABLE_STYLE_COLOR="#3C78D8";class TableStyleEditorPanel extends Component{static template="o-spreadsheet-TableStyleEditorPanel";static components={Section,RoundColorPicker,TableStylePreview};static props={onCloseSidePanel:Function,onStylePicked:{type:Function,optional:true},styleId:{type:String,optional:true},};state=useState(this.getInitialState());setup(){useExternalListener(window,"click",()=>(this.state.pickerOpened=false));}
getInitialState(){const editedStyle=this.props.styleId?this.env.model.getters.getTableStyle(this.props.styleId):null;return{pickerOpened:false,primaryColor:editedStyle?.primaryColor||DEFAULT_TABLE_STYLE_COLOR,selectedTemplateName:editedStyle?.templateName||"lightColoredText",styleName:editedStyle?.displayName||this.env.model.getters.getNewCustomTableStyleName(),};}
togglePicker(){this.state.pickerOpened=!this.state.pickerOpened;}
onColorPicked(color){this.state.primaryColor=isColorValid(color)?color:DEFAULT_TABLE_STYLE_COLOR;this.state.pickerOpened=false;}
onTemplatePicked(templateName){this.state.selectedTemplateName=templateName;}
onConfirm(){const tableStyleId=this.props.styleId||this.env.model.uuidGenerator.smallUuid();this.env.model.dispatch("CREATE_TABLE_STYLE",{tableStyleId,tableStyleName:this.state.styleName,templateName:this.state.selectedTemplateName,primaryColor:this.state.primaryColor,});this.props.onStylePicked?.(tableStyleId);this.props.onCloseSidePanel();}
onCancel(){this.props.onCloseSidePanel();}
onDelete(){if(!this.props.styleId){return;}
this.env.model.dispatch("REMOVE_TABLE_STYLE",{tableStyleId:this.props.styleId});this.props.onCloseSidePanel();}
get colorPreviewStyle(){return cssPropertiesToCss({background:this.state.primaryColor});}
get tableTemplates(){return Object.keys(TABLE_STYLES_TEMPLATES).filter((templateName)=>templateName!=="none");}
get previewTableConfig(){return{bandedColumns:false,bandedRows:true,firstColumn:false,lastColumn:false,numberOfHeaders:1,totalRow:true,hasFilters:true,styleId:"",};}
get selectedStyle(){return this.computeTableStyle(this.state.selectedTemplateName);}
computeTableStyle(templateName){return buildTableStyle(this.state.styleName,templateName,this.state.primaryColor);}}
const sidePanelRegistry=new Registry();sidePanelRegistry.add("ConditionalFormatting",{title:_t("Conditional formatting"),Body:ConditionalFormattingPanel,});sidePanelRegistry.add("ChartPanel",{title:_t("Chart"),Body:ChartPanel,computeState:(getters,initialProps)=>{const figureId=getters.getSelectedFigureId()??initialProps.figureId;if(!getters.isChartDefined(figureId)){return{isOpen:false};}
return{isOpen:true,props:{figureId}};},});sidePanelRegistry.add("FindAndReplace",{title:_t("Find and Replace"),Body:FindAndReplacePanel,});sidePanelRegistry.add("CustomCurrency",{title:_t("Custom currency format"),Body:CustomCurrencyPanel,});sidePanelRegistry.add("SplitToColumns",{title:_t("Split text into columns"),Body:SplitIntoColumnsPanel,});sidePanelRegistry.add("Settings",{title:_t("Spreadsheet settings"),Body:SettingsPanel,});sidePanelRegistry.add("RemoveDuplicates",{title:_t("Remove duplicates"),Body:RemoveDuplicatesPanel,});sidePanelRegistry.add("DataValidation",{title:_t("Data validation"),Body:DataValidationPanel,});sidePanelRegistry.add("DataValidationEditor",{title:_t("Data validation"),Body:DataValidationEditor,});sidePanelRegistry.add("MoreFormats",{title:_t("More date formats"),Body:MoreFormatsPanel,});sidePanelRegistry.add("TableSidePanel",{title:_t("Edit table"),Body:TablePanel,computeState:(getters)=>{const table=getters.getFirstTableInSelection();if(!table){return{isOpen:false};}
const coreTable=getters.getCoreTable(getTableTopLeft(table));return{isOpen:true,props:{table:coreTable},key:table.id};},});sidePanelRegistry.add("TableStyleEditorPanel",{title:_t("Create custom table style"),Body:TableStyleEditorPanel,computeState:(getters,initialProps)=>{return{isOpen:true,props:{...initialProps},key:initialProps.styleId??"new",};},});sidePanelRegistry.add("PivotSidePanel",{title:(env,props)=>{return _t("Pivot #%s",env.model.getters.getPivotFormulaId(props.pivotId));},Body:PivotSidePanel,computeState:(getters,props)=>{return{isOpen:getters.isExistingPivot(props.pivotId),props,key:`pivot_key_${props.pivotId}`,};},});sidePanelRegistry.add("PivotMeasureDisplayPanel",{title:(env,props)=>{const measure=env.model.getters.getPivot(props.pivotId).getMeasure(props.measure.id);return _t('Measure "%s" options',measure.displayName);},Body:PivotMeasureDisplayPanel,computeState:(getters,props)=>{try{getters.getPivot(props.pivotId).getMeasure(props.measure.id);return{isOpen:true,props,key:"pivot_measure_display"};}
catch(e){return{isOpen:false};}},});class ScreenWidthStore{mutators=["setSmallThreshhold"];_isSmallCallback=()=>false;get isSmall(){return this._isSmallCallback();}
setSmallThreshhold(isSmall){this._isSmallCallback=isSmall;}}
const DEFAULT_SIDE_PANEL_SIZE=350;const COLLAPSED_SIDE_PANEL_SIZE=45;const MIN_SHEET_VIEW_WIDTH=150;class SidePanelStore extends SpreadsheetStore{mutators=["open","toggle","close","changePanelSize","resetPanelSize","togglePinPanel","closeMainPanel","changeSpreadsheetWidth","toggleCollapsePanel",];mainPanel=undefined;secondaryPanel;availableWidth=0;screenWidthStore=this.get(ScreenWidthStore);get isMainPanelOpen(){return this.mainPanel&&this.mainPanel.componentTag?this.computeState(this.mainPanel).isOpen:false;}
get isSecondaryPanelOpen(){return this.secondaryPanel&&this.secondaryPanel.componentTag?this.computeState(this.secondaryPanel).isOpen:false;}
get mainPanelProps(){return this.mainPanel?this.getPanelProps(this.mainPanel):undefined;}
get mainPanelKey(){return this.mainPanel?this.getPanelKey(this.mainPanel):undefined;}
get secondaryPanelProps(){return this.secondaryPanel?this.getPanelProps(this.secondaryPanel):undefined;}
get secondaryPanelKey(){return this.secondaryPanel?this.getPanelKey(this.secondaryPanel):undefined;}
get totalPanelSize(){return(this.mainPanel?.size||0)+(this.secondaryPanel?.size??0);}
getPanelProps(panelInfo){const state=this.computeState(panelInfo);if(state.isOpen){return state.props??{};}
return{};}
getPanelKey(panelInfo){const state=this.computeState(panelInfo);if(state.isOpen){return state.key;}
return undefined;}
open(componentTag,initialPanelProps={}){if(this.screenWidthStore.isSmall){return;}
const newPanelInfo={initialPanelProps,componentTag,size:DEFAULT_SIDE_PANEL_SIZE};const state=this.computeState(newPanelInfo);if(!state.isOpen){return;}
const mainPanelKey=this.mainPanel?this.getPanelKey(this.mainPanel):undefined;if(!this.mainPanel||!this.mainPanel.isPinned||mainPanelKey===state.key){this._openPanel("mainPanel",newPanelInfo,state);return;}
const nonCollapsedPanelSize=this.mainPanel.isCollapsed?DEFAULT_SIDE_PANEL_SIZE:this.mainPanel.size;if(!this.secondaryPanel&&nonCollapsedPanelSize+DEFAULT_SIDE_PANEL_SIZE>this.availableWidth){this.get(NotificationStore).notifyUser({sticky:false,type:"warning",text:_t("The window is too small to display multiple side panels."),});return;}
this._openPanel("secondaryPanel",newPanelInfo,state);}
_openPanel(panel,newPanel,state){const currentPanel=this[panel];if(currentPanel&&newPanel.componentTag!==currentPanel.componentTag){currentPanel.initialPanelProps?.onCloseSidePanel?.();}
this[panel]={initialPanelProps:state.props??{},componentTag:newPanel.componentTag,size:currentPanel?.size||DEFAULT_SIDE_PANEL_SIZE,isCollapsed:currentPanel?.isCollapsed||false,isPinned:currentPanel&&"isPinned"in currentPanel?currentPanel.isPinned:false,};if(this[panel].isCollapsed){this.toggleCollapsePanel(panel);}}
toggle(componentTag,panelProps){const panel=this.mainPanel?.isPinned?this.secondaryPanel:this.mainPanel;if(panel&&componentTag===panel.componentTag){this.close();}
else{this.open(componentTag,panelProps);}}
close(){if(this.mainPanel?.isPinned){if(this.secondaryPanel){this.secondaryPanel.initialPanelProps.onCloseSidePanel?.();this.secondaryPanel=undefined;}
return;}
this.mainPanel?.initialPanelProps.onCloseSidePanel?.();this.mainPanel=undefined;}
closeMainPanel(){this.mainPanel?.initialPanelProps.onCloseSidePanel?.();this.mainPanel=this.secondaryPanel||undefined;this.secondaryPanel=undefined;}
changePanelSize(panel,size){const panelInfo=this[panel];if(!panelInfo||("isCollapsed"in panelInfo&&panelInfo.isCollapsed)){return;}
size=Math.max(size,DEFAULT_SIDE_PANEL_SIZE);let otherPanelSize=panel==="mainPanel"?this.secondaryPanel?.size||0:this.mainPanel?.size||0;if(size>this.availableWidth-otherPanelSize){if(panel==="mainPanel"&&this.secondaryPanel){this.secondaryPanel.size=Math.max(this.availableWidth-size,DEFAULT_SIDE_PANEL_SIZE);otherPanelSize=this.secondaryPanel.size;}
size=Math.max(this.availableWidth-otherPanelSize,DEFAULT_SIDE_PANEL_SIZE);}
panelInfo.size=size;}
resetPanelSize(panel){const panelInfo=this[panel];if(!panelInfo){return;}
panelInfo.size=DEFAULT_SIDE_PANEL_SIZE;}
togglePinPanel(){if(!this.mainPanel){return;}
this.mainPanel.isPinned=!this.mainPanel.isPinned;if(!this.mainPanel.isPinned&&this.secondaryPanel){this.secondaryPanel?.initialPanelProps.onCloseSidePanel?.();this.mainPanel=this.secondaryPanel;this.secondaryPanel=undefined;}}
toggleCollapsePanel(panel){const panelInfo=this[panel];if(!panelInfo){return;}
if(panelInfo.isCollapsed){panelInfo.isCollapsed=false;this.changePanelSize(panel,DEFAULT_SIDE_PANEL_SIZE);}
else{panelInfo.isCollapsed=true;panelInfo.size=COLLAPSED_SIDE_PANEL_SIZE;}}
computeState({componentTag,initialPanelProps}){const customComputeState=sidePanelRegistry.get(componentTag).computeState;const state=customComputeState?customComputeState(this.getters,initialPanelProps):{isOpen:true,props:initialPanelProps};return state.isOpen?{...state,key:state.key||componentTag}:state;}
changeSpreadsheetWidth(width){this.availableWidth=width-MIN_SHEET_VIEW_WIDTH;if(this.secondaryPanel&&width-this.totalPanelSize<MIN_SHEET_VIEW_WIDTH){this.secondaryPanel?.initialPanelProps.onCloseSidePanel?.();this.secondaryPanel=undefined;}
if(this.mainPanel&&width-this.totalPanelSize<MIN_SHEET_VIEW_WIDTH){this.mainPanel.size=Math.max(width-MIN_SHEET_VIEW_WIDTH,DEFAULT_SIDE_PANEL_SIZE);}}}
const SIZE=3;const COLOR="#777";css`
  .o-table-resizer {
    width: ${SIZE * 2}px;
    height: ${SIZE * 2}px;
    border-bottom: ${SIZE}px solid ${COLOR};
    border-right: ${SIZE}px solid ${COLOR};
    cursor: nwse-resize;
  }
`;class TableResizer extends Component{static template="o-spreadsheet-TableResizer";static props={table:Object};state=useState({highlightZone:undefined});dragNDropGrid=useDragAndDropBeyondTheViewport(this.env);setup(){useHighlights(this);}
get containerStyle(){const tableZone=this.props.table.range.zone;const bottomRight={...tableZone,left:tableZone.right,top:tableZone.bottom};const rect=this.env.model.getters.getVisibleRect(bottomRight);if(rect.height===0||rect.width===0){return cssPropertiesToCss({display:"none"});}
return cssPropertiesToCss({top:`${rect.y + rect.height - SIZE * 2}px`,left:`${rect.x + rect.width - SIZE * 2}px`,});}
onMouseDown(ev){const tableZone=this.props.table.range.zone;const topLeft={col:tableZone.left,row:tableZone.top};document.body.style.cursor="nwse-resize";const onMouseUp=()=>{document.body.style.cursor="";const newTableZone=this.state.highlightZone;if(!newTableZone)
return;const sheetId=this.props.table.range.sheetId;this.env.model.dispatch("RESIZE_TABLE",{sheetId,zone:this.props.table.range.zone,newTableRange:this.env.model.getters.getRangeDataFromZone(sheetId,newTableZone),});this.state.highlightZone=undefined;};const onMouseMove=(col,row,ev)=>{this.state.highlightZone={left:topLeft.col,top:topLeft.row,right:Math.max(col,topLeft.col),bottom:Math.max(row,topLeft.row),};};this.dragNDropGrid.start(ev,onMouseMove,onMouseUp);}
get highlights(){if(!this.state.highlightZone)
return[];return[{range:this.env.model.getters.getRangeFromZone(this.props.table.range.sheetId,this.state.highlightZone),color:COLOR,noFill:true,},];}}
const registries$1={ROW:rowMenuRegistry,COL:colMenuRegistry,CELL:cellMenuRegistry,GROUP_HEADERS:groupHeadersMenuRegistry,UNGROUP_HEADERS:unGroupHeadersMenuRegistry,};class Grid extends Component{static template="o-spreadsheet-Grid";static props={exposeFocus:Function,getGridSize:Function,};static components={GridComposer,GridOverlay,GridPopover,HeadersOverlay,MenuPopover,Autofill,ClientTag,Highlight,Popover,VerticalScrollBar,HorizontalScrollBar,TableResizer,Selection,};HEADER_HEIGHT=HEADER_HEIGHT;HEADER_WIDTH=HEADER_WIDTH;menuState;gridRef;highlightStore;cellPopovers;composerFocusStore;DOMFocusableElementStore;paintFormatStore;clientFocusStore;dragNDropGrid=useDragAndDropBeyondTheViewport(this.env);onMouseWheel;hoveredCell;sidePanel;setup(){this.highlightStore=useStore(HighlightStore);this.menuState=useState({isOpen:false,anchorRect:null,menuItems:[],});this.gridRef=useRef("grid");this.hoveredCell=useStore(DelayedHoveredCellStore);this.composerFocusStore=useStore(ComposerFocusStore);this.DOMFocusableElementStore=useStore(DOMFocusableElementStore);this.sidePanel=useStore(SidePanelStore);this.paintFormatStore=useStore(PaintFormatStore);this.clientFocusStore=useStore(ClientFocusStore);useStore(ArrayFormulaHighlight);useChildSubEnv({getPopoverContainerRect:()=>this.getGridRect()});useExternalListener(document.body,"cut",this.copy.bind(this,true));useExternalListener(document.body,"copy",this.copy.bind(this,false));useExternalListener(document.body,"paste",this.paste);onMounted(()=>this.focusDefaultElement());this.props.exposeFocus(()=>this.focusDefaultElement());useGridDrawing("canvas",this.env.model,()=>this.env.model.getters.getSheetViewDimensionWithHeaders());this.onMouseWheel=useWheelHandler((deltaX,deltaY)=>{this.moveCanvas(deltaX,deltaY);this.hoveredCell.clear();});this.cellPopovers=useStore(CellPopoverStore);useEffect((isMainPanelOpen,isSecondaryPanelOpen)=>{if(!isMainPanelOpen&&!isSecondaryPanelOpen){this.DOMFocusableElementStore.focus();}},()=>[this.sidePanel.isMainPanelOpen,this.sidePanel.isSecondaryPanelOpen]);useTouchScroll(this.gridRef,this.moveCanvas.bind(this),()=>{const{scrollY}=this.env.model.getters.getActiveSheetScrollInfo();return scrollY>0;});}
get highlights(){return this.highlightStore.highlights;}
get gridOverlayDimensions(){return cssPropertiesToCss({top:`${HEADER_HEIGHT}px`,left:`${HEADER_WIDTH}px`,height:`calc(100% - ${HEADER_HEIGHT + SCROLLBAR_WIDTH}px)`,width:`calc(100% - ${HEADER_WIDTH + SCROLLBAR_WIDTH}px)`,});}
onClosePopover(){if(this.cellPopovers.isOpen){this.cellPopovers.close();}
this.focusDefaultElement();}
keyDownMapping={Enter:()=>{const cell=this.env.model.getters.getActiveCell();cell.type===CellValueType.empty?this.onComposerCellFocused():this.onComposerContentFocused();},Tab:()=>this.env.model.selection.moveAnchorCell("right",1),"Shift+Tab":()=>this.env.model.selection.moveAnchorCell("left",1),F2:()=>{const cell=this.env.model.getters.getActiveCell();cell.type===CellValueType.empty?this.onComposerCellFocused():this.onComposerContentFocused();},Delete:()=>{this.env.model.dispatch("DELETE_UNFILTERED_CONTENT",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),});},Backspace:()=>{this.env.model.dispatch("DELETE_UNFILTERED_CONTENT",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),});},Escape:()=>{if(this.cellPopovers.isOpen){this.cellPopovers.close();}
else if(this.menuState.isOpen){this.closeMenu();}
else if(this.paintFormatStore.isActive){this.paintFormatStore.cancel();}
else{this.env.model.dispatch("CLEAN_CLIPBOARD_HIGHLIGHT");}},"Ctrl+A":()=>this.env.model.selection.loopSelection(),"Ctrl+Z":()=>this.env.model.dispatch("REQUEST_UNDO"),"Ctrl+Y":()=>this.env.model.dispatch("REQUEST_REDO"),F4:()=>this.env.model.dispatch("REQUEST_REDO"),"Ctrl+B":()=>this.env.model.dispatch("SET_FORMATTING",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),style:{bold:!this.env.model.getters.getCurrentStyle().bold},}),"Ctrl+I":()=>this.env.model.dispatch("SET_FORMATTING",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),style:{italic:!this.env.model.getters.getCurrentStyle().italic},}),"Ctrl+U":()=>this.env.model.dispatch("SET_FORMATTING",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),style:{underline:!this.env.model.getters.getCurrentStyle().underline},}),"Ctrl+O":()=>CREATE_IMAGE(this.env),"Alt+=":()=>{const sheetId=this.env.model.getters.getActiveSheetId();const mainSelectedZone=this.env.model.getters.getSelectedZone();const{anchor}=this.env.model.getters.getSelection();const sums=this.env.model.getters.getAutomaticSums(sheetId,mainSelectedZone,anchor.cell);if(this.env.model.getters.isSingleCellOrMerge(sheetId,mainSelectedZone)||(this.env.model.getters.isEmpty(sheetId,mainSelectedZone)&&sums.length<=1)){const zone=sums[0]?.zone;const zoneXc=zone?this.env.model.getters.zoneToXC(sheetId,sums[0].zone):"";const formula=`=SUM(${zoneXc})`;this.onComposerCellFocused(formula,{start:5,end:5+zoneXc.length});}
else{this.env.model.dispatch("SUM_SELECTION");}},"Alt+Enter":()=>{const cell=this.env.model.getters.getActiveCell();if(cell.link){openLink(cell.link,this.env);}},"Ctrl+Home":()=>{const sheetId=this.env.model.getters.getActiveSheetId();const{col,row}=this.env.model.getters.getNextVisibleCellPosition({sheetId,col:0,row:0,});this.env.model.selection.selectCell(col,row);},"Ctrl+End":()=>{const sheetId=this.env.model.getters.getActiveSheetId();const col=this.env.model.getters.findVisibleHeader(sheetId,"COL",this.env.model.getters.getNumberCols(sheetId)-1,0);const row=this.env.model.getters.findVisibleHeader(sheetId,"ROW",this.env.model.getters.getNumberRows(sheetId)-1,0);this.env.model.selection.selectCell(col,row);},"Shift+ ":()=>{const sheetId=this.env.model.getters.getActiveSheetId();const newZone={...this.env.model.getters.getSelectedZone(),left:0,right:this.env.model.getters.getNumberCols(sheetId)-1,};const position=this.env.model.getters.getActivePosition();this.env.model.selection.selectZone({cell:position,zone:newZone});},"Ctrl+ ":()=>{const sheetId=this.env.model.getters.getActiveSheetId();const newZone={...this.env.model.getters.getSelectedZone(),top:0,bottom:this.env.model.getters.getNumberRows(sheetId)-1,};const position=this.env.model.getters.getActivePosition();this.env.model.selection.selectZone({cell:position,zone:newZone});},"Ctrl+D":async()=>this.env.model.dispatch("COPY_PASTE_CELLS_ABOVE"),"Ctrl+R":async()=>this.env.model.dispatch("COPY_PASTE_CELLS_ON_LEFT"),"Ctrl+H":()=>this.sidePanel.open("FindAndReplace",{}),"Ctrl+F":()=>this.sidePanel.open("FindAndReplace",{}),"Ctrl+Shift+E":()=>this.setHorizontalAlign("center"),"Ctrl+Shift+L":()=>this.setHorizontalAlign("left"),"Ctrl+Shift+R":()=>this.setHorizontalAlign("right"),"Ctrl+Shift+V":()=>PASTE_AS_VALUE_ACTION(this.env),"Ctrl+Shift+<":()=>this.clearFormatting(),"Ctrl+<":()=>this.clearFormatting(),"Ctrl+Shift+ ":()=>{this.env.model.selection.selectAll();},"Ctrl+Alt+=":()=>{const activeCols=this.env.model.getters.getActiveCols();const activeRows=this.env.model.getters.getActiveRows();const isSingleSelection=this.env.model.getters.getSelectedZones().length===1;const areFullCols=activeCols.size>0&&isSingleSelection;const areFullRows=activeRows.size>0&&isSingleSelection;if(areFullCols&&!areFullRows){INSERT_COLUMNS_BEFORE_ACTION(this.env);}
else if(areFullRows&&!areFullCols){INSERT_ROWS_BEFORE_ACTION(this.env);}},"Ctrl+Alt+-":()=>{const columns=[...this.env.model.getters.getActiveCols()];const rows=[...this.env.model.getters.getActiveRows()];if(columns.length>0&&rows.length===0){this.env.model.dispatch("REMOVE_COLUMNS_ROWS",{sheetId:this.env.model.getters.getActiveSheetId(),sheetName:this.env.model.getters.getActiveSheetName(),dimension:"COL",elements:columns,});}
else if(rows.length>0&&columns.length===0){this.env.model.dispatch("REMOVE_COLUMNS_ROWS",{sheetId:this.env.model.getters.getActiveSheetId(),sheetName:this.env.model.getters.getActiveSheetName(),dimension:"ROW",elements:rows,});}},"Shift+PageDown":()=>{this.env.model.dispatch("ACTIVATE_NEXT_SHEET");},"Shift+PageUp":()=>{this.env.model.dispatch("ACTIVATE_PREVIOUS_SHEET");},PageDown:()=>this.env.model.dispatch("SHIFT_VIEWPORT_DOWN"),PageUp:()=>this.env.model.dispatch("SHIFT_VIEWPORT_UP"),"Ctrl+K":()=>INSERT_LINK(this.env),"Alt+Shift+ArrowRight":()=>this.processHeaderGroupingKey("right"),"Alt+Shift+ArrowLeft":()=>this.processHeaderGroupingKey("left"),"Alt+Shift+ArrowUp":()=>this.processHeaderGroupingKey("up"),"Alt+Shift+ArrowDown":()=>this.processHeaderGroupingKey("down"),};focusDefaultElement(){if(!this.env.model.getters.getSelectedFigureId()&&this.composerFocusStore.activeComposer.editionMode==="inactive"){this.DOMFocusableElementStore.focus();}}
get gridEl(){if(!this.gridRef.el){throw new Error("Grid el is not defined.");}
return this.gridRef.el;}
getAutofillPosition(){const zone=this.env.model.getters.getSelectedZone();const rect=this.env.model.getters.getVisibleRect(zone);return{left:rect.x+rect.width-AUTOFILL_EDGE_LENGTH/2,top:rect.y+rect.height-AUTOFILL_EDGE_LENGTH/2,};}
get isAutofillVisible(){const zone=this.env.model.getters.getSelectedZone();const rect=this.env.model.getters.getVisibleRect({left:zone.right,right:zone.right,top:zone.bottom,bottom:zone.bottom,});return!(rect.width===0||rect.height===0);}
onGridResized({height,width}){this.env.model.dispatch("RESIZE_SHEETVIEW",{width:width-HEADER_WIDTH,height:height-HEADER_HEIGHT,gridOffsetX:HEADER_WIDTH,gridOffsetY:HEADER_HEIGHT,});}
moveCanvas(deltaX,deltaY){const{scrollX,scrollY}=this.env.model.getters.getActiveSheetScrollInfo();this.env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:scrollX+deltaX,offsetY:scrollY+deltaY,});}
processSpaceKey(ev){if(this.env.model.getters.hasBooleanValidationInZones(this.env.model.getters.getSelectedZones())){ev.preventDefault();ev.stopPropagation();this.env.model.dispatch("TOGGLE_CHECKBOX",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),});}}
getClientPositionKey(client){return`${client.id}-${client.position?.sheetId}-${client.position?.col}-${client.position?.row}`;}
isCellHovered(col,row){return this.hoveredCell.col===col&&this.hoveredCell.row===row;}
get focusedClients(){return this.clientFocusStore.focusedClients;}
getGridRect(){return{...getRefBoundingRect(this.gridRef),...this.env.model.getters.getSheetViewDimensionWithHeaders(),};}
onCellClicked(col,row,modifiers,ev){ev.preventDefault();if(this.composerFocusStore.activeComposer.editionMode==="editing"){this.composerFocusStore.activeComposer.stopEdition();}
if(modifiers.expandZone){this.env.model.selection.setAnchorCorner(col,row);}
else if(modifiers.addZone){this.env.model.selection.addCellToSelection(col,row);}
else{this.env.model.selection.selectCell(col,row);}
if(this.env.isMobile()){return;}
let prevCol=col;let prevRow=row;const onMouseMove=(col,row,ev)=>{ev.preventDefault();if((col!==prevCol&&col!==-1)||(row!==prevRow&&row!==-1)){prevCol=col===-1?prevCol:col;prevRow=row===-1?prevRow:row;this.env.model.selection.setAnchorCorner(prevCol,prevRow);}};const onMouseUp=()=>{if(this.paintFormatStore.isActive){this.paintFormatStore.pasteFormat(this.env.model.getters.getSelectedZones());}};this.dragNDropGrid.start(ev,onMouseMove,onMouseUp);}
onCellDoubleClicked(col,row){const sheetId=this.env.model.getters.getActiveSheetId();({col,row}=this.env.model.getters.getMainCellPosition({sheetId,col,row}));const cell=this.env.model.getters.getEvaluatedCell({sheetId,col,row});if(cell.type===CellValueType.empty){this.onComposerCellFocused();}
else{this.onComposerContentFocused();}}
processArrows(ev){ev.preventDefault();ev.stopPropagation();if(this.cellPopovers.isOpen){this.cellPopovers.close();}
updateSelectionWithArrowKeys(ev,this.env.model.selection);if(this.paintFormatStore.isActive){this.paintFormatStore.pasteFormat(this.env.model.getters.getSelectedZones());}}
onKeydown(ev){const keyDownString=keyboardEventToShortcutString(ev);const handler=this.keyDownMapping[keyDownString];if(handler){ev.preventDefault();ev.stopPropagation();handler();return;}
if(keyDownString===" "){this.processSpaceKey(ev);return;}
if(ev.key.startsWith("Arrow")){this.processArrows(ev);return;}}
onInputContextMenu(ev){ev.preventDefault();const lastZone=this.env.model.getters.getSelectedZone();const{left:col,top:row}=lastZone;let type="CELL";this.composerFocusStore.activeComposer.stopEdition();if(this.env.model.getters.getActiveCols().has(col)){type="COL";}
else if(this.env.model.getters.getActiveRows().has(row)){type="ROW";}
const{x,y,width}=this.env.model.getters.getVisibleRect(lastZone);const gridRect=this.getGridRect();this.toggleContextMenu(type,gridRect.x+x+width,gridRect.y+y);}
onCellRightClicked(col,row,{x,y}){const zones=this.env.model.getters.getSelectedZones();const lastZone=zones[zones.length-1];let type="CELL";if(!isInside(col,row,lastZone)){this.env.model.selection.getBackToDefault();this.env.model.selection.selectCell(col,row);}
else{if(this.env.model.getters.getActiveCols().has(col)){type="COL";}
else if(this.env.model.getters.getActiveRows().has(row)){type="ROW";}}
this.toggleContextMenu(type,x,y);}
toggleContextMenu(type,x,y){if(this.cellPopovers.isOpen){this.cellPopovers.close();}
this.menuState.isOpen=true;this.menuState.anchorRect={x,y,width:0,height:0};this.menuState.menuItems=registries$1[type].getMenuItems();}
async copy(cut,ev){if(!this.gridEl.contains(document.activeElement)){return;}
if(this.composerFocusStore.activeComposer.editionMode!=="inactive"){return;}
if(cut){interactiveCut(this.env);}
else{this.env.model.dispatch("COPY");}
const osContent=await this.env.model.getters.getClipboardTextAndImageContent();await this.env.clipboard.write(osContent);ev.preventDefault();}
async paste(ev){if(!this.gridEl.contains(document.activeElement)){return;}
ev.preventDefault();const clipboardData=ev.clipboardData;if(!clipboardData){return;}
const image=[...clipboardData.files]?.find((file)=>AllowedImageMimeTypes.includes(file.type));const osClipboard={content:{[ClipboardMIMEType.PlainText]:clipboardData?.getData(ClipboardMIMEType.PlainText),[ClipboardMIMEType.Html]:clipboardData?.getData(ClipboardMIMEType.Html),},};if(image){osClipboard.content[image.type]=image;}
const target=this.env.model.getters.getSelectedZones();const isCutOperation=this.env.model.getters.isCutOperation();const clipboardId=this.env.model.getters.getClipboardId();const osClipboardContent=parseOSClipboardContent(osClipboard.content);const osClipboardId=osClipboardContent.data?.clipboardId;if(clipboardId===osClipboardId){interactivePaste(this.env,target);}
else{await interactivePasteFromOS(this.env,target,osClipboardContent);}
if(isCutOperation){await this.env.clipboard.write({[ClipboardMIMEType.PlainText]:""});}}
clearFormatting(){this.env.model.dispatch("CLEAR_FORMATTING",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),});}
setHorizontalAlign(align){this.env.model.dispatch("SET_FORMATTING",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),style:{align},});}
closeMenu(){this.menuState.isOpen=false;this.focusDefaultElement();}
processHeaderGroupingKey(direction){if(this.env.model.getters.getSelectedZones().length!==1){return;}
const selectingRows=this.env.model.getters.getActiveRows().size>0;const selectingCols=this.env.model.getters.getActiveCols().size>0;if(selectingCols&&selectingRows){this.processHeaderGroupingEventOnWholeSheet(direction);}
else if(selectingCols){this.processHeaderGroupingEventOnHeaders(direction,"COL");}
else if(selectingRows){this.processHeaderGroupingEventOnHeaders(direction,"ROW");}
else{this.processHeaderGroupingEventOnGrid(direction);}}
processHeaderGroupingEventOnHeaders(direction,dimension){const sheetId=this.env.model.getters.getActiveSheetId();const zone=this.env.model.getters.getSelectedZone();const start=dimension==="COL"?zone.left:zone.top;const end=dimension==="COL"?zone.right:zone.bottom;switch(direction){case"right":this.env.model.dispatch("GROUP_HEADERS",{sheetId,dimension:dimension,start,end});break;case"left":this.env.model.dispatch("UNGROUP_HEADERS",{sheetId,dimension:dimension,start,end});break;case"down":this.env.model.dispatch("UNFOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension,zone});break;case"up":this.env.model.dispatch("FOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension,zone});break;}}
processHeaderGroupingEventOnWholeSheet(direction){const sheetId=this.env.model.getters.getActiveSheetId();if(direction==="up"){this.env.model.dispatch("FOLD_ALL_HEADER_GROUPS",{sheetId,dimension:"ROW"});this.env.model.dispatch("FOLD_ALL_HEADER_GROUPS",{sheetId,dimension:"COL"});}
else if(direction==="down"){this.env.model.dispatch("UNFOLD_ALL_HEADER_GROUPS",{sheetId,dimension:"ROW"});this.env.model.dispatch("UNFOLD_ALL_HEADER_GROUPS",{sheetId,dimension:"COL"});}}
processHeaderGroupingEventOnGrid(direction){const sheetId=this.env.model.getters.getActiveSheetId();const zone=this.env.model.getters.getSelectedZone();switch(direction){case"down":this.env.model.dispatch("UNFOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension:"ROW",zone:zone,});this.env.model.dispatch("UNFOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension:"COL",zone:zone,});break;case"up":this.env.model.dispatch("FOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension:"ROW",zone:zone,});this.env.model.dispatch("FOLD_HEADER_GROUPS_IN_ZONE",{sheetId,dimension:"COL",zone:zone,});break;case"right":{const{x,y,width}=this.env.model.getters.getVisibleRect(zone);const gridRect=this.getGridRect();this.toggleContextMenu("GROUP_HEADERS",x+width+gridRect.x,y+gridRect.y);break;}
case"left":{if(!canUngroupHeaders(this.env,"COL")&&!canUngroupHeaders(this.env,"ROW")){return;}
const{x,y,width}=this.env.model.getters.getVisibleRect(zone);const gridRect=this.getGridRect();this.toggleContextMenu("UNGROUP_HEADERS",x+width+gridRect.x,y+gridRect.y);break;}}}
onComposerCellFocused(content,selection){this.composerFocusStore.focusActiveComposer({content,selection,focusMode:"cellFocus"});}
onComposerContentFocused(){this.composerFocusStore.focusActiveComposer({focusMode:"contentFocus"});}
get staticTables(){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getCoreTables(sheetId).filter(isStaticTable);}
get displaySelectionHandler(){return this.env.isMobile()&&this.composerFocusStore.activeComposer.editionMode==="inactive";}}
const supportedPivotPositionalFormulaRegistry=new Registry();supportedPivotPositionalFormulaRegistry.add("SPREADSHEET",false);class FullScreenChart extends Component{static template="o-spreadsheet-FullScreenChart";static props={};static components={ChartDashboardMenu};fullScreenChartStore;ref=useRef("fullScreenChart");spreadsheetRect=useSpreadsheetRect();figureRegistry=figureRegistry;setup(){this.fullScreenChartStore=useStore(FullScreenChartStore);const animationStore=useStore(ChartAnimationStore);let lastFigureId=undefined;onWillUpdateProps(()=>{if(lastFigureId!==this.figureUI?.id){animationStore.enableAnimationForChart(this.figureUI?.id+"-fullscreen");}
lastFigureId=this.figureUI?.id;});useEffect((el)=>el?.focus(),()=>[this.ref.el]);}
get figureUI(){return this.fullScreenChartStore.fullScreenFigure;}
exitFullScreen(){if(this.figureUI){this.fullScreenChartStore.toggleFullScreenChart(this.figureUI.id);}}
onKeyDown(ev){if(ev.key==="Escape"){this.exitFullScreen();}}
get chartComponent(){if(!this.figureUI)
return undefined;const type=this.env.model.getters.getChartType(this.figureUI.id);const component=chartComponentRegistry.get(type);if(!component){throw new Error(`Component is not defined for type ${type}`);}
return component;}}
css`
  .o_pivot_html_renderer {
    width: 100%;
    border-collapse: collapse;

    &:hover {
      cursor: pointer;
    }

    td,
    th {
      border: 1px solid #dee2e6;
      background-color: #fff;
      padding: 0.3rem;
      white-space: nowrap;

      &:hover {
        filter: brightness(0.9);
      }
    }

    td {
      text-align: right;
    }

    th {
      background-color: #f5f5f5;
      font-weight: bold;
      color: black;
    }

    .o_missing_value {
      color: #46646d;
      background: #e7f2f6;
    }
  }
`;class PivotHTMLRenderer extends Component{static template="o_spreadsheet.PivotHTMLRenderer";static components={Checkbox};static props={pivotId:String,onCellClicked:Function,};pivot=this.env.model.getters.getPivot(this.props.pivotId);data={columns:[],rows:[],values:[],};state=useState({showMissingValuesOnly:false,});setup(){const table=this.pivot.getExpandedTableStructure();const formulaId=this.env.model.getters.getPivotFormulaId(this.props.pivotId);this.data={columns:this._buildColHeaders(formulaId,table),rows:this._buildRowHeaders(formulaId,table),values:this._buildValues(formulaId,table),};}
get tracker(){return this.env.model.getters.getPivotPresenceTracker(this.props.pivotId);}
getTableData(){if(!this.state.showMissingValuesOnly){return this.data;}
const colIndexes=this.getColumnsIndexes();const rowIndexes=this.getRowsIndexes();const columns=this.buildColumnsMissing(colIndexes);const rows=this.buildRowsMissing(rowIndexes);const values=this.buildValuesMissing(colIndexes,rowIndexes);return{columns,rows,values};}
addRecursiveRow(index){const rows=this.pivot.getExpandedTableStructure().rows;const row=[...rows[index].values];if(row.length<=1){return[index];}
row.pop();const parentRowIndex=rows.findIndex((r)=>JSON.stringify(r.values)===JSON.stringify(row));return[index].concat(this.addRecursiveRow(parentRowIndex));}
buildColumnsMissing(indexes){const columnsMap=[];for(const column of this.data.columns){const columnMap=[];for(const index in column){for(let i=0;i<column[index].span;i++){columnMap.push(parseInt(index,10));}}
columnsMap.push(columnMap);}
for(let i=columnsMap[columnsMap.length-1].length;i>=0;i--){if(!indexes.includes(i)){for(const columnMap of columnsMap){columnMap.splice(i,1);}}}
const columns=[];for(const mapIndex in columnsMap){const column=[];let index=undefined;let span=1;for(let i=0;i<columnsMap[mapIndex].length;i++){if(index!==columnsMap[mapIndex][i]){if(index!==undefined){column.push(Object.assign({},this.data.columns[mapIndex][index],{span}));}
index=columnsMap[mapIndex][i];span=1;}
else{span++;}}
if(index!==undefined){column.push(Object.assign({},this.data.columns[mapIndex][index],{span}));}
columns.push(column);}
return columns;}
buildRowsMissing(indexes){return indexes.map((index)=>this.data.rows[index]);}
buildValuesMissing(colIndexes,rowIndexes){const values=colIndexes.map(()=>[]);for(const row of rowIndexes){for(const col in colIndexes){values[col].push(this.data.values[colIndexes[col]][row]);}}
return values;}
getColumnsIndexes(){const indexes=new Set();for(let i=0;i<this.data.columns.length;i++){const exploded=[];for(let y=0;y<this.data.columns[i].length;y++){for(let x=0;x<this.data.columns[i][y].span;x++){exploded.push(this.data.columns[i][y]);}}
for(let y=0;y<exploded.length;y++){if(exploded[y].isMissing){indexes.add(y);}}}
for(let i=0;i<this.data.columns[this.data.columns.length-1].length;i++){const values=this.data.values[i];if(values.find((x)=>x.isMissing)){indexes.add(i);}}
return Array.from(indexes).sort((a,b)=>a-b);}
getRowsIndexes(){const rowIndexes=new Set();for(let i=0;i<this.data.rows.length;i++){if(this.data.rows[i].isMissing){rowIndexes.add(i);}
for(const col of this.data.values){if(col[i].isMissing){this.addRecursiveRow(i).forEach((x)=>rowIndexes.add(x));}}}
return Array.from(rowIndexes).sort((a,b)=>a-b);}
_buildColHeaders(id,table){const headers=[];for(const row of table.columns){const current=[];for(const cell of row){const args=[];for(let i=0;i<cell.fields.length;i++){args.push({value:cell.fields[i]},{value:cell.values[i]});}
const domain=this.pivot.parseArgsToPivotDomain(args);const locale=this.env.model.getters.getLocale();if(domain.at(-1)?.field==="measure"){const{value,format}=this.pivot.getPivotMeasureValue(toString(domain.at(-1).value),domain);current.push({formula:`=PIVOT.HEADER(${generatePivotArgs(id, domain).join(",")})`,value:formatValue(value,{format,locale}),span:cell.width,isMissing:!this.tracker?.isHeaderPresent(domain),});}
else{const{value,format}=this.pivot.getPivotHeaderValueAndFormat(domain);current.push({formula:`=PIVOT.HEADER(${generatePivotArgs(id, domain).join(",")})`,value:formatValue(value,{format,locale}),span:cell.width,isMissing:!this.tracker?.isHeaderPresent(domain),});}}
headers.push(current);}
const last=headers[headers.length-1];headers[headers.length-1]=last.map((cell)=>{if(!cell.isMissing){cell.style="color: #756f6f;";}
return cell;});return headers;}
_buildRowHeaders(id,table){const headers=[];for(const row of table.rows){const args=[];for(let i=0;i<row.fields.length;i++){args.push({value:row.fields[i]},{value:row.values[i]});}
const domain=this.pivot.parseArgsToPivotDomain(args);const{value,format}=this.pivot.getPivotHeaderValueAndFormat(domain);const locale=this.env.model.getters.getLocale();const cell={formula:`=PIVOT.HEADER(${generatePivotArgs(id, domain).join(",")})`,value:formatValue(value,{format,locale}),isMissing:!this.tracker?.isHeaderPresent(domain),};if(row.indent>1){cell.style=`padding-left: ${row.indent - 1 * 10}px`;}
headers.push(cell);}
return headers;}
_buildValues(id,table){const values=[];for(const col of table.columns.at(-1)||[]){const current=[];const measure=toString(col.values[col.values.length-1]);for(const row of table.rows){const args=[];for(let i=0;i<row.fields.length;i++){args.push({value:row.fields[i]},{value:row.values[i]});}
for(let i=0;i<col.fields.length-1;i++){args.push({value:col.fields[i]},{value:col.values[i]});}
const domain=this.pivot.parseArgsToPivotDomain(args);const{value,format}=this.pivot.getPivotCellValueAndFormat(measure,domain);const locale=this.env.model.getters.getLocale();current.push({formula:`=PIVOT.VALUE(${generatePivotArgs(id, domain, measure).join(",")})`,value:formatValue(value,{format,locale}),isMissing:!this.tracker?.isValuePresent(measure,domain),});}
values.push(current);}
return values;}}
class BasePlugin{static getters=[];history;constructor(stateObserver){this.history=Object.assign(Object.create(stateObserver),{update:stateObserver.addChange.bind(stateObserver,this),selectCell:()=>{},});}
exportForExcel(data){}
allowDispatch(command){return"Success";}
beforeHandle(command){}
handle(command){}
finalize(){}
batchValidations(...validations){return(toValidate)=>validations.map((validation)=>validation.call(this,toValidate)).flat();}
chainValidations(...validations){return(toValidate)=>{for(const validation of validations){let results=validation.call(this,toValidate);if(!Array.isArray(results)){results=[results];}
const cancelledReasons=results.filter((result)=>result!=="Success");if(cancelledReasons.length){return cancelledReasons;}}
return"Success";};}
checkValidations(command,...validations){return this.batchValidations(...validations)(command);}}
class CorePlugin extends BasePlugin{getters;dispatch;canDispatch;constructor({getters,stateObserver,range,dispatch,canDispatch}){super(stateObserver);range.addRangeProvider(this.adaptRanges.bind(this));this.getters=getters;this.dispatch=dispatch;this.canDispatch=canDispatch;}
import(data){}
export(data){}
adaptRanges(applyChange,sheetId,sheetName){}
garbageCollectExternalResources(){}}
class BordersPlugin extends CorePlugin{static getters=["getCellBorder","getBordersColors"];borders={};allowDispatch(cmd){switch(cmd.type){case"SET_BORDER":return this.checkBordersUnchanged(cmd);default:return"Success";}}
handle(cmd){switch(cmd.type){case"ADD_MERGE":for(const zone of cmd.target){this.addBordersToMerge(cmd.sheetId,zone);}
break;case"DUPLICATE_SHEET":const borders=this.borders[cmd.sheetId];if(borders){const bordersCopy=borders.slice().map((col)=>col?.slice().map((border)=>deepCopy(border)));this.history.update("borders",cmd.sheetIdTo,bordersCopy);}
break;case"DELETE_SHEET":const allBorders={...this.borders};delete allBorders[cmd.sheetId];this.history.update("borders",allBorders);break;case"SET_BORDER":this.setBorder(cmd.sheetId,cmd.col,cmd.row,cmd.border);break;case"SET_BORDERS_ON_TARGET":for(const zone of cmd.target){for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){this.setBorder(cmd.sheetId,col,row,cmd.border);}}}
break;case"SET_ZONE_BORDERS":if(cmd.border){const target=cmd.target.map((zone)=>this.getters.expandZone(cmd.sheetId,zone));this.setBorders(cmd.sheetId,target,cmd.border.position,cmd.border.color===""?undefined:{style:cmd.border.style||DEFAULT_BORDER_DESC.style,color:cmd.border.color||DEFAULT_BORDER_DESC.color,});}
break;case"CLEAR_FORMATTING":this.clearBorders(cmd.sheetId,cmd.target);break;case"REMOVE_COLUMNS_ROWS":const elements=[...cmd.elements].sort((a,b)=>b-a);for(const group of groupConsecutive(elements)){if(cmd.dimension==="COL"){const zone=this.getters.getColsZone(cmd.sheetId,group[group.length-1],group[0]);this.clearInsideBorders(cmd.sheetId,[zone]);this.shiftBordersHorizontally(cmd.sheetId,group[0]+1,-group.length);}
else{const zone=this.getters.getRowsZone(cmd.sheetId,group[group.length-1],group[0]);this.clearInsideBorders(cmd.sheetId,[zone]);this.shiftBordersVertically(cmd.sheetId,group[0]+1,-group.length);}}
break;case"ADD_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.handleAddColumns(cmd);}
else{this.handleAddRows(cmd);}
break;}}
handleAddColumns(cmd){let colLeftOfInsertion;let colRightOfInsertion;if(cmd.position==="before"){this.shiftBordersHorizontally(cmd.sheetId,cmd.base,cmd.quantity);colLeftOfInsertion=cmd.base-1;colRightOfInsertion=cmd.base+cmd.quantity;}
else{this.shiftBordersHorizontally(cmd.sheetId,cmd.base+1,cmd.quantity);colLeftOfInsertion=cmd.base;colRightOfInsertion=cmd.base+cmd.quantity+1;}
this.ensureColumnBorderContinuity(cmd.sheetId,colLeftOfInsertion,colRightOfInsertion);}
handleAddRows(cmd){let rowAboveInsertion;let rowBelowInsertion;if(cmd.position==="before"){this.shiftBordersVertically(cmd.sheetId,cmd.base,cmd.quantity);rowAboveInsertion=cmd.base-1;rowBelowInsertion=cmd.base+cmd.quantity;}
else{this.shiftBordersVertically(cmd.sheetId,cmd.base+1,cmd.quantity);rowAboveInsertion=cmd.base;rowBelowInsertion=cmd.base+cmd.quantity+1;}
this.ensureRowBorderContinuity(cmd.sheetId,rowAboveInsertion,rowBelowInsertion);}
getCellBorder({sheetId,col,row}){const border=this.borders[sheetId]?.[col]?.[row];return border?.top||border?.bottom||border?.left||border?.right?deepCopy(border):null;}
getBordersColors(sheetId){const colors=[];const sheetBorders=this.borders[sheetId];if(sheetBorders){for(const borders of sheetBorders.filter(isDefined)){for(const cellBorder of borders){if(cellBorder){for(const direction of["top","bottom","left","right"]){const color=cellBorder[direction]?.color;if(color){colors.push(color);}}}}}}
return colors;}
ensureColumnBorderContinuity(sheetId,leftColumn,rightColumn){const targetCols=range(leftColumn+1,rightColumn);for(let row=0;row<this.getters.getNumberRows(sheetId);row++){const leftBorder=this.getCellBorder({sheetId,col:leftColumn,row});const rightBorder=this.getCellBorder({sheetId,col:rightColumn,row});if(leftBorder&&rightBorder){const commonSides=this.getCommonSides(leftBorder,rightBorder);for(const col of targetCols){this.addBorder(sheetId,col,row,commonSides);}}}}
ensureRowBorderContinuity(sheetId,topRow,bottomRow){const targetRows=range(topRow+1,bottomRow);for(let col=0;col<this.getters.getNumberCols(sheetId);col++){const aboveBorder=this.getCellBorder({sheetId,col,row:topRow});const belowBorder=this.getCellBorder({sheetId,col,row:bottomRow});if(aboveBorder&&belowBorder){const commonSides=this.getCommonSides(aboveBorder,belowBorder);for(const row of targetRows){this.addBorder(sheetId,col,row,commonSides);}}}}
getCommonSides(border1,border2){const commonBorder={};for(const side of["top","bottom","left","right"]){if(border1[side]&&deepEquals(border1[side],border2[side])){commonBorder[side]=border1[side];}}
return commonBorder;}
getColumnsWithBorders(sheetId){const sheetBorders=this.borders[sheetId];if(!sheetBorders)
return[];return Object.keys(sheetBorders).map((index)=>parseInt(index,10));}
getRowsWithBorders(sheetId){const sheetBorders=this.borders[sheetId]?.filter(isDefined);if(!sheetBorders)
return[];const rowsWithBorders=new Set();for(const rowBorders of sheetBorders){for(const rowBorder in rowBorders){rowsWithBorders.add(parseInt(rowBorder,10));}}
return Array.from(rowsWithBorders);}
getRowsRange(sheetId){const sheetBorders=this.borders[sheetId];if(!sheetBorders)
return[];return range(0,this.getters.getNumberRows(sheetId)+1);}
shiftBordersHorizontally(sheetId,start,delta){const borders=this.borders[sheetId];if(!borders)
return;this.getColumnsWithBorders(sheetId).filter((col)=>col>=start).sort((a,b)=>(delta<0?a-b:b-a)).forEach((col)=>{this.moveBordersOfColumn(sheetId,col,delta);});}
shiftBordersVertically(sheetId,start,delta){const borders=this.borders[sheetId];if(!borders)
return;if(delta<0){this.moveBordersOfRow(sheetId,start,delta,{destructive:false,});}
this.getRowsWithBorders(sheetId).filter((row)=>row>=start).sort((a,b)=>(delta<0?a-b:b-a)).forEach((row)=>{this.moveBordersOfRow(sheetId,row,delta);});}
moveBordersOfRow(sheetId,row,delta,{destructive}={destructive:true}){const borders=this.borders[sheetId];if(!borders)
return;this.getColumnsWithBorders(sheetId).forEach((col)=>{const targetBorder=borders[col]?.[row+delta];const movedBorder=borders[col]?.[row];this.history.update("borders",sheetId,col,row+delta,destructive?movedBorder:movedBorder||targetBorder);this.history.update("borders",sheetId,col,row,undefined);});}
moveBordersOfColumn(sheetId,col,delta,{destructive}={destructive:true}){const borders=this.borders[sheetId];if(!borders)
return;this.getRowsRange(sheetId).forEach((row)=>{const targetBorder=borders[col+delta]?.[row];const movedBorder=borders[col]?.[row];this.history.update("borders",sheetId,col+delta,row,destructive?movedBorder:movedBorder||targetBorder);if(destructive){this.history.update("borders",sheetId,col,row,undefined);}});}
setBorder(sheetId,col,row,border,override=true){const maxCol=this.getters.getNumberCols(sheetId)-1;const maxRow=this.getters.getNumberRows(sheetId)-1;if(override||!this.borders[sheetId]?.[col]?.[row]?.left){this.history.update("borders",sheetId,col,row,"left",border?.left);if(border?.left&&col>0&&!deepEquals(this.borders[sheetId]?.[col-1]?.[row]?.right,border?.left)){this.history.update("borders",sheetId,col-1,row,"right",undefined);}}
if(override||!this.borders[sheetId]?.[col]?.[row]?.top){this.history.update("borders",sheetId,col,row,"top",border?.top);if(border?.top&&row>0&&!deepEquals(this.borders[sheetId]?.[col]?.[row-1]?.bottom,border?.top)){this.history.update("borders",sheetId,col,row-1,"bottom",undefined);}}
if(override||!this.borders[sheetId]?.[col]?.[row]?.right){this.history.update("borders",sheetId,col,row,"right",border?.right);if(border?.right&&col<maxCol&&!deepEquals(this.borders[sheetId]?.[col+1]?.[row]?.left,border?.right)){this.history.update("borders",sheetId,col+1,row,"left",undefined);}}
if(override||!this.borders[sheetId]?.[col]?.[row]?.bottom){this.history.update("borders",sheetId,col,row,"bottom",border?.bottom);if(border?.bottom&&row<maxRow&&!deepEquals(this.borders[sheetId]?.[col]?.[row+1]?.top,border?.bottom)){this.history.update("borders",sheetId,col,row+1,"top",undefined);}}}
clearBorders(sheetId,zones,eraseBoundaries=false){const maxCol=this.getters.getNumberCols(sheetId)-1;const maxRow=this.getters.getNumberRows(sheetId)-1;for(const zone of recomputeZones(zones)){for(let row=zone.top;row<=zone.bottom;row++){if(eraseBoundaries){if(zone.left>0){this.history.update("borders",sheetId,zone.left-1,row,"right",undefined);}
if(zone.right<maxCol){this.history.update("borders",sheetId,zone.right+1,row,"left",undefined);}}
for(let col=zone.left;col<=zone.right;col++){this.history.update("borders",sheetId,col,row,undefined);if(eraseBoundaries){if(zone.top>0){this.history.update("borders",sheetId,col,zone.top-1,"bottom",undefined);}
if(zone.bottom<maxRow){this.history.update("borders",sheetId,col,zone.bottom+1,"top",undefined);}}}}}}
clearInsideBorders(sheetId,zones){for(const zone of zones){for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){this.history.update("borders",sheetId,col,row,undefined);}}}}
addBorder(sheetId,col,row,border){this.setBorder(sheetId,col,row,{...this.getCellBorder({sheetId,col,row}),...border,});}
setBorders(sheetId,zones,position,border){if(position==="clear"){return this.clearBorders(sheetId,zones,true);}
for(const zone of recomputeZones(zones)){if(position==="all"){for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){this.addBorder(sheetId,col,row,{top:border,right:border,bottom:border,left:border,});}}}
if(position==="h"||position==="hv"){if(zone.top===zone.bottom){continue;}
for(let col=zone.left;col<=zone.right;col++){this.addBorder(sheetId,col,zone.top,{bottom:border});for(let row=zone.top+1;row<zone.bottom;row++){this.addBorder(sheetId,col,row,{top:border,bottom:border});}
this.addBorder(sheetId,col,zone.bottom,{top:border});}}
if(position==="v"||position==="hv"){if(zone.left===zone.right){continue;}
for(let row=zone.top;row<=zone.bottom;row++){this.addBorder(sheetId,zone.left,row,{right:border});for(let col=zone.left+1;col<zone.right;col++){this.addBorder(sheetId,col,row,{left:border,right:border});}
this.addBorder(sheetId,zone.right,row,{left:border});}}
if(position==="left"||position==="external"){for(let row=zone.top;row<=zone.bottom;row++){this.addBorder(sheetId,zone.left,row,{left:border});}}
if(position==="right"||position==="external"){for(let row=zone.top;row<=zone.bottom;row++){this.addBorder(sheetId,zone.right,row,{right:border});}}
if(position==="top"||position==="external"){for(let col=zone.left;col<=zone.right;col++){this.addBorder(sheetId,col,zone.top,{top:border});}}
if(position==="bottom"||position==="external"){for(let col=zone.left;col<=zone.right;col++){this.addBorder(sheetId,col,zone.bottom,{bottom:border});}}}}
addBordersToMerge(sheetId,zone){const{left,right,top,bottom}=zone;const bordersTopLeft=this.getCellBorder({sheetId,col:left,row:top});const bordersBottomRight=this.getCellBorder({sheetId,col:right,row:bottom});this.clearBorders(sheetId,[zone]);if(bordersTopLeft?.top){this.setBorders(sheetId,[{...zone,bottom:top}],"top",bordersTopLeft.top);}
if(bordersTopLeft?.left){this.setBorders(sheetId,[{...zone,right:left}],"left",bordersTopLeft.left);}
if(bordersBottomRight?.bottom){this.setBorders(sheetId,[{...zone,top:bottom}],"bottom",bordersBottomRight.bottom);}
else if(bordersTopLeft?.bottom){this.setBorders(sheetId,[{...zone,top:bottom}],"bottom",bordersTopLeft.bottom);}
if(bordersBottomRight?.right){this.setBorders(sheetId,[{...zone,left:right}],"right",bordersBottomRight.right);}
else if(bordersTopLeft?.right){this.setBorders(sheetId,[{...zone,left:right}],"right",bordersTopLeft.right);}}
checkBordersUnchanged(cmd){const currentBorder=this.getCellBorder(cmd);const areAllNewBordersUndefined=!cmd.border?.bottom&&!cmd.border?.left&&!cmd.border?.right&&!cmd.border?.top;if((!currentBorder&&areAllNewBordersUndefined)||deepEquals(currentBorder,cmd.border)){return"NoChanges";}
return"Success";}
import(data){if(Object.keys(data.borders||{}).length){for(const sheet of data.sheets){for(const[position,borderId]of iterateItemIdsPositions(sheet.id,sheet.borders)){const{sheetId,col,row}=position;const border=data.borders[borderId];this.setBorder(sheetId,col,row,border,false);}}}
for(const sheetData of data.sheets){if(sheetData.merges){for(const merge of sheetData.merges){this.addBordersToMerge(sheetData.id,toZone(merge));}}}}
export(data){const borders={};for(const sheet of data.sheets){const positionsByBorder={};for(let col=0;col<sheet.colNumber;col++){for(let row=0;row<sheet.rowNumber;row++){const border=this.getCellBorder({sheetId:sheet.id,col,row});if(border){const borderId=getItemId(border,borders);const position={sheetId:sheet.id,col,row};positionsByBorder[borderId]??=[];positionsByBorder[borderId].push(position);}}}
sheet.borders=groupItemIdsByZones(positionsByBorder);}
data.borders=borders;}
exportForExcel(data){this.export(data);}}
class CellPlugin extends CorePlugin{static getters=["zoneToXC","getCells","getTranslatedCellFormula","getCellStyle","getCellById","getFormulaString","getFormulaMovedInSheet",];nextId=1;cells={};adaptRanges(applyChange,sheetId,sheetName){for(const sheet of Object.keys(this.cells)){for(const cell of Object.values(this.cells[sheet]||{})){if(cell.isFormula){for(const range of cell.compiledFormula.dependencies){if(!sheetId||range.sheetId===sheetId||(sheetName&&range.invalidSheetName===sheetName)){const change=applyChange(range);if(change.changeType!=="NONE"){this.history.update("cells",sheet,cell.id,"compiledFormula","dependencies",cell.compiledFormula.dependencies.indexOf(range),change.range);}}}}}}}
allowDispatch(cmd){switch(cmd.type){case"UPDATE_CELL":return this.checkValidations(cmd,this.checkCellOutOfSheet,this.checkUselessUpdateCell);case"CLEAR_CELL":return this.checkValidations(cmd,this.checkCellOutOfSheet,this.checkUselessClearCell);case"UPDATE_CELL_POSITION":return!cmd.cellId||this.cells[cmd.sheetId]?.[cmd.cellId]?"Success":"InvalidCellId";default:return"Success";}}
handle(cmd){switch(cmd.type){case"SET_FORMATTING":if("style"in cmd){this.setStyle(cmd.sheetId,cmd.target,cmd.style);}
if("format"in cmd&&cmd.format!==undefined){this.setFormatter(cmd.sheetId,cmd.target,cmd.format);}
break;case"CLEAR_FORMATTING":this.clearFormatting(cmd.sheetId,cmd.target);break;case"ADD_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.handleAddColumnsRows(cmd,this.copyColumnStyle.bind(this));}
else{this.handleAddColumnsRows(cmd,this.copyRowStyle.bind(this));}
break;case"UPDATE_CELL":this.updateCell(cmd.sheetId,cmd.col,cmd.row,cmd);break;case"CLEAR_CELL":this.dispatch("UPDATE_CELL",{sheetId:cmd.sheetId,col:cmd.col,row:cmd.row,content:"",style:null,format:"",});break;case"CLEAR_CELLS":this.clearCells(cmd.sheetId,cmd.target);break;case"DELETE_CONTENT":this.clearZones(cmd.sheetId,cmd.target);break;case"DELETE_SHEET":{this.history.update("cells",cmd.sheetId,undefined);}}}
clearZones(sheetId,zones){for(const zone of recomputeZones(zones)){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const cell=this.getters.getCell({sheetId,col,row});if(cell?.isFormula||cell?.content){this.dispatch("UPDATE_CELL",{sheetId:sheetId,content:"",col,row,});}}}}}
setFormatter(sheetId,zones,format){for(const zone of recomputeZones(zones)){for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){this.dispatch("UPDATE_CELL",{sheetId,col,row,format,});}}}}
clearFormatting(sheetId,zones){for(const zone of recomputeZones(zones)){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){this.dispatch("UPDATE_CELL",{sheetId,col,row,style:null,format:"",});}}}}
clearCells(sheetId,zones){for(const zone of zones){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){this.dispatch("UPDATE_CELL",{sheetId:sheetId,col,row,content:"",style:null,format:"",});}}}}
handleAddColumnsRows(cmd,fn){let insertedElements;let styleReference;if(cmd.position==="before"){insertedElements=range(cmd.base,cmd.base+cmd.quantity);styleReference=cmd.base+cmd.quantity;}
else{insertedElements=range(cmd.base+1,cmd.base+cmd.quantity+1);styleReference=cmd.base;}
fn(cmd.sheetId,styleReference,insertedElements);}
import(data){for(const sheet of data.sheets){const sheetId=sheet.id;const cellsData=new PositionMap();for(const xc in sheet.cells){if(sheet.cells[xc]){const{col,row}=toCartesian(xc);const position={sheetId:sheet.id,col,row};cellsData.set(position,{content:sheet.cells[xc]});}}
for(const[cellProperty,valuesByZones]of[["style",sheet.styles],["format",sheet.formats],]){for(const[position,itemId]of iterateItemIdsPositions(sheet.id,valuesByZones)){const cellData=cellsData.get(position);if(cellData){cellData[cellProperty]=itemId;}
else{cellsData.set(position,{[cellProperty]:itemId});}}}
for(const position of cellsData.keysForSheet(sheetId)){const cellData=cellsData.get(position);if(cellData?.content||cellData?.format||cellData?.style){const cell=this.importCell(sheet.id,cellData?.content,cellData?.style?data.styles[cellData?.style]:undefined,cellData?.format?data.formats[cellData?.format]:undefined);this.history.update("cells",sheet.id,cell.id,cell);this.dispatch("UPDATE_CELL_POSITION",{cellId:cell.id,...position,});}}}}
export(data){const styles={};const formats={};for(const _sheet of data.sheets){const positionsByStyle=[];const positionsByFormat=[];const cells={};const positions=Object.keys(this.cells[_sheet.id]||{}).map((cellId)=>this.getters.getCellPosition(cellId)).sort((a,b)=>(a.col===b.col?a.row-b.row:a.col-b.col));for(const position of positions){const cell=this.getters.getCell(position);const xc=toXC(position.col,position.row);const style=this.removeDefaultStyleValues(cell.style);if(Object.keys(style).length){const styleId=getItemId(style,styles);positionsByStyle[styleId]??=[];positionsByStyle[styleId].push(position);}
if(cell.format){const formatId=getItemId(cell.format,formats);positionsByFormat[formatId]??=[];positionsByFormat[formatId].push(position);}
if(cell.content){cells[xc]=cell.content;}}
_sheet.styles=groupItemIdsByZones(positionsByStyle);_sheet.formats=groupItemIdsByZones(positionsByFormat);_sheet.cells=cells;}
data.styles=styles;data.formats=formats;}
importCell(sheetId,content,style,format){const cellId=this.getNextUid();return this.createCell(cellId,content||"",format,style,sheetId);}
exportForExcel(data){this.export(data);const incompatibleIds=[];for(const formatId in data.formats||[]){if(!isExcelCompatible(data.formats[formatId])){incompatibleIds.push(Number(formatId));delete data.formats[formatId];}}
if(incompatibleIds.length){for(const sheet of data.sheets){for(const zoneXc in sheet.formats){const formatId=sheet.formats[zoneXc];if(formatId&&incompatibleIds.includes(formatId)){delete sheet.formats[zoneXc];}}}}}
removeDefaultStyleValues(style){const cleanedStyle={...style};for(const property in DEFAULT_STYLE){if(cleanedStyle[property]===DEFAULT_STYLE[property]){delete cleanedStyle[property];}}
return cleanedStyle;}
getCells(sheetId){return this.cells[sheetId]||{};}
getCellById(cellId){const position=this.getters.getCellPosition(cellId);const sheet=this.cells[position.sheetId];return sheet[cellId];}
getFormulaString(sheetId,tokens,dependencies,useBoundedReference=false){if(!dependencies.length){return concat(tokens.map((token)=>token.value));}
let rangeIndex=0;return concat(tokens.map((token)=>{if(token.type==="REFERENCE"){const range=dependencies[rangeIndex++];return this.getters.getRangeString(range,sheetId,{useBoundedReference});}
return token.value;}));}
getTranslatedCellFormula(sheetId,offsetX,offsetY,tokens){const adaptedDependencies=this.getters.createAdaptedRanges(compileTokens(tokens).dependencies.map((d)=>this.getters.getRangeFromSheetXC(sheetId,d)),offsetX,offsetY,sheetId);return this.getFormulaString(sheetId,tokens,adaptedDependencies);}
getFormulaMovedInSheet(originSheetId,targetSheetId,tokens){const dependencies=compileTokens(tokens).dependencies.map((d)=>this.getters.getRangeFromSheetXC(originSheetId,d));const adaptedDependencies=this.getters.removeRangesSheetPrefix(targetSheetId,dependencies);return this.getFormulaString(targetSheetId,tokens,adaptedDependencies);}
getCellStyle(position){return this.getters.getCell(position)?.style||{};}
zoneToXC(sheetId,zone,fixedParts=[{colFixed:false,rowFixed:false}]){zone=this.getters.expandZone(sheetId,zone);const topLeft=toXC(zone.left,zone.top,fixedParts[0]);const botRight=toXC(zone.right,zone.bottom,fixedParts.length>1?fixedParts[1]:fixedParts[0]);const cellTopLeft=this.getters.getMainCellPosition({sheetId,col:zone.left,row:zone.top,});const cellBotRight=this.getters.getMainCellPosition({sheetId,col:zone.right,row:zone.bottom,});const sameCell=cellTopLeft.col===cellBotRight.col&&cellTopLeft.row===cellBotRight.row;if(topLeft!==botRight&&!sameCell){return topLeft+":"+botRight;}
return topLeft;}
setStyle(sheetId,target,style){for(const zone of recomputeZones(target)){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const cell=this.getters.getCell({sheetId,col,row});this.dispatch("UPDATE_CELL",{sheetId,col,row,style:style?{...cell?.style,...style}:undefined,});}}}}
copyColumnStyle(sheetId,refColumn,targetCols){for(let row=0;row<this.getters.getNumberRows(sheetId);row++){const format=this.getFormat(sheetId,refColumn,row);if(format.style||format.format){for(const col of targetCols){this.dispatch("UPDATE_CELL",{sheetId,col,row,...format});}}}}
copyRowStyle(sheetId,refRow,targetRows){for(let col=0;col<this.getters.getNumberCols(sheetId);col++){const format=this.getFormat(sheetId,col,refRow);if(format.style||format.format){for(const row of targetRows){this.dispatch("UPDATE_CELL",{sheetId,col,row,...format});}}}}
getFormat(sheetId,col,row){const format={};const position=this.getters.getMainCellPosition({sheetId,col,row});const cell=this.getters.getCell(position);if(cell){if(cell.style){format["style"]=cell.style;}
if(cell.format){format["format"]=cell.format;}}
return format;}
getNextUid(){const id=this.nextId.toString();this.history.update("nextId",this.nextId+1);return id;}
updateCell(sheetId,col,row,after){const before=this.getters.getCell({sheetId,col,row});const hasContent="content"in after||"formula"in after;const afterContent=hasContent?replaceNewLines(after?.content):before?.content||"";let style;if(after.style!==undefined){style=after.style||undefined;}
else{style=before?before.style:undefined;}
const format="format"in after?after.format:before&&before.format;if(((hasContent&&!afterContent&&!after.formula)||(!hasContent&&(!before||before.content==="")))&&!style&&!format){if(before){this.history.update("cells",sheetId,before.id,undefined);this.dispatch("UPDATE_CELL_POSITION",{cellId:undefined,col,row,sheetId,});}
return;}
const cellId=before?.id||this.getNextUid();const cell=this.createCell(cellId,afterContent,format,style,sheetId);this.history.update("cells",sheetId,cell.id,cell);this.dispatch("UPDATE_CELL_POSITION",{cellId:cell.id,col,row,sheetId});}
createCell(id,content,format,style,sheetId){if(!content.startsWith("=")){return this.createLiteralCell(id,content,format,style);}
return this.createFormulaCell(id,content,format,style,sheetId);}
createLiteralCell(id,content,format,style){const locale=this.getters.getLocale();const parsedValue=parseLiteral(content,locale);format=format||(typeof parsedValue==="number"?detectDateFormat(content,locale)||detectNumberFormat(content):undefined);if(!isTextFormat(format)&&!isEvaluationError(content)){content=toString(parsedValue);}
return{id,content,style,format,isFormula:false,parsedValue,};}
createFormulaCell(id,content,format,style,sheetId){const compiledFormula=compile(content);if(compiledFormula.dependencies.length){return this.createFormulaCellWithDependencies(id,compiledFormula,format,style,sheetId);}
return{id,content,style,format,isFormula:true,compiledFormula:{...compiledFormula,dependencies:[],},};}
createFormulaCellWithDependencies(id,compiledFormula,format,style,sheetId){const dependencies=[];for(const xc of compiledFormula.dependencies){dependencies.push(this.getters.getRangeFromSheetXC(sheetId,xc));}
return new FormulaCellWithDependencies(id,compiledFormula,format,style,dependencies,sheetId,this.getters.getRangeString);}
checkCellOutOfSheet(cmd){const{sheetId,col,row}=cmd;const sheet=this.getters.tryGetSheet(sheetId);if(!sheet)
return"InvalidSheetId";const sheetZone=this.getters.getSheetZone(sheetId);return isInside(col,row,sheetZone)?"Success":"TargetOutOfSheet";}
checkUselessClearCell(cmd){const cell=this.getters.getCell(cmd);if(!cell)
return"NoChanges";if(!cell.content&&!cell.style&&!cell.format){return"NoChanges";}
return"Success";}
checkUselessUpdateCell(cmd){const cell=this.getters.getCell(cmd);const hasContent="content"in cmd||"formula"in cmd;const hasStyle="style"in cmd;const hasFormat="format"in cmd;if((!hasContent||cell?.content===cmd.content)&&(!hasStyle||deepEquals(cell?.style,cmd.style))&&(!hasFormat||cell?.format===cmd.format)){return"NoChanges";}
return"Success";}}
class FormulaCellWithDependencies{id;format;style;sheetId;getRangeString;isFormula=true;compiledFormula;constructor(id,compiledFormula,format,style,dependencies,sheetId,getRangeString){this.id=id;this.format=format;this.style=style;this.sheetId=sheetId;this.getRangeString=getRangeString;let rangeIndex=0;const tokens=compiledFormula.tokens.map((token)=>{if(token.type==="REFERENCE"){const index=rangeIndex++;return new RangeReferenceToken(dependencies,index,this.sheetId,this.getRangeString);}
return token;});this.compiledFormula={...compiledFormula,dependencies,tokens,};}
get content(){return concat(this.compiledFormula.tokens.map((token)=>token.value));}
get contentWithFixedReferences(){let rangeIndex=0;return concat(this.compiledFormula.tokens.map((token)=>{if(token.type==="REFERENCE"){const index=rangeIndex++;return this.getRangeString(this.compiledFormula.dependencies[index],this.sheetId,{useBoundedReference:true,});}
return token.value;}));}}
class RangeReferenceToken{ranges;rangeIndex;sheetId;getRangeString;type="REFERENCE";constructor(ranges,rangeIndex,sheetId,getRangeString){this.ranges=ranges;this.rangeIndex=rangeIndex;this.sheetId=sheetId;this.getRangeString=getRangeString;}
get value(){const range=this.ranges[this.rangeIndex];return this.getRangeString(range,this.sheetId);}}
class ChartPlugin extends CorePlugin{static getters=["isChartDefined","getChartDefinition","getChartType","getChartIds","getChart","getContextCreationChart",];charts={};createChart=chartFactory(this.getters);validateChartDefinition=(cmd)=>validateChartDefinition(this,cmd.definition);adaptRanges(applyChange){for(const[chartId,chart]of Object.entries(this.charts)){this.history.update("charts",chartId,chart?.updateRanges(applyChange));}}
allowDispatch(cmd){switch(cmd.type){case"CREATE_CHART":return this.checkValidations(cmd,this.chainValidations(this.validateChartDefinition,this.checkChartDuplicate));case"UPDATE_CHART":return this.checkValidations(cmd,this.chainValidations(this.validateChartDefinition,this.checkChartExists,this.checkChartChanged));default:return"Success";}}
handle(cmd){switch(cmd.type){case"CREATE_CHART":this.addFigure(cmd.figureId,cmd.sheetId,cmd.col,cmd.row,cmd.offset,cmd.size);this.addChart(cmd.figureId,cmd.definition);break;case"UPDATE_CHART":{this.addChart(cmd.figureId,cmd.definition);break;}
case"DUPLICATE_SHEET":{const sheetFiguresFrom=this.getters.getFigures(cmd.sheetId);for(const fig of sheetFiguresFrom){if(fig.tag==="chart"){const figureIdBase=fig.id.split(FIGURE_ID_SPLITTER).pop();const duplicatedFigureId=`${cmd.sheetIdTo}${FIGURE_ID_SPLITTER}${figureIdBase}`;const chart=this.charts[fig.id]?.duplicateInDuplicatedSheet(cmd.sheetIdTo);if(chart){this.dispatch("CREATE_CHART",{figureId:duplicatedFigureId,col:fig.col,row:fig.row,offset:fig.offset,size:{width:fig.width,height:fig.height},definition:chart.getDefinition(),sheetId:cmd.sheetIdTo,});}}}
break;}
case"DELETE_FIGURE":this.history.update("charts",cmd.figureId,undefined);break;case"DELETE_SHEET":for(const id of this.getChartIds(cmd.sheetId)){this.history.update("charts",id,undefined);}
break;}}
getContextCreationChart(figureId){return this.charts[figureId]?.getContextCreation();}
getChart(figureId){return this.charts[figureId];}
getChartType(figureId){const type=this.charts[figureId]?.type;if(!type){throw new Error("Chart not defined.");}
return type;}
isChartDefined(figureId){return figureId in this.charts&&this.charts!==undefined;}
getChartIds(sheetId){return Object.entries(this.charts).filter(([,chart])=>chart?.sheetId===sheetId).map(([id])=>id);}
getChartDefinition(figureId){const definition=this.charts[figureId]?.getDefinition();if(!definition){throw new Error(`There is no chart with the given figureId: ${figureId}`);}
return definition;}
import(data){for(const sheet of data.sheets){if(sheet.figures){for(const figure of sheet.figures){if(figure.tag==="chart"){this.charts[figure.id]=this.createChart(figure.id,figure.data,sheet.id);}}}}}
export(data){if(data.sheets){for(const sheet of data.sheets){const sheetFigures=this.getters.getFigures(sheet.id);const figures=[];for(const sheetFigure of sheetFigures){const figure=sheetFigure;if(figure&&figure.tag==="chart"){const data=this.charts[figure.id]?.getDefinition();if(data){figure.data=data;figures.push(figure);}}
else{figures.push(figure);}}
sheet.figures=figures;}}}
addFigure(figureId,sheetId,col,row,offset,size={width:DEFAULT_FIGURE_WIDTH,height:DEFAULT_FIGURE_HEIGHT,}){this.dispatch("CREATE_FIGURE",{sheetId,figureId,col,row,offset,size,tag:"chart",});}
addChart(id,definition){const sheetId=this.getters.getFigureSheetId(id);if(sheetId){this.history.update("charts",id,this.createChart(id,definition,sheetId));}}
checkChartDuplicate(cmd){return this.getters.getFigureSheetId(cmd.figureId)?"DuplicatedChartId":"Success";}
checkChartExists(cmd){return this.isChartDefined(cmd.figureId)?"Success":"ChartDoesNotExist";}
checkChartChanged(cmd){return deepEquals(this.getChartDefinition(cmd.figureId),cmd.definition)?"NoChanges":"Success";}}
function stringToNumber(value){return value===""?NaN:Number(value);}
class ConditionalFormatPlugin extends CorePlugin{static getters=["getConditionalFormats","getRulesSelection","getRulesByCell","getAdaptedCfRanges",];cfRules={};adaptCFFormulas(applyChange){for(const sheetId in this.cfRules){for(const rule of this.cfRules[sheetId]){if(rule.rule.type==="DataBarRule"&&rule.rule.rangeValues){const change=applyChange(rule.rule.rangeValues);switch(change.changeType){case"REMOVE":this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"rule","rangeValues",undefined);break;case"RESIZE":case"MOVE":case"CHANGE":this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"rule","rangeValues",change.range);break;}}
else if(rule.rule.type==="CellIsRule"){for(let i=0;i<rule.rule.values.length;i++){this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"rule","values",i,this.getters.adaptFormulaStringDependencies(sheetId,rule.rule.values[i],applyChange));}}
else if(rule.rule.type==="IconSetRule"){for(const inflectionPoint of["lowerInflectionPoint","upperInflectionPoint"]){if(rule.rule[inflectionPoint].type==="formula"){this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"rule",inflectionPoint,"value",this.getters.adaptFormulaStringDependencies(sheetId,rule.rule[inflectionPoint].value,applyChange));}}}
else if(rule.rule.type==="ColorScaleRule"){for(const value of["minimum","maximum","midpoint"]){const ruleValue=rule.rule[value];if(ruleValue?.type==="formula"&&ruleValue?.value){this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"rule",value,"value",this.getters.adaptFormulaStringDependencies(sheetId,ruleValue.value,applyChange));}}}}}}
adaptCFRanges(sheetId,applyChange){for(const rule of this.cfRules[sheetId]){for(const range of rule.ranges){const change=applyChange(range);switch(change.changeType){case"REMOVE":const copy=rule.ranges.slice();copy.splice(rule.ranges.indexOf(range),1);if(copy.length>=1){this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"ranges",copy);}
else{this.removeConditionalFormatting(rule.id,sheetId);}
break;case"RESIZE":case"MOVE":case"CHANGE":this.history.update("cfRules",sheetId,this.cfRules[sheetId].indexOf(rule),"ranges",rule.ranges.indexOf(range),change.range);break;}}}}
adaptRanges(applyChange,sheetId,sheetName){const sheetIds=sheetId?[sheetId]:Object.keys(this.cfRules);for(const sheetId of sheetIds){this.adaptCFRanges(sheetId,applyChange);}
this.adaptCFFormulas(applyChange);}
allowDispatch(cmd){switch(cmd.type){case"ADD_CONDITIONAL_FORMAT":if(cmd.ranges.some((rangeData)=>!this.getters.tryGetSheet(rangeData._sheetId))){return"InvalidSheetId";}
return this.checkValidations(cmd,this.checkCFRule,this.checkEmptyRange,this.checkCFHasChanged);case"CHANGE_CONDITIONAL_FORMAT_PRIORITY":return this.checkValidPriorityChange(cmd.cfId,cmd.delta,cmd.sheetId);}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.cfRules[cmd.sheetId]=[];break;case"DUPLICATE_SHEET":this.history.update("cfRules",cmd.sheetIdTo,[]);for(const cf of this.getConditionalFormats(cmd.sheetId)){this.addConditionalFormatting(cf,cmd.sheetIdTo);}
break;case"DELETE_SHEET":const cfRules=Object.assign({},this.cfRules);delete cfRules[cmd.sheetId];this.history.update("cfRules",cfRules);break;case"ADD_CONDITIONAL_FORMAT":const cf={...cmd.cf,ranges:cmd.ranges.map((rangeData)=>this.getters.getRangeString(this.getters.getRangeFromRangeData(rangeData),cmd.sheetId)),};this.addConditionalFormatting(cf,cmd.sheetId);break;case"REMOVE_CONDITIONAL_FORMAT":this.removeConditionalFormatting(cmd.id,cmd.sheetId);break;case"CHANGE_CONDITIONAL_FORMAT_PRIORITY":this.changeCFPriority(cmd.cfId,cmd.delta,cmd.sheetId);break;}}
import(data){for(const sheet of data.sheets){this.cfRules[sheet.id]=sheet.conditionalFormats.map((rule)=>this.mapToConditionalFormatInternal(sheet.id,rule));}}
export(data){if(data.sheets){for(const sheet of data.sheets){if(this.cfRules[sheet.id]){sheet.conditionalFormats=this.cfRules[sheet.id].map((rule)=>this.mapToConditionalFormat(sheet.id,rule));}}}}
exportForExcel(data){if(data.sheets){for(const sheet of data.sheets){if(this.cfRules[sheet.id]){sheet.conditionalFormats=this.cfRules[sheet.id].map((rule)=>this.mapToConditionalFormat(sheet.id,rule,{useBoundedReference:true}));}}}}
getConditionalFormats(sheetId){return this.cfRules[sheetId]?.map((cf)=>this.mapToConditionalFormat(sheetId,cf))||[];}
getRulesSelection(sheetId,selection){const ruleIds=new Set();selection.forEach((zone)=>{const zoneRuleId=this.getRulesByZone(sheetId,zone);zoneRuleId.forEach((ruleId)=>{ruleIds.add(ruleId);});});return Array.from(ruleIds);}
getRulesByZone(sheetId,zone){const ruleIds=new Set();for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const cellRules=this.getRulesByCell(sheetId,col,row);cellRules.forEach((rule)=>{ruleIds.add(rule.id);});}}
return ruleIds;}
getRulesByCell(sheetId,cellCol,cellRow){const rules=[];for(const cf of this.cfRules[sheetId]){for(const range of cf.ranges){if(isInside(cellCol,cellRow,range.zone)){rules.push(cf);}}}
return new Set(rules.map((rule)=>{return this.mapToConditionalFormat(sheetId,rule);}));}
getAdaptedCfRanges(sheetId,cf,toAdd,toRemove){if(toAdd.length===0&&toRemove.length===0){return;}
const rules=this.getters.getConditionalFormats(sheetId);const replaceIndex=rules.findIndex((c)=>c.id===cf.id);let currentRanges=[];if(replaceIndex>-1){currentRanges=rules[replaceIndex].ranges.map(toUnboundedZone);}
const withRemovedZones=recomputeZones(currentRanges,toRemove);return recomputeZones([...toAdd,...withRemovedZones],[]).map((zone)=>this.getters.getRangeDataFromZone(sheetId,zone));}
mapToConditionalFormat(sheetId,cf,{useBoundedReference}={useBoundedReference:false}){const ranges=cf.ranges.map((range)=>{return this.getters.getRangeString(range,sheetId,{useBoundedReference});});if(cf.rule.type!=="DataBarRule"){return{...cf,rule:{...cf.rule},ranges,};}
return{...cf,rule:{...cf.rule,rangeValues:cf.rule.rangeValues&&this.getters.getRangeString(cf.rule.rangeValues,sheetId,{useBoundedReference,}),},ranges,};}
mapToConditionalFormatInternal(sheet,cf){const ranges=cf.ranges.map((range)=>{return this.getters.getRangeFromSheetXC(sheet,range);});if(cf.rule.type!=="DataBarRule"){return{...cf,rule:{...cf.rule},ranges,};}
return{...cf,rule:{...cf.rule,rangeValues:cf.rule.rangeValues?this.getters.getRangeFromSheetXC(sheet,cf.rule.rangeValues):undefined,},ranges,};}
addConditionalFormatting(cf,sheet){const currentCF=this.cfRules[sheet].slice();const replaceIndex=currentCF.findIndex((c)=>c.id===cf.id);const newCF=this.mapToConditionalFormatInternal(sheet,cf);if(replaceIndex>-1){currentCF.splice(replaceIndex,1,newCF);}
else{currentCF.push(newCF);}
this.history.update("cfRules",sheet,currentCF);}
checkValidPriorityChange(cfId,delta,sheetId){if(!this.cfRules[sheetId])
return"InvalidSheetId";const ruleIndex=this.cfRules[sheetId].findIndex((cf)=>cf.id===cfId);if(ruleIndex===-1)
return"InvalidConditionalFormatId";const cfIndex2=ruleIndex-delta;if(cfIndex2<0||cfIndex2>=this.cfRules[sheetId].length){return"InvalidConditionalFormatId";}
return"Success";}
checkEmptyRange(cmd){return cmd.ranges.length?"Success":"EmptyRange";}
checkCFRule(cmd){const rule=cmd.cf.rule;switch(rule.type){case"CellIsRule":return this.checkValidations(rule,this.checkOperatorArgsNumber,this.checkCFValues);case"ColorScaleRule":{return this.checkValidations(rule,this.chainValidations(this.checkThresholds(this.checkFormulaCompilation)),this.chainValidations(this.checkThresholds(this.checkNaN),this.batchValidations(this.checkMinBiggerThanMax,this.checkMinBiggerThanMid,this.checkMidBiggerThanMax)));}
case"IconSetRule":{return this.checkValidations(rule,this.chainValidations(this.checkInflectionPoints(this.checkNaN),this.checkLowerBiggerThanUpper),this.chainValidations(this.checkInflectionPoints(this.checkFormulaCompilation)));}}
return"Success";}
checkCFHasChanged(cmd){const newCF=this.mapToConditionalFormatInternal(cmd.sheetId,{...cmd.cf,ranges:cmd.ranges.map((rangeData)=>this.getters.getRangeString(this.getters.getRangeFromRangeData(rangeData),cmd.sheetId)),});const currentCF=this.cfRules[cmd.sheetId]?.find((cf)=>cf.id===cmd.cf.id);if(currentCF&&deepEquals(newCF,currentCF)){return"NoChanges";}
return"Success";}
checkOperatorArgsNumber(rule){const evaluator=criterionEvaluatorRegistry.get(rule.operator);const expectedNumber=evaluator.numberOfValues({type:rule.operator,values:rule.values});if(expectedNumber===undefined||expectedNumber>2){throw new Error("Checking more than 2 arguments is currently not supported. Add the appropriate CommandResult if you want to.");}
const errors=[];const isEmpty=(value)=>value===undefined||value==="";if(expectedNumber>=1&&isEmpty(rule.values[0])){errors.push("FirstArgMissing");}
if(expectedNumber>=2&&isEmpty(rule.values[1])){errors.push("SecondArgMissing");}
return errors.length?errors:"Success";}
checkNaN(threshold,thresholdName){if(["number","percentage","percentile"].includes(threshold.type)&&(threshold.value===""||isNaN(threshold.value))){switch(thresholdName){case"min":return"MinNaN";case"max":return"MaxNaN";case"mid":return"MidNaN";case"upperInflectionPoint":return"ValueUpperInflectionNaN";case"lowerInflectionPoint":return"ValueLowerInflectionNaN";}}
return"Success";}
checkFormulaCompilation(threshold,thresholdName){if(threshold.type!=="formula")
return"Success";const compiledFormula=compile(threshold.value||"");if(compiledFormula.isBadExpression){switch(thresholdName){case"min":return"MinInvalidFormula";case"max":return"MaxInvalidFormula";case"mid":return"MidInvalidFormula";case"upperInflectionPoint":return"ValueUpperInvalidFormula";case"lowerInflectionPoint":return"ValueLowerInvalidFormula";}}
return"Success";}
checkThresholds(check){return this.batchValidations((rule)=>check(rule.minimum,"min"),(rule)=>check(rule.maximum,"max"),(rule)=>(rule.midpoint?check(rule.midpoint,"mid"):"Success"));}
checkInflectionPoints(check){return this.batchValidations((rule)=>check(rule.lowerInflectionPoint,"lowerInflectionPoint"),(rule)=>check(rule.upperInflectionPoint,"upperInflectionPoint"));}
checkLowerBiggerThanUpper(rule){const minValue=rule.lowerInflectionPoint.value;const maxValue=rule.upperInflectionPoint.value;if(["number","percentage","percentile"].includes(rule.lowerInflectionPoint.type)&&rule.lowerInflectionPoint.type===rule.upperInflectionPoint.type&&Number(minValue)>Number(maxValue)){return"LowerBiggerThanUpper";}
return"Success";}
checkMinBiggerThanMax(rule){const minValue=rule.minimum.value;const maxValue=rule.maximum.value;if(["number","percentage","percentile"].includes(rule.minimum.type)&&rule.minimum.type===rule.maximum.type&&stringToNumber(minValue)>=stringToNumber(maxValue)){return"MinBiggerThanMax";}
return"Success";}
checkMidBiggerThanMax(rule){const midValue=rule.midpoint?.value;const maxValue=rule.maximum.value;if(rule.midpoint&&["number","percentage","percentile"].includes(rule.midpoint.type)&&rule.midpoint.type===rule.maximum.type&&stringToNumber(midValue)>=stringToNumber(maxValue)){return"MidBiggerThanMax";}
return"Success";}
checkMinBiggerThanMid(rule){const minValue=rule.minimum.value;const midValue=rule.midpoint?.value;if(rule.midpoint&&["number","percentage","percentile"].includes(rule.midpoint.type)&&rule.minimum.type===rule.midpoint.type&&stringToNumber(minValue)>=stringToNumber(midValue)){return"MinBiggerThanMid";}
return"Success";}
checkCFValues(rule){for(const value of rule.values){if(!value.startsWith("="))
continue;const compiledFormula=compile(value||"");if(compiledFormula.isBadExpression){return"ValueCellIsInvalidFormula";}}
return"Success";}
removeConditionalFormatting(id,sheet){const cfIndex=this.cfRules[sheet].findIndex((s)=>s.id===id);if(cfIndex!==-1){const currentCF=this.cfRules[sheet].slice();currentCF.splice(cfIndex,1);this.history.update("cfRules",sheet,currentCF);}}
changeCFPriority(cfId,delta,sheetId){const currentIndex=this.cfRules[sheetId].findIndex((s)=>s.id===cfId);const cf=this.cfRules[sheetId][currentIndex];const targetIndex=currentIndex-delta;const cfRules=[...this.cfRules[sheetId]];cfRules.splice(currentIndex,1);cfRules.splice(targetIndex,0,cf);this.history.update("cfRules",sheetId,cfRules);}}
class DataValidationPlugin extends CorePlugin{static getters=["cellHasListDataValidationIcon","getDataValidationRule","getDataValidationRules","getValidationRuleForCell",];rules={};adaptRanges(applyChange,sheetId,sheetName){const sheetIds=sheetId?[sheetId]:Object.keys(this.rules);for(const sheetId of sheetIds){this.adaptDVRanges(sheetId,applyChange);}
this.adaptDVFormulas(applyChange);}
adaptDVFormulas(applyChange){for(const sheetId in this.rules){const rules=this.rules[sheetId];for(let ruleIndex=rules.length-1;ruleIndex>=0;ruleIndex--){const rule=this.rules[sheetId][ruleIndex];for(let valueIndex=0;valueIndex<rule.criterion.values.length;valueIndex++){const value=this.getters.adaptFormulaStringDependencies(sheetId,rule.criterion.values[valueIndex],applyChange);this.history.update("rules",sheetId,ruleIndex,"criterion","values",valueIndex,value);}}}}
adaptDVRanges(sheetId,applyChange){const rules=this.rules[sheetId];for(let ruleIndex=rules.length-1;ruleIndex>=0;ruleIndex--){const rule=this.rules[sheetId][ruleIndex];for(let rangeIndex=rule.ranges.length-1;rangeIndex>=0;rangeIndex--){const range=rule.ranges[rangeIndex];const change=applyChange(range);switch(change.changeType){case"REMOVE":if(rule.ranges.length===1){this.removeDataValidationRule(sheetId,rule.id);}
else{const copy=rule.ranges.slice();copy.splice(rangeIndex,1);this.history.update("rules",sheetId,ruleIndex,"ranges",copy);}
break;case"RESIZE":case"MOVE":case"CHANGE":this.history.update("rules",sheetId,ruleIndex,"ranges",rangeIndex,change.range);break;}}}}
allowDispatch(cmd){switch(cmd.type){case"ADD_DATA_VALIDATION_RULE":if(!this.getters.tryGetSheet(cmd.sheetId)){return"InvalidSheetId";}
if(cmd.ranges.some((rangeData)=>!this.getters.tryGetSheet(rangeData._sheetId))){return"InvalidSheetId";}
return this.checkValidations(cmd,this.chainValidations(this.checkEmptyRange,this.checkValidRange,this.checkCriterionTypeIsValid,this.checkCriterionHasValidNumberOfValues,this.checkCriterionValuesAreValid));case"REMOVE_DATA_VALIDATION_RULE":if(!this.getters.tryGetSheet(cmd.sheetId)){return"InvalidSheetId";}
if(!this.rules[cmd.sheetId].find((rule)=>rule.id===cmd.id)){return"UnknownDataValidationRule";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.history.update("rules",cmd.sheetId,[]);break;case"DUPLICATE_SHEET":{const rules=deepCopy(this.rules[cmd.sheetId]).map((rule)=>({...rule,ranges:rule.ranges.map((range)=>duplicateRangeInDuplicatedSheet(cmd.sheetId,cmd.sheetIdTo,range)),}));this.history.update("rules",cmd.sheetIdTo,rules);break;}
case"DELETE_SHEET":{const rules={...this.rules};delete rules[cmd.sheetId];this.history.update("rules",rules);break;}
case"REMOVE_DATA_VALIDATION_RULE":{this.removeDataValidationRule(cmd.sheetId,cmd.id);break;}
case"ADD_DATA_VALIDATION_RULE":{const ranges=cmd.ranges.map((range)=>this.getters.getRangeFromRangeData(range));this.addDataValidationRule(cmd.sheetId,{...cmd.rule,ranges});break;}
case"DELETE_CONTENT":{const zones=recomputeZones(cmd.target);const sheetId=cmd.sheetId;for(const zone of zones){for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const dataValidation=this.getValidationRuleForCell({sheetId,col,row});if(!dataValidation){continue;}
if(dataValidation.criterion.type==="isBoolean"||(dataValidation.criterion.type==="isValueInList"&&!this.getters.getCell({sheetId,col,row})?.content)){const rules=this.rules[sheetId];const ranges=[this.getters.getRangeFromSheetXC(sheetId,toXC(col,row))];const adaptedRules=this.removeRangesFromRules(sheetId,ranges,rules);this.history.update("rules",sheetId,adaptedRules);}}}}}}}
getDataValidationRules(sheetId){return this.rules[sheetId];}
getDataValidationRule(sheetId,id){return this.rules[sheetId].find((rule)=>rule.id===id);}
getValidationRuleForCell({sheetId,col,row}){if(!this.rules[sheetId]){return undefined;}
for(const rule of this.rules[sheetId]){for(const range of rule.ranges){if(isInside(col,row,range.zone)){return rule;}}}
return undefined;}
cellHasListDataValidationIcon(cellPosition){const rule=this.getValidationRuleForCell(cellPosition);if(!rule)
return false;return((rule.criterion.type==="isValueInList"||rule.criterion.type==="isValueInRange")&&(rule.criterion.displayStyle==="arrow"||rule.criterion.displayStyle==="chip"));}
addDataValidationRule(sheetId,newRule){const rules=this.rules[sheetId];if(newRule.criterion.type==="isBoolean"){this.setCenterStyleToBooleanCells(newRule);}
else if(newRule.criterion.type==="isValueInList"){newRule.criterion.values=Array.from(new Set(newRule.criterion.values));}
const adaptedRules=this.removeRangesFromRules(sheetId,newRule.ranges,rules,newRule.id);const ruleIndex=adaptedRules.findIndex((rule)=>rule.id===newRule.id);if(ruleIndex!==-1){adaptedRules[ruleIndex]=newRule;this.history.update("rules",sheetId,adaptedRules);}
else{this.history.update("rules",sheetId,[...adaptedRules,newRule]);}}
removeRangesFromRules(sheetId,ranges,rules,editingRuleId){rules=deepCopy(rules);for(const rule of rules){if(rule.id===editingRuleId){continue;}
rule.ranges=this.getters.recomputeRanges(rule.ranges,ranges);}
return rules.filter((rule)=>rule.ranges.length>0);}
removeDataValidationRule(sheetId,ruleId){const rules=this.rules[sheetId];const newRules=rules.filter((rule)=>rule.id!==ruleId);this.history.update("rules",sheetId,newRules);}
setCenterStyleToBooleanCells(rule){for(const position of getCellPositionsInRanges(rule.ranges)){const cell=this.getters.getCell(position);const style={...cell?.style,align:cell?.style?.align??"center",verticalAlign:cell?.style?.verticalAlign??"middle",};this.dispatch("UPDATE_CELL",{...position,style});}}
checkEmptyRange(cmd){return cmd.ranges.length?"Success":"EmptyRange";}
import(data){for(const sheet of data.sheets){this.rules[sheet.id]=[];if(!sheet.dataValidationRules){continue;}
for(const rule of sheet.dataValidationRules){this.rules[sheet.id].push({...rule,ranges:rule.ranges.map((range)=>this.getters.getRangeFromSheetXC(sheet.id,range)),});}}}
export(data){if(!data.sheets){return;}
for(const sheet of data.sheets){sheet.dataValidationRules=[];for(const rule of this.rules[sheet.id]){sheet.dataValidationRules.push({...rule,ranges:rule.ranges.map((range)=>this.getters.getRangeString(range,sheet.id)),});}}}
exportForExcel(data){if(!data.sheets){return;}
for(const sheet of data.sheets){sheet.dataValidationRules=[];for(const rule of this.rules[sheet.id]){const excelRule={...deepCopy(rule),ranges:rule.ranges.map((range)=>this.getters.getRangeString(range,sheet.id,{useBoundedReference:true})),};if(rule.criterion.type==="isValueInRange"){excelRule.criterion.values=rule.criterion.values.map((value)=>{const range=this.getters.getRangeFromSheetXC(sheet.id,value);return this.getters.getRangeString(range,sheet.id,{useBoundedReference:true,useFixedReference:true,});});}
sheet.dataValidationRules.push(excelRule);}}}
checkCriterionTypeIsValid(cmd){return criterionEvaluatorRegistry.contains(cmd.rule.criterion.type)?"Success":"UnknownDataValidationCriterionType";}
checkCriterionHasValidNumberOfValues(cmd){const criterion=cmd.rule.criterion;const evaluator=criterionEvaluatorRegistry.get(criterion.type);const expectedNumberOfValues=evaluator.numberOfValues(criterion);if(expectedNumberOfValues!==undefined&&criterion.values.length!==expectedNumberOfValues){return"InvalidNumberOfCriterionValues";}
return"Success";}
checkCriterionValuesAreValid(cmd){const criterion=cmd.rule.criterion;const evaluator=criterionEvaluatorRegistry.get(criterion.type);const isInvalid=(value)=>{if(evaluator.allowedValues==="onlyFormulas"&&!value.startsWith("=")){return true;}
if(value.startsWith("=")){return evaluator.allowedValues==="onlyLiterals"||compile(value).isBadExpression;}
return!evaluator.isCriterionValueValid(value);};if(criterion.values.some(isInvalid)){return"InvalidDataValidationCriterionValue";}
return"Success";}
checkValidRange(cmd){const ranges=cmd.ranges.map((range)=>this.getters.getRangeFromRangeData(range));const stringRanges=ranges.map((range)=>this.getters.getRangeString(range,cmd.sheetId));if(stringRanges.some((xc)=>!this.getters.isRangeValid(xc))){return"InvalidRange";}
return"Success";}}
class FigurePlugin extends CorePlugin{static getters=["getFigures","getFigure","getFigureSheetId"];figures={};insertionOrders=[];adaptRanges(applyChange,sheetId){if(!sheetId){return;}
for(const figure of this.getFigures(sheetId)){const change=applyChange(this.getters.getRangeFromZone(sheetId,{left:figure.col,right:figure.col,top:figure.row,bottom:figure.row,}));if(change.changeType==="MOVE"){this.history.update("figures",sheetId,figure.id,"col",change.range.zone.right);this.history.update("figures",sheetId,figure.id,"row",change.range.zone.bottom);}
else if(change.changeType==="REMOVE"){const fullchange=applyChange(this.getters.getRangeFromZone(sheetId,{left:0,right:figure.col-1,top:0,bottom:figure.row-1,}));let{offset,col,row}=figure;if(fullchange.changeType!=="NONE"){col=fullchange.range.zone.right+1;row=fullchange.range.zone.bottom+1;}
({offset,col,row}=this.getPositionInSheet(sheetId,{...figure,col,row}));this.history.update("figures",sheetId,figure.id,"offset",offset);this.history.update("figures",sheetId,figure.id,"col",col);this.history.update("figures",sheetId,figure.id,"row",row);}}}
allowDispatch(cmd){switch(cmd.type){case"CREATE_FIGURE":return this.checkValidations(cmd,this.checkFigureDuplicate,this.checkFigureAnchorOffset);case"UPDATE_FIGURE":return this.checkValidations(cmd,this.checkFigureExists,this.checkFigureAnchorOffset);case"DELETE_FIGURE":return this.checkFigureExists(cmd);default:return"Success";}}
beforeHandle(cmd){switch(cmd.type){case"DELETE_SHEET":this.getters.getFigures(cmd.sheetId).forEach((figure)=>{this.dispatch("DELETE_FIGURE",{figureId:figure.id,sheetId:cmd.sheetId});});break;}}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.figures[cmd.sheetId]={};break;case"DELETE_SHEET":this.deleteSheet(cmd.sheetId);break;case"CREATE_FIGURE":const figure={id:cmd.figureId,col:cmd.col,row:cmd.row,offset:cmd.offset,width:cmd.size.width,height:cmd.size.height,tag:cmd.tag,};this.addFigure(figure,cmd.sheetId);break;case"UPDATE_FIGURE":this.updateFigure(cmd);break;case"DELETE_FIGURE":this.removeFigure(cmd.figureId,cmd.sheetId);break;case"REMOVE_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.onColRemove(cmd.sheetId);}
else{this.onRowRemove(cmd.sheetId);}
break;}}
onColRemove(sheetId){const numHeader=this.getters.getNumberCols(sheetId);const remainingSize=new Array(numHeader+1);remainingSize[numHeader]=0;for(let i=numHeader-1;i>=0;i--){remainingSize[i]=remainingSize[i+1]+this.getters.getColSize(sheetId,i);}
for(const figure of this.getFigures(sheetId)){if(figure.offset.x+figure.width>remainingSize[figure.col]){let x=figure.offset.x;let col=figure.col;x=Math.min(x,remainingSize[col]-figure.width);while(x<0&&col>0){col--;x=remainingSize[col]-figure.width;}
if(x!==figure.offset.x){this.history.update("figures",sheetId,figure.id,"offset",{x:Math.max(x,0),y:figure.offset.y,});}
if(col!==figure.col){this.history.update("figures",sheetId,figure.id,"col",col);}}}}
onRowRemove(sheetId){const numHeader=this.getters.getNumberRows(sheetId);const remainingSize=new Array(numHeader+1);remainingSize[numHeader]=0;for(let i=numHeader-1;i>=0;i--){remainingSize[i]=remainingSize[i+1]+(this.getters.getUserRowSize(sheetId,i)??DEFAULT_CELL_HEIGHT);}
for(const figure of this.getFigures(sheetId)){if(figure.offset.y+figure.height>remainingSize[figure.row]){let y=figure.offset.y;let row=figure.row;for(let row_size=this.getters.getUserRowSize(sheetId,row)??DEFAULT_CELL_HEIGHT;row_size<y;row_size=this.getters.getUserRowSize(sheetId,row)??DEFAULT_CELL_HEIGHT){row+=1;y-=row_size;}
y=Math.min(y,remainingSize[row]-figure.height);while(y<0&&row>0){row--;y=remainingSize[row]-figure.height;}
if(y!==figure.offset.y){this.history.update("figures",sheetId,figure.id,"offset",{x:figure.offset.x,y:Math.max(0,y),});}
if(row!==figure.row){this.history.update("figures",sheetId,figure.id,"row",row);}}
else if(figure.offset.y+figure.height>remainingSize[0]){this.history.update("figures",sheetId,figure.id,"offset",{x:figure.offset.x,y:Math.max(remainingSize[0]-figure.height,0),});}}}
getPositionInSheet(sheetId,figure){const{numberOfRows,numberOfCols}=this.getters.getSheetSize(sheetId);let availableHeight=0,availableWidth=0;let rowNum,colNum;let{col,row}=figure;const offset={...figure.offset};for(rowNum=numberOfRows;availableHeight<figure.height&&rowNum>0;rowNum--){availableHeight+=this.getters.getUserRowSize(sheetId,rowNum-1)??DEFAULT_CELL_HEIGHT;}
if(row>rowNum){row=rowNum;offset.y=Math.max(availableHeight-figure.height,0);}
else if(row===rowNum){offset.y=clip(offset.y,0,Math.max(availableHeight-figure.height,0));}
for(colNum=numberOfCols;availableWidth<figure.width&&colNum>0;colNum--){availableWidth+=this.getters.getColSize(sheetId,colNum-1);}
if(col>colNum){col=colNum;offset.x=Math.max(availableWidth-figure.width,0);}
else if(colNum===col){offset.x=clip(offset.x,0,Math.max(availableWidth-figure.width,0));}
return{col,row,offset};}
updateFigure(cmd){if(!("figureId"in cmd)||!("sheetId"in cmd)){return;}
const{figureId,sheetId,...update}=cmd;const figure={...this.getFigure(sheetId,figureId),...update};for(const[key,value]of Object.entries(update)){switch(key){case"offset":this.history.update("figures",sheetId,figure.id,key,value);break;case"col":case"row":case"width":case"height":if(value!==undefined){this.history.update("figures",sheetId,figure.id,key,value);}
break;}}}
addFigure(figure,sheetId){this.history.update("figures",sheetId,figure.id,figure);this.history.update("insertionOrders",this.insertionOrders.length,figure.id);}
deleteSheet(sheetId){this.history.update("insertionOrders",this.insertionOrders.filter((id)=>!this.figures[sheetId]?.[id]));this.history.update("figures",sheetId,undefined);}
removeFigure(id,sheetId){this.history.update("insertionOrders",this.insertionOrders.filter((figureId)=>figureId!==id));this.history.update("figures",sheetId,id,undefined);}
checkFigureExists(cmd){if(this.figures[cmd.sheetId]?.[cmd.figureId]===undefined){return"FigureDoesNotExist";}
return"Success";}
checkFigureDuplicate(cmd){if(Object.values(this.figures).find((sheet)=>sheet?.[cmd.figureId])){return"DuplicatedFigureId";}
return"Success";}
checkFigureAnchorOffset(cmd){if(cmd.col<0||cmd.row<0||(cmd.offset&&(cmd.offset.x<0||cmd.offset.y<0))){return"WrongSheetPosition";}
return"Success";}
getFigures(sheetId){const figures=[];for(const figureId of this.insertionOrders){const figure=this.figures[sheetId]?.[figureId];if(figure){figures.push(figure);}}
return figures;}
getFigure(sheetId,figureId){return this.figures[sheetId]?.[figureId];}
getFigureSheetId(figureId){return Object.keys(this.figures).find((sheetId)=>this.figures[sheetId]?.[figureId]!==undefined);}
import(data){for(const sheet of data.sheets){for(const figure of sheet.figures){this.addFigure(figure,sheet.id);}}}
export(data){for(const sheet of data.sheets){for(const figure of this.getFigures(sheet.id)){const data=undefined;sheet.figures.push({...figure,data});}}}
exportForExcel(data){return this.export(data);}}
class HeaderSizePlugin extends CorePlugin{static getters=["getUserRowSize","getColSize"];sizes={};handle(cmd){switch(cmd.type){case"CREATE_SHEET":{this.history.update("sizes",cmd.sheetId,{COL:Array(this.getters.getNumberCols(cmd.sheetId)).fill(undefined),ROW:Array(this.getters.getNumberRows(cmd.sheetId)).fill(undefined),});break;}
case"DUPLICATE_SHEET":this.history.update("sizes",cmd.sheetIdTo,deepCopy(this.sizes[cmd.sheetId]));break;case"DELETE_SHEET":const sizes={...this.sizes};delete sizes[cmd.sheetId];this.history.update("sizes",sizes);break;case"REMOVE_COLUMNS_ROWS":{const arr=this.sizes[cmd.sheetId][cmd.dimension];const sizes=removeIndexesFromArray(arr,cmd.elements);this.history.update("sizes",cmd.sheetId,cmd.dimension,sizes);break;}
case"ADD_COLUMNS_ROWS":{const sizes=[...this.sizes[cmd.sheetId][cmd.dimension]];const addIndex=getAddHeaderStartIndex(cmd.position,cmd.base);const baseSize=sizes[cmd.base];sizes.splice(addIndex,0,...Array(cmd.quantity).fill(baseSize));this.history.update("sizes",cmd.sheetId,cmd.dimension,sizes);break;}
case"RESIZE_COLUMNS_ROWS":if(cmd.dimension==="ROW"){for(const el of cmd.elements){this.history.update("sizes",cmd.sheetId,cmd.dimension,el,cmd.size||undefined);}}
else{for(const el of cmd.elements){this.history.update("sizes",cmd.sheetId,cmd.dimension,el,cmd.size||undefined);}}
break;}
return;}
getColSize(sheetId,index){return Math.round(this.sizes[sheetId]?.["COL"][index]||DEFAULT_CELL_WIDTH);}
getUserRowSize(sheetId,index){const rowSize=this.sizes[sheetId]?.["ROW"][index];return rowSize?Math.round(rowSize):undefined;}
import(data){for(const sheet of data.sheets){const sizes={COL:Array(sheet.colNumber).fill(undefined),ROW:Array(sheet.rowNumber).fill(undefined),};for(const[rowIndex,row]of Object.entries(sheet.rows)){if(row.size){sizes["ROW"][rowIndex]=row.size;}}
for(const[colIndex,col]of Object.entries(sheet.cols)){if(col.size){sizes["COL"][colIndex]=col.size;}}
this.sizes[sheet.id]=sizes;}
return;}
exportForExcel(data){this.exportData(data,true);}
export(data){this.exportData(data);}
exportData(data,exportDefaults=false){for(const sheet of data.sheets){if(sheet.rows===undefined){sheet.rows={};}
for(const row of range(0,this.getters.getNumberRows(sheet.id))){if(exportDefaults||this.sizes[sheet.id]["ROW"][row]){sheet.rows[row]={...sheet.rows[row],size:this.getUserRowSize(sheet.id,row)??DEFAULT_CELL_HEIGHT,};}}
if(sheet.cols===undefined){sheet.cols={};}
for(const col of range(0,this.getters.getNumberCols(sheet.id))){if(exportDefaults||this.sizes[sheet.id]["COL"][col]){sheet.cols[col]={...sheet.cols[col],size:this.getColSize(sheet.id,col)};}}}}}
class HeaderVisibilityPlugin extends CorePlugin{static getters=["checkElementsIncludeAllVisibleHeaders","getHiddenColsGroups","getHiddenRowsGroups","isHeaderHiddenByUser","isRowHiddenByUser","isColHiddenByUser",];hiddenHeaders={};allowDispatch(cmd){switch(cmd.type){case"HIDE_COLUMNS_ROWS":{if(!this.getters.tryGetSheet(cmd.sheetId)){return"InvalidSheetId";}
const hiddenGroup=cmd.dimension==="COL"?this.getHiddenColsGroups(cmd.sheetId):this.getHiddenRowsGroups(cmd.sheetId);const elements=cmd.dimension==="COL"?this.getters.getNumberCols(cmd.sheetId):this.getters.getNumberRows(cmd.sheetId);const hiddenElements=new Set((hiddenGroup||[]).flat().concat(cmd.elements));if(hiddenElements.size>=elements){return"TooManyHiddenElements";}
else if(largeMin(cmd.elements)<0||largeMax(cmd.elements)>elements){return"InvalidHeaderIndex";}
else{return"Success";}}
case"REMOVE_COLUMNS_ROWS":if(!this.getters.tryGetSheet(cmd.sheetId)){return"InvalidSheetId";}
if(this.checkElementsIncludeAllVisibleHeaders(cmd.sheetId,cmd.dimension,cmd.elements)){return"NotEnoughElements";}
return"Success";}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":const hiddenHeaders={COL:Array(this.getters.getNumberCols(cmd.sheetId)).fill(false),ROW:Array(this.getters.getNumberRows(cmd.sheetId)).fill(false),};this.history.update("hiddenHeaders",cmd.sheetId,hiddenHeaders);break;case"DUPLICATE_SHEET":this.history.update("hiddenHeaders",cmd.sheetIdTo,deepCopy(this.hiddenHeaders[cmd.sheetId]));break;case"DELETE_SHEET":this.history.update("hiddenHeaders",cmd.sheetId,undefined);break;case"REMOVE_COLUMNS_ROWS":{const hiddenHeaders=[...this.hiddenHeaders[cmd.sheetId][cmd.dimension]];for(const el of[...cmd.elements].sort((a,b)=>b-a)){hiddenHeaders.splice(el,1);}
this.history.update("hiddenHeaders",cmd.sheetId,cmd.dimension,hiddenHeaders);break;}
case"ADD_COLUMNS_ROWS":{const hiddenHeaders=[...this.hiddenHeaders[cmd.sheetId][cmd.dimension]];const addIndex=getAddHeaderStartIndex(cmd.position,cmd.base);hiddenHeaders.splice(addIndex,0,...Array(cmd.quantity).fill(false));this.history.update("hiddenHeaders",cmd.sheetId,cmd.dimension,hiddenHeaders);break;}
case"HIDE_COLUMNS_ROWS":for(const el of cmd.elements){this.history.update("hiddenHeaders",cmd.sheetId,cmd.dimension,el,true);}
break;case"UNHIDE_COLUMNS_ROWS":for(const el of cmd.elements){this.history.update("hiddenHeaders",cmd.sheetId,cmd.dimension,el,false);}
break;}
return;}
checkElementsIncludeAllVisibleHeaders(sheetId,dimension,elements){const visibleHeaders=this.getAllVisibleHeaders(sheetId,dimension);return includesAll(elements,visibleHeaders);}
isHeaderHiddenByUser(sheetId,dimension,index){return dimension==="COL"?this.isColHiddenByUser(sheetId,index):this.isRowHiddenByUser(sheetId,index);}
isRowHiddenByUser(sheetId,index){return this.hiddenHeaders[sheetId].ROW[index]||this.getters.isRowFolded(sheetId,index);}
isColHiddenByUser(sheetId,index){return this.hiddenHeaders[sheetId].COL[index]||this.getters.isColFolded(sheetId,index);}
getHiddenColsGroups(sheetId){const consecutiveIndexes=[[]];const hiddenCols=this.hiddenHeaders[sheetId].COL;for(let col=0;col<hiddenCols.length;col++){const isColHidden=hiddenCols[col];if(isColHidden){consecutiveIndexes[consecutiveIndexes.length-1].push(col);}
else{if(consecutiveIndexes[consecutiveIndexes.length-1].length!==0){consecutiveIndexes.push([]);}}}
if(consecutiveIndexes[consecutiveIndexes.length-1].length===0){consecutiveIndexes.pop();}
return consecutiveIndexes;}
getHiddenRowsGroups(sheetId){const consecutiveIndexes=[[]];const hiddenCols=this.hiddenHeaders[sheetId].ROW;for(let row=0;row<hiddenCols.length;row++){const isRowHidden=hiddenCols[row];if(isRowHidden){consecutiveIndexes[consecutiveIndexes.length-1].push(row);}
else{if(consecutiveIndexes[consecutiveIndexes.length-1].length!==0){consecutiveIndexes.push([]);}}}
if(consecutiveIndexes[consecutiveIndexes.length-1].length===0){consecutiveIndexes.pop();}
return consecutiveIndexes;}
getAllVisibleHeaders(sheetId,dimension){const headers=range(0,this.getters.getNumberHeaders(sheetId,dimension));const foldedHeaders=[];this.getters.getHeaderGroups(sheetId,dimension).forEach((group)=>{if(group.isFolded){foldedHeaders.push(...range(group.start,group.end+1));}});return headers.filter((i)=>{return!this.hiddenHeaders[sheetId][dimension][i]&&!foldedHeaders.includes(i);});}
import(data){for(const sheet of data.sheets){this.hiddenHeaders[sheet.id]={COL:[],ROW:[]};for(let row=0;row<sheet.rowNumber;row++){this.hiddenHeaders[sheet.id].ROW[row]=Boolean(sheet.rows[row]?.isHidden);}
for(let col=0;col<sheet.colNumber;col++){this.hiddenHeaders[sheet.id].COL[col]=Boolean(sheet.cols[col]?.isHidden);}}
return;}
exportForExcel(data){this.exportData(data,true);}
export(data){this.exportData(data);}
exportData(data,exportDefaults=false){for(const sheet of data.sheets){if(sheet.rows===undefined){sheet.rows={};}
for(let row=0;row<this.getters.getNumberRows(sheet.id);row++){if(exportDefaults||this.hiddenHeaders[sheet.id]["ROW"][row]){if(sheet.rows[row]===undefined){sheet.rows[row]={};}
sheet.rows[row].isHidden||=this.hiddenHeaders[sheet.id]["ROW"][row];}}
if(sheet.cols===undefined){sheet.cols={};}
for(let col=0;col<this.getters.getNumberCols(sheet.id);col++){if(exportDefaults||this.hiddenHeaders[sheet.id]["COL"][col]){if(sheet.cols[col]===undefined){sheet.cols[col]={};}
sheet.cols[col].isHidden||=this.hiddenHeaders[sheet.id]["COL"][col];}}}}}
class ImagePlugin extends CorePlugin{static getters=["getImage","getImagePath","getImageSize"];fileStore;images={};syncedImages=new Set();constructor(config){super(config);this.fileStore=config.external.fileStore;}
allowDispatch(cmd){switch(cmd.type){case"CREATE_IMAGE":if(this.getters.getFigure(cmd.sheetId,cmd.figureId)){return"InvalidFigureId";}
return"Success";default:return"Success";}}
handle(cmd){switch(cmd.type){case"CREATE_IMAGE":this.addFigure(cmd.figureId,cmd.sheetId,cmd.col,cmd.row,cmd.offset,cmd.size);this.history.update("images",cmd.sheetId,cmd.figureId,cmd.definition);this.syncedImages.add(cmd.definition.path);break;case"DUPLICATE_SHEET":{const sheetFiguresFrom=this.getters.getFigures(cmd.sheetId);for(const fig of sheetFiguresFrom){if(fig.tag==="image"){const figureIdBase=fig.id.split(FIGURE_ID_SPLITTER).pop();const duplicatedFigureId=`${cmd.sheetIdTo}${FIGURE_ID_SPLITTER}${figureIdBase}`;const image=this.getImage(fig.id);if(image){const size={width:fig.width,height:fig.height};this.dispatch("CREATE_IMAGE",{sheetId:cmd.sheetIdTo,figureId:duplicatedFigureId,offset:fig.offset,col:fig.col,row:fig.row,size,definition:deepCopy(image),});}}}
break;}
case"DELETE_FIGURE":this.history.update("images",cmd.sheetId,cmd.figureId,undefined);break;case"DELETE_SHEET":this.history.update("images",cmd.sheetId,undefined);break;}}
garbageCollectExternalResources(){const images=new Set(this.getAllImages().map((image)=>image.path));for(const path of this.syncedImages){if(!images.has(path)){this.fileStore?.delete(path);}}}
getImage(figureId){for(const sheet of Object.values(this.images)){if(sheet&&sheet[figureId]){return sheet[figureId];}}
throw new Error(`There is no image with the given figureId: ${figureId}`);}
getImagePath(figureId){return this.getImage(figureId).path;}
getImageSize(figureId){return this.getImage(figureId).size;}
addFigure(figureId,sheetId,col,row,offset,size){this.dispatch("CREATE_FIGURE",{sheetId,figureId,col,row,offset,size,tag:"image"});}
import(data){for(const sheet of data.sheets){const images=(sheet.figures||[]).filter((figure)=>figure.tag==="image");for(const image of images){this.history.update("images",sheet.id,image.id,image.data);this.syncedImages.add(image.data.path);}}}
export(data){for(const sheet of data.sheets){const images=sheet.figures.filter((figure)=>figure.tag==="image");for(const image of images){image.data=this.images[sheet.id]?.[image.id];}}}
exportForExcel(data){for(const sheet of data.sheets){if(!sheet.images){sheet.images=[];}
const figures=this.getters.getFigures(sheet.id);const images=[];for(const figure of figures){if(figure?.tag==="image"){const image=this.getImage(figure.id);if(image){images.push({...figure,data:deepCopy(image),});}}}
sheet.images=[...sheet.images,...images];}}
getAllImages(){const images=[];for(const sheetId in this.images){images.push(...Object.values(this.images[sheetId]||{}).filter(isDefined));}
return images;}}
class MergePlugin extends CorePlugin{static getters=["isInMerge","isInSameMerge","isMergeHidden","getMainCellPosition","expandZone","doesIntersectMerge","doesColumnsHaveCommonMerges","doesRowsHaveCommonMerges","getMerges","getMerge","getMergesInZone","isSingleCellOrMerge","getSelectionRangeString","isMainCellPosition",];nextId=1;merges={};mergeCellMap={};allowDispatch(cmd){const force="force"in cmd?!!cmd.force:false;switch(cmd.type){case"ADD_MERGE":if(force){return this.checkValidations(cmd,this.checkFrozenPanes);}
return this.checkValidations(cmd,this.checkDestructiveMerge,this.checkOverlap,this.checkFrozenPanes);case"UPDATE_CELL":return this.checkMergedContentUpdate(cmd);case"REMOVE_MERGE":return this.checkMergeExists(cmd);default:return"Success";}}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.history.update("merges",cmd.sheetId,{});this.history.update("mergeCellMap",cmd.sheetId,{});break;case"DELETE_SHEET":this.history.update("merges",cmd.sheetId,{});this.history.update("mergeCellMap",cmd.sheetId,{});break;case"DUPLICATE_SHEET":const merges=this.merges[cmd.sheetId];if(!merges)
break;for(const range of Object.values(merges).filter(isDefined)){this.addMerge(cmd.sheetIdTo,range.zone);}
break;case"ADD_MERGE":for(const zone of cmd.target){this.addMerge(cmd.sheetId,zone);}
break;case"REMOVE_MERGE":for(const zone of cmd.target){this.removeMerge(cmd.sheetId,zone);}
break;}}
adaptRanges(applyChange,sheetId,sheetName){const sheetIds=sheetId?[sheetId]:Object.keys(this.merges);for(const sheetId of sheetIds){this.applyRangeChangeOnSheet(sheetId,applyChange);}}
getMerges(sheetId){return Object.keys(this.merges[sheetId]||{}).map((mergeId)=>this.getMergeById(sheetId,parseInt(mergeId,10))).filter(isDefined);}
getMerge({sheetId,col,row}){const sheetMap=this.mergeCellMap[sheetId];const mergeId=sheetMap?col in sheetMap&&sheetMap[col]?.[row]:undefined;return mergeId?this.getMergeById(sheetId,mergeId):undefined;}
getMergesInZone(sheetId,zone){const sheetMap=this.mergeCellMap[sheetId];if(!sheetMap)
return[];const mergeIds=new Set();for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const mergeId=sheetMap[col]?.[row];if(mergeId){mergeIds.add(mergeId);}}}
return Array.from(mergeIds).map((mergeId)=>this.getMergeById(sheetId,mergeId)).filter(isDefined);}
getSelectionRangeString(range,forSheetId){const expandedZone=this.getters.expandZone(range.sheetId,range.zone);const expandedRange=createRange({...range,zone:{...expandedZone,bottom:isFullColRange(range)?undefined:expandedZone.bottom,right:isFullRowRange(range)?undefined:expandedZone.right,},},this.getters.getSheetSize);const rangeString=this.getters.getRangeString(expandedRange,forSheetId);if(this.isSingleCellOrMerge(range.sheetId,range.zone)){const{sheetName,xc}=splitReference(rangeString);return getFullReference(sheetName,xc.split(":")[0]);}
return rangeString;}
doesIntersectMerge(sheetId,zone){for(const merge of this.getMerges(sheetId)){if(overlap(zone,merge)){return true;}}
return false;}
doesColumnsHaveCommonMerges(sheetId,colA,colB){const sheet=this.getters.getSheet(sheetId);for(let row=0;row<this.getters.getNumberRows(sheetId);row++){if(this.isInSameMerge(sheet.id,colA,row,colB,row)){return true;}}
return false;}
doesRowsHaveCommonMerges(sheetId,rowA,rowB){const sheet=this.getters.getSheet(sheetId);for(let col=0;col<=this.getters.getNumberCols(sheetId);col++){if(this.isInSameMerge(sheet.id,col,rowA,col,rowB)){return true;}}
return false;}
expandZone(sheetId,zone){const{left,right,top,bottom}=zone;let result={left,right,top,bottom};for(const id in this.merges[sheetId]){const merge=this.getMergeById(sheetId,parseInt(id));if(merge&&overlap(merge,result)){result=union(merge,result);}}
return isEqual(result,zone)?result:this.expandZone(sheetId,result);}
isInSameMerge(sheetId,colA,rowA,colB,rowB){const mergeA=this.getMerge({sheetId,col:colA,row:rowA});const mergeB=this.getMerge({sheetId,col:colB,row:rowB});if(!mergeA||!mergeB){return false;}
return isEqual(mergeA,mergeB);}
isInMerge({sheetId,col,row}){const sheetMap=this.mergeCellMap[sheetId];return sheetMap?col in sheetMap&&Boolean(sheetMap[col]?.[row]):false;}
getMainCellPosition(position){const mergeZone=this.getMerge(position);return mergeZone?{sheetId:position.sheetId,col:mergeZone.left,row:mergeZone.top,}:position;}
isMergeHidden(sheetId,merge){const hiddenColsGroups=this.getters.getHiddenColsGroups(sheetId);const hiddenRowsGroups=this.getters.getHiddenRowsGroups(sheetId);for(const group of hiddenColsGroups){if(merge.left>=group[0]&&merge.right<=group[group.length-1]){return true;}}
for(const group of hiddenRowsGroups){if(merge.top>=group[0]&&merge.bottom<=group[group.length-1]){return true;}}
return false;}
isSingleCellOrMerge(sheetId,zone){const merge=this.getMerge({sheetId,col:zone.left,row:zone.top});if(merge){return isEqual(zone,merge);}
const{numberOfCols,numberOfRows}=zoneToDimension(zone);return numberOfCols===1&&numberOfRows===1;}
isMainCellPosition(position){return deepEquals(this.getMainCellPosition(position),position);}
isMergeDestructive(sheetId,zone){let{left,right,top,bottom}=zone;right=clip(right,0,this.getters.getNumberCols(sheetId)-1);bottom=clip(bottom,0,this.getters.getNumberRows(sheetId)-1);for(let row=top;row<=bottom;row++){for(let col=left;col<=right;col++){if(col!==left||row!==top){const cell=this.getters.getCell({sheetId,col,row});if(cell&&cell.content!==""){return true;}}}}
return false;}
getMergeById(sheetId,mergeId){const range=this.merges[sheetId]?.[mergeId];return range!==undefined?rangeToMerge(mergeId,range):undefined;}
checkDestructiveMerge({sheetId,target}){const sheet=this.getters.tryGetSheet(sheetId);if(!sheet)
return"Success";const isDestructive=target.some((zone)=>this.isMergeDestructive(sheetId,zone));return isDestructive?"MergeIsDestructive":"Success";}
checkOverlap({target}){for(const zone of target){for(const zone2 of target){if(zone!==zone2&&overlap(zone,zone2)){return"MergeOverlap";}}}
return"Success";}
checkFrozenPanes({sheetId,target}){const sheet=this.getters.tryGetSheet(sheetId);if(!sheet)
return"Success";const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);if(doesAnyZoneCrossFrozenPane(target,xSplit,ySplit)){return"FrozenPaneOverlap";}
return"Success";}
checkMergedContentUpdate(cmd){const{col,row,content}=cmd;if(content===undefined){return"Success";}
const{col:mainCol,row:mainRow}=this.getMainCellPosition(cmd);if(mainCol===col&&mainRow===row){return"Success";}
return"CellIsMerged";}
checkMergeExists(cmd){const{sheetId,target}=cmd;for(const zone of target){const{left,top}=zone;const merge=this.getMerge({sheetId,col:left,row:top});if(merge===undefined||!isEqual(zone,merge)){return"InvalidTarget";}}
return"Success";}
addMerge(sheetId,zone){let{left,right,top,bottom}=zone;right=clip(right,0,this.getters.getNumberCols(sheetId)-1);bottom=clip(bottom,0,this.getters.getNumberRows(sheetId)-1);const tl=toXC(left,top);const br=toXC(right,bottom);if(tl===br){return;}
const topLeft=this.getters.getCell({sheetId,col:left,row:top});const id=this.nextId++;this.history.update("merges",sheetId,id,this.getters.getRangeFromSheetXC(sheetId,zoneToXc({left,top,right,bottom})));const previousMerges=new Set();for(let row=top;row<=bottom;row++){for(let col=left;col<=right;col++){if(col!==left||row!==top){this.dispatch("UPDATE_CELL",{sheetId,col,row,style:topLeft?topLeft.style:null,content:"",});}
const merge=this.getMerge({sheetId,col,row});if(merge){previousMerges.add(merge.id);}
this.history.update("mergeCellMap",sheetId,col,row,id);}}
for(const mergeId of previousMerges){const{top,bottom,left,right}=this.getMergeById(sheetId,mergeId);for(let row=top;row<=bottom;row++){for(let col=left;col<=right;col++){const position={sheetId,col,row};const merge=this.getMerge(position);if(!merge||merge.id!==id){this.history.update("mergeCellMap",sheetId,col,row,undefined);this.dispatch("CLEAR_CELL",position);}}}
this.history.update("merges",sheetId,mergeId,undefined);}}
removeMerge(sheetId,zone){const{left,top,bottom,right}=zone;const merge=this.getMerge({sheetId,col:left,row:top});if(merge===undefined||!isEqual(zone,merge)){return;}
this.history.update("merges",sheetId,merge.id,undefined);for(let r=top;r<=bottom;r++){for(let c=left;c<=right;c++){this.history.update("mergeCellMap",sheetId,c,r,undefined);}}}
applyRangeChangeOnSheet(sheetId,applyChange){const merges=Object.entries(this.merges[sheetId]||{});for(const[mergeId,range]of merges){if(range){const currentZone=range.zone;const result=applyChange(range);switch(result.changeType){case"NONE":break;case"REMOVE":this.removeMerge(sheetId,currentZone);break;default:const{numberOfCols,numberOfRows}=zoneToDimension(result.range.zone);if(numberOfCols===1&&numberOfRows===1){this.removeMerge(sheetId,currentZone);}
else{this.history.update("merges",sheetId,parseInt(mergeId,10),result.range);}
break;}}}
this.history.update("mergeCellMap",sheetId,{});for(const merge of this.getMerges(sheetId)){for(const{col,row}of positions(merge)){this.history.update("mergeCellMap",sheetId,col,row,merge.id);}}}
import(data){const sheets=data.sheets||[];for(const sheetData of sheets){this.history.update("merges",sheetData.id,{});this.history.update("mergeCellMap",sheetData.id,{});if(sheetData.merges){this.importMerges(sheetData.id,sheetData.merges);}}}
importMerges(sheetId,merges){for(const merge of merges){this.addMerge(sheetId,toZone(merge));}}
export(data){for(const sheetData of data.sheets){const merges=this.merges[sheetData.id];if(merges){sheetData.merges.push(...exportMerges(merges));}}}
exportForExcel(data){this.export(data);}}
function exportMerges(merges){return Object.entries(merges).map(([mergeId,range])=>(range?rangeToMerge(parseInt(mergeId,10),range):undefined)).filter(isDefined).map((merge)=>toXC(merge.left,merge.top)+":"+toXC(merge.right,merge.bottom));}
function rangeToMerge(mergeId,range){return{...range.zone,id:mergeId,};}
class RangeAdapter{getters;providers=[];constructor(getters){this.getters=getters;}
static getters=["adaptFormulaStringDependencies","copyFormulaStringForSheet","extendRange","getRangeString","getRangeFromSheetXC","createAdaptedRanges","getRangeData","getRangeDataFromXc","getRangeDataFromZone","getRangeFromRangeData","getRangeFromZone","getRangesUnion","recomputeRanges","isRangeValid","removeRangesSheetPrefix",];allowDispatch(cmd){if(cmd.type==="MOVE_RANGES"){return cmd.target.length===1?"Success":"InvalidZones";}
return"Success";}
beforeHandle(command){}
handle(cmd){const rangeAdapter=getRangeAdapter(cmd);if(rangeAdapter?.applyChange){this.executeOnAllRanges(rangeAdapter.applyChange,rangeAdapter.sheetId,rangeAdapter.sheetName);}}
finalize(){}
verifyRangeRemoved(adaptRange){return(range)=>{const result=adaptRange(range);if(result.changeType!=="NONE"&&!isZoneValid(result.range.zone)){return{range:result.range,changeType:"REMOVE"};}
return result;};}
executeOnAllRanges(adaptRange,sheetId,sheetName){const func=this.verifyRangeRemoved(adaptRange);for(const provider of this.providers){provider(func,sheetId,sheetName);}}
addRangeProvider(provider){this.providers.push(provider);}
createAdaptedRanges(ranges,offsetX,offsetY,sheetId){return ranges.map((range)=>{if(!isZoneValid(range.zone)){return range;}
const copySheetId=range.prefixSheet?range.sheetId:sheetId;const isFullRow=isFullRowRange(range);const isFullCol=isFullColRange(range);const unboundZone={...range.unboundedZone,left:isFullRow&&!range.unboundedZone.hasHeader?range.unboundedZone.left:range.unboundedZone.left+(range.parts[0].colFixed?0:offsetX),right:isFullRow?range.unboundedZone.right:range.unboundedZone.right+
((range.parts[1]||range.parts[0]).colFixed?0:offsetX),top:isFullCol&&!range.unboundedZone.hasHeader?range.unboundedZone.top:range.unboundedZone.top+(range.parts[0].rowFixed?0:offsetY),bottom:isFullCol?range.unboundedZone.bottom:range.unboundedZone.bottom+
((range.parts[1]||range.parts[0]).rowFixed?0:offsetY),};return orderRange(createRange({...range,sheetId:copySheetId,zone:unboundZone},this.getters.getSheetSize));});}
removeRangesSheetPrefix(sheetId,ranges){return ranges.map((range)=>{if(range.prefixSheet&&range.sheetId===sheetId){return{...range,prefixSheet:false};}
return range;});}
extendRange(range,dimension,quantity){const right=dimension==="COL"?range.zone.right+quantity:range.zone.right;const bottom=dimension==="ROW"?range.zone.bottom+quantity:range.zone.bottom;const unboundedZone={left:range.zone.left,top:range.zone.top,right:isFullRowRange(range)?undefined:right,bottom:isFullColRange(range)?undefined:bottom,};return createRange({...range,zone:unboundedZone},this.getters.getSheetSize);}
getRangeFromSheetXC(defaultSheetId,sheetXC){if(!rangeReference.test(sheetXC)||!this.getters.tryGetSheet(defaultSheetId)){return createInvalidRange(sheetXC);}
const{sheetName}=splitReference(sheetXC);const sheetId=this.getters.getSheetIdByName(sheetName)||defaultSheetId;const invalidSheetName=sheetName&&!this.getters.getSheetIdByName(sheetName)?sheetName:undefined;return createRangeFromXc({xc:sheetXC,sheetId,invalidSheetName},this.getters.getSheetSize);}
getRangeString(range,forSheetId,options={useBoundedReference:false,useFixedReference:false}){if(!range){return CellErrorType.InvalidReference;}
if(range.invalidXc){return range.invalidXc;}
if(!this.getters.tryGetSheet(range.sheetId)){return CellErrorType.InvalidReference;}
return getRangeString(range,forSheetId,this.getters.getSheetName,options);}
getRangeDataFromXc(sheetId,xc){const range=this.getters.getRangeFromSheetXC(sheetId,xc);return this.getRangeDataFromZone(range.sheetId,range.unboundedZone);}
getRangeDataFromZone(sheetId,zone){zone=this.getters.getUnboundedZone(sheetId,zone);return{_sheetId:sheetId,_zone:zone};}
getRangeData(range){return this.getRangeDataFromZone(range.sheetId,range.unboundedZone);}
getRangeFromZone(sheetId,zone){return createRange({sheetId,zone,parts:[{colFixed:false,rowFixed:false},{colFixed:false,rowFixed:false},],prefixSheet:false,},this.getters.getSheetSize);}
recomputeRanges(ranges,rangesToRemove){const zones=ranges.map((range)=>range.unboundedZone);const zonesToRemove=rangesToRemove.map((range)=>range.unboundedZone);return recomputeZones(zones,zonesToRemove).map((zone)=>this.getRangeFromZone(ranges[0].sheetId,zone));}
getRangeFromRangeData(data){if(!this.getters.tryGetSheet(data._sheetId)){return createInvalidRange(CellErrorType.InvalidReference);}
const rangeInterface={prefixSheet:false,zone:data._zone,sheetId:data._sheetId,invalidSheetName:undefined,parts:[{colFixed:false,rowFixed:false},{colFixed:false,rowFixed:false},],};return createRange(rangeInterface,this.getters.getSheetSize);}
isRangeValid(rangeStr){if(!rangeStr){return false;}
const{xc,sheetName}=splitReference(rangeStr);return(xc.match(rangeReference)!==null&&(!sheetName||this.getters.getSheetIdByName(sheetName)!==undefined));}
getRangesUnion(ranges){const zones=ranges.map((range)=>range.unboundedZone);const unionOfZones=unionUnboundedZones(...zones);return this.getRangeFromZone(ranges[0].sheetId,unionOfZones);}
adaptFormulaStringDependencies(sheetId,formula,applyChange){if(!formula.startsWith("=")){return formula;}
const compiledFormula=compile(formula);const updatedDependencies=compiledFormula.dependencies.map((dep)=>{const range=this.getters.getRangeFromSheetXC(sheetId,dep);const changedRange=applyChange(range);return changedRange.changeType==="NONE"?range:changedRange.range;});return this.getters.getFormulaString(sheetId,compiledFormula.tokens,updatedDependencies);}
copyFormulaStringForSheet(sheetIdFrom,sheetIdTo,formula,mode){if(!formula.startsWith("=")){return formula;}
const compiledFormula=compile(formula);const updatedDependencies=compiledFormula.dependencies.map((dep)=>{const range=this.getters.getRangeFromSheetXC(sheetIdFrom,dep);return mode==="keepSameReference"?range:duplicateRangeInDuplicatedSheet(sheetIdFrom,sheetIdTo,range);});return this.getters.getFormulaString(sheetIdTo,compiledFormula.tokens,updatedDependencies);}}
class SheetPlugin extends CorePlugin{static getters=["getSheetName","tryGetSheetName","getSheet","tryGetSheet","getSheetIdByName","getSheetIds","getVisibleSheetIds","isSheetVisible","doesHeaderExist","doesHeadersExist","getCell","getCellPosition","getColsZone","getRowCells","getRowsZone","getNumberCols","getNumberRows","getNumberHeaders","getGridLinesVisibility","getNextSheetName","getSheetSize","getSheetZone","getPaneDivisions","checkZonesExistInSheet","getCommandZones","getUnboundedZone","checkElementsIncludeAllNonFrozenHeaders","getDuplicateSheetName",];sheetIdsMapName={};orderedSheetIds=[];sheets={};cellPosition={};allowDispatch(cmd){const genericChecks=this.chainValidations(this.checkSheetExists,this.checkZonesAreInSheet)(cmd);if(genericChecks!=="Success"){return genericChecks;}
switch(cmd.type){case"HIDE_SHEET":{if(this.getVisibleSheetIds().length===1){return"NotEnoughSheets";}
return"Success";}
case"CREATE_SHEET":{return this.checkValidations(cmd,this.checkSheetName,this.checkSheetPosition);}
case"DUPLICATE_SHEET":{if(this.sheets[cmd.sheetIdTo])
return"DuplicatedSheetId";if(this.orderedSheetIds.map(this.getSheetName.bind(this)).includes(cmd.sheetNameTo))
return"DuplicatedSheetName";return"Success";}
case"MOVE_SHEET":try{const currentIndex=this.orderedSheetIds.findIndex((id)=>id===cmd.sheetId);this.findIndexOfTargetSheet(currentIndex,cmd.delta);return"Success";}
catch(e){return"WrongSheetMove";}
case"RENAME_SHEET":return this.isRenameAllowed(cmd);case"COLOR_SHEET":return!cmd.color||isColorValid(cmd.color)?"Success":"InvalidColor";case"DELETE_SHEET":return this.getVisibleSheetIds().length>1?"Success":"NotEnoughSheets";case"ADD_COLUMNS_ROWS":if(!this.doesHeaderExist(cmd.sheetId,cmd.dimension,cmd.base)){return"InvalidHeaderIndex";}
else if(cmd.quantity<=0){return"InvalidQuantity";}
return"Success";case"REMOVE_COLUMNS_ROWS":{const min=largeMin(cmd.elements);const max=largeMax(cmd.elements);if(min<0||!this.doesHeaderExist(cmd.sheetId,cmd.dimension,max)){return"InvalidHeaderIndex";}
else if(this.checkElementsIncludeAllNonFrozenHeaders(cmd.sheetId,cmd.dimension,cmd.elements)){return"NotEnoughElements";}
else{return"Success";}}
case"FREEZE_ROWS":{return this.checkValidations(cmd,this.checkRowFreezeQuantity,this.checkRowFreezeOverlapMerge);}
case"FREEZE_COLUMNS":{return this.checkValidations(cmd,this.checkColFreezeQuantity,this.checkColFreezeOverlapMerge);}
default:return"Success";}}
handle(cmd){switch(cmd.type){case"SET_GRID_LINES_VISIBILITY":this.setGridLinesVisibility(cmd.sheetId,cmd.areGridLinesVisible);break;case"CREATE_SHEET":const sheet=this.createSheet(cmd.sheetId,cmd.name||this.getNextSheetName(),cmd.cols||26,cmd.rows||100,cmd.position);this.history.update("sheetIdsMapName",sheet.name,sheet.id);break;case"MOVE_SHEET":this.moveSheet(cmd.sheetId,cmd.delta);break;case"RENAME_SHEET":this.renameSheet(this.sheets[cmd.sheetId],cmd.newName);break;case"COLOR_SHEET":this.history.update("sheets",cmd.sheetId,"color",cmd.color);break;case"HIDE_SHEET":this.hideSheet(cmd.sheetId);break;case"SHOW_SHEET":this.showSheet(cmd.sheetId);break;case"DUPLICATE_SHEET":this.duplicateSheet(cmd.sheetId,cmd.sheetIdTo,cmd.sheetNameTo);break;case"DELETE_SHEET":this.deleteSheet(this.sheets[cmd.sheetId]);break;case"REMOVE_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.removeColumns(this.sheets[cmd.sheetId],[...cmd.elements]);}
else{this.removeRows(this.sheets[cmd.sheetId],[...cmd.elements]);}
break;case"ADD_COLUMNS_ROWS":if(cmd.dimension==="COL"){this.addColumns(this.sheets[cmd.sheetId],cmd.base,cmd.position,cmd.quantity);}
else{this.addRows(this.sheets[cmd.sheetId],cmd.base,cmd.position,cmd.quantity);}
break;case"UPDATE_CELL_POSITION":this.updateCellPosition(cmd);break;case"FREEZE_COLUMNS":this.setPaneDivisions(cmd.sheetId,cmd.quantity,"COL");break;case"FREEZE_ROWS":this.setPaneDivisions(cmd.sheetId,cmd.quantity,"ROW");break;case"UNFREEZE_ROWS":this.setPaneDivisions(cmd.sheetId,0,"ROW");break;case"UNFREEZE_COLUMNS":this.setPaneDivisions(cmd.sheetId,0,"COL");break;case"UNFREEZE_COLUMNS_ROWS":this.setPaneDivisions(cmd.sheetId,0,"COL");this.setPaneDivisions(cmd.sheetId,0,"ROW");}}
import(data){for(const sheet of data.sheets){this.sheetIdsMapName[sheet.name]=sheet.id;}
for(const sheetData of data.sheets){const name=sheetData.name||"Sheet"+(Object.keys(this.sheets).length+1);const{colNumber,rowNumber}=this.getImportedSheetSize(sheetData);const sheet={id:sheetData.id,name:name,numberOfCols:colNumber,rows:createDefaultRows(rowNumber),areGridLinesVisible:sheetData.areGridLinesVisible===undefined?true:sheetData.areGridLinesVisible,isVisible:sheetData.isVisible,panes:{xSplit:sheetData.panes?.xSplit||0,ySplit:sheetData.panes?.ySplit||0,},color:sheetData.color,};this.orderedSheetIds.push(sheet.id);this.sheets[sheet.id]=sheet;}}
exportSheets(data){data.sheets=this.orderedSheetIds.filter(isDefined).map((id)=>{const sheet=this.sheets[id];const sheetData={id:sheet.id,name:sheet.name,colNumber:sheet.numberOfCols,rowNumber:this.getters.getNumberRows(sheet.id),rows:{},cols:{},merges:[],cells:{},styles:{},formats:{},borders:{},conditionalFormats:[],dataValidationRules:[],figures:[],tables:[],areGridLinesVisible:sheet.areGridLinesVisible===undefined?true:sheet.areGridLinesVisible,isVisible:sheet.isVisible,color:sheet.color,};if(sheet.panes.xSplit||sheet.panes.ySplit){sheetData.panes=sheet.panes;}
return sheetData;});}
export(data){this.exportSheets(data);}
exportForExcel(data){this.exportSheets(data);}
getGridLinesVisibility(sheetId){return this.getSheet(sheetId).areGridLinesVisible;}
tryGetSheet(sheetId){return this.sheets[sheetId];}
getSheet(sheetId){const sheet=this.sheets[sheetId];if(!sheet){throw new Error(`Sheet ${sheetId} not found.`);}
return sheet;}
isSheetVisible(sheetId){return this.getSheet(sheetId).isVisible;}
getSheetName(sheetId){return this.getSheet(sheetId).name;}
tryGetSheetName(sheetId){return this.tryGetSheet(sheetId)?.name;}
getSheetIdByName(name){if(name){const unquotedName=getUnquotedSheetName(name);for(const key in this.sheetIdsMapName){if(isSheetNameEqual(key,unquotedName)){return this.sheetIdsMapName[key];}}}
return undefined;}
getSheetIds(){return this.orderedSheetIds;}
getVisibleSheetIds(){return this.orderedSheetIds.filter(this.isSheetVisible.bind(this));}
doesHeaderExist(sheetId,dimension,index){return dimension==="COL"?index>=0&&index<this.getNumberCols(sheetId):index>=0&&index<this.getNumberRows(sheetId);}
doesHeadersExist(sheetId,dimension,headerIndexes){return headerIndexes.every((index)=>this.doesHeaderExist(sheetId,dimension,index));}
getCell({sheetId,col,row}){const sheet=this.tryGetSheet(sheetId);const cellId=sheet?.rows[row]?.cells[col];if(cellId===undefined){return undefined;}
return this.getters.getCellById(cellId);}
getColsZone(sheetId,start,end){return{top:0,bottom:this.getNumberRows(sheetId)-1,left:start,right:end,};}
getRowCells(sheetId,row){return Object.values(this.getSheet(sheetId).rows[row]?.cells).filter(isDefined);}
getRowsZone(sheetId,start,end){return{top:start,bottom:end,left:0,right:this.getSheet(sheetId).numberOfCols-1,};}
getCellPosition(cellId){const cell=this.cellPosition[cellId];if(!cell){throw new Error(`asking for a cell position that doesn't exist, cell id: ${cellId}`);}
return cell;}
getNumberCols(sheetId){return this.getSheet(sheetId).numberOfCols;}
getNumberRows(sheetId){return this.getSheet(sheetId).rows.length;}
getNumberHeaders(sheetId,dimension){return dimension==="COL"?this.getNumberCols(sheetId):this.getNumberRows(sheetId);}
getNextSheetName(baseName="Sheet"){const names=this.orderedSheetIds.map(this.getSheetName.bind(this));return getNextSheetName(names,baseName);}
getSheetSize(sheetId){return{numberOfRows:this.getNumberRows(sheetId),numberOfCols:this.getNumberCols(sheetId),};}
getSheetZone(sheetId){return{top:0,left:0,bottom:this.getNumberRows(sheetId)-1,right:this.getNumberCols(sheetId)-1,};}
getUnboundedZone(sheetId,zone){if(zone.bottom===undefined||zone.right===undefined){return zone;}
const isFullRow=zone.left===0&&zone.right===this.getNumberCols(sheetId)-1;const isFullCol=zone.top===0&&zone.bottom===this.getNumberRows(sheetId)-1;return{...zone,bottom:isFullCol?undefined:zone.bottom,right:isFullRow&&!isFullCol?undefined:zone.right,};}
getPaneDivisions(sheetId){return this.getSheet(sheetId).panes;}
setPaneDivisions(sheetId,base,dimension){const panes={...this.getPaneDivisions(sheetId)};if(dimension==="COL"){panes.xSplit=base;}
else if(dimension==="ROW"){panes.ySplit=base;}
this.history.update("sheets",sheetId,"panes",panes);}
checkElementsIncludeAllNonFrozenHeaders(sheetId,dimension,elements){const paneDivisions=this.getters.getPaneDivisions(sheetId);const startIndex=dimension==="ROW"?paneDivisions.ySplit:paneDivisions.xSplit;const endIndex=this.getters.getNumberHeaders(sheetId,dimension);if(!startIndex){return false;}
const indicesToCheck=range(startIndex,endIndex);return includesAll(elements,indicesToCheck);}
getCommandZones(cmd){const zones=[];if("zone"in cmd){zones.push(cmd.zone);}
if("target"in cmd){zones.push(...cmd.target);}
if("ranges"in cmd){zones.push(...cmd.ranges.map((rangeData)=>this.getters.getRangeFromRangeData(rangeData).zone));}
if("col"in cmd&&cmd.col!==undefined&&"row"in cmd&&cmd.row!==undefined){zones.push({top:cmd.row,left:cmd.col,bottom:cmd.row,right:cmd.col});}
return zones;}
checkZonesExistInSheet(sheetId,zones){if(!zones.every(isZoneValid))
return"InvalidRange";if(zones.length){const sheetZone=this.getSheetZone(sheetId);return zones.every((zone)=>isZoneInside(zone,sheetZone))?"Success":"TargetOutOfSheet";}
return"Success";}
updateCellPosition(cmd){const{sheetId,cellId,col,row}=cmd;if(cellId){this.setNewPosition(cellId,sheetId,col,row);}
else{this.clearPosition(sheetId,col,row);}}
setNewPosition(cellId,sheetId,col,row){const currentPosition=this.cellPosition[cellId];if(currentPosition){this.clearPosition(sheetId,currentPosition.col,currentPosition.row);}
this.history.update("cellPosition",cellId,{row:row,col:col,sheetId:sheetId,});this.history.update("sheets",sheetId,"rows",row,"cells",col,cellId);}
clearPosition(sheetId,col,row){const cellId=this.sheets[sheetId]?.rows[row].cells[col];if(cellId){this.history.update("cellPosition",cellId,undefined);this.history.update("sheets",sheetId,"rows",row,"cells",col,undefined);}}
setGridLinesVisibility(sheetId,areGridLinesVisible){this.history.update("sheets",sheetId,"areGridLinesVisible",areGridLinesVisible);}
createSheet(id,name,colNumber,rowNumber,position){const sheet={id,name,numberOfCols:colNumber,rows:createDefaultRows(rowNumber),areGridLinesVisible:true,isVisible:true,panes:{xSplit:0,ySplit:0,},};const orderedSheetIds=this.orderedSheetIds.slice();orderedSheetIds.splice(position,0,sheet.id);const sheets=this.sheets;this.history.update("orderedSheetIds",orderedSheetIds);this.history.update("sheets",Object.assign({},sheets,{[sheet.id]:sheet}));return sheet;}
moveSheet(sheetId,delta){const orderedSheetIds=this.orderedSheetIds.slice();const currentIndex=orderedSheetIds.findIndex((id)=>id===sheetId);const sheet=orderedSheetIds.splice(currentIndex,1);const index=this.findIndexOfTargetSheet(currentIndex,delta);orderedSheetIds.splice(index,0,sheet[0]);this.history.update("orderedSheetIds",orderedSheetIds);}
findIndexOfTargetSheet(currentIndex,deltaIndex){while(deltaIndex!==0&&0<=currentIndex&&currentIndex<=this.orderedSheetIds.length){if(deltaIndex>0){currentIndex++;if(this.isSheetVisible(this.orderedSheetIds[currentIndex])){deltaIndex--;}}
else if(deltaIndex<0){currentIndex--;if(this.isSheetVisible(this.orderedSheetIds[currentIndex])){deltaIndex++;}}}
if(deltaIndex===0){return currentIndex;}
throw new Error("There is not enough visible sheets");}
checkSheetName(cmd){const originalSheetName=this.getters.tryGetSheetName(cmd.sheetId);const sheetName=cmd.type==="RENAME_SHEET"?cmd.newName:cmd.name;if(originalSheetName!==undefined&&sheetName===originalSheetName){return"UnchangedSheetName";}
const{orderedSheetIds,sheets}=this;const name=sheetName&&sheetName.trim().toLowerCase();if(orderedSheetIds.find((id)=>isSheetNameEqual(sheets[id]?.name,name)&&id!==cmd.sheetId)){return"DuplicatedSheetName";}
if(FORBIDDEN_SHEETNAME_CHARS_IN_EXCEL_REGEX.test(name)){return"ForbiddenCharactersInSheetName";}
return"Success";}
checkSheetPosition(cmd){const{orderedSheetIds}=this;if(cmd.position>orderedSheetIds.length||cmd.position<0){return"WrongSheetPosition";}
return"Success";}
checkRowFreezeQuantity(cmd){return cmd.quantity>=1&&cmd.quantity<this.getNumberRows(cmd.sheetId)?"Success":"InvalidFreezeQuantity";}
checkColFreezeQuantity(cmd){return cmd.quantity>=1&&cmd.quantity<this.getNumberCols(cmd.sheetId)?"Success":"InvalidFreezeQuantity";}
checkRowFreezeOverlapMerge(cmd){const merges=this.getters.getMerges(cmd.sheetId);for(const merge of merges){if(merge.top<cmd.quantity&&cmd.quantity<=merge.bottom){return"MergeOverlap";}}
return"Success";}
checkColFreezeOverlapMerge(cmd){const merges=this.getters.getMerges(cmd.sheetId);for(const merge of merges){if(merge.left<cmd.quantity&&cmd.quantity<=merge.right){return"MergeOverlap";}}
return"Success";}
isRenameAllowed(cmd){const name=cmd.newName&&cmd.newName.trim().toLowerCase();if(!name){return"MissingSheetName";}
return this.checkSheetName(cmd);}
renameSheet(sheet,name){const oldName=sheet.name;this.history.update("sheets",sheet.id,"name",name.trim());const sheetIdsMapName=Object.assign({},this.sheetIdsMapName);delete sheetIdsMapName[oldName];sheetIdsMapName[name]=sheet.id;this.history.update("sheetIdsMapName",sheetIdsMapName);}
hideSheet(sheetId){this.history.update("sheets",sheetId,"isVisible",false);}
showSheet(sheetId){this.history.update("sheets",sheetId,"isVisible",true);}
duplicateSheet(fromId,toId,toName){const sheet=this.getSheet(fromId);const newSheet=deepCopy(sheet);newSheet.id=toId;newSheet.name=toName;for(let col=0;col<=newSheet.numberOfCols;col++){for(let row=0;row<=newSheet.rows.length;row++){if(newSheet.rows[row]){newSheet.rows[row].cells[col]=undefined;}}}
const orderedSheetIds=this.orderedSheetIds.slice();const currentIndex=orderedSheetIds.indexOf(fromId);orderedSheetIds.splice(currentIndex+1,0,newSheet.id);this.history.update("orderedSheetIds",orderedSheetIds);this.history.update("sheets",Object.assign({},this.sheets,{[newSheet.id]:newSheet}));for(const cell of Object.values(this.getters.getCells(fromId))){const{col,row}=this.getCellPosition(cell.id);this.dispatch("UPDATE_CELL",{sheetId:newSheet.id,col,row,content:cell.content,format:cell.format,style:cell.style,});}
const sheetIdsMapName=Object.assign({},this.sheetIdsMapName);sheetIdsMapName[newSheet.name]=newSheet.id;this.history.update("sheetIdsMapName",sheetIdsMapName);}
getDuplicateSheetName(sheetName){const names=this.orderedSheetIds.map(this.getSheetName.bind(this));return getDuplicateSheetName(sheetName,names);}
deleteSheet(sheet){const name=sheet.name;const sheets=Object.assign({},this.sheets);delete sheets[sheet.id];this.history.update("sheets",sheets);const orderedSheetIds=this.orderedSheetIds.slice();const currentIndex=orderedSheetIds.indexOf(sheet.id);orderedSheetIds.splice(currentIndex,1);this.history.update("orderedSheetIds",orderedSheetIds);const sheetIdsMapName=Object.assign({},this.sheetIdsMapName);delete sheetIdsMapName[name];this.history.update("sheetIdsMapName",sheetIdsMapName);}
removeColumns(sheet,columns){columns.sort((a,b)=>b-a);for(const column of columns){this.moveCellOnColumnsDeletion(sheet,column);}
const numberOfCols=this.sheets[sheet.id].numberOfCols;this.history.update("sheets",sheet.id,"numberOfCols",numberOfCols-columns.length);const count=columns.filter((col)=>col<sheet.panes.xSplit).length;if(count){this.setPaneDivisions(sheet.id,sheet.panes.xSplit-count,"COL");}}
removeRows(sheet,rows){rows.sort((a,b)=>b-a);for(const group of groupConsecutive(rows)){const from=group[group.length-1];const to=group[0];this.moveCellOnRowsDeletion(sheet,from,to);this.updateRowsStructureOnDeletion(sheet,from,to);}
const count=rows.filter((row)=>row<sheet.panes.ySplit).length;if(count){this.setPaneDivisions(sheet.id,sheet.panes.ySplit-count,"ROW");}}
addColumns(sheet,column,position,quantity){const index=position==="before"?column:column+1;this.moveCellsOnAddition(sheet,index,quantity,"columns");const numberOfCols=this.sheets[sheet.id].numberOfCols;this.history.update("sheets",sheet.id,"numberOfCols",numberOfCols+quantity);if(index<sheet.panes.xSplit){this.setPaneDivisions(sheet.id,sheet.panes.xSplit+quantity,"COL");}}
addRows(sheet,row,position,quantity){const index=position==="before"?row:row+1;this.addEmptyRows(sheet,quantity);this.moveCellsOnAddition(sheet,index,quantity,"rows");if(index<sheet.panes.ySplit){this.setPaneDivisions(sheet.id,sheet.panes.ySplit+quantity,"ROW");}}
moveCellOnColumnsDeletion(sheet,deletedColumn){this.dispatch("CLEAR_CELLS",{sheetId:sheet.id,target:[{left:deletedColumn,top:0,right:deletedColumn,bottom:sheet.rows.length-1,},],});for(let rowIndex=0;rowIndex<sheet.rows.length;rowIndex++){const row=sheet.rows[rowIndex];for(const i in row.cells){const colIndex=Number(i);const cellId=row.cells[i];if(cellId){if(colIndex>deletedColumn){this.setNewPosition(cellId,sheet.id,colIndex-1,rowIndex);}}}}}
moveCellsOnAddition(sheet,addedElement,quantity,dimension){const updates=[];for(let rowIndex=0;rowIndex<sheet.rows.length;rowIndex++){const row=sheet.rows[rowIndex];if(dimension!=="rows"||rowIndex>=addedElement){for(const i in row.cells){const colIndex=Number(i);const cellId=row.cells[i];if(cellId){if(dimension==="rows"||colIndex>=addedElement){updates.push({sheetId:sheet.id,cellId:cellId,col:colIndex+(dimension==="columns"?quantity:0),row:rowIndex+(dimension==="rows"?quantity:0),type:"UPDATE_CELL_POSITION",});}}}}}
for(const update of updates.reverse()){this.updateCellPosition(update);}}
moveCellOnRowsDeletion(sheet,deleteFromRow,deleteToRow){this.dispatch("CLEAR_CELLS",{sheetId:sheet.id,target:[{left:0,top:deleteFromRow,right:this.getters.getNumberCols(sheet.id),bottom:deleteToRow,},],});const numberRows=deleteToRow-deleteFromRow+1;for(let rowIndex=0;rowIndex<sheet.rows.length;rowIndex++){const row=sheet.rows[rowIndex];if(rowIndex>deleteToRow){for(const i in row.cells){const colIndex=Number(i);const cellId=row.cells[i];if(cellId){this.setNewPosition(cellId,sheet.id,colIndex,rowIndex-numberRows);}}}}}
updateRowsStructureOnDeletion(sheet,deleteFromRow,deleteToRow){const rows=[];const cellsQueue=sheet.rows.map((row)=>row.cells).reverse();for(const i in sheet.rows){const row=Number(i);if(row>=deleteFromRow&&row<=deleteToRow){continue;}
rows.push({cells:cellsQueue.pop(),});}
this.history.update("sheets",sheet.id,"rows",rows);}
addEmptyRows(sheet,quantity){const rows=sheet.rows.slice();for(let i=0;i<quantity;i++){rows.push({cells:{},});}
this.history.update("sheets",sheet.id,"rows",rows);}
getImportedSheetSize(data){const positions=Object.keys(data.cells).map(toCartesian);let rowNumber=data.rowNumber;let colNumber=data.colNumber;for(const{col,row}of positions){rowNumber=Math.max(rowNumber,row+1);colNumber=Math.max(colNumber,col+1);}
return{rowNumber,colNumber};}
checkSheetExists(cmd){if(cmd.type!=="CREATE_SHEET"&&"sheetId"in cmd&&this.sheets[cmd.sheetId]===undefined){return"InvalidSheetId";}
else if(cmd.type==="CREATE_SHEET"&&this.sheets[cmd.sheetId]!==undefined){return"DuplicatedSheetId";}
return"Success";}
checkZonesAreInSheet(cmd){if(!("sheetId"in cmd))
return"Success";if("ranges"in cmd&&cmd.ranges.some((rangeData)=>rangeData._sheetId!==""&&!this.getters.tryGetSheet(rangeData._sheetId))){return"InvalidSheetId";}
return this.checkZonesExistInSheet(cmd.sheetId,this.getCommandZones(cmd));}}
class TablePlugin extends CorePlugin{static getters=["getCoreTable","getCoreTables","getCoreTableMatchingTopLeft"];tables={};nextTableId=1;adaptRanges(applyChange,sheetId,sheetName){const sheetIds=sheetId?[sheetId]:this.getters.getSheetIds();for(const sheetId of sheetIds){for(const table of this.getCoreTables(sheetId)){this.applyRangeChangeOnTable(sheetId,table,applyChange);}}}
allowDispatch(cmd){switch(cmd.type){case"CREATE_TABLE":if(cmd.ranges.some((rangeData)=>!this.getters.tryGetSheet(rangeData._sheetId)||rangeData._sheetId!==cmd.sheetId)){return"InvalidSheetId";}
const zones=cmd.ranges.map((rangeData)=>this.getters.getRangeFromRangeData(rangeData).zone);if(!areZonesContinuous(zones)){return"NonContinuousTargets";}
return this.checkValidations(cmd,(cmd)=>this.getTablesOverlappingZones(cmd.sheetId,zones).length?"TableOverlap":"Success",(cmd)=>this.checkTableConfigUpdateIsValid(cmd.config));case"UPDATE_TABLE":const updatedTable=this.getCoreTableMatchingTopLeft(cmd.sheetId,cmd.zone);if(!updatedTable){return"TableNotFound";}
return this.checkValidations(cmd,this.checkUpdatedTableZoneIsValid,(cmd)=>this.checkTableConfigUpdateIsValid(cmd.config));case"ADD_MERGE":for(const table of this.getCoreTables(cmd.sheetId)){const tableZone=table.range.zone;for(const merge of cmd.target){if(overlap(tableZone,merge)){return"MergeInTable";}}}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.history.update("tables",cmd.sheetId,{});break;case"DELETE_SHEET":{const tables={...this.tables};delete tables[cmd.sheetId];this.history.update("tables",tables);break;}
case"DUPLICATE_SHEET":{const newTables={};for(const table of this.getCoreTables(cmd.sheetId)){newTables[table.id]=table.type==="dynamic"?this.copyDynamicTableForSheet(cmd.sheetIdTo,table):this.copyStaticTableForSheet(cmd.sheetIdTo,table);}
this.history.update("tables",cmd.sheetIdTo,newTables);break;}
case"CREATE_TABLE":{const ranges=cmd.ranges.map((rangeData)=>this.getters.getRangeFromRangeData(rangeData));const union=this.getters.getRangesUnion(ranges);const mergesInTarget=this.getters.getMergesInZone(cmd.sheetId,union.zone);if(mergesInTarget.length){this.dispatch("REMOVE_MERGE",{sheetId:cmd.sheetId,target:mergesInTarget});}
const id=this.consumeNextId();const config=cmd.config||DEFAULT_TABLE_CONFIG;const newTable=cmd.tableType==="dynamic"?this.createDynamicTable(id,union,config):this.createStaticTable(id,cmd.tableType,union,config);this.history.update("tables",cmd.sheetId,newTable.id,newTable);break;}
case"REMOVE_TABLE":{const tables={};for(const table of this.getCoreTables(cmd.sheetId)){if(cmd.target.every((zone)=>!intersection(table.range.zone,zone))){tables[table.id]=table;}}
this.history.update("tables",cmd.sheetId,tables);break;}
case"UPDATE_TABLE":{this.updateTable(cmd);break;}
case"UPDATE_CELL":{const sheetId=cmd.sheetId;for(const table of this.getCoreTables(sheetId)){if(table.type==="dynamic"){continue;}
const direction=this.canUpdateCellCmdExtendTable(cmd,table);if(direction==="down"){this.extendTableDown(sheetId,table);}
else if(direction==="right"){this.extendTableRight(sheetId,table);}}
break;}
case"DELETE_CONTENT":{const tables={...this.tables[cmd.sheetId]};for(const tableId in tables){const table=tables[tableId];if(table&&cmd.target.some((zone)=>isZoneInside(table.range.zone,zone))){this.dispatch("REMOVE_TABLE",{sheetId:cmd.sheetId,target:[table.range.zone]});}}
break;}}}
getCoreTables(sheetId){return this.tables[sheetId]?Object.values(this.tables[sheetId]).filter(isDefined):[];}
getCoreTable({sheetId,col,row}){return this.getCoreTables(sheetId).find((table)=>isInside(col,row,table.range.zone));}
getTablesOverlappingZones(sheetId,zones){return this.getCoreTables(sheetId).filter((table)=>zones.some((zone)=>overlap(table.range.zone,zone)));}
extendTableDown(sheetId,table){const newRange=this.getters.extendRange(table.range,"ROW",1);this.history.update("tables",sheetId,table.id,this.updateStaticTable(table,newRange));}
extendTableRight(sheetId,table){const newRange=this.getters.extendRange(table.range,"COL",1);this.history.update("tables",sheetId,table.id,this.updateStaticTable(table,newRange));}
canUpdateCellCmdExtendTable({content:newCellContent,sheetId,col,row},table){if(!newCellContent){return"none";}
const zone=table.range.zone;let direction="none";if(zone.bottom+1===row&&col>=zone.left&&col<=zone.right){direction="down";}
else if(zone.right+1===col&&row>=zone.top&&row<=zone.bottom){direction="right";}
if(direction==="none"){return"none";}
const zoneToCheckIfEmpty=direction==="down"?{...zone,bottom:zone.bottom+1,top:zone.bottom+1}:{...zone,right:zone.right+1,left:zone.right+1};for(let row=zoneToCheckIfEmpty.top;row<=zoneToCheckIfEmpty.bottom;row++){for(let col=zoneToCheckIfEmpty.left;col<=zoneToCheckIfEmpty.right;col++){const cellPosition={sheetId,col,row};const cellContent=this.getters.getCell(cellPosition)?.content;if(cellContent||this.getters.isInMerge(cellPosition)||this.getTablesOverlappingZones(sheetId,[positionToZone(cellPosition)]).length){return"none";}}}
return direction;}
getCoreTableMatchingTopLeft(sheetId,zone){for(const table of this.getCoreTables(sheetId)){const tableZone=table.range.zone;if(tableZone.left===zone.left&&tableZone.top===zone.top){return table;}}
return undefined;}
checkUpdatedTableZoneIsValid(cmd){if(!cmd.newTableRange){return"Success";}
const newTableZone=this.getters.getRangeFromRangeData(cmd.newTableRange).zone;const zoneIsInSheet=this.getters.checkZonesExistInSheet(cmd.sheetId,[newTableZone]);if(zoneIsInSheet!=="Success"){return zoneIsInSheet;}
const updatedTable=this.getCoreTableMatchingTopLeft(cmd.sheetId,cmd.zone);if(!updatedTable){return"TableNotFound";}
const overlappingTables=this.getTablesOverlappingZones(cmd.sheetId,[newTableZone]).filter((table)=>table.id!==updatedTable.id);return overlappingTables.length?"TableOverlap":"Success";}
checkTableConfigUpdateIsValid(config){if(!config){return"Success";}
if(config.numberOfHeaders!==undefined&&config.numberOfHeaders<0){return"InvalidTableConfig";}
if(config.hasFilters&&config.numberOfHeaders===0){return"InvalidTableConfig";}
return"Success";}
createStaticTable(id,type,tableRange,config,filters){const zone=tableRange.zone;if(!filters){filters=[];for(const i of range(zone.left,zone.right+1)){const filterZone={...zone,left:i,right:i};const uid=this.consumeNextId();filters.push(this.createFilterFromZone(uid,tableRange.sheetId,filterZone,config));}}
return{id,range:tableRange,filters,config,type,};}
createDynamicTable(id,tableRange,config){const zone=zoneToTopLeft(tableRange.zone);return{id,range:this.getters.getRangeFromZone(tableRange.sheetId,zone),config,type:"dynamic",};}
updateTable(cmd){const table=this.getCoreTableMatchingTopLeft(cmd.sheetId,cmd.zone);if(!table){return;}
const newTableRange=cmd.newTableRange?this.getters.getRangeFromRangeData(cmd.newTableRange):undefined;if(newTableRange){const mergesInTarget=this.getters.getMergesInZone(cmd.sheetId,newTableRange.zone);this.dispatch("REMOVE_MERGE",{sheetId:cmd.sheetId,target:mergesInTarget});}
const range=newTableRange||table.range;const newConfig=this.updateTableConfig(cmd.config,table.config);const newTableType=cmd.tableType??table.type;if((newTableType==="dynamic"&&table.type!=="dynamic")||(newTableType!=="dynamic"&&table.type==="dynamic")){const newTable=newTableType==="dynamic"?this.createDynamicTable(table.id,range,newConfig):this.createStaticTable(table.id,newTableType,range,newConfig);this.history.update("tables",cmd.sheetId,table.id,newTable);}
else{const updatedTable=table.type==="dynamic"?this.updateDynamicTable(table,range,newConfig):this.updateStaticTable(table,range,newConfig,newTableType);this.history.update("tables",cmd.sheetId,table.id,updatedTable);}}
updateStaticTable(table,newRange,configUpdate,newTableType=table.type){if(newTableType==="dynamic"){throw new Error("Cannot use updateStaticTable to update a dynamic table");}
const tableRange=newRange?newRange:table.range;const tableZone=tableRange.zone;const newConfig=this.updateTableConfig(configUpdate,table.config);const config=newConfig?newConfig:table.config;const filters=[];if(newRange||(newConfig&&"numberOfHeaders"in newConfig)){for(const i of range(tableZone.left,tableZone.right+1)){const oldFilter=tableZone.top===table.range.zone.top?table.filters.find((f)=>f.col===i):undefined;const filterZone={...tableZone,left:i,right:i};const filterId=oldFilter?.id||this.consumeNextId();filters.push(this.createFilterFromZone(filterId,tableRange.sheetId,filterZone,config));}}
return{...table,range:tableRange,config,filters:filters.length?filters:table.filters,type:newTableType,};}
updateDynamicTable(table,newRange,newConfig){const range=newRange?this.getters.getRangeFromZone(newRange.sheetId,zoneToTopLeft(newRange.zone)):table.range;const config=newConfig?newConfig:table.config;return{...table,range,config};}
updateTableConfig(update,oldConfig){if(!update){return oldConfig;}
const saneConfig={...oldConfig,...update};if(update.numberOfHeaders===0){saneConfig.hasFilters=false;}
else if(update.hasFilters===true){saneConfig.numberOfHeaders||=1;}
return saneConfig;}
createFilterFromZone(id,sheetId,zone,config){const range=this.getters.getRangeFromZone(sheetId,zone);return createFilter(id,range,config,this.getters.getRangeFromZone);}
copyStaticTableForSheet(sheetId,table){const newRange=this.getters.getRangeFromZone(sheetId,table.range.zone);const newFilters=table.filters.map((filter)=>{const newFilterRange=this.getters.getRangeFromZone(sheetId,filter.rangeWithHeaders.zone);return createFilter(filter.id,newFilterRange,table.config,this.getters.getRangeFromZone);});return{id:table.id,range:newRange,filters:newFilters,config:deepCopy(table.config),type:table.type,};}
copyDynamicTableForSheet(sheetId,table){const newRange=this.getters.getRangeFromZone(sheetId,table.range.zone);return{id:table.id,range:newRange,config:deepCopy(table.config),type:"dynamic",};}
applyRangeChangeOnTable(sheetId,table,applyChange){const tableRangeChange=applyChange(table.range);let newTableRange;switch(tableRangeChange.changeType){case"REMOVE":this.history.update("tables",sheetId,table.id,undefined);return;case"NONE":return;default:newTableRange=tableRangeChange.range;}
if(table.type==="dynamic"){const newTable=this.updateDynamicTable(table,newTableRange);this.history.update("tables",sheetId,table.id,newTable);return;}
const filters=[];for(const filter of table.filters){const filterRangeChange=applyChange(filter.rangeWithHeaders);switch(filterRangeChange.changeType){case"REMOVE":continue;case"NONE":filters.push(filter);break;default:const newFilterRange=filterRangeChange.range;const newFilter=createFilter(filter.id,newFilterRange,table.config,this.getters.getRangeFromZone);filters.push(newFilter);}}
const tableZone=newTableRange.zone;if(filters.length<zoneToDimension(tableZone).numberOfCols){for(let col=tableZone.left;col<=tableZone.right;col++){if(!filters.find((filter)=>filter.col===col)){const uid=this.consumeNextId();const filterZone={...tableZone,left:col,right:col};filters.push(this.createFilterFromZone(uid,sheetId,filterZone,table.config));}}
filters.sort((f1,f2)=>f1.col-f2.col);}
const newTable=this.createStaticTable(table.id,table.type,newTableRange,table.config,filters);this.history.update("tables",sheetId,table.id,newTable);}
consumeNextId(){const id=`${this.nextTableId}`;this.history.update("nextTableId",this.nextTableId+1);return id;}
import(data){for(const sheet of data.sheets){for(const tableData of sheet.tables||[]){const uuid=this.consumeNextId();const tableConfig=tableData.config||DEFAULT_TABLE_CONFIG;const range=this.getters.getRangeFromSheetXC(sheet.id,tableData.range);const tableType=tableData.type||"static";const table=tableType==="dynamic"?this.createDynamicTable(uuid,range,tableConfig):this.createStaticTable(uuid,tableType,range,tableConfig);this.history.update("tables",sheet.id,table.id,table);}}}
export(data){for(const sheet of data.sheets){for(const table of this.getCoreTables(sheet.id)){const range=zoneToXc(table.range.zone);const tableData={range,type:table.type};if(!deepEquals(table.config,DEFAULT_TABLE_CONFIG)){tableData.config=table.config;}
sheet.tables.push(tableData);}}}
exportForExcel(data){for(const sheet of data.sheets){for(const table of this.getCoreTables(sheet.id)){const range=zoneToXc(table.range.zone);sheet.tables.push({range,filters:[],config:table.config});}}}}
class HeaderGroupingPlugin extends CorePlugin{static getters=["getHeaderGroups","getGroupsLayers","getVisibleGroupLayers","getHeaderGroup","getHeaderGroupsInZone","isGroupFolded","isRowFolded","isColFolded",];groups={};allowDispatch(cmd){switch(cmd.type){case"GROUP_HEADERS":{const{start,end,sheetId}=cmd;if(!this.getters.tryGetSheet(sheetId)){return"InvalidSheetId";}
if(!this.getters.doesHeadersExist(cmd.sheetId,cmd.dimension,[start,end])){return"InvalidHeaderGroupStartEnd";}
if(start>end){return"InvalidHeaderGroupStartEnd";}
if(this.findGroupWithStartEnd(cmd.sheetId,cmd.dimension,start,end)){return"HeaderGroupAlreadyExists";}
break;}
case"UNGROUP_HEADERS":{const{start,end,sheetId}=cmd;if(!this.getters.tryGetSheet(sheetId)){return"InvalidSheetId";}
if(!this.getters.doesHeadersExist(cmd.sheetId,cmd.dimension,[start,end])){return"InvalidHeaderGroupStartEnd";}
if(start>end){return"InvalidHeaderGroupStartEnd";}
break;}
case"UNFOLD_HEADER_GROUP":case"FOLD_HEADER_GROUP":if(!this.getters.tryGetSheet(cmd.sheetId)){return"InvalidSheetId";}
const group=this.findGroupWithStartEnd(cmd.sheetId,cmd.dimension,cmd.start,cmd.end);if(!group){return"UnknownHeaderGroup";}
const numberOfHeaders=this.getters.getNumberHeaders(cmd.sheetId,cmd.dimension);const willHideAllHeaders=range(0,numberOfHeaders).every((i)=>(i>=group.start&&i<=group.end)||this.getters.isHeaderHiddenByUser(cmd.sheetId,cmd.dimension,i));if(willHideAllHeaders){return"NotEnoughElements";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_SHEET":this.history.update("groups",cmd.sheetId,{ROW:[],COL:[]});break;case"GROUP_HEADERS":this.groupHeaders(cmd.sheetId,cmd.dimension,cmd.start,cmd.end);break;case"UNGROUP_HEADERS":{this.unGroupHeaders(cmd.sheetId,cmd.dimension,cmd.start,cmd.end);break;}
case"DUPLICATE_SHEET":{const groups=deepCopy(this.groups[cmd.sheetId]);this.history.update("groups",cmd.sheetIdTo,groups);break;}
case"DELETE_SHEET":{const groups={...this.groups};delete groups[cmd.sheetId];this.history.update("groups",groups);break;}
case"ADD_COLUMNS_ROWS":const addIndex=getAddHeaderStartIndex(cmd.position,cmd.base);this.moveGroupsOnHeaderInsertion(cmd.sheetId,cmd.dimension,addIndex,cmd.quantity);break;case"REMOVE_COLUMNS_ROWS":this.moveGroupsOnHeaderDeletion(cmd.sheetId,cmd.dimension,cmd.elements);break;case"UNFOLD_HEADER_GROUP":{const group=this.findGroupWithStartEnd(cmd.sheetId,cmd.dimension,cmd.start,cmd.end);if(group){this.unfoldHeaderGroup(cmd.sheetId,cmd.dimension,group);}
break;}
case"FOLD_HEADER_GROUP":{const group=this.findGroupWithStartEnd(cmd.sheetId,cmd.dimension,cmd.start,cmd.end);if(group){this.foldHeaderGroup(cmd.sheetId,cmd.dimension,group);}
break;}
case"UNFOLD_ALL_HEADER_GROUPS":{const groups=this.getters.getHeaderGroups(cmd.sheetId,cmd.dimension);for(const group of groups){this.unfoldHeaderGroup(cmd.sheetId,cmd.dimension,group);}
break;}
case"FOLD_ALL_HEADER_GROUPS":{const groups=this.getters.getHeaderGroups(cmd.sheetId,cmd.dimension);for(const group of groups){this.foldHeaderGroup(cmd.sheetId,cmd.dimension,group);}
break;}
case"FOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_HEADER_GROUPS_IN_ZONE":{const action=cmd.type==="UNFOLD_HEADER_GROUPS_IN_ZONE"?"unfold":"fold";const layers=this.getGroupsLayers(cmd.sheetId,cmd.dimension);if(action==="fold"){layers.reverse();}
const groups=layers.flat();const start=cmd.dimension==="ROW"?cmd.zone.top:cmd.zone.left;const end=cmd.dimension==="ROW"?cmd.zone.bottom:cmd.zone.right;const groupsToToggle=new Set();for(let header=start;header<=end;header++){const matchedGroups=groups.filter((g)=>g.start-1<=header&&header<=g.end);for(const group of matchedGroups){if((action==="fold"&&group.isFolded)||(action==="unfold"&&!group.isFolded)){continue;}
groupsToToggle.add(group);break;}}
for(const group of groupsToToggle){if(action==="unfold"){this.unfoldHeaderGroup(cmd.sheetId,cmd.dimension,group);}
else{this.foldHeaderGroup(cmd.sheetId,cmd.dimension,group);}}
break;}}}
getHeaderGroups(sheetId,dim){return this.groups[sheetId][dim];}
getHeaderGroup(sheetId,dim,start,end){return this.getHeaderGroups(sheetId,dim).find((group)=>group.start===start&&group.end===end);}
getHeaderGroupsInZone(sheetId,dim,zone){return this.getHeaderGroups(sheetId,dim).filter((group)=>{const start=dim==="ROW"?zone.top:zone.left;const end=dim==="ROW"?zone.bottom:zone.right;return this.doGroupOverlap(group,start,end);});}
getGroupsLayers(sheetId,dimension){const groups=this.getHeaderGroups(sheetId,dimension);return this.bricksFallingAlgorithm(groups,0,0);}
getVisibleGroupLayers(sheetId,dimension){const layers=this.getGroupsLayers(sheetId,dimension);for(const layer of layers){for(let k=layer.length-1;k>=0;k--){const group=layer[k];if(group.start===0){continue;}
const headersInGroup=range(group.start-1,group.end+1);if(headersInGroup.every((i)=>this.getters.isHeaderHiddenByUser(sheetId,dimension,i))){layer.splice(k,1);}}}
return layers.filter((layer)=>layer.length>0);}
isGroupFolded(sheetId,dimension,start,end){return this.getHeaderGroup(sheetId,dimension,start,end)?.isFolded||false;}
isRowFolded(sheetId,row){const groups=this.getters.getHeaderGroups(sheetId,"ROW");return groups.some((group)=>group.start<=row&&row<=group.end&&group.isFolded);}
isColFolded(sheetId,col){const groups=this.getters.getHeaderGroups(sheetId,"COL");return groups.some((group)=>group.start<=col&&col<=group.end&&group.isFolded);}
getGroupId(group){return`${group.start}-${group.end}}`;}
bricksFallingAlgorithm(groups,start,end,delta=0){const isGroupFolded={};for(const group of groups){isGroupFolded[this.getGroupId(group)]=group.isFolded;}
const brickPileSize={};for(const group of groups){for(let i=group.start;i<=group.end;i++){brickPileSize[i]=brickPileSize[i]?brickPileSize[i]+1:1;}}
for(let i=start;i<=end;i++){brickPileSize[i]=brickPileSize[i]?brickPileSize[i]+delta:delta;}
const numberOfLayers=Math.max(...Object.values(brickPileSize),0);const groupLayers=Array.from({length:numberOfLayers},()=>[]);const maxHeader=Math.max(end,...groups.map((group)=>group.end));const minHeader=Math.min(start,...groups.map((group)=>group.start));for(let header=minHeader;header<=maxHeader;header++){const pileSize=brickPileSize[header]||0;for(let layer=0;layer<pileSize;layer++){const currentGroup=groupLayers[layer].at(-1);if(currentGroup&&isConsecutive([currentGroup.end,header])){currentGroup.end++;}
else{const newGroup={start:header,end:header};groupLayers[layer].push(newGroup);}}}
for(const layer of groupLayers){for(const group of layer){group.isFolded=isGroupFolded[this.getGroupId(group)];}}
return groupLayers;}
groupHeaders(sheetId,dimension,start,end){const groups=this.getHeaderGroups(sheetId,dimension);const newGroups=this.bricksFallingAlgorithm(groups,start,end,+1).flat();this.history.update("groups",sheetId,dimension,this.removeDuplicateGroups(newGroups));}
unGroupHeaders(sheetId,dimension,start,end){const groups=this.getHeaderGroups(sheetId,dimension);const newGroups=this.bricksFallingAlgorithm(groups,start,end,-1).flat();this.history.update("groups",sheetId,dimension,this.removeDuplicateGroups(newGroups));}
moveGroupsOnHeaderInsertion(sheetId,dim,index,count){const groups=this.groups[sheetId][dim];for(let i=0;i<groups.length;i++){const group=groups[i];const[start,end]=moveHeaderIndexesOnHeaderAddition(index,count,[group.start,group.end,]);if(start!==group.start||end!==group.end){this.history.update("groups",sheetId,dim,i,{...group,start,end});}}}
moveGroupsOnHeaderDeletion(sheetId,dimension,deletedElements){const groups=this.getHeaderGroups(sheetId,dimension);const newGroups=[];for(const group of groups){const headersInGroup=range(group.start,group.end+1);const headersAfterDeletion=moveHeaderIndexesOnHeaderDeletion(deletedElements,headersInGroup);if(headersAfterDeletion.length===0){continue;}
newGroups.push({...group,start:Math.min(...headersAfterDeletion),end:Math.max(...headersAfterDeletion),});}
this.history.update("groups",sheetId,dimension,this.bricksFallingAlgorithm(newGroups,0,0).flat());}
doGroupOverlap(group,start,end){return group.start<=end&&group.end>=start;}
removeDuplicateGroups(groups){const newGroups={};for(const group of groups){newGroups[this.getGroupId(group)]=group;}
return Object.values(newGroups);}
findGroupWithStartEnd(sheetId,dimension,start,end){return this.getHeaderGroups(sheetId,dimension).find((group)=>group.start===start&&group.end===end);}
foldHeaderGroup(sheetId,dim,groupToFold){const index=this.getGroupIndex(sheetId,dim,groupToFold.start,groupToFold.end);if(index===undefined){return;}
this.history.update("groups",sheetId,dim,index,"isFolded",true);const groups=this.getters.getHeaderGroups(sheetId,dim);for(let i=0;i<groups.length;i++){const group=groups[i];if(group.start===groupToFold.start&&group.end<=groupToFold.end){this.history.update("groups",sheetId,dim,i,"isFolded",true);}}}
unfoldHeaderGroup(sheetId,dim,groupToUnfold){const index=this.getGroupIndex(sheetId,dim,groupToUnfold.start,groupToUnfold.end);if(index===undefined){return;}
this.history.update("groups",sheetId,dim,index,"isFolded",false);const groups=this.getters.getHeaderGroups(sheetId,dim);for(let i=0;i<groups.length;i++){const group=groups[i];if(group.start===groupToUnfold.start&&group.end>=groupToUnfold.end){this.history.update("groups",sheetId,dim,i,"isFolded",false);}}}
getGroupIndex(sheetId,dimension,start,end){const index=this.groups[sheetId][dimension].findIndex((group)=>group.start===start&&group.end===end);return index===-1?undefined:index;}
import(data){for(const sheet of data.sheets){this.groups[sheet.id]={ROW:[],COL:[]};if(!sheet.headerGroups){continue;}
for(const dim of["ROW","COL"]){for(const groupData of sheet.headerGroups[dim]||[]){this.groups[sheet.id][dim].push({...groupData});}}}}
export(data){for(const sheet of data.sheets){sheet.headerGroups=this.groups[sheet.id];}}
exportForExcel(data){for(const sheet of data.sheets){for(const dim of["ROW","COL"]){const layers=this.getGroupsLayers(sheet.id,dim);for(let layerIndex=0;layerIndex<layers.length;layerIndex++){const layer=layers[layerIndex];for(const group of layer){for(let headerIndex=group.start;headerIndex<=group.end;headerIndex++){const header=getSheetDataHeader(sheet,dim,headerIndex);header.outlineLevel=layerIndex+1;if(group.isFolded){header.isHidden=true;}}
if(group.isFolded){const header=getSheetDataHeader(sheet,dim,group.end+1);header.collapsed=true;}}}}}}}
class PivotCorePlugin extends CorePlugin{static getters=["getPivotCoreDefinition","getPivotDisplayName","getPivotId","getPivotFormulaId","getPivotIds","getMeasureCompiledFormula","getPivotName","isExistingPivot",];nextFormulaId=1;pivots={};formulaIds={};compiledMeasureFormulas={};allowDispatch(cmd){switch(cmd.type){case"ADD_PIVOT":{return this.checkValidations(cmd.pivot,this.checkDuplicatedMeasureIds,this.checkSortedColumnInMeasures);}
case"UPDATE_PIVOT":{if(!(cmd.pivotId in this.pivots)){return"PivotIdNotFound";}
if(deepEquals(cmd.pivot,this.pivots[cmd.pivotId]?.definition)){return"NoChanges";}
if(cmd.pivot.name===""){return"EmptyName";}
return this.checkValidations(cmd.pivot,this.checkDuplicatedMeasureIds,this.checkSortedColumnInMeasures);}
case"RENAME_PIVOT":if(!(cmd.pivotId in this.pivots)){return"PivotIdNotFound";}
if(cmd.name===""){return"EmptyName";}
break;case"REMOVE_PIVOT":case"DUPLICATE_PIVOT":case"INSERT_PIVOT":{if(!(cmd.pivotId in this.pivots)){return"PivotIdNotFound";}
break;}
case"DUPLICATE_PIVOT":if(!(cmd.pivotId in this.pivots)){return"PivotIdNotFound";}}
return"Success";}
handle(cmd){switch(cmd.type){case"ADD_PIVOT":{const{pivotId,pivot}=cmd;this.addPivot(pivotId,pivot);break;}
case"INSERT_PIVOT":{const{sheetId,col,row,pivotId,table}=cmd;const position={sheetId,col,row};const{cols,rows,measures,fieldsType}=table;const spTable=new SpreadsheetPivotTable(cols,rows,measures,fieldsType||{});const formulaId=this.getPivotFormulaId(pivotId);this.insertPivot(position,formulaId,spTable);break;}
case"RENAME_PIVOT":{this.history.update("pivots",cmd.pivotId,"definition","name",cmd.name);break;}
case"REMOVE_PIVOT":{const pivots={...this.pivots};delete pivots[cmd.pivotId];const formulaId=this.getPivotFormulaId(cmd.pivotId);this.history.update("formulaIds",formulaId,undefined);this.history.update("pivots",pivots);break;}
case"DUPLICATE_PIVOT":{const{pivotId,newPivotId}=cmd;const pivot=deepCopy(this.getPivotCore(pivotId).definition);pivot.name=cmd.duplicatedPivotName??pivot.name+" (copy)";this.addPivot(newPivotId,pivot);break;}
case"UPDATE_PIVOT":{this.history.update("pivots",cmd.pivotId,"definition",deepCopy(cmd.pivot));this.compileCalculatedMeasures(cmd.pivot.measures);break;}}}
adaptRanges(applyChange,sheetId,sheetName){for(const sheetId in this.compiledMeasureFormulas){for(const formulaString in this.compiledMeasureFormulas[sheetId]){const compiledFormula=this.compiledMeasureFormulas[sheetId][formulaString];const newDependencies=[];for(const range of compiledFormula.dependencies){const change=applyChange(range);if(change.changeType==="NONE"){newDependencies.push(range);}
else{newDependencies.push(change.range);}}
const newFormulaString=this.getters.getFormulaString(sheetId,compiledFormula.tokens,newDependencies);if(newFormulaString!==formulaString){this.replaceMeasureFormula(sheetId,formulaString,newFormulaString);}}}}
getPivotDisplayName(pivotId){const formulaId=this.getPivotFormulaId(pivotId);return`(#${formulaId}) ${this.getPivotName(pivotId)}`;}
getPivotName(pivotId){return this.getPivotCore(pivotId).definition.name;}
getPivotCoreDefinition(pivotId){return this.getPivotCore(pivotId).definition;}
getPivotId(formulaId){return this.formulaIds[formulaId];}
getPivotFormulaId(pivotId){return this.getPivotCore(pivotId).formulaId;}
getPivotIds(){return Object.keys(this.pivots);}
isExistingPivot(pivotId){return pivotId in this.pivots;}
getMeasureCompiledFormula(measure){if(!measure.computedBy){throw new Error(`Measure ${measure.fieldName} is not computed by formula`);}
const sheetId=measure.computedBy.sheetId;return this.compiledMeasureFormulas[sheetId][measure.computedBy.formula];}
addPivot(pivotId,pivot,formulaId=this.nextFormulaId.toString()){this.history.update("pivots",pivotId,{definition:deepCopy(pivot),formulaId});this.compileCalculatedMeasures(pivot.measures);this.history.update("formulaIds",formulaId,pivotId);this.history.update("nextFormulaId",this.nextFormulaId+1);}
compileCalculatedMeasures(measures){for(const measure of measures){if(measure.computedBy){const sheetId=measure.computedBy.sheetId;const compiledFormula=this.compileMeasureFormula(measure.computedBy.sheetId,measure.computedBy.formula);this.history.update("compiledMeasureFormulas",sheetId,measure.computedBy.formula,compiledFormula);}}}
insertPivot(position,formulaId,table){this.resizeSheet(position.sheetId,position,table);const pivotCells=table.getPivotCells();for(let col=0;col<pivotCells.length;col++){for(let row=0;row<pivotCells[col].length;row++){const pivotCell=pivotCells[col][row];this.dispatch("UPDATE_CELL",{sheetId:position.sheetId,col:position.col+col,row:position.row+row,content:createPivotFormula(formulaId,pivotCell),});}}}
resizeSheet(sheetId,{col,row},table){const colLimit=table.getNumberOfDataColumns()+1;const numberCols=this.getters.getNumberCols(sheetId);const deltaCol=numberCols-col;if(deltaCol<colLimit){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:numberCols-1,sheetId:sheetId,sheetName:this.getters.getSheetName(sheetId),quantity:colLimit-deltaCol,position:"after",});}
const rowLimit=table.columns.length+table.rows.length;const numberRows=this.getters.getNumberRows(sheetId);const deltaRow=numberRows-row;if(deltaRow<rowLimit){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"ROW",base:numberRows-1,sheetId:sheetId,sheetName:this.getters.getSheetName(sheetId),quantity:rowLimit-deltaRow,position:"after",});}}
getPivotCore(pivotId){const pivot=this.pivots[pivotId];if(!pivot){throw new Error(`Pivot with id ${pivotId} not found`);}
return pivot;}
compileMeasureFormula(sheetId,formulaString){const compiledFormula=compile(formulaString);const rangeDependencies=compiledFormula.dependencies.map((xc)=>this.getters.getRangeFromSheetXC(sheetId,xc));return{...compiledFormula,dependencies:rangeDependencies,};}
replaceMeasureFormula(sheetId,formulaString,newFormulaString){this.history.update("compiledMeasureFormulas",sheetId,formulaString,undefined);this.history.update("compiledMeasureFormulas",sheetId,newFormulaString,this.compileMeasureFormula(sheetId,newFormulaString));for(const pivotId in this.pivots){const pivot=this.pivots[pivotId];if(!pivot){continue;}
for(const measure of pivot.definition.measures){if(measure.computedBy?.formula===formulaString){const measureIndex=pivot.definition.measures.indexOf(measure);this.history.update("pivots",pivotId,"definition","measures",measureIndex,"computedBy",{formula:newFormulaString,sheetId});}}}}
checkSortedColumnInMeasures(definition){const measures=definition.measures.map((measure)=>measure.id);if(definition.sortedColumn&&!measures.includes(definition.sortedColumn.measure)){return"InvalidDefinition";}
return"Success";}
checkDuplicatedMeasureIds(definition){const uniqueIds=new Set(definition.measures.map((m)=>m.id));if(definition.measures.length!==uniqueIds.size){return"InvalidDefinition";}
return"Success";}
import(data){if(data.pivots){for(const[id,pivot]of Object.entries(data.pivots)){this.addPivot(id,pivot,pivot.formulaId);}}
this.history.update("nextFormulaId",data.pivotNextId||getMaxObjectId(this.pivots)+1);}
export(data){data.pivots={};for(const pivotId in this.pivots){data.pivots[pivotId]={...this.getPivotCoreDefinition(pivotId),formulaId:this.getPivotFormulaId(pivotId),};}
data.pivotNextId=this.nextFormulaId;}}
class SettingsPlugin extends CorePlugin{static getters=["getLocale"];locale=DEFAULT_LOCALE;allowDispatch(cmd){switch(cmd.type){case"UPDATE_LOCALE":return isValidLocale(cmd.locale)?"Success":"InvalidLocale";}
return"Success";}
handle(cmd){switch(cmd.type){case"UPDATE_LOCALE":const oldLocale=this.locale;const newLocale=cmd.locale;this.history.update("locale",newLocale);this.changeCellsDateFormatWithLocale(oldLocale,newLocale);break;}}
getLocale(){return this.locale;}
changeCellsDateFormatWithLocale(oldLocale,newLocale){for(const sheetId of this.getters.getSheetIds()){for(const[cellId,cell]of Object.entries(this.getters.getCells(sheetId))){let formatToApply;if(cell.format===oldLocale.dateFormat){formatToApply=newLocale.dateFormat;}
if(cell.format===oldLocale.timeFormat){formatToApply=newLocale.timeFormat;}
if(cell.format===getDateTimeFormat(oldLocale)){formatToApply=getDateTimeFormat(newLocale);}
if(formatToApply){const{col,row,sheetId}=this.getters.getCellPosition(cellId);this.dispatch("UPDATE_CELL",{col,row,sheetId,format:formatToApply,});}}}}
import(data){this.locale=data.settings?.locale??DEFAULT_LOCALE;}
export(data){data.settings={locale:this.locale};}}
function adaptPivotRange(range,applyChange){if(!range){return undefined;}
const change=applyChange(range);switch(change.changeType){case"NONE":return range;case"REMOVE":return undefined;default:return change.range;}}
class SpreadsheetPivotCorePlugin extends CorePlugin{allowDispatch(cmd){switch(cmd.type){case"ADD_PIVOT":case"UPDATE_PIVOT":const definition=cmd.pivot;return this.checkDataSetValidity(definition);}
return"Success";}
adaptRanges(applyChange){for(const pivotId of this.getters.getPivotIds()){const definition=this.getters.getPivotCoreDefinition(pivotId);if(definition.type!=="SPREADSHEET"){continue;}
if(definition.dataSet){const{sheetId,zone}=definition.dataSet;const range=this.getters.getRangeFromZone(sheetId,zone);const adaptedRange=adaptPivotRange(range,applyChange);const dataSet=adaptedRange&&{sheetId:adaptedRange.sheetId,zone:adaptedRange.zone,};this.dispatch("UPDATE_PIVOT",{pivotId,pivot:{...definition,dataSet}});}}}
checkDataSetValidity(definition){if(definition.type==="SPREADSHEET"&&definition.dataSet){const{zone,sheetId}=definition.dataSet;if(!sheetId||!this.getters.tryGetSheet(sheetId)||!zone||!isZoneValid(zone)){return"InvalidDataSet";}
return this.getters.checkZonesExistInSheet(sheetId,[zone]);}
return"Success";}}
class TableStylePlugin extends CorePlugin{static getters=["getNewCustomTableStyleName","getTableStyle","getTableStyles","isTableStyleEditable",];styles={};allowDispatch(cmd){switch(cmd.type){case"CREATE_TABLE":case"UPDATE_TABLE":if(cmd.config?.styleId&&!this.styles[cmd.config.styleId]){return"InvalidTableConfig";}
break;case"CREATE_TABLE_STYLE":if(!TABLE_STYLES_TEMPLATES[cmd.templateName]){return"InvalidTableStyle";}
try{toHex(cmd.primaryColor);}
catch(e){return"InvalidTableStyle";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"CREATE_TABLE_STYLE":const style=buildTableStyle(cmd.tableStyleName,cmd.templateName,cmd.primaryColor);this.history.update("styles",cmd.tableStyleId,style);break;case"REMOVE_TABLE_STYLE":const styles={...this.styles};delete styles[cmd.tableStyleId];this.history.update("styles",styles);for(const sheetId of this.getters.getSheetIds()){for(const table of this.getters.getCoreTables(sheetId)){if(table.config.styleId===cmd.tableStyleId){this.dispatch("UPDATE_TABLE",{sheetId,zone:table.range.zone,config:{styleId:DEFAULT_TABLE_CONFIG.styleId},});}}}
break;}}
getTableStyle(styleId){if(!this.styles[styleId]){throw new Error(`Table style ${styleId} does not exist`);}
return this.styles[styleId];}
getTableStyles(){return this.styles;}
getNewCustomTableStyleName(){const name=_t("Custom Table Style");const styleNames=Object.values(this.styles).map((style)=>style.displayName);return getUniqueText(name,styleNames,{compute:(name,i)=>`${name} ${i}`,start:2});}
isTableStyleEditable(styleId){return!TABLE_PRESETS[styleId];}
import(data){for(const presetStyleId in TABLE_PRESETS){this.styles[presetStyleId]=TABLE_PRESETS[presetStyleId];}
for(const styleId in data.customTableStyles){const styleData=data.customTableStyles[styleId];this.styles[styleId]=buildTableStyle(styleData.displayName,styleData.templateName,styleData.primaryColor);}}
export(data){const exportedStyles={};for(const styleId in this.styles){if(!TABLE_PRESETS[styleId]){exportedStyles[styleId]={displayName:this.styles[styleId].displayName,templateName:this.styles[styleId].templateName,primaryColor:this.styles[styleId].primaryColor,};}}
data.customTableStyles=exportedStyles;}}
class CoreViewPlugin extends BasePlugin{getters;constructor({getters,stateObserver}){super(stateObserver);this.getters=getters;}}
const onIterationEndEvaluationRegistry=new Registry();onIterationEndEvaluationRegistry.add("pivots",(getters)=>{for(const pivotId of getters.getPivotIds()){const pivot=getters.getPivot(pivotId);pivot.markAsDirtyForEvaluation?.();}});const functionMap=functionRegistry.mapping;function buildCompilationParameters(context,getters,computeCell){const builder=new CompilationParametersBuilder(context,getters,computeCell);return builder.getParameters();}
class CompilationParametersBuilder{getters;computeCell;evalContext;rangeCache={};constructor(context,getters,computeCell){this.getters=getters;this.computeCell=computeCell;this.evalContext=Object.assign(Object.create(functionMap),context,{getters:this.getters,locale:this.getters.getLocale(),});}
getParameters(){return{referenceDenormalizer:this.refFn.bind(this),ensureRange:this.range.bind(this),evalContext:this.evalContext,};}
refFn(range,isMeta){const rangeError=this.getRangeError(range);if(rangeError){return rangeError;}
if(isMeta){const sheetName=this.getters.getSheetName(range.sheetId);return{value:getFullReference(sheetName,zoneToXc(range.zone))};}
const position={sheetId:range.sheetId,col:range.zone.left,row:range.zone.top};return this.computeCell(position);}
range(range){const rangeError=this.getRangeError(range);if(rangeError){return[[rangeError]];}
const sheetId=range.sheetId;const zone=range.zone;const sheetZone=this.getters.getSheetZone(sheetId);const _zone=intersection(zone,sheetZone);if(!_zone){return[[]];}
const{top,left,bottom,right}=zone;const cacheKey=`${sheetId}-${top}-${left}-${bottom}-${right}`;if(cacheKey in this.rangeCache){return this.rangeCache[cacheKey];}
const height=_zone.bottom-_zone.top+1;const width=_zone.right-_zone.left+1;const matrix=new Array(width);for(let col=_zone.left;col<=_zone.right;col++){const colIndex=col-_zone.left;matrix[colIndex]=new Array(height);for(let row=_zone.top;row<=_zone.bottom;row++){const rowIndex=row-_zone.top;matrix[colIndex][rowIndex]=this.computeCell({sheetId,col,row});}}
this.rangeCache[cacheKey]=matrix;return matrix;}
getRangeError(range){if(!isZoneValid(range.zone)){return new InvalidReferenceError();}
if(range.invalidSheetName){return new EvaluationError(_t("Invalid sheet name: %s",range.invalidSheetName));}
return undefined;}}
function quickselect(arr,k,left,right,compare){quickselectStep(arr,k,left||0,right||(arr.length-1),compare||defaultCompare);}
function quickselectStep(arr,k,left,right,compare){while(right>left){if(right-left>600){var n=right-left+1;var m=k-left+1;var z=Math.log(n);var s=0.5*Math.exp(2*z/3);var sd=0.5*Math.sqrt(z*s*(n-s)/n)*(m-n/2<0?-1:1);var newLeft=Math.max(left,Math.floor(k-m*s/n+sd));var newRight=Math.min(right,Math.floor(k+(n-m)*s/n+sd));quickselectStep(arr,k,newLeft,newRight,compare);}
var t=arr[k];var i=left;var j=right;swap(arr,left,k);if(compare(arr[right],t)>0)swap(arr,left,right);while(i<j){swap(arr,i,j);i++;j--;while(compare(arr[i],t)<0)i++;while(compare(arr[j],t)>0)j--;}
if(compare(arr[left],t)===0)swap(arr,left,j);else{j++;swap(arr,j,right);}
if(j<=k)left=j+1;if(k<=j)right=j-1;}}
function swap(arr,i,j){var tmp=arr[i];arr[i]=arr[j];arr[j]=tmp;}
function defaultCompare(a,b){return a<b?-1:a>b?1:0;}
class RBush{constructor(maxEntries=9){this._maxEntries=Math.max(4,maxEntries);this._minEntries=Math.max(2,Math.ceil(this._maxEntries*0.4));this.clear();}
all(){return this._all(this.data,[]);}
search(bbox){let node=this.data;const result=[];if(!intersects(bbox,node))return result;const toBBox=this.toBBox;const nodesToSearch=[];while(node){for(let i=0;i<node.children.length;i++){const child=node.children[i];const childBBox=node.leaf?toBBox(child):child;if(intersects(bbox,childBBox)){if(node.leaf)result.push(child);else if(contains(bbox,childBBox))this._all(child,result);else nodesToSearch.push(child);}}
node=nodesToSearch.pop();}
return result;}
collides(bbox){let node=this.data;if(!intersects(bbox,node))return false;const nodesToSearch=[];while(node){for(let i=0;i<node.children.length;i++){const child=node.children[i];const childBBox=node.leaf?this.toBBox(child):child;if(intersects(bbox,childBBox)){if(node.leaf||contains(bbox,childBBox))return true;nodesToSearch.push(child);}}
node=nodesToSearch.pop();}
return false;}
load(data){if(!(data&&data.length))return this;if(data.length<this._minEntries){for(let i=0;i<data.length;i++){this.insert(data[i]);}
return this;}
let node=this._build(data.slice(),0,data.length-1,0);if(!this.data.children.length){this.data=node;}else if(this.data.height===node.height){this._splitRoot(this.data,node);}else{if(this.data.height<node.height){const tmpNode=this.data;this.data=node;node=tmpNode;}
this._insert(node,this.data.height-node.height-1,true);}
return this;}
insert(item){if(item)this._insert(item,this.data.height-1);return this;}
clear(){this.data=createNode([]);return this;}
remove(item,equalsFn){if(!item)return this;let node=this.data;const bbox=this.toBBox(item);const path=[];const indexes=[];let i,parent,goingUp;while(node||path.length){if(!node){node=path.pop();parent=path[path.length-1];i=indexes.pop();goingUp=true;}
if(node.leaf){const index=findItem(item,node.children,equalsFn);if(index!==-1){node.children.splice(index,1);path.push(node);this._condense(path);return this;}}
if(!goingUp&&!node.leaf&&contains(node,bbox)){path.push(node);indexes.push(i);i=0;parent=node;node=node.children[0];}else if(parent){i++;node=parent.children[i];goingUp=false;}else node=null;}
return this;}
toBBox(item){return item;}
compareMinX(a,b){return a.minX-b.minX;}
compareMinY(a,b){return a.minY-b.minY;}
toJSON(){return this.data;}
fromJSON(data){this.data=data;return this;}
_all(node,result){const nodesToSearch=[];while(node){if(node.leaf)result.push(...node.children);else nodesToSearch.push(...node.children);node=nodesToSearch.pop();}
return result;}
_build(items,left,right,height){const N=right-left+1;let M=this._maxEntries;let node;if(N<=M){node=createNode(items.slice(left,right+1));calcBBox(node,this.toBBox);return node;}
if(!height){height=Math.ceil(Math.log(N)/Math.log(M));M=Math.ceil(N/Math.pow(M,height-1));}
node=createNode([]);node.leaf=false;node.height=height;const N2=Math.ceil(N/M);const N1=N2*Math.ceil(Math.sqrt(M));multiSelect(items,left,right,N1,this.compareMinX);for(let i=left;i<=right;i+=N1){const right2=Math.min(i+N1-1,right);multiSelect(items,i,right2,N2,this.compareMinY);for(let j=i;j<=right2;j+=N2){const right3=Math.min(j+N2-1,right2);node.children.push(this._build(items,j,right3,height-1));}}
calcBBox(node,this.toBBox);return node;}
_chooseSubtree(bbox,node,level,path){while(true){path.push(node);if(node.leaf||path.length-1===level)break;let minArea=Infinity;let minEnlargement=Infinity;let targetNode;for(let i=0;i<node.children.length;i++){const child=node.children[i];const area=bboxArea(child);const enlargement=enlargedArea(bbox,child)-area;if(enlargement<minEnlargement){minEnlargement=enlargement;minArea=area<minArea?area:minArea;targetNode=child;}else if(enlargement===minEnlargement){if(area<minArea){minArea=area;targetNode=child;}}}
node=targetNode||node.children[0];}
return node;}
_insert(item,level,isNode){const bbox=isNode?item:this.toBBox(item);const insertPath=[];const node=this._chooseSubtree(bbox,this.data,level,insertPath);node.children.push(item);extend(node,bbox);while(level>=0){if(insertPath[level].children.length>this._maxEntries){this._split(insertPath,level);level--;}else break;}
this._adjustParentBBoxes(bbox,insertPath,level);}
_split(insertPath,level){const node=insertPath[level];const M=node.children.length;const m=this._minEntries;this._chooseSplitAxis(node,m,M);const splitIndex=this._chooseSplitIndex(node,m,M);const newNode=createNode(node.children.splice(splitIndex,node.children.length-splitIndex));newNode.height=node.height;newNode.leaf=node.leaf;calcBBox(node,this.toBBox);calcBBox(newNode,this.toBBox);if(level)insertPath[level-1].children.push(newNode);else this._splitRoot(node,newNode);}
_splitRoot(node,newNode){this.data=createNode([node,newNode]);this.data.height=node.height+1;this.data.leaf=false;calcBBox(this.data,this.toBBox);}
_chooseSplitIndex(node,m,M){let index;let minOverlap=Infinity;let minArea=Infinity;for(let i=m;i<=M-m;i++){const bbox1=distBBox(node,0,i,this.toBBox);const bbox2=distBBox(node,i,M,this.toBBox);const overlap=intersectionArea(bbox1,bbox2);const area=bboxArea(bbox1)+bboxArea(bbox2);if(overlap<minOverlap){minOverlap=overlap;index=i;minArea=area<minArea?area:minArea;}else if(overlap===minOverlap){if(area<minArea){minArea=area;index=i;}}}
return index||M-m;}
_chooseSplitAxis(node,m,M){const compareMinX=node.leaf?this.compareMinX:compareNodeMinX;const compareMinY=node.leaf?this.compareMinY:compareNodeMinY;const xMargin=this._allDistMargin(node,m,M,compareMinX);const yMargin=this._allDistMargin(node,m,M,compareMinY);if(xMargin<yMargin)node.children.sort(compareMinX);}
_allDistMargin(node,m,M,compare){node.children.sort(compare);const toBBox=this.toBBox;const leftBBox=distBBox(node,0,m,toBBox);const rightBBox=distBBox(node,M-m,M,toBBox);let margin=bboxMargin(leftBBox)+bboxMargin(rightBBox);for(let i=m;i<M-m;i++){const child=node.children[i];extend(leftBBox,node.leaf?toBBox(child):child);margin+=bboxMargin(leftBBox);}
for(let i=M-m-1;i>=m;i--){const child=node.children[i];extend(rightBBox,node.leaf?toBBox(child):child);margin+=bboxMargin(rightBBox);}
return margin;}
_adjustParentBBoxes(bbox,path,level){for(let i=level;i>=0;i--){extend(path[i],bbox);}}
_condense(path){for(let i=path.length-1,siblings;i>=0;i--){if(path[i].children.length===0){if(i>0){siblings=path[i-1].children;siblings.splice(siblings.indexOf(path[i]),1);}else this.clear();}else calcBBox(path[i],this.toBBox);}}}
function findItem(item,items,equalsFn){if(!equalsFn)return items.indexOf(item);for(let i=0;i<items.length;i++){if(equalsFn(item,items[i]))return i;}
return-1;}
function calcBBox(node,toBBox){distBBox(node,0,node.children.length,toBBox,node);}
function distBBox(node,k,p,toBBox,destNode){if(!destNode)destNode=createNode(null);destNode.minX=Infinity;destNode.minY=Infinity;destNode.maxX=-Infinity;destNode.maxY=-Infinity;for(let i=k;i<p;i++){const child=node.children[i];extend(destNode,node.leaf?toBBox(child):child);}
return destNode;}
function extend(a,b){a.minX=Math.min(a.minX,b.minX);a.minY=Math.min(a.minY,b.minY);a.maxX=Math.max(a.maxX,b.maxX);a.maxY=Math.max(a.maxY,b.maxY);return a;}
function compareNodeMinX(a,b){return a.minX-b.minX;}
function compareNodeMinY(a,b){return a.minY-b.minY;}
function bboxArea(a){return(a.maxX-a.minX)*(a.maxY-a.minY);}
function bboxMargin(a){return(a.maxX-a.minX)+(a.maxY-a.minY);}
function enlargedArea(a,b){return(Math.max(b.maxX,a.maxX)-Math.min(b.minX,a.minX))*(Math.max(b.maxY,a.maxY)-Math.min(b.minY,a.minY));}
function intersectionArea(a,b){const minX=Math.max(a.minX,b.minX);const minY=Math.max(a.minY,b.minY);const maxX=Math.min(a.maxX,b.maxX);const maxY=Math.min(a.maxY,b.maxY);return Math.max(0,maxX-minX)*Math.max(0,maxY-minY);}
function contains(a,b){return a.minX<=b.minX&&a.minY<=b.minY&&b.maxX<=a.maxX&&b.maxY<=a.maxY;}
function intersects(a,b){return b.minX<=a.maxX&&b.minY<=a.maxY&&b.maxX>=a.minX&&b.maxY>=a.minY;}
function createNode(children){return{children,height:1,leaf:true,minX:Infinity,minY:Infinity,maxX:-Infinity,maxY:-Infinity};}
function multiSelect(arr,left,right,n,compare){const stack=[left,right];while(stack.length){right=stack.pop();left=stack.pop();if(right-left<=n)continue;const mid=left+Math.ceil((right-left)/n/2)*n;quickselect(arr,mid,left,right,compare);stack.push(left,mid,mid,right);}}
class SpreadsheetRTree{rTrees={};constructor(items=[]){const rangesPerSheet={};for(const item of items){const sheetId=item.boundingBox.sheetId;if(!rangesPerSheet[sheetId]){rangesPerSheet[sheetId]=[];}
rangesPerSheet[sheetId].push(item);}
for(const sheetId in rangesPerSheet){this.rTrees[sheetId]=new ZoneRBush();this.rTrees[sheetId].load(rangesPerSheet[sheetId]);}}
insert(item){const sheetId=item.boundingBox.sheetId;if(!this.rTrees[sheetId]){this.rTrees[sheetId]=new ZoneRBush();}
this.rTrees[sheetId].insert(item);}
search({zone,sheetId}){if(!this.rTrees[sheetId]){return[];}
return this.rTrees[sheetId].search({minX:zone.left,minY:zone.top,maxX:zone.right,maxY:zone.bottom,});}
remove(item){const sheetId=item.boundingBox.sheetId;if(!this.rTrees[sheetId]){return;}
this.rTrees[sheetId].remove(item,this.rtreeItemComparer);}
rtreeItemComparer(left,right){return(left.data===right.data&&left.boundingBox.sheetId===right.boundingBox.sheetId&&left.boundingBox?.zone.left===right.boundingBox.zone.left&&left.boundingBox?.zone.top===right.boundingBox.zone.top&&left.boundingBox?.zone.right===right.boundingBox.zone.right&&left.boundingBox?.zone.bottom===right.boundingBox.zone.bottom);}}
class ZoneRBush extends RBush{toBBox({boundingBox}){const zone=boundingBox.zone;return{minX:zone.left,minY:zone.top,maxX:zone.right,maxY:zone.bottom,};}
compareMinX(a,b){return a.boundingBox.zone.left-b.boundingBox.zone.left;}
compareMinY(a,b){return a.boundingBox.zone.top-b.boundingBox.zone.top;}}
class FormulaDependencyGraph{createEmptyPositionSet;dependencies=new PositionMap();rTree;constructor(createEmptyPositionSet,data=[]){this.createEmptyPositionSet=createEmptyPositionSet;this.rTree=new SpreadsheetRTree(data);}
removeAllDependencies(formulaPosition){const ranges=this.dependencies.get(formulaPosition);if(!ranges){return;}
for(const range of ranges){this.rTree.remove(range);}
this.dependencies.delete(formulaPosition);}
addDependencies(formulaPosition,dependencies){const rTreeItems=dependencies.map(({sheetId,zone})=>({data:formulaPosition,boundingBox:{zone,sheetId,},}));for(const item of rTreeItems){this.rTree.insert(item);}
const existingDependencies=this.dependencies.get(formulaPosition);if(existingDependencies){existingDependencies.push(...rTreeItems);}
else{this.dependencies.set(formulaPosition,rTreeItems);}}
getCellsDependingOn(ranges){const visited=this.createEmptyPositionSet();const queue=Array.from(ranges).reverse();while(queue.length>0){const range=queue.pop();const zone=range.zone;const sheetId=range.sheetId;for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){visited.add({sheetId,col,row});}}
const impactedPositions=this.rTree.search(range).map((dep)=>dep.data);const nextInQueue={};for(const position of impactedPositions){if(!visited.has(position)){if(!nextInQueue[position.sheetId]){nextInQueue[position.sheetId]=[];}
nextInQueue[position.sheetId].push(positionToZone(position));}}
for(const sheetId in nextInQueue){const zones=recomputeZones(nextInQueue[sheetId],[]);queue.push(...zones.map((zone)=>({sheetId,zone})));}}
for(const range of ranges){const zone=range.zone;const sheetId=range.sheetId;for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){visited.delete({sheetId,col,row});}}}
return visited;}}
class BinaryGrid extends Uint32Array{columnOffset=0;cols=0;rows=0;static create(rows,columns){const columnOffset=log2Ceil(columns);const length=(rows<<columnOffset)>>5;const grid=new this(length+1);grid.columnOffset=columnOffset;grid.cols=columns;grid.rows=rows;return grid;}
getValue(position){const[bucket,bitPosition]=this.getCoordinates(position);return((this[bucket]>>bitPosition)&1);}
setValue(position,value){const[bucket,bitPosition]=this.getCoordinates(position);const currentValue=(this[bucket]>>bitPosition)&1;const hasBeenInserted=currentValue===0&&value===1;this[bucket]=(this[bucket]&~(1<<bitPosition))|(value<<bitPosition);return hasBeenInserted;}
isEmpty(){return!this.some((bucket)=>bucket!==0);}
fillAllPositions(){const thirtyTwoOnes=-1>>>0;this.fill(thirtyTwoOnes);}
clear(){this.fill(0);}
getCoordinates(position){const{row,col}=position;const index=(row<<this.columnOffset)+col;const bucket=index>>5;return[bucket,index-(bucket<<5)];}}
function log2Ceil(value){if(value===0){return-Infinity;}
else if(value<0){return NaN;}
return 32-Math.clz32(--value);}
class PositionSet{sheets={};insertions=[];maxSize=0;constructor(sheetSizes){for(const sheetId in sheetSizes){const cols=sheetSizes[sheetId].cols;const rows=sheetSizes[sheetId].rows;this.maxSize+=cols*rows;this.sheets[sheetId]=BinaryGrid.create(rows,cols);}}
add(position){const hasBeenInserted=this.sheets[position.sheetId].setValue(position,1);if(hasBeenInserted){this.insertions.push(position);}}
addMany(positions){for(const position of positions){this.add(position);}}
delete(position){this.sheets[position.sheetId].setValue(position,0);}
deleteMany(positions){for(const position of positions){this.delete(position);}}
has(position){return this.sheets[position.sheetId].getValue(position)===1;}
clear(){const insertions=[...this];this.insertions=[];for(const sheetId in this.sheets){this.sheets[sheetId].clear();}
return insertions;}
isEmpty(){if(this.insertions.length===0){return true;}
for(const sheetId in this.sheets){if(!this.sheets[sheetId].isEmpty()){return false;}}
return true;}
fillAllPositions(){this.insertions=new Array(this.maxSize);let index=0;for(const sheetId in this.sheets){const grid=this.sheets[sheetId];grid.fillAllPositions();for(let i=0;i<grid.rows;i++){for(let j=0;j<grid.cols;j++){this.insertions[index++]={sheetId,row:i,col:j};}}}}*[Symbol.iterator](){for(const position of this.insertions){if(this.sheets[position.sheetId].getValue(position)===1){yield position;}}}}
class SpreadingRelation{resultsToArrayFormulas=new SpreadsheetRTree();arrayFormulasToResults=new PositionMap();searchFormulaPositionsSpreadingOn(sheetId,zone){return(this.resultsToArrayFormulas.search({sheetId,zone}).map((node)=>node.data)||EMPTY_ARRAY);}
getArrayResultZone(formulasPosition){return this.arrayFormulasToResults.get(formulasPosition);}
removeNode(position){this.resultsToArrayFormulas.remove({boundingBox:{sheetId:position.sheetId,zone:positionToZone(position)},data:position,});this.arrayFormulasToResults.delete(position);}
addRelation({arrayFormulaPosition,resultZone:resultPosition,}){this.resultsToArrayFormulas.insert({boundingBox:{sheetId:arrayFormulaPosition.sheetId,zone:resultPosition},data:arrayFormulaPosition,});this.arrayFormulasToResults.set(arrayFormulaPosition,resultPosition);}
isArrayFormula(position){return this.arrayFormulasToResults.has(position);}}
const EMPTY_ARRAY=[];const MAX_ITERATION=30;const ERROR_CYCLE_CELL=Object.freeze(createEvaluatedCell(new CircularDependencyError()));const EMPTY_CELL=Object.freeze(createEvaluatedCell({value:null}));class Evaluator{context;getters;compilationParams;evaluatedCells=new PositionMap();formulaDependencies=lazy(new FormulaDependencyGraph(this.createEmptyPositionSet.bind(this)));blockedArrayFormulas=new PositionSet({});spreadingRelations=new SpreadingRelation();constructor(context,getters){this.context=context;this.getters=getters;this.compilationParams=buildCompilationParameters(this.context,this.getters,this.computeAndSave.bind(this));}
getEvaluatedCell(position){return this.evaluatedCells.get(position)||EMPTY_CELL;}
getSpreadZone(position,options={ignoreSpillError:false}){const spreadZone=this.spreadingRelations.getArrayResultZone(position);if(!spreadZone){return undefined;}
const evaluatedCell=this.evaluatedCells.get(position);if(evaluatedCell?.type===CellValueType.error&&!(options.ignoreSpillError&&evaluatedCell?.value===CellErrorType.SpilledBlocked)){return positionToZone(position);}
return union(positionToZone(position),spreadZone);}
getEvaluatedPositions(){return this.evaluatedCells.keys();}
getEvaluatedPositionsInSheet(sheetId){return this.evaluatedCells.keysForSheet(sheetId);}
getArrayFormulaSpreadingOn(position){const isEmpty=this.getEvaluatedCell(position).type===CellValueType.empty;if(isEmpty){return undefined;}
const arrayFormulas=this.spreadingRelations.searchFormulaPositionsSpreadingOn(position.sheetId,positionToZone(position));return Array.from(arrayFormulas).find((position)=>!this.blockedArrayFormulas.has(position));}
updateDependencies(position){this.formulaDependencies().removeAllDependencies(position);const dependencies=this.getDirectDependencies(position);this.formulaDependencies().addDependencies(position,dependencies);}
addDependencies(position,dependencies){this.formulaDependencies().addDependencies(position,dependencies);for(const range of dependencies){const sheetId=range.sheetId;const{left,bottom,right,top}=range.zone;for(let col=left;col<=right;col++){for(let row=top;row<=bottom;row++){this.computeAndSave({sheetId,col,row});}}}}
updateCompilationParameters(){this.compilationParams=buildCompilationParameters(this.context,this.getters,this.computeAndSave.bind(this));this.compilationParams.evalContext.updateDependencies=this.updateDependencies.bind(this);this.compilationParams.evalContext.addDependencies=this.addDependencies.bind(this);this.compilationParams.evalContext.lookupCaches={forwardSearch:new Map(),reverseSearch:new Map(),};}
createEmptyPositionSet(){const sheetSizes={};for(const sheetId of this.getters.getSheetIds()){sheetSizes[sheetId]={rows:this.getters.getNumberRows(sheetId),cols:this.getters.getNumberCols(sheetId),};}
return new PositionSet(sheetSizes);}
evaluateCells(positions){const start=performance.now();const cellsToCompute=this.createEmptyPositionSet();cellsToCompute.addMany(positions);const arrayFormulasPositions=this.getArrayFormulasImpactedByChangesOf(positions);cellsToCompute.addMany(this.getCellsDependingOn(positions));cellsToCompute.addMany(arrayFormulasPositions);cellsToCompute.addMany(this.getCellsDependingOn(arrayFormulasPositions));this.evaluate(cellsToCompute);console.debug("evaluate Cells",performance.now()-start,"ms");}
getArrayFormulasImpactedByChangesOf(positions){const impactedPositions=this.createEmptyPositionSet();for(const position of positions){const content=this.getters.getCell(position)?.content;const arrayFormulaPosition=this.getArrayFormulaSpreadingOn(position);if(arrayFormulaPosition!==undefined){impactedPositions.add(arrayFormulaPosition);}
if(!content){impactedPositions.add(position);}}
const zonesBySheetIds=aggregatePositionsToZones(impactedPositions);for(const sheetId in zonesBySheetIds){for(const zone of zonesBySheetIds[sheetId]){impactedPositions.addMany(this.getArrayFormulasBlockedBy(sheetId,zone));}}
return impactedPositions;}
buildDependencyGraph(){this.blockedArrayFormulas=this.createEmptyPositionSet();this.spreadingRelations=new SpreadingRelation();this.formulaDependencies=lazy(()=>{const dependencies=[...this.getAllCells()].flatMap((position)=>this.getDirectDependencies(position).filter((range)=>!range.invalidSheetName&&!range.invalidXc).map((range)=>({data:position,boundingBox:{zone:range.zone,sheetId:range.sheetId,},})));return new FormulaDependencyGraph(this.createEmptyPositionSet.bind(this),dependencies);});}
evaluateAllCells(){const start=performance.now();this.evaluatedCells=new PositionMap();this.evaluate(this.getAllCells());console.debug("evaluate all cells",performance.now()-start,"ms");}
evaluateFormulaResult(sheetId,formulaString){const compiledFormula=compile(formulaString);const ranges=compiledFormula.dependencies.map((xc)=>this.getters.getRangeFromSheetXC(sheetId,xc));this.updateCompilationParameters();return this.evaluateCompiledFormula(sheetId,{...compiledFormula,dependencies:ranges,});}
evaluateCompiledFormula(sheetId,compiledFormula,getContextualSymbolValue){try{const result=updateEvalContextAndExecute(compiledFormula,this.compilationParams,sheetId,this.buildSafeGetSymbolValue(getContextualSymbolValue),this.compilationParams.evalContext.__originCellPosition);if(isMatrix(result)){return matrixMap(result,nullValueToZeroValue);}
return nullValueToZeroValue(result);}
catch(error){return handleError(error,"");}}
getAllCells(){const positions=this.createEmptyPositionSet();positions.fillAllPositions();return positions;}
getArrayFormulasBlockedBy(sheetId,zone){const arrayFormulaPositions=this.createEmptyPositionSet();const arrayFormulas=this.spreadingRelations.searchFormulaPositionsSpreadingOn(sheetId,zone);arrayFormulaPositions.addMany(arrayFormulas);const spilledPositions=[...arrayFormulas].filter((position)=>!this.blockedArrayFormulas.has(position));if(spilledPositions.length){arrayFormulaPositions.deleteMany(spilledPositions);}
arrayFormulaPositions.addMany(this.getCellsDependingOn(arrayFormulaPositions));return arrayFormulaPositions;}
nextPositionsToUpdate=new PositionSet({});cellsBeingComputed=new Set();symbolsBeingComputed=new Set();evaluate(positions){this.cellsBeingComputed=new Set();this.nextPositionsToUpdate=positions;let currentIteration=0;while(!this.nextPositionsToUpdate.isEmpty()&&currentIteration++<MAX_ITERATION){this.updateCompilationParameters();const positions=this.nextPositionsToUpdate.clear();for(let i=0;i<positions.length;++i){this.evaluatedCells.delete(positions[i]);}
for(let i=0;i<positions.length;++i){const position=positions[i];if(this.nextPositionsToUpdate.has(position)){continue;}
const evaluatedCell=this.computeCell(position);if(evaluatedCell!==EMPTY_CELL){this.evaluatedCells.set(position,evaluatedCell);}}
onIterationEndEvaluationRegistry.getAll().forEach((callback)=>callback(this.getters));}
if(currentIteration>=MAX_ITERATION){console.warn("Maximum iteration reached while evaluating cells");}}
computeCell(position){const evaluation=this.evaluatedCells.get(position);if(evaluation){return evaluation;}
if(!this.blockedArrayFormulas.has(position)){this.invalidateSpreading(position);}
if(this.spreadingRelations.isArrayFormula(position)){this.spreadingRelations.removeNode(position);}
const cell=this.getters.getCell(position);if(cell===undefined){return EMPTY_CELL;}
const cellId=cell.id;const localeFormat={format:cell.format,locale:this.getters.getLocale()};try{if(this.cellsBeingComputed.has(cellId)){return ERROR_CYCLE_CELL;}
this.cellsBeingComputed.add(cellId);return cell.isFormula?this.computeFormulaCell(position,cell):evaluateLiteral(cell,localeFormat);}
catch(e){e.value=e?.value||CellErrorType.GenericError;e.message=e?.message||implementationErrorMessage;return createEvaluatedCell(e);}
finally{this.cellsBeingComputed.delete(cellId);}}
computeAndSave(position){const evaluatedCell=this.computeCell(position);if(!this.evaluatedCells.has(position)){this.evaluatedCells.set(position,evaluatedCell);}
return evaluatedCell;}
computeFormulaCell(formulaPosition,cellData){const formulaReturn=updateEvalContextAndExecute(cellData.compiledFormula,this.compilationParams,formulaPosition.sheetId,this.buildSafeGetSymbolValue(),formulaPosition);if(!isMatrix(formulaReturn)){const evaluatedCell=createEvaluatedCell(nullValueToZeroValue(formulaReturn),this.getters.getLocale(),cellData);if(evaluatedCell.type===CellValueType.error){evaluatedCell.errorOriginPosition=formulaReturn.errorOriginPosition??formulaPosition;}
return evaluatedCell;}
this.assertSheetHasEnoughSpaceToSpreadFormulaResult(formulaPosition,formulaReturn);const nbColumns=formulaReturn.length;const nbRows=formulaReturn[0].length;const resultZone={top:formulaPosition.row,bottom:formulaPosition.row+nbRows-1,left:formulaPosition.col,right:formulaPosition.col+nbColumns-1,};this.spreadingRelations.addRelation({resultZone,arrayFormulaPosition:formulaPosition});this.assertNoMergedCellsInSpreadZone(formulaPosition,formulaReturn);forEachSpreadPositionInMatrix(nbColumns,nbRows,this.checkCollision(formulaPosition));forEachSpreadPositionInMatrix(nbColumns,nbRows,this.spreadValues(formulaPosition,formulaReturn));this.invalidatePositionsDependingOnSpread(formulaPosition.sheetId,resultZone);return createEvaluatedCell(nullValueToZeroValue(formulaReturn[0][0]),this.getters.getLocale(),cellData);}
invalidatePositionsDependingOnSpread(sheetId,resultZone){const invalidatedPositions=this.formulaDependencies().getCellsDependingOn(excludeTopLeft(resultZone).map((zone)=>({sheetId,zone})));invalidatedPositions.delete({sheetId,col:resultZone.left,row:resultZone.top});this.nextPositionsToUpdate.addMany(invalidatedPositions);}
assertSheetHasEnoughSpaceToSpreadFormulaResult({sheetId,col,row},matrixResult){const numberOfCols=this.getters.getNumberCols(sheetId);const numberOfRows=this.getters.getNumberRows(sheetId);const enoughCols=col+matrixResult.length<=numberOfCols;const enoughRows=row+matrixResult[0].length<=numberOfRows;if(enoughCols&&enoughRows){return;}
if(enoughCols){throw new SplillBlockedError(_t("Result couldn't be automatically expanded. Please insert more rows."));}
if(enoughRows){throw new SplillBlockedError(_t("Result couldn't be automatically expanded. Please insert more columns."));}
throw new SplillBlockedError(_t("Result couldn't be automatically expanded. Please insert more columns and rows."));}
assertNoMergedCellsInSpreadZone({sheetId,col,row},matrixResult){const mergedCells=this.getters.getMergesInZone(sheetId,{top:row,bottom:row+matrixResult[0].length-1,left:col,right:col+matrixResult.length-1,});if(mergedCells.length===0){return;}
throw new SplillBlockedError(_t("Merged cells found in the spill zone. Please unmerge cells before using array formulas."));}
checkCollision(formulaPosition){const{sheetId,col,row}=formulaPosition;const checkCollision=(i,j)=>{const position={sheetId:sheetId,col:i+col,row:j+row};const rawCell=this.getters.getCell(position);if(rawCell?.content||this.getters.getEvaluatedCell(position).type!==CellValueType.empty){this.blockedArrayFormulas.add(formulaPosition);throw new SplillBlockedError(_t("Array result was not expanded because it would overwrite data in %s.",toXC(position.col,position.row)));}
this.blockedArrayFormulas.delete(formulaPosition);};return checkCollision;}
spreadValues({sheetId,col,row},matrixResult){const spreadValues=(i,j)=>{const position={sheetId,col:i+col,row:j+row};const cell=this.getters.getCell(position);const evaluatedCell=createEvaluatedCell(nullValueToZeroValue(matrixResult[i][j]),this.getters.getLocale(),cell);if(evaluatedCell.type===CellValueType.error){evaluatedCell.errorOriginPosition=matrixResult[i][j].errorOriginPosition??position;}
this.evaluatedCells.set(position,evaluatedCell);};return spreadValues;}
invalidateSpreading(position){const zone=this.spreadingRelations.getArrayResultZone(position);if(!zone){return;}
for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const resultPosition={sheetId:position.sheetId,col,row};const content=this.getters.getCell(resultPosition)?.content;if(content){continue;}
this.evaluatedCells.delete(resultPosition);}}
const sheetId=position.sheetId;this.invalidatePositionsDependingOnSpread(sheetId,zone);this.nextPositionsToUpdate.addMany(this.getArrayFormulasBlockedBy(sheetId,zone));}
buildSafeGetSymbolValue(getContextualSymbolValue){const getSymbolValue=(symbolName)=>{if(this.symbolsBeingComputed.has(symbolName)){return ERROR_CYCLE_CELL;}
this.symbolsBeingComputed.add(symbolName);try{const symbolValue=getContextualSymbolValue?.(symbolName);if(symbolValue){return symbolValue;}
return new BadExpressionError(_t("Invalid formula"));}
finally{this.symbolsBeingComputed.delete(symbolName);}};return getSymbolValue;}
getDirectDependencies(position){const cell=this.getters.getCell(position);if(!cell?.isFormula){return[];}
return cell.compiledFormula.dependencies;}
getCellsDependingOn(positions){const ranges=[];const zonesBySheetIds=aggregatePositionsToZones(positions);for(const sheetId in zonesBySheetIds){ranges.push(...zonesBySheetIds[sheetId].map((zone)=>({sheetId,zone})));}
return this.formulaDependencies().getCellsDependingOn(ranges);}}
function forEachSpreadPositionInMatrix(nbColumns,nbRows,callback){for(let i=0;i<nbColumns;++i){for(let j=0;j<nbRows;++j){if(i===0&&j===0){continue;}
callback(i,j);}}}
function nullValueToZeroValue(functionResult){if(functionResult.value===null||functionResult.value===undefined){return{...functionResult,value:0};}
return functionResult;}
function updateEvalContextAndExecute(compiledFormula,compilationParams,sheetId,getSymbolValue,originCellPosition){compilationParams.evalContext.__originCellPosition=originCellPosition;compilationParams.evalContext.__originSheetId=sheetId;return compiledFormula.execute(compiledFormula.dependencies,compilationParams.referenceDenormalizer,compilationParams.ensureRange,getSymbolValue,compilationParams.evalContext);}
class EvaluationPlugin extends CoreViewPlugin{static getters=["evaluateFormula","evaluateFormulaResult","evaluateCompiledFormula","getCorrespondingFormulaCell","getRangeFormattedValues","getRangeValues","getRangeFormats","getEvaluatedCell","getEvaluatedCells","getEvaluatedCellsInZone","getEvaluatedCellsPositions","getSpreadZone","getArrayFormulaSpreadingOn","isEmpty",];shouldRebuildDependenciesGraph=true;evaluator;positionsToUpdate=[];constructor(config){super(config);this.evaluator=new Evaluator(config.custom,this.getters);}
beforeHandle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||invalidateDependenciesCommands.has(cmd.type)){this.shouldRebuildDependenciesGraph=true;}}
handle(cmd){switch(cmd.type){case"UPDATE_CELL":if(!("content"in cmd||"format"in cmd)||this.shouldRebuildDependenciesGraph){return;}
const position={sheetId:cmd.sheetId,row:cmd.row,col:cmd.col};this.positionsToUpdate.push(position);if("content"in cmd){this.evaluator.updateDependencies(position);}
break;case"EVALUATE_CELLS":this.evaluator.evaluateAllCells();break;}}
finalize(){if(this.shouldRebuildDependenciesGraph){this.evaluator.buildDependencyGraph();this.evaluator.evaluateAllCells();this.shouldRebuildDependenciesGraph=false;}
else if(this.positionsToUpdate.length){this.evaluator.evaluateCells(this.positionsToUpdate);}
this.positionsToUpdate=[];}
evaluateFormula(sheetId,formulaString){const result=this.evaluateFormulaResult(sheetId,formulaString);if(isMatrix(result)){return matrixMap(result,(cell)=>cell.value);}
return result.value;}
evaluateFormulaResult(sheetId,formulaString){return this.evaluator.evaluateFormulaResult(sheetId,formulaString);}
evaluateCompiledFormula(sheetId,compiledFormula,getSymbolValue){return this.evaluator.evaluateCompiledFormula(sheetId,compiledFormula,getSymbolValue);}
getRangeFormattedValues(range){const sheet=this.getters.tryGetSheet(range.sheetId);if(sheet===undefined)
return[];return this.mapVisiblePositions(range,(p)=>this.getters.getEvaluatedCell(p).formattedValue);}
getRangeValues(range){const sheet=this.getters.tryGetSheet(range.sheetId);if(sheet===undefined)
return[];return this.mapVisiblePositions(range,(p)=>this.getters.getEvaluatedCell(p).value);}
getRangeFormats(range){const sheet=this.getters.tryGetSheet(range.sheetId);if(sheet===undefined)
return[];return this.getters.getEvaluatedCellsInZone(sheet.id,range.zone).map((cell)=>cell.format);}
getEvaluatedCell(position){return this.evaluator.getEvaluatedCell(position);}
getEvaluatedCells(sheetId){return this.evaluator.getEvaluatedPositionsInSheet(sheetId).map((position)=>this.getEvaluatedCell(position));}
getEvaluatedCellsPositions(sheetId){return this.evaluator.getEvaluatedPositionsInSheet(sheetId);}
getEvaluatedCellsInZone(sheetId,zone){return positions(zone).map(({col,row})=>this.getters.getEvaluatedCell({sheetId,col,row}));}
getSpreadZone(position,options={ignoreSpillError:false}){return this.evaluator.getSpreadZone(position,options);}
getArrayFormulaSpreadingOn(position){return this.evaluator.getArrayFormulaSpreadingOn(position);}
isEmpty(sheetId,zone){return positions(zone).map(({col,row})=>this.getEvaluatedCell({sheetId,col,row})).every((cell)=>cell.type===CellValueType.empty);}
mapVisiblePositions(range,evaluationCallback){const{sheetId,zone}=range;const xcPositions=positions(zone);return xcPositions.reduce((acc,position)=>{const{col,row}=position;if(!this.getters.isColHidden(sheetId,col)&&!this.getters.isRowHidden(sheetId,row)){acc.push(evaluationCallback({sheetId,...position}));}
return acc;},[]);}
exportForExcel(data){for(const sheet of data.sheets){sheet.cellValues={};sheet.formulaSpillRanges={};}
for(const position of this.evaluator.getEvaluatedPositions()){const evaluatedCell=this.evaluator.getEvaluatedCell(position);const xc=toXC(position.col,position.row);const value=evaluatedCell.value;let isFormula=false;let newContent=undefined;let isExported=true;const exportedSheetData=data.sheets.find((sheet)=>sheet.id===position.sheetId);const formulaCell=this.getCorrespondingFormulaCell(position);if(formulaCell){const cell=this.getters.getCell(position);isExported=isExportableToExcel(formulaCell.compiledFormula.tokens);isFormula=isExported&&cell?.content===formulaCell.content;if(!isExported&&value!==""){newContent=(value??"").toString();const newFormat=evaluatedCell.format;if(newFormat){const newFormatId=getItemId(newFormat,data.formats);exportedSheetData.formats[xc]=newFormatId;}}}
const exportedCellData=exportedSheetData.cells[xc];let content;if(isExported&&isFormula&&formulaCell instanceof FormulaCellWithDependencies){content=formulaCell.contentWithFixedReferences;}
else{content=!isExported?newContent:exportedCellData;}
exportedSheetData.cells[xc]=content;exportedSheetData.cellValues[xc]=evaluatedCell.type!=="error"?value:undefined;const spillZone=this.getSpreadZone(position);if(spillZone){exportedSheetData.formulaSpillRanges[xc]=this.getters.getRangeString(this.getters.getRangeFromZone(position.sheetId,spillZone),position.sheetId);}}}
getCorrespondingFormulaCell(position){const cell=this.getters.getCell(position);if(cell&&cell.isFormula){return cell.compiledFormula.isBadExpression?undefined:cell;}
else if(cell&&cell.content){return undefined;}
const spreadingFormulaPosition=this.getArrayFormulaSpreadingOn(position);if(spreadingFormulaPosition===undefined){return undefined;}
const spreadingFormulaCell=this.getters.getCell(spreadingFormulaPosition);if(spreadingFormulaCell?.isFormula){return spreadingFormulaCell;}
return undefined;}}
const chartColorRegex=/"(#[0-9a-fA-F]{6})"/g;function sortWithClusters(colorsToSort){const clusters=[{leadColor:rgba(255,0,0),colors:[]},{leadColor:rgba(255,128,0),colors:[]},{leadColor:rgba(128,128,0),colors:[]},{leadColor:rgba(128,255,0),colors:[]},{leadColor:rgba(0,255,0),colors:[]},{leadColor:rgba(0,255,128),colors:[]},{leadColor:rgba(0,255,255),colors:[]},{leadColor:rgba(0,127,255),colors:[]},{leadColor:rgba(0,0,255),colors:[]},{leadColor:rgba(127,0,255),colors:[]},{leadColor:rgba(128,0,128),colors:[]},{leadColor:rgba(255,0,128),colors:[]},];for(const color of colorsToSort.map(colorToRGBA)){let currentDistance=500;let currentIndex=0;clusters.forEach((cluster,clusterIndex)=>{const distance=colorDistance(color,cluster.leadColor);if(currentDistance>distance){currentDistance=distance;currentIndex=clusterIndex;}});clusters[currentIndex].colors.push(color);}
return clusters.map((cluster)=>cluster.colors.sort((a,b)=>rgbaToHSLA(a).s-rgbaToHSLA(b).s)).flat().map(rgbaToHex);}
function colorDistance(color1,color2){return Math.sqrt(Math.pow(color1.r-color2.r,2)+
Math.pow(color1.g-color2.g,2)+
Math.pow(color1.b-color2.b,2));}
class CustomColorsPlugin extends CoreViewPlugin{customColors={};shouldUpdateColors=true;static getters=["getCustomColors"];constructor(config){super(config);this.tryToAddColors(config.customColors??[]);}
handle(cmd){switch(cmd.type){case"START":for(const sheetId of this.getters.getSheetIds()){for(const chartId of this.getters.getChartIds(sheetId)){this.tryToAddColors(this.getChartColors(chartId));}}
break;case"UPDATE_CHART":case"CREATE_CHART":this.tryToAddColors(this.getChartColors(cmd.figureId));break;case"UPDATE_CELL":case"ADD_CONDITIONAL_FORMAT":case"SET_BORDER":case"SET_ZONE_BORDERS":case"SET_FORMATTING":case"CREATE_TABLE":case"UPDATE_TABLE":this.history.update("shouldUpdateColors",true);break;}}
finalize(){if(this.shouldUpdateColors){this.history.update("shouldUpdateColors",false);this.tryToAddColors(this.computeCustomColors());}}
getCustomColors(){return sortWithClusters(Object.keys(this.customColors));}
computeCustomColors(){let usedColors=[];for(const sheetId of this.getters.getSheetIds()){usedColors=usedColors.concat(this.getColorsFromCells(sheetId),this.getFormattingColors(sheetId),this.getTableColors(sheetId));}
return[...new Set([...usedColors])];}
getColorsFromCells(sheetId){const cells=Object.values(this.getters.getCells(sheetId));const colors=new Set();for(const cell of cells){if(cell.style?.textColor){colors.add(cell.style.textColor);}
if(cell.style?.fillColor){colors.add(cell.style.fillColor);}}
for(const color of this.getters.getBordersColors(sheetId)){colors.add(color);}
return[...colors];}
getFormattingColors(sheetId){const formats=this.getters.getConditionalFormats(sheetId);const formatColors=[];for(const format of formats){const rule=format.rule;if(rule.type==="CellIsRule"){formatColors.push(rule.style.textColor);formatColors.push(rule.style.fillColor);}
else if(rule.type==="ColorScaleRule"){formatColors.push(colorNumberString(rule.minimum.color));formatColors.push(rule.midpoint?colorNumberString(rule.midpoint.color):undefined);formatColors.push(colorNumberString(rule.maximum.color));}}
return formatColors.filter(isDefined);}
getChartColors(chartId){const chart=this.getters.getChart(chartId);if(chart===undefined){return[];}
const stringifiedChart=JSON.stringify(chart.getDefinition());const colors=stringifiedChart.matchAll(chartColorRegex);return[...colors].map((color)=>color[1]);}
getTableColors(sheetId){const tables=this.getters.getTables(sheetId);return tables.flatMap((table)=>{const config=table.config;const style=this.getters.getTableStyle(config.styleId);return[this.getTableStyleElementColors(style.wholeTable),config.numberOfHeaders>0?this.getTableStyleElementColors(style.headerRow):[],config.totalRow?this.getTableStyleElementColors(style.totalRow):[],config.bandedColumns?this.getTableStyleElementColors(style.firstColumnStripe):[],config.bandedColumns?this.getTableStyleElementColors(style.secondColumnStripe):[],config.bandedRows?this.getTableStyleElementColors(style.firstRowStripe):[],config.bandedRows?this.getTableStyleElementColors(style.secondRowStripe):[],config.firstColumn?this.getTableStyleElementColors(style.firstColumn):[],config.lastColumn?this.getTableStyleElementColors(style.lastColumn):[],].flat();});}
getTableStyleElementColors(element){if(!element){return[];}
return[element.style?.fillColor,element.style?.textColor,element.border?.bottom?.color,element.border?.top?.color,element.border?.left?.color,element.border?.right?.color,element.border?.horizontal?.color,element.border?.vertical?.color,].filter(isDefined);}
tryToAddColors(colors){for(const color of colors){if(!isColorValid(color)){continue;}
const formattedColor=toHex(color);if(color&&!COLOR_PICKER_DEFAULTS.includes(formattedColor)){this.history.update("customColors",formattedColor,true);}}}}
class EvaluationChartPlugin extends CoreViewPlugin{static getters=["getChartRuntime","getStyleOfSingleCellChart"];charts={};createRuntimeChart=chartRuntimeFactory(this.getters);handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||invalidateCFEvaluationCommands.has(cmd.type)||invalidateChartEvaluationCommands.has(cmd.type)){for(const chartId in this.charts){this.charts[chartId]=undefined;}}
switch(cmd.type){case"UPDATE_CHART":case"CREATE_CHART":case"DELETE_FIGURE":this.charts[cmd.figureId]=undefined;break;case"DELETE_SHEET":for(const chartId in this.charts){if(!this.getters.isChartDefined(chartId)){this.charts[chartId]=undefined;}}
break;}}
getChartRuntime(figureId){if(!this.charts[figureId]){const chart=this.getters.getChart(figureId);if(!chart){throw new Error(`No chart for the given id: ${figureId}`);}
this.charts[figureId]=this.createRuntimeChart(chart);}
return this.charts[figureId];}
getStyleOfSingleCellChart(chartBackground,mainRange){if(chartBackground)
return{background:chartBackground,fontColor:chartFontColor(chartBackground)};if(!mainRange){return{background:BACKGROUND_CHART_COLOR,fontColor:chartFontColor(BACKGROUND_CHART_COLOR),};}
const col=mainRange.zone.left;const row=mainRange.zone.top;const sheetId=mainRange.sheetId;const style=this.getters.getCellComputedStyle({sheetId,col,row});const background=style.fillColor||BACKGROUND_CHART_COLOR;return{background,fontColor:style.textColor||chartFontColor(background),};}
exportForExcel(data){for(const sheet of data.sheets){if(!sheet.images){sheet.images=[];}
const sheetFigures=this.getters.getFigures(sheet.id);const figures=[];for(const figure of sheetFigures){if(!figure||figure.tag!=="chart"){continue;}
const figureId=figure.id;const figureData=this.getters.getChart(figureId)?.getDefinitionForExcel();if(figureData){figures.push({...figure,data:figureData,});}
else{const chart=this.getters.getChart(figureId);if(!chart){continue;}
const type=this.getters.getChartType(figureId);const runtime=this.getters.getChartRuntime(figureId);const img=chartToImageUrl(runtime,figure,type);if(img){sheet.images.push({...figure,tag:"image",data:{mimetype:"image/png",path:img,size:{width:figure.width,height:figure.height},},});}}}
sheet.charts=figures;}}}
class EvaluationConditionalFormatPlugin extends CoreViewPlugin{static getters=["getConditionalIcon","getCellConditionalFormatStyle","getConditionalDataBar",];isStale=true;computedStyles={};computedIcons={};computedDataBars={};handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||invalidateCFEvaluationCommands.has(cmd.type)||(cmd.type==="UPDATE_CELL"&&("content"in cmd||"format"in cmd))){this.isStale=true;}}
finalize(){if(this.isStale){for(const sheetId of this.getters.getSheetIds()){this.computedStyles[sheetId]=lazy(()=>this.getComputedStyles(sheetId));this.computedIcons[sheetId]=lazy(()=>this.getComputedIcons(sheetId));this.computedDataBars[sheetId]=lazy(()=>this.getComputedDataBars(sheetId));}
this.isStale=false;}}
getCellConditionalFormatStyle(position){const{sheetId,col,row}=position;const styles=this.computedStyles[sheetId]();return styles&&styles[col]?.[row];}
getConditionalIcon({sheetId,col,row}){const icons=this.computedIcons[sheetId]();return icons&&icons[col]?.[row];}
getConditionalDataBar({sheetId,col,row}){const dataBars=this.computedDataBars[sheetId]();return dataBars&&dataBars[col]?.[row];}
getComputedStyles(sheetId){const computedStyle={};for(const cf of this.getters.getConditionalFormats(sheetId).reverse()){switch(cf.rule.type){case"ColorScaleRule":for(const range of cf.ranges){this.applyColorScale(sheetId,range,cf.rule,computedStyle);}
break;case"CellIsRule":const formulas=cf.rule.values.map((value)=>value.startsWith("=")?compile(value):undefined);for(const ref of cf.ranges){const zone=this.getters.getRangeFromSheetXC(sheetId,ref).zone;for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const target={sheetId,col,row};const values=cf.rule.values.map((value,i)=>{const compiledFormula=formulas[i];if(compiledFormula){return this.getters.getTranslatedCellFormula(sheetId,col-zone.left,row-zone.top,compiledFormula.tokens);}
return value;});if(this.getRuleResultForTarget(target,{...cf.rule,values})){if(!computedStyle[col])
computedStyle[col]=[];computedStyle[col][row]=Object.assign(computedStyle[col]?.[row]||{},cf.rule.style);}}}}
break;}}
return computedStyle;}
getComputedIcons(sheetId){const computedIcons={};for(const cf of this.getters.getConditionalFormats(sheetId).reverse()){if(cf.rule.type!=="IconSetRule")
continue;for(const range of cf.ranges){this.applyIcon(sheetId,range,cf.rule,computedIcons);}}
return computedIcons;}
getComputedDataBars(sheetId){const computedDataBars={};for(const cf of this.getters.getConditionalFormats(sheetId).reverse()){if(cf.rule.type!=="DataBarRule")
continue;for(const range of cf.ranges){this.applyDataBar(sheetId,range,cf.rule,computedDataBars);}}
return computedDataBars;}
parsePoint(sheetId,range,threshold,functionName){const rangeValues=this.getters.getEvaluatedCellsInZone(sheetId,this.getters.getRangeFromSheetXC(sheetId,range).zone).filter((cell)=>cell.type===CellValueType.number).map((cell)=>cell.value);switch(threshold.type){case"value":return functionName==="max"?largeMax(rangeValues):largeMin(rangeValues);case"number":return Number(threshold.value);case"percentage":const min=largeMin(rangeValues);const max=largeMax(rangeValues);const delta=max-min;return min+(delta*Number(threshold.value))/100;case"percentile":return percentile(rangeValues,Number(threshold.value)/100,true);case"formula":const value=threshold.value&&this.getters.evaluateFormula(sheetId,threshold.value);return typeof value==="number"?value:null;default:return null;}}
applyIcon(sheetId,range,rule,computedIcons){const lowerInflectionPoint=this.parsePoint(sheetId,range,rule.lowerInflectionPoint);const upperInflectionPoint=this.parsePoint(sheetId,range,rule.upperInflectionPoint);if(lowerInflectionPoint===null||upperInflectionPoint===null||lowerInflectionPoint>upperInflectionPoint){return;}
const zone=this.getters.getRangeFromSheetXC(sheetId,range).zone;const iconSet=[rule.icons.upper,rule.icons.middle,rule.icons.lower];for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const cell=this.getters.getEvaluatedCell({sheetId,col,row});if(cell.type!==CellValueType.number){continue;}
const icon=this.computeIcon(cell.value,upperInflectionPoint,rule.upperInflectionPoint.operator,lowerInflectionPoint,rule.lowerInflectionPoint.operator,iconSet);if(!computedIcons[col]){computedIcons[col]=[];}
computedIcons[col][row]=icon;}}}
computeIcon(value,upperInflectionPoint,upperOperator,lowerInflectionPoint,lowerOperator,icons){if((upperOperator==="ge"&&value>=upperInflectionPoint)||(upperOperator==="gt"&&value>upperInflectionPoint)){return icons[0];}
else if((lowerOperator==="ge"&&value>=lowerInflectionPoint)||(lowerOperator==="gt"&&value>lowerInflectionPoint)){return icons[1];}
return icons[2];}
applyDataBar(sheetId,range,rule,computedDataBars){const rangeValues=this.getters.getRangeFromSheetXC(sheetId,rule.rangeValues||range);const allValues=this.getters.getEvaluatedCellsInZone(sheetId,rangeValues.zone).filter((cell)=>cell.type===CellValueType.number).map((cell)=>cell.value);const max=largeMax(allValues);if(max<=0){return;}
const color=rule.color;const zone=this.getters.getRangeFromSheetXC(sheetId,range).zone;const zoneOfValues=rangeValues.zone;for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const targetCol=col-zone.left+zoneOfValues.left;const targetRow=row-zone.top+zoneOfValues.top;const cell=this.getters.getEvaluatedCell({sheetId,col:targetCol,row:targetRow});if(!isInside(targetCol,targetRow,zoneOfValues)||cell.type!==CellValueType.number||cell.value<=0){continue;}
if(!computedDataBars[col])
computedDataBars[col]=[];computedDataBars[col][row]={color:colorNumberString(color),percentage:(cell.value*100)/max,};}}}
applyColorScale(sheetId,range,rule,computedStyle){const minValue=this.parsePoint(sheetId,range,rule.minimum,"min");const midValue=rule.midpoint?this.parsePoint(sheetId,range,rule.midpoint):null;const maxValue=this.parsePoint(sheetId,range,rule.maximum,"max");if(minValue===null||maxValue===null||minValue>=maxValue||(midValue&&(minValue>=midValue||midValue>=maxValue))){return;}
const zone=this.getters.getRangeFromSheetXC(sheetId,range).zone;const colorThresholds=[{value:minValue,color:rule.minimum.color}];if(rule.midpoint&&midValue){colorThresholds.push({value:midValue,color:rule.midpoint.color});}
colorThresholds.push({value:maxValue,color:rule.maximum.color});const colorScale=getColorScale(colorThresholds);for(let row=zone.top;row<=zone.bottom;row++){for(let col=zone.left;col<=zone.right;col++){const cell=this.getters.getEvaluatedCell({sheetId,col,row});if(cell.type===CellValueType.number){const value=clip(cell.value,minValue,maxValue);if(!computedStyle[col])
computedStyle[col]=[];computedStyle[col][row]=computedStyle[col]?.[row]||{};computedStyle[col][row].fillColor=colorScale(value);}}}}
getRuleResultForTarget(target,rule){const cell=this.getters.getEvaluatedCell(target);if(cell.type===CellValueType.error){return false;}
const{sheetId}=target;const evaluator=criterionEvaluatorRegistry.get(rule.operator);const evaluatedCriterionValues=rule.values.map((value)=>{if(!value.startsWith("=")){return parseLiteral(value,DEFAULT_LOCALE);}
return this.getters.evaluateFormula(sheetId,value)??"";});if(evaluatedCriterionValues.some(isMultipleElementMatrix)){return false;}
const evaluatedCriterion={type:rule.operator,values:evaluatedCriterionValues.map(toScalar),};return evaluator.isValueValid(cell.value??"",evaluatedCriterion,this.getters,sheetId);}}
const VALID_RESULT={isValid:true};class EvaluationDataValidationPlugin extends CoreViewPlugin{static getters=["getDataValidationInvalidCriterionValueMessage","getInvalidDataValidationMessage","getValidationResultForCellValue","getDataValidationRangeValues","isCellValidCheckbox","getDataValidationCellStyle","getDataValidationChipStyle","isDataValidationInvalid",];validationResults={};handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||cmd.type==="EVALUATE_CELLS"||(cmd.type==="UPDATE_CELL"&&("content"in cmd||"format"in cmd))){this.validationResults={};return;}
switch(cmd.type){case"ADD_DATA_VALIDATION_RULE":case"REMOVE_DATA_VALIDATION_RULE":delete this.validationResults[cmd.sheetId];break;}}
isDataValidationInvalid(cellPosition){return!this.getValidationResultForCell(cellPosition).isValid;}
getDataValidationCellStyle(position){if(this.hasChip(position)){return undefined;}
return this.getDataValidationStyle(position);}
getDataValidationChipStyle(position){if(this.hasChip(position)){return this.getDataValidationStyle(position)??{fillColor:GRAY_200};}
return undefined;}
getInvalidDataValidationMessage(cellPosition){const validationResult=this.getValidationResultForCell(cellPosition);return validationResult.isValid?undefined:validationResult.error;}
getDataValidationInvalidCriterionValueMessage(criterionType,value){const evaluator=criterionEvaluatorRegistry.get(criterionType);if(value.startsWith("=")){if(evaluator.allowedValues==="onlyLiterals"){return _t("The value must not be a formula");}
return this.isValidFormula(value)?undefined:DVTerms.CriterionError.validFormula;}
else if(evaluator.allowedValues==="onlyFormulas"){return _t("The value must be a formula");}
return evaluator.isCriterionValueValid(value)?undefined:evaluator.criterionValueErrorString;}
getDataValidationRangeValues(sheetId,criterion){const range=this.getters.getRangeFromSheetXC(sheetId,String(criterion.values[0]));const criterionValues=this.getters.getRangeValues(range);return criterionValues.map((value)=>value?.toString()).filter(isDefined);}
isCellValidCheckbox(cellPosition){if(!this.getters.isMainCellPosition(cellPosition)){return false;}
const rule=this.getters.getValidationRuleForCell(cellPosition);if(!rule||rule.criterion.type!=="isBoolean"){return false;}
return this.getValidationResultForCell(cellPosition).isValid;}
getValidationResultForCellValue(cellValue,cellPosition){const rule=this.getters.getValidationRuleForCell(cellPosition);if(!rule){return VALID_RESULT;}
const error=this.getRuleErrorForCellValue(cellValue,cellPosition,rule);return error?{error,rule,isValid:false}:VALID_RESULT;}
hasChip(position){const rule=this.getters.getValidationRuleForCell(position);return((rule?.criterion.type==="isValueInList"||rule?.criterion.type==="isValueInRange")&&rule.criterion.displayStyle==="chip");}
getDataValidationStyle(position){const rule=this.getters.getValidationRuleForCell(position);if(!rule||this.isDataValidationInvalid(position)){return undefined;}
const evaluatedCell=this.getters.getEvaluatedCell(position);const color=this.getValueColor(rule,evaluatedCell.value);if(!color){return undefined;}
const style={fillColor:color,textColor:chipTextColor(color),};return style;}
getValueColor(rule,value){if(rule.criterion.type!=="isValueInList"&&rule.criterion.type!=="isValueInRange"){return undefined;}
for(const criterionValue in rule.criterion.colors){if(criterionValue.toLowerCase()===String(value).toLowerCase()){return rule.criterion.colors[criterionValue];}}
return undefined;}
isValidFormula(value){return!compile(value).isBadExpression;}
getValidationResultForCell(cellPosition){const{col,row,sheetId}=cellPosition;if(!this.validationResults[sheetId]){this.validationResults[sheetId]=this.computeSheetValidationResults(sheetId);}
return this.validationResults[sheetId][col]?.[row]?.()||VALID_RESULT;}
computeSheetValidationResults(sheetId){const validationResults={};const ranges=this.getters.getDataValidationRules(sheetId).map((rule)=>rule.ranges);for(const cellPosition of getCellPositionsInRanges(ranges.flat())){const{col,row}=cellPosition;if(!validationResults[col]){validationResults[col]=[];}
validationResults[col][row]=lazy(()=>{const evaluatedCell=this.getters.getEvaluatedCell(cellPosition);if(evaluatedCell.type===CellValueType.empty){return VALID_RESULT;}
return this.getValidationResultForCellValue(evaluatedCell.value,cellPosition);});}
return validationResults;}
getRuleErrorForCellValue(cellValue,cellPosition,rule){const{sheetId}=cellPosition;const criterion=rule.criterion;const evaluator=criterionEvaluatorRegistry.get(criterion.type);const offset=this.getCellOffsetInRule(cellPosition,rule);const evaluatedCriterionValues=this.getEvaluatedCriterionValues(sheetId,offset,criterion);if(evaluatedCriterionValues.some(isMultipleElementMatrix)){return undefined;}
const evaluatedCriterion={...criterion,values:evaluatedCriterionValues.map(toScalar)};if(evaluator.isValueValid(cellValue,evaluatedCriterion,this.getters,sheetId)){return undefined;}
return evaluator.getErrorString(evaluatedCriterion,this.getters,sheetId);}
getCellOffsetInRule(cellPosition,rule){const range=rule.ranges.find((range)=>isInside(cellPosition.col,cellPosition.row,range.zone));if(!range){throw new Error("The cell is not in any range of the rule");}
return{col:cellPosition.col-range.zone.left,row:cellPosition.row-range.zone.top,};}
getEvaluatedCriterionValues(sheetId,offset,criterion){return criterion.values.map((value)=>{if(!value.startsWith("=")){return parseLiteral(value,DEFAULT_LOCALE);}
const formula=compile(value);const translatedFormula=this.getters.getTranslatedCellFormula(sheetId,offset.col,offset.row,formula.tokens);return this.getters.evaluateFormula(sheetId,translatedFormula);});}}
const iconsOnCellRegistry=new Registry();iconsOnCellRegistry.add("data_validation_checkbox",(getters,position)=>{const hasIcon=getters.isCellValidCheckbox(position);if(hasIcon){const value=!!getters.getEvaluatedCell(position).value;return{svg:value?CHECKBOX_CHECKED:CHECKBOX_UNCHECKED,hoverSvg:value?CHECKBOX_CHECKED:CHECKBOX_UNCHECKED_HOVERED,priority:2,horizontalAlign:"center",size:GRID_ICON_EDGE_LENGTH,margin:GRID_ICON_MARGIN,position,type:"data_validation_checkbox",onClick:(position,env)=>{const cell=env.model.getters.getCell(position);const isDisabled=env.model.getters.isReadonly()||!!cell?.isFormula;if(isDisabled){return;}
const cellContent=value?"FALSE":"TRUE";env.model.dispatch("UPDATE_CELL",{...position,content:cellContent});},};}
return undefined;});iconsOnCellRegistry.add("data_validation_chip_icon",(getters,position)=>{const chipStyle=getters.getDataValidationChipStyle(position);if(chipStyle){const cellStyle=getters.getCellComputedStyle(position);return{svg:getChipSvg(chipStyle),hoverSvg:getHoveredChipSvg(chipStyle),priority:10,horizontalAlign:"right",size:computeTextFontSizeInPixels(cellStyle),margin:4,position,onClick:(position,env)=>{const{col,row}=position;env.model.selection.selectCell(col,row);env.startCellEdition();},type:"data_validation_chip_icon",};}
return undefined;});iconsOnCellRegistry.add("data_validation_list_icon",(getters,position)=>{const hasIcon=!getters.isReadonly()&&getters.cellHasListDataValidationIcon(position);if(hasIcon){const cellStyle=getters.getCellComputedStyle(position);return{svg:getCaretDownSvg(cellStyle),hoverSvg:getHoveredCaretDownSvg(cellStyle),priority:2,horizontalAlign:"right",size:GRID_ICON_EDGE_LENGTH,margin:GRID_ICON_MARGIN,position,onClick:(position,env)=>{const{col,row}=position;env.model.selection.selectCell(col,row);env.startCellEdition();},type:"data_validation_list_icon",};}
return undefined;});iconsOnCellRegistry.add("filter_icon",(getters,position)=>{const hasIcon=getters.isFilterHeader(position);if(hasIcon){const isFilterActive=getters.isFilterActive(position);const cellStyle=getters.getCellComputedStyle(position);const isHighContrast=relativeLuminance(cellStyle.fillColor||"#fff")<0.45;return{type:"filter_icon",svg:getDataFilterIcon(isFilterActive,isHighContrast,false),hoverSvg:getDataFilterIcon(isFilterActive,isHighContrast,true),priority:3,horizontalAlign:"right",size:GRID_ICON_EDGE_LENGTH,margin:GRID_ICON_MARGIN,position,onClick:(position,env)=>{const cellPopovers=env.getStore(CellPopoverStore);const activePopover=cellPopovers.persistentCellPopover;if(activePopover.isOpen&&activePopover.col===position.col&&activePopover.row===position.row&&activePopover.type==="FilterMenu"){cellPopovers.close();return;}
cellPopovers.open(position,"FilterMenu");},};}
return undefined;});iconsOnCellRegistry.add("conditional_formatting",(getters,position)=>{const icon=getters.getConditionalIcon(position);if(icon){const style=getters.getCellStyle(position);return{type:"conditional_formatting",svg:ICONS[icon].svg,priority:1,horizontalAlign:"left",size:computeTextFontSizeInPixels(style),margin:MIN_CF_ICON_MARGIN,position,};}
return undefined;});iconsOnCellRegistry.add("pivot_collapse",(getters,position)=>{if(!getters.isSpillPivotFormula(position)){return undefined;}
const pivotCell=getters.getPivotCellFromPosition(position);const pivotId=getters.getPivotIdFromPosition(position);if(pivotCell.type==="HEADER"&&pivotId&&pivotCell.domain.length){const definition=getters.getPivotCoreDefinition(pivotId);const isDashboard=getters.isDashboard();const fields=pivotCell.dimension==="COL"?definition.columns:definition.rows;const hasIcon=!isDashboard&&pivotCell.domain.length!==fields.length;const domains=definition.collapsedDomains?.[pivotCell.dimension]??[];const isCollapsed=domains.some((domain)=>deepEquals(domain,pivotCell.domain));const indent=pivotCell.dimension==="ROW"?(pivotCell.domain.length-1)*PIVOT_INDENT:0;return{type:"pivot_collapse",priority:4,horizontalAlign:"left",size:hasIcon||(!isDashboard&&pivotCell.dimension==="ROW"&&definition.rows.length>1)?PIVOT_COLLAPSE_ICON_SIZE:0,margin:hasIcon?GRID_ICON_MARGIN*2+indent:indent,svg:hasIcon?getPivotIconSvg(isCollapsed,false):undefined,hoverSvg:hasIcon?getPivotIconSvg(isCollapsed,true):undefined,position,onClick:togglePivotCollapse,};}
return undefined;});function togglePivotCollapse(position,env){const pivotCell=env.model.getters.getPivotCellFromPosition(position);const pivotId=env.model.getters.getPivotIdFromPosition(position);if(!pivotId||pivotCell.type!=="HEADER"){return;}
const definition=env.model.getters.getPivotCoreDefinition(pivotId);const collapsedDomains=definition.collapsedDomains?.[pivotCell.dimension]?[...definition.collapsedDomains[pivotCell.dimension]]:[];const index=collapsedDomains.findIndex((domain)=>deepEquals(domain,pivotCell.domain));if(index!==-1){collapsedDomains.splice(index,1);}
else{collapsedDomains.push(pivotCell.domain);}
const newDomains=definition.collapsedDomains?{...definition.collapsedDomains}:{COL:[],ROW:[]};newDomains[pivotCell.dimension]=collapsedDomains;env.model.dispatch("UPDATE_PIVOT",{pivotId,pivot:{...definition,collapsedDomains:newDomains},});}
class CellIconPlugin extends CoreViewPlugin{static getters=["doesCellHaveGridIcon","getCellIcons","getCellIconRect"];cellIconsCache={};handle(cmd){if(cmd.type!=="SET_VIEWPORT_OFFSET"){this.cellIconsCache={};}}
getCellIcons(position){if(!this.cellIconsCache[position.sheetId]){this.cellIconsCache[position.sheetId]={};}
if(!this.cellIconsCache[position.sheetId][position.col]){this.cellIconsCache[position.sheetId][position.col]={};}
if(!this.cellIconsCache[position.sheetId][position.col][position.row]){this.cellIconsCache[position.sheetId][position.col][position.row]=this.computeCellIcons(position);}
return this.cellIconsCache[position.sheetId][position.col][position.row];}
getCellIconRect(icon,cellRect){const cellPosition=icon.position;const cell=this.getters.getCell(cellPosition);const x=this.getIconHorizontalPosition(cellRect,icon.horizontalAlign,icon);const y=this.getters.computeTextYCoordinate(cellRect,icon.size,cell?.style?.verticalAlign);return{x:x,y:y,width:icon.size,height:icon.size};}
getIconHorizontalPosition(rect,align,icon){const start=rect.x;const end=rect.x+rect.width;switch(align){case"right":return end-icon.margin-icon.size;case"left":return start+icon.margin;default:const centeringOffset=Math.floor((end-start-icon.size)/2);return end-icon.size-centeringOffset;}}
computeCellIcons(position){const icons={left:undefined,right:undefined,center:undefined};const callbacks=iconsOnCellRegistry.getAll();for(const callback of callbacks){const icon=callback(this.getters,position);if(icon&&(!icons[icon.horizontalAlign]||icon.priority>icons[icon.horizontalAlign].priority)){icons[icon.horizontalAlign]=icon;}}
if(icons.center&&(icons.left||icons.right)){const sideIconsPriority=Math.max(icons.left?.priority||0,icons.right?.priority||0);if(icons.center.priority<sideIconsPriority){icons.center=undefined;}
else{icons.left=undefined;icons.right=undefined;}}
return Object.values(icons).filter(isDefined);}
doesCellHaveGridIcon(position){return Boolean(this.getCellIcons(position).length);}}
class DynamicTablesPlugin extends CoreViewPlugin{static getters=["canCreateDynamicTableOnZones","doesZonesContainFilter","getFilter","getFilters","getTable","getTables","getTablesOverlappingZones","getFilterId","getFilterHeaders","isFilterHeader",];tables={};handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||(cmd.type==="UPDATE_CELL"&&("content"in cmd||"format"in cmd))||cmd.type==="EVALUATE_CELLS"){this.tables={};return;}
switch(cmd.type){case"CREATE_TABLE":case"REMOVE_TABLE":case"UPDATE_TABLE":case"DELETE_CONTENT":this.tables={};break;}}
finalize(){for(const sheetId of this.getters.getSheetIds()){if(!this.tables[sheetId]){this.tables[sheetId]=this.computeTables(sheetId);}}}
computeTables(sheetId){const tables=[];const coreTables=this.getters.getCoreTables(sheetId);for(const table of coreTables){if(table.type==="dynamic")
continue;tables.push(table);}
const staticTables=[...tables];for(const coreTable of coreTables){if(coreTable.type!=="dynamic")
continue;const table=this.coreTableToTable(sheetId,coreTable);let tableZone=table.range.zone;for(const staticTable of staticTables){if(overlap(tableZone,staticTable.range.zone)){tableZone={...tableZone,right:staticTable.range.zone.left-1};}}
tables.push({...table,range:this.getters.getRangeFromZone(sheetId,tableZone)});}
return tables;}
getFilters(sheetId){return this.getTables(sheetId).filter((table)=>table.config.hasFilters).map((table)=>table.filters).flat();}
getTables(sheetId){return this.tables[sheetId]||[];}
getFilter(position){const table=this.getTable(position);if(!table||!table.config.hasFilters){return undefined;}
return table.filters.find((filter)=>filter.col===position.col);}
getFilterId(position){return this.getFilter(position)?.id;}
getTable({sheetId,col,row}){return this.getTables(sheetId).find((table)=>isInside(col,row,table.range.zone));}
getTablesOverlappingZones(sheetId,zones){return this.getTables(sheetId).filter((table)=>zones.some((zone)=>overlap(table.range.zone,zone)));}
doesZonesContainFilter(sheetId,zones){return this.getTablesOverlappingZones(sheetId,zones).some((table)=>table.config.hasFilters);}
getFilterHeaders(sheetId){const headers=[];for(const table of this.getTables(sheetId)){if(!table.config.hasFilters){continue;}
const zone=table.range.zone;const row=zone.top;for(let col=zone.left;col<=zone.right;col++){headers.push({sheetId,col,row});}}
return headers;}
isFilterHeader({sheetId,col,row}){const headers=this.getFilterHeaders(sheetId);return headers.some((header)=>header.col===col&&header.row===row);}
canCreateDynamicTableOnZones(sheetId,zones){if(!areZonesContinuous(zones)){return false;}
const unionZone=union(...zones);const topLeft={col:unionZone.left,row:unionZone.top,sheetId};const parentSpreadingCell=this.getters.getArrayFormulaSpreadingOn(topLeft);if(!parentSpreadingCell){return false;}
else if(deepEquals(parentSpreadingCell,topLeft)&&getZoneArea(unionZone)===1){return true;}
const zone=this.getters.getSpreadZone(parentSpreadingCell);return deepEquals(unionZone,zone);}
coreTableToTable(sheetId,table){if(table.type!=="dynamic"){return table;}
const tableZone=table.range.zone;const tablePosition={sheetId,col:tableZone.left,row:tableZone.top};const zone=this.getters.getSpreadZone(tablePosition)??table.range.zone;const range=this.getters.getRangeFromZone(sheetId,zone);const filters=this.getDynamicTableFilters(sheetId,table,zone);return{id:table.id,range,filters,config:table.config};}
getDynamicTableFilters(sheetId,table,tableZone){const filters=[];const{top,bottom,left,right}=tableZone;for(let col=left;col<=right;col++){const tableColIndex=col-left;const zone={left:col,right:col,top,bottom};const filter=createFilter(this.getDynamicTableFilterId(table.id,tableColIndex),this.getters.getRangeFromZone(sheetId,zone),table.config,this.getters.getRangeFromZone);filters.push(filter);}
return filters;}
getDynamicTableFilterId(tableId,tableCol){return tableId+"_"+tableCol;}
exportForExcel(data){for(const sheet of data.sheets){for(const tableData of sheet.tables){const zone=toZone(tableData.range);const topLeft={sheetId:sheet.id,col:zone.left,row:zone.top};const coreTable=this.getters.getCoreTable(topLeft);const table=this.getTable(topLeft);if(coreTable?.type!=="dynamic"||!table){continue;}
tableData.range=zoneToXc(table.range.zone);}}}}
class HeaderSizeUIPlugin extends CoreViewPlugin{static getters=["getRowSize","getHeaderSize","getMaxAnchorOffset"];tallestCellInRow={};ctx=document.createElement("canvas").getContext("2d");handle(cmd){switch(cmd.type){case"START":for(const sheetId of this.getters.getSheetIds()){this.initializeSheet(sheetId);}
break;case"CREATE_SHEET":{this.initializeSheet(cmd.sheetId);break;}
case"DUPLICATE_SHEET":{const tallestCells=deepCopy(this.tallestCellInRow[cmd.sheetId]);this.history.update("tallestCellInRow",cmd.sheetIdTo,tallestCells);break;}
case"DELETE_SHEET":const tallestCells={...this.tallestCellInRow};delete tallestCells[cmd.sheetId];this.history.update("tallestCellInRow",tallestCells);break;case"REMOVE_COLUMNS_ROWS":{if(cmd.dimension==="COL"){return;}
const tallestCells=removeIndexesFromArray(this.tallestCellInRow[cmd.sheetId],cmd.elements);this.history.update("tallestCellInRow",cmd.sheetId,tallestCells);break;}
case"ADD_COLUMNS_ROWS":{if(cmd.dimension==="COL"){return;}
const addIndex=getAddHeaderStartIndex(cmd.position,cmd.base);const newCells=Array(cmd.quantity).fill(undefined);const newTallestCells=insertItemsAtIndex(this.tallestCellInRow[cmd.sheetId],newCells,addIndex);this.history.update("tallestCellInRow",cmd.sheetId,newTallestCells);break;}
case"RESIZE_COLUMNS_ROWS":{const sheetId=cmd.sheetId;if(cmd.dimension==="ROW"){for(const row of cmd.elements){const tallestCell=this.getRowTallestCell(sheetId,row);this.history.update("tallestCellInRow",sheetId,row,tallestCell);}}
else{for(const row of range(0,this.getters.getNumberRows(sheetId))){for(const col of cmd.elements){this.updateRowSizeForCellChange(sheetId,row,col);}}}}
break;case"UPDATE_CELL":this.updateRowSizeForCellChange(cmd.sheetId,cmd.row,cmd.col);break;case"ADD_MERGE":case"REMOVE_MERGE":for(const target of cmd.target){for(const position of positions(target)){this.updateRowSizeForCellChange(cmd.sheetId,position.row,position.col);}}}
return;}
getRowSize(sheetId,row){return Math.round(this.getters.getUserRowSize(sheetId,row)??this.tallestCellInRow[sheetId][row]?.size??DEFAULT_CELL_HEIGHT);}
getMaxAnchorOffset(sheetId,height,width){let{numberOfRows:row,numberOfCols:col}=this.getters.getSheetSize(sheetId);let availableHeight=0;for(;availableHeight<height&&row>0;row--){availableHeight+=this.getRowSize(sheetId,row-1);}
let availableWidth=0;for(;availableWidth<width&&col>0;col--){availableWidth+=this.getters.getColSize(sheetId,col-1);}
return{col,row,offset:{x:availableWidth-width,y:availableHeight-height},};}
getHeaderSize(sheetId,dimension,index){if(this.getters.isHeaderHidden(sheetId,dimension,index)){return 0;}
return dimension==="ROW"?this.getRowSize(sheetId,index):this.getters.getColSize(sheetId,index);}
updateRowSizeForCellChange(sheetId,row,col){const tallestCellInRow=this.tallestCellInRow[sheetId]?.[row];if(tallestCellInRow?.cell.col===col){const newTallestCell=this.getRowTallestCell(sheetId,row);this.history.update("tallestCellInRow",sheetId,row,newTallestCell);}
const updatedCellHeight=this.getCellHeight({sheetId,col,row});if(updatedCellHeight<=DEFAULT_CELL_HEIGHT){return;}
if((!tallestCellInRow&&updatedCellHeight>DEFAULT_CELL_HEIGHT)||(tallestCellInRow&&updatedCellHeight>tallestCellInRow.size)){const newTallestCell={cell:{sheetId,col,row},size:updatedCellHeight};this.history.update("tallestCellInRow",sheetId,row,newTallestCell);}}
initializeSheet(sheetId){const tallestCells=[];for(let row=0;row<this.getters.getNumberRows(sheetId);row++){const tallestCell=this.getRowTallestCell(sheetId,row);tallestCells.push(tallestCell);}
this.history.update("tallestCellInRow",sheetId,tallestCells);}
getCellHeight(position){if(this.isInMultiRowMerge(position)){return DEFAULT_CELL_HEIGHT;}
const cell=this.getters.getCell(position);const colSize=this.getters.getColSize(position.sheetId,position.col);return getDefaultCellHeight(this.ctx,cell,colSize);}
isInMultiRowMerge(position){const merge=this.getters.getMerge(position);return!!merge&&merge.bottom!==merge.top;}
getRowTallestCell(sheetId,row){const userRowSize=this.getters.getUserRowSize(sheetId,row);if(userRowSize!==undefined){return undefined;}
const cellIds=this.getters.getRowCells(sheetId,row);let maxHeight=0;let tallestCell=undefined;for(let i=0;i<cellIds.length;i++){const cell=this.getters.getCellById(cellIds[i]);if(!cell){continue;}
const position=this.getters.getCellPosition(cell.id);const cellHeight=this.getCellHeight(position);if(cellHeight>maxHeight&&cellHeight>DEFAULT_CELL_HEIGHT){maxHeight=cellHeight;tallestCell={cell:position,size:cellHeight};}}
if(tallestCell&&tallestCell.size>DEFAULT_CELL_HEIGHT){return tallestCell;}
return undefined;}}
const PERCENT_FORMAT="0.00%";function withPivotPresentationLayer(PivotClass){class PivotPresentationLayer extends PivotClass{getters;cache={};rankAsc={};rankDesc={};runningTotal={};runningTotalInPercent={};constructor(custom,params){super(custom,params);this.getters=params.getters;}
markAsDirtyForEvaluation(){this.cache={};this.rankAsc={};this.rankDesc={};this.runningTotal={};this.runningTotalInPercent={};super.markAsDirtyForEvaluation?.();}
getPivotCellValueAndFormat(measureName,domain){return this.getMeasureDisplayValue(measureName,domain);}
_getPivotCellValueAndFormat(measureName,domain){const cacheKey=`${measureName}-${domain
                .map((node) => node.field + "=" + node.value)
                .join(",")}`;if(this.cache[cacheKey]){return this.cache[cacheKey];}
const measure=this.getMeasure(measureName);const result=measure.computedBy?this.computeMeasure(measure,domain):super.getPivotCellValueAndFormat(measureName,domain);if(measure.format){this.cache[cacheKey]={...result,format:measure.format};}
else{this.cache[cacheKey]=result;}
return this.cache[cacheKey];}
computeMeasure(measure,domain){if(!measure.computedBy){return{value:0};}
const{columns,rows}=super.definition;if(columns.length+rows.length!==domain.length){const values=this.getValuesToAggregate(measure,domain);const aggregator=AGGREGATORS_FN[measure.aggregator];if(!aggregator){return{value:0};}
try{return aggregator([values],this.getters.getLocale());}
catch(error){return handleError(error,measure.aggregator.toUpperCase());}}
const formula=this.getters.getMeasureCompiledFormula(measure);const getSymbolValue=(symbolName)=>{const{columns,rows}=this.definition;if(columns.find((col)=>col.nameWithGranularity===symbolName)){const{colDomain}=domainToColRowDomain(this,domain);const symbolIndex=colDomain.findIndex((node)=>node.field===symbolName);return this.getPivotHeaderValueAndFormat(colDomain.slice(0,symbolIndex+1));}
if(rows.find((row)=>row.nameWithGranularity===symbolName)){const{rowDomain}=domainToColRowDomain(this,domain);const symbolIndex=rowDomain.findIndex((row)=>row.field===symbolName);return this.getPivotHeaderValueAndFormat(rowDomain.slice(0,symbolIndex+1));}
return this.getPivotCellValueAndFormat(symbolName,domain);};const result=this.getters.evaluateCompiledFormula(measure.computedBy.sheetId,formula,getSymbolValue);if(isMatrix(result)){return result[0][0];}
return result;}
getValuesToAggregate(measure,domain){const{rowDomain,colDomain}=domainToColRowDomain(this,domain);const table=super.getExpandedTableStructure();const values=[];if(colDomain.length===0&&rowDomain.length<this.definition.rows.length&&this.definition.rows.length&&this.definition.columns.length){const colDomains=this.treeToLeafDomains(table.getColTree());const rowSubTree=this.getSubTreeMatchingDomain(table.getRowTree(),rowDomain);const rowDomains=this.treeToLeafDomains(rowSubTree);for(const colDomain of colDomains){for(const subRowDomain of rowDomains){values.push(this._getPivotCellValueAndFormat(measure.id,rowDomain.concat(subRowDomain).concat(colDomain)));}}
return values;}
else if(rowDomain.length===this.definition.rows.length&&colDomain.length===0){const tree=table.getColTree();const subTree=this.getSubTreeMatchingDomain(tree,colDomain);const domains=this.treeToLeafDomains(subTree,colDomain);for(const domain of domains){values.push(this._getPivotCellValueAndFormat(measure.id,rowDomain.concat(domain)));}
return values;}
else if(rowDomain.length===this.definition.rows.length&&colDomain.length&&colDomain.length<this.definition.columns.length){const colSubTree=this.getSubTreeMatchingDomain(table.getColTree(),colDomain);const domains=this.treeToLeafDomains(colSubTree,colDomain);for(const domain of domains){values.push(this._getPivotCellValueAndFormat(measure.id,rowDomain.concat(domain)));}
return values;}
else{const tree=table.getRowTree();const subTree=this.getSubTreeMatchingDomain(tree,rowDomain);const domains=this.treeToLeafDomains(subTree,rowDomain);for(const domain of domains){values.push(this._getPivotCellValueAndFormat(measure.id,domain.concat(colDomain)));}
return values;}}
getSubTreeMatchingDomain(tree,domain,domainLevel=0){if(domainLevel>domain.length){return[];}
if(domain.length===domainLevel){return tree;}
for(const node of tree){const dimension=this.definition.getDimension(node.field);const normalizedValue=toNormalizedPivotValue(dimension,domain[domainLevel]?.value);if(node.field===domain[domainLevel]?.field&&node.value===normalizedValue){return this.getSubTreeMatchingDomain(node.children,domain,domainLevel+1);}}
return[];}
treeToLeafDomains(tree,parentDomain=[]){const domains=[];for(const node of tree){const dimension=this.definition.getDimension(node.field);const nodeDomain=[...parentDomain,{field:node.field,value:node.value,type:dimension.type},];if(node.children.length===0){domains.push(nodeDomain);}
else{domains.push(...this.treeToLeafDomains(node.children,nodeDomain));}}
return domains;}
getMeasureDisplayValue(measureId,domain){const measure=this.getMeasure(measureId);const rawValue=this._getPivotCellValueAndFormat(measureId,domain);if(!measure.display||measure.display.type==="no_calculations"||rawValue.message){return rawValue;}
const fieldName=measure.display.fieldNameWithGranularity;if(fieldName&&!this.isFieldInPivot(fieldName)){return{value:CellErrorType.NotAvailable,message:_t('Field "%s" not found in pivot for measure display calculation',fieldName),};}
try{const display=measure.display;switch(display.type){case"%_of_grand_total":return this.asPercentOfGrandTotal(rawValue,measure);case"%_of_col_total":return this.asPercentOfColumnTotal(rawValue,measure,domain);case"%_of_row_total":return this.asPercentOfRowTotal(rawValue,measure,domain);case"%_of_parent_row_total":return this.asPercentOfParentRowTotal(rawValue,measure,domain);case"%_of_parent_col_total":return this.asPercentOfParentColumnTotal(rawValue,measure,domain);case"index":return this.asIndex(rawValue,measure,domain);case"%_of_parent_total":return this.asPercentOfParentTotal(rawValue,measure,domain,display);case"running_total":return this.asRunningTotal(rawValue,measure,domain,display,"running_total");case"%_running_total":return this.asRunningTotal(rawValue,measure,domain,display,"%_running_total");case"rank_asc":return this.asRank(rawValue,measure,domain,display,"asc");case"rank_desc":return this.asRank(rawValue,measure,domain,display,"desc");case"%_of":return this.asPercentOf(rawValue,measure,domain,display);case"difference_from":return this.asDifferenceFrom(rawValue,measure,domain,display);case"%_difference_from":return this.asDifferenceFromInPercent(rawValue,measure,domain,display);}
return rawValue;}
catch(e){return handleError(e,"COMPUTE_MEASURE_DISPLAY_VALUE");}}
asPercentOfGrandTotal(rawValue,measure){const grandTotal=this.getGrandTotal(measure.id);return grandTotal===0?{value:CellErrorType.DivisionByZero}:{value:this.measureValueToNumber(rawValue)/grandTotal,format:PERCENT_FORMAT};}
asPercentOfRowTotal(rawValue,measure,domain){const rowTotal=this.getRowTotal(measure.id,domain);return rowTotal===0?{value:CellErrorType.DivisionByZero}:{value:this.measureValueToNumber(rawValue)/rowTotal,format:PERCENT_FORMAT};}
asPercentOfColumnTotal(rawValue,measure,domain){const columnTotal=this.getColumnTotal(measure.id,domain);return columnTotal===0?{value:CellErrorType.DivisionByZero}:{value:this.measureValueToNumber(rawValue)/columnTotal,format:PERCENT_FORMAT};}
asPercentOfParentRowTotal(rawValue,measure,domain){const parentRowDomain=getDomainOfParentRow(this,domain);const parentRowValue=this.measureValueToNumber(this._getPivotCellValueAndFormat(measure.id,parentRowDomain));return parentRowValue===0?{value:""}:{value:this.measureValueToNumber(rawValue)/parentRowValue,format:PERCENT_FORMAT};}
asPercentOfParentColumnTotal(rawValue,measure,domain){const parentColumnDomain=getDomainOfParentCol(this,domain);const parentColValue=this.measureValueToNumber(this._getPivotCellValueAndFormat(measure.id,parentColumnDomain));return parentColValue===0?{value:""}:{value:this.measureValueToNumber(rawValue)/parentColValue,format:PERCENT_FORMAT};}
asPercentOfParentTotal(rawValue,measure,domain,display){const{fieldNameWithGranularity}=display;if(!fieldNameWithGranularity){return rawValue;}
if(!isFieldInDomain(fieldNameWithGranularity,domain)){return{value:""};}
const parentDomain=getFieldParentDomain(this,fieldNameWithGranularity,domain);const parentTotal=this._getPivotCellValueAndFormat(measure.id,parentDomain);const parentTotalValue=this.measureValueToNumber(parentTotal);return parentTotalValue===0?{value:""}:{value:this.measureValueToNumber(rawValue)/parentTotalValue,format:PERCENT_FORMAT};}
asIndex(rawValue,measure,domain){const value=this.measureValueToNumber(rawValue);const parentRowTotal=this.getRowTotal(measure.id,domain);const parentColTotal=this.getColumnTotal(measure.id,domain);const grandTotal=this.getGrandTotal(measure.id);return parentRowTotal===0||parentColTotal===0?{value:CellErrorType.DivisionByZero}:{value:(value*grandTotal)/(parentColTotal*parentRowTotal),format:undefined};}
asRunningTotal(rawValue,measure,domain,display,mode){const{fieldNameWithGranularity}=display;if(!fieldNameWithGranularity){return rawValue;}
const totalCache=mode==="running_total"?this.runningTotal:this.runningTotalInPercent;let runningTotals=totalCache[measure.id]?.[fieldNameWithGranularity];if(!runningTotals){runningTotals=this.computeRunningTotal(measure,fieldNameWithGranularity,mode);if(!totalCache[measure.id]){totalCache[measure.id]={};}
totalCache[measure.id][fieldNameWithGranularity]=runningTotals;}
const{rowDomain,colDomain}=domainToColRowDomain(this,domain);const colDomainKey=domainToString(colDomain);const rowDomainKey=domainToString(rowDomain);const runningTotal=runningTotals[colDomainKey]?.[rowDomainKey];return{value:runningTotal??"",format:mode==="running_total"?rawValue.format:PERCENT_FORMAT,};}
asPercentOf(rawValue,measure,domain,display){const{fieldNameWithGranularity,value}=display;if(value===undefined||!fieldNameWithGranularity){return rawValue;}
if(!isFieldInDomain(fieldNameWithGranularity,domain)){return{value:""};}
const comparedValue=this.getComparisonValue(measure,domain,fieldNameWithGranularity,value);const numberValue=this.strictMeasureValueToNumber(rawValue);if(comparedValue===0||(comparedValue==="sameValue"&&numberValue===0)){return{value:CellErrorType.DivisionByZero};}
else if(!comparedValue||(comparedValue==="sameValue"&&!numberValue)){return{value:""};}
else if(comparedValue==="sameValue"){return{value:1,format:PERCENT_FORMAT};}
else if(numberValue===undefined){return{value:CellErrorType.NullError};}
return{value:numberValue/comparedValue,format:PERCENT_FORMAT};}
asDifferenceFrom(rawValue,measure,domain,display){const{fieldNameWithGranularity,value}=display;if(value===undefined||!fieldNameWithGranularity){return rawValue;}
if(!isFieldInDomain(fieldNameWithGranularity,domain)){return{value:""};}
const comparedValue=this.getComparisonValue(measure,domain,fieldNameWithGranularity,value)||0;return comparedValue==="sameValue"?{value:""}:{value:this.measureValueToNumber(rawValue)-comparedValue,format:rawValue.format,};}
asDifferenceFromInPercent(rawValue,measure,domain,display){const{fieldNameWithGranularity,value}=display;if(value===undefined||!fieldNameWithGranularity){return rawValue;}
if(!isFieldInDomain(fieldNameWithGranularity,domain)){return{value:""};}
const comparedValue=this.getComparisonValue(measure,domain,fieldNameWithGranularity,value);const numberValue=this.strictMeasureValueToNumber(rawValue);if(comparedValue===0){return{value:CellErrorType.DivisionByZero};}
else if(!comparedValue||comparedValue==="sameValue"){return{value:""};}
else if(numberValue===undefined){return{value:CellErrorType.NullError};}
return{value:(numberValue-comparedValue)/comparedValue,format:PERCENT_FORMAT};}
asRank(rawValue,measure,domain,display,order){const{fieldNameWithGranularity}=display;if(!fieldNameWithGranularity){return rawValue;}
if(!isFieldInDomain(fieldNameWithGranularity,domain)){return{value:""};}
const rankingCache=order==="asc"?this.rankAsc:this.rankDesc;let ranking=rankingCache[measure.id]?.[fieldNameWithGranularity];if(!ranking){ranking=this.computeRank(measure,fieldNameWithGranularity,order);if(!rankingCache[measure.id]){rankingCache[measure.id]={};}
rankingCache[measure.id][fieldNameWithGranularity]=ranking;}
const{rowDomain,colDomain}=domainToColRowDomain(this,domain);const colDomainKey=domainToString(colDomain);const rowDomainKey=domainToString(rowDomain);const rank=ranking[colDomainKey]?.[rowDomainKey];return{value:rank??""};}
computeRank(measure,fieldNameWithGranularity,order){const ranking={};const mainDimension=getFieldDimensionType(this,fieldNameWithGranularity);const secondaryDimension=mainDimension==="row"?"column":"row";let pivotCells=this.getPivotValueCells(measure.id);if(mainDimension==="column"){pivotCells=transposeMatrix(pivotCells);}
for(const col of pivotCells){const colDomain=getDimensionDomain(this,secondaryDimension,col[0].domain);const colDomainKey=domainToString(colDomain);const cells=col.map((cell)=>({...cell,value:this.strictMeasureValueToNumber(this._getPivotCellValueAndFormat(measure.id,cell.domain)),rowDomain:getDimensionDomain(this,mainDimension,cell.domain),})).filter((cell)=>isFieldInDomain(fieldNameWithGranularity,cell.rowDomain));const groupedCell=Object.groupBy(cells,(cell)=>getRankingDomainKey(cell.rowDomain,fieldNameWithGranularity));for(const rankingDomainKey in groupedCell){groupedCell[rankingDomainKey]=removeDuplicates$1(groupedCell[rankingDomainKey]||[],(cell)=>cell.value).filter((cell)=>cell.value!==undefined).sort((a,b)=>(order==="asc"?a.value-b.value:b.value-a.value));}
ranking[colDomainKey]={};for(const cell of cells){const rowDomain=getDimensionDomain(this,mainDimension,cell.domain);const rowDomainKey=domainToString(rowDomain);const rankingDomainKey=getRankingDomainKey(cell.rowDomain,fieldNameWithGranularity);const group=groupedCell[rankingDomainKey];if(!group){continue;}
const rank=group.findIndex((c)=>c.value===cell.value);if(rank!==-1){ranking[colDomainKey][rowDomainKey]=rank+1;}}}
return mainDimension==="row"?ranking:transpose2dPOJO(ranking);}
computeRunningTotal(measure,fieldNameWithGranularity,mode){const cellsRunningTotals={};const mainDimension=getFieldDimensionType(this,fieldNameWithGranularity);const secondaryDimension=mainDimension==="row"?"column":"row";let pivotCells=this.getPivotValueCells(measure.id);if(mainDimension==="column"){pivotCells=transposeMatrix(pivotCells);}
for(const col of pivotCells){const colDomain=getDimensionDomain(this,secondaryDimension,col[0].domain);const colDomainKey=domainToString(colDomain);cellsRunningTotals[colDomainKey]={};const runningTotals={};const cellsWithValue=col.map((cell)=>({...cell,rowDomain:getDimensionDomain(this,mainDimension,cell.domain),value:this.measureValueToNumber(this._getPivotCellValueAndFormat(measure.id,cell.domain)),})).filter((cell)=>isFieldInDomain(fieldNameWithGranularity,cell.rowDomain));for(const cell of cellsWithValue){const rowDomainKey=domainToString(cell.rowDomain);const runningTotalKey=getRunningTotalDomainKey(cell.rowDomain,fieldNameWithGranularity);const runningTotal=(runningTotals[runningTotalKey]||0)+cell.value;runningTotals[runningTotalKey]=runningTotal;cellsRunningTotals[colDomainKey][rowDomainKey]=runningTotal;}
if(mode==="%_running_total"){for(const cell of cellsWithValue){const rowDomain=cell.rowDomain;const rowDomainKey=domainToString(rowDomain);const runningTotalKey=getRunningTotalDomainKey(rowDomain,fieldNameWithGranularity);const cellRunningTotal=cellsRunningTotals[colDomainKey][rowDomainKey]||0;const finalRunningTotal=runningTotals[runningTotalKey];cellsRunningTotals[colDomainKey][rowDomainKey]=!finalRunningTotal?undefined:cellRunningTotal/finalRunningTotal;}}}
return mainDimension==="row"?cellsRunningTotals:transpose2dPOJO(cellsRunningTotals);}
getGrandTotal(measureId){const grandTotal=this._getPivotCellValueAndFormat(measureId,[]);return this.measureValueToNumber(grandTotal);}
getRowTotal(measureId,domain){const totalDomain=domainToColRowDomain(this,domain).rowDomain;const rowTotal=this._getPivotCellValueAndFormat(measureId,totalDomain);return this.measureValueToNumber(rowTotal);}
getColumnTotal(measureId,domain){const totalDomain=domainToColRowDomain(this,domain).colDomain;const columnTotal=this._getPivotCellValueAndFormat(measureId,totalDomain);return this.measureValueToNumber(columnTotal);}
isFieldInPivot(nameWithGranularity){return(this.definition.columns.some((c)=>c.nameWithGranularity===nameWithGranularity)||this.definition.rows.some((r)=>r.nameWithGranularity===nameWithGranularity));}
getComparisonValue(measure,domain,fieldNameWithGranularity,valueToCompare){const comparedDomain=valueToCompare===PREVIOUS_VALUE||valueToCompare===NEXT_VALUE?getPreviousOrNextValueDomain(this,domain,fieldNameWithGranularity,valueToCompare):replaceFieldValueInDomain(domain,fieldNameWithGranularity,valueToCompare);if(deepEquals(comparedDomain,domain)){return"sameValue";}
if(!comparedDomain||!isDomainIsInPivot(this,comparedDomain)){throw new NotAvailableError();}
const comparedValue=this._getPivotCellValueAndFormat(measure.id,comparedDomain);return this.strictMeasureValueToNumber(comparedValue);}
getPivotValueCells(measureId){return this.getCollapsedTableStructure().getPivotCells().map((col)=>col.filter((cell)=>cell.type==="VALUE"&&cell.measure===measureId)).filter((col)=>col.length>0);}
measureValueToNumber(result){if(typeof result.value==="number"){return result.value;}
if(!result.value){return 0;}
throw new Error(`Value ${result.value} is not a number`);}
strictMeasureValueToNumber(result){if(typeof result.value==="number"){return result.value;}
if(!result.value){return undefined;}
throw new Error(`Value ${result.value} is not a number`);}
getCollapsedTableStructure(){const table=super.getCollapsedTableStructure();this.sortTableStructure(table);return table;}
getExpandedTableStructure(){const table=super.getExpandedTableStructure();this.sortTableStructure(table);return table;}
sortTableStructure(table){if(!this.definition.sortedColumn||table.isSorted){return;}
const measure=this.definition.sortedColumn.measure;const isSortValid=isSortedColumnValid(this.definition.sortedColumn,this);if(isSortValid){table.sort(measure,this.definition.sortedColumn,(measure,domain)=>this._getPivotCellValueAndFormat(measure,domain));}}}
return PivotPresentationLayer;}
const UNDO_REDO_PIVOT_COMMANDS=["ADD_PIVOT","UPDATE_PIVOT"];function isPivotCommand(cmd){return UNDO_REDO_PIVOT_COMMANDS.includes(cmd.type);}
class PivotUIPlugin extends CoreViewPlugin{static getters=["getPivot","getFirstPivotFunction","getPivotIdFromPosition","getPivotCellFromPosition","generateNewCalculatedMeasureName","isPivotUnused","isSpillPivotFormula",];pivots={};unusedPivots;custom;constructor(config){super(config);this.custom=config.custom;}
beforeHandle(cmd){switch(cmd.type){case"START":for(const pivotId of this.getters.getPivotIds()){this.setupPivot(pivotId);}}}
handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)){for(const pivotId of this.getters.getPivotIds()){if(!pivotRegistry.get(this.getters.getPivotCoreDefinition(pivotId).type).externalData){this.setupPivot(pivotId,{recreate:true});}}}
switch(cmd.type){case"REFRESH_PIVOT":this.refreshPivot(cmd.id);break;case"ADD_PIVOT":{this.setupPivot(cmd.pivotId);break;}
case"DUPLICATE_PIVOT":{this.setupPivot(cmd.newPivotId);break;}
case"UPDATE_PIVOT":{this.setupPivot(cmd.pivotId,{recreate:true});break;}
case"DELETE_SHEET":case"UPDATE_CELL":{this.unusedPivots=undefined;break;}
case"UNDO":case"REDO":{this.unusedPivots=undefined;const pivotCommands=cmd.commands.filter(isPivotCommand);for(const cmd of pivotCommands){const pivotId=cmd.pivotId;if(!this.getters.isExistingPivot(pivotId)){continue;}
this.setupPivot(pivotId,{recreate:true});}
break;}
case"UPDATE_LOCALE":resetMapValueDimensionDate();break;}}
getPivotIdFromPosition(position){const cell=this.getters.getCorrespondingFormulaCell(position);if(cell&&cell.isFormula){const pivotFunction=this.getFirstPivotFunction(position.sheetId,cell.compiledFormula.tokens);if(pivotFunction){const pivotId=pivotFunction.args[0]?.toString();return pivotId&&this.getters.getPivotId(pivotId);}}
return undefined;}
isSpillPivotFormula(position){const cell=this.getters.getCorrespondingFormulaCell(position);if(cell&&cell.isFormula){const pivotFunction=this.getFirstPivotFunction(position.sheetId,cell.compiledFormula.tokens);return pivotFunction?.functionName==="PIVOT";}
return false;}
getFirstPivotFunction(sheetId,tokens){const pivotFunction=getFirstPivotFunction(tokens);if(!pivotFunction){return undefined;}
const{functionName,args}=pivotFunction;const evaluatedArgs=args.map((argAst)=>{if(argAst.type==="EMPTY"){return undefined;}
else if(argAst.type==="STRING"||argAst.type==="BOOLEAN"||argAst.type==="NUMBER"){return argAst.value;}
const argsString=astToFormula(argAst);return this.getters.evaluateFormula(sheetId,argsString);});return{functionName,args:evaluatedArgs};}
getPivotCellFromPosition(position){const cell=this.getters.getCorrespondingFormulaCell(position);if(!cell||!cell.isFormula||getNumberOfPivotFunctions(cell.compiledFormula.tokens)===0){return EMPTY_PIVOT_CELL;}
const mainPosition=this.getters.getCellPosition(cell.id);const result=this.getters.getFirstPivotFunction(position.sheetId,cell.compiledFormula.tokens);if(!result){return EMPTY_PIVOT_CELL;}
const{functionName,args}=result;const formulaId=args[0];if(!formulaId){return EMPTY_PIVOT_CELL;}
const pivotId=this.getters.getPivotId(formulaId.toString());if(!pivotId){return EMPTY_PIVOT_CELL;}
const pivot=this.getPivot(pivotId);if(!pivot.isValid()){return EMPTY_PIVOT_CELL;}
if(functionName==="PIVOT"&&!cell.content.replaceAll(" ","").toUpperCase().startsWith("=PIVOT")){return EMPTY_PIVOT_CELL;}
if(functionName==="PIVOT"){const includeTotal=toScalar(args[2]);const shouldIncludeTotal=includeTotal===undefined?true:toBoolean(includeTotal);const includeColumnHeaders=toScalar(args[3]);const includeMeasures=toScalar(args[5]);const shouldIncludeMeasures=includeMeasures===undefined?true:toBoolean(includeMeasures);const shouldIncludeColumnHeaders=includeColumnHeaders===undefined?true:toBoolean(includeColumnHeaders);const visibilityOptions={displayColumnHeaders:shouldIncludeColumnHeaders,displayTotals:shouldIncludeTotal,displayMeasuresRow:shouldIncludeMeasures,};const pivotCells=pivot.getCollapsedTableStructure().getPivotCells(visibilityOptions);const pivotCol=position.col-mainPosition.col;const pivotRow=position.row-mainPosition.row;return pivotCells[pivotCol][pivotRow];}
try{if(functionName==="PIVOT.HEADER"&&args.at(-2)==="measure"){const domain=pivot.parseArgsToPivotDomain(args.slice(1,-2).map((value)=>({value})));return{type:"MEASURE_HEADER",domain,measure:args.at(-1)?.toString()||"",};}
else if(functionName==="PIVOT.HEADER"){const domain=pivot.parseArgsToPivotDomain(args.slice(1).map((value)=>({value})));const colRowDomain=domainToColRowDomain(pivot,domain);return{type:"HEADER",domain,dimension:colRowDomain.colDomain.length?"COL":"ROW",};}
const[measure,...domainArgs]=args.slice(1);const domain=pivot.parseArgsToPivotDomain(domainArgs.map((value)=>({value})));return{type:"VALUE",domain,measure:measure?.toString()||"",};}
catch(_){return EMPTY_PIVOT_CELL;}}
generateNewCalculatedMeasureName(measures){const existingMeasures=measures.map((m)=>m.fieldName);return getUniqueText(_t("Calculated measure 1"),existingMeasures,{compute:(name,i)=>_t("Calculated measure %s",i),});}
getPivot(pivotId){if(!this.getters.isExistingPivot(pivotId)){throw new Error(`pivot ${pivotId} not found`);}
return this.pivots[pivotId];}
isPivotUnused(pivotId){return this._getUnusedPivots().includes(pivotId);}
refreshPivot(pivotId){const pivot=this.getters.getPivot(pivotId);pivot.init({reload:true});}
setupPivot(pivotId,{recreate}={recreate:false}){const definition=this.getters.getPivotCoreDefinition(pivotId);if(!(pivotId in this.pivots)){const Pivot=withPivotPresentationLayer(pivotRegistry.get(definition.type).ui);this.pivots[pivotId]=new Pivot(this.custom,{definition,getters:this.getters});}
else if(recreate){this.pivots[pivotId].onDefinitionChange(definition);}}
_getUnusedPivots(){if(this.unusedPivots!==undefined){return this.unusedPivots;}
const unusedPivots=new Set(this.getters.getPivotIds());for(const sheetId of this.getters.getSheetIds()){for(const cellId in this.getters.getCells(sheetId)){const position=this.getters.getCellPosition(cellId);const pivotId=this.getPivotIdFromPosition(position);if(pivotId){unusedPivots.delete(pivotId);if(!unusedPivots.size){this.unusedPivots=[];return[];}}}}
this.unusedPivots=[...unusedPivots];return this.unusedPivots;}}
const autofillModifiersRegistry=new Registry();autofillModifiersRegistry.add("ALPHANUMERIC_INCREMENT_MODIFIER",{apply:(rule,data)=>{rule.current+=rule.increment;let value=Math.abs(rule.current).toString();value="0".repeat(Math.max(rule.numberPostfixLength-value.length,0))+value;const content=`${rule.prefix}${value}`;return{cellData:{border:data.border,style:data.cell&&data.cell.style,format:data.cell&&data.cell.format,content,},tooltip:{props:{content}},};},}).add("INCREMENT_MODIFIER",{apply:(rule,data,getters)=>{rule.current+=rule.increment;const content=rule.current.toString();const locale=getters.getLocale();const tooltipValue=formatValue(rule.current,{format:data.cell?.format,locale});return{cellData:{border:data.border,style:data.cell&&data.cell.style,format:data.cell&&data.cell.format,content,},tooltip:content?{props:{content:tooltipValue}}:undefined,};},}).add("DATE_INCREMENT_MODIFIER",{apply:(rule,data,getters)=>{const date=toJsDate(rule.current,getters.getLocale());date.setFullYear(date.getFullYear()+rule.increment.years||0);date.setMonth(date.getMonth()+rule.increment.months||0);date.setDate(date.getDate()+rule.increment.days||0);const value=jsDateToNumber(date);rule.current=value;const locale=getters.getLocale();const tooltipValue=formatValue(value,{format:data.cell?.format,locale});return{cellData:{border:data.border,style:data.cell&&data.cell.style,format:data.cell&&data.cell.format,content:value.toString(),},tooltip:value?{props:{content:tooltipValue}}:undefined,};},}).add("COPY_MODIFIER",{apply:(rule,data,getters)=>{const content=data.cell?.content||"";const localeFormat={locale:getters.getLocale(),format:data.cell?.format};return{cellData:{border:data.border,style:data.cell&&data.cell.style,format:data.cell&&data.cell.format,content,},tooltip:content?{props:{content:data.cell?evaluateLiteral(data.cell,localeFormat).formattedValue:"",},}:undefined,};},}).add("FORMULA_MODIFIER",{apply:(rule,data,getters,direction)=>{rule.current+=rule.increment;let x=0;let y=0;switch(direction){case"up":x=0;y=-rule.current;break;case"down":x=0;y=rule.current;break;case"left":x=-rule.current;y=0;break;case"right":x=rule.current;y=0;break;}
const cell=data.cell;if(!cell||!cell.isFormula){return{cellData:{}};}
const sheetId=data.sheetId;const content=getters.getTranslatedCellFormula(sheetId,x,y,cell.compiledFormula.tokens);return{cellData:{border:data.border,style:cell.style,format:cell.format,content,},tooltip:content?{props:{content}}:undefined,};},});const autofillRulesRegistry=new Registry();const numberPostfixRegExp=/(\d+)$/;const stringPrefixRegExp=/^(.*\D+)/;const alphaNumericValueRegExp=/^(.*\D+)(\d+)$/;const leadingZerosRegex=/^0*/;function getGroup(cell,cells,filter){let group=[];let found=false;for(const x of cells){if(x===cell){found=true;}
const cellValue=x===undefined||x.isFormula?undefined:evaluateLiteral(x,{locale:DEFAULT_LOCALE,format:x.format});if(cellValue&&filter(cellValue)){group.push(cellValue);}
else{if(found){return group;}
group=[];}}
return group;}
function getAverageIncrement(group){const averages=[];let last=group[0];for(let i=1;i<group.length;i++){const current=group[i];averages.push(current-last);last=current;}
return averages.reduce((a,b)=>a+b,0)/averages.length;}
function calculateIncrementBasedOnGroup(group){let increment=1;if(group.length>=2){increment=getAverageIncrement(group)*group.length;}
return increment;}
function getEqualInterval(intervals){if(intervals.length<2){return intervals[0]||{years:0,months:0,days:0};}
const equal=intervals.every((interval)=>interval.years===intervals[0].years&&interval.months===intervals[0].months&&interval.days===intervals[0].days);return equal?intervals[0]:undefined;}
function calculateDateIncrementBasedOnGroup(group){if(group.length<2){return 1;}
const jsDates=group.map((date)=>toJsDate(date,DEFAULT_LOCALE));const datesIntervals=getDateIntervals(jsDates);const datesEquidistantInterval=getEqualInterval(datesIntervals);if(datesEquidistantInterval===undefined){return undefined;}
const exactDateInterval=Object.values(datesEquidistantInterval).filter((value)=>value!==0).length===1;const isSameDay=Object.values(datesEquidistantInterval).every((el)=>el===0);if(!exactDateInterval||isSameDay){const timeIntervals=jsDates.map((date,index)=>{if(index===0){return 0;}
const previous=jsDates[index-1];return Math.floor(date.getTime())-Math.floor(previous.getTime());}).slice(1);const equidistantDates=timeIntervals.every((interval)=>interval===timeIntervals[0]);if(equidistantDates){return group.length*(group[1]-group[0]);}}
return{years:datesEquidistantInterval.years*group.length,months:datesEquidistantInterval.months*group.length,days:datesEquidistantInterval.days*group.length,};}
autofillRulesRegistry.add("simple_value_copy",{condition:(cell,cells)=>{return(cells.length===1&&!cell.isFormula&&!(cell.format&&isDateTimeFormat(cell.format)));},generateRule:()=>{return{type:"COPY_MODIFIER"};},sequence:10,}).add("increment_alphanumeric_value",{condition:(cell)=>!cell.isFormula&&evaluateLiteral(cell,{locale:DEFAULT_LOCALE}).type===CellValueType.text&&alphaNumericValueRegExp.test(cell.content),generateRule:(cell,cells,direction)=>{const numberPostfix=parseInt(cell.content.match(numberPostfixRegExp)[0]);const prefix=cell.content.match(stringPrefixRegExp)[0];const group=getGroup(cell,cells,(evaluatedCell)=>evaluatedCell.type===CellValueType.text&&alphaNumericValueRegExp.test(evaluatedCell.value)).filter((cell)=>prefix===(cell.value??"").toString().match(stringPrefixRegExp)[0]).map((cell)=>(cell.value??"").toString().match(numberPostfixRegExp)[0]);const mostLeadingZeros=group.reduce((candidate,current)=>{const currentLength=current.match(leadingZerosRegex)[0].length;return currentLength>candidate[1]?[current,currentLength]:candidate;},[group[0],0]);const numberPostfixLength=mostLeadingZeros[1]?mostLeadingZeros[0].length:0;let increment=calculateIncrementBasedOnGroup(group.map((x)=>parseInt(x)));if(["up","left"].includes(direction)&&group.length===1){increment=-increment;}
return{type:"ALPHANUMERIC_INCREMENT_MODIFIER",prefix,current:numberPostfix,increment,numberPostfixLength,};},sequence:15,}).add("copy_text",{condition:(cell)=>!cell.isFormula&&evaluateLiteral(cell,{locale:DEFAULT_LOCALE}).type===CellValueType.text,generateRule:()=>{return{type:"COPY_MODIFIER"};},sequence:20,}).add("update_formula",{condition:(cell)=>cell.isFormula,generateRule:(_,cells)=>{return{type:"FORMULA_MODIFIER",increment:cells.length,current:0};},sequence:30,}).add("increment_dates",{condition:(cell,cells)=>{return(!cell.isFormula&&evaluateLiteral(cell,{locale:DEFAULT_LOCALE}).type===CellValueType.number&&!!cell.format&&isDateTimeFormat(cell.format));},generateRule:(cell,cells)=>{const group=getGroup(cell,cells,(evaluatedCell)=>evaluatedCell.type===CellValueType.number&&!!evaluatedCell.format&&isDateTimeFormat(evaluatedCell.format)).map((cell)=>Number(cell.value));const increment=calculateDateIncrementBasedOnGroup(group);if(increment===undefined){return{type:"COPY_MODIFIER"};}
const evaluation=evaluateLiteral(cell,{locale:DEFAULT_LOCALE});if(typeof increment==="object"){return{type:"DATE_INCREMENT_MODIFIER",increment,current:evaluation.type===CellValueType.number?evaluation.value:0,};}
return{type:"INCREMENT_MODIFIER",increment,current:evaluation.type===CellValueType.number?evaluation.value:0,};},sequence:25,}).add("increment_number",{condition:(cell)=>!cell.isFormula&&evaluateLiteral(cell,{locale:DEFAULT_LOCALE}).type===CellValueType.number,generateRule:(cell,cells,direction)=>{const group=getGroup(cell,cells,(evaluatedCell)=>evaluatedCell.type===CellValueType.number&&!isDateTimeFormat(evaluatedCell.format||"")).map((cell)=>Number(cell.value));let increment=calculateIncrementBasedOnGroup(group);if(["up","left"].includes(direction)&&group.length===1){increment=-increment;}
const evaluation=evaluateLiteral(cell,{locale:DEFAULT_LOCALE});return{type:"INCREMENT_MODIFIER",increment,current:evaluation.type===CellValueType.number?evaluation.value:0,};},sequence:40,});function getDateIntervals(dates){if(dates.length<2){return[{years:0,months:0,days:0}];}
const res=dates.map((date,index)=>{if(index===0){return{years:0,months:0,days:0};}
const previous=DateTime.fromTimestamp(dates[index-1].getTime());const years=getTimeDifferenceInWholeYears(previous,date);const months=getTimeDifferenceInWholeMonths(previous,date)%12;previous.setFullYear(previous.getFullYear()+years);previous.setMonth(previous.getMonth()+months);const days=getTimeDifferenceInWholeDays(previous,date);return{years,months,days,};});return res.slice(1);}
class UIPlugin extends BasePlugin{static layers=[];getters;ui;selection;dispatch;canDispatch;constructor({getters,stateObserver,dispatch,canDispatch,uiActions,selection,}){super(stateObserver);this.getters=getters;this.ui=uiActions;this.selection=selection;this.dispatch=dispatch;this.canDispatch=canDispatch;}
drawLayer(ctx,layer){}}
class AutofillGenerator{cells;getters;index=0;direction;constructor(cells,getters,direction){this.cells=cells;this.getters=getters;this.direction=direction;}
next(){const genCell=this.cells[this.index++%this.cells.length];const rule=genCell.rule;const{cellData,tooltip}=autofillModifiersRegistry.get(rule.type).apply(rule,genCell.data,this.getters,this.direction);return{cellData,tooltip,origin:{col:genCell.data.col,row:genCell.data.row,},};}}
class AutofillPlugin extends UIPlugin{static layers=["Autofill"];static getters=["getAutofillTooltip"];autofillZone;steps;lastCellSelected={};direction;tooltip;allowDispatch(cmd){switch(cmd.type){case"AUTOFILL_SELECT":const sheetId=this.getters.getActiveSheetId();this.lastCellSelected.col=cmd.col===-1?this.lastCellSelected.col:clip(cmd.col,0,this.getters.getNumberCols(sheetId));this.lastCellSelected.row=cmd.row===-1?this.lastCellSelected.row:clip(cmd.row,0,this.getters.getNumberRows(sheetId));if(this.lastCellSelected.col!==undefined&&this.lastCellSelected.row!==undefined){return"Success";}
return"InvalidAutofillSelection";}
return"Success";}
handle(cmd){switch(cmd.type){case"AUTOFILL":this.autofill(true);break;case"AUTOFILL_SELECT":this.select(cmd.col,cmd.row);break;case"AUTOFILL_AUTO":this.autofillAuto();break;}}
getAutofillTooltip(){return this.tooltip;}
autofill(apply){if(!this.autofillZone||!this.steps||this.direction===undefined){this.tooltip=undefined;return;}
const source=this.getters.getSelectedZone();const target=this.autofillZone;const autofillCellsData=[];switch(this.direction){case"down":for(let col=source.left;col<=source.right;col++){const xcs=[];for(let row=source.top;row<=source.bottom;row++){xcs.push(toXC(col,row));}
const generator=this.createGenerator(xcs);for(let row=target.top;row<=target.bottom;row++){autofillCellsData.push(this.computeNewCell(generator,col,row));}}
break;case"up":for(let col=source.left;col<=source.right;col++){const xcs=[];for(let row=source.bottom;row>=source.top;row--){xcs.push(toXC(col,row));}
const generator=this.createGenerator(xcs);for(let row=target.bottom;row>=target.top;row--){autofillCellsData.push(this.computeNewCell(generator,col,row));}}
break;case"left":for(let row=source.top;row<=source.bottom;row++){const xcs=[];for(let col=source.right;col>=source.left;col--){xcs.push(toXC(col,row));}
const generator=this.createGenerator(xcs);for(let col=target.right;col>=target.left;col--){autofillCellsData.push(this.computeNewCell(generator,col,row));}}
break;case"right":for(let row=source.top;row<=source.bottom;row++){const xcs=[];for(let col=source.left;col<=source.right;col++){xcs.push(toXC(col,row));}
const generator=this.createGenerator(xcs);for(let col=target.left;col<=target.right;col++){autofillCellsData.push(this.computeNewCell(generator,col,row));}}
break;}
if(apply){const bordersZones={};const cfNewRanges={};const dvNewZones={};const sheetId=this.getters.getActiveSheetId();for(const data of autofillCellsData){this.collectBordersData(data,bordersZones);this.autofillMerge(sheetId,data);this.autofillCell(sheetId,data);this.collectConditionalFormatsData(sheetId,data,cfNewRanges);this.collectDataValidationsData(sheetId,data,dvNewZones);}
this.autofillBorders(sheetId,bordersZones);this.autofillConditionalFormats(sheetId,cfNewRanges);this.autofillDataValidations(sheetId,dvNewZones);this.autofillZone=undefined;this.selection.resizeAnchorZone(this.direction,this.steps);this.lastCellSelected={};this.direction=undefined;this.steps=0;this.tooltip=undefined;}}
collectBordersData(data,bordersPositions){const key=JSON.stringify(data.border);if(!(key in bordersPositions)){bordersPositions[key]=[];}
bordersPositions[key].push(positionToZone({col:data.col,row:data.row}));}
collectConditionalFormatsData(sheetId,data,cfNewRanges){const{originCol,originRow,col,row}=data;const cfsAtOrigin=this.getters.getRulesByCell(sheetId,originCol,originRow);const xc=toXC(col,row);for(const cf of cfsAtOrigin){if(!(cf.id in cfNewRanges)){cfNewRanges[cf.id]=[];}
cfNewRanges[cf.id].push(xc);}}
collectDataValidationsData(sheetId,data,dvNewZones){const{originCol,originRow,col,row}=data;const cellPosition={sheetId,col:originCol,row:originRow};const dvsAtOrigin=this.getters.getValidationRuleForCell(cellPosition);if(!dvsAtOrigin){return;}
if(!(dvsAtOrigin.id in dvNewZones)){dvNewZones[dvsAtOrigin.id]=[];}
dvNewZones[dvsAtOrigin.id].push(positionToZone({col,row}));}
autofillCell(sheetId,data){this.dispatch("UPDATE_CELL",{sheetId,col:data.col,row:data.row,content:data.content||"",style:data.style||null,format:data.format||"",});this.dispatch("AUTOFILL_CELL",data);}
autofillBorders(sheetId,bordersPositions){for(const stringifiedBorder in bordersPositions){const border=stringifiedBorder==="undefined"?undefined:JSON.parse(stringifiedBorder);this.dispatch("SET_BORDERS_ON_TARGET",{sheetId,border,target:recomputeZones(bordersPositions[stringifiedBorder]),});}}
autofillConditionalFormats(sheetId,cfNewRanges){for(const cfId in cfNewRanges){const changes=cfNewRanges[cfId];const cf=this.getters.getConditionalFormats(sheetId).find((cf)=>cf.id===cfId);if(!cf){continue;}
const newCfRanges=this.getters.getAdaptedCfRanges(sheetId,cf,changes.map(toZone),[]);if(newCfRanges){this.dispatch("ADD_CONDITIONAL_FORMAT",{cf:{id:cf.id,rule:cf.rule,stopIfTrue:cf.stopIfTrue,},ranges:newCfRanges,sheetId,});}}}
autofillDataValidations(sheetId,dvNewZones){for(const dvId in dvNewZones){const changes=dvNewZones[dvId];const dvOrigin=this.getters.getDataValidationRule(sheetId,dvId);if(!dvOrigin){continue;}
const dvRangesXcs=dvOrigin.ranges.map((range)=>range.zone);const newDvRanges=recomputeZones(dvRangesXcs.concat(changes),[]);this.dispatch("ADD_DATA_VALIDATION_RULE",{rule:dvOrigin,ranges:newDvRanges.map((zone)=>this.getters.getRangeDataFromZone(sheetId,zone)),sheetId,});}}
select(col,row){const source=this.getters.getSelectedZone();if(isInside(col,row,source)){this.autofillZone=undefined;return;}
this.direction=this.getDirection(col,row);switch(this.direction){case"up":this.saveZone(row,source.top-1,source.left,source.right);this.steps=source.top-row;break;case"down":this.saveZone(source.bottom+1,row,source.left,source.right);this.steps=row-source.bottom;break;case"left":this.saveZone(source.top,source.bottom,col,source.left-1);this.steps=source.left-col;break;case"right":this.saveZone(source.top,source.bottom,source.right+1,col);this.steps=col-source.right;break;}
this.autofill(false);}
autofillAuto(){const activePosition=this.getters.getActivePosition();const table=this.getters.getTable(activePosition);let autofillRow=table?table.range.zone.bottom:this.getAutofillAutoLastRow();const selection=this.getters.getSelectedZone();for(let row=selection.bottom+1;row<=autofillRow;row++){if(this.getters.getEvaluatedCell({...activePosition,row}).type!==CellValueType.empty){autofillRow=row-1;break;}}
if(autofillRow>selection.bottom){this.select(activePosition.col,autofillRow);this.autofill(true);}}
getAutofillAutoLastRow(){const zone=this.getters.getSelectedZone();const sheetId=this.getters.getActiveSheetId();let col=zone.left;let row=zone.bottom;if(col>0){let leftPosition={sheetId,col:col-1,row};while(this.getters.getEvaluatedCell(leftPosition).type!==CellValueType.empty){row+=1;leftPosition={sheetId,col:col-1,row};}}
if(row===zone.bottom){col=zone.right;if(col<=this.getters.getNumberCols(sheetId)){let rightPosition={sheetId,col:col+1,row};while(this.getters.getEvaluatedCell(rightPosition).type!==CellValueType.empty){row+=1;rightPosition={sheetId,col:col+1,row};}}}
return row-1;}
computeNewCell(generator,col,row){const{cellData,tooltip,origin}=generator.next();const{content,style,border,format}=cellData;this.tooltip=tooltip;return{originCol:origin.col,originRow:origin.row,col,row,content,style,border,format,};}
getRule(cell,cells){const rules=autofillRulesRegistry.getAll().sort((a,b)=>a.sequence-b.sequence);const rule=rules.find((rule)=>rule.condition(cell,cells));return rule&&this.direction&&rule.generateRule(cell,cells,this.direction);}
createGenerator(source){const nextCells=[];const cellsData=[];const sheetId=this.getters.getActiveSheetId();for(const xc of source){const{col,row}=toCartesian(xc);const cell=this.getters.getCell({sheetId,col,row});cellsData.push({col,row,cell,sheetId,});}
const cells=cellsData.map((cellData)=>cellData.cell);for(const cellData of cellsData){let rule={type:"COPY_MODIFIER"};if(cellData&&cellData.cell){const newRule=this.getRule(cellData.cell,cells);rule=newRule||rule;}
const border=this.getters.getCellBorder(cellData)||undefined;nextCells.push({data:{...cellData,border},rule,});}
return new AutofillGenerator(nextCells,this.getters,this.direction);}
saveZone(top,bottom,left,right){this.autofillZone={top,bottom,left,right};}
getDirection(col,row){const source=this.getters.getSelectedZone();const position={up:{number:source.top-row,value:"up"},down:{number:row-source.bottom,value:"down"},left:{number:source.left-col,value:"left"},right:{number:col-source.right,value:"right"},};if(Object.values(position).map((x)=>(x.number>0?1:0)).reduce((acc,value)=>acc+value)===1){return Object.values(position).find((x)=>(x.number>0?1:0)).value;}
const first=position.up.number>0?"up":"down";const second=position.left.number>0?"left":"right";return Math.abs(position[first].number)>=Math.abs(position[second].number)?position[first].value:position[second].value;}
autofillMerge(sheetId,data){const{originCol,originRow,col,row}=data;const position={sheetId,col,row};const originPosition={sheetId,col:originCol,row:originRow};if(this.getters.isInMerge(position)&&!this.getters.isInMerge(originPosition)){const zone=this.getters.getMerge(position);if(zone){this.dispatch("REMOVE_MERGE",{sheetId,target:[zone],});}}
const originMerge=this.getters.getMerge(originPosition);if(originMerge?.left===originCol&&originMerge?.top===originRow){this.dispatch("ADD_MERGE",{sheetId,target:[{top:row,bottom:row+originMerge.bottom-originMerge.top,left:col,right:col+originMerge.right-originMerge.left,},],});}}
drawLayer(renderingContext){if(!this.autofillZone){return;}
const{ctx,thinLineWidth}=renderingContext;const{x,y,width,height}=this.getters.getVisibleRect(this.autofillZone);if(width>0&&height>0){ctx.strokeStyle="black";ctx.lineWidth=thinLineWidth;ctx.setLineDash([3]);ctx.strokeRect(x,y,width,height);ctx.setLineDash([]);}}}
class AutomaticSumPlugin extends UIPlugin{static getters=["getAutomaticSums"];handle(cmd){switch(cmd.type){case"SUM_SELECTION":const sheetId=this.getters.getActiveSheetId();const{zones,anchor}=this.getters.getSelection();for(const zone of zones){const sums=this.getAutomaticSums(sheetId,zone,anchor.cell);this.dispatchCellUpdates(sheetId,sums);}
break;}}
getAutomaticSums(sheetId,zone,anchor){return this.shouldFindData(sheetId,zone)?this.sumAdjacentData(sheetId,zone,anchor):this.sumData(sheetId,zone);}
sumData(sheetId,zone){const dimensions=this.dimensionsToSum(sheetId,zone);const sums=this.sumDimensions(sheetId,zone,dimensions).filter(({zone})=>!this.getters.isEmpty(sheetId,zone));if(dimensions.has("ROW")&&dimensions.has("COL")){sums.push(this.sumTotal(zone));}
return sums;}
sumAdjacentData(sheetId,zone,anchor){const{col,row}=isInside(anchor.col,anchor.row,zone)?anchor:{col:zone.left,row:zone.top};const dataZone=this.findAdjacentData(sheetId,col,row);if(!dataZone){return[];}
if(this.getters.isSingleCellOrMerge(sheetId,zone)||isOneDimensional(union(dataZone,zone))){return[{position:{col,row},zone:dataZone}];}
else{return this.sumDimensions(sheetId,union(dataZone,zone),this.transpose(this.dimensionsToSum(sheetId,zone)));}}
findAdjacentData(sheetId,col,row){const sheet=this.getters.getSheet(sheetId);const mainCellPosition=this.getters.getMainCellPosition({sheetId,col,row});const zone=this.findSuitableZoneToSum(sheet,mainCellPosition.col,mainCellPosition.row);if(zone){return this.getters.expandZone(sheetId,zone);}
return undefined;}
findSuitableZoneToSum(sheet,col,row){const topCell=this.getters.getEvaluatedCell({sheetId:sheet.id,col,row:row-1});const leftCell=this.getters.getEvaluatedCell({sheetId:sheet.id,col:col-1,row});if(this.isNumber(leftCell)&&!this.isNumber(topCell)){return this.findHorizontalZone(sheet,col,row);}
const verticalZone=this.findVerticalZone(sheet,col,row);if(this.isZoneValid(verticalZone)){return verticalZone;}
const horizontalZone=this.findHorizontalZone(sheet,col,row);if(this.isZoneValid(horizontalZone)){return horizontalZone;}
return undefined;}
findVerticalZone(sheet,col,row){const zone={top:0,bottom:row-1,left:col,right:col,};const top=this.reduceZoneStart(sheet,zone,zone.bottom);return{...zone,top};}
findHorizontalZone(sheet,col,row){const zone={top:row,bottom:row,left:0,right:col-1,};const left=this.reduceZoneStart(sheet,zone,zone.right);return{...zone,left};}
reduceZoneStart(sheet,zone,end){const cells=this.getters.getEvaluatedCellsInZone(sheet.id,zone);const cellPositions=range(end,-1,-1);const invalidCells=cellPositions.filter((position)=>cells[position]&&!cells[position].isAutoSummable);const maxValidPosition=largeMax(invalidCells);const numberSequences=groupConsecutive(cellPositions.filter((position)=>this.isNumber(cells[position])));const firstSequence=numberSequences[0]||[];if(largeMax(firstSequence)<maxValidPosition){return Infinity;}
return largeMin(firstSequence);}
shouldFindData(sheetId,zone){return this.getters.isEmpty(sheetId,zone)||this.getters.isSingleCellOrMerge(sheetId,zone);}
isNumber(cell){return cell.type===CellValueType.number&&!(cell.format&&isDateTimeFormat(cell.format));}
isZoneValid(zone){return zone.bottom>=zone.top&&zone.right>=zone.left;}
lastColIsEmpty(sheetId,zone){return this.getters.isEmpty(sheetId,{...zone,left:zone.right});}
lastRowIsEmpty(sheetId,zone){return this.getters.isEmpty(sheetId,{...zone,top:zone.bottom});}
dimensionsToSum(sheetId,zone){const dimensions=new Set();if(isOneDimensional(zone)){dimensions.add(zoneToDimension(zone).numberOfCols===1?"COL":"ROW");return dimensions;}
if(this.lastColIsEmpty(sheetId,zone)){dimensions.add("ROW");}
if(this.lastRowIsEmpty(sheetId,zone)){dimensions.add("COL");}
if(dimensions.size===0){dimensions.add("COL");}
return dimensions;}
sumDimensions(sheetId,zone,dimensions){return[...(dimensions.has("COL")?this.sumColumns(zone,sheetId):[]),...(dimensions.has("ROW")?this.sumRows(zone,sheetId):[]),];}
sumTotal(zone){const{bottom,right}=zone;return{position:{col:right,row:bottom},zone:{...zone,top:bottom,right:right-1},};}
sumColumns(zone,sheetId){const target=this.nextEmptyRow(sheetId,{...zone,bottom:zone.bottom-1});zone={...zone,bottom:Math.min(zone.bottom,target.bottom-1)};return positions(target).map((position)=>({position,zone:{...zone,right:position.col,left:position.col},}));}
sumRows(zone,sheetId){const target=this.nextEmptyCol(sheetId,{...zone,right:zone.right-1});zone={...zone,right:Math.min(zone.right,target.right-1)};return positions(target).map((position)=>({position,zone:{...zone,top:position.row,bottom:position.row},}));}
dispatchCellUpdates(sheetId,sums){for(const sum of sums){const{col,row}=sum.position;this.dispatch("UPDATE_CELL",{sheetId,col,row,content:`=SUM(${this.getters.zoneToXC(sheetId, sum.zone)})`,});}}
nextEmptyRow(sheetId,zone){let start=zone.bottom+1;const{left,right}=zone;while(!this.getters.isEmpty(sheetId,{bottom:start,top:start,left,right})){start++;}
return{...zone,top:start,bottom:start,};}
nextEmptyCol(sheetId,zone){let start=zone.right+1;const{top,bottom}=zone;while(!this.getters.isEmpty(sheetId,{left:start,right:start,top,bottom})){start++;}
return{...zone,left:start,right:start,};}
transpose(dimensions){return new Set([...dimensions.values()].map((dimension)=>(dimension==="COL"?"ROW":"COL")));}}
class OTRegistry extends Registry{addTransformation(executed,toTransforms,fn){if(!this.content[executed]){this.content[executed]=new Map();}
for(const toTransform of toTransforms){this.content[executed].set(toTransform,fn);}
return this;}
getTransformation(toTransform,executed){return this.content[executed]&&this.content[executed].get(toTransform);}}
const otRegistry=new OTRegistry();class SpecificRangeTransformRegistry extends Registry{add(cmdType,fn){super.add(cmdType,fn);return this;}
replace(cmdType,fn){super.replace(cmdType,fn);return this;}
get(cmdType){return this.content[cmdType];}}
const specificRangeTransformRegistry=new SpecificRangeTransformRegistry();otRegistry.addTransformation("ADD_COLUMNS_ROWS",["ADD_COLUMNS_ROWS"],addHeadersTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["ADD_COLUMNS_ROWS"],addHeadersTransformation);otRegistry.addTransformation("DELETE_SHEET",["MOVE_RANGES"],transformTargetSheetId);otRegistry.addTransformation("DELETE_FIGURE",["UPDATE_FIGURE","UPDATE_CHART"],updateChartFigure);otRegistry.addTransformation("CREATE_SHEET",["CREATE_SHEET"],createSheetTransformation);otRegistry.addTransformation("ADD_MERGE",["ADD_MERGE","REMOVE_MERGE"],mergeTransformation);otRegistry.addTransformation("ADD_COLUMNS_ROWS",["FREEZE_COLUMNS","FREEZE_ROWS"],freezeTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["FREEZE_COLUMNS","FREEZE_ROWS"],freezeTransformation);otRegistry.addTransformation("ADD_COLUMNS_ROWS",["UPDATE_TABLE"],updateTableTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["UPDATE_TABLE"],updateTableTransformation);otRegistry.addTransformation("REMOVE_TABLE_STYLE",["CREATE_TABLE","UPDATE_TABLE"],removeTableStyleTransform);otRegistry.addTransformation("ADD_COLUMNS_ROWS",["GROUP_HEADERS","UNGROUP_HEADERS","FOLD_HEADER_GROUP","UNFOLD_HEADER_GROUP"],groupHeadersTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["GROUP_HEADERS","UNGROUP_HEADERS","FOLD_HEADER_GROUP","UNFOLD_HEADER_GROUP"],groupHeadersTransformation);otRegistry.addTransformation("REMOVE_PIVOT",["RENAME_PIVOT","DUPLICATE_PIVOT","INSERT_PIVOT","UPDATE_PIVOT"],pivotRemovedTransformation);otRegistry.addTransformation("DELETE_SHEET",["ADD_PIVOT","UPDATE_PIVOT"],pivotDeletedSheetTransformation);otRegistry.addTransformation("ADD_COLUMNS_ROWS",["ADD_PIVOT","UPDATE_PIVOT"],pivotZoneTransformation);otRegistry.addTransformation("REMOVE_COLUMNS_ROWS",["ADD_PIVOT","UPDATE_PIVOT"],pivotZoneTransformation);function pivotZoneTransformation(toTransform,executed){if(toTransform.pivot.type!=="SPREADSHEET"){return toTransform;}
if(toTransform.pivot.dataSet?.sheetId!==executed.sheetId){return toTransform;}
const newZone=transformZone(toTransform.pivot.dataSet.zone,executed);const dataSet=newZone?{...toTransform.pivot.dataSet,zone:newZone}:undefined;return{...toTransform,pivot:{...toTransform.pivot,dataSet}};}
function pivotDeletedSheetTransformation(toTransform,executed){if(toTransform.pivot.type!=="SPREADSHEET"){return toTransform;}
if(toTransform.pivot.dataSet?.sheetId===executed.sheetId){return{...toTransform,pivot:{...toTransform.pivot,dataSet:undefined}};}
return toTransform;}
function pivotRemovedTransformation(toTransform,executed){if(toTransform.pivotId===executed.pivotId){return undefined;}
return toTransform;}
function transformTargetSheetId(toTransform,executed){const deletedSheetId=executed.sheetId;if(toTransform.targetSheetId===deletedSheetId||toTransform.sheetId===deletedSheetId){return undefined;}
return toTransform;}
function updateChartFigure(toTransform,executed){if(toTransform.figureId===executed.figureId){return undefined;}
return toTransform;}
function createSheetTransformation(toTransform,executed){if(toTransform.sheetId===executed.sheetId){toTransform={...toTransform,sheetId:`${toTransform.sheetId}~`};}
if(toTransform.name===executed.name){return{...toTransform,name:toTransform.name?.match(/\d+/)?toTransform.name.replace(/\d+/,(n)=>(parseInt(n)+1).toString()):`${toTransform.name}~`,position:toTransform.position+1,};}
return toTransform;}
function mergeTransformation(toTransform,executed){if(toTransform.sheetId!==executed.sheetId){return toTransform;}
const target=[];for(const zone1 of toTransform.target){if(executed.target.every((zone2)=>!overlap(zone1,zone2))){target.push(zone1);}}
if(target.length){return{...toTransform,target};}
return undefined;}
function freezeTransformation(toTransform,executed){if(toTransform.sheetId!==executed.sheetId){return toTransform;}
const dimension=toTransform.type==="FREEZE_COLUMNS"?"COL":"ROW";if(dimension!==executed.dimension){return toTransform;}
let quantity=toTransform["quantity"];if(executed.type==="REMOVE_COLUMNS_ROWS"){const executedElements=[...executed.elements].sort((a,b)=>b-a);for(const removedElement of executedElements){if(quantity>removedElement){quantity--;}}}
if(executed.type==="ADD_COLUMNS_ROWS"){const executedBase=executed.position==="before"?executed.base-1:executed.base;quantity=quantity>executedBase?quantity+executed.quantity:quantity;}
return quantity>0?{...toTransform,quantity}:undefined;}
function updateTableTransformation(toTransform,executed){if(toTransform.sheetId!==executed.sheetId){return toTransform;}
const newCmdZone=transformZone(toTransform.zone,executed);if(!newCmdZone){return undefined;}
const newTableRange=toTransform.newTableRange?transformRangeData(toTransform.newTableRange,executed):undefined;return{...toTransform,newTableRange,zone:newCmdZone};}
function removeTableStyleTransform(toTransform,executed){if(toTransform.config?.styleId!==executed.tableStyleId){return toTransform;}
return{...toTransform,config:{...toTransform.config,styleId:DEFAULT_TABLE_CONFIG.styleId},};}
function addHeadersTransformation(toTransform,executed){if(toTransform.sheetId!==executed.sheetId||toTransform.dimension!==executed.dimension){return toTransform;}
let result=undefined;if(executed.type==="REMOVE_COLUMNS_ROWS"){result=moveHeaderIndexesOnHeaderDeletion(executed.elements,[toTransform.base])[0];}
else if(executed.type==="ADD_COLUMNS_ROWS"){const base=getAddHeaderStartIndex(executed.position,executed.base);result=moveHeaderIndexesOnHeaderAddition(base,executed.quantity,[toTransform.base])[0];}
if(result===undefined){return undefined;}
return{...toTransform,base:result};}
function groupHeadersTransformation(toTransform,executed){if(toTransform.sheetId!==executed.sheetId||toTransform.dimension!==executed.dimension){return toTransform;}
const elementsToTransform=range(toTransform.start,toTransform.end+1);let results=[];if(executed.type==="REMOVE_COLUMNS_ROWS"){results=moveHeaderIndexesOnHeaderDeletion(executed.elements,elementsToTransform);}
else if(executed.type==="ADD_COLUMNS_ROWS"){const base=getAddHeaderStartIndex(executed.position,executed.base);results=moveHeaderIndexesOnHeaderAddition(base,executed.quantity,elementsToTransform);}
if(results.length===0){return undefined;}
return{...toTransform,start:Math.min(...results),end:Math.max(...results)};}
function updateCellCommandAdaptRange(cmd,applyChange){const content=cmd.content&&adaptFormulaStringRanges(cmd.sheetId,cmd.content,applyChange);return{...cmd,content};}
specificRangeTransformRegistry.add("UPDATE_CELL",updateCellCommandAdaptRange);function addConditionalFormatCommandAdaptRange(cmd,applyChange){const rule=cmd.cf.rule;cmd={...cmd,cf:{...cmd.cf}};if(rule.type==="CellIsRule"){cmd.cf.rule={...rule,values:rule.values.map((val)=>adaptFormulaStringRanges(cmd.sheetId,val,applyChange)),};}
else if(rule.type==="ColorScaleRule"){const{minimum:min,maximum:max,midpoint:mid}=rule;cmd.cf.rule={...rule,minimum:{...min,value:min.value&&adaptFormulaStringRanges(cmd.sheetId,min.value,applyChange),},maximum:{...max,value:max.value&&adaptFormulaStringRanges(cmd.sheetId,max.value,applyChange),},midpoint:mid?{...mid,value:adaptFormulaStringRanges(cmd.sheetId,mid.value,applyChange)}:undefined,};}
else if(rule.type==="IconSetRule"){const{upperInflectionPoint:uip,lowerInflectionPoint:lip}=rule;cmd.cf.rule={...rule,upperInflectionPoint:{...uip,value:adaptFormulaStringRanges(cmd.sheetId,uip.value,applyChange),},lowerInflectionPoint:{...lip,value:adaptFormulaStringRanges(cmd.sheetId,lip.value,applyChange),},};}
else if(rule.type==="DataBarRule"){cmd.cf.rule={...rule,rangeValues:rule.rangeValues?adaptStringRange(cmd.sheetId,rule.rangeValues,applyChange):undefined,};}
return cmd;}
specificRangeTransformRegistry.add("ADD_CONDITIONAL_FORMAT",addConditionalFormatCommandAdaptRange);function addDataValidationCommandAdaptRange(cmd,applyChange){cmd={...cmd,rule:{...cmd.rule,criterion:{...cmd.rule.criterion}}};cmd.rule.criterion.values=cmd.rule.criterion.values.map((val)=>adaptFormulaStringRanges(cmd.sheetId,val,applyChange));return cmd;}
specificRangeTransformRegistry.add("ADD_DATA_VALIDATION_RULE",addDataValidationCommandAdaptRange);function addPivotCommandAdaptRange(cmd,applyChange){cmd=deepCopy(cmd);cmd.pivot.measures.map((measure)=>{if(measure.computedBy){measure.computedBy.formula=adaptFormulaStringRanges(measure.computedBy.sheetId,measure.computedBy.formula,applyChange);}});return cmd;}
specificRangeTransformRegistry.add("ADD_PIVOT",addPivotCommandAdaptRange);specificRangeTransformRegistry.add("UPDATE_PIVOT",addPivotCommandAdaptRange);specificRangeTransformRegistry.add("CREATE_CHART",updateChartRangesTransformation);specificRangeTransformRegistry.add("UPDATE_CHART",updateChartRangesTransformation);function updateChartRangesTransformation(cmd,applyChange){return{...cmd,definition:transformDefinition(cmd.sheetId,cmd.definition,applyChange),};}
const transformations=[{match:isSheetDependent,fn:transformSheetId},{match:isTargetDependent,fn:transformTarget},{match:isZoneDependent,fn:transformZoneDependentCommand},{match:isPositionDependent,fn:transformPosition},{match:isHeadersDependant,fn:transformHeaders},{match:isRangeDependant,fn:transformRangesDependentCommand},];function transform(toTransform,executed){const specificTransform=otRegistry.getTransformation(toTransform.type,executed.type);const transformed=specificTransform?specificTransform(toTransform,executed):genericTransform(toTransform,executed);if(transformed){return adaptTransform(transformed,executed);}
return transformed;}
function adaptTransform(toTransform,executed){const adaptFn=specificRangeTransformRegistry.get(toTransform.type);if(!adaptFn){return toTransform;}
const rangeAdapter=getRangeAdapter(executed);if(rangeAdapter){return adaptFn(toTransform,rangeAdapter);}
return toTransform;}
function transformAll(toTransform,executed){let transformedCommands=[...toTransform];const possibleTransformations=new Set(otRegistry.getKeys());for(const executedCommand of executed){if(possibleTransformations.has(executedCommand.type)){transformedCommands=transformedCommands.reduce((acc,cmd)=>{const transformed=transform(cmd,executedCommand);if(transformed){acc.push(transformed);}
return acc;},[]);}}
return transformedCommands;}
function genericTransform(cmd,executed){for(const{match,fn}of transformations){if(match(cmd)){const result=fn(cmd,executed);if(result==="SKIP_TRANSFORMATION"){continue;}
if(result==="IGNORE_COMMAND"){return undefined;}
cmd=result;}}
return cmd;}
function transformSheetId(toTransform,executed){if(!("sheetId"in executed)){return toTransform;}
const deleteSheet=executed.type==="DELETE_SHEET"&&executed.sheetId;if(toTransform.sheetId===deleteSheet){return"IGNORE_COMMAND";}
else if(toTransform.type==="CREATE_SHEET"||executed.type==="CREATE_SHEET"||toTransform.sheetId!==executed.sheetId){return toTransform;}
return"SKIP_TRANSFORMATION";}
function transformTarget(cmd,executed){const transformSheetResult=transformSheetId(cmd,executed);if(transformSheetResult!=="SKIP_TRANSFORMATION"){return transformSheetResult==="IGNORE_COMMAND"?"IGNORE_COMMAND":cmd;}
const target=[];for(const zone of cmd.target){const newZone=transformZone(zone,executed);if(newZone){target.push(newZone);}}
if(!target.length){return"IGNORE_COMMAND";}
return{...cmd,target};}
function transformZoneDependentCommand(cmd,executed){const transformSheetResult=transformSheetId(cmd,executed);if(transformSheetResult!=="SKIP_TRANSFORMATION"){return transformSheetResult==="IGNORE_COMMAND"?"IGNORE_COMMAND":cmd;}
const newZone=transformZone(cmd.zone,executed);if(newZone){return{...cmd,zone:newZone};}
return"IGNORE_COMMAND";}
function transformRangesDependentCommand(toTransform,executed){if(!("sheetId"in executed)){return toTransform;}
const ranges=toTransform.ranges.map((range)=>transformRangeData(range,executed)).filter(isDefined);if(!ranges.length){return"IGNORE_COMMAND";}
return{...toTransform,ranges};}
function transformHeaders(toTransform,executed){const transformSheetResult=transformSheetId(toTransform,executed);if(transformSheetResult!=="SKIP_TRANSFORMATION"){return transformSheetResult==="IGNORE_COMMAND"?"IGNORE_COMMAND":toTransform;}
if(executed.type!=="ADD_COLUMNS_ROWS"&&executed.type!=="REMOVE_COLUMNS_ROWS"){return"SKIP_TRANSFORMATION";}
if(executed.dimension!==toTransform.dimension){return toTransform;}
let result=[];if(executed.type==="REMOVE_COLUMNS_ROWS"){result=moveHeaderIndexesOnHeaderDeletion(executed.elements,toTransform.elements);}
else if(executed.type==="ADD_COLUMNS_ROWS"){const base=getAddHeaderStartIndex(executed.position,executed.base);result=moveHeaderIndexesOnHeaderAddition(base,executed.quantity,toTransform.elements);}
if(result.length===0){return"IGNORE_COMMAND";}
return{...toTransform,elements:result};}
function transformPosition(toTransform,executed){const transformSheetResult=transformSheetId(toTransform,executed);if(transformSheetResult!=="SKIP_TRANSFORMATION"){return transformSheetResult==="IGNORE_COMMAND"?"IGNORE_COMMAND":toTransform;}
if(executed.type==="ADD_COLUMNS_ROWS"||executed.type==="REMOVE_COLUMNS_ROWS"){return transformPositionWithGrid(toTransform,executed);}
if(executed.type==="ADD_MERGE"){return transformPositionWithMerge(toTransform,executed);}
return"SKIP_TRANSFORMATION";}
function transformPositionWithGrid(toTransform,executed){const field=executed.dimension==="COL"?"col":"row";let base=toTransform[field];if(executed.type==="REMOVE_COLUMNS_ROWS"){const elements=[...executed.elements].sort((a,b)=>b-a);if(elements.includes(base)){return"IGNORE_COMMAND";}
for(const removedElement of elements){if(base>=removedElement){base--;}}}
if(executed.type==="ADD_COLUMNS_ROWS"){if(base>executed.base||(base===executed.base&&executed.position==="before")){base=base+executed.quantity;}}
return{...toTransform,[field]:base};}
function transformPositionWithMerge(toTransform,executed){for(const zone of executed.target){const sameTopLeft=toTransform.col===zone.left&&toTransform.row===zone.top;if(!sameTopLeft&&isInside(toTransform.col,toTransform.row,zone)){return"IGNORE_COMMAND";}}
return toTransform;}
class Revision{rootCommand;timestamp;id;clientId;_commands=[];_changes=[];constructor(id,clientId,commands,rootCommand,changes,timestamp){this.rootCommand=rootCommand;this.timestamp=timestamp;this.id=id;this.clientId=clientId;this._commands=[...commands];this._changes=changes?[...changes]:[];}
setChanges(changes){this._changes=changes;}
get commands(){return this._commands;}
get changes(){return this._changes;}}
class ClientDisconnectedError extends Error{}
class Session extends EventBus{revisions;transportService;serverRevisionId;clients={};clientId="local";debouncedMove;pendingMessages=[];awaitingClientPosition;waitingAck=false;waitingUndoRedoAck=false;isReplayingInitialRevisions=false;processedRevisions=new Set();lastRevisionMessage=undefined;uuidGenerator=new UuidGenerator();lastLocalOperation;constructor(revisions,transportService,serverRevisionId=DEFAULT_REVISION_ID){super();this.revisions=revisions;this.transportService=transportService;this.serverRevisionId=serverRevisionId;this.debouncedMove=debounce(this._move.bind(this),DEBOUNCE_TIME);}
canApplyOptimisticUpdate(){return!this.waitingUndoRedoAck;}
save(rootCommand,commands,changes){if(!commands.length||!changes.length||!this.canApplyOptimisticUpdate())
return;const revision=new Revision(this.uuidGenerator.uuidv4(),this.clientId,commands,rootCommand,changes,Date.now());this.revisions.append(revision.id,revision);if(rootCommand.type!=="REQUEST_REDO"){this.lastLocalOperation=revision;}
this.trigger("new-local-state-update",{id:revision.id});this.sendUpdateMessage({type:"REMOTE_REVISION",version:MESSAGE_VERSION,serverRevisionId:this.serverRevisionId,nextRevisionId:revision.id,clientId:revision.clientId,commands:revision.commands,});}
undo(revisionId){this.waitingUndoRedoAck=true;this.sendUpdateMessage({type:"REVISION_UNDONE",version:MESSAGE_VERSION,serverRevisionId:this.serverRevisionId,nextRevisionId:this.uuidGenerator.uuidv4(),undoneRevisionId:revisionId,});}
redo(revisionId){this.waitingUndoRedoAck=true;this.sendUpdateMessage({type:"REVISION_REDONE",version:MESSAGE_VERSION,serverRevisionId:this.serverRevisionId,nextRevisionId:this.uuidGenerator.uuidv4(),redoneRevisionId:revisionId,});}
move(position){this.debouncedMove(position);}
join(client){if(client){this.clients[client.id]=client;this.clientId=client.id;}
else{this.clients["local"]={id:"local",name:"local"};this.clientId="local";}
this.transportService.onNewMessage(this.clientId,this.onMessageReceived.bind(this));if(this.awaitingClientPosition){this._move(this.awaitingClientPosition);this.awaitingClientPosition=undefined;}}
loadInitialMessages(messages){const start=performance.now();const numberOfCommands=messages.reduce((acc,message)=>acc+(message.type==="REMOTE_REVISION"?message.commands.length:1),0);this.isReplayingInitialRevisions=true;for(const message of messages){this.onMessageReceived(message);}
this.isReplayingInitialRevisions=false;console.debug("Replayed",numberOfCommands,"commands in",performance.now()-start,"ms");}
async leave(data){if(data&&Object.keys(this.clients).length===1&&this.lastRevisionMessage&&this.lastRevisionMessage?.type!=="SNAPSHOT_CREATED"){await this.snapshot(data());}
delete this.clients[this.clientId];this.transportService.leave(this.clientId);this.transportService.sendMessage({type:"CLIENT_LEFT",clientId:this.clientId,version:MESSAGE_VERSION,});}
async snapshot(data){if(this.pendingMessages.length!==0){return;}
const snapshotId=this.uuidGenerator.uuidv4();await this.transportService.sendMessage({type:"SNAPSHOT",nextRevisionId:snapshotId,serverRevisionId:this.serverRevisionId,data:{...data,revisionId:snapshotId},version:MESSAGE_VERSION,});}
getCurrentClient(){return this.getClient(this.clientId);}
getClient(clientId){const client=this.clients[clientId];if(!client){throw new ClientDisconnectedError("The client left the session");}
return client;}
getConnectedClients(){return new Set(Object.values(this.clients).filter(isDefined));}
getRevisionId(){return this.serverRevisionId;}
isFullySynchronized(){return this.pendingMessages.length===0;}
getLastLocalNonEmptyRevision(){return this.lastLocalOperation;}
_move(position){if(!this.clients[this.clientId]){this.awaitingClientPosition=position;return;}
const currentPosition=this.clients[this.clientId]?.position;if(currentPosition?.col===position.col&&currentPosition.row===position.row&&currentPosition.sheetId===position.sheetId){return;}
const type=currentPosition?"CLIENT_MOVED":"CLIENT_JOINED";const client=this.getCurrentClient();this.clients[this.clientId]={...client,position};this.transportService.sendMessage({type,version:MESSAGE_VERSION,client:{...client,position},});}
onMessageReceived(message){if(this.isAlreadyProcessed(message))
return;if(this.isWrongServerRevisionId(message)){this.trigger("unexpected-revision-id");return;}
switch(message.type){case"CLIENT_MOVED":this.onClientMoved(message);break;case"CLIENT_JOINED":this.onClientJoined(message);break;case"CLIENT_LEFT":this.onClientLeft(message);break;case"REVISION_REDONE":{this.revisions.redo(message.redoneRevisionId,message.nextRevisionId,message.serverRevisionId);this.trigger("revision-redone",{revisionId:message.redoneRevisionId,commands:this.revisions.get(message.redoneRevisionId).commands,});break;}
case"REVISION_UNDONE":this.revisions.undo(message.undoneRevisionId,message.nextRevisionId,message.serverRevisionId);this.trigger("revision-undone",{revisionId:message.undoneRevisionId,commands:this.revisions.get(message.undoneRevisionId).commands,});break;case"REMOTE_REVISION":const{clientId,commands,timestamp}=message;const revision=new Revision(message.nextRevisionId,clientId,commands,undefined,undefined,timestamp);if(revision.clientId!==this.clientId){this.revisions.insert(revision.id,revision,message.serverRevisionId);const pendingCommands=this.pendingMessages.filter((msg)=>msg.type==="REMOTE_REVISION").map((msg)=>msg.commands).flat();this.trigger("remote-revision-received",{commands:transformAll(commands,pendingCommands),});}
break;case"SNAPSHOT_CREATED":{const revision=new Revision(message.nextRevisionId,"server",[],undefined,undefined,Date.now());this.revisions.insert(revision.id,revision,message.serverRevisionId);this.dropPendingHistoryMessages();this.trigger("snapshot");this.lastLocalOperation=undefined;break;}}
this.acknowledge(message);this.trigger("collaborative-event-received");}
onClientMoved(message){if(message.client.id!==this.clientId){this.clients[message.client.id]=message.client;}}
onClientJoined(message){if(message.client.id!==this.clientId){this.clients[message.client.id]=message.client;const client=this.clients[this.clientId];if(client){const{position}=client;if(position){this.transportService.sendMessage({type:"CLIENT_MOVED",version:MESSAGE_VERSION,client:{...client,position},});}}}}
onClientLeft(message){if(message.clientId!==this.clientId){delete this.clients[message.clientId];}}
sendUpdateMessage(message){this.pendingMessages.push(message);if(this.waitingAck){return;}
this.sendPendingMessage();}
sendPendingMessage(){let message=this.pendingMessages[0];if(!message)
return;if(message.type==="REMOTE_REVISION"){let revision=this.revisions.get(message.nextRevisionId);if(revision.commands.length===0){this.revisions.rebase(revision.id);revision=this.revisions.get(message.nextRevisionId);}
message={...message,clientId:revision.clientId,commands:revision.commands,};}
if(this.isReplayingInitialRevisions){throw new Error(`Trying to send a new revision while replaying initial revision. This can lead to endless dispatches every time the spreadsheet is open.
      ${JSON.stringify(message)}`);}
this.waitingAck=true;this.transportService.sendMessage({...message,serverRevisionId:this.serverRevisionId,});}
acknowledge(message){if(message.type==="REVISION_UNDONE"||message.type==="REVISION_REDONE"){this.waitingUndoRedoAck=false;}
switch(message.type){case"REMOTE_REVISION":case"REVISION_REDONE":case"SNAPSHOT_CREATED":this.waitingAck=false;this.pendingMessages=this.pendingMessages.filter((msg)=>msg.nextRevisionId!==message.nextRevisionId);this.serverRevisionId=message.nextRevisionId;this.processedRevisions.add(message.nextRevisionId);this.lastRevisionMessage=message;this.sendPendingMessage();break;case"REVISION_UNDONE":{this.waitingAck=false;this.pendingMessages=this.pendingMessages.filter((msg)=>msg.nextRevisionId!==message.nextRevisionId);const firstPendingRevisionId=this.pendingMessages.findIndex((message)=>message.type==="REMOTE_REVISION");if(firstPendingRevisionId!==-1){this.revisions.rebase(this.pendingMessages[firstPendingRevisionId].nextRevisionId);}
this.serverRevisionId=message.nextRevisionId;this.processedRevisions.add(message.nextRevisionId);this.sendPendingMessage();break;}}}
isAlreadyProcessed(message){if(message.type==="CLIENT_MOVED"&&message.client.id===this.clientId){return true;}
switch(message.type){case"REMOTE_REVISION":case"REVISION_REDONE":case"REVISION_UNDONE":case"SNAPSHOT_CREATED":return this.processedRevisions.has(message.nextRevisionId);default:return false;}}
isWrongServerRevisionId(message){switch(message.type){case"REMOTE_REVISION":case"REVISION_REDONE":case"REVISION_UNDONE":case"SNAPSHOT_CREATED":return message.serverRevisionId!==this.serverRevisionId;default:return false;}}
dropPendingHistoryMessages(){this.waitingUndoRedoAck=false;this.pendingMessages=this.pendingMessages.filter(({type})=>type!=="REVISION_REDONE"&&type!=="REVISION_UNDONE");}}
class CollaborativePlugin extends UIPlugin{static getters=["getClientsToDisplay","getClient","getCurrentClient","getConnectedClients","isFullySynchronized",];static layers=["Selection"];colors=new AlternatingColorMap(12);session;constructor(config){super(config);this.session=config.session;}
isPositionValid(position){return(position.row<this.getters.getNumberRows(position.sheetId)&&position.col<this.getters.getNumberCols(position.sheetId));}
getClient(clientId){return this.session.getClient(clientId);}
getCurrentClient(){return this.session.getCurrentClient();}
getConnectedClients(){return[...this.session.getConnectedClients()].map((client)=>{return{...client,color:this.colors.get(client.id)};});}
isFullySynchronized(){return this.session.isFullySynchronized();}
getClientsToDisplay(){try{this.getters.getCurrentClient();}
catch(e){if(e instanceof ClientDisconnectedError){return[];}
else{throw e;}}
const sheetId=this.getters.getActiveSheetId();const clients=[];for(const client of this.getters.getConnectedClients()){if(client.id!==this.getters.getCurrentClient().id&&client.position&&client.position.sheetId===sheetId&&this.isPositionValid(client.position)){clients.push({...client,position:client.position});}}
return clients;}
drawLayer(renderingContext){if(this.getters.isDashboard()){return;}
const{ctx,thinLineWidth}=renderingContext;const activeSheetId=this.getters.getActiveSheetId();for(const client of this.getClientsToDisplay()){const{row,col}=client.position;const zone=this.getters.expandZone(activeSheetId,{top:row,bottom:row,left:col,right:col,});const{x,y,width,height}=this.getters.getVisibleRect(zone);if(width<=0||height<=0){continue;}
const color=client.color;ctx.fillStyle=`${color}10`;ctx.lineWidth=4*thinLineWidth;ctx.strokeStyle=color;ctx.globalCompositeOperation="multiply";ctx.fillRect(x,y,width,height);ctx.globalCompositeOperation="source-over";ctx.strokeRect(x,y,width,height);ctx.font=`bold ${DEFAULT_FONT_SIZE + 1}px ${DEFAULT_FONT}`;}}}
class DataCleanupPlugin extends UIPlugin{allowDispatch(cmd){switch(cmd.type){case"REMOVE_DUPLICATES":return this.checkValidations(cmd,this.chainValidations(this.checkSingleRangeSelected,this.checkNoMergeInZone,this.checkRangeContainsValues,this.checkColumnsIncludedInZone),this.chainValidations(this.checkNoColumnProvided,this.checkColumnsAreUnique));}
return"Success";}
handle(cmd){switch(cmd.type){case"REMOVE_DUPLICATES":this.removeDuplicates(cmd.columns,cmd.hasHeader);break;case"TRIM_WHITESPACE":this.trimWhitespace();break;}}
removeDuplicates(columnsToAnalyze,hasHeader){const sheetId=this.getters.getActiveSheetId();const zone=this.getters.getSelectedZone();if(hasHeader){zone.top+=1;}
const uniqueRowsIndexes=this.getUniqueRowsIndexes(sheetId,zone.top,zone.bottom,columnsToAnalyze);const numberOfUniqueRows=uniqueRowsIndexes.length;if(numberOfUniqueRows===zoneToDimension(zone).numberOfRows){this.notifyRowsRemovedAndRemaining(0,numberOfUniqueRows);return;}
const rowsToKeep=uniqueRowsIndexes.map((rowIndex)=>({left:zone.left,top:rowIndex,right:zone.right,bottom:rowIndex,}));const handler=new CellClipboardHandler(this.getters,this.dispatch);const data=handler.copy(getClipboardDataPositions(sheetId,rowsToKeep));if(!data){return;}
this.dispatch("CLEAR_CELLS",{target:[zone],sheetId});const zonePasted={left:zone.left,top:zone.top,right:zone.left,bottom:zone.top,};handler.paste({zones:[zonePasted],sheetId},data,{isCutOperation:false});const remainingZone={left:zone.left,top:zone.top-(hasHeader?1:0),right:zone.right,bottom:zone.top+numberOfUniqueRows-1,};this.selection.selectZone({cell:{col:remainingZone.left,row:remainingZone.top},zone:remainingZone,});const removedRows=zone.bottom-zone.top+1-numberOfUniqueRows;this.notifyRowsRemovedAndRemaining(removedRows,numberOfUniqueRows);}
getUniqueRowsIndexes(sheetId,top,bottom,columns){const uniqueRows=new Map();for(const row of range(top,bottom+1)){const cellsValuesInRow=columns.map((col)=>{return this.getters.getEvaluatedCell({sheetId,col,row,}).value;});const isRowUnique=!Object.values(uniqueRows).some((uniqueRow)=>deepEquals(uniqueRow,cellsValuesInRow));if(isRowUnique){uniqueRows[row]=cellsValuesInRow;}}
return Object.keys(uniqueRows).map((key)=>parseInt(key));}
notifyRowsRemovedAndRemaining(removedRows,remainingRows){this.ui.notifyUI({type:"info",text:_t("%s duplicate rows found and removed.\n%s unique rows remain.",removedRows.toString(),remainingRows.toString()),sticky:false,});}
checkSingleRangeSelected(){const zones=this.getters.getSelectedZones();if(zones.length!==1){return"MoreThanOneRangeSelected";}
return"Success";}
checkNoMergeInZone(){const sheetId=this.getters.getActiveSheetId();const zone=this.getters.getSelectedZone();const mergesInZone=this.getters.getMergesInZone(sheetId,zone);if(mergesInZone.length>0){return"WillRemoveExistingMerge";}
return"Success";}
checkRangeContainsValues(cmd){const sheetId=this.getters.getActiveSheetId();const zone=this.getters.getSelectedZone();if(cmd.hasHeader){zone.top+=1;}
const evaluatedCells=this.getters.getEvaluatedCellsInZone(sheetId,zone);if(evaluatedCells.every((evaluatedCel)=>evaluatedCel.type==="empty")){return"EmptyTarget";}
return"Success";}
checkNoColumnProvided(cmd){if(cmd.columns.length===0){return"NoColumnsProvided";}
return"Success";}
checkColumnsIncludedInZone(cmd){const zone=this.getters.getSelectedZone();const columnsToAnalyze=cmd.columns;if(columnsToAnalyze.some((colIndex)=>colIndex<zone.left||colIndex>zone.right)){return"ColumnsNotIncludedInZone";}
return"Success";}
checkColumnsAreUnique(cmd){if(cmd.columns.length!==new Set(cmd.columns).size){return"DuplicatesColumnsSelected";}
return"Success";}
trimWhitespace(){const zones=recomputeZones(this.getters.getSelectedZones());const sheetId=this.getters.getActiveSheetId();let count=0;for(const{col,row}of zones.map(positions).flat()){const cell=this.getters.getCell({col,row,sheetId});if(!cell){continue;}
const trimmedContent=trimContent(cell.content);if(trimmedContent!==cell.content){count+=1;this.dispatch("UPDATE_CELL",{sheetId,col,row,content:trimmedContent,});}}
const text=count?_t("Trimmed whitespace from %s cells.",count):_t("No selected cells had whitespace trimmed.");this.ui.notifyUI({type:"info",text:text,sticky:false,});}}
class FormatPlugin extends UIPlugin{handle(cmd){switch(cmd.type){case"SET_DECIMAL":this.setDecimal(cmd.sheetId,cmd.target,cmd.step);break;case"SET_FORMATTING_WITH_PIVOT":{this.setContextualFormat(cmd.sheetId,cmd.target,cmd.format);break;}}}
setContextualFormat(sheetId,zones,format){const measurePositions=[];const measuresByPivotId={};for(const zone of recomputeZones(zones)){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const position={sheetId,col,row};const pivotCell=this.getters.getPivotCellFromPosition(position);if(this.isSpilledPivotValueFormula(position,pivotCell)){measurePositions.push(position);const pivotId=this.getters.getPivotIdFromPosition(position)||"";measuresByPivotId[pivotId]??=new Set();measuresByPivotId[pivotId].add(pivotCell.measure);}}}}
const measureZones=recomputeZones(measurePositions.map(positionToZone));for(const pivotId in measuresByPivotId){const measures=measuresByPivotId[pivotId];const pivotDefinition=this.getters.getPivotCoreDefinition(pivotId);this.dispatch("UPDATE_PIVOT",{pivotId,pivot:{...pivotDefinition,measures:pivotDefinition.measures.map((measure)=>{if(measures.has(measure.id)){return{...measure,format};}
return measure;}),},});}
this.dispatch("SET_FORMATTING",{sheetId,target:measureZones,format:"",});this.dispatch("SET_FORMATTING",{sheetId,target:recomputeZones(zones,measureZones),format,});}
isSpilledPivotValueFormula(position,pivotCell){const cell=this.getters.getCell(position);return pivotCell.type==="VALUE"&&!cell?.isFormula;}
setDecimal(sheetId,zones,step){const positionsByFormat={};for(const zone of recomputeZones(zones)){for(const position of positions(zone)){const numberFormat=this.getCellNumberFormat({sheetId,...position});if(numberFormat!==undefined){const newFormat=changeDecimalPlaces(numberFormat,step);positionsByFormat[newFormat]=positionsByFormat[newFormat]||[];positionsByFormat[newFormat].push(position);}}}
for(const newFormat in positionsByFormat){const zones=recomputeZones(positionsByFormat[newFormat].map((position)=>positionToZone(position)));this.setContextualFormat(sheetId,zones,newFormat);}}
getCellNumberFormat(position){for(const pos of[position]){const cell=this.getters.getEvaluatedCell(pos);if(cell.type===CellValueType.number&&!(cell.format&&isDateTimeFormat(cell.format))){return cell.format||createDefaultFormat(cell.value);}}
return undefined;}}
class GeoFeaturePlugin extends UIPlugin{static getters=["getGeoJsonFeatures","geoFeatureNameToId","getGeoChartAvailableRegions",];geoJsonService;geoJsonCache={};constructor(config){super(config);this.geoJsonService=config.external.geoJsonService;}
getGeoChartAvailableRegions(){if(!this.geoJsonService){console.error("No geoJsonService provided to the model");return[];}
return this.geoJsonService.getAvailableRegions()||[];}
getGeoJsonFeatures(region){if(!this.geoJsonService){console.error("No geoJsonService provided to the model");return;}
const cachedGeoJson=this.geoJsonCache[region];if(cachedGeoJson instanceof Promise){return undefined;}
if(cachedGeoJson!==undefined){return cachedGeoJson??undefined;}
this.geoJsonCache[region]=new Promise(async(resolve)=>{const json=await this.geoJsonService?.getTopoJson(region);this.geoJsonCache[region]=this.convertToGeoJson(json);this.dispatch("EVALUATE_CHARTS");resolve();});return undefined;}
geoFeatureNameToId(region,featureName){if(!this.geoJsonService){console.error("No geoJsonService provided to the model");return;}
return this.geoJsonService.geoFeatureNameToId(region,featureName);}
convertToGeoJson(json){if(!json){return null;}
if(json.type==="Topology"){const features=window.ChartGeo.topojson.feature(json,Object.values(json.objects)[0]);return features.type==="FeatureCollection"?features.features:[features];}
else if(json.type==="FeatureCollection"){return json.features;}
throw new Error("Invalid TopoJSON");}}
class HeaderVisibilityUIPlugin extends UIPlugin{static getters=["getNextVisibleCellPosition","findVisibleHeader","findLastVisibleColRowIndex","findFirstVisibleColRowIndex","isRowHidden","isColHidden","isHeaderHidden",];isRowHidden(sheetId,index){return(this.getters.isRowHiddenByUser(sheetId,index)||this.getters.isRowFiltered(sheetId,index));}
isColHidden(sheetId,index){return this.getters.isColHiddenByUser(sheetId,index);}
isHeaderHidden(sheetId,dimension,index){return dimension==="COL"?this.isColHidden(sheetId,index):this.isRowHidden(sheetId,index);}
getNextVisibleCellPosition({sheetId,col,row}){return{sheetId,col:this.findVisibleHeader(sheetId,"COL",col,this.getters.getNumberCols(sheetId)-1),row:this.findVisibleHeader(sheetId,"ROW",row,this.getters.getNumberRows(sheetId)-1),};}
findVisibleHeader(sheetId,dimension,from,to){if(from<=to){for(let i=from;i<=to;i++){if(this.getters.doesHeaderExist(sheetId,dimension,i)&&!this.isHeaderHidden(sheetId,dimension,i)){return i;}}}
if(from>to){for(let i=from;i>=to;i--){if(this.getters.doesHeaderExist(sheetId,dimension,i)&&!this.isHeaderHidden(sheetId,dimension,i)){return i;}}}
return undefined;}
findLastVisibleColRowIndex(sheetId,dimension,{last,first}){const lastVisibleIndex=range(last,first,-1).find((index)=>!this.isHeaderHidden(sheetId,dimension,index));return lastVisibleIndex||first;}
findFirstVisibleColRowIndex(sheetId,dimension){const numberOfHeaders=this.getters.getNumberHeaders(sheetId,dimension);for(let i=0;i<numberOfHeaders;i++){if(dimension==="COL"&&!this.isColHidden(sheetId,i)){return i;}
if(dimension==="ROW"&&!this.isRowHidden(sheetId,i)){return i;}}
return undefined;}
exportForExcel(data){for(const sheetData of data.sheets){for(const[row,rowData]of Object.entries(sheetData.rows)){rowData.isHidden=this.isRowHidden(sheetData.id,Number(row));}}}}
class InsertPivotPlugin extends UIPlugin{static getters=[];allowDispatch(cmd){switch(cmd.type){case"DUPLICATE_PIVOT_IN_NEW_SHEET":if(!this.getters.isExistingPivot(cmd.pivotId)){return"PivotIdNotFound";}
if(!this.getters.getPivot(cmd.pivotId).isValid()){return"PivotInError";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"INSERT_NEW_PIVOT":this.insertNewPivot(cmd.pivotId,cmd.newSheetId);break;case"DUPLICATE_PIVOT_IN_NEW_SHEET":this.duplicatePivotInNewSheet(cmd.pivotId,cmd.newPivotId,cmd.newSheetId);break;case"INSERT_PIVOT_WITH_TABLE":this.insertPivotWithTable(cmd.sheetId,cmd.col,cmd.row,cmd.pivotId,cmd.table,cmd.pivotMode);break;case"SPLIT_PIVOT_FORMULA":this.splitPivotFormula(cmd.sheetId,cmd.col,cmd.row,cmd.pivotId);}}
insertNewPivot(pivotId,sheetId){if(getZoneArea(this.getters.getSelectedZone())===1){this.selection.selectTableAroundSelection();}
const currentSheetId=this.getters.getActiveSheetId();this.dispatch("ADD_PIVOT",{pivotId,pivot:{dataSet:{zone:this.getters.getSelectedZone(),sheetId:currentSheetId,},columns:[],rows:[],measures:[],name:_t("New pivot"),type:"SPREADSHEET",},});const position=this.getters.getSheetIds().findIndex((sheetId)=>sheetId===currentSheetId)+1;const formulaId=this.getters.getPivotFormulaId(pivotId);this.dispatch("CREATE_SHEET",{sheetId,name:_t("Pivot #%(formulaId)s",{formulaId}),position,});this.dispatch("ACTIVATE_SHEET",{sheetIdFrom:currentSheetId,sheetIdTo:sheetId,});const pivot=this.getters.getPivot(pivotId);this.insertPivotWithTable(sheetId,0,0,pivotId,pivot.getCollapsedTableStructure().export(),"dynamic");}
duplicatePivotInNewSheet(pivotId,newPivotId,newSheetId){this.dispatch("DUPLICATE_PIVOT",{pivotId,newPivotId,duplicatedPivotName:_t("%s (copy)",this.getters.getPivotCoreDefinition(pivotId).name),});const activeSheetId=this.getters.getActiveSheetId();const position=this.getters.getSheetIds().indexOf(activeSheetId)+1;const formulaId=this.getters.getPivotFormulaId(newPivotId);const newPivotName=this.getters.getPivotName(newPivotId);const result=this.dispatch("CREATE_SHEET",{sheetId:newSheetId,name:this.getPivotDuplicateSheetName(_t("%(newPivotName)s (Pivot #%(formulaId)s)",{newPivotName,formulaId,})),position,});if(result.isSuccessful){this.dispatch("ACTIVATE_SHEET",{sheetIdFrom:activeSheetId,sheetIdTo:newSheetId});const pivot=this.getters.getPivot(pivotId);this.insertPivotWithTable(newSheetId,0,0,newPivotId,pivot.getCollapsedTableStructure().export(),"dynamic");}}
getPivotDuplicateSheetName(pivotName){const names=this.getters.getSheetIds().map((id)=>this.getters.getSheetName(id));const sanitizedName=sanitizeSheetName(pivotName);return getUniqueText(sanitizedName,names);}
insertPivotWithTable(sheetId,col,row,pivotId,table,mode){const{cols,rows,measures,fieldsType}=table;const pivotTable=new SpreadsheetPivotTable(cols,rows,measures,fieldsType||{});const numberOfHeaders=pivotTable.columns.length-1;this.resizeSheet(sheetId,col,row,pivotTable);const pivotFormulaId=this.getters.getPivotFormulaId(pivotId);let zone;if(mode==="dynamic"){this.dispatch("UPDATE_CELL",{sheetId,col,row,content:`=PIVOT(${pivotFormulaId})`,});zone={left:col,right:col,top:row,bottom:row,};}
else{this.dispatch("INSERT_PIVOT",{sheetId,col,row,pivotId,table:pivotTable.export(),});zone={left:col,right:col+pivotTable.getNumberOfDataColumns(),top:row,bottom:row+numberOfHeaders+pivotTable.rows.length,};}
this.dispatch("CREATE_TABLE",{tableType:mode,sheetId,ranges:[this.getters.getRangeDataFromZone(sheetId,zone)],config:{...PIVOT_TABLE_CONFIG,numberOfHeaders},});}
resizeSheet(sheetId,col,row,table){const colLimit=table.getNumberOfDataColumns()+1;const numberCols=this.getters.getNumberCols(sheetId);const deltaCol=numberCols-col;if(deltaCol<colLimit){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:numberCols-1,sheetId:sheetId,sheetName:this.getters.getSheetName(sheetId),quantity:colLimit-deltaCol,position:"after",});}
const rowLimit=table.columns.length+table.rows.length;const numberRows=this.getters.getNumberRows(sheetId);const deltaRow=numberRows-row;if(deltaRow<rowLimit){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"ROW",base:numberRows-1,sheetId:sheetId,sheetName:this.getters.getSheetName(sheetId),quantity:rowLimit-deltaRow,position:"after",});}}
splitPivotFormula(sheetId,col,row,pivotId){const spreadZone=this.getters.getSpreadZone({sheetId,col,row});if(!spreadZone){return;}
const formulaId=this.getters.getPivotFormulaId(pivotId);const pivotCells=new Map();for(let col=spreadZone.left;col<=spreadZone.right;col++){for(let row=spreadZone.top;row<=spreadZone.bottom;row++){const position={sheetId,col,row};pivotCells.set(position,this.getters.getPivotCellFromPosition(position));}}
for(const[position,pivotCell]of pivotCells){this.dispatch("UPDATE_CELL",{...position,content:createPivotFormula(formulaId,pivotCell),});}
const table=this.getters.getCoreTable({sheetId,col,row});if(table?.type==="dynamic"){const zone=positionToZone({col,row});const rangeData=this.getters.getRangeDataFromZone(sheetId,spreadZone);this.dispatch("UPDATE_TABLE",{sheetId,zone,newTableRange:rangeData,tableType:"static",});}}}
class SortPlugin extends UIPlugin{allowDispatch(cmd){switch(cmd.type){case"SORT_CELLS":if(!isInside(cmd.col,cmd.row,cmd.zone)){return"InvalidSortAnchor";}
return this.checkValidations(cmd,this.checkMerge,this.checkMergeSizes,this.checkArrayFormulaInSortZone);}
return"Success";}
handle(cmd){switch(cmd.type){case"SORT_CELLS":this.sortZone(cmd.sheetId,cmd,cmd.zone,cmd.sortDirection,cmd.sortOptions||{});break;}}
checkMerge({sheetId,zone}){if(!this.getters.doesIntersectMerge(sheetId,zone)){return"Success";}
const singleCells=positions(zone).some(({col,row})=>!this.getters.isInMerge({sheetId,col,row}));if(singleCells){return"InvalidSortZone";}
return"Success";}
checkMergeSizes({sheetId,zone}){if(!this.getters.doesIntersectMerge(sheetId,zone)){return"Success";}
const merges=this.getters.getMerges(sheetId).filter((merge)=>overlap(merge,zone));const mergeDimension=zoneToDimension(merges[0]);const[widthFirst,heightFirst]=[mergeDimension.numberOfCols,mergeDimension.numberOfRows];if(!merges.every((merge)=>{const[widthCurrent,heightCurrent]=[merge.right-merge.left+1,merge.bottom-merge.top+1,];return widthCurrent===widthFirst&&heightCurrent===heightFirst;})){return"InvalidSortZone";}
return"Success";}
checkArrayFormulaInSortZone({sheetId,zone}){const arrayFormulaInZone=positions(zone).some(({col,row})=>this.getters.getArrayFormulaSpreadingOn({sheetId,col,row}));return arrayFormulaInZone?"SortZoneWithArrayFormulas":"Success";}
hasHeader(sheetId,items){if(items[0].length===1)
return false;let cells=items.map((col)=>col.map(({col,row})=>this.getters.getEvaluatedCell({sheetId,col,row}).type));const topLeft=cells[0][0];if(topLeft===CellValueType.empty){cells=cells.slice(1);}
if(cells.some((item)=>item[0]===CellValueType.empty)){return false;}
else if(cells.some((item)=>item[1]!==CellValueType.empty&&item[0]!==item[1])){return true;}
else{return false;}}
sortZone(sheetId,anchor,zone,sortDirection,options){const[stepX,stepY]=this.mainCellsSteps(sheetId,zone);const sortingCol=this.getters.getMainCellPosition({sheetId,col:anchor.col,row:anchor.row,}).col;const sortZone=Object.assign({},zone);let cellPositions=this.mainCells(sheetId,zone);if(!options.sortHeaders&&this.hasHeader(sheetId,cellPositions)){sortZone.top+=stepY;}
cellPositions=this.mainCells(sheetId,sortZone);const sortingCells=cellPositions[sortingCol-sortZone.left];const sortedIndexOfSortTypeCells=sortCells(sortingCells.map((position)=>this.getters.getEvaluatedCell(position)),sortDirection,Boolean(options.emptyCellAsZero));const sortedIndex=sortedIndexOfSortTypeCells.map((x)=>x.index);const[width,height]=[cellPositions.length,cellPositions[0].length];const updateCellCommands=[];for(let c=0;c<width;c++){for(let r=0;r<height;r++){const{col,row,sheetId}=cellPositions[c][sortedIndex[r]];const cell=this.getters.getCell({sheetId,col,row});const newCol=sortZone.left+c*stepX;const newRow=sortZone.top+r*stepY;const newCellValues={sheetId:sheetId,col:newCol,row:newRow,content:"",};if(cell){let content=cell.content;if(cell.isFormula){const position=this.getters.getCellPosition(cell.id);content=this.getters.getTranslatedCellFormula(sheetId,0,newRow-position.row,cell.compiledFormula.tokens);}
newCellValues.style=cell.style;newCellValues.content=content;newCellValues.format=cell.format;}
updateCellCommands.push(newCellValues);}}
updateCellCommands.forEach((cmdPayload)=>this.dispatch("UPDATE_CELL",cmdPayload));}
mainCellsSteps(sheetId,zone){const merge=this.getters.getMerge({sheetId,col:zone.left,row:zone.top});const stepX=merge?merge.right-merge.left+1:1;const stepY=merge?merge.bottom-merge.top+1:1;return[stepX,stepY];}
mainCells(sheetId,zone){const[stepX,stepY]=this.mainCellsSteps(sheetId,zone);const cells=[];const cols=range(zone.left,zone.right+1,stepX);const rows=range(zone.top,zone.bottom+1,stepY);for(const col of cols){const colCells=[];cells.push(colCells);for(const row of rows){colCells.push({sheetId,col,row});}}
return cells;}}
class UIOptionsPlugin extends UIPlugin{static getters=["shouldShowFormulas"];showFormulas=false;handle(cmd){switch(cmd.type){case"SET_FORMULA_VISIBILITY":this.showFormulas=cmd.show;break;}}
shouldShowFormulas(){return this.showFormulas;}}
class SheetUIPlugin extends UIPlugin{static getters=["getCellWidth","getTextWidth","getCellText","getCellMultiLineText","getContiguousZone","computeTextYCoordinate",];ctx=document.createElement("canvas").getContext("2d");allowDispatch(cmd){return this.chainValidations(this.checkSheetExists,this.checkZonesAreInSheet)(cmd);}
handle(cmd){switch(cmd.type){case"AUTORESIZE_COLUMNS":for(const col of cmd.cols){const size=this.getColMaxWidth(cmd.sheetId,col);if(size!==0){this.dispatch("RESIZE_COLUMNS_ROWS",{elements:[col],dimension:"COL",size,sheetId:cmd.sheetId,});}}
break;case"AUTORESIZE_ROWS":this.autoResizeRows(cmd.sheetId,cmd.rows);break;case"DELETE_UNFILTERED_CONTENT":const newTarget=[];for(const target of cmd.target){const nonFilteredRows=range(target.top,target.bottom+1).filter((row)=>!this.getters.isRowFiltered(cmd.sheetId,row));const consecutiveRows=groupConsecutive(nonFilteredRows);for(const group of consecutiveRows){newTarget.push({...target,top:group[0],bottom:group[group.length-1]});}}
this.dispatch("DELETE_CONTENT",{sheetId:cmd.sheetId,target:newTarget});break;}}
getCellWidth(position){const style=this.getters.getCellComputedStyle(position);let contentWidth=0;const content=this.getters.getEvaluatedCell(position).formattedValue;if(content){const multiLineText=splitTextToWidth(this.ctx,content,style,undefined);contentWidth+=Math.max(...multiLineText.map((line)=>computeTextWidth(this.ctx,line,style)));}
for(const icon of this.getters.getCellIcons(position)){contentWidth+=icon.margin+icon.size;}
if(this.getters.getDataValidationChipStyle(position)){contentWidth+=DATA_VALIDATION_CHIP_MARGIN*2;}
if(contentWidth===0){return 0;}
contentWidth+=2*PADDING_AUTORESIZE_HORIZONTAL;if(style.wrapping==="wrap"){const colWidth=this.getters.getColSize(this.getters.getActiveSheetId(),position.col);return Math.min(colWidth,contentWidth);}
return contentWidth;}
getTextWidth(text,style){return computeTextWidth(this.ctx,text,style);}
getCellText(position,args){const cell=this.getters.getCell(position);const locale=this.getters.getLocale();if(args?.showFormula&&cell?.isFormula){return localizeFormula(cell.content,locale);}
else if(args?.showFormula&&!cell?.content){return"";}
else{const evaluatedCell=this.getters.getEvaluatedCell(position);const formatWidth=args?.availableWidth?{availableWidth:args.availableWidth,measureText:(text)=>computeTextWidth(this.ctx,text,cell?.style||{}),}:undefined;return formatValue(evaluatedCell.value,{format:evaluatedCell.format,locale,formatWidth,});}}
getCellMultiLineText(position,args){const style=this.getters.getCellStyle(position);const text=this.getters.getCellText(position,{showFormula:this.getters.shouldShowFormulas(),availableWidth:args.maxWidth,});return splitTextToWidth(this.ctx,text,style,args.wrapText?args.maxWidth:undefined);}
computeTextYCoordinate(cellRect,textLineHeight,verticalAlign=DEFAULT_VERTICAL_ALIGN,numberOfLines=1){const y=cellRect.y+1;const textHeight=computeTextLinesHeight(textLineHeight,numberOfLines);const hasEnoughSpaces=cellRect.height>textHeight+MIN_CELL_TEXT_MARGIN*2;if(hasEnoughSpaces){if(verticalAlign==="middle"){return Math.ceil(y+(cellRect.height-textHeight)/2);}
if(verticalAlign==="bottom"){return y+cellRect.height-textHeight-MIN_CELL_TEXT_MARGIN;}}
return y+MIN_CELL_TEXT_MARGIN;}
getContiguousZone(sheetId,zoneToExpand){const expandZone=(zone)=>{for(const col of range(zone.left,zone.right+1)){if(!this.isCellEmpty({sheetId,col,row:zone.top-1})){return{...zone,top:zone.top-1};}
if(!this.isCellEmpty({sheetId,col,row:zone.bottom+1})){return{...zone,bottom:zone.bottom+1};}}
for(const row of range(zone.top,zone.bottom+1)){if(!this.isCellEmpty({sheetId,col:zone.left-1,row})){return{...zone,left:zone.left-1};}
if(!this.isCellEmpty({sheetId,col:zone.right+1,row})){return{...zone,right:zone.right+1};}}
return zone;};let hasExpanded=false;let zone=zoneToExpand;do{hasExpanded=false;const newZone=expandZone(zone);if(!isEqual(zone,newZone)){hasExpanded=true;zone=newZone;}}while(hasExpanded);return zone;}
isCellEmpty(position){const mainPosition=this.getters.getMainCellPosition(position);return this.getters.getEvaluatedCell(mainPosition).type===CellValueType.empty;}
getColMaxWidth(sheetId,index){const cellsPositions=positions(this.getters.getColsZone(sheetId,index,index));const sizes=cellsPositions.map((position)=>this.getCellWidth({sheetId,...position}));return Math.max(0,largeMax(sizes));}
checkSheetExists(cmd){if("sheetId"in cmd&&this.getters.tryGetSheet(cmd.sheetId)===undefined){return"InvalidSheetId";}
return"Success";}
checkZonesAreInSheet(cmd){const sheetId="sheetId"in cmd?cmd.sheetId:this.getters.tryGetActiveSheetId();if("ranges"in cmd&&cmd.ranges.some((rangeData)=>!this.getters.tryGetSheet(rangeData._sheetId))){return"InvalidSheetId";}
const zones=this.getters.getCommandZones(cmd);if(!sheetId&&zones.length>0){return"NoActiveSheet";}
if(sheetId&&zones.length>0){return this.getters.checkZonesExistInSheet(sheetId,zones);}
return"Success";}
autoResizeRows(sheetId,rows){const rowSizes=[];for(const row of rows){let evaluatedRowSize=0;for(const cellId of this.getters.getRowCells(sheetId,row)){const cell=this.getters.getCellById(cellId);if(!cell){continue;}
const position=this.getters.getCellPosition(cell.id);const colSize=this.getters.getColSize(sheetId,position.col);if(cell.isFormula||this.getters.getArrayFormulaSpreadingOn(position)){const content=this.getters.getEvaluatedCell(position).formattedValue;const evaluatedSize=getCellContentHeight(this.ctx,content,cell?.style,colSize);if(evaluatedSize>evaluatedRowSize&&evaluatedSize>DEFAULT_CELL_HEIGHT){evaluatedRowSize=evaluatedSize;}}
else{const content=cell.content;const dynamicRowSize=getCellContentHeight(this.ctx,content,cell?.style,colSize);if(dynamicRowSize>=evaluatedRowSize&&dynamicRowSize>DEFAULT_CELL_HEIGHT){evaluatedRowSize=0;}}}
rowSizes.push(evaluatedRowSize||null);}
const groupedSizes=new Map(rowSizes.map((size)=>[size,[]]));for(let i=0;i<rowSizes.length;i++){groupedSizes.get(rowSizes[i])?.push(rows[i]);}
for(const[size,rows]of groupedSizes){this.dispatch("RESIZE_COLUMNS_ROWS",{elements:rows,dimension:"ROW",size,sheetId,});}}}
class TableComputedStylePlugin extends UIPlugin{static getters=["getCellTableStyle","getCellTableBorder"];tableStyles={};handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||(cmd.type==="UPDATE_CELL"&&("content"in cmd||"format"in cmd))||cmd.type==="EVALUATE_CELLS"){this.tableStyles={};return;}
if(doesCommandInvalidatesTableStyle(cmd)){if("sheetId"in cmd){delete this.tableStyles[cmd.sheetId];}
else{this.tableStyles={};}
return;}}
finalize(){for(const sheetId of this.getters.getSheetIds()){if(!this.tableStyles[sheetId]){this.tableStyles[sheetId]={};}
for(const table of this.getters.getTables(sheetId)){if(!this.tableStyles[sheetId][table.id]){this.tableStyles[sheetId][table.id]=this.computeTableStyle(sheetId,table);}}}}
getCellTableStyle(position){const table=this.getters.getTable(position);if(!table){return undefined;}
return this.tableStyles[position.sheetId][table.id]().styles[position.col]?.[position.row];}
getCellTableBorder(position){const table=this.getters.getTable(position);if(!table){return undefined;}
return this.tableStyles[position.sheetId][table.id]().borders[position.col]?.[position.row];}
computeTableStyle(sheetId,table){return lazy(()=>{const{config,numberOfCols,numberOfRows}=this.getTableRuntimeConfig(sheetId,table);const style=this.getters.getTableStyle(table.config.styleId);const relativeTableStyle=getComputedTableStyle(config,style,numberOfCols,numberOfRows);const mapping=this.getTableMapping(sheetId,table);const absoluteTableStyle={borders:{},styles:{}};for(let col=0;col<numberOfCols;col++){const colInSheet=mapping.colMapping[col];absoluteTableStyle.borders[colInSheet]={};absoluteTableStyle.styles[colInSheet]={};for(let row=0;row<numberOfRows;row++){const rowInSheet=mapping.rowMapping[row];absoluteTableStyle.borders[colInSheet][rowInSheet]=relativeTableStyle.borders[col][row];absoluteTableStyle.styles[colInSheet][rowInSheet]=relativeTableStyle.styles[col][row];}}
return absoluteTableStyle;});}
getTableRuntimeConfig(sheetId,table){const tableZone=table.range.zone;const config={...table.config};let numberOfCols=tableZone.right-tableZone.left+1;let numberOfRows=tableZone.bottom-tableZone.top+1;for(let row=tableZone.top;row<=tableZone.bottom;row++){if(!this.getters.isRowHidden(sheetId,row)){continue;}
numberOfRows--;if(row-tableZone.top<table.config.numberOfHeaders){config.numberOfHeaders--;if(config.numberOfHeaders<0){config.numberOfHeaders=0;}}
if(row===tableZone.bottom){config.totalRow=false;}}
for(let col=tableZone.left;col<=tableZone.right;col++){if(!this.getters.isColHidden(sheetId,col)){continue;}
numberOfCols--;if(col===tableZone.left){config.firstColumn=false;}
if(col===tableZone.right){config.lastColumn=false;}}
return{config,numberOfCols,numberOfRows,};}
getTableMapping(sheetId,table){const colMapping={};const rowMapping={};let colOffset=0;let rowOffset=0;const tableZone=table.range.zone;for(let col=tableZone.left;col<=tableZone.right;col++){if(this.getters.isColHidden(sheetId,col)){continue;}
colMapping[colOffset]=col;colOffset++;for(let row=tableZone.top;row<=tableZone.bottom;row++){if(this.getters.isRowHidden(sheetId,row)){continue;}
rowMapping[rowOffset]=row;rowOffset++;}}
return{colMapping,rowMapping,};}}
const invalidateTableStyleCommands=["HIDE_COLUMNS_ROWS","UNHIDE_COLUMNS_ROWS","UNFOLD_HEADER_GROUP","UNGROUP_HEADERS","FOLD_HEADER_GROUP","FOLD_ALL_HEADER_GROUPS","UNFOLD_ALL_HEADER_GROUPS","FOLD_HEADER_GROUPS_IN_ZONE","UNFOLD_HEADER_GROUPS_IN_ZONE","CREATE_TABLE","UPDATE_TABLE","UPDATE_FILTER","REMOVE_TABLE","RESIZE_TABLE","CREATE_TABLE_STYLE","REMOVE_TABLE_STYLE",];const invalidateTableStyleCommandsSet=new Set(invalidateTableStyleCommands);function doesCommandInvalidatesTableStyle(cmd){return invalidateTableStyleCommandsSet.has(cmd.type);}
class CellComputedStylePlugin extends UIPlugin{static getters=["getCellComputedBorder","getCellComputedStyle"];styles={};borders={};handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||cmd.type==="UPDATE_CELL"||cmd.type==="SET_FORMATTING"||cmd.type==="ADD_DATA_VALIDATION_RULE"||cmd.type==="REMOVE_DATA_VALIDATION_RULE"||cmd.type==="EVALUATE_CELLS"){this.styles={};this.borders={};return;}
if(doesCommandInvalidatesTableStyle(cmd)){if("sheetId"in cmd){delete this.styles[cmd.sheetId];delete this.borders[cmd.sheetId];}
else{this.styles={};this.borders={};}
return;}
if(invalidateCFEvaluationCommands.has(cmd.type)){this.styles={};return;}
if(invalidateBordersCommands.has(cmd.type)){this.borders={};return;}}
getCellComputedBorder(position){const{sheetId,row,col}=position;if(this.borders[sheetId]?.[row]?.[col]!==undefined){return this.borders[sheetId][row][col];}
if(!this.borders[sheetId]){this.borders[sheetId]={};}
if(!this.borders[sheetId][row]){this.borders[sheetId][row]={};}
if(!this.borders[sheetId][row][col]){this.borders[sheetId][row][col]=this.computeCellBorder(position);}
return this.borders[sheetId][row][col];}
getCellComputedStyle(position){const{sheetId,row,col}=position;if(this.styles[sheetId]?.[row]?.[col]!==undefined){return this.styles[sheetId][row][col];}
if(!this.styles[sheetId]){this.styles[sheetId]={};}
if(!this.styles[sheetId][row]){this.styles[sheetId][row]={};}
if(!this.styles[sheetId][row][col]){this.styles[sheetId][row][col]=this.computeCellStyle(position);}
return this.styles[sheetId][row][col];}
computeCellBorder(position){const cellBorder=this.getters.getCellBorder(position)||{};const cellTableBorder=this.getters.getCellTableBorder(position)||{};const border={...removeFalsyAttributes(cellTableBorder),...removeFalsyAttributes(cellBorder),};return isObjectEmptyRecursive(border)?null:border;}
computeCellStyle(position){const cell=this.getters.getCell(position);const cfStyle=this.getters.getCellConditionalFormatStyle(position);const tableStyle=this.getters.getCellTableStyle(position);const dataValidationStyle=this.getters.getDataValidationCellStyle(position);const computedStyle={...removeFalsyAttributes(tableStyle),...removeFalsyAttributes(dataValidationStyle),...removeFalsyAttributes(cell?.style),...removeFalsyAttributes(cfStyle),};const evaluatedCell=this.getters.getEvaluatedCell(position);if(evaluatedCell.link&&!computedStyle.textColor){computedStyle.textColor=LINK_COLOR;}
return computedStyle;}}
class CheckboxTogglePlugin extends UIPlugin{static getters=["hasBooleanValidationInZones"];handle(cmd){switch(cmd.type){case"TOGGLE_CHECKBOX":this.toggleCheckbox(cmd.sheetId,cmd.target);break;}}
hasBooleanValidationInZones(zones){const sheetId=this.getters.getActiveSheetId();for(const zone of zones){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){if(this.getters.isCellValidCheckbox({col,row,sheetId})){return true;}}}}
return false;}
toggleCheckbox(sheetId,target){for(const zone of target){for(let col=zone.left;col<=zone.right;col++){for(let row=zone.top;row<=zone.bottom;row++){const position={col,row,sheetId};if(this.getters.isCellValidCheckbox(position)){const content=this.getters.getEvaluatedCell(position).value?"FALSE":"TRUE";this.dispatch("UPDATE_CELL",{...position,content,});}}}}}}
class DataValidationInsertionPlugin extends UIPlugin{handle(cmd){switch(cmd.type){case"ADD_DATA_VALIDATION_RULE":if(cmd.rule.criterion.type==="isBoolean"){const ranges=cmd.ranges.map((range)=>this.getters.getRangeFromRangeData(range));for(const position of getCellPositionsInRanges(ranges)){const cell=this.getters.getCell(position);const evaluatedCell=this.getters.getEvaluatedCell(position);if(!cell?.content){this.dispatch("UPDATE_CELL",{...position,content:"FALSE"});}
else if(cell?.content&&evaluatedCell.type===CellValueType.empty){let value;if(cell.content.startsWith("=")){const result=this.getters.evaluateFormula(position.sheetId,cell.content);value=(isMatrix(result)?result[0][0]:result)?.toString();}
else{value=cell.content;}
if(!value||!isBoolean(value)){this.dispatch("UPDATE_CELL",{...position,content:"FALSE"});}}
else if(evaluatedCell.type!==CellValueType.boolean){this.dispatch("UPDATE_CELL",{...position,content:"FALSE"});}}}}}}
const genericRepeatsTransforms=[repeatSheetDependantCommand,repeatTargetDependantCommand,repeatPositionDependantCommand,repeatRangeDependantCommand,];function repeatSheetDependantCommand(getters,command){if(!("sheetId"in command))
return command;return{...deepCopy(command),sheetId:getters.getActiveSheetId()};}
function repeatTargetDependantCommand(getters,command){if(!("target"in command)||!Array.isArray(command.target))
return command;return{...deepCopy(command),target:getters.getSelectedZones(),};}
function repeatZoneDependantCommand(getters,command){if(!("zone"in command))
return command;return{...deepCopy(command),zone:getters.getSelectedZone(),};}
function repeatPositionDependantCommand(getters,command){if(!("row"in command)||!("col"in command))
return command;const{col,row}=getters.getActivePosition();return{...deepCopy(command),col,row};}
function repeatRangeDependantCommand(getters,command){if(!("ranges"in command))
return command;return{...deepCopy(command),ranges:getters.getSelectedZones().map((zone)=>getters.getRangeDataFromZone(getters.getActiveSheetId(),zone)),};}
const uuidGenerator=new UuidGenerator();function repeatCreateChartCommand(getters,cmd){return{...repeatSheetDependantCommand(getters,cmd),figureId:uuidGenerator.smallUuid(),};}
function repeatCreateImageCommand(getters,cmd){return{...repeatSheetDependantCommand(getters,cmd),figureId:uuidGenerator.smallUuid(),};}
function repeatCreateFigureCommand(getters,cmd){const newCmd=repeatPositionDependantCommand(getters,repeatSheetDependantCommand(getters,cmd));newCmd.figureId=uuidGenerator.smallUuid();return newCmd;}
function repeatCreateSheetCommand(getters,cmd){const newCmd=deepCopy(cmd);newCmd.sheetId=uuidGenerator.smallUuid();const sheetName=cmd.name||getters.getSheet(getters.getActiveSheetId()).name;const namePrefix=sheetName.match(/(.+?)\d*$/)?.[1]||sheetName;newCmd.name=getters.getNextSheetName(namePrefix);return newCmd;}
function repeatAddColumnsRowsCommand(getters,cmd){const currentPosition=getters.getActivePosition();return{...repeatSheetDependantCommand(getters,cmd),base:cmd.dimension==="COL"?currentPosition.col:currentPosition.row,};}
function repeatHeaderElementCommand(getters,cmd){const currentSelection=getters.getSelectedZone();return{...repeatSheetDependantCommand(getters,cmd),elements:cmd.dimension==="COL"?range(currentSelection.left,currentSelection.right+1):range(currentSelection.top,currentSelection.bottom+1),};}
function repeatInsertOrDeleteCellCommand(getters,cmd){const currentSelection=getters.getSelectedZone();return{...deepCopy(cmd),zone:currentSelection,};}
function repeatAutoResizeCommand(getters,cmd){const newCmd=deepCopy(cmd);const currentSelection=getters.getSelectedZone();const{top,bottom,left,right}=currentSelection;if("cols"in newCmd){newCmd.cols=range(left,right+1);}
else if("rows"in newCmd){newCmd.rows=range(top,bottom+1);}
return newCmd;}
function repeatSortCellsCommand(getters,cmd){const currentSelection=getters.getSelectedZone();return{...repeatSheetDependantCommand(getters,cmd),col:currentSelection.left,row:currentSelection.top,zone:currentSelection,};}
function repeatPasteCommand(getters,cmd){return{type:"REPEAT_PASTE",pasteOption:deepCopy(cmd.pasteOption),target:getters.getSelectedZones(),};}
function repeatGroupHeadersCommand(getters,cmd){const currentSelection=getters.getSelectedZone();return{...repeatSheetDependantCommand(getters,cmd),start:cmd.dimension==="COL"?currentSelection.left:currentSelection.top,end:cmd.dimension==="COL"?currentSelection.right:currentSelection.bottom,};}
const repeatCommandTransformRegistry=new Registry();repeatCommandTransformRegistry.add("UPDATE_CELL",genericRepeat);repeatCommandTransformRegistry.add("CLEAR_CELL",genericRepeat);repeatCommandTransformRegistry.add("CLEAR_CELLS",genericRepeat);repeatCommandTransformRegistry.add("DELETE_CONTENT",genericRepeat);repeatCommandTransformRegistry.add("ADD_MERGE",genericRepeat);repeatCommandTransformRegistry.add("REMOVE_MERGE",genericRepeat);repeatCommandTransformRegistry.add("SET_FORMATTING",genericRepeat);repeatCommandTransformRegistry.add("CLEAR_FORMATTING",genericRepeat);repeatCommandTransformRegistry.add("SET_BORDER",genericRepeat);repeatCommandTransformRegistry.add("CREATE_TABLE",genericRepeat);repeatCommandTransformRegistry.add("REMOVE_TABLE",genericRepeat);repeatCommandTransformRegistry.add("HIDE_SHEET",genericRepeat);repeatCommandTransformRegistry.add("ADD_COLUMNS_ROWS",repeatAddColumnsRowsCommand);repeatCommandTransformRegistry.add("REMOVE_COLUMNS_ROWS",repeatHeaderElementCommand);repeatCommandTransformRegistry.add("HIDE_COLUMNS_ROWS",repeatHeaderElementCommand);repeatCommandTransformRegistry.add("RESIZE_COLUMNS_ROWS",repeatHeaderElementCommand);repeatCommandTransformRegistry.add("CREATE_SHEET",repeatCreateSheetCommand);repeatCommandTransformRegistry.add("CREATE_FIGURE",repeatCreateFigureCommand);repeatCommandTransformRegistry.add("CREATE_CHART",repeatCreateChartCommand);repeatCommandTransformRegistry.add("CREATE_IMAGE",repeatCreateImageCommand);repeatCommandTransformRegistry.add("GROUP_HEADERS",repeatGroupHeadersCommand);repeatCommandTransformRegistry.add("UNGROUP_HEADERS",repeatGroupHeadersCommand);repeatCommandTransformRegistry.add("UNFOLD_HEADER_GROUPS_IN_ZONE",repeatZoneDependantCommand);repeatCommandTransformRegistry.add("FOLD_HEADER_GROUPS_IN_ZONE",repeatZoneDependantCommand);const repeatLocalCommandTransformRegistry=new Registry();repeatLocalCommandTransformRegistry.add("PASTE",repeatPasteCommand);repeatLocalCommandTransformRegistry.add("INSERT_CELL",repeatInsertOrDeleteCellCommand);repeatLocalCommandTransformRegistry.add("DELETE_CELL",repeatInsertOrDeleteCellCommand);repeatLocalCommandTransformRegistry.add("AUTORESIZE_COLUMNS",repeatAutoResizeCommand);repeatLocalCommandTransformRegistry.add("AUTORESIZE_ROWS",repeatAutoResizeCommand);repeatLocalCommandTransformRegistry.add("SORT_CELLS",repeatSortCellsCommand);repeatLocalCommandTransformRegistry.add("SUM_SELECTION",genericRepeat);repeatLocalCommandTransformRegistry.add("SET_DECIMAL",genericRepeat);repeatLocalCommandTransformRegistry.add("DELETE_UNFILTERED_CONTENT",genericRepeat);function genericRepeat(getters,command){let transformedCommand=deepCopy(command);for(const repeatTransform of genericRepeatsTransforms){transformedCommand=repeatTransform(getters,transformedCommand);}
return transformedCommand;}
function repeatCoreCommand(getters,command){if(!command){return undefined;}
const isRepeatable=repeatCommandTransformRegistry.contains(command.type);if(!isRepeatable){return undefined;}
const transform=repeatCommandTransformRegistry.get(command.type);return transform(getters,command);}
function repeatLocalCommand(getters,command,childCommands){const isRepeatable=repeatLocalCommandTransformRegistry.contains(command.type);if(!isRepeatable){return undefined;}
const repeatTransform=repeatLocalCommandTransformRegistry.get(command.type);return repeatTransform(getters,command,childCommands);}
function canRepeatRevision(revision){if(!revision||!revision.rootCommand||typeof revision.rootCommand!=="object"){return false;}
if(isCoreCommand(revision.rootCommand)){return repeatCommandTransformRegistry.contains(revision.rootCommand.type);}
return repeatLocalCommandTransformRegistry.contains(revision.rootCommand.type);}
function repeatRevision(revision,getters){if(!revision.rootCommand||typeof revision.rootCommand!=="object"){return undefined;}
if(isCoreCommand(revision.rootCommand)){return repeatCoreCommand(getters,revision.rootCommand);}
return repeatLocalCommand(getters,revision.rootCommand,revision.commands);}
class HistoryPlugin extends UIPlugin{static getters=["canUndo","canRedo"];undoStack=[];redoStack=[];session;constructor(config){super(config);this.session=config.session;this.session.on("new-local-state-update",this,this.onNewLocalStateUpdate);this.session.on("snapshot",this,()=>{this.undoStack=[];this.redoStack=[];});}
allowDispatch(cmd){switch(cmd.type){case"REQUEST_UNDO":if(!this.canUndo()){return"EmptyUndoStack";}
break;case"REQUEST_REDO":if(!this.canRedo()){return"EmptyRedoStack";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"REQUEST_UNDO":case"REQUEST_REDO":this.requestHistoryChange(cmd.type==="REQUEST_UNDO"?"UNDO":"REDO");}}
finalize(){}
requestHistoryChange(type){const id=type==="UNDO"?this.undoStack.pop():this.redoStack.pop();if(!id){const lastNonRedoRevision=this.getPossibleRevisionToRepeat();if(!lastNonRedoRevision){return;}
const repeatedCommands=repeatRevision(lastNonRedoRevision,this.getters);if(!repeatedCommands){return;}
if(!Array.isArray(repeatedCommands)){this.dispatch(repeatedCommands.type,repeatedCommands);return;}
for(const command of repeatedCommands){this.dispatch(command.type,command);}
return;}
if(type==="UNDO"){this.session.undo(id);this.redoStack.push(id);}
else{this.session.redo(id);this.undoStack.push(id);}}
canUndo(){return this.undoStack.length>0;}
canRedo(){if(this.redoStack.length>0)
return true;const lastNonRedoRevision=this.getPossibleRevisionToRepeat();return canRepeatRevision(lastNonRedoRevision);}
onNewLocalStateUpdate({id}){this.undoStack.push(id);this.redoStack=[];if(this.undoStack.length>MAX_HISTORY_STEPS){this.undoStack.shift();}}
getPossibleRevisionToRepeat(){return this.session.getLastLocalNonEmptyRevision();}}
class PivotPresenceTracker{trackedValues=new Set();domainToArray(domain){return domain.flatMap((node)=>[node.field,toString(node.value)]);}
isValuePresent(measure,domain){const key=JSON.stringify({measure,domain:this.domainToArray(domain)});return this.trackedValues.has(key);}
isHeaderPresent(domain){const key=JSON.stringify({domain:this.domainToArray(domain)});return this.trackedValues.has(key);}
trackValue(measure,domain){const key=JSON.stringify({measure,domain:this.domainToArray(domain)});this.trackedValues.add(key);}
trackHeader(domain){const key=JSON.stringify({domain:this.domainToArray(domain)});this.trackedValues.add(key);}}
class PivotPresencePlugin extends UIPlugin{static getters=["getPivotPresenceTracker"];trackPresencePivotId;tracker;handle(cmd){switch(cmd.type){case"PIVOT_START_PRESENCE_TRACKING":this.tracker=new PivotPresenceTracker();this.trackPresencePivotId=cmd.pivotId;break;case"PIVOT_STOP_PRESENCE_TRACKING":this.trackPresencePivotId=undefined;break;}}
getPivotPresenceTracker(pivotId){if(this.trackPresencePivotId!==pivotId){return undefined;}
if(!this.tracker){throw new Error("Tracker not initialized");}
return this.tracker;}}
class SplitToColumnsPlugin extends UIPlugin{static getters=["getAutomaticSeparator"];allowDispatch(cmd){switch(cmd.type){case"SPLIT_TEXT_INTO_COLUMNS":return this.chainValidations(this.batchValidations(this.checkSingleColSelected,this.checkNonEmptySelector),this.batchValidations(this.checkNotOverwritingContent,this.checkSeparatorInSelection))(cmd);}
return"Success";}
handle(cmd){switch(cmd.type){case"SPLIT_TEXT_INTO_COLUMNS":this.splitIntoColumns(cmd);break;}}
getAutomaticSeparator(){const cells=this.getters.getSelectedCells();for(const cell of cells){if(cell.value&&cell.type===CellValueType.text){const separator=this.getAutoSeparatorForString(cell.value);if(separator){return separator;}}}
return" ";}
getAutoSeparatorForString(str){const separators=[NEWLINE,";",","," ","."];for(const separator of separators){if(str.includes(separator)){return separator;}}
return;}
splitIntoColumns({separator,addNewColumns}){const selection=this.getters.getSelectedZone();const sheetId=this.getters.getActiveSheetId();const splitted=this.getSplittedCols(selection,separator);if(addNewColumns){this.addColsToAvoidCollisions(selection,splitted);}
this.removeMergesInSplitZone(selection,splitted);this.addColumnsToNotOverflowSheet(selection,splitted);for(let i=0;i<splitted.length;i++){const row=selection.top+i;const splittedContent=splitted[i];const col=selection.left;const mainCell=this.getters.getCell({sheetId,col,row});if(splittedContent.length===1&&splittedContent[0]===mainCell?.content){continue;}
for(const[index,content]of splittedContent.entries()){this.dispatch("UPDATE_CELL",{sheetId,col:col+index,row,content:canonicalizeNumberContent(content,this.getters.getLocale()),format:"",style:mainCell?.style||null,});}}}
getSplittedCols(selection,separator){if(!separator){throw new Error("Separator cannot be empty");}
const sheetId=this.getters.getActiveSheetId();const splitted=[];for(const row of range(selection.top,selection.bottom+1)){const text=this.getters.getEvaluatedCell({sheetId,col:selection.left,row,}).formattedValue;splitted.push(this.splitAndRemoveTrailingEmpty(text,separator));}
return splitted;}
splitAndRemoveTrailingEmpty(string,separator){const splitted=string.split(separator);while(splitted.length>1&&splitted[splitted.length-1]===""){splitted.pop();}
return splitted;}
willSplittedColsOverwriteContent(selection,splittedCols){const sheetId=this.getters.getActiveSheetId();for(const row of range(selection.top,selection.bottom+1)){const splittedText=splittedCols[row-selection.top];for(let i=1;i<splittedText.length;i++){const cell=this.getters.getCell({sheetId,col:selection.left+i,row});if(cell&&cell.content){return true;}}}
return false;}
removeMergesInSplitZone(selection,splittedCols){const sheetId=this.getters.getActiveSheetId();const colsInSplitZone=Math.max(...splittedCols.map((s)=>s.length));const splitZone={...selection,right:selection.left+colsInSplitZone-1};const merges=this.getters.getMergesInZone(sheetId,splitZone);this.dispatch("REMOVE_MERGE",{sheetId,target:merges});}
addColsToAvoidCollisions(selection,splittedCols){const sheetId=this.getters.getActiveSheetId();let colsToAdd=0;for(const row of range(selection.top,selection.bottom+1)){const cellPosition={sheetId,col:selection.left,row};const splittedText=splittedCols[row-selection.top];const colsToAddInRow=this.getColsToAddToAvoidCollision(cellPosition,splittedText);colsToAdd=Math.max(colsToAdd,colsToAddInRow);}
if(colsToAdd){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:selection.left,sheetId,sheetName:this.getters.getSheetName(sheetId),quantity:colsToAdd,position:"after",});}}
getColsToAddToAvoidCollision(cellPosition,splittedText){const maxColumnsToSpread=splittedText.length;for(let i=1;i<maxColumnsToSpread;i++){const col=cellPosition.col+i;const cell=this.getters.getCell({...cellPosition,col});if(cell&&cell.content){return maxColumnsToSpread-i;}}
return 0;}
addColumnsToNotOverflowSheet(selection,splittedCols){const sheetId=this.getters.getActiveSheetId();const maxColumnsToSpread=Math.max(...splittedCols.map((s)=>s.length-1));const maxColIndex=this.getters.getNumberCols(sheetId)-1;if(selection.left+maxColumnsToSpread>maxColIndex){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:maxColIndex,sheetId,sheetName:this.getters.getSheetName(sheetId),quantity:selection.left+maxColumnsToSpread-maxColIndex,position:"after",});}}
checkSingleColSelected(){if(!this.getters.isSingleColSelected()){return"MoreThanOneColumnSelected";}
return"Success";}
checkNonEmptySelector(cmd){if(cmd.separator===""){return"EmptySplitSeparator";}
return"Success";}
checkNotOverwritingContent(cmd){if(cmd.addNewColumns||cmd.force){return"Success";}
const selection=this.getters.getSelectedZones()[0];const splitted=this.getSplittedCols(selection,cmd.separator);if(this.willSplittedColsOverwriteContent(selection,splitted)){return"SplitWillOverwriteContent";}
return"Success";}
checkSeparatorInSelection({separator}){const cells=this.getters.getSelectedCells();for(const cell of cells){if(cell.formattedValue.includes(separator)){return"Success";}}
return"NoSplitSeparatorInSelection";}}
class TableAutofillPlugin extends UIPlugin{handle(cmd){switch(cmd.type){case"AUTOFILL_TABLE_COLUMN":const table=this.getters.getCoreTable(cmd);const cell=this.getters.getCell(cmd);if(!table?.config.automaticAutofill||table.type==="dynamic"||!cell?.isFormula){return;}
const{col,row}=cmd;const tableContentZone=getTableContentZone(table.range.zone,table.config);if(tableContentZone&&isInside(col,row,tableContentZone)){const top=cmd.autofillRowStart??tableContentZone.top;const bottom=cmd.autofillRowEnd??tableContentZone.bottom;const autofillZone={...tableContentZone,top,bottom};this.autofillTableZone(cmd,autofillZone);}
break;}}
autofillTableZone(autofillSource,zone){if(zone.top===zone.bottom){return;}
const{col,row,sheetId}=autofillSource;for(let r=zone.top;r<=zone.bottom;r++){if(r===row){continue;}
if(this.getters.getEvaluatedCell({col,row:r,sheetId}).type!==CellValueType.empty){return;}}
const oldSelection={zone:this.getters.getSelectedZone(),cell:this.getters.getActivePosition(),};this.selection.selectCell(col,row);this.dispatch("AUTOFILL_SELECT",{col,row:zone.bottom});this.dispatch("AUTOFILL");this.selection.selectCell(col,row);this.dispatch("AUTOFILL_SELECT",{col,row:zone.top});this.dispatch("AUTOFILL");this.selection.selectZone(oldSelection);}}
class TableResizeUI extends UIPlugin{allowDispatch(cmd){switch(cmd.type){case"RESIZE_TABLE":const table=this.getters.getCoreTableMatchingTopLeft(cmd.sheetId,cmd.zone);if(!table){return"TableNotFound";}
const oldTableZone=table.range.zone;const newTableZone=this.getters.getRangeFromRangeData(cmd.newTableRange).zone;if(newTableZone.top!==oldTableZone.top||newTableZone.left!==oldTableZone.left){return"InvalidTableResize";}
return this.canDispatch("UPDATE_TABLE",{...cmd}).reasons;}
return"Success";}
handle(cmd){switch(cmd.type){case"RESIZE_TABLE":{const table=this.getters.getCoreTableMatchingTopLeft(cmd.sheetId,cmd.zone);this.dispatch("UPDATE_TABLE",{...cmd});if(!table)
return;const newTableZone=this.getters.getRangeFromRangeData(cmd.newTableRange).zone;this.selection.selectCell(newTableZone.right,newTableZone.bottom);if(!table.config.automaticAutofill)
return;const oldTableZone=table.range.zone;if(newTableZone.bottom>=oldTableZone.bottom){for(let col=newTableZone.left;col<=newTableZone.right;col++){const autofillSource={col,row:oldTableZone.bottom,sheetId:cmd.sheetId};if(this.getters.getCell(autofillSource)?.content.startsWith("=")){this.dispatch("AUTOFILL_TABLE_COLUMN",{...autofillSource,autofillRowStart:oldTableZone.bottom,autofillRowEnd:newTableZone.bottom,});}}
break;}}}}}
const MAX_FILE_SIZE=5*1024*1024;class ClipboardPlugin extends UIPlugin{static layers=["Clipboard"];static getters=["getClipboardTextAndImageContent","getClipboardId","getClipboardTextContent","isCutOperation",];status="invisible";originSheetId;copiedData;_isCutOperation=false;clipboardId=new UuidGenerator().uuidv4();fileStore;uuidGenerator;constructor(config){super(config);this.fileStore=config.external.fileStore;this.uuidGenerator=new UuidGenerator();}
allowDispatch(cmd){switch(cmd.type){case"CUT":const zones=this.getters.getSelectedZones();return this.isCutAllowedOn(zones);case"PASTE_FROM_OS_CLIPBOARD":{const copiedData=this.convertTextToClipboardData(cmd.clipboardContent.text??"");const pasteOption=cmd.pasteOption;return this.isPasteAllowed(cmd.target,copiedData,{pasteOption,isCutOperation:false});}
case"PASTE":{if(!this.copiedData){return"EmptyClipboard";}
const pasteOption=cmd.pasteOption;return this.isPasteAllowed(cmd.target,this.copiedData,{pasteOption:pasteOption,isCutOperation:this._isCutOperation,});}
case"COPY_PASTE_CELLS_ABOVE":{const zones=this.getters.getSelectedZones();if(zones.length>1||(zones[0].top===0&&zones[0].bottom===0)){return"InvalidCopyPasteSelection";}
break;}
case"COPY_PASTE_CELLS_ON_LEFT":{const zones=this.getters.getSelectedZones();if(zones.length>1||(zones[0].left===0&&zones[0].right===0)){return"InvalidCopyPasteSelection";}
break;}
case"INSERT_CELL":{const{cut,paste}=this.getInsertCellsTargets(cmd.zone,cmd.shiftDimension);const copiedData=this.copy(cut);return this.isPasteAllowed(paste,copiedData,{isCutOperation:true});}
case"DELETE_CELL":{const{cut,paste}=this.getDeleteCellsTargets(cmd.zone,cmd.shiftDimension);const copiedData=this.copy(cut);return this.isPasteAllowed(paste,copiedData,{isCutOperation:true});}}
return"Success";}
handle(cmd){switch(cmd.type){case"COPY":case"CUT":const zones=this.getters.getSelectedZones();this.status="visible";this.originSheetId=this.getters.getActiveSheetId();this._isCutOperation=cmd.type==="CUT";this.copiedData=this.copy(zones);break;case"PASTE_FROM_OS_CLIPBOARD":{this._isCutOperation=false;const htmlData=cmd.clipboardContent.data;if(cmd.clipboardContent.imageData){const sheetId=this.getters.getActiveSheetId();const figureId=this.uuidGenerator.uuidv4();const definition=cmd.clipboardContent.imageData;const size=getMaxFigureSize(this.getters,definition.size);this.dispatch("CREATE_IMAGE",{definition,size,col:cmd.target[0].left,row:cmd.target[0].top,offset:{x:0,y:0},sheetId,figureId,});}
if(htmlData){this.copiedData=htmlData;}
else{this.copiedData=this.convertTextToClipboardData(cmd.clipboardContent.text??"");}
const pasteOption=cmd.pasteOption;this.paste(cmd.target,this.copiedData,{pasteOption,selectTarget:true,isCutOperation:false,});this.status="invisible";this.copiedData=undefined;break;}
case"PASTE":{const pasteOption=cmd.pasteOption;this.paste(cmd.target,this.copiedData,{pasteOption,selectTarget:true,isCutOperation:this._isCutOperation,});this.status="invisible";if(this._isCutOperation){this.copiedData=undefined;this._isCutOperation=false;}
break;}
case"COPY_PASTE_CELLS_ABOVE":{const zone=this.getters.getSelectedZone();const multipleRowsInSelection=zone.top!==zone.bottom;const copyTarget={...zone,bottom:multipleRowsInSelection?zone.top:zone.top-1,top:multipleRowsInSelection?zone.top:zone.top-1,};this.originSheetId=this.getters.getActiveSheetId();const copiedData=this.copy([copyTarget]);this.paste([zone],copiedData,{isCutOperation:false,selectTarget:true,});}
break;case"COPY_PASTE_CELLS_ON_LEFT":{const zone=this.getters.getSelectedZone();const multipleColsInSelection=zone.left!==zone.right;const copyTarget={...zone,right:multipleColsInSelection?zone.left:zone.left-1,left:multipleColsInSelection?zone.left:zone.left-1,};this.originSheetId=this.getters.getActiveSheetId();const copiedData=this.copy([copyTarget]);this.paste([zone],copiedData,{isCutOperation:false,selectTarget:true,});}
break;case"CLEAN_CLIPBOARD_HIGHLIGHT":this.status="invisible";break;case"DELETE_CELL":{const{cut,paste}=this.getDeleteCellsTargets(cmd.zone,cmd.shiftDimension);if(!isZoneValid(cut[0])){this.dispatch("CLEAR_CELLS",{target:[cmd.zone],sheetId:this.getters.getActiveSheetId(),});break;}
const copiedData=this.copy(cut);this.paste(paste,copiedData,{isCutOperation:true});break;}
case"INSERT_CELL":{const{cut,paste}=this.getInsertCellsTargets(cmd.zone,cmd.shiftDimension);const copiedData=this.copy(cut);this.paste(paste,copiedData,{isCutOperation:true});break;}
case"ADD_COLUMNS_ROWS":{this.status="invisible";if(!this._isCutOperation||cmd.sheetId!==this.copiedData?.sheetId){return;}
const isClipboardDirty=this.isColRowDirtyingClipboard(cmd.position==="before"?cmd.base:cmd.base+1,cmd.dimension);if(isClipboardDirty){this.copiedData=undefined;}
break;}
case"REMOVE_COLUMNS_ROWS":{this.status="invisible";if(!this._isCutOperation||cmd.sheetId!==this.copiedData?.sheetId){return;}
for(const el of cmd.elements){const isClipboardDirty=this.isColRowDirtyingClipboard(el,cmd.dimension);if(isClipboardDirty){this.copiedData=undefined;break;}}
this.status="invisible";break;}
case"REPEAT_PASTE":{this.paste(cmd.target,this.copiedData,{isCutOperation:false,pasteOption:cmd.pasteOption,selectTarget:true,});break;}
case"DELETE_SHEET":if(!this._isCutOperation){return;}
if(this.originSheetId===cmd.sheetId){this.copiedData=undefined;this.status="invisible";}
break;default:if(isCoreCommand(cmd)){this.status="invisible";}}}
convertTextToClipboardData(clipboardData){const handlers=this.selectClipboardHandlers({figureId:true}).concat(this.selectClipboardHandlers({}));const copiedData={};for(const{handlerName,handler}of handlers){const data=handler.convertTextToClipboardData(clipboardData);copiedData[handlerName]=data;const minimalKeys=["sheetId","cells","zones","figureId"];for(const key of minimalKeys){if(data&&key in data){copiedData[key]=data[key];}}}
return copiedData;}
selectClipboardHandlers(data){const handlersRegistry="figureId"in data?clipboardHandlersRegistries.figureHandlers:clipboardHandlersRegistries.cellHandlers;return handlersRegistry.getKeys().map((handlerName)=>{const Handler=handlersRegistry.get(handlerName);return{handlerName,handler:new Handler(this.getters,this.dispatch)};});}
isCutAllowedOn(zones){const clipboardData=this.getClipboardData(zones);for(const{handler}of this.selectClipboardHandlers(clipboardData)){const result=handler.isCutAllowed(clipboardData);if(result!=="Success"){return result;}}
return"Success";}
isPasteAllowed(target,copiedData,options){for(const{handler}of this.selectClipboardHandlers(copiedData)){const result=handler.isPasteAllowed(this.getters.getActiveSheetId(),target,copiedData,{...options,});if(result!=="Success"){return result;}}
return"Success";}
isColRowDirtyingClipboard(position,dimension){if(!this.copiedData||!this.copiedData.zones){return false;}
const{zones}=this.copiedData;for(const zone of zones){if(dimension==="COL"&&position<=zone.right){return true;}
if(dimension==="ROW"&&position<=zone.bottom){return true;}}
return false;}
copy(zones){const copiedData={};const clipboardData=this.getClipboardData(zones);for(const{handlerName,handler}of this.selectClipboardHandlers(clipboardData)){const data=handler.copy(clipboardData,this._isCutOperation);copiedData[handlerName]=data;const minimalKeys=["sheetId","cells","zones","figureId"];for(const key of minimalKeys){if(data&&key in data){copiedData[key]=data[key];}}}
return copiedData;}
paste(zones,copiedData,options){if(!copiedData){return;}
const sheetId=this.getters.getActiveSheetId();const handlers=this.selectClipboardHandlers(copiedData);const{target,zone,selectedZones}=getPasteTargetFromHandlers(sheetId,zones,copiedData,handlers,options);if(zone!==undefined){this.addMissingDimensions(sheetId,zone.right-zone.left+1,zone.bottom-zone.top+1,zone.left,zone.top);}
applyClipboardHandlersPaste(handlers,copiedData,target,options);if(!options?.selectTarget){return;}
selectPastedZone(this.selection,zones,selectedZones);}
addMissingDimensions(sheetId,width,height,col,row){const missingRows=height+row-this.getters.getNumberRows(sheetId);if(missingRows>0){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"ROW",base:this.getters.getNumberRows(sheetId)-1,sheetId,sheetName:this.getters.getSheetName(sheetId),quantity:missingRows,position:"after",});}
const missingCols=width+col-this.getters.getNumberCols(sheetId);if(missingCols>0){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:this.getters.getNumberCols(sheetId)-1,sheetId,sheetName:this.getters.getSheetName(sheetId),quantity:missingCols,position:"after",});}}
getClipboardTextContent(){return this.getPlainTextContent();}
getClipboardId(){return this.clipboardId;}
async getClipboardTextAndImageContent(){const file=await this.getImageContent();const mime=file?.type;const content={[ClipboardMIMEType.PlainText]:this.getPlainTextContent(),[ClipboardMIMEType.Html]:await this.getHTMLContent(),};if(mime&&file){content[mime]=file;}
return content;}
getSheetData(){const data={version:getCurrentVersion(),clipboardId:this.clipboardId,};if(this.copiedData&&"figureId"in this.copiedData){return data;}
return{...data,...this.copiedData,};}
getPlainTextContent(){if(!this.copiedData?.cells){return"\t";}
return(this.copiedData.cells.map((cells)=>{return cells.map((c)=>this.getters.shouldShowFormulas()&&c?.tokens?.length?c?.content||"":c.evaluatedCell?.formattedValue||"").join("\t");}).join("\n")||"\t");}
async getHTMLContent(){let innerHTML="";const cells=this.copiedData?.cells;if(!cells){if(this.copiedData?.figureId){const figureId=this.copiedData.figureId;const figureSheetId=this.getters.getFigureSheetId(figureId);const figure=this.getters.getFigure(figureSheetId,figureId);if(figure.tag==="image"){innerHTML=await this.craftImageHTML(figureId);}
else{innerHTML="\t";}}
else{innerHTML="\t";}}
else if(cells.length===1&&cells[0].length===1){innerHTML=`${this.getters.getCellText(cells[0][0].position)}`;}
else if(!cells[0][0]){return"";}
else{let htmlTable=`<table border="1" style="border-collapse:collapse">`;for(const row of cells){htmlTable+="<tr>";for(const cell of row){if(!cell){continue;}
const cssStyle=cssPropertiesToCss(cellStyleToCss(this.getters.getCellComputedStyle(cell.position)));const cellText=this.getters.getCellText(cell.position);htmlTable+=`<td style="${cssStyle}">`+xmlEscape(cellText)+"</td>";}
htmlTable+="</tr>";}
htmlTable+="</table>";innerHTML=htmlTable;}
const serializedData=JSON.stringify(this.getSheetData());return`<div data-osheet-clipboard='${xmlEscape(serializedData)}'>${innerHTML}</div>`;}
readFileAsDataURL(blob){return new Promise((resolve)=>{const reader=new FileReader();reader.onload=()=>resolve(reader.result);reader.readAsDataURL(blob);});}
async craftImageHTML(figureId){if(!this.fileStore){return"\t";}
const imageUrl=this.getters.getImage(figureId).path;const file=(await this.fileStore?.getFile(imageUrl))||null;if(file){const imageUrl=(await this.readFileAsDataURL(file));return`<img src="${xmlEscape(imageUrl)}" />`;}
else{return"\t";}}
async getImageContent(){const figureId=this.copiedData?.figureId;if(!figureId){return;}
const figureSheetId=this.getters.getFigureSheetId(figureId);const figure=this.getters.getFigure(figureSheetId,figureId);let file;if(figure.tag==="image"){if(!this.fileStore){return;}
const imageUrl=this.getters.getImage(figureId).path;file=await this.fileStore?.getFile(imageUrl);if(file.type!=="image/png"){if(file.size>MAX_FILE_SIZE){this.ui.notifyUI({text:_t("The file you are trying to copy is too large (>%sMB).\nIt will not be added to your OS clipboard.\nYou can download it directly instead.",Math.round(MAX_FILE_SIZE/(1024*1024))),sticky:false,type:"warning",});return undefined;}
file=await convertImageToPng(imageUrl);}}
if(!file){return undefined;}
else{return file instanceof File?file:new File([file],"image.png",{type:"image/png"});}}
isCutOperation(){return this._isCutOperation??false;}
getDeleteCellsTargets(zone,dimension){const sheetId=this.getters.getActiveSheetId();let cut;if(dimension==="COL"){cut={...zone,left:zone.right+1,right:this.getters.getNumberCols(sheetId)-1,};}
else{cut={...zone,top:zone.bottom+1,bottom:this.getters.getNumberRows(sheetId)-1,};}
return{cut:[cut],paste:[zone]};}
getInsertCellsTargets(zone,dimension){const sheetId=this.getters.getActiveSheetId();let cut;let paste;if(dimension==="COL"){cut={...zone,right:this.getters.getNumberCols(sheetId)-1,};paste={...zone,left:zone.right+1,right:zone.right+1,};}
else{cut={...zone,bottom:this.getters.getNumberRows(sheetId)-1,};paste={...zone,top:zone.bottom+1,bottom:this.getters.getNumberRows(sheetId)-1};}
return{cut:[cut],paste:[paste]};}
getClipboardData(zones){const sheetId=this.getters.getActiveSheetId();const selectedFigureId=this.getters.getSelectedFigureId();if(selectedFigureId){return{figureId:selectedFigureId,sheetId};}
const data=getClipboardDataPositions(sheetId,zones);if(!this._isCutOperation){data.rowsIndexes=data.rowsIndexes.filter((r)=>!this.getters.isRowFiltered(sheetId,r));}
return data;}
drawLayer(renderingContext){if(this.status!=="visible"||!this.copiedData){return;}
const{sheetId,zones}=this.copiedData;if(sheetId!==this.getters.getActiveSheetId()||!zones||!zones.length){return;}
const{ctx,thinLineWidth}=renderingContext;ctx.setLineDash([8,5]);ctx.strokeStyle=SELECTION_BORDER_COLOR;ctx.lineWidth=3.3*thinLineWidth;for(const zone of zones){const{x,y,width,height}=this.getters.getVisibleRect(zone);if(width>0&&height>0){ctx.strokeRect(x,y,width,height);}}}}
const EMPTY_CRITERION={filterType:"criterion",type:"none",values:[]};class FilterEvaluationPlugin extends UIPlugin{static getters=["getFilterValue","getFilterHiddenValues","getFilterCriterionValue","getFirstTableInSelection","isRowFiltered","isFilterActive",];filterValues={};hiddenRows={};isEvaluationDirty=false;allowDispatch(cmd){switch(cmd.type){case"UPDATE_FILTER":if(!this.getters.getFilterId(cmd)){return"FilterNotFound";}
break;}
return"Success";}
handle(cmd){switch(cmd.type){case"UNDO":case"REDO":case"UPDATE_CELL":case"EVALUATE_CELLS":case"ACTIVATE_SHEET":case"REMOVE_TABLE":case"ADD_COLUMNS_ROWS":case"REMOVE_COLUMNS_ROWS":case"UPDATE_TABLE":this.isEvaluationDirty=true;break;case"START":for(const sheetId of this.getters.getSheetIds()){this.filterValues[sheetId]={};}
break;case"CREATE_SHEET":this.filterValues[cmd.sheetId]={};break;case"HIDE_COLUMNS_ROWS":case"UNHIDE_COLUMNS_ROWS":case"GROUP_HEADERS":case"UNGROUP_HEADERS":case"FOLD_HEADER_GROUP":case"UNFOLD_HEADER_GROUP":case"FOLD_ALL_HEADER_GROUPS":case"UNFOLD_ALL_HEADER_GROUPS":case"FOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_HEADER_GROUPS_IN_ZONE":this.updateHiddenRows(cmd.sheetId);break;case"UPDATE_FILTER":this.updateFilter(cmd);this.updateHiddenRows(cmd.sheetId);break;case"DUPLICATE_SHEET":this.filterValues[cmd.sheetIdTo]=deepCopy(this.filterValues[cmd.sheetId]);break;}}
finalize(){if(this.isEvaluationDirty){for(const sheetId of this.getters.getSheetIds()){this.updateHiddenRows(sheetId);}
this.isEvaluationDirty=false;}}
isRowFiltered(sheetId,row){return!!this.hiddenRows[sheetId]?.has(row);}
getFilterValue(position){const id=this.getters.getFilterId(position);const sheetId=position.sheetId;return id?this.filterValues[sheetId]?.[id]:undefined;}
getFilterHiddenValues(position){const id=this.getters.getFilterId(position);const sheetId=position.sheetId;if(!id||!this.filterValues[sheetId])
return[];const value=this.filterValues[sheetId][id]||[];return value.filterType==="values"?value.hiddenValues:[];}
getFilterCriterionValue(position){const id=this.getters.getFilterId(position);const sheetId=position.sheetId;if(!id||!this.filterValues[sheetId])
return EMPTY_CRITERION;const value=this.filterValues[sheetId][id];return value&&value.filterType==="criterion"?value:EMPTY_CRITERION;}
isFilterActive(position){const id=this.getters.getFilterId(position);if(!id)
return false;const sheetId=position.sheetId;const value=this.filterValues[sheetId]?.[id];if(!value)
return false;return value.filterType==="values"?value.hiddenValues.length>0:value.type!=="none";}
getFirstTableInSelection(){const sheetId=this.getters.getActiveSheetId();const selection=this.getters.getSelectedZones();return this.getters.getTablesOverlappingZones(sheetId,selection)[0];}
updateFilter({col,row,value,sheetId}){const id=this.getters.getFilterId({sheetId,col,row});if(!id)
return;if(!this.filterValues[sheetId])
this.filterValues[sheetId]={};this.filterValues[sheetId][id]=value;}
updateHiddenRows(sheetId){const filters=this.getters.getFilters(sheetId).sort((filter1,filter2)=>filter1.rangeWithHeaders.zone.top-filter2.rangeWithHeaders.zone.top);const hiddenRows=new Set();for(const filter of filters){const filterValue=this.filterValues[sheetId]?.[filter.id];const filteredZone=filter.filteredRange?.zone;if(!filterValue||!filteredZone||hiddenRows.has(filter.rangeWithHeaders.zone.top)||this.getters.isRowHiddenByUser(sheetId,filter.rangeWithHeaders.zone.top)){continue;}
if(filterValue.filterType==="values"){const filteredValues=filterValue.hiddenValues?.map(toLowerCase);if(!filteredValues)
continue;const filteredValuesSet=new Set(filteredValues);for(let row=filteredZone.top;row<=filteredZone.bottom;row++){const value=this.getCellValueAsString(sheetId,filter.col,row);if(filteredValuesSet.has(value)){hiddenRows.add(row);}}}
else{if(filterValue.type==="none")
continue;const evaluator=criterionEvaluatorRegistry.get(filterValue.type);const evaluatedCriterionValues=filterValue.values.map((value)=>{if(!value.startsWith("=")){return parseLiteral(value,DEFAULT_LOCALE);}
return this.getters.evaluateFormula(sheetId,value)??"";});if(evaluatedCriterionValues.some(isMultipleElementMatrix)){continue;}
const evaluatedCriterion={type:filterValue.type,values:evaluatedCriterionValues.map(toScalar),dateValue:filterValue.dateValue,};for(let row=filteredZone.top;row<=filteredZone.bottom;row++){const position={sheetId,col:filter.col,row};const value=this.getters.getEvaluatedCell(position).value??"";if(!evaluator.isValueValid(value,evaluatedCriterion,this.getters,sheetId)){hiddenRows.add(row);}}}}
this.hiddenRows[sheetId]=hiddenRows;}
getCellValueAsString(sheetId,col,row){const value=this.getters.getEvaluatedCell({sheetId,col,row}).formattedValue;return value.toLowerCase();}
exportForExcel(data){for(const sheetData of data.sheets){const sheetId=sheetData.id;for(const tableData of sheetData.tables){const tableZone=toZone(tableData.range);const filters=[];const headerNames=[];for(const i of range(0,zoneToDimension(tableZone).numberOfCols)){const position={sheetId:sheetData.id,col:tableZone.left+i,row:tableZone.top,};const filteredValues=this.getFilterHiddenValues(position);const filter=this.getters.getFilter(position);const valuesInFilterZone=filter?.filteredRange?positions(filter.filteredRange.zone).map((position)=>this.getters.getEvaluatedCell({sheetId,...position}).formattedValue):[];if(filteredValues.length){const xlsxDisplayedValues=valuesInFilterZone.filter((val)=>val).filter((val)=>!filteredValues.includes(val));filters.push({colId:i,displayedValues:[...new Set(xlsxDisplayedValues)],displayBlanks:!filteredValues.includes("")&&valuesInFilterZone.some((val)=>!val),});}
const headerString=this.getters.getEvaluatedCell(position).formattedValue;const headerName=this.getUniqueColNameForExcel(i,headerString,headerNames);headerNames.push(headerName);const xc=toXC(position.col,position.row);sheetData.cells[xc]=headerName;sheetData.cellValues[xc]=headerName;}
tableData.filters=filters;}}}
getUniqueColNameForExcel(colIndex,colName,usedColNames){if(!colName){colName=`Column${colIndex}`;}
return getUniqueText(colName,usedColNames,{compute:(name,i)=>colName+String(i),start:2,});}}
class GridSelectionPlugin extends UIPlugin{static layers=["Selection"];static getters=["getActiveSheet","getActiveSheetId","getActiveSheetName","getActiveCell","getActiveCols","getActiveRows","getCurrentStyle","getSelectedZones","getSelectedZone","getSelectedCells","getSelectedFigureId","getSelection","getActivePosition","getSheetPosition","isSingleColSelected","getElementsFromSelection","tryGetActiveSheetId","isGridSelectionActive","getSelectecUnboundedZone",];gridSelection={anchor:{cell:{col:0,row:0},zone:{top:0,left:0,bottom:0,right:0},},zones:[{top:0,left:0,bottom:0,right:0}],};selectedFigureId=null;sheetsData={};moveClient;isUnbounded;activeSheet=null;constructor(config){super(config);this.moveClient=config.moveClient;this.isUnbounded=false;}
allowDispatch(cmd){switch(cmd.type){case"ACTIVATE_SHEET":try{const sheet=this.getters.getSheet(cmd.sheetIdTo);if(!sheet.isVisible){return"SheetIsHidden";}
break;}
catch(error){return"InvalidSheetId";}
case"MOVE_COLUMNS_ROWS":return this.isMoveElementAllowed(cmd);}
return"Success";}
handleEvent(event){const anchor=event.anchor;let zones=[];this.isUnbounded=event.options?.unbounded||false;switch(event.mode){case"overrideSelection":zones=[anchor.zone];break;case"updateAnchor":zones=[...this.gridSelection.zones];const index=zones.findIndex((z)=>isEqual(z,event.previousAnchor.zone));if(index>=0){zones[index]=anchor.zone;}
break;case"newAnchor":zones=[...this.gridSelection.zones,anchor.zone];break;}
this.setSelectionMixin(event.anchor,zones);this.selection.resetDefaultAnchor(this,deepCopy(this.gridSelection.anchor));const{col,row}=this.gridSelection.anchor.cell;this.moveClient({sheetId:this.getters.getActiveSheetId(),col,row,});this.selectedFigureId=null;}
handle(cmd){switch(cmd.type){case"ACTIVATE_SHEET":this.selectedFigureId=null;break;case"DELETE_FIGURE":if(this.selectedFigureId===cmd.figureId){this.selectedFigureId=null;}
break;case"DELETE_SHEET":if(this.selectedFigureId&&this.getters.getFigure(cmd.sheetId,this.selectedFigureId)){this.selectedFigureId=null;}
break;}
switch(cmd.type){case"START":const firstSheetId=this.getters.getVisibleSheetIds()[0];this.activateSheet(firstSheetId,firstSheetId);const{col,row}=this.getters.getNextVisibleCellPosition({sheetId:firstSheetId,col:0,row:0,});this.selectCell(col,row);this.selection.registerAsDefault(this,this.gridSelection.anchor,{handleEvent:this.handleEvent.bind(this),});this.moveClient({sheetId:firstSheetId,col:0,row:0});break;case"ACTIVATE_SHEET":{this.activateSheet(cmd.sheetIdFrom,cmd.sheetIdTo);break;}
case"REMOVE_COLUMNS_ROWS":{const sheetId=this.getters.getActiveSheetId();if(cmd.sheetId===sheetId){if(cmd.dimension==="COL"){this.onColumnsRemoved(cmd);}
else{this.onRowsRemoved(cmd);}
const{col,row}=this.gridSelection.anchor.cell;this.moveClient({sheetId,col,row});}
break;}
case"ADD_COLUMNS_ROWS":{const sheetId=this.getters.getActiveSheetId();if(cmd.sheetId===sheetId){this.onAddElements(cmd);const{col,row}=this.gridSelection.anchor.cell;this.moveClient({sheetId,col,row});}
break;}
case"MOVE_COLUMNS_ROWS":if(cmd.sheetId===this.getActiveSheetId()){this.onMoveElements(cmd);}
break;case"SELECT_FIGURE":this.selectedFigureId=cmd.figureId;break;case"ACTIVATE_NEXT_SHEET":this.activateNextSheet("right");break;case"ACTIVATE_PREVIOUS_SHEET":this.activateNextSheet("left");break;case"HIDE_SHEET":if(cmd.sheetId===this.getActiveSheetId()){this.dispatch("ACTIVATE_SHEET",{sheetIdFrom:cmd.sheetId,sheetIdTo:this.getters.getVisibleSheetIds()[0],});}
break;case"UNDO":case"REDO":case"DELETE_SHEET":const deletedSheetIds=Object.keys(this.sheetsData).filter((sheetId)=>!this.getters.tryGetSheet(sheetId));for(const sheetId of deletedSheetIds){delete this.sheetsData[sheetId];}
for(const sheetId in this.sheetsData){const gridSelection=this.clipSelection(sheetId,this.sheetsData[sheetId].gridSelection);this.sheetsData[sheetId]={gridSelection:deepCopy(gridSelection),};}
this.fallbackToVisibleSheet();const sheetId=this.getters.getActiveSheetId();this.gridSelection.zones=this.gridSelection.zones.map((z)=>this.getters.expandZone(sheetId,z));this.gridSelection.anchor.zone=this.getters.expandZone(sheetId,this.gridSelection.anchor.zone);this.setSelectionMixin(this.gridSelection.anchor,this.gridSelection.zones);this.selectedFigureId=null;break;}}
finalize(){this.fallbackToVisibleSheet();this.selection.resetDefaultAnchor(this,deepCopy(this.gridSelection.anchor));}
isGridSelectionActive(){return this.selection.isListening(this);}
getActiveSheet(){return this.activeSheet;}
getActiveSheetId(){return this.activeSheet.id;}
getActiveSheetName(){return this.activeSheet.name;}
tryGetActiveSheetId(){return this.activeSheet?.id;}
getActiveCell(){return this.getters.getEvaluatedCell(this.getActivePosition());}
getActiveCols(){const activeCols=new Set();for(const zone of this.gridSelection.zones){if(zone.top===0&&zone.bottom===this.getters.getNumberRows(this.getters.getActiveSheetId())-1){for(let i=zone.left;i<=zone.right;i++){activeCols.add(i);}}}
return activeCols;}
getActiveRows(){const activeRows=new Set();const sheetId=this.getters.getActiveSheetId();for(const zone of this.gridSelection.zones){if(zone.left===0&&zone.right===this.getters.getNumberCols(sheetId)-1){for(let i=zone.top;i<=zone.bottom;i++){activeRows.add(i);}}}
return activeRows;}
getCurrentStyle(){const zone=this.getters.getSelectedZone();const sheetId=this.getters.getActiveSheetId();return this.getters.getCellStyle({sheetId,col:zone.left,row:zone.top});}
getSelectedZones(){return deepCopy(this.gridSelection.zones);}
getSelectedZone(){return deepCopy(this.gridSelection.anchor.zone);}
getSelectecUnboundedZone(){const zone=this.isUnbounded?this.getters.getUnboundedZone(this.activeSheet.id,this.gridSelection.anchor.zone):this.gridSelection.anchor.zone;return deepCopy(zone);}
getSelection(){return deepCopy(this.gridSelection);}
getSelectedCells(){const sheetId=this.getters.getActiveSheetId();const cells=[];for(const zone of this.gridSelection.zones){cells.push(...this.getters.getEvaluatedCellsInZone(sheetId,zone));}
return cells;}
getSelectedFigureId(){return this.selectedFigureId;}
getActivePosition(){return this.getters.getMainCellPosition({sheetId:this.getActiveSheetId(),col:this.gridSelection.anchor.cell.col,row:this.gridSelection.anchor.cell.row,});}
getSheetPosition(sheetId){if(sheetId===this.getters.getActiveSheetId()){return this.getActivePosition();}
else{const sheetData=this.sheetsData[sheetId];return sheetData?{sheetId,col:sheetData.gridSelection.anchor.cell.col,row:sheetData.gridSelection.anchor.cell.row,}:this.getters.getNextVisibleCellPosition({sheetId,col:0,row:0});}}
isSingleColSelected(){const selection=this.getters.getSelectedZones();if(selection.length!==1||selection[0].left!==selection[0].right){return false;}
return true;}
getElementsFromSelection(dimension){if(dimension==="COL"&&this.getters.getActiveCols().size===0){return[];}
if(dimension==="ROW"&&this.getters.getActiveRows().size===0){return[];}
const zones=this.getters.getSelectedZones();let elements=[];const start=dimension==="COL"?"left":"top";const end=dimension==="COL"?"right":"bottom";for(const zone of zones){const zoneRows=Array.from({length:zone[end]-zone[start]+1},(_,i)=>zone[start]+i);elements=elements.concat(zoneRows);}
return[...new Set(elements)].sort();}
activateSheet(sheetIdFrom,sheetIdTo){this.setActiveSheet(sheetIdTo);this.sheetsData[sheetIdFrom]={gridSelection:deepCopy(this.gridSelection),};if(sheetIdTo in this.sheetsData){Object.assign(this,this.sheetsData[sheetIdTo]);this.selection.resetDefaultAnchor(this,deepCopy(this.gridSelection.anchor));}
else{const{col,row}=this.getters.getNextVisibleCellPosition({sheetId:sheetIdTo,col:0,row:0,});this.selectCell(col,row);}
const{col,row}=this.gridSelection.anchor.cell;this.moveClient({sheetId:this.activeSheet.id,col,row});}
setSelectionMixin(anchor,zones){const{anchor:clippedAnchor,zones:clippedZones}=this.clipSelection(this.getters.getActiveSheetId(),{anchor,zones});this.gridSelection.anchor=clippedAnchor;this.gridSelection.zones=uniqueZones(clippedZones);}
selectCell(col,row){const sheetId=this.getters.getActiveSheetId();const zone=this.getters.expandZone(sheetId,{left:col,right:col,top:row,bottom:row});this.setSelectionMixin({zone,cell:{col,row}},[zone]);}
setActiveSheet(id){this.activeSheet=this.getters.getSheet(id);}
activateNextSheet(direction){const sheetIds=this.getters.getSheetIds();const oldSheetPosition=sheetIds.findIndex((id)=>id===this.activeSheet.id);const delta=direction==="left"?sheetIds.length-1:1;const newPosition=(oldSheetPosition+delta)%sheetIds.length;this.dispatch("ACTIVATE_SHEET",{sheetIdFrom:this.getActiveSheetId(),sheetIdTo:sheetIds[newPosition],});}
onColumnsRemoved(cmd){const{cell,zone}=this.gridSelection.anchor;const selectedZone=updateSelectionOnDeletion(zone,"left",[...cmd.elements]);let anchorZone={left:cell.col,right:cell.col,top:cell.row,bottom:cell.row};anchorZone=updateSelectionOnDeletion(anchorZone,"left",[...cmd.elements]);const anchor={cell:{col:anchorZone.left,row:anchorZone.top,},zone:selectedZone,};const selections=this.gridSelection.zones.map((zone)=>updateSelectionOnDeletion(zone,"left",[...cmd.elements]));this.setSelectionMixin(anchor,selections);}
onRowsRemoved(cmd){const{cell,zone}=this.gridSelection.anchor;const selectedZone=updateSelectionOnDeletion(zone,"top",[...cmd.elements]);let anchorZone={left:cell.col,right:cell.col,top:cell.row,bottom:cell.row};anchorZone=updateSelectionOnDeletion(anchorZone,"top",[...cmd.elements]);const anchor={cell:{col:anchorZone.left,row:anchorZone.top,},zone:selectedZone,};const selections=this.gridSelection.zones.map((zone)=>updateSelectionOnDeletion(zone,"top",[...cmd.elements]));this.setSelectionMixin(anchor,selections);}
onAddElements(cmd){const start=cmd.dimension==="COL"?"left":"top";const anchorZone=updateSelectionOnInsertion(this.gridSelection.anchor.zone,start,cmd.base,cmd.position,cmd.quantity);const selection=this.gridSelection.zones.map((zone)=>updateSelectionOnInsertion(zone,start,cmd.base,cmd.position,cmd.quantity));const anchor={cell:{col:anchorZone.left,row:anchorZone.top},zone:anchorZone,};this.setSelectionMixin(anchor,selection);}
onMoveElements(cmd){const thickness=cmd.elements.length;const figureUpdateCmds=this.getFiguresUpdates(cmd);this.dispatch("ADD_COLUMNS_ROWS",{dimension:cmd.dimension,sheetId:cmd.sheetId,sheetName:cmd.sheetName,base:cmd.base,quantity:thickness,position:cmd.position,});const isCol=cmd.dimension==="COL";const start=cmd.elements[0];const end=cmd.elements[thickness-1];const isBasedBefore=cmd.base<start;const deltaCol=isBasedBefore&&isCol?thickness:0;const deltaRow=isBasedBefore&&!isCol?thickness:0;const target=[{left:isCol?start+deltaCol:0,right:isCol?end+deltaCol:this.getters.getNumberCols(cmd.sheetId)-1,top:!isCol?start+deltaRow:0,bottom:!isCol?end+deltaRow:this.getters.getNumberRows(cmd.sheetId)-1,},];const sheetId=this.getActiveSheetId();const base=isBasedBefore?cmd.base:cmd.base+1;const pasteTarget=[{left:isCol?base:0,right:isCol?base+thickness-1:this.getters.getNumberCols(cmd.sheetId)-1,top:!isCol?base:0,bottom:!isCol?base+thickness-1:this.getters.getNumberRows(cmd.sheetId)-1,},];for(const Handler of clipboardHandlersRegistries.cellHandlers.getAll()){const handler=new Handler(this.getters,this.dispatch);const data=handler.copy(getClipboardDataPositions(sheetId,target));if(!data){continue;}
handler.paste({zones:pasteTarget,sheetId},data,{isCutOperation:true});}
const selection=pasteTarget[0];const col=selection.left;const row=selection.top;this.setSelectionMixin({zone:selection,cell:{col,row}},[selection]);const toRemove=isBasedBefore?cmd.elements.map((el)=>el+thickness):cmd.elements;let currentIndex=isBasedBefore?cmd.base:cmd.base+1;const resizingGroups={};for(const element of toRemove){const size=this.getters.getHeaderSize(cmd.sheetId,cmd.dimension,element);const currentSize=this.getters.getHeaderSize(cmd.sheetId,cmd.dimension,currentIndex);if(size!==currentSize){resizingGroups[size]??=[];resizingGroups[size].push(currentIndex);currentIndex+=1;}}
for(const size in resizingGroups){this.dispatch("RESIZE_COLUMNS_ROWS",{dimension:cmd.dimension,sheetId:cmd.sheetId,size:parseInt(size,10),elements:resizingGroups[size],});}
this.dispatch("REMOVE_COLUMNS_ROWS",{dimension:cmd.dimension,sheetId:cmd.sheetId,sheetName:cmd.sheetName,elements:toRemove,});this.applyFigureUpdates(figureUpdateCmds);}
getFiguresUpdates(cmd){const cmds=[];const moveDict={};const base=cmd.elements[0]<cmd.base?cmd.base-cmd.elements.length+1:cmd.base;for(let index=0;index<cmd.elements.length;index++){moveDict[cmd.elements[index]]=base+index;}
for(const figure of this.getters.getFigures(cmd.sheetId)){if(cmd.dimension==="COL"&&figure.col in moveDict){cmds.push({type:"UPDATE_FIGURE",sheetId:cmd.sheetId,figureId:figure.id,col:moveDict[figure.col],row:figure.row,});}
if(cmd.dimension==="ROW"&&figure.row in moveDict){cmds.push({type:"UPDATE_FIGURE",sheetId:cmd.sheetId,figureId:figure.id,row:moveDict[figure.row],col:figure.col,});}}
return cmds;}
applyFigureUpdates(cmds){for(const cmd of cmds){this.dispatch(cmd.type,{...cmd});}}
isMoveElementAllowed(cmd){const isCol=cmd.dimension==="COL";const start=cmd.elements[0];const end=cmd.elements[cmd.elements.length-1];const id=cmd.sheetId;const doesElementsHaveCommonMerges=isCol?this.getters.doesColumnsHaveCommonMerges:this.getters.doesRowsHaveCommonMerges;if(doesElementsHaveCommonMerges(id,start-1,start)||doesElementsHaveCommonMerges(id,end,end+1)||doesElementsHaveCommonMerges(id,cmd.base-1,cmd.base)){return"WillRemoveExistingMerge";}
const headers=[cmd.base,...cmd.elements];const maxHeaderValue=isCol?this.getters.getNumberCols(id):this.getters.getNumberRows(id);if(headers.some((h)=>h<0||h>=maxHeaderValue)){return"InvalidHeaderIndex";}
return"Success";}
fallbackToVisibleSheet(){if(!this.getters.tryGetSheet(this.getters.getActiveSheetId())){const currentSheetIds=this.getters.getVisibleSheetIds();this.activeSheet=this.getters.getSheet(currentSheetIds[0]);if(this.activeSheet.id in this.sheetsData){const{anchor}=this.clipSelection(this.activeSheet.id,this.sheetsData[this.activeSheet.id].gridSelection);this.selectCell(anchor.cell.col,anchor.cell.row);}
else{this.selectCell(0,0);}
const{col,row}=this.gridSelection.anchor.cell;this.moveClient({sheetId:this.getters.getActiveSheetId(),col,row,});}}
clipSelection(sheetId,selection){const cols=this.getters.getNumberCols(sheetId)-1;const rows=this.getters.getNumberRows(sheetId)-1;const zones=selection.zones.map((z)=>{return{left:clip(z.left,0,cols),right:clip(z.right,0,cols),top:clip(z.top,0,rows),bottom:clip(z.bottom,0,rows),};});const anchorCol=clip(selection.anchor.cell.col,0,cols);const anchorRow=clip(selection.anchor.cell.row,0,rows);const anchorZone={left:clip(selection.anchor.zone.left,0,cols),right:clip(selection.anchor.zone.right,0,cols),top:clip(selection.anchor.zone.top,0,rows),bottom:clip(selection.anchor.zone.bottom,0,rows),};return{zones,anchor:{cell:{col:anchorCol,row:anchorRow},zone:anchorZone,},};}
drawLayer(renderingContext){if(this.getters.isDashboard()){return;}
const{ctx,thinLineWidth}=renderingContext;const zones=this.getSelectedZones();ctx.fillStyle="#f3f7fe";const onlyOneCell=zones.length===1&&zones[0].left===zones[0].right&&zones[0].top===zones[0].bottom;ctx.fillStyle=onlyOneCell?"#f3f7fe":"#e9f0ff";ctx.strokeStyle=SELECTION_BORDER_COLOR;ctx.lineWidth=1.5*thinLineWidth;for(const zone of zones){const{x,y,width,height}=this.getters.getVisibleRect(zone);ctx.globalCompositeOperation="multiply";ctx.fillRect(x,y,width,height);ctx.globalCompositeOperation="source-over";ctx.strokeRect(x,y,width,height);}
ctx.globalCompositeOperation="source-over";const position=this.getActivePosition();ctx.strokeStyle=SELECTION_BORDER_COLOR;ctx.lineWidth=3*thinLineWidth;let zone;if(this.getters.isInMerge(position)){zone=this.getters.getMerge(position);}
else{zone=positionToZone(position);}
const{x,y,width,height}=this.getters.getVisibleRect(zone);if(width>0&&height>0){ctx.strokeRect(x,y,width,height);}}}
class InternalViewport{getters;sheetId;boundaries;top;bottom;left;right;offsetX;offsetY;canScrollVertically;canScrollHorizontally;viewportWidth;viewportHeight;offsetCorrectionX;offsetCorrectionY;constructor(getters,sheetId,boundaries,sizeInGrid,options,offsets){this.getters=getters;this.sheetId=sheetId;this.boundaries=boundaries;if(sizeInGrid.width<0||sizeInGrid.height<0){throw new Error("Viewport size cannot be negative");}
this.viewportWidth=sizeInGrid.height&&sizeInGrid.width;this.viewportHeight=sizeInGrid.width&&sizeInGrid.height;this.top=boundaries.top;this.bottom=boundaries.bottom;this.left=boundaries.left;this.right=boundaries.right;this.offsetX=offsets.x;this.offsetY=offsets.y;this.canScrollVertically=options.canScrollVertically;this.canScrollHorizontally=options.canScrollHorizontally;this.offsetCorrectionX=this.getters.getColDimensions(this.sheetId,this.boundaries.left).start;this.offsetCorrectionY=this.getters.getRowDimensions(this.sheetId,this.boundaries.top).start;this.adjustViewportOffsetX();this.adjustViewportOffsetY();}
getMaxSize(){const lastCol=this.getters.findLastVisibleColRowIndex(this.sheetId,"COL",{first:this.boundaries.left,last:this.boundaries.right,});const lastRow=this.getters.findLastVisibleColRowIndex(this.sheetId,"ROW",{first:this.boundaries.top,last:this.boundaries.bottom,});const{end:lastColEnd}=this.getters.getColDimensions(this.sheetId,lastCol);const{end:lastRowEnd}=this.getters.getRowDimensions(this.sheetId,lastRow);let width=lastColEnd-this.offsetCorrectionX;if(this.canScrollHorizontally){width=Math.max(width,this.viewportWidth);}
let height=lastRowEnd-this.offsetCorrectionY;if(this.canScrollVertically){height=Math.max(height,this.viewportHeight);if(lastRowEnd+FOOTER_HEIGHT>height&&!this.getters.isReadonly()){height+=FOOTER_HEIGHT;}}
return{width,height};}
getColIndex(x){if(x<this.offsetCorrectionX||x>this.offsetCorrectionX+this.viewportWidth){return-1;}
return this.searchHeaderIndex("COL",x-this.offsetCorrectionX+this.snapCorrection.x,this.left);}
getRowIndex(y){if(y<this.offsetCorrectionY||y>this.offsetCorrectionY+this.viewportHeight){return-1;}
return this.searchHeaderIndex("ROW",y-this.offsetCorrectionY+this.snapCorrection.y,this.top);}
adjustPosition(position){const sheetId=this.sheetId;const mainCellPosition=this.getters.getMainCellPosition({sheetId,...position});const{col,row}=this.getters.getNextVisibleCellPosition(mainCellPosition);if(isInside(col,this.boundaries.top,this.boundaries)){this.adjustPositionX(col);}
if(isInside(this.boundaries.left,row,this.boundaries)){this.adjustPositionY(row);}}
adjustPositionX(targetCol){const sheetId=this.sheetId;const{start,end}=this.getters.getColDimensions(sheetId,targetCol);if(this.offsetX+this.viewportWidth+this.offsetCorrectionX<end){this.offsetX=end-this.viewportWidth;}
else if(this.offsetX+this.offsetCorrectionX>start){this.offsetX=start-this.offsetCorrectionX;}
this.adjustViewportZoneX();}
adjustPositionY(targetRow){const sheetId=this.sheetId;const{start,end}=this.getters.getRowDimensions(sheetId,targetRow);if(this.offsetY+this.viewportHeight+this.offsetCorrectionY<end){this.offsetY=end-this.viewportHeight;}
else if(this.offsetY+this.offsetCorrectionY>start){this.offsetY=start-this.offsetCorrectionY;}
this.adjustViewportZoneY();}
willNewOffsetScrollViewport(offsetX,offsetY){return((this.canScrollHorizontally&&this.offsetX!==offsetX)||(this.canScrollVertically&&this.offsetY!==offsetY));}
setViewportOffset(offsetX,offsetY){this.setViewportOffsetX(offsetX);this.setViewportOffsetY(offsetY);}
adjustViewportZone(){this.adjustViewportZoneX();this.adjustViewportZoneY();}
getVisibleRect(zone){const targetZone=intersection(zone,this);const scrollDeltaX=this.snapCorrection.x;const scrollDeltaY=this.snapCorrection.y;if(targetZone){const x=this.getters.getColRowOffset("COL",this.left,targetZone.left)+
this.offsetCorrectionX-
(this.left!==targetZone.left?scrollDeltaX:0);const y=this.getters.getColRowOffset("ROW",this.top,targetZone.top)+
this.offsetCorrectionY-
(this.top!==targetZone.top?scrollDeltaY:0);const width=Math.min(this.getters.getColRowOffset("COL",targetZone.left,targetZone.right+1)-
(this.left===targetZone.left?scrollDeltaX:0),this.viewportWidth);const height=Math.min(this.getters.getColRowOffset("ROW",targetZone.top,targetZone.bottom+1)-
(this.top===targetZone.top?scrollDeltaY:0),this.viewportHeight);return{x,y,width,height};}
return undefined;}
getFullRect(zone){const targetZone=intersection(zone,this.boundaries);const scrollDeltaX=this.snapCorrection.x;const scrollDeltaY=this.snapCorrection.y;if(targetZone){const x=this.getters.getColRowOffset("COL",this.left,zone.left)+this.offsetCorrectionX;const y=this.getters.getColRowOffset("ROW",this.top,zone.top)+this.offsetCorrectionY;const width=this.getters.getColRowOffset("COL",zone.left,zone.right+1);const height=this.getters.getColRowOffset("ROW",zone.top,zone.bottom+1);return{x:x-scrollDeltaX,y:y-scrollDeltaY,width,height};}
return undefined;}
isVisible(col,row){const isInside=row<=this.bottom&&row>=this.top&&col>=this.left&&col<=this.right;return(isInside&&!this.getters.isColHidden(this.sheetId,col)&&!this.getters.isRowHidden(this.sheetId,row));}
searchHeaderIndex(dimension,position,startIndex=0){if(this.viewportWidth<=0||this.viewportHeight<=0){return-1;}
const sheetId=this.sheetId;const headers=this.getters.getNumberHeaders(sheetId,dimension);let start=startIndex;let end=headers;while(start<=end&&start!==headers&&end!==-1){const mid=Math.floor((start+end)/2);const offset=this.getters.getColRowOffset(dimension,startIndex,mid);const size=this.getters.getHeaderSize(sheetId,dimension,mid);if(position>=offset&&position<offset+size){return mid;}
else if(position>=offset+size){start=mid+1;}
else{end=mid-1;}}
return-1;}
setViewportOffsetX(offsetX){if(!this.canScrollHorizontally){return;}
this.offsetX=offsetX;this.adjustViewportZoneX();}
setViewportOffsetY(offsetY){if(!this.canScrollVertically){return;}
this.offsetY=offsetY;this.adjustViewportZoneY();}
adjustViewportOffsetX(){if(this.canScrollHorizontally){const{width:viewportWidth}=this.getMaxSize();if(this.viewportWidth+this.offsetX>viewportWidth){this.offsetX=Math.max(0,viewportWidth-this.viewportWidth);}}
this.adjustViewportZoneX();}
adjustViewportOffsetY(){if(this.canScrollVertically){const{height:paneHeight}=this.getMaxSize();if(this.viewportHeight+this.offsetY>paneHeight){this.offsetY=Math.max(0,paneHeight-this.viewportHeight);}}
this.adjustViewportZoneY();}
adjustViewportZoneX(){this.left=this.searchHeaderIndex("COL",this.offsetX,this.boundaries.left);this.right=Math.min(this.boundaries.right,this.searchHeaderIndex("COL",Math.max(this.viewportWidth+this.snapCorrection.x-0.1),this.left));if(!this.viewportWidth){return;}
if(this.left===-1){this.left=this.boundaries.left;}
if(this.right===-1){this.right=this.boundaries.right;}}
adjustViewportZoneY(){this.top=this.searchHeaderIndex("ROW",this.offsetY,this.boundaries.top);this.bottom=Math.min(this.boundaries.bottom,this.searchHeaderIndex("ROW",Math.max(this.viewportHeight+this.snapCorrection.y-0.1,0),this.top));if(!this.viewportHeight){return;}
if(this.top===-1){this.top=this.boundaries.top;}
if(this.bottom===-1){this.bottom=this.boundaries.bottom;}}
get snapCorrection(){return{x:Math.abs(this.offsetX-
this.getters.getColRowOffset("COL",this.boundaries.left,Math.max(0,this.left))),y:Math.abs(this.offsetY-
this.getters.getColRowOffset("ROW",this.boundaries.top,Math.max(0,this.top))),};}}
class SheetViewPlugin extends UIPlugin{static getters=["getColIndex","getRowIndex","getActiveMainViewport","getSheetViewDimension","getSheetViewDimensionWithHeaders","getMainViewportRect","isVisibleInViewport","getEdgeScrollCol","getEdgeScrollRow","getVisibleFigures","getVisibleRect","getVisibleRectWithoutHeaders","getVisibleCellPositions","getColRowOffsetInViewport","getMainViewportCoordinates","getActiveSheetScrollInfo","getSheetViewVisibleCols","getSheetViewVisibleRows","getFrozenSheetViewRatio","isPixelPositionVisible","getColDimensionsInViewport","getRowDimensionsInViewport","getAllActiveViewportsZonesAndRect","getRect","getFigureUI","getPositionAnchorOffset","getGridOffset",];viewports={};sheetViewWidth=getDefaultSheetViewSize();sheetViewHeight=getDefaultSheetViewSize();gridOffsetX=0;gridOffsetY=0;sheetsWithDirtyViewports=new Set();shouldAdjustViewports=false;allowDispatch(cmd){switch(cmd.type){case"SET_VIEWPORT_OFFSET":return this.chainValidations(this.checkScrollingDirection,this.checkIfViewportsWillChange)(cmd);case"RESIZE_SHEETVIEW":return this.chainValidations(this.checkValuesAreDifferent,this.checkPositiveDimension)(cmd);default:return"Success";}}
handleEvent(event){const sheetId=this.getters.getActiveSheetId();if(event.options.scrollIntoView){let{col,row}=findCellInNewZone(event.previousAnchor.zone,event.anchor.zone);if(event.mode==="updateAnchor"){const oldZone=event.previousAnchor.zone;const newZone=event.anchor.zone;const{top,bottom,left,right}=this.getMainInternalViewport(sheetId);if(oldZone.left===newZone.left&&oldZone.right===newZone.right){col=left>col||col>right?left:col;}
if(oldZone.top===newZone.top&&oldZone.bottom===newZone.bottom){row=top>row||row>bottom?top:row;}}
col=Math.min(col,this.getters.getNumberCols(sheetId)-1);row=Math.min(row,this.getters.getNumberRows(sheetId)-1);if(!this.sheetsWithDirtyViewports.has(sheetId)){this.refreshViewport(this.getters.getActiveSheetId(),{col,row});}}}
handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)){for(const sheetId of this.getters.getSheetIds()){this.sheetsWithDirtyViewports.add(sheetId);}}
switch(cmd.type){case"START":this.selection.observe(this,{handleEvent:this.handleEvent.bind(this),});this.resetViewports(this.getters.getActiveSheetId());break;case"UNDO":case"REDO":this.cleanViewports();for(const sheetId of this.getters.getSheetIds()){this.sheetsWithDirtyViewports.add(sheetId);}
this.shouldAdjustViewports=true;break;case"RESIZE_SHEETVIEW":this.resizeSheetView(cmd.height,cmd.width,cmd.gridOffsetX,cmd.gridOffsetY);break;case"SET_VIEWPORT_OFFSET":this.setSheetViewOffset(cmd.offsetX,cmd.offsetY);break;case"SHIFT_VIEWPORT_DOWN":const sheetId=this.getters.getActiveSheetId();const{top,viewportHeight,offsetCorrectionY}=this.getMainInternalViewport(sheetId);const topRowDims=this.getters.getRowDimensions(sheetId,top);this.shiftVertically(topRowDims.start+viewportHeight-offsetCorrectionY);break;case"SHIFT_VIEWPORT_UP":{const sheetId=this.getters.getActiveSheetId();const{top,viewportHeight,offsetCorrectionY}=this.getMainInternalViewport(sheetId);const topRowDims=this.getters.getRowDimensions(sheetId,top);this.shiftVertically(topRowDims.end-offsetCorrectionY-viewportHeight);break;}
case"REMOVE_TABLE":case"UPDATE_TABLE":case"UPDATE_FILTER":case"UNFREEZE_ROWS":case"UNFREEZE_COLUMNS":case"FREEZE_COLUMNS":case"FREEZE_ROWS":case"UNFREEZE_COLUMNS_ROWS":case"REMOVE_COLUMNS_ROWS":case"RESIZE_COLUMNS_ROWS":case"HIDE_COLUMNS_ROWS":case"ADD_COLUMNS_ROWS":case"UNHIDE_COLUMNS_ROWS":case"UNGROUP_HEADERS":case"GROUP_HEADERS":case"FOLD_HEADER_GROUP":case"UNFOLD_HEADER_GROUP":case"FOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_ALL_HEADER_GROUPS":case"FOLD_ALL_HEADER_GROUPS":this.sheetsWithDirtyViewports.add(cmd.sheetId);break;case"UPDATE_CELL":if("content"in cmd||"format"in cmd||cmd.style?.fontSize!==undefined){for(const sheetId of this.getters.getSheetIds()){this.sheetsWithDirtyViewports.add(sheetId);}}
break;case"DELETE_SHEET":this.cleanViewports();this.sheetsWithDirtyViewports.delete(cmd.sheetId);break;case"ACTIVATE_SHEET":this.sheetsWithDirtyViewports.add(cmd.sheetIdTo);break;case"SCROLL_TO_CELL":this.refreshViewport(this.getters.getActiveSheetId(),{col:cmd.col,row:cmd.row});break;}}
finalize(){for(const sheetId of this.sheetsWithDirtyViewports){this.resetViewports(sheetId);if(this.shouldAdjustViewports){const position=this.getters.getSheetPosition(sheetId);this.getSubViewports(sheetId).forEach((viewport)=>{viewport.adjustPosition(position);});}}
this.sheetsWithDirtyViewports=new Set();this.shouldAdjustViewports=false;this.setViewports();}
setViewports(){const sheetIds=this.getters.getSheetIds();for(const sheetId of sheetIds){if(!this.viewports[sheetId]?.bottomRight){this.resetViewports(sheetId);}}}
getColIndex(x){const sheetId=this.getters.getActiveSheetId();return Math.max(...this.getSubViewports(sheetId).map((viewport)=>viewport.getColIndex(x)));}
getRowIndex(y){const sheetId=this.getters.getActiveSheetId();return Math.max(...this.getSubViewports(sheetId).map((viewport)=>viewport.getRowIndex(y)));}
getSheetViewDimensionWithHeaders(){return{width:this.sheetViewWidth+this.gridOffsetX,height:this.sheetViewHeight+this.gridOffsetY,};}
getSheetViewDimension(){return{width:this.sheetViewWidth,height:this.sheetViewHeight,};}
getGridOffset(){return{x:this.gridOffsetX,y:this.gridOffsetY};}
getActiveMainViewport(){const sheetId=this.getters.getActiveSheetId();return this.getMainViewport(sheetId);}
getActiveSheetScrollInfo(){const sheetId=this.getters.getActiveSheetId();const viewport=this.getMainInternalViewport(sheetId);return{scrollX:viewport.offsetX,scrollY:viewport.offsetY,};}
getSheetViewVisibleCols(){const sheetId=this.getters.getActiveSheetId();const viewports=this.getSubViewports(sheetId);return[...new Set(viewports.map((v)=>range(v.left,v.right+1)).flat())].filter((col)=>col>=0&&!this.getters.isHeaderHidden(sheetId,"COL",col));}
getSheetViewVisibleRows(){const sheetId=this.getters.getActiveSheetId();const viewports=this.getSubViewports(sheetId);return[...new Set(viewports.map((v)=>range(v.top,v.bottom+1)).flat())].filter((row)=>row>=0&&!this.getters.isHeaderHidden(sheetId,"ROW",row));}
getVisibleCellPositions(){const visibleCols=this.getSheetViewVisibleCols();const visibleRows=this.getSheetViewVisibleRows();const sheetId=this.getters.getActiveSheetId();const positions=[];for(const col of visibleCols){for(const row of visibleRows){const position={sheetId,col,row};const mainPosition=this.getters.getMainCellPosition(position);if(mainPosition.row!==row||mainPosition.col!==col){continue;}
positions.push(position);}}
return positions;}
getMainViewportRect(){const sheetId=this.getters.getActiveSheetId();const viewport=this.getMainInternalViewport(sheetId);const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);const{width,height}=viewport.getMaxSize();const x=this.getters.getColDimensions(sheetId,xSplit).start;const y=this.getters.getRowDimensions(sheetId,ySplit).start;return{x,y,width,height};}
getMaximumSheetOffset(){const sheetId=this.getters.getActiveSheetId();const{width,height}=this.getMainViewportRect();const viewport=this.getMainInternalViewport(sheetId);return{maxOffsetX:Math.max(0,width-viewport.viewportWidth),maxOffsetY:Math.max(0,height-viewport.viewportHeight),};}
getColRowOffsetInViewport(dimension,referenceHeaderIndex,targetHeaderIndex){if(targetHeaderIndex<referenceHeaderIndex){return-this.getColRowOffsetInViewport(dimension,targetHeaderIndex,referenceHeaderIndex);}
const sheetId=this.getters.getActiveSheetId();const visibleHeaders=dimension==="COL"?this.getters.getSheetViewVisibleCols():this.getters.getSheetViewVisibleRows();const startIndex=visibleHeaders.findIndex((header)=>referenceHeaderIndex>=header);let endIndex=visibleHeaders.findIndex((header)=>targetHeaderIndex<=header);endIndex=endIndex===-1?visibleHeaders.length:endIndex;const relevantIndexes=visibleHeaders.slice(startIndex,endIndex);let offset=0;for(const i of relevantIndexes){offset+=this.getters.getHeaderSize(sheetId,dimension,i);}
return offset;}
isVisibleInViewport({sheetId,col,row}){return this.getSubViewports(sheetId).some((pane)=>pane.isVisible(col,row));}
getEdgeScrollCol(x,previousX,startingX){let canEdgeScroll=false;let direction=0;let delay=0;const{xSplit}=this.getters.getPaneDivisions(this.getters.getActiveSheetId());const{width}=this.getSheetViewDimension();const{x:offsetCorrectionX}=this.getMainViewportCoordinates();const currentOffsetX=this.getActiveSheetScrollInfo().scrollX;if(x>width){canEdgeScroll=true;delay=scrollDelay(x-width);direction=1;}
else if(x<offsetCorrectionX&&startingX>=offsetCorrectionX&&currentOffsetX>0){canEdgeScroll=true;delay=scrollDelay(offsetCorrectionX-x);direction=-1;}
else if(xSplit&&previousX<offsetCorrectionX&&x>offsetCorrectionX){canEdgeScroll=true;delay=scrollDelay(x);direction="reset";}
return{canEdgeScroll,direction,delay};}
getEdgeScrollRow(y,previousY,startingY){let canEdgeScroll=false;let direction=0;let delay=0;const{ySplit}=this.getters.getPaneDivisions(this.getters.getActiveSheetId());const{height}=this.getSheetViewDimension();const{y:offsetCorrectionY}=this.getMainViewportCoordinates();const currentOffsetY=this.getActiveSheetScrollInfo().scrollY;if(y>height){canEdgeScroll=true;delay=scrollDelay(y-height);direction=1;}
else if(y<offsetCorrectionY&&startingY>=offsetCorrectionY&&currentOffsetY>0){canEdgeScroll=true;delay=scrollDelay(offsetCorrectionY-y);direction=-1;}
else if(ySplit&&previousY<offsetCorrectionY&&y>offsetCorrectionY){canEdgeScroll=true;delay=scrollDelay(y);direction="reset";}
return{canEdgeScroll,direction,delay};}
getVisibleRect(zone){const rect=this.getVisibleRectWithoutHeaders(zone);return{...rect,x:rect.x+this.gridOffsetX,y:rect.y+this.gridOffsetY};}
getVisibleRectWithoutHeaders(zone){const sheetId=this.getters.getActiveSheetId();return this.mapViewportsToRect(sheetId,(viewport)=>viewport.getVisibleRect(zone));}
getRect(zone){const sheetId=this.getters.getActiveSheetId();const rect=this.mapViewportsToRect(sheetId,(viewport)=>viewport.getFullRect(zone));return{...rect,x:rect.x+this.gridOffsetX,y:rect.y+this.gridOffsetY};}
getRectWithoutHeaders(zone){const sheetId=this.getters.getActiveSheetId();return this.mapViewportsToRect(sheetId,(viewport)=>viewport.getFullRect(zone));}
getMainViewportCoordinates(){const sheetId=this.getters.getActiveSheetId();const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);const x=this.getters.getColDimensions(sheetId,xSplit).start;const y=this.getters.getRowDimensions(sheetId,ySplit).start;return{x,y};}
getColDimensionsInViewport(sheetId,col){const{top}=this.getMainInternalViewport(sheetId);const zone={left:col,right:col,top:top,bottom:top,};const{x,width}=this.getVisibleRect(zone);const start=x-this.gridOffsetX;return{start,size:width,end:start+width};}
getRowDimensionsInViewport(sheetId,row){const{left}=this.getMainInternalViewport(sheetId);const zone={left:0,right:left,top:row,bottom:row,};const{y,height}=this.getVisibleRect(zone);const start=y-this.gridOffsetY;return{start,size:height,end:start+height};}
getAllActiveViewportsZonesAndRect(){const sheetId=this.getters.getActiveSheetId();return this.getSubViewports(sheetId).map((viewport)=>{return{zone:viewport,rect:{x:viewport.offsetCorrectionX+this.gridOffsetX,y:viewport.offsetCorrectionY+this.gridOffsetY,...viewport.getMaxSize(),},};});}
ensureMainViewportExist(sheetId){if(!this.viewports[sheetId]){this.resetViewports(sheetId);}}
getSubViewports(sheetId){this.ensureMainViewportExist(sheetId);return Object.values(this.viewports[sheetId]).filter(isDefined);}
checkPositiveDimension(cmd){if(cmd.width<0||cmd.height<0){return"InvalidViewportSize";}
return"Success";}
checkValuesAreDifferent(cmd){const{height,width}=this.getSheetViewDimension();if(cmd.gridOffsetX===this.gridOffsetX&&cmd.gridOffsetY===this.gridOffsetY&&cmd.width===width&&cmd.height===height){return"ValuesNotChanged";}
return"Success";}
checkScrollingDirection({offsetX,offsetY,}){const pane=this.getMainInternalViewport(this.getters.getActiveSheetId());if((!pane.canScrollHorizontally&&offsetX>0)||(!pane.canScrollVertically&&offsetY>0)){return"InvalidScrollingDirection";}
return"Success";}
checkIfViewportsWillChange({offsetX,offsetY}){const sheetId=this.getters.getActiveSheetId();const{maxOffsetX,maxOffsetY}=this.getMaximumSheetOffset();const willScroll=this.getSubViewports(sheetId).some((viewport)=>viewport.willNewOffsetScrollViewport(clip(offsetX,0,maxOffsetX),clip(offsetY,0,maxOffsetY)));return willScroll?"Success":"ViewportScrollLimitsReached";}
getMainViewport(sheetId){const viewport=this.getMainInternalViewport(sheetId);return{top:viewport.top,left:viewport.left,bottom:viewport.bottom,right:viewport.right,};}
getMainInternalViewport(sheetId){this.ensureMainViewportExist(sheetId);return this.viewports[sheetId].bottomRight;}
cleanViewports(){const newViewport={};for(const sheetId of this.getters.getSheetIds()){newViewport[sheetId]=this.viewports[sheetId];}
this.viewports=newViewport;}
resizeSheetView(height,width,gridOffsetX=0,gridOffsetY=0){this.sheetViewHeight=height;this.sheetViewWidth=width;this.gridOffsetX=gridOffsetX;this.gridOffsetY=gridOffsetY;this.recomputeViewports();}
recomputeViewports(){for(const sheetId of this.getters.getSheetIds()){this.resetViewports(sheetId);}}
setSheetViewOffset(offsetX,offsetY){const sheetId=this.getters.getActiveSheetId();const{maxOffsetX,maxOffsetY}=this.getMaximumSheetOffset();this.getSubViewports(sheetId).forEach((viewport)=>viewport.setViewportOffset(clip(offsetX,0,maxOffsetX),clip(offsetY,0,maxOffsetY)));}
getViewportOffset(sheetId){return{x:this.viewports[sheetId]?.bottomRight.offsetX||0,y:this.viewports[sheetId]?.bottomRight.offsetY||0,};}
resetViewports(sheetId){if(!this.getters.tryGetSheet(sheetId)){return;}
const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);const nCols=this.getters.getNumberCols(sheetId);const nRows=this.getters.getNumberRows(sheetId);const colOffset=Math.min(this.getters.getColRowOffset("COL",0,xSplit,sheetId),this.sheetViewWidth);const rowOffset=Math.min(this.getters.getColRowOffset("ROW",0,ySplit,sheetId),this.sheetViewHeight);const unfrozenWidth=Math.max(this.sheetViewWidth-colOffset,0);const unfrozenHeight=Math.max(this.sheetViewHeight-rowOffset,0);const{xRatio,yRatio}=this.getFrozenSheetViewRatio(sheetId);const canScrollHorizontally=xRatio<1.0;const canScrollVertically=yRatio<1.0;const previousOffset=this.getViewportOffset(sheetId);const sheetViewports={topLeft:(ySplit&&xSplit&&new InternalViewport(this.getters,sheetId,{left:0,right:xSplit-1,top:0,bottom:ySplit-1},{width:colOffset,height:rowOffset},{canScrollHorizontally:false,canScrollVertically:false},{x:0,y:0}))||undefined,topRight:(ySplit&&new InternalViewport(this.getters,sheetId,{left:xSplit,right:nCols-1,top:0,bottom:ySplit-1},{width:unfrozenWidth,height:rowOffset},{canScrollHorizontally,canScrollVertically:false},{x:canScrollHorizontally?previousOffset.x:0,y:0}))||undefined,bottomLeft:(xSplit&&new InternalViewport(this.getters,sheetId,{left:0,right:xSplit-1,top:ySplit,bottom:nRows-1},{width:colOffset,height:unfrozenHeight},{canScrollHorizontally:false,canScrollVertically},{x:0,y:canScrollVertically?previousOffset.y:0}))||undefined,bottomRight:new InternalViewport(this.getters,sheetId,{left:xSplit,right:nCols-1,top:ySplit,bottom:nRows-1},{width:unfrozenWidth,height:unfrozenHeight,},{canScrollHorizontally,canScrollVertically},{x:canScrollHorizontally?previousOffset.x:0,y:canScrollVertically?previousOffset.y:0,}),};this.viewports[sheetId]=sheetViewports;}
refreshViewport(sheetId,anchorPosition){this.getSubViewports(sheetId).forEach((viewport)=>{viewport.adjustViewportZone();viewport.adjustPosition(anchorPosition);});}
shiftVertically(offset){const sheetId=this.getters.getActiveSheetId();const{top}=this.getMainInternalViewport(sheetId);const{scrollX}=this.getActiveSheetScrollInfo();this.setSheetViewOffset(scrollX,offset);const{anchor}=this.getters.getSelection();if(anchor.cell.row>=this.getters.getPaneDivisions(sheetId).ySplit){const deltaRow=this.getMainInternalViewport(sheetId).top-top;this.selection.selectCell(anchor.cell.col,anchor.cell.row+deltaRow);}}
getColIndexLeftOfMainViewport(x){if(x>=0)
return-1;const sheetId=this.getters.getActiveSheetId();let col=this.getActiveMainViewport().left;let colStart=-this.getActiveSheetScrollInfo().scrollX-this.getters.getColRowOffset("COL",col,0);for(;x<colStart;col--){colStart-=this.getters.getColSize(sheetId,col-1);}
return Math.max(col,0);}
getRowIndexTopOfMainViewport(y){if(y>=0)
return-1;const sheetId=this.getters.getActiveSheetId();let row=this.getActiveMainViewport().top;let rowStart=-this.getActiveSheetScrollInfo().scrollY-this.getters.getColRowOffset("ROW",row,0);for(;y<rowStart;row--){rowStart-=this.getters.getRowSize(sheetId,row-1);}
return Math.max(row,0);}
getVisibleFigures(){const sheetId=this.getters.getActiveSheetId();const result=[];const figures=this.getters.getFigures(sheetId);const{scrollX,scrollY}=this.getters.getActiveSheetScrollInfo();const{x:offsetCorrectionX,y:offsetCorrectionY}=this.getMainViewportCoordinates();const{width,height}=this.getters.getSheetViewDimensionWithHeaders();for(const figure of figures){const figureUI=this.getFigureUI(sheetId,figure);const{x,y}=figureUI;if(x>=offsetCorrectionX&&(x+figure.width<scrollX+offsetCorrectionX||x>width+scrollX+offsetCorrectionX)){continue;}
else if(y>=offsetCorrectionY&&(y+figure.height<scrollY+offsetCorrectionY||y>height+scrollY+offsetCorrectionY)){continue;}
result.push(figureUI);}
return result;}
getFigureUI(sheetId,figure){const x=figure.offset.x+this.getters.getColDimensions(sheetId,figure.col).start;const y=figure.offset.y+this.getters.getRowDimensions(sheetId,figure.row).start;return{...figure,x,y};}
getPositionAnchorOffset(position){const{scrollX,scrollY}=this.getters.getActiveSheetScrollInfo();const x=position.x-scrollX;const y=position.y-scrollY;const col=x>=0?this.getColIndex(x):this.getColIndexLeftOfMainViewport(x);const row=y>=0?this.getRowIndex(y):this.getRowIndexTopOfMainViewport(y);const{x:colX,y:rowY}=this.getRect(positionToZone({col,row}));return{col,row,offset:{x:Math.max(x-colX+this.gridOffsetX,0),y:Math.max(y-rowY+this.gridOffsetY,0),},};}
isPixelPositionVisible(position){const{scrollX,scrollY}=this.getters.getActiveSheetScrollInfo();const{x:mainViewportX,y:mainViewportY}=this.getters.getMainViewportCoordinates();const{width,height}=this.getters.getSheetViewDimension();if(position.x>=mainViewportX&&(position.x<mainViewportX+scrollX||position.x>width+scrollX+mainViewportX)){return false;}
if(position.y>=mainViewportY&&(position.y<mainViewportY+scrollY||position.y>height+scrollY+mainViewportY)){return false;}
return true;}
getFrozenSheetViewRatio(sheetId){const{xSplit,ySplit}=this.getters.getPaneDivisions(sheetId);const offsetCorrectionX=this.getters.getColDimensions(sheetId,xSplit).start;const offsetCorrectionY=this.getters.getRowDimensions(sheetId,ySplit).start;const width=this.sheetViewWidth+this.gridOffsetX;const height=this.sheetViewHeight+this.gridOffsetY;return{xRatio:offsetCorrectionX/width,yRatio:offsetCorrectionY/height};}
mapViewportsToRect(sheetId,rectCallBack){let x=Infinity;let y=Infinity;let width=0;let height=0;let hasViewports=false;for(const viewport of this.getSubViewports(sheetId)){const rect=rectCallBack(viewport);if(rect){hasViewports=true;x=Math.min(x,rect.x);y=Math.min(y,rect.y);width=Math.max(width,rect.x+rect.width);height=Math.max(height,rect.y+rect.height);}}
if(!hasViewports){return{x:0,y:0,width:0,height:0};}
return{x,y,width:width-x,height:height-y};}}
class HeaderPositionsUIPlugin extends UIPlugin{static getters=["getColDimensions","getRowDimensions","getColRowOffset"];headerPositions={};isDirty=true;handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)){this.headerPositions={};this.isDirty=true;}
switch(cmd.type){case"START":for(const sheetId of this.getters.getSheetIds()){this.headerPositions[sheetId]=this.computeHeaderPositionsOfSheet(sheetId);}
break;case"UPDATE_CELL":this.headerPositions={};this.isDirty=true;break;case"UPDATE_FILTER":case"UPDATE_TABLE":case"REMOVE_TABLE":this.headerPositions={};this.isDirty=true;break;case"REMOVE_COLUMNS_ROWS":case"RESIZE_COLUMNS_ROWS":case"HIDE_COLUMNS_ROWS":case"ADD_COLUMNS_ROWS":case"UNHIDE_COLUMNS_ROWS":case"FOLD_HEADER_GROUP":case"UNFOLD_HEADER_GROUP":case"FOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_HEADER_GROUPS_IN_ZONE":case"UNFOLD_ALL_HEADER_GROUPS":case"FOLD_ALL_HEADER_GROUPS":case"UNGROUP_HEADERS":case"GROUP_HEADERS":case"CREATE_SHEET":if(this.getters.tryGetSheet(cmd.sheetId)){this.headerPositions[cmd.sheetId]=this.computeHeaderPositionsOfSheet(cmd.sheetId);}
break;case"DUPLICATE_SHEET":this.headerPositions[cmd.sheetIdTo]=deepCopy(this.headerPositions[cmd.sheetId]);break;}}
finalize(){for(const sheetId of this.getters.getSheetIds()){if(this.isDirty||!this.headerPositions[sheetId]){this.headerPositions[sheetId]=this.computeHeaderPositionsOfSheet(sheetId);}}
this.isDirty=false;}
getColDimensions(sheetId,col){const start=this.headerPositions[sheetId]["COL"][col];const size=this.getters.getColSize(sheetId,col);const isColHidden=this.getters.isColHidden(sheetId,col);return{start,size,end:start+(isColHidden?0:size),};}
getRowDimensions(sheetId,row){const start=this.headerPositions[sheetId]["ROW"][row];const size=this.getters.getRowSize(sheetId,row);const isRowHidden=this.getters.isRowHidden(sheetId,row);return{start,size:size,end:start+(isRowHidden?0:size),};}
getColRowOffset(dimension,referenceIndex,index,sheetId=this.getters.getActiveSheetId()){const referencePosition=this.headerPositions[sheetId][dimension][referenceIndex];const position=this.headerPositions[sheetId][dimension][index];return position-referencePosition;}
computeHeaderPositionsOfSheet(sheetId){return{COL:this.computePositions(sheetId,"COL"),ROW:this.computePositions(sheetId,"ROW"),};}
computePositions(sheetId,dimension){const positions={};let offset=0;for(let i=0;i<this.getters.getNumberHeaders(sheetId,dimension)+1;i++){positions[i]=offset;if(this.getters.isHeaderHidden(sheetId,dimension,i)){continue;}
offset+=this.getters.getHeaderSize(sheetId,dimension,i);}
return positions;}}
const corePluginRegistry=new Registry().add("settings",SettingsPlugin).add("sheet",SheetPlugin).add("header grouping",HeaderGroupingPlugin).add("header visibility",HeaderVisibilityPlugin).add("tables",TablePlugin).add("dataValidation",DataValidationPlugin).add("cell",CellPlugin).add("merge",MergePlugin).add("headerSize",HeaderSizePlugin).add("borders",BordersPlugin).add("conditional formatting",ConditionalFormatPlugin).add("figures",FigurePlugin).add("chart",ChartPlugin).add("image",ImagePlugin).add("pivot_core",PivotCorePlugin).add("spreadsheet_pivot_core",SpreadsheetPivotCorePlugin).add("tableStyle",TableStylePlugin);const featurePluginRegistry=new Registry().add("ui_sheet",SheetUIPlugin).add("ui_options",UIOptionsPlugin).add("autofill",AutofillPlugin).add("sort",SortPlugin).add("automatic_sum",AutomaticSumPlugin).add("format",FormatPlugin).add("insert_pivot",InsertPivotPlugin).add("pivot_presence",PivotPresencePlugin).add("split_to_columns",SplitToColumnsPlugin).add("collaborative",CollaborativePlugin).add("history",HistoryPlugin).add("data_cleanup",DataCleanupPlugin).add("table_autofill",TableAutofillPlugin).add("table_ui_resize",TableResizeUI).add("datavalidation_insert",DataValidationInsertionPlugin).add("checkbox_toggle",CheckboxTogglePlugin).add("geo_features",GeoFeaturePlugin);const statefulUIPluginRegistry=new Registry().add("selection",GridSelectionPlugin).add("evaluation_filter",FilterEvaluationPlugin).add("header_visibility_ui",HeaderVisibilityUIPlugin).add("cell_computed_style",CellComputedStylePlugin).add("table_computed_style",TableComputedStylePlugin).add("header_positions",HeaderPositionsUIPlugin).add("viewport",SheetViewPlugin).add("clipboard",ClipboardPlugin);const coreViewsPluginRegistry=new Registry().add("evaluation",EvaluationPlugin).add("evaluation_chart",EvaluationChartPlugin).add("evaluation_cf",EvaluationConditionalFormatPlugin).add("row_size",HeaderSizeUIPlugin).add("data_validation_ui",EvaluationDataValidationPlugin).add("dynamic_tables",DynamicTablesPlugin).add("custom_colors",CustomColorsPlugin).add("pivot_ui",PivotUIPlugin).add("cell_icon",CellIconPlugin);autoCompleteProviders.add("dataValidation",{displayAllOnInitialContent:true,getProposals(tokenAtCursor,content){if(isFormula(content)){return[];}
if(!this.composer.currentEditedCell){return[];}
const position=this.composer.currentEditedCell;const rule=this.getters.getValidationRuleForCell(position);if(!rule||(rule.criterion.type!=="isValueInList"&&rule.criterion.type!=="isValueInRange")){return[];}
const sheetId=this.composer.currentEditedCell.sheetId;const values=rule.criterion.type==="isValueInRange"?Array.from(new Set(this.getters.getDataValidationRangeValues(sheetId,rule.criterion))):rule.criterion.values;const isChip=rule.criterion.displayStyle==="chip";if(!isChip){return values.map((value)=>({text:value}));}
const colors=rule.criterion.colors;return values.map((value)=>{const color=colors?.[value];return{text:value,htmlContent:[{value,color:color?chipTextColor(color):undefined,backgroundColor:color||GRAY_200,classes:["badge rounded-pill fs-6 fw-normal w-100 mt-1 text-start"],},],};});},selectProposal(tokenAtCursor,value){this.composer.setCurrentContent(value);this.composer.stopEdition();},});autoCompleteProviders.add("functions",{sequence:100,autoSelectFirstProposal:true,maxDisplayedProposals:10,getProposals(tokenAtCursor){if(tokenAtCursor.type!=="SYMBOL"){return[];}
const searchTerm=tokenAtCursor.value;if(!isFormula(this.composer.currentContent)){return[];}
const values=Object.entries(functionRegistry.content).filter(([_,{hidden}])=>!hidden).map(([text,{description}])=>{return{text,description,htmlContent:getHtmlContentFromPattern(searchTerm,text,COMPOSER_ASSISTANT_COLOR,"o-semi-bold"),};}).sort((a,b)=>{return a.text.length-b.text.length||a.text.localeCompare(b.text);});return values;},selectProposal(tokenAtCursor,value){let start=tokenAtCursor.end;let end=tokenAtCursor.end;if(["SYMBOL","FUNCTION"].includes(tokenAtCursor.type)){start=tokenAtCursor.start;}
const tokens=this.composer.currentTokens;value+="(";const currentTokenIndex=tokens.map((token)=>token.start).indexOf(tokenAtCursor.start);if(currentTokenIndex+1<tokens.length){const nextToken=tokens[currentTokenIndex+1];if(nextToken?.type==="LEFT_PAREN"){end++;}}
this.composer.changeComposerCursorSelection(start,end);this.composer.replaceComposerCursorSelection(value);},});autoCompleteProviders.add("pivot_ids",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;const pivotFunction=["PIVOT.VALUE","PIVOT.HEADER","PIVOT"];if(!functionContext||!pivotFunction.includes(functionContext.parent.toUpperCase())||functionContext.argPosition!==0){return;}
const pivotIds=this.getters.getPivotIds();if(pivotIds.includes(tokenAtCursor.value)){return;}
return pivotIds.map((pivotId)=>{const definition=this.getters.getPivotCoreDefinition(pivotId);const formulaId=this.getters.getPivotFormulaId(pivotId);const str=`${formulaId}`;return{text:str,description:definition.name,htmlContent:[{value:str,color:tokenColors.NUMBER}],fuzzySearchKey:str+definition.name,alwaysExpanded:true,};}).filter(isDefined);},selectProposal:insertTokenAfterLeftParenthesis,});autoCompleteProviders.add("pivot_measures",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;if(functionContext?.parent.toUpperCase()!=="PIVOT.VALUE"||functionContext.argPosition!==1){return[];}
const pivotFormulaId=extractFormulaIdFromToken(tokenAtCursor);const pivotId=this.getters.getPivotId(pivotFormulaId);if(!pivotId||!this.getters.isExistingPivot(pivotId)){return[];}
const pivot=this.getters.getPivot(pivotId);pivot.init();if(!pivot.isValid()){return[];}
return pivot.definition.measures.map((measure)=>{if(measure.fieldName==="__count"){const text='"__count"';return{text,description:_t("Count"),htmlContent:[{value:text,color:tokenColors.STRING}],fuzzySearchKey:_t("Count")+text,};}
return makeMeasureProposal(measure);}).filter(isDefined);},selectProposal:insertTokenAfterArgSeparator,});autoCompleteProviders.add("pivot_group_fields",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;if(!functionContext||(!canAutoCompletePivotField(tokenAtCursor)&&!canAutoCompletePivotHeaderField(tokenAtCursor))){return;}
const pivotFormulaId=extractFormulaIdFromToken(tokenAtCursor);const pivotId=this.getters.getPivotId(pivotFormulaId);if(!pivotId||!this.getters.isExistingPivot(pivotId)){return;}
const pivot=this.getters.getPivot(pivotId);pivot.init();const fields=pivot.getFields();const{columns,rows}=pivot.definition;let args=functionContext.args;if(functionContext?.parent.toUpperCase()==="PIVOT.VALUE"){args=args.filter((ast,index)=>index%2===0);args=args.slice(1,functionContext.argPosition);}
else{args=args.filter((ast,index)=>index%2===1);}
const argGroupBys=args.map((ast)=>ast?.value).filter(isDefined);const colFields=columns.map((groupBy)=>groupBy.nameWithGranularity);const rowFields=rows.map((groupBy)=>groupBy.nameWithGranularity);const proposals=[];let previousGroupBy=["ARG_SEPARATOR","SPACE"].includes(tokenAtCursor.type)?argGroupBys.at(-1):argGroupBys.at(-2);const isPositionalSupported=supportedPivotPositionalFormulaRegistry.get(pivot.type);if(isPositionalSupported&&previousGroupBy?.startsWith("#")){previousGroupBy=previousGroupBy.slice(1);}
if(previousGroupBy===undefined){proposals.push(colFields[0]);proposals.push(rowFields[0]);}
if(rowFields.includes(previousGroupBy)){const nextRowGroupBy=rowFields[rowFields.indexOf(previousGroupBy)+1];proposals.push(nextRowGroupBy);proposals.push(colFields[0]);}
if(colFields.includes(previousGroupBy)){const nextGroupBy=colFields[colFields.indexOf(previousGroupBy)+1];proposals.push(nextGroupBy);}
const groupBys=proposals.filter(isDefined);return groupBys.map((groupBy)=>{const[fieldName,granularity]=groupBy.split(":");const field=fields[fieldName];return field?makeFieldProposal(field,granularity):undefined;}).concat(groupBys.map((groupBy)=>{if(!isPositionalSupported){return undefined;}
const fieldName=groupBy.split(":")[0];const field=fields[fieldName];if(!field){return undefined;}
const positionalFieldArg=`"#${groupBy}"`;return{text:positionalFieldArg,description:_t("%s (positional)",field.string)+(field.help?` (${field.help})`:""),htmlContent:[{value:positionalFieldArg,color:tokenColors.STRING}],fuzzySearchKey:field.string+positionalFieldArg,};})).filter(isDefined);},selectProposal:insertTokenAfterArgSeparator,});function canAutoCompletePivotField(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;return(functionContext?.parent.toUpperCase()==="PIVOT.VALUE"&&functionContext.argPosition>=2&&functionContext.argPosition%2===0);}
function canAutoCompletePivotHeaderField(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;return(functionContext?.parent.toUpperCase()==="PIVOT.HEADER"&&functionContext.argPosition>=1&&functionContext.argPosition%2===1);}
autoCompleteProviders.add("pivot_group_values",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;if(!functionContext||!tokenAtCursor||(!canAutoCompletePivotGroupValue(tokenAtCursor)&&!canAutoCompletePivotHeaderGroupValue(tokenAtCursor))){return;}
const pivotFormulaId=extractFormulaIdFromToken(tokenAtCursor);const pivotId=this.getters.getPivotId(pivotFormulaId);if(!pivotId||!this.getters.isExistingPivot(pivotId)){return;}
const pivot=this.getters.getPivot(pivotId);if(!pivot.isValid()){return;}
const argPosition=functionContext.argPosition;const groupByField=tokenAtCursor.functionContext?.args[argPosition-1]?.value;if(!groupByField){return;}
let dimension;try{dimension=pivot.definition.getDimension(groupByField);}
catch(error){return undefined;}
if(dimension.granularity==="month_number"){return Object.values(MONTHS).map((monthDisplayName,index)=>({text:`${index + 1}`,fuzzySearchKey:monthDisplayName.toString(),description:monthDisplayName.toString(),htmlContent:[{value:`${index + 1}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="quarter_number"){return[1,2,3,4].map((quarter)=>({text:`${quarter}`,fuzzySearchKey:`${quarter}`,description:_t("Quarter %s",quarter),htmlContent:[{value:`${quarter}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="day_of_month"){return range(1,32).map((dayOfMonth)=>({text:`${dayOfMonth}`,fuzzySearchKey:`${dayOfMonth}`,description:"",htmlContent:[{value:`${dayOfMonth}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="iso_week_number"){return range(0,54).map((isoWeekNumber)=>({text:`${isoWeekNumber}`,fuzzySearchKey:`${isoWeekNumber}`,description:"",htmlContent:[{value:`${isoWeekNumber}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="day_of_week"){return range(1,8).map((dayOfWeekNumber)=>({text:`${dayOfWeekNumber}`,fuzzySearchKey:`${dayOfWeekNumber}`,description:"",htmlContent:[{value:`${dayOfWeekNumber}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="hour_number"){return range(0,24).map((hourNumber)=>({text:`${hourNumber}`,fuzzySearchKey:`${hourNumber}`,description:"",htmlContent:[{value:`${hourNumber}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="minute_number"){return range(0,60).map((minuteNumber)=>({text:`${minuteNumber}`,fuzzySearchKey:`${minuteNumber}`,description:"",htmlContent:[{value:`${minuteNumber}`,color:tokenColors.NUMBER}],}));}
else if(dimension.granularity==="second_number"){return range(0,60).map((secondNumber)=>({text:`${secondNumber}`,fuzzySearchKey:`${secondNumber}`,description:"",htmlContent:[{value:`${secondNumber}`,color:tokenColors.NUMBER}],}));}
return pivot.getPossibleFieldValues(dimension).map(({value,label})=>{const isString=typeof value==="string";const text=isString?`"${value}"`:value.toString();const color=isString?tokenColors.STRING:tokenColors.NUMBER;const usedLabel=label===value?"":label;return{text,description:usedLabel,htmlContent:[{value:text,color}],fuzzySearchKey:text+usedLabel,};});},selectProposal:insertTokenAfterArgSeparator,});function canAutoCompletePivotGroupValue(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;return(functionContext?.parent.toUpperCase()==="PIVOT.VALUE"&&functionContext.argPosition>=2&&functionContext.argPosition%2===1);}
function canAutoCompletePivotHeaderGroupValue(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;return(functionContext?.parent.toUpperCase()==="PIVOT.HEADER"&&functionContext.argPosition>=1&&functionContext.argPosition%2===0);}
autoCompleteProviders.add("sheet_names",{sequence:150,autoSelectFirstProposal:true,getProposals(tokenAtCursor){if(tokenAtCursor.type==="SYMBOL"||(tokenAtCursor.type==="UNKNOWN"&&tokenAtCursor.value.startsWith("'"))){return this.getters.getSheetIds().map((sheetId)=>{const sheetName=getCanonicalSymbolName(this.getters.getSheetName(sheetId));return{text:sheetName,fuzzySearchKey:sheetName.startsWith("'")?sheetName:"'"+sheetName,};});}
return[];},selectProposal(tokenAtCursor,value){const start=tokenAtCursor.start;const end=tokenAtCursor.end;this.composer.changeComposerCursorSelection(start,end);this.composer.replaceComposerCursorSelection(value+"!");},});const clickableCellRegistry=new Registry();clickableCellRegistry.add("link",{condition:(position,getters)=>{return!!getters.getEvaluatedCell(position).link;},execute:(position,env,isMiddleClick)=>openLink(env.model.getters.getEvaluatedCell(position).link,env,isMiddleClick),title:(position,getters)=>{const link=getters.getEvaluatedCell(position).link;if(!link)
return"";if(link.isExternal){return _t("Go to url: %(url)s",{url:link.url});}
else{return _t("Go to %(label)s",{label:link.label});}},sequence:5,});const inverseCommandRegistry=new Registry().add("ADD_COLUMNS_ROWS",inverseAddColumnsRows).add("REMOVE_COLUMNS_ROWS",inverseRemoveColumnsRows).add("ADD_MERGE",inverseAddMerge).add("REMOVE_MERGE",inverseRemoveMerge).add("CREATE_SHEET",inverseCreateSheet).add("DELETE_SHEET",inverseDeleteSheet).add("DUPLICATE_SHEET",inverseDuplicateSheet).add("CREATE_FIGURE",inverseCreateFigure).add("CREATE_CHART",inverseCreateChart).add("HIDE_COLUMNS_ROWS",inverseHideColumnsRows).add("UNHIDE_COLUMNS_ROWS",inverseUnhideColumnsRows).add("CREATE_TABLE_STYLE",inverseCreateTableStyle).add("ADD_PIVOT",inverseAddPivot);for(const cmd of coreTypes.values()){if(!inverseCommandRegistry.contains(cmd)){inverseCommandRegistry.add(cmd,identity);}}
function identity(cmd){return[cmd];}
function inverseAddPivot(cmd){return[{type:"REMOVE_PIVOT",pivotId:cmd.pivotId,},];}
function inverseAddColumnsRows(cmd){const elements=[];let start=cmd.base;if(cmd.position==="after"){start++;}
for(let i=0;i<cmd.quantity;i++){elements.push(i+start);}
return[{type:"REMOVE_COLUMNS_ROWS",dimension:cmd.dimension,elements,sheetId:cmd.sheetId,sheetName:cmd.sheetName,},];}
function inverseAddMerge(cmd){return[{type:"REMOVE_MERGE",sheetId:cmd.sheetId,target:cmd.target}];}
function inverseRemoveMerge(cmd){return[{type:"ADD_MERGE",sheetId:cmd.sheetId,target:cmd.target}];}
function inverseCreateSheet(cmd){return[{type:"DELETE_SHEET",sheetId:cmd.sheetId,sheetName:cmd.name}];}
function inverseDuplicateSheet(cmd){return[{type:"DELETE_SHEET",sheetId:cmd.sheetIdTo,sheetName:""}];}
function inverseRemoveColumnsRows(cmd){const commands=[];const elements=[...cmd.elements].sort((a,b)=>a-b);for(const group of groupConsecutive(elements)){const column=group[0]===0?0:group[0]-1;const position=group[0]===0?"before":"after";commands.push({type:"ADD_COLUMNS_ROWS",dimension:cmd.dimension,quantity:group.length,base:column,sheetId:cmd.sheetId,sheetName:cmd.sheetName,position,});}
return commands;}
function inverseDeleteSheet(cmd){return[{type:"CREATE_SHEET",sheetId:cmd.sheetId,position:1,name:cmd.sheetName}];}
function inverseCreateFigure(cmd){return[{type:"DELETE_FIGURE",figureId:cmd.figureId,sheetId:cmd.sheetId}];}
function inverseCreateChart(cmd){return[{type:"DELETE_FIGURE",figureId:cmd.figureId,sheetId:cmd.sheetId}];}
function inverseHideColumnsRows(cmd){return[{type:"UNHIDE_COLUMNS_ROWS",sheetId:cmd.sheetId,dimension:cmd.dimension,elements:cmd.elements,},];}
function inverseUnhideColumnsRows(cmd){return[{type:"HIDE_COLUMNS_ROWS",sheetId:cmd.sheetId,dimension:cmd.dimension,elements:cmd.elements,},];}
function inverseCreateTableStyle(cmd){return[{type:"REMOVE_TABLE_STYLE",tableStyleId:cmd.tableStyleId}];}
const numberFormatMenuRegistry=new Registry();numberFormatMenuRegistry.add("format_number_automatic",{...formatNumberAutomatic,id:"format_number_automatic",sequence:10,}).add("format_number_plain_text",{...formatNumberPlainText,id:"format_number_plain_text",sequence:15,separator:true,}).add("format_number_number",{...formatNumberNumber,id:"format_number_number",sequence:20,}).add("format_number_percent",{...formatNumberPercent,id:"format_number_percent",sequence:30,separator:true,}).add("format_number_currency",{...formatNumberCurrency,id:"format_number_currency",sequence:40,}).add("format_number_accounting",{...formatNumberAccounting,id:"format_number_accounting",sequence:45,}).add("format_number_currency_rounded",{...formatNumberCurrencyRounded,id:"format_number_currency_rounded",sequence:50,}).add("format_custom_currency",{...formatCustomCurrency,id:"format_custom_currency",sequence:60,separator:true,}).add("format_number_date",{...formatNumberDate,id:"format_number_date",sequence:70,}).add("format_number_time",{...formatNumberTime,id:"format_number_time",sequence:80,}).add("format_number_date_time",{...formatNumberDateTime,id:"format_number_date_time",sequence:90,}).add("format_number_duration",{...formatNumberDuration,id:"format_number_duration",sequence:100,separator:true,}).add("more_formats",{...moreFormats,id:"more_formats",sequence:120,});function getCustomNumberFormats(env){const defaultFormats=new Set(numberFormatMenuRegistry.getAll().map((f)=>(typeof f.format==="function"?f.format(env):f.format)));const customFormats=new Map();for(const sheetId of env.model.getters.getSheetIds()){const cells=env.model.getters.getEvaluatedCells(sheetId);for(const cellId in cells){const cell=cells[cellId];if(cell.format&&!customFormats.has(cell.format)&&!defaultFormats.has(cell.format)){const formatType=getNumberFormatType(cell.format);if(formatType==="date"||formatType==="currency"){customFormats.set(cell.format,createFormatActionSpec({descriptionValue:formatType==="currency"?1000:EXAMPLE_DATE,format:cell.format,name:cell.format,}));}}}}
return[...customFormats.values()];}
const getNumberFormatType=memoize((format)=>{if(isDateTimeFormat(format)){return"date";}
else if(format.includes("[$")){return"currency";}
return"number";});const formatNumberMenuItemSpec={name:_t("More formats"),icon:"o-spreadsheet-Icon.NUMBER_FORMATS",children:[(env)=>{const customFormats=getCustomNumberFormats(env).map((action)=>({...action,sequence:110,}));if(customFormats.length>0){customFormats[customFormats.length-1].separator=true;}
return createActions([...numberFormatMenuRegistry.getAll(),...customFormats]);},],};function getSheetMenuRegistry(args){const sheetMenuRegistry=new MenuItemRegistry();sheetMenuRegistry.add("delete",{...deleteSheet,sequence:10,}).add("hide_sheet",{...hideSheet,sequence:20,}).add("duplicate",{...duplicateSheet,sequence:30,separator:true,}).add("rename",{...renameSheet(args),sequence:40,}).add("change_color",{...changeSheetColor(args),sequence:50,separator:true,}).add("move_right",{...sheetMoveRight,sequence:60,}).add("move_left",{...sheetMoveLeft,sequence:70,});return sheetMenuRegistry;}
const topbarMenuRegistry=new MenuItemRegistry();topbarMenuRegistry.add("file",{name:_t("File"),sequence:10,}).addChild("settings",["file"],{name:_t("Settings"),sequence:200,execute:(env)=>env.openSidePanel("Settings"),isEnabled:(env)=>!env.isSmall,icon:"o-spreadsheet-Icon.COG",}).add("edit",{name:_t("Edit"),sequence:20,}).addChild("undo",["edit"],{...undo,sequence:10,}).addChild("redo",["edit"],{...redo,sequence:20,separator:true,}).addChild("copy",["edit"],{...copy,sequence:30,}).addChild("cut",["edit"],{...cut,sequence:40,}).addChild("paste",["edit"],{...paste,sequence:50,}).addChild("paste_special",["edit"],{...pasteSpecial,sequence:60,separator:true,}).addChild("paste_special_value",["edit","paste_special"],{...pasteSpecialValue,sequence:10,}).addChild("paste_special_format",["edit","paste_special"],{...pasteSpecialFormat,sequence:20,}).addChild("edit_table",["edit"],{...editTable,isVisible:SELECTION_CONTAINS_SINGLE_TABLE,sequence:60,}).addChild("find_and_replace",["edit"],{...findAndReplace,sequence:65,separator:true,}).addChild("delete",["edit"],{name:_t("Delete"),icon:"o-spreadsheet-Icon.TRASH",sequence:70,}).addChild("edit_delete_cell_values",["edit","delete"],{...deleteValues,sequence:10,}).addChild("edit_delete_row",["edit","delete"],{...deleteRows,sequence:20,}).addChild("edit_delete_column",["edit","delete"],{...deleteCols,sequence:30,}).addChild("edit_delete_cell_shift_up",["edit","delete"],{...deleteCellShiftUp,sequence:40,}).addChild("edit_delete_cell_shift_left",["edit","delete"],{...deleteCellShiftLeft,sequence:50,}).addChild("edit_unhide_columns",["edit"],{...unhideAllCols,sequence:80,}).addChild("edit_unhide_rows",["edit"],{...unhideAllRows,sequence:80,}).add("view",{name:_t("View"),sequence:30,}).addChild("unfreeze_panes",["view"],{...unFreezePane,sequence:4,}).addChild("freeze_panes",["view"],{...freezePane,sequence:5,}).addChild("unfreeze_rows",["view","freeze_panes"],{...unFreezeRows,sequence:5,}).addChild("freeze_first_row",["view","freeze_panes"],{...freezeFirstRow,sequence:10,}).addChild("freeze_second_row",["view","freeze_panes"],{...freezeSecondRow,sequence:15,}).addChild("freeze_current_row",["view","freeze_panes"],{...freezeCurrentRow,sequence:20,separator:true,}).addChild("unfreeze_columns",["view","freeze_panes"],{...unFreezeCols,sequence:25,}).addChild("freeze_first_col",["view","freeze_panes"],{...freezeFirstCol,sequence:30,}).addChild("freeze_second_col",["view","freeze_panes"],{...freezeSecondCol,sequence:35,}).addChild("freeze_current_col",["view","freeze_panes"],{...freezeCurrentCol,sequence:40,}).addChild("group_headers",["view"],{name:_t("Group"),sequence:15,separator:true,icon:"o-spreadsheet-Icon.PLUS_IN_BOX",isVisible:IS_ONLY_ONE_RANGE,}).addChild("group_columns",["view","group_headers"],{...groupColumns,sequence:5,}).addChild("ungroup_columns",["view","group_headers"],{...ungroupColumns,isVisible:(env)=>canUngroupHeaders(env,"COL"),sequence:10,}).addChild("group_rows",["view","group_headers"],{...groupRows,sequence:15,}).addChild("ungroup_rows",["view","group_headers"],{...ungroupRows,isVisible:(env)=>canUngroupHeaders(env,"ROW"),sequence:20,}).addChild("show",["view"],{name:_t("Show"),sequence:1,icon:"o-spreadsheet-Icon.SHOW",}).addChild("view_gridlines",["view","show"],{...viewGridlines,sequence:5,}).addChild("view_formulas",["view","show"],{...viewFormulas,sequence:10,}).addChild("view_irregularity_map",["view"],{...irregularityMap,sequence:40,separator:true,}).add("insert",{name:_t("Insert"),sequence:40,}).addChild("insert_row",["insert"],{...insertRow,sequence:10,}).addChild("insert_row_before",["insert","insert_row"],{...topBarInsertRowsBefore,sequence:10,}).addChild("insert_row_after",["insert","insert_row"],{...topBarInsertRowsAfter,sequence:20,}).addChild("insert_column",["insert"],{...insertCol,sequence:20,}).addChild("insert_column_before",["insert","insert_column"],{...topBarInsertColsBefore,sequence:10,}).addChild("insert_column_after",["insert","insert_column"],{...topBarInsertColsAfter,sequence:20,}).addChild("insert_cell",["insert"],{...insertCell,sequence:30,}).addChild("insert_cell_down",["insert","insert_cell"],{...insertCellShiftDown,name:_t("Shift down"),sequence:10,}).addChild("insert_cell_right",["insert","insert_cell"],{...insertCellShiftRight,name:_t("Shift right"),sequence:20,}).addChild("insert_sheet",["insert"],{...insertSheet,sequence:40,separator:true,}).addChild("insert_chart",["insert"],{...insertChart,sequence:50,}).addChild("insert_pivot",["insert"],{...insertPivot,sequence:52,}).addChild("insert_image",["insert"],{...insertImage,sequence:55,}).addChild("insert_table",["insert"],{...insertTable,sequence:57,}).addChild("insert_function",["insert"],{...insertFunction,sequence:60,}).addChild("insert_function_sum",["insert","insert_function"],{...insertFunctionSum,sequence:0,}).addChild("insert_function_average",["insert","insert_function"],{...insertFunctionAverage,sequence:10,}).addChild("insert_function_count",["insert","insert_function"],{...insertFunctionCount,sequence:20,}).addChild("insert_function_max",["insert","insert_function"],{...insertFunctionMax,sequence:30,}).addChild("insert_function_min",["insert","insert_function"],{...insertFunctionMin,sequence:40,separator:true,}).addChild("categorie_function_all",["insert","insert_function"],{...categorieFunctionAll,sequence:50,}).addChild("categories_function_list",["insert","insert_function"],categoriesFunctionListMenuBuilder).addChild("insert_link",["insert"],{...insertLink,separator:true,sequence:70,}).addChild("insert_checkbox",["insert"],{...insertCheckbox,sequence:80,}).addChild("insert_dropdown",["insert"],{...insertDropdown,separator:true,sequence:90,}).add("format",{name:_t("Format"),sequence:50}).addChild("format_number",["format"],{...formatNumberMenuItemSpec,name:_t("Number"),sequence:10,separator:true,}).addChild("format_bold",["format"],{...formatBold,sequence:20,}).addChild("format_italic",["format"],{...formatItalic,sequence:30,}).addChild("format_underline",["format"],{...formatUnderline,sequence:40,}).addChild("format_strikethrough",["format"],{...formatStrikethrough,sequence:50,separator:true,}).addChild("format_font_size",["format"],{...formatFontSize,sequence:60,separator:true,}).addChild("format_alignment",["format"],{...formatAlignment,sequence:70,}).addChild("format_alignment_left",["format","format_alignment"],{...formatAlignmentLeft,sequence:10,}).addChild("format_alignment_center",["format","format_alignment"],{...formatAlignmentCenter,sequence:20,}).addChild("format_alignment_right",["format","format_alignment"],{...formatAlignmentRight,sequence:30,separator:true,}).addChild("format_alignment_top",["format","format_alignment"],{...formatAlignmentTop,sequence:40,}).addChild("format_alignment_middle",["format","format_alignment"],{...formatAlignmentMiddle,sequence:50,}).addChild("format_alignment_bottom",["format","format_alignment"],{...formatAlignmentBottom,sequence:60,separator:true,}).addChild("format_wrapping",["format"],{...formatWrappingIcon,sequence:80,separator:true,}).addChild("format_wrapping_overflow",["format","format_wrapping"],{...formatWrappingOverflow,sequence:10,}).addChild("format_wrapping_wrap",["format","format_wrapping"],{...formatWrappingWrap,sequence:20,}).addChild("format_wrapping_clip",["format","format_wrapping"],{...formatWrappingClip,sequence:30,}).addChild("format_cf",["format"],{...formatCF,sequence:90,separator:true,}).addChild("format_clearFormat",["format"],{...clearFormat,sequence:100,separator:true,}).add("data",{name:_t("Data"),sequence:60,}).addChild("sort_range",["data"],{...sortRange,sequence:10,separator:true,}).addChild("sort_ascending",["data","sort_range"],{...sortAscending,sequence:10,}).addChild("sort_descending",["data","sort_range"],{...sortDescending,sequence:20,}).addChild("data_cleanup",["data"],{...dataCleanup,sequence:15,}).addChild("remove_duplicates",["data","data_cleanup"],{...removeDuplicates,sequence:10,}).addChild("trim_whitespace",["data","data_cleanup"],{...trimWhitespace,sequence:20,}).addChild("split_to_columns",["data"],{...splitToColumns,sequence:20,}).addChild("data_validation",["data"],{name:_t("Data Validation"),execute:(env)=>{env.openSidePanel("DataValidation");},isEnabled:(env)=>!env.isSmall,icon:"o-spreadsheet-Icon.DATA_VALIDATION",sequence:30,separator:true,}).addChild("add_remove_data_filter",["data"],{...createRemoveFilter,sequence:40,separator:true,}).addChild("data_sources_data",["data"],(env)=>{const sequence=50;return env.model.getters.getPivotIds().map((pivotId,index)=>{const highlightProvider={get highlights(){return getPivotHighlights(env.model.getters,pivotId);},};return{id:`item_pivot_${env.model.getters.getPivotFormulaId(pivotId)}`,name:env.model.getters.getPivotDisplayName(pivotId),sequence:sequence+index,isReadonlyAllowed:true,execute:(env)=>env.openSidePanel("PivotSidePanel",{pivotId}),isEnabled:(env)=>!env.isSmall,onStartHover:(env)=>env.getStore(HighlightStore).register(highlightProvider),onStopHover:(env)=>env.getStore(HighlightStore).unRegister(highlightProvider),icon:"o-spreadsheet-Icon.PIVOT",separator:index===env.model.getters.getPivotIds().length-1,secondaryIcon:(env)=>env.model.getters.isPivotUnused(pivotId)?"o-spreadsheet-Icon.UNUSED_PIVOT_WARNING":undefined,};});}).addChild("reinsert_dynamic_pivot",["data"],reinsertDynamicPivotMenu).addChild("reinsert_static_pivot",["data"],reinsertStaticPivotMenu);class TopBarComponentRegistry extends Registry{mapping={};uuidGenerator=new UuidGenerator();replace(name,value){const component={...value,id:this.uuidGenerator.uuidv4()};return super.replace(name,component);}
getAllOrdered(){return this.getAll().sort((a,b)=>a.sequence-b.sequence);}}
const topbarComponentRegistry=new TopBarComponentRegistry();class LocalTransportService{listeners=[];async sendMessage(message){for(const{callback}of this.listeners){callback(message);}}
onNewMessage(id,callback){this.listeners.push({id,callback});}
leave(id){this.listeners=this.listeners.filter((listener)=>listener.id!==id);}}
class ImageProvider{fileStore;constructor(fileStore){this.fileStore=fileStore;}
async requestImage(){const file=await this.userImageUpload();const path=await this.fileStore.upload(file);const size=await this.getImageOriginalSize(path);return{path,size,mimetype:file.type};}
async uploadFile(file){const path=await this.fileStore.upload(file);const size=await this.getImageOriginalSize(path);return{path,size,mimetype:file.type};}
userImageUpload(){return new Promise((resolve,reject)=>{const input=document.createElement("input");input.setAttribute("type","file");input.setAttribute("accept","image/*");input.addEventListener("change",async()=>{if(input.files===null||input.files.length!==1){reject();}
else{resolve(input.files[0]);}});input.click();});}
getImageOriginalSize(path){return new Promise((resolve,reject)=>{const image=new Image();image.addEventListener("load",()=>{const size={width:image.width,height:image.height};resolve(size);});image.addEventListener("error",reject);image.src=path;});}}
const RIPPLE_KEY_FRAMES=[{transform:"scale(0)"},{transform:"scale(0.8)",offset:0.33},{opacity:"0",transform:"scale(1)",offset:1},];css`
  .o-ripple {
    z-index: 1;
  }
`;class RippleEffect extends Component{static template="o-spreadsheet-RippleEffect";static props={x:String,y:String,color:String,opacity:Number,duration:Number,width:Number,height:Number,offsetY:Number,offsetX:Number,allowOverflow:Boolean,onAnimationEnd:Function,style:String,};rippleRef=useRef("ripple");setup(){let animation=undefined;onMounted(()=>{const rippleEl=this.rippleRef.el;if(!rippleEl||!rippleEl.animate)
return;animation=rippleEl.animate(RIPPLE_KEY_FRAMES,{duration:this.props.duration,easing:"ease-out",});animation.addEventListener("finish",this.props.onAnimationEnd);});onWillUnmount(()=>{animation?.removeEventListener("finish",this.props.onAnimationEnd);});}
get rippleStyle(){const{x,y,width,height}=this.props;const offsetX=this.props.offsetX||0;const offsetY=this.props.offsetY||0;return cssPropertiesToCss({transform:"scale(0)",left:x,top:y,"margin-left":`${-width / 2 + offsetX}px`,"margin-top":`${-height / 2 + offsetY}px`,width:`${width}px`,height:`${height}px`,background:this.props.color,"border-radius":"100%",opacity:`${this.props.opacity}`,});}}
class Ripple extends Component{static template="o-spreadsheet-Ripple";static props={color:{type:String,optional:true},opacity:{type:Number,optional:true},duration:{type:Number,optional:true},ignoreClickPosition:{type:Boolean,optional:true},width:{type:Number,optional:true},height:{type:Number,optional:true},offsetY:{type:Number,optional:true},offsetX:{type:Number,optional:true},allowOverflow:{type:Boolean,optional:true},enabled:{type:Boolean,optional:true},onAnimationEnd:{type:Function,optional:true},slots:Object,class:{type:String,optional:true},};static components={RippleEffect};static defaultProps={color:"#aaaaaa",opacity:0.4,duration:800,enabled:true,onAnimationEnd:()=>{},class:"",};childContainer=useRef("childContainer");state=useState({ripples:[]});currentId=1;onClick(ev){if(!this.props.enabled)
return;const containerEl=this.childContainer.el;if(!containerEl)
return;const rect=this.getRippleChildRectInfo();const{x,y,width,height}=rect;const maxDim=Math.max(width,height);const rippleRect={x:ev.clientX-x,y:ev.clientY-y,width:this.props.width||maxDim*2.85,height:this.props.height||maxDim*2.85,};this.state.ripples.push({rippleRect,id:this.currentId++});}
getRippleStyle(){const containerEl=this.childContainer.el;if(!containerEl||containerEl.childElementCount!==1||!containerEl.firstElementChild){return"";}
const rect=this.getRippleChildRectInfo();return cssPropertiesToCss({top:rect.marginTop+"px",left:rect.marginLeft+"px",width:rect.width+"px",height:rect.height+"px",});}
getRippleChildRectInfo(){const el=this.childContainer.el;if(!el)
throw new Error("No child container element found");if(el.childElementCount!==1||!el.firstElementChild){const boundingRect=getBoundingRectAsPOJO(el);return{...boundingRect,marginLeft:0,marginTop:0};}
const childEl=el.firstElementChild;const margins=getElementMargins(childEl);const boundingRect=getBoundingRectAsPOJO(childEl);return{...boundingRect,marginLeft:margins.left,marginTop:margins.top,};}
removeRipple(id){const index=this.state.ripples.findIndex((r)=>r.id===id);if(index===-1)
return;this.state.ripples.splice(index,1);}
getRippleEffectProps(id){const rect=this.state.ripples.find((r)=>r.id===id)?.rippleRect;if(!rect)
throw new Error("Cannot find a ripple with the id "+id);return{color:this.props.color,opacity:this.props.opacity,duration:this.props.duration,x:this.props.ignoreClickPosition?"50%":rect.x+"px",y:this.props.ignoreClickPosition?"50%":rect.y+"px",width:rect.width,height:rect.height,offsetX:this.props.offsetX||0,offsetY:this.props.offsetY||0,allowOverflow:this.props.allowOverflow||false,style:this.getRippleStyle(),onAnimationEnd:()=>this.removeRipple(id),};}}
function interactiveRenameSheet(env,sheetId,name,errorCallback){const result=env.model.dispatch("RENAME_SHEET",{sheetId,newName:name,oldName:env.model.getters.getSheetName(sheetId),});if(result.reasons.includes("MissingSheetName")){env.raiseError(_t("The sheet name cannot be empty."),errorCallback);}
else if(result.reasons.includes("DuplicatedSheetName")){env.raiseError(_t("A sheet with the name %s already exists. Please select another name.",name),errorCallback);}
else if(result.reasons.includes("ForbiddenCharactersInSheetName")){env.raiseError(_t("Some used characters are not allowed in a sheet name (Forbidden characters are %s).",FORBIDDEN_SHEETNAME_CHARS.join(" ")),errorCallback);}}
css`
  .o-sheet {
    padding: 0 15px;
    padding-right: 10px;
    height: ${DESKTOP_BOTTOMBAR_HEIGHT}px;
    border-left: 1px solid #c1c1c1;
    border-right: 1px solid #c1c1c1;
    margin-left: -1px;
    cursor: pointer;
    &:hover {
      background-color: rgba(0, 0, 0, 0.08);
    }

    &.active {
      color: ${ACTION_COLOR};
      background-color: #ffffff;
      box-shadow: 0 1px 3px 1px rgba(60, 64, 67, 0.15);
    }

    .o-sheet-icon {
      z-index: 1;

      &:hover {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }

    .o-sheet-name {
      outline: none;
      padding: 2px 4px;

      &.o-sheet-name-editable {
        border-radius: 2px;
        border: 2px solid mediumblue;
        /* negative margins so nothing moves when the border is added */
        margin-left: -2px;
        margin-right: -2px;
      }
    }

    .o-sheet-color {
      bottom: 0;
      left: 0;
      height: 6px;
      z-index: 1;
      width: calc(100% - 1px);
    }
  }

  .o-spreadshet-mobile .o-sheet {
    height: ${MOBILE_BOTTOMBAR_HEIGHT}px;
  }
`;class BottomBarSheet extends Component{static template="o-spreadsheet-BottomBarSheet";static props={sheetId:String,openContextMenu:Function,style:{type:String,optional:true},onMouseDown:{type:Function,optional:true},};static components={Ripple,ColorPicker};static defaultProps={onMouseDown:()=>{},style:"",};state=useState({isEditing:false,pickerOpened:false});sheetDivRef=useRef("sheetDiv");sheetNameRef=useRef("sheetNameSpan");editionState="initializing";DOMFocusableElementStore;setup(){onPatched(()=>{if(this.sheetNameRef.el&&this.state.isEditing&&this.editionState==="initializing"){this.editionState="editing";this.focusInputAndSelectContent();}});this.DOMFocusableElementStore=useStore(DOMFocusableElementStore);useExternalListener(window,"click",()=>(this.state.pickerOpened=false));useEffect((sheetId)=>{if(this.props.sheetId===sheetId){this.scrollToSheet();}},()=>[this.env.model.getters.getActiveSheetId()]);}
focusInputAndSelectContent(){if(!this.state.isEditing||!this.sheetNameRef.el)
return;this.sheetNameRef.el.focus();const selection=window.getSelection();if(selection&&this.sheetNameRef.el.firstChild){selection.setBaseAndExtent(this.sheetNameRef.el.firstChild,0,this.sheetNameRef.el.firstChild,this.sheetNameRef.el.textContent?.length||0);}}
scrollToSheet(){this.sheetDivRef.el?.scrollIntoView?.({behavior:"smooth",inline:"nearest",});}
onFocusOut(){if(this.state.isEditing&&this.editionState!=="initializing"){this.stopEdition();}}
onClick(){if(!this.env.isMobile()){return;}
this.activateSheet();}
onMouseDown(ev){if(this.env.isMobile()){return;}
this.activateSheet();this.props.onMouseDown(ev);}
activateSheet(){this.env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:this.env.model.getters.getActiveSheetId(),sheetIdTo:this.props.sheetId,});this.scrollToSheet();}
onDblClick(){if(this.env.model.getters.isReadonly()){return;}
this.startEdition();}
onKeyDown(ev){if(!this.state.isEditing)
return;if(ev.key==="Enter"){ev.preventDefault();this.stopEdition();this.DOMFocusableElementStore.focus();}
if(ev.key==="Escape"){this.cancelEdition();this.DOMFocusableElementStore.focus();}}
onMouseEventSheetName(ev){if(this.state.isEditing)
ev.stopPropagation();}
startEdition(){this.state.isEditing=true;this.editionState="initializing";}
stopEdition(){const input=this.sheetNameRef.el;if(!this.state.isEditing||!input)
return;this.state.isEditing=false;this.editionState="initializing";input.blur();const inputValue=this.getInputContent()||"";input.innerText=inputValue;interactiveRenameSheet(this.env,this.props.sheetId,inputValue,()=>this.startEdition());}
cancelEdition(){this.state.isEditing=false;this.editionState="initializing";this.sheetNameRef.el?.blur();this.setInputContent(this.sheetName);}
onIconClick(ev){if(!this.isSheetActive){this.activateSheet();}
this.props.openContextMenu(this.contextMenuRegistry,ev);}
onContextMenu(ev){if(!this.isSheetActive){this.activateSheet();}
this.props.openContextMenu(this.contextMenuRegistry,ev);}
getInputContent(){return this.sheetNameRef.el?.textContent;}
setInputContent(content){if(this.sheetNameRef.el)
this.sheetNameRef.el.textContent=content;}
onColorPicked(color){this.state.pickerOpened=false;this.env.model.dispatch("COLOR_SHEET",{sheetId:this.props.sheetId,color});}
get colorPickerAnchorRect(){const button=this.sheetDivRef.el;return getBoundingRectAsPOJO(button);}
get contextMenuRegistry(){return getSheetMenuRegistry({renameSheetCallback:()=>{this.scrollToSheet();this.startEdition();},openSheetColorPickerCallback:()=>{this.state.pickerOpened=true;},});}
get isSheetActive(){return this.env.model.getters.getActiveSheetId()===this.props.sheetId;}
get sheetName(){return this.env.model.getters.getSheetName(this.props.sheetId);}
get sheetColorStyle(){const color=this.env.model.getters.getSheet(this.props.sheetId).color||"";return cssPropertiesToCss({background:color});}}
const selectionStatisticFunctions=[{name:_t("Sum"),types:[CellValueType.number],compute:(values,locale)=>sum([[values]],locale),},{name:_t("Avg"),types:[CellValueType.number],compute:(values,locale)=>average([[values]],locale),},{name:_t("Min"),types:[CellValueType.number],compute:(values,locale)=>min([[values]],locale).value,},{name:_t("Max"),types:[CellValueType.number],compute:(values,locale)=>max([[values]],locale).value,},{name:_t("Count"),types:[CellValueType.number,CellValueType.text,CellValueType.boolean,CellValueType.error],compute:(values)=>countAny([[values]]),},{name:_t("Count Numbers"),types:[CellValueType.number,CellValueType.text,CellValueType.boolean,CellValueType.error],compute:(values,locale)=>countNumbers([[values]],locale),},];class AggregateStatisticsStore extends SpreadsheetStore{statisticFnResults=this._computeStatisticFnResults();isDirty=false;constructor(get){super(get);this.model.selection.observe(this,{handleEvent:this.handleEvent.bind(this),});}
handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||(cmd.type==="UPDATE_CELL"&&("content"in cmd||"format"in cmd))){this.isDirty=true;}
switch(cmd.type){case"HIDE_COLUMNS_ROWS":case"UNHIDE_COLUMNS_ROWS":case"GROUP_HEADERS":case"UNGROUP_HEADERS":case"ACTIVATE_SHEET":case"ACTIVATE_NEXT_SHEET":case"ACTIVATE_PREVIOUS_SHEET":case"EVALUATE_CELLS":case"UNDO":case"REDO":this.isDirty=true;}}
finalize(){if(this.isDirty){this.isDirty=false;this.statisticFnResults=this._computeStatisticFnResults();}}
handleEvent(){if(this.getters.isGridSelectionActive()){this.statisticFnResults=this._computeStatisticFnResults();}}
_computeStatisticFnResults(){const getters=this.getters;const sheetId=getters.getActiveSheetId();const cells=[];const recomputedZones=recomputeZones(getters.getSelectedZones(),[]);const heightMax=this.getters.getSheetSize(sheetId).numberOfRows-1;const widthMax=this.getters.getSheetSize(sheetId).numberOfCols-1;for(const zone of recomputedZones){for(let col=zone.left;col<=(zone.right??widthMax);col++){for(let row=zone.top;row<=(zone.bottom??heightMax);row++){if(getters.isRowHidden(sheetId,row)||getters.isColHidden(sheetId,col)){continue;}
const evaluatedCell=getters.getEvaluatedCell({sheetId,col,row});if(evaluatedCell.type!==CellValueType.empty){cells.push(evaluatedCell);}}}}
const locale=getters.getLocale();const statisticFnResults={};const getCells=memoize((typeStr)=>{const types=typeStr.split(",");return cells.filter((c)=>types.includes(c.type));});for(const fn of selectionStatisticFunctions){let fnResult=undefined;const evaluatedCells=getCells(fn.types.sort().join(","));if(evaluatedCells.length){fnResult=lazy(()=>fn.compute(evaluatedCells,locale));}
statisticFnResults[fn.name]=fnResult;}
return statisticFnResults;}}
css`
  .o-selection-statistic {
    margin-right: 20px;
    padding: 4px 4px 4px 8px;
    color: #333;
    cursor: pointer;
    &:hover {
      background-color: rgba(0, 0, 0, 0.08) !important;
    }
  }
`;class BottomBarStatistic extends Component{static template="o-spreadsheet-BottomBarStatistic";static props={openContextMenu:Function,closeContextMenu:Function,};static components={Ripple};selectedStatisticFn="";store;setup(){this.store=useStore(AggregateStatisticsStore);onWillUpdateProps(()=>{if(Object.values(this.store.statisticFnResults).every((result)=>result===undefined)){this.props.closeContextMenu();}});}
getSelectedStatistic(){if(Object.values(this.store.statisticFnResults).every((result)=>result===undefined)){return undefined;}
if(this.selectedStatisticFn===""){this.selectedStatisticFn=Object.keys(this.store.statisticFnResults)[0];}
return this.getComposedFnName(this.selectedStatisticFn);}
listSelectionStatistics(ev){const registry=new MenuItemRegistry();let i=0;for(const[fnName]of Object.entries(this.store.statisticFnResults)){registry.add(fnName,{name:()=>this.getComposedFnName(fnName),sequence:i,isReadonlyAllowed:true,execute:()=>{this.selectedStatisticFn=fnName;},});i++;}
const target=ev.currentTarget;const{top,left,width}=target.getBoundingClientRect();this.props.openContextMenu(left+width,top,registry);}
getComposedFnName(fnName){const locale=this.env.model.getters.getLocale();const fnValue=this.store.statisticFnResults[fnName];return fnName+": "+(fnValue!==undefined?formatValue(fnValue(),{locale}):"__");}}
const MENU_MAX_HEIGHT=250;css`
  .o-spreadsheet-bottom-bar {
    background-color: ${BACKGROUND_GRAY_COLOR};
    padding-left: ${HEADER_WIDTH}px;
    font-size: 15px;
    border-top: 1px solid lightgrey;

    .o-sheet-item {
      cursor: pointer;
      &:hover {
        background-color: rgba(0, 0, 0, 0.08);
      }
    }

    .o-all-sheets {
      max-width: 70%;
      .o-bottom-bar-fade-out {
        background-image: linear-gradient(-90deg, #cfcfcf, transparent 1%);
      }

      .o-bottom-bar-fade-in {
        z-index: 1;
        background-image: linear-gradient(90deg, #cfcfcf, transparent 1%);
      }

      .o-sheet-list {
        overflow-y: hidden;
        overflow-x: auto;

        &::-webkit-scrollbar {
          display: none; /* Chrome */
        }
        -ms-overflow-style: none; /* IE and Edge */
        scrollbar-width: none; /* Firefox */
      }
    }

    .o-bottom-bar-arrows {
      .o-bottom-bar-arrow {
        cursor: pointer;
        &:hover:not([class*="o-disabled"]) {
          .o-icon {
            opacity: 0.9;
          }
        }

        .o-icon {
          height: 18px;
          width: 18px;
          font-size: 18px;
        }
      }
    }
  }

  .o-spreadsheet-mobile .o-spreadsheet-bottom-bar {
    padding-left: 0;

    .add-sheet-container {
      order: 2;
    }

    .o-add-sheet {
      margin-left: 0.5rem;
    }

    .o-all-sheets {
      max-width: none;
    }
  }
`;class BottomBar extends Component{static template="o-spreadsheet-BottomBar";static props={onClick:Function};static components={MenuPopover,Ripple,BottomBarSheet,BottomBarStatistic};bottomBarRef=useRef("bottomBar");sheetListRef=useRef("sheetList");dragAndDrop=useDragAndDropListItems();targetScroll=undefined;state=useState({isSheetListScrollableLeft:false,isSheetListScrollableRight:false,});menuMaxHeight=MENU_MAX_HEIGHT;menuState=useState({isOpen:false,menuId:undefined,anchorRect:null,menuItems:[],});sheetList=this.getVisibleSheets();setup(){onWillUpdateProps(()=>{this.updateScrollState();const visibleSheets=this.getVisibleSheets();if(!deepEquals(this.sheetList,visibleSheets)){this.dragAndDrop.cancel();}
this.sheetList=visibleSheets;});}
clickAddSheet(ev){const activeSheetId=this.env.model.getters.getActiveSheetId();const position=this.env.model.getters.getSheetIds().findIndex((sheetId)=>sheetId===activeSheetId)+1;const sheetId=this.env.model.uuidGenerator.smallUuid();const name=this.env.model.getters.getNextSheetName(_t("Sheet"));this.env.model.dispatch("CREATE_SHEET",{sheetId,position,name});this.env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:activeSheetId,sheetIdTo:sheetId});}
getVisibleSheets(){return this.env.model.getters.getVisibleSheetIds().map((sheetId)=>{const sheet=this.env.model.getters.getSheet(sheetId);return{id:sheet.id,name:sheet.name};});}
clickListSheets(ev){const registry=new MenuItemRegistry();const from=this.env.model.getters.getActiveSheetId();let i=0;for(const sheetId of this.env.model.getters.getSheetIds()){const sheet=this.env.model.getters.getSheet(sheetId);registry.add(sheetId,{name:sheet.name,sequence:i,isReadonlyAllowed:true,textColor:sheet.isVisible?undefined:"#808080",execute:(env)=>{if(!this.env.model.getters.isSheetVisible(sheetId)){this.env.model.dispatch("SHOW_SHEET",{sheetId});}
env.model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:from,sheetIdTo:sheetId});},isEnabled:(env)=>(env.model.getters.isReadonly()?sheet.isVisible:true),icon:sheet.color?"o-spreadsheet-Icon.SMALL_DOT_RIGHT_ALIGN":undefined,iconColor:sheet.color,});i++;}
const target=ev.currentTarget;const{left}=target.getBoundingClientRect();const top=this.bottomBarRef.el.getBoundingClientRect().top;this.openContextMenu(left,top,"listSheets",registry);}
openContextMenu(x,y,menuId,registry){this.menuState.isOpen=true;this.menuState.menuId=menuId;this.menuState.menuItems=registry.getMenuItems();this.menuState.anchorRect={x,y,width:0,height:0};}
onSheetContextMenu(sheetId,registry,ev){const target=ev.currentTarget;const{top,left}=target.getBoundingClientRect();if(ev.closedMenuId===sheetId){this.closeMenu();return;}
this.openContextMenu(left,top,sheetId,registry);}
closeMenu(){this.menuState.isOpen=false;this.menuState.menuId=undefined;this.menuState.menuItems=[];this.menuState.anchorRect=null;}
closeContextMenuWithId(menuId){if(this.menuState.menuId===menuId){this.closeMenu();}}
onWheel(ev){this.targetScroll=undefined;const target=ev.currentTarget;target.scrollLeft+=ev.deltaY*0.5;}
onScroll(){this.updateScrollState();if(this.targetScroll===this.sheetListCurrentScroll){this.targetScroll=undefined;}}
onArrowLeft(ev){if(!this.state.isSheetListScrollableLeft)
return;if(!this.targetScroll)
this.targetScroll=this.sheetListCurrentScroll;const newScroll=this.targetScroll-this.sheetListWidth;this.scrollSheetListTo(Math.max(0,newScroll));}
onArrowRight(ev){if(!this.state.isSheetListScrollableRight)
return;if(!this.targetScroll)
this.targetScroll=this.sheetListCurrentScroll;const newScroll=this.targetScroll+this.sheetListWidth;this.scrollSheetListTo(Math.min(this.sheetListMaxScroll,newScroll));}
updateScrollState(){this.state.isSheetListScrollableLeft=this.sheetListCurrentScroll>0;this.state.isSheetListScrollableRight=this.sheetListCurrentScroll<this.sheetListMaxScroll;}
scrollSheetListTo(scroll){if(!this.sheetListRef.el)
return;this.targetScroll=scroll;this.sheetListRef.el.scrollTo({top:0,left:scroll,behavior:"smooth"});}
onSheetMouseDown(sheetId,event){if(event.button!==0||this.env.model.getters.isReadonly())
return;this.closeMenu();if(this.env.isMobile()){return;}
const visibleSheets=this.getVisibleSheets();const sheetRects=this.getSheetItemRects();const sheets=visibleSheets.map((sheet,index)=>({id:sheet.id,size:sheetRects[index].width,position:sheetRects[index].x,}));this.dragAndDrop.start("horizontal",{draggedItemId:sheetId,initialMousePosition:event.clientX,items:sheets,scrollableContainerEl:this.sheetListRef.el,onDragEnd:(sheetId,finalIndex)=>this.onDragEnd(sheetId,finalIndex),});}
onDragEnd(sheetId,finalIndex){const originalIndex=this.getVisibleSheets().findIndex((sheet)=>sheet.id===sheetId);const delta=finalIndex-originalIndex;if(sheetId&&delta!==0){this.env.model.dispatch("MOVE_SHEET",{sheetId:sheetId,delta:delta,});}}
getSheetStyle(sheetId){return this.dragAndDrop.itemsStyle[sheetId]||"";}
getSheetItemRects(){return Array.from(this.bottomBarRef.el.querySelectorAll(`.o-sheet`)).map((sheetEl)=>sheetEl.getBoundingClientRect()).map((rect)=>({x:rect.x,width:rect.width-1,y:rect.y,height:rect.height,}));}
get sheetListCurrentScroll(){if(!this.sheetListRef.el)
return 0;return this.sheetListRef.el.scrollLeft;}
get sheetListWidth(){if(!this.sheetListRef.el)
return 0;return this.sheetListRef.el.clientWidth;}
get sheetListMaxScroll(){if(!this.sheetListRef.el)
return 0;return this.sheetListRef.el.scrollWidth-this.sheetListRef.el.clientWidth;}}
class ClickableCellsStore extends SpreadsheetStore{_clickableCells=markRaw({});_registryItems=markRaw(clickableCellRegistry.getAll().sort((a,b)=>a.sequence-b.sequence));handle(cmd){if(invalidateEvaluationCommands.has(cmd.type)||cmd.type==="EVALUATE_CELLS"||(cmd.type==="UPDATE_CELL"&&("content"in cmd||"format"in cmd))){this._clickableCells=markRaw({});this._registryItems=markRaw(clickableCellRegistry.getAll().sort((a,b)=>a.sequence-b.sequence));}}
getClickableItem(position){const{sheetId,col,row}=position;const clickableCells=this._clickableCells;const xc=toXC(col,row);if(!clickableCells[sheetId]){clickableCells[sheetId]={};}
if(!(xc in clickableCells[sheetId])){const clickableCell=this.findClickableItem(position);if(clickableCell){clickableCells[sheetId][xc]=clickableCell;}}
return clickableCells[sheetId][xc];}
findClickableItem(position){const getters=this.getters;for(const item of this._registryItems){if(item.condition(position,getters)){return item;}}
return undefined;}
get clickableCells(){const cells=[];const getters=this.getters;const sheetId=getters.getActiveSheetId();for(const position of this.getters.getVisibleCellPositions()){const item=this.getClickableItem(position);if(!item){continue;}
const title=typeof item.title==="function"?item.title(position,getters):item.title;const zone=getters.expandZone(sheetId,positionToZone(position));cells.push({coordinates:getters.getVisibleRect(zone),position,action:item.execute,title:title||"",});}
return cells;}}
css`
  .o-dashboard-clickable-cell {
    position: absolute;
    cursor: pointer;
  }
`;class SpreadsheetDashboard extends Component{static template="o-spreadsheet-SpreadsheetDashboard";static props={getGridSize:Function};static components={GridOverlay,GridPopover,Popover,VerticalScrollBar,HorizontalScrollBar,};cellPopovers;onMouseWheel;canvasPosition;hoveredCell;clickableCellsStore;gridRef;setup(){this.gridRef=useRef("grid");this.hoveredCell=useStore(DelayedHoveredCellStore);this.clickableCellsStore=useStore(ClickableCellsStore);useChildSubEnv({getPopoverContainerRect:()=>this.getGridRect()});useGridDrawing("canvas",this.env.model,()=>this.env.model.getters.getSheetViewDimension());this.onMouseWheel=useWheelHandler((deltaX,deltaY)=>{this.moveCanvas(deltaX,deltaY);this.hoveredCell.clear();});this.cellPopovers=useStore(CellPopoverStore);useTouchScroll(this.gridRef,this.moveCanvas.bind(this),()=>{const{scrollY}=this.env.model.getters.getActiveSheetScrollInfo();return scrollY>0;});}
get gridContainer(){const sheetId=this.env.model.getters.getActiveSheetId();const{right}=this.env.model.getters.getSheetZone(sheetId);const{end}=this.env.model.getters.getColDimensions(sheetId,right);return cssPropertiesToCss({"max-width":`${end}px`});}
get gridOverlayDimensions(){return cssPropertiesToCss({height:"100%",width:"100%",});}
getCellClickableStyle(coordinates){return cssPropertiesToCss({top:`${coordinates.y}px`,left:`${coordinates.x}px`,width:`${coordinates.width}px`,height:`${coordinates.height}px`,});}
getClickableCells(){return toRaw(this.clickableCellsStore.clickableCells);}
selectClickableCell(ev,clickableCell){const{position,action}=clickableCell;action(position,this.env,isMiddleClickOrCtrlClick(ev));}
onClosePopover(){this.cellPopovers.close();}
onGridResized({height,width}){this.env.model.dispatch("RESIZE_SHEETVIEW",{width:width,height:height,gridOffsetX:0,gridOffsetY:0,});}
moveCanvas(deltaX,deltaY){const{scrollX,scrollY}=this.env.model.getters.getActiveSheetScrollInfo();this.env.model.dispatch("SET_VIEWPORT_OFFSET",{offsetX:scrollX+deltaX,offsetY:scrollY+deltaY,});}
getGridRect(){return{...getRefBoundingRect(this.gridRef),...this.env.model.getters.getSheetViewDimensionWithHeaders(),};}}
css`
  .o-header-group {
    .o-header-group-header {
      z-index: ${ComponentsImportance.HeaderGroupingButton};
      .o-group-fold-button {
        cursor: pointer;
        width: 15px;
        height: 15px;
        border: 1px solid ${HEADER_GROUPING_BORDER_COLOR};
        .o-icon {
          width: 7px;
          height: 7px;
        }

        &:hover {
          border-color: #777;
        }
      }
    }
  }
`;class AbstractHeaderGroup extends Component{static template="o-spreadsheet-HeaderGroup";static props={group:Object,layerOffset:Number,openContextMenu:Function,};toggleGroup(){const sheetId=this.env.model.getters.getActiveSheetId();const{start,end}=this.props.group;interactiveToggleGroup(this.env,sheetId,this.dimension,start,end);}
get groupBoxStyle(){const groupBox=this.groupBox;return cssPropertiesToCss({top:`${groupBox.groupRect.y}px`,left:`${groupBox.groupRect.x}px`,width:`${groupBox.groupRect.width}px`,height:`${groupBox.groupRect.height}px`,});}
get groupButtonStyle(){return cssPropertiesToCss({"background-color":this.isGroupFolded?"#333":"#fff",color:this.isGroupFolded?"#fff":"#333",});}
get groupButtonIcon(){return this.isGroupFolded?"o-spreadsheet-Icon.PLUS":"o-spreadsheet-Icon.MINUS";}
get isGroupFolded(){const sheetId=this.env.model.getters.getActiveSheetId();const group=this.props.group;return this.env.model.getters.isGroupFolded(sheetId,this.dimension,group.start,group.end);}
onContextMenu(ev){const sheetId=this.env.model.getters.getActiveSheetId();const position={x:ev.clientX,y:ev.clientY};const group=this.props.group;const menuItems=getHeaderGroupContextMenu(sheetId,this.dimension,group.start,group.end);this.props.openContextMenu(position,menuItems);}}
class RowGroup extends AbstractHeaderGroup{dimension="ROW";get groupBorderStyle(){const groupBox=this.groupBox;if(this.groupBox.groupRect.height===0){return"";}
return cssPropertiesToCss({top:`${groupBox.headerRect.height / 2}px`,left:`calc(50% - 1px)`,width:`30%`,height:`calc(100% - ${groupBox.headerRect.height / 2}px)`,"border-left":`1px solid ${HEADER_GROUPING_BORDER_COLOR}`,"border-bottom":groupBox.isEndHidden?"":`1px solid ${HEADER_GROUPING_BORDER_COLOR}`,});}
get groupHeaderStyle(){return cssPropertiesToCss({width:`100%`,height:`${this.groupBox.headerRect.height}px`,});}
get groupBox(){const sheetId=this.env.model.getters.getActiveSheetId();const{start:startRow,end:endRow}=this.props.group;const startCoordinates=this.env.model.getters.getRowDimensions(sheetId,startRow).start;const endCoordinates=this.env.model.getters.getRowDimensions(sheetId,endRow).end;let groupHeaderY=0;let groupHeaderHeight=HEADER_HEIGHT;if(startRow!==0){const headerRowDims=this.env.model.getters.getRowDimensions(sheetId,startRow-1);groupHeaderY=HEADER_HEIGHT+headerRowDims.start;groupHeaderHeight=headerRowDims.end-headerRowDims.start;}
const headerRect={x:this.props.layerOffset,y:groupHeaderY,width:GROUP_LAYER_WIDTH,height:groupHeaderHeight,};const groupRect={x:this.props.layerOffset,y:headerRect.y,width:GROUP_LAYER_WIDTH,height:headerRect.height+(endCoordinates-startCoordinates),};return{headerRect,groupRect,isEndHidden:this.env.model.getters.isRowHidden(sheetId,endRow),};}}
class ColGroup extends AbstractHeaderGroup{dimension="COL";get groupBorderStyle(){const groupBox=this.groupBox;if(groupBox.groupRect.width===0){return"";}
return cssPropertiesToCss({top:`calc(50% - 1px)`,left:`${groupBox.headerRect.width / 2}px`,width:`calc(100% - ${groupBox.headerRect.width / 2}px)`,height:`30%`,"border-top":`1px solid ${HEADER_GROUPING_BORDER_COLOR}`,"border-right":groupBox.isEndHidden?"":`1px solid ${HEADER_GROUPING_BORDER_COLOR}`,});}
get groupHeaderStyle(){return cssPropertiesToCss({width:`${this.groupBox.headerRect.width}px`,height:`100%`,});}
get groupBox(){const sheetId=this.env.model.getters.getActiveSheetId();const{start:startCol,end:endCol}=this.props.group;const startCoordinates=this.env.model.getters.getColDimensions(sheetId,startCol).start;const endCoordinates=this.env.model.getters.getColDimensions(sheetId,endCol).end;let groupHeaderX=0;let groupHeaderWidth=HEADER_WIDTH;if(startCol!==0){const headerRowDims=this.env.model.getters.getColDimensions(sheetId,startCol-1);groupHeaderX=HEADER_WIDTH+headerRowDims.start;groupHeaderWidth=headerRowDims.end-headerRowDims.start;}
const headerRect={x:groupHeaderX,y:this.props.layerOffset,width:groupHeaderWidth,height:GROUP_LAYER_WIDTH,};const groupRect={x:headerRect.x,y:this.props.layerOffset,width:headerRect.width+(endCoordinates-startCoordinates),height:GROUP_LAYER_WIDTH,};return{headerRect,groupRect,isEndHidden:this.env.model.getters.isColHidden(sheetId,endCol),};}}
css`
  .o-header-group-frozen-pane-border {
    &.o-group-rows {
      margin-top: -1px;
      border-bottom: 3px solid ${FROZEN_PANE_HEADER_BORDER_COLOR};
    }
    &.o-group-columns {
      margin-left: -1px;
      border-right: 3px solid ${FROZEN_PANE_HEADER_BORDER_COLOR};
    }
  }

  .o-header-group-main-pane {
    &.o-group-rows {
      margin-top: -2px; /* Counteract o-header-group-frozen-pane-border offset */
    }
    &.o-group-columns {
      margin-left: -2px;
    }
  }
`;class HeaderGroupContainer extends Component{static template="o-spreadsheet-HeaderGroupContainer";static props={dimension:String,layers:Array,};static components={RowGroup,ColGroup,MenuPopover};menu=useState({isOpen:false,anchorRect:null,menuItems:[]});getLayerOffset(layerIndex){return layerIndex*GROUP_LAYER_WIDTH;}
onContextMenu(event){const sheetId=this.env.model.getters.getActiveSheetId();const position={x:event.clientX,y:event.clientY};const menuItems=createHeaderGroupContainerContextMenu(sheetId,this.props.dimension);this.openContextMenu(position,menuItems);}
openContextMenu(position,menuItems){this.menu.isOpen=true;this.menu.anchorRect={...position,width:0,height:0};this.menu.menuItems=menuItems;}
closeMenu(){this.menu.isOpen=false;this.menu.anchorRect=null;this.menu.menuItems=[];}
get groupComponent(){return this.props.dimension==="ROW"?RowGroup:ColGroup;}
get hasFrozenPane(){const viewportCoordinates=this.env.model.getters.getMainViewportCoordinates();return this.props.dimension==="COL"?viewportCoordinates.x>0:viewportCoordinates.y>0;}
get scrollContainerStyle(){const{scrollX,scrollY}=this.env.model.getters.getActiveSheetScrollInfo();const cssProperties={};if(this.props.dimension==="COL"){cssProperties.left=`${-scrollX - this.frozenPaneContainerSize}px`;}
else{cssProperties.top=`${-scrollY - this.frozenPaneContainerSize}px`;}
return cssPropertiesToCss(cssProperties);}
get frozenPaneContainerStyle(){const cssProperties={};if(this.props.dimension==="COL"){cssProperties.width=`${this.frozenPaneContainerSize}px`;}
else{cssProperties.height=`${this.frozenPaneContainerSize}px`;}
return cssPropertiesToCss(cssProperties);}
get frozenPaneContainerSize(){if(!this.hasFrozenPane){return 0;}
const viewportCoordinates=this.env.model.getters.getMainViewportCoordinates();if(this.props.dimension==="COL"){return HEADER_WIDTH+viewportCoordinates.x;}
else{return HEADER_HEIGHT+viewportCoordinates.y;}}}
function useScreenWidth(){const spreadsheetRect=useSpreadsheetRect();return{get isSmall(){return spreadsheetRect.width<MOBILE_WIDTH_BREAKPOINT;},};}
css`
  .o-sidePanel {
    display: flex;
    flex-direction: column;
    overflow-x: hidden;
    background-color: white;
    border: solid ${GRAY_300};
    border-width: 1px 0 0 1px;
    user-select: none;
    color: ${TEXT_BODY};

    &.collapsed {
      padding: 8px;
      cursor: pointer;

      .o-sidePanelTitle {
        writing-mode: vertical-rl;
        text-orientation: mixed;
      }
    }

    .o-sidePanelTitle {
      line-height: 20px;
      font-size: 16px;
    }

    .o-sidePanelHeader {
      padding: 8px;
      border-bottom: 1px solid ${GRAY_300};
    }

    .o-sidePanelAction {
      padding: 5px 10px;
      cursor: pointer;

      &.active {
        background-color: ${BUTTON_ACTIVE_BG};
      }

      &:hover {
        background-color: ${BUTTON_HOVER_BG};
      }
    }
    .o-sidePanelBody-container {
      /* This overwrites the min-height: auto; of flex. Without this, a flex div cannot be smaller than its children */
      min-height: 0;
    }
    .o-sidePanelBody {
      overflow: auto;
      width: 100%;
      height: 100%;

      .o-section {
        padding: 16px;

        .o-section-title {
          font-weight: 500;
          margin-bottom: 5px;
        }

        .o-section-subtitle {
          font-weight: 500;
          font-size: 13px;
          line-height: 14px;
          margin: 8px 0 4px 0;
        }

        .o-subsection-left {
          display: inline-block;
          width: 47%;
          margin-right: 3%;
        }

        .o-subsection-right {
          display: inline-block;
          width: 47%;
          margin-left: 3%;
        }
      }

      .o-sidePanel-composer {
        color: ${TEXT_BODY};
      }
    }

    .o-sidePanelButtons {
      display: flex;
      gap: 8px;
    }

    .o-invalid {
      border-width: 2px;
      border-color: red;
    }

    .o-sidePanel-handle-container {
      width: 8px;
      position: fixed;
      top: 50%;
      z-index: 1;
    }
    .o-sidePanel-handle {
      cursor: col-resize;
      color: #a9a9a9;
      .o-icon {
        height: 25px;
        margin-left: -5px;
      }
    }
  }

  .o-fw-bold {
    font-weight: 500;
  }
`;class SidePanel extends Component{static template="o-spreadsheet-SidePanel";static props={panelContent:Object,panelProps:Object,onCloseSidePanel:Function,onStartHandleDrag:Function,onResetPanelSize:Function,isPinned:{type:Boolean,optional:true},onTogglePinPanel:{type:Function,optional:true},onToggleCollapsePanel:{type:Function,optional:true},isCollapsed:{type:Boolean,optional:true},};spreadsheetRect=useSpreadsheetRect();getTitle(){const panel=this.props.panelContent;return typeof panel.title==="function"?panel.title(this.env,this.props.panelProps):panel.title;}
get pinInfoMessage(){return _t("Pin this panel to allow to open another side panel beside it.");}}
class SidePanels extends Component{static template="o-spreadsheet-SidePanels";static props={};static components={SidePanel};sidePanelStore;spreadsheetRect=useSpreadsheetRect();setup(){this.sidePanelStore=useStore(SidePanelStore);useEffect(()=>{if(this.sidePanelStore.mainPanel&&!this.sidePanelStore.isMainPanelOpen){this.sidePanelStore.closeMainPanel();}
if(this.sidePanelStore.secondaryPanel&&!this.sidePanelStore.isSecondaryPanelOpen){this.sidePanelStore.close();}},()=>[this.sidePanelStore.isMainPanelOpen,this.sidePanelStore.isSecondaryPanelOpen]);}
startHandleDrag(panel,ev){const startingCursor=document.body.style.cursor;const panelInfo=panel==="mainPanel"?this.sidePanelStore.mainPanel:this.sidePanelStore.secondaryPanel;if(!panelInfo){return;}
const startSize=panelInfo.size;const startPosition=ev.clientX;const onMouseMove=(ev)=>{document.body.style.cursor="col-resize";const newSize=startSize+startPosition-ev.clientX;this.sidePanelStore.changePanelSize(panel,newSize);};const cleanUp=()=>{document.body.style.cursor=startingCursor;};startDnd(onMouseMove,cleanUp);}
get mainPanelProps(){const panelProps=this.sidePanelStore.mainPanelProps;if(!this.sidePanelStore.mainPanel||!panelProps){return undefined;}
return{panelContent:sidePanelRegistry.get(this.sidePanelStore.mainPanel.componentTag),panelProps,onCloseSidePanel:()=>this.sidePanelStore.closeMainPanel(),onTogglePinPanel:()=>this.sidePanelStore.togglePinPanel(),onStartHandleDrag:(ev)=>this.startHandleDrag("mainPanel",ev),onResetPanelSize:()=>this.sidePanelStore.resetPanelSize("mainPanel"),isPinned:this.sidePanelStore.mainPanel?.isPinned,onToggleCollapsePanel:()=>this.sidePanelStore.toggleCollapsePanel("mainPanel"),isCollapsed:this.sidePanelStore.mainPanel?.isCollapsed,};}
get secondaryPanelProps(){const panelProps=this.sidePanelStore.secondaryPanelProps;if(!this.sidePanelStore.secondaryPanel||!panelProps){return undefined;}
return{panelContent:sidePanelRegistry.get(this.sidePanelStore.secondaryPanel.componentTag),panelProps,onCloseSidePanel:()=>this.sidePanelStore.close(),onStartHandleDrag:(ev)=>this.startHandleDrag("secondaryPanel",ev),onResetPanelSize:()=>this.sidePanelStore.resetPanelSize("secondaryPanel"),onToggleCollapsePanel:()=>this.sidePanelStore.toggleCollapsePanel("secondaryPanel"),isCollapsed:this.sidePanelStore.secondaryPanel?.isCollapsed,};}
get panelList(){return[{key:this.sidePanelStore.secondaryPanelKey,props:this.secondaryPanelProps,style:this.sidePanelStore.secondaryPanel?cssPropertiesToCss({width:`${this.sidePanelStore.secondaryPanel.size}px`}):"",},{key:this.sidePanelStore.mainPanelKey,props:this.mainPanelProps,style:this.sidePanelStore.mainPanel?cssPropertiesToCss({width:`${this.sidePanelStore.mainPanel.size}px`}):"",},].filter((panel)=>panel.key&&panel.props);}}
class RibbonMenu extends Component{static template="o-spreadsheet-RibbonMenu";static props={onClose:Function,};static components={Menu};rootItems=topbarMenuRegistry.getMenuItems();menuRef=useRef("menu");state=useState({menuItems:this.rootItems,title:_t("Menu Bar"),parentState:undefined,});setup(){useExternalListener(window,"click",this.onExternalClick,{capture:true});}
onExternalClick(ev){if(!this.menuRef.el?.contains(ev.target)){this.props.onClose();}}
onClickMenu(menu){const children=menu.children(this.env);if(children.length){this.state.parentState={...this.state};this.state.menuItems=children;this.state.title=menu.name(this.env);}
else{this.state.menuItems=this.rootItems;this.state.title=undefined;this.state.parentState=undefined;menu.execute?.(this.env);this.props.onClose();}}
get menuProps(){return{menuItems:this.state.menuItems,onClose:this.props.onClose,onClickMenu:this.onClickMenu.bind(this),};}
get style(){return cssPropertiesToCss({height:`${this.props.height}px`,});}
onClickBack(){if(!this.state.parentState){this.props.onClose();return;}
this.state.menuItems=this.state.parentState.menuItems;this.state.title=this.state.parentState.title;this.state.parentState=this.state.parentState.parentState;}
get backTitle(){return this.state.parentState?_t("Go to previous menu"):_t("Close menu bar");}}
css`
  .o-small-composer {
    z-index: ${ComponentsImportance.TopBarComposer};
  }
`;class SmallBottomBar extends Component{static components={Composer,BottomBar,Ripple,RibbonMenu};static template="o-spreadsheet-SmallBottomBar";static props={onClick:Function,};composerFocusStore;composerStore;composerInterface;composerRef=useRef("bottombarComposer");menuState=useState({isOpen:false,});setup(){this.composerFocusStore=useStore(ComposerFocusStore);const composerStore=useStore(CellComposerStore);this.composerStore=composerStore;this.composerInterface={id:"bottombarComposer",get editionMode(){return composerStore.editionMode;},startEdition:this.composerStore.startEdition,setCurrentContent:this.composerStore.setCurrentContent,stopEdition:this.composerStore.stopEdition,};useEffect(()=>{if(this.env.isMobile()&&!this.menuState.isOpen&&this.composerStore.editionMode!=="inactive"&&this.composerFocusStore.activeComposer!==this.composerInterface){this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"contentFocus",});}});}
get focus(){return this.composerFocusStore.activeComposer===this.composerInterface?this.composerFocusStore.focusMode:"inactive";}
get rect(){return this.composerRef.el?getBoundingRectAsPOJO(this.composerRef.el):{x:0,y:0,width:0,height:0};}
get composerProps(){const{width,height}=this.env.model.getters.getSheetViewDimensionWithHeaders();return{rect:{...this.rect},delimitation:{width,height,},focus:this.focus,composerStore:this.composerStore,onComposerContentFocused:()=>this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"contentFocus",}),isDefaultFocus:false,inputStyle:cssPropertiesToCss({height:this.focus==="inactive"?"26px":"fit-content","max-height":`130px`,}),showAssistant:!isIOS(),};}
get symbols(){return["=","(",")",":","-","/","*",",","+","$","."];}
insertSymbol(symbol){this.composerStore.replaceComposerCursorSelection(symbol);this.composerFocusStore.focusComposer(this.composerInterface,{focusMode:"contentFocus",});}
toggleRibbon(){this.composerStore.cancelEdition();this.menuState.isOpen=!this.menuState.isOpen;}}
const COMPOSER_MAX_HEIGHT=100;const FX_SVG=`
<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 121.8 122.9' width='16' height='16' focusable='false'>
  <path d='m28 34-4 5v2h10l-6 40c-4 22-6 28-7 30-2 2-3 3-5 3-3 0-7-2-9-4H4c-2 2-4 4-4 7s4 6 8 6 9-2 15-8c8-7 13-17 18-39l7-35 13-1 3-6H49c4-23 7-27 11-27 2 0 5 2 8 6h4c1-1 4-4 4-7 0-2-3-6-9-6-5 0-13 4-20 10-6 7-9 14-11 24h-8zm41 16c4-5 7-7 8-7s2 1 5 9l3 12c-7 11-12 17-16 17l-3-1-2-1c-3 0-6 3-6 7s3 7 7 7c6 0 12-6 22-23l3 10c3 9 6 13 10 13 5 0 11-4 18-15l-3-4c-4 6-7 8-8 8-2 0-4-3-6-10l-5-15 8-10 6-4 3 1 3 2c2 0 6-3 6-7s-2-7-6-7c-6 0-11 5-21 20l-2-6c-3-9-5-14-9-14-5 0-12 6-18 15l3 3z' fill='#BDBDBD'/>
</svg>
`;css`
  .o-topbar-composer-container {
    height: ${DESKTOP_TOPBAR_TOOLBAR_HEIGHT}px;
  }

  .o-topbar-composer {
    height: fit-content;
    margin-top: -1px;
    margin-bottom: -1px;
    border: 1px solid;
    font-family: ${DEFAULT_FONT};

    /* In readonly we always show the fx icon if the composer is empty, not matter the focus */
    .o-composer:empty:not(:focus):not(.active)::before,
    &.o-topbar-composer-readonly .o-composer:empty::before {
      content: url("data:image/svg+xml,${encodeURIComponent(FX_SVG)}");
      position: relative;
      top: 20%;
    }
  }

  .user-select-text {
    user-select: text;
  }
`;class TopBarComposer extends Component{static template="o-spreadsheet-TopBarComposer";static props={};static components={Composer};composerFocusStore;composerStore;composerInterface;setup(){this.composerFocusStore=useStore(ComposerFocusStore);const composerStore=useStore(CellComposerStore);this.composerStore=composerStore;this.composerInterface={id:"topbarComposer",get editionMode(){return composerStore.editionMode;},startEdition:this.composerStore.startEdition,setCurrentContent:this.composerStore.setCurrentContent,stopEdition:this.composerStore.stopEdition,};}
get focus(){return this.composerFocusStore.activeComposer===this.composerInterface?this.composerFocusStore.focusMode:"inactive";}
get composerStyle(){const style={padding:"5px 0px 5px 8px","max-height":`${COMPOSER_MAX_HEIGHT}px`,"line-height":"24px",};style.height=this.focus==="inactive"?`${DESKTOP_TOPBAR_TOOLBAR_HEIGHT}px`:"fit-content";return cssPropertiesToCss(style);}
get containerStyle(){if(this.focus==="inactive"){return cssPropertiesToCss({"border-color":SEPARATOR_COLOR,"border-right":"none",});}
return cssPropertiesToCss({"border-color":SELECTION_BORDER_COLOR,"z-index":String(ComponentsImportance.TopBarComposer),});}
onFocus(selection){this.composerFocusStore.focusComposer(this.composerInterface,{selection});}}
class TopBarToolStore{mutators=["closeDropdowns","openDropdown"];_currentDropdown=null;closeDropdowns(){this._currentDropdown=null;}
openDropdown(dropdownComponent){this._currentDropdown=dropdownComponent;}
get currentDropdown(){return this._currentDropdown;}}
class ToolBarRegistry{content={};add(key){if(key in this.content){throw new Error(`${key} is already present in this registry!`);}
this.content[key]=[];return this;}
addChild(key,value){this.content[key].push(value);return this;}
getEntries(id){return this.content[id].sort((a,b)=>a.sequence-b.sequence);}
getCategories(){return Object.keys(this.content);}}
function useToolBarDropdownStore(){const component=useComponent();const topbarStore=useStore(TopBarToolStore);onWillUnmount(()=>{if(component===topbarStore.currentDropdown){topbarStore.closeDropdowns();}});return{closeDropdowns:()=>topbarStore.closeDropdowns(),openDropdown:()=>{topbarStore.openDropdown(component);},get isActive(){return topbarStore.currentDropdown===component;},};}
const BORDER_POSITIONS=[[["all","o-spreadsheet-Icon.BORDERS"],["hv","o-spreadsheet-Icon.BORDER_HV"],["h","o-spreadsheet-Icon.BORDER_H"],["v","o-spreadsheet-Icon.BORDER_V"],["external","o-spreadsheet-Icon.BORDER_EXTERNAL"],],[["left","o-spreadsheet-Icon.BORDER_LEFT"],["top","o-spreadsheet-Icon.BORDER_TOP"],["right","o-spreadsheet-Icon.BORDER_RIGHT"],["bottom","o-spreadsheet-Icon.BORDER_BOTTOM"],["clear","o-spreadsheet-Icon.BORDER_CLEAR"],],];css`
  .o-border-selector {
    padding: 4px;
    background-color: white;

    .o-divider {
      border-right: 1px solid ${GRAY_300};
      margin: 0 6px;
    }

    .o-border-selector-section {
      .o-dropdown-line {
        height: 30px;
        margin: 1px;
        .o-line-item {
          padding: 4px;
          width: 26px;
          height: 26px;
          &.active {
            background-color: ${BUTTON_ACTIVE_BG};
          }
        }
      }
      .o-border-style-tool {
        padding: 0px 3px;
        margin: 2px;
        height: 25px;
      }
    }
  }

  .o-border-style-dropdown {
    background: #ffffff;
    padding: 4px;
    .o-dropdown-line {
    }
    .o-style-preview {
      margin: 7px 5px 7px 5px;
      width: 60px;
      height: 5px;
    }
    .o-style-thin {
      border-bottom: 1px solid #000000;
    }
    .o-style-medium {
      border-bottom: 2px solid #000000;
    }
    .o-style-thick {
      border-bottom: 3px solid #000000;
    }
    .o-style-dashed {
      border-bottom: 1px dashed #000000;
    }
    .o-style-dotted {
      border-bottom: 1px dotted #000000;
    }
    .o-dropdown-border-type {
      cursor: pointer;
      &:not(.o-disabled):not(.active):hover {
        background-color: ${BUTTON_HOVER_BG};
      }
    }
    .o-dropdown-border-check {
      width: 20px;
      font-size: 12px;
    }
    .o-border-picker-button {
      padding: 0px !important;
      margin: 5px 0px 0px 0px !important;
      height: 25px !important;
    }
  }
`;class BorderEditor extends Component{static template="o-spreadsheet-BorderEditor";static props={class:{type:String,optional:true},currentBorderColor:{type:String,optional:false},currentBorderStyle:{type:String,optional:false},currentBorderPosition:{type:String,optional:true},onBorderColorPicked:Function,onBorderStylePicked:Function,onBorderPositionPicked:Function,maxHeight:{type:Number,optional:true},anchorRect:Object,};static components={ColorPickerWidget,Popover};BORDER_POSITIONS=BORDER_POSITIONS;lineStyleButtonRef=useRef("lineStyleButton");borderStyles=borderStyles;state=useState({activeTool:undefined,});toggleDropdownTool(tool){const isOpen=this.state.activeTool===tool;this.state.activeTool=isOpen?undefined:tool;}
closeDropdown(){this.state.activeTool=undefined;}
setBorderPosition(position){this.props.onBorderPositionPicked(position);this.closeDropdown();}
setBorderColor(color){this.props.onBorderColorPicked(color);this.closeDropdown();}
setBorderStyle(style){this.props.onBorderStylePicked(style);this.closeDropdown();}
get lineStylePickerPopoverProps(){return{anchorRect:this.lineStylePickerAnchorRect,positioning:"bottom-left",verticalOffset:0,};}
get popoverProps(){return{anchorRect:this.props.anchorRect,maxHeight:this.props.maxHeight,positioning:"bottom-left",verticalOffset:0,};}
get lineStylePickerAnchorRect(){const button=this.lineStyleButtonRef.el;if(button===null){return{x:0,y:0,width:0,height:0};}
const buttonRect=button.getBoundingClientRect();return{x:buttonRect.x,y:buttonRect.y,width:buttonRect.width,height:buttonRect.height,};}}
class BorderEditorWidget extends Component{static template="o-spreadsheet-BorderEditorWidget";static props={disabled:{type:Boolean,optional:true},dropdownMaxHeight:{type:Number,optional:true},class:{type:String,optional:true},};static components={BorderEditor};topBarToolStore;borderEditorButtonRef=useRef("borderEditorButton");state=useState({currentColor:DEFAULT_BORDER_DESC.color,currentStyle:DEFAULT_BORDER_DESC.style,currentPosition:undefined,});setup(){this.topBarToolStore=useToolBarDropdownStore();onWillUpdateProps(()=>{if(!this.isActive){this.state.currentPosition=undefined;}});}
get dropdownMaxHeight(){return this.env.model.getters.getSheetViewDimension().height;}
get borderEditorAnchorRect(){const button=this.borderEditorButtonRef.el;const buttonRect=button.getBoundingClientRect();return{x:buttonRect.x,y:buttonRect.y,width:buttonRect.width,height:buttonRect.height,};}
onBorderPositionPicked(position){this.state.currentPosition=position;this.updateBorder();}
onBorderColorPicked(color){this.state.currentColor=color;this.updateBorder();}
onBorderStylePicked(style){this.state.currentStyle=style;this.updateBorder();}
get isActive(){return this.topBarToolStore.isActive;}
toggleBorderEditor(){if(this.isActive){this.topBarToolStore.closeDropdowns();}
else{this.topBarToolStore.openDropdown();}}
updateBorder(){if(this.state.currentPosition===undefined){return;}
this.env.model.dispatch("SET_ZONE_BORDERS",{sheetId:this.env.model.getters.getActiveSheetId(),target:this.env.model.getters.getSelectedZones(),border:{position:this.state.currentPosition,color:this.state.currentColor,style:this.state.currentStyle,},});}}
class PaintFormatButton extends Component{static template="o-spreadsheet-PaintFormatButton";static props={class:{type:String,optional:true},};paintFormatStore;setup(){this.paintFormatStore=useStore(PaintFormatStore);}
get isActive(){return this.paintFormatStore.isActive;}
onDblClick(){this.paintFormatStore.activate({persistent:true});}
togglePaintFormat(){if(this.isActive){this.paintFormatStore.cancel();}
else{this.paintFormatStore.activate({persistent:false});}}}
class TableDropdownButton extends Component{static template="o-spreadsheet-TableDropdownButton";static components={TableStylesPopover,ActionButton};static props={class:{type:String,optional:true},};topBarToolStore;state=useState({popoverProps:undefined});setup(){this.topBarToolStore=useToolBarDropdownStore();}
onStylePicked(styleId){const sheetId=this.env.model.getters.getActiveSheetId();const tableConfig={...this.tableConfig,styleId};const result=interactiveCreateTable(this.env,sheetId,tableConfig);if(result.isSuccessful){this.env.openSidePanel("TableSidePanel",{});}
this.closePopover();}
onClick(ev){if(ev.hasClosedTableStylesPopover||this.state.popoverProps){this.closePopover();return;}
if(this.env.model.getters.getFirstTableInSelection()){this.topBarToolStore.closeDropdowns();this.env.toggleSidePanel("TableSidePanel",{});return;}
const target=ev.currentTarget;const{left,bottom}=target.getBoundingClientRect();this.topBarToolStore.openDropdown();this.state.popoverProps={anchorRect:{x:left,y:bottom,width:0,height:0},positioning:"bottom-left",verticalOffset:0,};}
closePopover(){this.state.popoverProps=undefined;}
get action(){return{name:(env)=>env.model.getters.getFirstTableInSelection()?_t("Edit table"):_t("Insert table"),icon:(env)=>env.model.getters.getFirstTableInSelection()?"o-spreadsheet-Icon.EDIT_TABLE":"o-spreadsheet-Icon.PAINT_TABLE",};}
get tableConfig(){return{...DEFAULT_TABLE_CONFIG,numberOfHeaders:1,bandedRows:true};}}
class TopBarColorEditor extends Component{static components={ColorPickerWidget};static props={class:String,style:String,icon:String,title:String};static template="o-spreadsheet-ColorEditor";topBarToolStore;state=useState({isOpen:false,});setup(){this.topBarToolStore=useToolBarDropdownStore();}
get currentColor(){return(this.env.model.getters.getCurrentStyle()[this.props.style]||(this.props.style==="textColor"?"#000000":"#ffffff"));}
setColor(color){setStyle(this.env,{[this.props.style]:color});this.state.isOpen=false;}
get isMenuOpen(){return this.topBarToolStore.isActive;}
onClick(){if(!this.isMenuOpen){this.topBarToolStore.openDropdown();}
else{this.topBarToolStore.closeDropdowns();}}}
class DropdownAction extends Component{static template="o-spreadsheet-DropdownAction";static components={ActionButton,Popover};static props={parentAction:Object,childActions:Array,class:String,childClass:String,};topBarToolStore;actionRef=useRef("actionRef");setup(){this.topBarToolStore=useToolBarDropdownStore();}
toggleDropdown(){if(this.isActive){this.topBarToolStore.closeDropdowns();}
else{this.topBarToolStore.openDropdown();}}
get isActive(){return this.topBarToolStore.isActive;}
get popoverProps(){const rect=this.actionRef.el?this.actionRef.el.getBoundingClientRect():{x:0,y:0,width:0,height:0};return{anchorRect:rect,positioning:"bottom-left",verticalOffset:0,class:"rounded",};}}
class TopBarFontSizeEditor extends Component{static components={FontSizeEditor};static props={class:String};static template="o-spreadsheet-TopBarFontSizeEditor";topBarToolStore;setup(){this.topBarToolStore=useToolBarDropdownStore();}
get currentFontSize(){return this.env.model.getters.getCurrentStyle().fontSize||DEFAULT_FONT_SIZE;}
setFontSize(fontSize){setStyle(this.env,{fontSize});}
onToggle(){if(this.isActive){this.topBarToolStore.closeDropdowns();}
else{this.topBarToolStore.openDropdown();}}
onFocusInput(){this.topBarToolStore.openDropdown();}
get isActive(){return this.topBarToolStore.isActive;}}
class NumberFormatsTool extends Component{static template="o-spreadsheet-NumberFormatsTool";static components={MenuPopover,ActionButton};static props={class:String};formatNumberMenuItemSpec=formatNumberMenuItemSpec;topBarToolStore;buttonRef=useRef("buttonRef");state=useState({anchorRect:{x:0,y:0,width:0,height:0},menuItems:[],});setup(){this.topBarToolStore=useToolBarDropdownStore();}
toggleMenu(){if(this.isActive){this.topBarToolStore.closeDropdowns();}
else{const menu=createAction(this.formatNumberMenuItemSpec);this.state.menuItems=menu.children(this.env).sort((a,b)=>a.sequence-b.sequence);this.state.anchorRect=getBoundingRectAsPOJO(this.buttonRef.el);this.topBarToolStore.openDropdown();}}
get isActive(){return this.topBarToolStore.isActive;}}
const topBarToolBarRegistry=new ToolBarRegistry();topBarToolBarRegistry.add("edit").addChild("edit",{component:ActionButton,props:{action:undo,class:"o-hoverable-button o-toolbar-button",},sequence:1,}).addChild("edit",{component:ActionButton,props:{action:redo,class:"o-hoverable-button o-toolbar-button",},sequence:2,}).addChild("edit",{component:PaintFormatButton,props:{class:"o-hoverable-button o-toolbar-button o-mobile-disabled",},sequence:3,}).addChild("edit",{component:ActionButton,props:{action:clearFormat,class:"o-hoverable-button o-toolbar-button",},sequence:4,}).add("numberFormat").addChild("numberFormat",{component:ActionButton,props:{action:formatPercent,class:"o-hoverable-button o-toolbar-button",},sequence:1,}).addChild("numberFormat",{component:ActionButton,props:{action:decreaseDecimalPlaces,class:"o-hoverable-button o-toolbar-button",},sequence:2,}).addChild("numberFormat",{component:ActionButton,props:{action:increaseDecimalPlaces,class:"o-hoverable-button o-toolbar-button",},sequence:3,}).addChild("numberFormat",{component:NumberFormatsTool,props:{class:"o-menu-item-button o-hoverable-button o-toolbar-button",},sequence:4,}).add("fontSize").addChild("fontSize",{component:TopBarFontSizeEditor,props:{class:"o-hoverable-button o-toolbar-button",},sequence:3,}).add("textStyle").addChild("textStyle",{component:ActionButton,props:{action:formatBold,class:"o-hoverable-button o-toolbar-button",},sequence:1,}).addChild("textStyle",{component:ActionButton,props:{action:formatItalic,class:"o-hoverable-button o-toolbar-button",},sequence:2,}).addChild("textStyle",{component:ActionButton,props:{action:formatStrikethrough,class:"o-hoverable-button o-toolbar-button",},sequence:3,}).addChild("textStyle",{component:TopBarColorEditor,props:{class:"o-hoverable-button o-menu-item-button o-toolbar-button",style:"textColor",icon:"o-spreadsheet-Icon.TEXT_COLOR",title:_t("Text Color"),},sequence:4,}).add("cellStyle").addChild("cellStyle",{component:TopBarColorEditor,props:{class:"o-hoverable-button o-menu-item-button o-toolbar-button",style:"fillColor",icon:"o-spreadsheet-Icon.FILL_COLOR",title:_t("Fill Color"),},sequence:1,}).addChild("cellStyle",{component:BorderEditorWidget,props:{class:"o-hoverable-button o-menu-item-button o-toolbar-button",},sequence:2,}).addChild("cellStyle",{component:ActionButton,props:{action:mergeCells,class:"o-hoverable-button o-menu-item-button o-toolbar-button",},sequence:3,}).add("alignment").addChild("alignment",{component:DropdownAction,props:{parentAction:formatAlignmentHorizontal,childActions:[formatAlignmentLeft,formatAlignmentCenter,formatAlignmentRight,],class:"o-hoverable-button o-toolbar-button",childClass:"o-hoverable-button",},sequence:1,}).addChild("alignment",{component:DropdownAction,props:{parentAction:formatAlignmentVertical,childActions:[formatAlignmentTop,formatAlignmentMiddle,formatAlignmentBottom,],class:"o-hoverable-button o-menu-item-button o-toolbar-button",childClass:"o-hoverable-button",},sequence:2,}).addChild("alignment",{component:DropdownAction,props:{parentAction:formatWrapping,childActions:[formatWrappingOverflow,formatWrappingWrap,formatWrappingClip,],class:"o-hoverable-button o-menu-item-button o-toolbar-button",childClass:"o-hoverable-button",},sequence:3,}).add("misc").addChild("misc",{component:TableDropdownButton,props:{class:"o-toolbar-button o-hoverable-button o-menu-item-button o-mobile-disabled"},sequence:1,}).addChild("misc",{component:ActionButton,props:{action:createRemoveFilterTool,class:"o-hoverable-button o-menu-item-button o-toolbar-button",},sequence:2,});css`
  .o-topbar-divider {
    border-right: 1px solid ${SEPARATOR_COLOR};
    width: 0;
    margin: 0 6px;
    height: 30px;
  }

  .o-toolbar-button {
    height: 30px;
  }

  .o-spreadsheet-topbar {
    line-height: 1.2;
    font-size: 14px;
    font-weight: 500;
    background-color: #fff;

    .o-topbar-top {
      border-bottom: 1px solid ${SEPARATOR_COLOR};
      padding: 2px 10px;

      /* Menus */
      .o-topbar-topleft {
        .o-topbar-menu {
          padding: 4px 6px;
          margin: 0 2px;

          &.active {
            background-color: ${BUTTON_ACTIVE_BG};
            color: ${BUTTON_ACTIVE_TEXT_COLOR};
          }
        }
      }
    }

    .irregularity-map {
      border-top: 1px solid ${SEPARATOR_COLOR};
      height: ${DESKTOP_TOPBAR_TOOLBAR_HEIGHT}px;

      .alert-info {
        border-left: 3px solid ${ALERT_INFO_BORDER};
      }
    }

    .o-topbar-composer {
      flex-grow: 1;
    }

    /* Toolbar */
    .o-topbar-toolbar {
      height: ${DESKTOP_TOPBAR_TOOLBAR_HEIGHT}px;

      .o-readonly-toolbar {
        background-color: ${BACKGROUND_HEADER_COLOR};
        padding-left: 18px;
        padding-right: 18px;
      }

      /* Toolbar */
      .o-toolbar-tools {
        cursor: default;
      }
    }
  }

  .o-spreadsheet-mobile {
    .o-topbar-toolbar {
      height: ${MOBILE_TOPBAR_TOOLBAR_HEIGHT}px;
    }
    .o-topbar-divider {
      border-width: 2px;
      border-radius: 4px;
    }

    .o-toolbar-button {
      height: 35px;
      width: 31px;
      .o-toolbar-button.o-mobile-disabled * {
      color: ${DISABLED_TEXT_COLOR};
      cursor: not-allowed;
    }
  }
`;class TopBar extends Component{static template="o-spreadsheet-TopBar";static props={onClick:Function,dropdownMaxHeight:Number,};static components={MenuPopover,TopBarComposer,Popover,};toolsCategories=topBarToolBarRegistry.getCategories();state=useState({menuState:{isOpen:false,anchorRect:null,menuItems:[]},invisibleToolsCategories:[],toolsPopoverState:{isOpen:false},});isSelectingMenu=false;openedEl=null;menus=[];toolbarMenuRegistry=topBarToolBarRegistry;formatNumberMenuItemSpec=formatNumberMenuItemSpec;isntToolbarMenu=false;composerFocusStore;fingerprints;topBarToolStore;toolBarContainerRef=useRef("toolBarContainer");toolbarRef=useRef("toolBar");moreToolsContainerRef=useRef("moreToolsContainer");moreToolsButtonRef=useRef("moreToolsButton");spreadsheetRect=useSpreadsheetRect();setup(){this.composerFocusStore=useStore(ComposerFocusStore);this.fingerprints=useStore(FormulaFingerprintStore);this.topBarToolStore=useStore(TopBarToolStore);useExternalListener(window,"click",this.onExternalClick);onWillStart(()=>this.updateCellState());onWillUpdateProps(()=>this.updateCellState());useEffect(()=>{this.state.toolsPopoverState.isOpen=false;this.setVisibilityToolsGroups();},()=>[this.spreadsheetRect.width]);}
setVisibilityToolsGroups(){if(this.env.model.getters.isReadonly()){return;}
const hiddenCategories=[];const{x:toolsX}=this.toolbarRef.el.getBoundingClientRect();const{x}=this.toolBarContainerRef.el.getBoundingClientRect();this.moreToolsContainerRef.el?.classList.remove("d-none");const moreToolsWidth=this.moreToolsButtonRef.el?.getBoundingClientRect().width||0;const usableWidth=Math.round(this.spreadsheetRect.width)-moreToolsWidth-(toolsX-x)-16;const toolElements=document.querySelectorAll(".tool-container");let currentWidth=0;for(let index=0;index<toolElements.length;index++){const element=toolElements[index];element.classList.remove("d-none");const{width:toolWidth}=element.getBoundingClientRect();currentWidth+=toolWidth;if(currentWidth>usableWidth){element.classList.add("d-none");hiddenCategories.push(this.toolsCategories[index]);}}
this.state.invisibleToolsCategories=hiddenCategories;if(!hiddenCategories.length){this.moreToolsContainerRef.el?.classList.add("d-none");}}
get topbarComponents(){return topbarComponentRegistry.getAllOrdered().filter((item)=>!item.isVisible||item.isVisible(this.env));}
get currentFontSize(){return this.env.model.getters.getCurrentStyle().fontSize||DEFAULT_FONT_SIZE;}
onExternalClick(ev){if(this.openedEl===ev.target){return;}
this.closeMenus();}
onClick(){this.props.onClick();this.closeMenus();}
onMenuMouseOver(menu,ev){if(this.isSelectingMenu&&this.isntToolbarMenu){this.openMenu(menu,ev);}}
toggleContextMenu(menu,ev){if(this.state.menuState.isOpen&&this.isntToolbarMenu){this.closeMenus();}
else{this.openMenu(menu,ev);this.isntToolbarMenu=true;}}
openMenu(menu,ev){if(this.topBarToolStore.currentDropdown){this.topBarToolStore.closeDropdowns();}
this.state.toolsPopoverState.isOpen=false;this.state.menuState.isOpen=true;this.state.menuState.anchorRect=getBoundingRectAsPOJO(ev.currentTarget);this.state.menuState.menuItems=menu.children(this.env).sort((a,b)=>a.sequence-b.sequence);this.state.menuState.parentMenu=menu;this.isSelectingMenu=true;this.openedEl=ev.target;this.composerFocusStore.activeComposer.stopEdition();}
closeMenus(){if(this.topBarToolStore.currentDropdown){this.topBarToolStore.closeDropdowns();}
this.state.toolsPopoverState.isOpen=false;this.state.menuState.isOpen=false;this.state.menuState.parentMenu=undefined;this.isSelectingMenu=false;this.openedEl=null;}
updateCellState(){this.menus=topbarMenuRegistry.getMenuItems();}
getMenuName(menu){return menu.name(this.env);}
setColor(target,color){setStyle(this.env,{[target]:color});this.onClick();}
setFontSize(fontSize){setStyle(this.env,{fontSize});}
toggleMoreTools(){if(this.topBarToolStore.currentDropdown){this.topBarToolStore.closeDropdowns();}
this.state.toolsPopoverState.isOpen=!this.state.toolsPopoverState.isOpen;}
get toolsPopoverProps(){const rect=this.moreToolsButtonRef.el?getBoundingRectAsPOJO(this.moreToolsButtonRef.el):{x:0,y:0,width:0,height:0};return{anchorRect:rect,positioning:"bottom-left",verticalOffset:0,class:"rounded",maxWidth:300,};}
showDivider(categoryIndex){return(categoryIndex<this.toolsCategories.length-1||this.state.invisibleToolsCategories.length>0);}}
function instantiateClipboard(){return new WebClipboardWrapper(navigator.clipboard);}
class WebClipboardWrapper{clipboard;constructor(clipboard){this.clipboard=clipboard;}
async write(clipboardContent){if(this.clipboard?.write){try{await this.clipboard?.write(this.getClipboardItems(clipboardContent));}
catch(e){console.log("Failed to write on the clipboard, falling back to plain/html text. Error %s",e);try{await this.clipboard?.write([new ClipboardItem({[ClipboardMIMEType.PlainText]:this.getBlob(clipboardContent,ClipboardMIMEType.PlainText),[ClipboardMIMEType.Html]:this.getBlob(clipboardContent,ClipboardMIMEType.Html),}),]);}
catch(e){}}}
else{await this.writeText(clipboardContent[ClipboardMIMEType.PlainText]??"");}}
async writeText(text){try{this.clipboard?.writeText(text);}
catch(e){}}
async read(){let permissionResult=undefined;try{permissionResult=await navigator.permissions.query({name:"clipboard-read"});}
catch(e){}
if(this.clipboard?.read){try{const clipboardItems=await this.clipboard.read();const osClipboardContent={};for(const item of clipboardItems){for(const type of item.types){const blob=await item.getType(type);if(AllowedImageMimeTypes.includes(type)){osClipboardContent[type]=blob;}
else{const text=await blob.text();osClipboardContent[type]=text;}}}
return{status:"ok",content:osClipboardContent};}
catch(e){const status=permissionResult?.state==="denied"?"permissionDenied":"notImplemented";return{status};}}
else{return{status:"ok",content:{[ClipboardMIMEType.PlainText]:await this.clipboard?.readText(),},};}}
getClipboardItems(content){const clipboardItemData={};for(const type of Object.keys(content)){clipboardItemData[type]=this.getBlob(content,type);}
return[new ClipboardItem(clipboardItemData)];}
getBlob(clipboardContent,type){const content=clipboardContent[type];if(content instanceof Blob||content instanceof File){return content;}
return new Blob([clipboardContent[type]||""],{type,});}}
const CARET_DOWN_SVG=`
<svg xmlns='http://www.w3.org/2000/svg' width='7' height='4' viewBox='0 0 7 4'>
  <polygon fill='%23374151' points='3.5 4 7 0 0 0'/>
</svg>
`;css`
  .o-spreadsheet {
    position: relative;
    display: grid;
    font-size: 14px;

    .text-muted {
      color: ${TEXT_BODY_MUTED} !important;
    }
    .o-disabled {
      opacity: 0.4;
      cursor: default;
      pointer-events: none;
    }

    &,
    *,
    *:before,
    *:after {
      /* rtl not supported ATM */
      direction: ltr;
    }
    .o-separator {
      border-bottom: ${MENU_SEPARATOR_BORDER_WIDTH}px solid ${SEPARATOR_COLOR};
      margin-top: ${MENU_SEPARATOR_PADDING}px;
      margin-bottom: ${MENU_SEPARATOR_PADDING}px;
    }
    .o-hoverable-button {
      border-radius: 2px;
      cursor: pointer;
      .o-icon {
        color: ${TEXT_BODY};
      }
      &:not(.o-disabled):not(.active):hover {
        background-color: ${BUTTON_HOVER_BG};
        color: ${BUTTON_HOVER_TEXT_COLOR};
        .o-icon {
          color: ${BUTTON_HOVER_TEXT_COLOR};
        }
      }
      &.active {
        background-color: ${BUTTON_ACTIVE_BG};
        color: ${BUTTON_ACTIVE_TEXT_COLOR};
        .o-icon {
          color: ${BUTTON_ACTIVE_TEXT_COLOR};
        }
      }
    }

    .o-grid-container {
      display: grid;
      background-color: ${HEADER_GROUPING_BACKGROUND_COLOR};

      .o-top-left {
        border: 1px solid ${GRID_BORDER_COLOR};
        margin-bottom: -1px;
        margin-right: -1px;
      }

      .o-column-groups {
        grid-column-start: 2;
        border-top: 1px solid ${GRID_BORDER_COLOR};
      }

      .o-row-groups {
        grid-row-start: 2;
      }

      .o-group-grid {
        border-top: 1px solid ${GRID_BORDER_COLOR};
        border-left: 1px solid ${GRID_BORDER_COLOR};
      }
    }

    .o-input {
      min-width: 0px;
      padding: 1px 0;
      width: 100%;
      outline: none;
      border-color: ${GRAY_300};
      color: ${GRAY_900};

      &::placeholder {
        opacity: 0.5;
      }
      &:focus {
        border-color: ${ACTION_COLOR};
      }
    }

    select.o-input {
      cursor: pointer;
      border-width: 0 0 1px 0;
      padding: 1px 6px 1px 0px;

      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: none;
      background: transparent url("data:image/svg+xml,${encodeURIComponent(CARET_DOWN_SVG)}")
        no-repeat right center;
      text-overflow: ellipsis;

      &:disabled {
        color: ${DISABLED_TEXT_COLOR};
        opacity: 0.4;
        cursor: default;
      }
    }

    .o-input[type="text"] {
      border-width: 0 0 1px 0;
    }

    .o-input[type="number"],
    .o-number-input {
      border-width: 0 0 1px 0;
      /* Remove number input arrows */
      appearance: textfield;
      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }
  }

  .o-two-columns {
    grid-column: 1 / 3;
  }

  .o-text-icon {
    vertical-align: middle;
  }
`;css`
  .o-grid {
    position: relative;
    overflow: hidden;
    background-color: ${BACKGROUND_GRAY_COLOR};
    &:focus {
      outline: none;
    }

    > canvas {
      box-sizing: content-box;
      border-bottom: 1px solid #e2e3e3;
      border-right: 1px solid #e2e3e3;
    }

    .o-grid-overlay {
      position: absolute;
      outline: none;
    }
  }

  .o-button {
    border: 1px solid;
    border-radius: 4px;
    font-weight: 500;
    font-size: 14px;
    height: 32px;
    line-height: 16px;
    flex-grow: 1;
    background-color: ${BUTTON_BG};
    border: 1px solid ${GRAY_200};
    color: ${TEXT_BODY};

    &:disabled {
      color: ${DISABLED_TEXT_COLOR};
    }

    &.primary {
      background-color: ${PRIMARY_BUTTON_BG};
      border-color: ${PRIMARY_BUTTON_BG};
      color: #fff;
      &:hover:enabled {
        color: #fff;
        background-color: ${PRIMARY_BUTTON_HOVER_BG};
      }
      &:active:enabled {
        background-color: ${PRIMARY_BUTTON_ACTIVE_BG};
        color: ${PRIMARY_BUTTON_BG};
      }
      &.o-disabled,
      &:disabled {
        opacity: 0.5;
      }
    }

    &:hover:enabled {
      color: ${BUTTON_HOVER_TEXT_COLOR};
      background-color: ${BUTTON_HOVER_BG};
    }
    &:active:enabled {
      color: ${BUTTON_ACTIVE_TEXT_COLOR};
      background-color: ${BUTTON_ACTIVE_BG};
    }

    &.o-disabled,
    &:disabled {
      opacity: 0.8;
    }

    &.o-button-danger:hover {
      color: #ffffff;
      background: ${ALERT_DANGER_BORDER};
    }
  }

  .o-button-link {
    cursor: pointer;
    text-decoration: none;
    color: ${ACTION_COLOR};
    font-weight: 500;
    &:hover,
    &:active {
      color: ${ACTION_COLOR_HOVER};
    }
  }

  .o-button-icon {
    cursor: pointer;
    color: ${TEXT_BODY_MUTED};
    font-weight: 500;
    &:hover,
    &:active {
      color: ${TEXT_BODY};
    }
  }

  .o-spreadsheet-topbar-wrapper,
  .o-spreadsheet-bottombar-wrapper {
    z-index: ${ComponentsImportance.ScrollBar + 1};
  }
`;class Spreadsheet extends Component{static template="o-spreadsheet-Spreadsheet";static props={model:Object,notifyUser:{type:Function,optional:true},raiseError:{type:Function,optional:true},askConfirmation:{type:Function,optional:true},};static components={TopBar,Grid,BottomBar,SmallBottomBar,SidePanels,SpreadsheetDashboard,HeaderGroupContainer,FullScreenChart,};sidePanel;spreadsheetRef=useRef("spreadsheet");spreadsheetRect=useSpreadsheetRect();_focusGrid;isViewportTooSmall=false;notificationStore;composerFocusStore;get model(){return this.props.model;}
getStyle(){const properties={};if(this.env.isDashboard()){properties["grid-template-rows"]=`auto`;}
else{properties["grid-template-rows"]=`min-content auto min-content`;}
const columnWidth=this.sidePanel.mainPanel?`${this.sidePanel.totalPanelSize || DEFAULT_SIDE_PANEL_SIZE}px`:"auto";properties["grid-template-columns"]=`auto ${columnWidth}`;return cssPropertiesToCss(properties);}
setup(){if(!("isSmall"in this.env)){const screenSize=useScreenWidth();useSubEnv({get isSmall(){return screenSize.isSmall;},});}
const stores=useStoreProvider();stores.inject(ModelStore,this.model);const env=this.env;stores.get(ScreenWidthStore).setSmallThreshhold(()=>{return env.isSmall;});this.notificationStore=useStore(NotificationStore);this.composerFocusStore=useStore(ComposerFocusStore);this.sidePanel=useStore(SidePanelStore);const fileStore=this.model.config.external.fileStore;useSubEnv({model:this.model,imageProvider:fileStore?new ImageProvider(fileStore):undefined,loadCurrencies:this.model.config.external.loadCurrencies,loadLocales:this.model.config.external.loadLocales,isDashboard:()=>this.model.getters.isDashboard(),openSidePanel:this.sidePanel.open.bind(this.sidePanel),toggleSidePanel:this.sidePanel.toggle.bind(this.sidePanel),clipboard:this.env.clipboard||instantiateClipboard(),startCellEdition:(content)=>this.composerFocusStore.focusActiveComposer({content}),notifyUser:(notification)=>this.notificationStore.notifyUser(notification),askConfirmation:(text,confirm,cancel)=>this.notificationStore.askConfirmation(text,confirm,cancel),raiseError:(text,cb)=>this.notificationStore.raiseError(text,cb),isMobile:isMobileOS,});this.notificationStore.updateNotificationCallbacks({...this.props});useEffect(()=>{if(!this.spreadsheetRef.el.contains(document.activeElement)&&document.activeElement?.contains(this.spreadsheetRef.el)){this.focusGrid();}},()=>[this.env.model.getters.getActiveSheetId()]);useExternalListener(window,"resize",()=>this.render(true));useExternalListener(document.body,"wheel",()=>{});this.bindModelEvents();onWillUpdateProps((nextProps)=>{if(nextProps.model!==this.props.model){throw new Error("Changing the props model is not supported at the moment.");}
if(nextProps.notifyUser!==this.props.notifyUser||nextProps.askConfirmation!==this.props.askConfirmation||nextProps.raiseError!==this.props.raiseError){this.notificationStore.updateNotificationCallbacks({...nextProps});}});const render=batched(this.render.bind(this,true));onMounted(()=>{this.checkViewportSize();stores.on("store-updated",this,render);resizeObserver.observe(this.spreadsheetRef.el);registerChartJSExtensions();});onWillUnmount(()=>{this.unbindModelEvents();stores.off("store-updated",this);resizeObserver.disconnect();unregisterChartJsExtensions();});onPatched(()=>{this.checkViewportSize();});const resizeObserver=new ResizeObserver(()=>{this.sidePanel.changeSpreadsheetWidth(this.spreadsheetRect.width);});}
bindModelEvents(){this.model.on("update",this,()=>this.render(true));this.model.on("notify-ui",this,(notification)=>this.notificationStore.notifyUser(notification));this.model.on("raise-error-ui",this,({text})=>this.notificationStore.raiseError(text));}
unbindModelEvents(){this.model.off("update",this);this.model.off("notify-ui",this);this.model.off("raise-error-ui",this);}
checkViewportSize(){const{xRatio,yRatio}=this.env.model.getters.getFrozenSheetViewRatio(this.env.model.getters.getActiveSheetId());if(!isFinite(xRatio)||!isFinite(yRatio)){return;}
if(yRatio>MAXIMAL_FREEZABLE_RATIO||xRatio>MAXIMAL_FREEZABLE_RATIO){if(this.isViewportTooSmall){return;}
this.notificationStore.notifyUser({text:_t("The current window is too small to display this sheet properly. Consider resizing your browser window or adjusting frozen rows and columns."),type:"warning",sticky:false,});this.isViewportTooSmall=true;}
else{this.isViewportTooSmall=false;}}
focusGrid(){if(!this._focusGrid){return;}
this._focusGrid();}
get gridHeight(){return this.env.model.getters.getSheetViewDimension().height;}
get gridContainerStyle(){const gridColSize=GROUP_LAYER_WIDTH*this.rowLayers.length;const gridRowSize=GROUP_LAYER_WIDTH*this.colLayers.length;return cssPropertiesToCss({"grid-template-columns":`${gridColSize ? gridColSize + 2 : 0}px auto`,"grid-template-rows":`${gridRowSize ? gridRowSize + 2 : 0}px auto`,});}
get rowLayers(){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getVisibleGroupLayers(sheetId,"ROW");}
get colLayers(){const sheetId=this.env.model.getters.getActiveSheetId();return this.env.model.getters.getVisibleGroupLayers(sheetId,"COL");}
getGridSize(){const topBarHeight=this.spreadsheetRef.el?.querySelector(".o-spreadsheet-topbar-wrapper")?.getBoundingClientRect().height||0;const bottomBarHeight=this.spreadsheetRef.el?.querySelector(".o-spreadsheet-bottombar-wrapper")?.getBoundingClientRect().height||0;const gridWidth=this.spreadsheetRef.el?.querySelector(".o-grid")?.getBoundingClientRect().width||0;const gridHeight=(this.spreadsheetRef.el?.getBoundingClientRect().height||0)-
(this.spreadsheetRef.el?.querySelector(".o-column-groups")?.getBoundingClientRect().height||0)-
topBarHeight-
bottomBarHeight;return{width:Math.max(gridWidth-SCROLLBAR_WIDTH,0),height:Math.max(gridHeight-SCROLLBAR_WIDTH,0),};}}
function inverseCommand(cmd){return inverseCommandRegistry.get(cmd.type)(cmd);}
class Branch{buildTransformation;operations;constructor(buildTransformation,operations=[]){this.buildTransformation=buildTransformation;this.operations=operations;}
getOperations(){return this.operations;}
getOperation(operationId){const operation=this.operations.find((op)=>op.id===operationId);if(!operation){throw new Error(`Operation ${operationId} not found`);}
return operation;}
getLastOperationId(){return this.operations[this.operations.length-1]?.id;}
getFirstOperationAmong(op1,op2){for(const operation of this.operations){if(operation.id===op1)
return op1;if(operation.id===op2)
return op2;}
throw new Error(`Operation ${op1} and ${op2} not found`);}
contains(operationId){return!!this.operations.find((operation)=>operation.id===operationId);}
prepend(operation){const transformation=this.buildTransformation.with(operation.data);this.operations=[operation,...this.operations.map((operation)=>operation.transformed(transformation)),];}
insert(newOperation,predecessorOpId){const transformation=this.buildTransformation.with(newOperation.data);const{before,operation,after}=this.locateOperation(predecessorOpId);this.operations=[...before,operation,newOperation,...after.map((operation)=>operation.transformed(transformation)),];}
append(operation){this.operations.push(operation);}
appendBranch(branch){this.operations=this.operations.concat(branch.operations);}
fork(operationId){const{after}=this.locateOperation(operationId);return new Branch(this.buildTransformation,after);}
transform(transformation){this.operations=this.operations.map((operation)=>operation.transformed(transformation));}
cutBefore(operationId){this.operations=this.locateOperation(operationId).before;}
cutAfter(operationId){const{before,operation}=this.locateOperation(operationId);this.operations=before.concat([operation]);}
locateOperation(operationId){const operationIndex=this.operations.findIndex((step)=>step.id===operationId);if(operationIndex===-1){throw new Error(`Operation ${operationId} not found`);}
return{before:this.operations.slice(0,operationIndex),operation:this.operations[operationIndex],after:this.operations.slice(operationIndex+1),};}}
class Operation{id;data;constructor(id,data){this.id=id;this.data=data;}
transformed(transformation){return new LazyOperation(this.id,lazy(()=>transformation(this.data)));}}
class LazyOperation{id;lazyData;constructor(id,lazyData){this.id=id;this.lazyData=lazyData;}
get data(){return this.lazyData();}
transformed(transformation){return new LazyOperation(this.id,this.lazyData.map(transformation));}}
class OperationSequence{operations;constructor(operations){this.operations=operations;}
[Symbol.iterator](){return this.operations[Symbol.iterator]();}
stopWith(operationId){function*filter(execution,operationId){for(const step of execution){yield step;if(step.operation.id===operationId){return;}}}
return new OperationSequence(filter(this.operations,operationId));}
stopBefore(operationId){function*filter(execution,operationId){for(const step of execution){if(step.operation.id===operationId){return;}
yield step;}}
return new OperationSequence(filter(this.operations,operationId));}
startAfter(operationId){function*filter(execution,operationId){let skip=true;for(const step of execution){if(!skip){yield step;}
if(step.operation.id===operationId){skip=false;}}}
return new OperationSequence(filter(this.operations,operationId));}}
class Tree{buildTransformation;branches;branchingOperationIds=new Map();constructor(buildTransformation,initialBranch){this.buildTransformation=buildTransformation;this.branches=[initialBranch];}
getLastBranch(){return this.branches[this.branches.length-1];}
execution(branch){return new OperationSequence(linkNext(this._execution(branch),this._execution(branch)));}
revertedExecution(branch){return new OperationSequence(linkNext(this._revertedExecution(branch),this._revertedExecution(branch)));}
insertOperationLast(branch,operation){const insertAfter=branch.getLastOperationId()||this.previousBranch(branch)?.getLastOperationId();branch.append(operation);if(insertAfter){this.insertPrevious(branch,operation,insertAfter);}}
insertOperationAfter(branch,operation,predecessorOpId){branch.insert(operation,predecessorOpId);this.updateNextWith(branch,operation,predecessorOpId);this.insertPrevious(branch,operation,predecessorOpId);}
undo(branch,operation){const transformation=this.buildTransformation.without(operation.data);const branchingId=this.branchingOperationIds.get(branch);this.branchingOperationIds.set(branch,operation.id);const nextBranch=branch.fork(operation.id);if(branchingId){this.branchingOperationIds.set(nextBranch,branchingId);}
this.insertBranchAfter(branch,nextBranch);this.transform(nextBranch,transformation);}
redo(branch){const removedBranch=this.nextBranch(branch);if(!removedBranch)
return;const nextBranch=this.nextBranch(removedBranch);this.removeBranchFromTree(removedBranch);const undoBranchingId=this.branchingOperationIds.get(removedBranch);if(undoBranchingId){this.branchingOperationIds.set(branch,undoBranchingId);}
else{this.branchingOperationIds.delete(branch);}
if(nextBranch){this.rebaseUp(nextBranch);}}
drop(operationId){for(const branch of this.branches){if(branch.contains(operationId)){branch.cutBefore(operationId);}}}
findOperation(branch,operationId){for(const operation of this.revertedExecution(branch)){if(operation.operation.id===operationId){return operation;}}
throw new Error(`Operation ${operationId} not found`);}
rebaseUp(branch){const{previousBranch,branchingOperation}=this.findPreviousBranchingOperation(branch);if(!previousBranch||!branchingOperation)
return;const rebaseTransformation=this.buildTransformation.without(branchingOperation.data);const newBranch=previousBranch.fork(branchingOperation.id);this.branchingOperationIds.set(newBranch,this.branchingOperationIds.get(branch));this.removeBranchFromTree(branch);this.insertBranchAfter(previousBranch,newBranch);newBranch.transform(rebaseTransformation);const nextBranch=this.nextBranch(newBranch);if(nextBranch){this.rebaseUp(nextBranch);}}
removeBranchFromTree(branch){const index=this.branches.findIndex((l)=>l===branch);this.branches.splice(index,1);}
insertBranchAfter(branch,toInsert){const index=this.branches.findIndex((l)=>l===branch);this.branches.splice(index+1,0,toInsert);}
updateNextWith(branch,operation,predecessorOpId){const branchingId=this.branchingOperationIds.get(branch);const nextBranch=this.nextBranch(branch);if(!branchingId||!nextBranch){return;}
if(branch.getFirstOperationAmong(predecessorOpId,branchingId)===branchingId){const transformedOperation=this.addToNextBranch(branch,nextBranch,branchingId,operation,predecessorOpId);this.updateNextWith(nextBranch,transformedOperation,predecessorOpId);}
else{const transformation=this.buildTransformation.with(operation.data);this.transform(nextBranch,transformation);}}
addToNextBranch(branch,nextBranch,branchingId,operation,predecessorOpId){let transformedOperation=operation;if(predecessorOpId===branchingId){transformedOperation=this.getTransformedOperation(branch,branchingId,operation);nextBranch.prepend(transformedOperation);}
else if(nextBranch.contains(predecessorOpId)){transformedOperation=this.getTransformedOperation(branch,branchingId,operation);nextBranch.insert(transformedOperation,predecessorOpId);}
else{nextBranch.append(operation);}
return transformedOperation;}
getTransformedOperation(branch,branchingId,operation){const branchingOperation=branch.getOperation(branchingId);const branchingTransformation=this.buildTransformation.without(branchingOperation.data);return operation.transformed(branchingTransformation);}
shouldExecute(branch,operation){return operation.id!==this.branchingOperationIds.get(branch);}
transform(branch,transformation){branch.transform(transformation);const nextBranch=this.nextBranch(branch);if(nextBranch){this.transform(nextBranch,transformation);}}
insertPrevious(branch,newOperation,insertAfter){const{previousBranch,branchingOperation}=this.findPreviousBranchingOperation(branch);if(!previousBranch||!branchingOperation)
return;const transformation=this.buildTransformation.with(branchingOperation.data);const branchTail=branch.fork(insertAfter);branchTail.transform(transformation);previousBranch.cutAfter(insertAfter);previousBranch.appendBranch(branchTail);const operationToInsert=newOperation.transformed(transformation);this.insertPrevious(previousBranch,operationToInsert,insertAfter);}
findPreviousBranchingOperation(branch){const previousBranch=this.previousBranch(branch);if(!previousBranch)
return{previousBranch:undefined,branchingOperation:undefined};const previousBranchingId=this.branchingOperationIds.get(previousBranch);if(!previousBranchingId)
return{previousBranch:undefined,branchingOperation:undefined};return{previousBranch,branchingOperation:previousBranch.getOperation(previousBranchingId),};}
nextBranch(branch){const index=this.branches.findIndex((l)=>l===branch);if(index===-1){return undefined;}
return this.branches[index+1];}
previousBranch(branch){const index=this.branches.findIndex((l)=>l===branch);if(index===-1){return undefined;}
return this.branches[index-1];}*_revertedExecution(branch){const branchingOperationId=this.branchingOperationIds.get(branch);let afterBranchingPoint=!!branchingOperationId;const operations=branch.getOperations();for(let i=operations.length-1;i>=0;i--){const operation=operations[i];if(operation.id===branchingOperationId){afterBranchingPoint=false;}
if(!afterBranchingPoint){yield{operation:operation,branch:branch,isCancelled:!this.shouldExecute(branch,operation),};}}
const previous=this.previousBranch(branch);yield*previous?this._revertedExecution(previous):[];}*_execution(branch){for(const operation of branch.getOperations()){yield{operation:operation,branch:branch,isCancelled:!this.shouldExecute(branch,operation),};if(operation.id===this.branchingOperationIds.get(branch)){const next=this.nextBranch(branch);yield*next?this._execution(next):[];return;}}
if(!this.branchingOperationIds.get(branch)){const next=this.nextBranch(branch);yield*next?this._execution(next):[];}}}
class SelectiveHistory{HEAD_BRANCH;HEAD_OPERATION;tree;applyOperation;revertOperation;buildEmpty;buildTransformation;constructor(args){this.applyOperation=args.applyOperation;this.revertOperation=args.revertOperation;this.buildEmpty=args.buildEmpty;this.buildTransformation=args.buildTransformation;this.HEAD_BRANCH=new Branch(this.buildTransformation);this.tree=new Tree(this.buildTransformation,this.HEAD_BRANCH);const initialOperationId=args.initialOperationId;const initial=new Operation(initialOperationId,this.buildEmpty(initialOperationId));this.tree.insertOperationLast(this.HEAD_BRANCH,initial);this.HEAD_OPERATION=initial;}
get(operationId){return this.tree.findOperation(this.HEAD_BRANCH,operationId).operation.data;}
append(operationId,data){const operation=new Operation(operationId,data);const branch=this.tree.getLastBranch();this.tree.insertOperationLast(branch,operation);this.HEAD_BRANCH=branch;this.HEAD_OPERATION=operation;}
insert(operationId,data,insertAfter){const operation=new Operation(operationId,data);this.revertTo(insertAfter);this.tree.insertOperationAfter(this.HEAD_BRANCH,operation,insertAfter);this.fastForward();}
undo(operationId,undoId,insertAfter){const{branch,operation}=this.tree.findOperation(this.HEAD_BRANCH,operationId);this.revertBefore(operationId);this.tree.undo(branch,operation);this.fastForward();this.insert(undoId,this.buildEmpty(undoId),insertAfter);}
redo(operationId,redoId,insertAfter){const{branch}=this.tree.findOperation(this.HEAD_BRANCH,operationId);this.revertBefore(operationId);this.tree.redo(branch);this.fastForward();this.insert(redoId,this.buildEmpty(redoId),insertAfter);}
rebase(operationId){const operation=this.get(operationId);const execution=[...this.tree.execution(this.HEAD_BRANCH).startAfter(operationId)];this.revertBefore(operationId);const baseId=this.HEAD_OPERATION.id;this.tree.drop(operationId);this.insert(operationId,operation,baseId);for(const{operation}of execution){this.insert(operation.id,operation.data,this.HEAD_OPERATION.id);}}
revertBefore(operationId){const execution=this.tree.revertedExecution(this.HEAD_BRANCH).stopWith(operationId);this.revert(execution);}
revertTo(operationId){const execution=operationId?this.tree.revertedExecution(this.HEAD_BRANCH).stopBefore(operationId):this.tree.revertedExecution(this.HEAD_BRANCH);this.revert(execution);}
revert(execution){for(const{next,operation,isCancelled}of execution){if(!isCancelled){this.revertOperation(operation.data);}
if(next){this.HEAD_BRANCH=next.branch;this.HEAD_OPERATION=next.operation;}}}
fastForward(){const operations=this.HEAD_OPERATION?this.tree.execution(this.HEAD_BRANCH).startAfter(this.HEAD_OPERATION.id):this.tree.execution(this.HEAD_BRANCH);for(const{operation:operation,branch,isCancelled}of operations){if(!isCancelled){this.applyOperation(operation.data);}
this.HEAD_OPERATION=operation;this.HEAD_BRANCH=branch;}}}
function buildRevisionLog(args){return new SelectiveHistory({initialOperationId:args.initialRevisionId,applyOperation:(revision)=>{const commands=revision.commands.slice();const{changes}=args.recordChanges(()=>{for(const command of commands){args.dispatch(command);}});revision.setChanges(changes);},revertOperation:(revision)=>revertChanges([revision]),buildEmpty:(id)=>new Revision(id,"empty",[]),buildTransformation:{with:(revision)=>(toTransform)=>{return new Revision(toTransform.id,toTransform.clientId,transformAll(toTransform.commands,revision.commands),toTransform.rootCommand,undefined,toTransform.timestamp);},without:(revision)=>(toTransform)=>{return new Revision(toTransform.id,toTransform.clientId,transformAll(toTransform.commands,revision.commands.map(inverseCommand).flat()),toTransform.rootCommand,undefined,toTransform.timestamp);},},});}
function revertChanges(revisions){for(const revision of revisions.slice().reverse()){for(let i=revision.changes.length-1;i>=0;i--){const change=revision.changes[i];applyChange(change);}}}
function applyChange(change){const target=change.target;const key=change.key;const before=change.before;if(before===undefined){delete target[key];}
else{target[key]=before;}}
class EventStream{observers=new Map();defaultSubscription;mainSubscription;registerAsDefault(owner,callbacks){this.defaultSubscription={owner,callbacks};if(!this.mainSubscription){this.mainSubscription=this.defaultSubscription;}}
observe(owner,callbacks){this.observers.set(owner,{owner,callbacks});}
capture(owner,callbacks){if(this.observers.get(owner)){throw new Error("You are already subscribed forever");}
if(this.mainSubscription?.owner&&this.mainSubscription.owner!==owner){this.mainSubscription.callbacks.release?.();}
this.mainSubscription={owner,callbacks};}
release(owner){if(this.mainSubscription?.owner!==owner||this.observers.get(owner)){return;}
this.mainSubscription=this.defaultSubscription;}
getBackToDefault(){if(this.mainSubscription===this.defaultSubscription){return;}
this.mainSubscription?.callbacks.release?.();this.mainSubscription=this.defaultSubscription;}
isListening(owner){return this.mainSubscription?.owner===owner;}
send(event){this.mainSubscription?.callbacks.handleEvent(event);this.observers.forEach((sub)=>sub.callbacks.handleEvent(event));}}
class SelectionStreamProcessorImpl{getters;stream;anchor;defaultAnchor;constructor(getters){this.getters=getters;this.stream=new EventStream();this.anchor={cell:{col:0,row:0},zone:positionToZone({col:0,row:0})};this.defaultAnchor=this.anchor;}
capture(owner,anchor,callbacks){this.stream.capture(owner,callbacks);this.anchor=anchor;}
registerAsDefault(owner,anchor,callbacks){this.checkAnchorZoneOrThrow(anchor);this.stream.registerAsDefault(owner,callbacks);this.defaultAnchor=anchor;this.capture(owner,anchor,callbacks);}
resetDefaultAnchor(owner,anchor){this.checkAnchorZoneOrThrow(anchor);if(this.stream.isListening(owner)){this.anchor=anchor;}
this.defaultAnchor=anchor;}
resetAnchor(owner,anchor){this.checkAnchorZoneOrThrow(anchor);if(this.stream.isListening(owner)){this.anchor=anchor;}}
observe(owner,callbacks){this.stream.observe(owner,callbacks);}
release(owner){if(this.stream.isListening(owner)){this.stream.release(owner);this.anchor=this.defaultAnchor;}}
getBackToDefault(){this.stream.getBackToDefault();}
modifyAnchor(anchor,mode,options){const sheetId=this.getters.getActiveSheetId();anchor={...anchor,zone:this.getters.expandZone(sheetId,anchor.zone),};return this.processEvent({options,anchor,mode,});}
selectZone(anchor,options={scrollIntoView:true}){return this.modifyAnchor(anchor,"overrideSelection",options);}
selectCell(col,row){const zone=positionToZone({col,row});return this.selectZone({zone,cell:{col,row}},{scrollIntoView:true});}
moveAnchorCell(direction,step=1){if(step!=="end"&&step<=0){return new DispatchResult("InvalidSelectionStep");}
const{col,row}=this.getNextAvailablePosition(direction,step);return this.selectCell(col,row);}
setAnchorCorner(col,row){const sheetId=this.getters.getActiveSheetId();const{col:anchorCol,row:anchorRow}=this.anchor.cell;const zone={left:Math.min(anchorCol,col),top:Math.min(anchorRow,row),right:Math.max(anchorCol,col),bottom:Math.max(anchorRow,row),};const expandedZone=this.getters.expandZone(sheetId,zone);const anchor={zone:expandedZone,cell:{col:anchorCol,row:anchorRow}};return this.processEvent({mode:"updateAnchor",anchor:anchor,options:{scrollIntoView:false},});}
addCellToSelection(col,row){const sheetId=this.getters.getActiveSheetId();({col,row}=this.getters.getMainCellPosition({sheetId,col,row}));const zone=this.getters.expandZone(sheetId,positionToZone({col,row}));return this.processEvent({options:{scrollIntoView:true},anchor:{zone,cell:{col,row}},mode:"newAnchor",});}
resizeAnchorZone(direction,step=1){if(step!=="end"&&step<=0){return new DispatchResult("InvalidSelectionStep");}
const sheetId=this.getters.getActiveSheetId();const anchor=this.anchor;const{col:anchorCol,row:anchorRow}=anchor.cell;const{left,right,top,bottom}=anchor.zone;const starting=this.getStartingPosition(direction);const[deltaCol,deltaRow]=this.deltaToTarget(starting,direction,step);if(deltaCol===0&&deltaRow===0){return DispatchResult.Success;}
let result=anchor.zone;const expand=(z)=>{z=reorderZone(z);const{left,right,top,bottom}=this.getters.expandZone(sheetId,z);return{left:Math.max(0,left),right:Math.min(this.getters.getNumberCols(sheetId)-1,right),top:Math.max(0,top),bottom:Math.min(this.getters.getNumberRows(sheetId)-1,bottom),};};const{cell:refCell,zone:refZone}=this.getReferenceAnchor();const{col:refCol,row:refRow}=refCell;let n=0;while(result!==null){n++;if(deltaCol<0){const newRight=this.getNextAvailableCol(deltaCol,right-(n-1),refRow);result=refZone.right<=right-n?expand({top,left,bottom,right:newRight}):null;}
if(deltaCol>0){const newLeft=this.getNextAvailableCol(deltaCol,left+(n-1),refRow);result=left+n<=refZone.left?expand({top,left:newLeft,bottom,right}):null;}
if(deltaRow<0){const newBottom=this.getNextAvailableRow(deltaRow,refCol,bottom-(n-1));result=refZone.bottom<=bottom-n?expand({top,left,bottom:newBottom,right}):null;}
if(deltaRow>0){const newTop=this.getNextAvailableRow(deltaRow,refCol,top+(n-1));result=top+n<=refZone.top?expand({top:newTop,left,bottom,right}):null;}
result=result?reorderZone(result):result;if(result&&!isEqual(result,anchor.zone)){return this.processEvent({options:{scrollIntoView:true},mode:"updateAnchor",anchor:{zone:result,cell:{col:anchorCol,row:anchorRow}},});}}
const currentZone={top:anchorRow,bottom:anchorRow,left:anchorCol,right:anchorCol,};const zoneWithDelta=reorderZone({top:this.getNextAvailableRow(deltaRow,refCol,top),left:this.getNextAvailableCol(deltaCol,left,refRow),bottom:this.getNextAvailableRow(deltaRow,refCol,bottom),right:this.getNextAvailableCol(deltaCol,right,refRow),});result=expand(union(currentZone,zoneWithDelta));const newAnchor={zone:result,cell:{col:anchorCol,row:anchorRow}};return this.processEvent({anchor:newAnchor,mode:"updateAnchor",options:{scrollIntoView:true},});}
selectColumn(index,mode){const sheetId=this.getters.getActiveSheetId();const bottom=this.getters.getNumberRows(sheetId)-1;let zone={left:index,right:index,top:0,bottom};const top=this.getters.findFirstVisibleColRowIndex(sheetId,"ROW");let col,row;switch(mode){case"overrideSelection":case"newAnchor":col=index;row=top;break;case"updateAnchor":({col,row}=this.anchor.cell);zone=union(zone,{left:col,right:col,top,bottom});break;}
return this.processEvent({options:{scrollIntoView:false,unbounded:true,},anchor:{zone,cell:{col,row}},mode,});}
selectRow(index,mode){const sheetId=this.getters.getActiveSheetId();const right=this.getters.getNumberCols(sheetId)-1;let zone={top:index,bottom:index,left:0,right};const left=this.getters.findFirstVisibleColRowIndex(sheetId,"COL");let col,row;switch(mode){case"overrideSelection":case"newAnchor":col=left;row=index;break;case"updateAnchor":({col,row}=this.anchor.cell);zone=union(zone,{left,right,top:row,bottom:row});break;}
return this.processEvent({options:{scrollIntoView:false,unbounded:true,},anchor:{zone,cell:{col,row}},mode,});}
loopSelection(){const sheetId=this.getters.getActiveSheetId();const anchor=this.anchor;if(isEqual(this.anchor.zone,this.getters.getSheetZone(sheetId))){return this.modifyAnchor({...anchor,zone:positionToZone(anchor.cell)},"updateAnchor",{scrollIntoView:false,});}
const tableZone=this.getters.getContiguousZone(sheetId,anchor.zone);return!deepEquals(tableZone,anchor.zone)?this.modifyAnchor({...anchor,zone:tableZone},"updateAnchor",{scrollIntoView:false,}):this.selectAll();}
selectTableAroundSelection(){const sheetId=this.getters.getActiveSheetId();const tableZone=this.getters.getContiguousZone(sheetId,this.anchor.zone);return this.modifyAnchor({...this.anchor,zone:tableZone},"updateAnchor",{scrollIntoView:false,});}
selectAll(){const sheetId=this.getters.getActiveSheetId();const bottom=this.getters.getNumberRows(sheetId)-1;const right=this.getters.getNumberCols(sheetId)-1;const zone={left:0,top:0,bottom,right};return this.processEvent({mode:"overrideSelection",anchor:{zone,cell:this.anchor.cell},options:{scrollIntoView:false,},});}
isListening(owner){return this.stream.isListening(owner);}
processEvent(newAnchorEvent){const event={...newAnchorEvent,previousAnchor:deepCopy(this.anchor)};const commandResult=this.checkEventAnchorZone(event);if(commandResult!=="Success"){return new DispatchResult(commandResult);}
this.anchor=event.anchor;this.stream.send(event);return DispatchResult.Success;}
checkEventAnchorZone(event){return this.checkAnchorZone(event.anchor);}
checkAnchorZone(anchor){const{cell,zone}=anchor;if(!isInside(cell.col,cell.row,zone)){return"InvalidAnchorZone";}
const{left,right,top,bottom}=zone;const sheetId=this.getters.getActiveSheetId();const refCol=this.getters.findVisibleHeader(sheetId,"COL",left,right);const refRow=this.getters.findVisibleHeader(sheetId,"ROW",top,bottom);if(refRow===undefined||refCol===undefined){return"SelectionOutOfBound";}
return"Success";}
checkAnchorZoneOrThrow(anchor){const result=this.checkAnchorZone(anchor);if(result==="InvalidAnchorZone"){throw new Error("The provided anchor is invalid. The cell must be part of the zone.");}}
getNextAvailablePosition(direction,step=1){const{col,row}=this.anchor.cell;const delta=this.deltaToTarget({col,row},direction,step);return{col:this.getNextAvailableCol(delta[0],col,row),row:this.getNextAvailableRow(delta[1],col,row),};}
getNextAvailableCol(delta,colIndex,rowIndex){const sheetId=this.getters.getActiveSheetId();const position={col:colIndex,row:rowIndex};const isInPositionMerge=(nextCol)=>this.getters.isInSameMerge(sheetId,colIndex,rowIndex,nextCol,rowIndex);return this.getNextAvailableHeader(delta,"COL",colIndex,position,isInPositionMerge);}
getNextAvailableRow(delta,colIndex,rowIndex){const sheetId=this.getters.getActiveSheetId();const position={col:colIndex,row:rowIndex};const isInPositionMerge=(nextRow)=>this.getters.isInSameMerge(sheetId,colIndex,rowIndex,colIndex,nextRow);return this.getNextAvailableHeader(delta,"ROW",rowIndex,position,isInPositionMerge);}
getNextAvailableHeader(delta,dimension,startingHeaderIndex,position,isInPositionMerge){const sheetId=this.getters.getActiveSheetId();if(delta===0){return startingHeaderIndex;}
const step=Math.sign(delta);let header=startingHeaderIndex+delta;while(isInPositionMerge(header)){header+=step;}
while(this.getters.isHeaderHidden(sheetId,dimension,header)){header+=step;}
const outOfBound=header<0||header>this.getters.getNumberHeaders(sheetId,dimension)-1;if(outOfBound){if(this.getters.isHeaderHidden(sheetId,dimension,startingHeaderIndex)){return this.getNextAvailableHeader(-step,dimension,startingHeaderIndex,position,isInPositionMerge);}
else{return startingHeaderIndex;}}
return header;}
getReferenceAnchor(){const sheetId=this.getters.getActiveSheetId();const anchor=this.anchor;const{left,right,top,bottom}=anchor.zone;const{col:anchorCol,row:anchorRow}=anchor.cell;const col=this.getters.isColHidden(sheetId,anchorCol)?this.getters.findVisibleHeader(sheetId,"COL",left,right)||anchorCol:anchorCol;const row=this.getters.isRowHidden(sheetId,anchorRow)?this.getters.findVisibleHeader(sheetId,"ROW",top,bottom)||anchorRow:anchorRow;const zone=this.getters.expandZone(sheetId,{left:col,right:col,top:row,bottom:row,});return{cell:{col,row},zone,};}
deltaToTarget(position,direction,step){switch(direction){case"up":return step!=="end"?[0,-step]:[0,this.getEndOfCluster(position,"rows",-1)-position.row];case"down":return step!=="end"?[0,step]:[0,this.getEndOfCluster(position,"rows",1)-position.row];case"left":return step!=="end"?[-step,0]:[this.getEndOfCluster(position,"cols",-1)-position.col,0];case"right":return step!=="end"?[step,0]:[this.getEndOfCluster(position,"cols",1)-position.col,0];}}
getStartingPosition(direction){let{col,row}=this.getPosition();const zone=this.anchor.zone;switch(direction){case"down":case"up":row=row===zone.top?zone.bottom:zone.top;break;case"left":case"right":col=col===zone.right?zone.left:zone.right;break;}
return{col,row};}
getEndOfCluster(startPosition,dim,dir){const sheetId=this.getters.getActiveSheetId();let currentPosition=startPosition;const nextCellPosition=this.getNextCellPosition(startPosition,dim,dir);const mode=!this.isCellSkippableInCluster({...currentPosition,sheetId})&&!this.isCellSkippableInCluster({...nextCellPosition,sheetId})?"endOfCluster":"nextCluster";while(true){const nextCellPosition=this.getNextCellPosition(currentPosition,dim,dir);if(currentPosition.col===nextCellPosition.col&&currentPosition.row===nextCellPosition.row){break;}
const isNextCellEmpty=this.isCellSkippableInCluster({...nextCellPosition,sheetId});if(mode==="endOfCluster"&&isNextCellEmpty){break;}
else if(mode==="nextCluster"&&!isNextCellEmpty){currentPosition=nextCellPosition;break;}
currentPosition=nextCellPosition;}
return dim==="cols"?currentPosition.col:currentPosition.row;}
getNextCellPosition(currentPosition,dimension,direction){const dimOfInterest=dimension==="cols"?"col":"row";const startingPosition={...currentPosition};startingPosition[dimOfInterest]=dimension==="cols"?this.getNextAvailableCol(direction,startingPosition.col,startingPosition.row):this.getNextAvailableRow(direction,startingPosition.col,startingPosition.row);return{col:startingPosition.col,row:startingPosition.row};}
getPosition(){return{...this.anchor.cell};}
isCellSkippableInCluster(position){const mainPosition=this.getters.getMainCellPosition(position);const cell=this.getters.getEvaluatedCell(mainPosition);return(cell.type===CellValueType.empty||(cell.type===CellValueType.text&&cell.value===""));}}
function createEmptyStructure(node){if(typeof node==="string"){return{};}
else if(typeof node==="number"){return[];}
throw new Error(`Cannot create new node`);}
class StateObserver{changes;commands=[];recordChanges(callback){this.changes=[];this.commands=[];callback();return{changes:this.changes,commands:this.commands};}
addCommand(command){this.commands.push(command);}
addChange(...args){const val=args.pop();const root=args[0];let value=root;const key=args.at(-1);const pathLength=args.length-2;for(let pathIndex=1;pathIndex<=pathLength;pathIndex++){const p=args[pathIndex];if(value[p]===undefined){const nextPath=args[pathIndex+1];value[p]=createEmptyStructure(nextPath);}
value=value[p];}
if(value[key]===val){return;}
this.changes?.push({key,target:value,before:value[key],});if(val===undefined){delete value[key];}
else{value[key]=val;}}}
const catAxId=17781237;const secondaryCatAxId=17781238;const valAxId=88853993;const secondaryValAxId=88853994;function createChart(chart,chartSheetIndex,data){const namespaces=[["xmlns:r",RELATIONSHIP_NSR],["xmlns:a",DRAWING_NS_A],["xmlns:c",DRAWING_NS_C],];const chartShapeProperty=shapeProperty({backgroundColor:chart.data.backgroundColor,line:{color:"000000"},});let title=escapeXml``;if(chart.data.title?.text){const titleColor=toXlsxHexColor(chartMutedFontColor(chart.data.backgroundColor));const fontSize=chart.data.title.fontSize??CHART_TITLE_FONT_SIZE;title=escapeXml`
      <c:title>
        ${insertText(chart.data.title.text, titleColor, fontSize, chart.data.title)}
        <c:overlay val="0" />
      </c:title>
    `;}
let plot=escapeXml``;switch(chart.data.type){case"bar":plot=addBarChart(chart.data);break;case"combo":plot=addComboChart(chart.data);break;case"line":plot=addLineChart(chart.data);break;case"scatter":plot=addScatterChart(chart.data);break;case"pie":plot=addDoughnutChart(chart.data,chartSheetIndex,data,{holeSize:0});break;case"radar":plot=addRadarChart(chart.data);}
let position="t";switch(chart.data.legendPosition){case"bottom":position="b";break;case"left":position="l";break;case"right":position="r";break;case"top":position="t";break;}
const fontColor=chart.data.fontColor;const xml=escapeXml`
    <c:chartSpace ${formatAttributes(namespaces)}>
      <c:roundedCorners val="0" />
      <!-- <manualLayout/> to manually position the chart in the figure container -->
      ${chartShapeProperty}
      <c:chart>
        ${title}
        <c:autoTitleDeleted val="0" />
        <c:plotArea>
          <!-- how the chart element is placed on the chart -->
          <c:layout />
          ${plot}
          ${shapeProperty({ backgroundColor: chart.data.backgroundColor })}
        </c:plotArea>
        ${addLegend(position, fontColor)}
      </c:chart>
    </c:chartSpace>
  `;return parseXML(xml);}
function shapeProperty(params){return escapeXml`
    <c:spPr>
      ${params.backgroundColor ? solidFill(params.backgroundColor) : ""}
      ${params.line ? lineAttributes(params.line) : ""}
    </c:spPr>
  `;}
function solidFill(color){return escapeXml`
    <a:solidFill>
      <a:srgbClr val="${color}"/>
    </a:solidFill>
  `;}
function lineAttributes(params){const attrs=[["cmpd","sng"]];if(params.width){attrs.push(["w",convertDotValueToEMU(params.width)]);}
const lineStyle=params.style?escapeXml`<a:prstDash val="${params.style}"/>`:"";return escapeXml`
    <a:ln ${formatAttributes(attrs)}>
      ${solidFill(params.color)}
      ${lineStyle}
    </a:ln>
  `;}
function insertText(text,fontColor="000000",fontsize=CHART_TITLE_FONT_SIZE,style={}){return escapeXml`
    <c:tx>
      <c:rich>
        <a:bodyPr />
        <a:lstStyle />
        <a:p>
          <a:pPr lvl="0">
            <a:defRPr b="${style?.bold ? 1 : 0}" i="${style?.italic ? 1 : 0}">
              ${solidFill(fontColor)}
              <a:latin typeface="+mn-lt"/>
            </a:defRPr>
          </a:pPr>
          <a:r> <!-- Runs -->
            <a:rPr b="${style?.bold ? 1 : 0}" i="${style?.italic ? 1 : 0}" sz="${fontsize * 100}"/>
            <a:t>${text}</a:t>
          </a:r>
        </a:p>
      </c:rich>
    </c:tx>
  `;}
function insertTextProperties(fontsize=12,fontColor="000000",bold=false,italic=false){const defPropertiesAttributes=[["b",bold?"1":"0"],["i",italic?"1":"0"],["sz",fontsize*100],];return escapeXml`
    <c:txPr>
      <a:bodyPr/>
      <a:lstStyle/>
      <a:p>
        <a:pPr lvl="0">
          <a:defRPr ${formatAttributes(defPropertiesAttributes)}>
            ${solidFill(fontColor)}
            <a:latin typeface="+mn-lt"/>
          </a:defRPr>
        </a:pPr>
      </a:p>
    </c:txPr>
  `;}
function extractTrendline(trend,dataSetColor){if(!trend)
return escapeXml``;const{type,order,window}=trend;const trendLineNodes=[];switch(type){case"poly":if(order&&order>1){trendLineNodes.push(escapeXml`<c:trendlineType val="poly" />`);trendLineNodes.push(escapeXml`<c:order val="${order}" />`);}
else{trendLineNodes.push(escapeXml`<c:trendlineType val="linear" />`);}
break;case"movingAvg":trendLineNodes.push(escapeXml`<c:trendlineType val="movingAvg" />`);if(window){trendLineNodes.push(escapeXml`<c:period val="${window}" />`);}
break;default:trendLineNodes.push(escapeXml`<c:trendlineType val="${type}" />`);break;}
return escapeXml`
    <c:trendline>
      ${extractTrendlineCommonAttributes(trend, dataSetColor)}
      ${joinXmlNodes(trendLineNodes)}
    </c:trendline>
  `;}
function extractTrendlineCommonAttributes(trend,dataSetColor){if(!trend){return escapeXml``;}
const attrs=[["val",trend.color?toXlsxHexColor(trend.color).slice(-6):getTrendlineColor(dataSetColor)],];return escapeXml`
    <c:spPr>
      <a:ln w="19050" cap="rnd">
          <a:solidFill>
              <a:srgbClr ${formatAttributes(attrs)}/>
          </a:solidFill>
          <a:prstDash val="sysDot" />
      </a:ln>
      <a:effectLst />
    </c:spPr>
    <c:dispRSqr val="0" />
    <c:dispEq val="0" />
  `;}
function getTrendlineColor(dataSetColor){return toXlsxHexColor(lightenColor(dataSetColor,0.5));}
function extractDataSetLabel(label){if(!label){return escapeXml``;}
if("text"in label&&label.text){return escapeXml`
      <c:tx><c:v>${label.text}</c:v></c:tx>
    `;}
if("reference"in label&&label.reference){return escapeXml`
      <c:tx>
      ${stringRef(label.reference)}
      </c:tx>
    `;}
return escapeXml``;}
function addBarChart(chart){const dataSetsColors=chart.dataSets.map((ds)=>ds.backgroundColor??"");const colors=new ColorGenerator(chart.dataSets.length,dataSetsColors);const leftDataSetsNodes=[];const rightDataSetsNodes=[];for(const[dsIndex,dataset]of Object.entries(chart.dataSets)){const color=toXlsxHexColor(colors.next());const dataShapeProperty=shapeProperty({backgroundColor:color,line:{color},});const dataSetNode=escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        ${extractTrendline(dataset.trend, color)}
        ${extractDataSetLabel(dataset.label)}
        ${dataShapeProperty}
        ${chart.labelRange ? escapeXml /*xml*/ `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""} <!-- x-coordinate values -->
        <c:val> <!-- x-coordinate values -->
          ${numberRef(dataset.range)}
        </c:val>
      </c:ser>
    `;if(dataset.rightYAxis){rightDataSetsNodes.push(dataSetNode);}
else{leftDataSetsNodes.push(dataSetNode);}}
const grouping=chart.stacked?"stacked":"clustered";const overlap=chart.stacked?100:-20;return escapeXml`
  ${leftDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:barChart><c:barDir val="col"/><c:grouping val="${grouping}"/><c:overlap val="${overlap}"/><c:gapWidth val="70"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(leftDataSetsNodes)}<c:axId val="${catAxId}"/><c:axId val="${valAxId}"/></c:barChart>${addAx("b","c:catAx",catAxId,valAxId,chart.axesDesign?.x?.title,chart.fontColor)}
${addAx("l","c:valAx",valAxId,catAxId,chart.axesDesign?.y?.title,chart.fontColor)}`
        : ""}
  ${rightDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:barChart><c:barDir val="col"/><c:grouping val="${grouping}"/><c:overlap val="${overlap}"/><c:gapWidth val="70"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(rightDataSetsNodes)}<c:axId val="${catAxId + 1}"/><c:axId val="${valAxId + 1}"/></c:barChart>${addAx("b","c:catAx",catAxId+1,valAxId+1,chart.axesDesign?.x?.title,chart.fontColor,leftDataSetsNodes.length?1:0)}
${addAx("r","c:valAx",valAxId+1,catAxId+1,chart.axesDesign?.y1?.title,chart.fontColor)}`
        : ""}`;}
function addComboChart(chart){const dataSets=chart.dataSets;const dataSetsColors=dataSets.map((ds)=>ds.backgroundColor??"");const colors=new ColorGenerator(dataSets.length,dataSetsColors);let dataSet=dataSets[0];const firstColor=toXlsxHexColor(colors.next());const useRightAxisForBarSerie=dataSet.rightYAxis??false;const barDataSetNode=escapeXml`
    <c:ser>
      <c:idx val="0"/>
      <c:order val="0"/>
      ${extractTrendline(dataSet.trend, firstColor)}
      ${extractDataSetLabel(dataSet.label)}
      ${shapeProperty({
        backgroundColor: firstColor,
        line: { color: firstColor },
    })}
      ${chart.labelRange ? escapeXml /*xml*/ `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""}
      <!-- x-coordinate values -->
      <c:val>
        ${numberRef(dataSet.range)}
      </c:val>
    </c:ser>
  `;const leftDataSetsNodes=[];const rightDataSetsNodes=[];for(let dsIndex=1;dsIndex<dataSets.length;dsIndex++){dataSet=dataSets[dsIndex];const color=toXlsxHexColor(colors.next());const dataShapeProperty=shapeProperty({backgroundColor:color,line:{color},});const dataSetNode=escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        <c:smooth val="0"/>
        <c:marker>
          <c:symbol val="circle" />
          <c:size val="5"/>
          ${dataShapeProperty}
        </c:marker>
        ${extractTrendline(dataSet.trend, color)}
        ${extractDataSetLabel(dataSet.label)}
        ${dataShapeProperty}
        ${chart.labelRange ? escapeXml `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""}
        <!-- x-coordinate values -->
        <c:val>
          ${numberRef(dataSet.range)}
        </c:val>
      </c:ser>
    `;if(dataSet.rightYAxis){rightDataSetsNodes.push(dataSetNode);}
else{leftDataSetsNodes.push(dataSetNode);}}
const overlap=chart.stacked?100:-20;return escapeXml`
    <c:barChart>
      <c:barDir val="col"/>
      <c:grouping val="clustered"/>
      <c:overlap val="${overlap}"/>
      <c:gapWidth val="70"/>
      <!-- each data marker in the series does not have a different color -->
      <c:varyColors val="0"/>
      ${barDataSetNode}
      <c:axId val="${useRightAxisForBarSerie ? secondaryCatAxId : catAxId}" />
      <c:axId val="${useRightAxisForBarSerie ? secondaryValAxId : valAxId}" />
    </c:barChart>
    ${leftDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:lineChart><c:grouping val="standard"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(leftDataSetsNodes)}<c:axId val="${catAxId}"/><c:axId val="${valAxId}"/></c:lineChart>`
        : ""}
    ${rightDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:lineChart><c:grouping val="standard"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(rightDataSetsNodes)}<c:axId val="${secondaryCatAxId}"/><c:axId val="${secondaryValAxId}"/></c:lineChart>`
        : ""}
    ${!useRightAxisForBarSerie || leftDataSetsNodes.length
        ? escapeXml /*xml*/ `
${addAx("b","c:catAx",catAxId,valAxId,chart.axesDesign?.x?.title,chart.fontColor,leftDataSetsNodes.length?1:0)}
${addAx("l","c:valAx",valAxId,catAxId,chart.axesDesign?.y?.title,chart.fontColor)}`
        : ""}
    ${useRightAxisForBarSerie || rightDataSetsNodes.length
        ? escapeXml /*xml*/ `
${addAx("b","c:catAx",secondaryCatAxId,secondaryValAxId,chart.axesDesign?.x?.title,chart.fontColor,leftDataSetsNodes.length||!useRightAxisForBarSerie?1:0)}
${addAx("r","c:valAx",secondaryValAxId,secondaryCatAxId,chart.axesDesign?.y1?.title,chart.fontColor)}`
        : ""}
  `;}
function addLineChart(chart){const dataSetsColors=chart.dataSets.map((ds)=>ds.backgroundColor??"");const colors=new ColorGenerator(chart.dataSets.length,dataSetsColors);const leftDataSetsNodes=[];const rightDataSetsNodes=[];for(const[dsIndex,dataset]of Object.entries(chart.dataSets)){const color=toXlsxHexColor(colors.next());const dataShapeProperty=shapeProperty({line:{width:2.5,style:"solid",color,},});const dataSetNode=escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        <c:smooth val="0"/>
        <c:marker>
          <c:symbol val="circle" />
          <c:size val="5"/>
          ${shapeProperty({ backgroundColor: color, line: { color } })}
        </c:marker>
        ${extractTrendline(dataset.trend, color)}
        ${extractDataSetLabel(dataset.label)}
        ${dataShapeProperty}
        ${chart.labelRange ? escapeXml `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""} <!-- x-coordinate values -->
        <c:val> <!-- x-coordinate values -->
          ${numberRef(dataset.range)}
        </c:val>
      </c:ser>
    `;if(dataset.rightYAxis){rightDataSetsNodes.push(dataSetNode);}
else{leftDataSetsNodes.push(dataSetNode);}}
const grouping=chart.stacked?"stacked":"standard";return escapeXml`
    ${leftDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:lineChart><c:grouping val="${grouping}"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(leftDataSetsNodes)}<c:axId val="${catAxId}"/><c:axId val="${valAxId}"/></c:lineChart>${addAx("b","c:catAx",catAxId,valAxId,chart.axesDesign?.x?.title,chart.fontColor)}
${addAx("l","c:valAx",valAxId,catAxId,chart.axesDesign?.y?.title,chart.fontColor)}`
        : ""}
    ${rightDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:lineChart><c:grouping val="${grouping}"/><!--each data marker in the series does not have a different color--><c:varyColors val="0"/>${joinXmlNodes(rightDataSetsNodes)}<c:axId val="${catAxId + 1}"/><c:axId val="${valAxId + 1}"/></c:lineChart>${addAx("b","c:catAx",catAxId+1,valAxId+1,chart.axesDesign?.x?.title,chart.fontColor,leftDataSetsNodes.length?1:0)}
${addAx("r","c:valAx",valAxId+1,catAxId+1,chart.axesDesign?.y1?.title,chart.fontColor)}`
        : ""}
  `;}
function addScatterChart(chart){const dataSetsColors=chart.dataSets.map((ds)=>ds.backgroundColor??"");const colors=new ColorGenerator(chart.dataSets.length,dataSetsColors);const leftDataSetsNodes=[];const rightDataSetsNodes=[];for(const[dsIndex,dataset]of Object.entries(chart.dataSets)){const color=toXlsxHexColor(colors.next());const dataSetNode=escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        <c:smooth val="0"/>
        <c:spPr>
          <a:ln w="19050" cap="rnd">
            <a:noFill/>
            <a:round/>
          </a:ln>
          <a:effectLst/>
        </c:spPr>
        <c:marker>
          <c:symbol val="circle" />
          <c:size val="5"/>
          ${shapeProperty({ backgroundColor: color, line: { color } })}
        </c:marker>
        ${extractTrendline(dataset.trend, color)}
        ${extractDataSetLabel(dataset.label)}
        ${chart.labelRange
            ? escapeXml /*xml*/ `<c:xVal><!--x-coordinate values-->${numberRef(chart.labelRange)}</c:xVal>`
            : ""}
        <c:yVal> <!-- y-coordinate values -->
          ${numberRef(dataset.range)}
        </c:yVal>
      </c:ser>
    `;if(dataset.rightYAxis){rightDataSetsNodes.push(dataSetNode);}
else{leftDataSetsNodes.push(dataSetNode);}}
return escapeXml`
  ${leftDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:scatterChart><!--each data marker in the series does not have a different color--><c:varyColors val="0"/><c:scatterStyle val="lineMarker"/>${joinXmlNodes(leftDataSetsNodes)}<c:axId val="${catAxId}"/><c:axId val="${valAxId}"/></c:scatterChart>${addAx("b","c:valAx",catAxId,valAxId,chart.axesDesign?.x?.title,chart.fontColor)}
${addAx("l","c:valAx",valAxId,catAxId,chart.axesDesign?.y?.title,chart.fontColor)}`
        : ""}
  ${rightDataSetsNodes.length
        ? escapeXml /*xml*/ `<c:scatterChart><!--each data marker in the series does not have a different color--><c:varyColors val="0"/><c:scatterStyle val="lineMarker"/>${joinXmlNodes(rightDataSetsNodes)}<c:axId val="${catAxId + 1}"/><c:axId val="${valAxId + 1}"/></c:scatterChart>${addAx("b","c:valAx",catAxId+1,valAxId+1,chart.axesDesign?.x?.title,chart.fontColor,leftDataSetsNodes.length?1:0)}
${addAx("r","c:valAx",valAxId+1,catAxId+1,chart.axesDesign?.y1?.title,chart.fontColor)}`
        : ""}`;}
function addRadarChart(chart){const dataSetsColors=chart.dataSets.map((ds)=>ds.backgroundColor??"");const colors=new ColorGenerator(chart.dataSets.length,dataSetsColors);const dataSetsNodes=[];for(const[dsIndex,dataset]of Object.entries(chart.dataSets)){const color=toXlsxHexColor(colors.next());const dataShapeProperty=shapeProperty({line:{width:2.5,style:"solid",color,},});const dataSetNode=escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        <c:smooth val="0"/>
        <c:marker>
          <c:symbol val="circle" />
          <c:size val="5"/>
          ${shapeProperty({ backgroundColor: color, line: { color } })}
        </c:marker>
        ${extractDataSetLabel(dataset.label)}
        ${dataShapeProperty}
        ${chart.labelRange ? escapeXml `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""} <!-- x-coordinate values -->
        <c:val> <!-- x-coordinate values -->
          ${numberRef(dataset.range)}
        </c:val>
      </c:ser>
    `;dataSetsNodes.push(dataSetNode);}
return escapeXml`
    ${escapeXml /*xml*/ `<c:radarChart><c:radarStyle val="marker"/><c:varyColors val="0"/>${joinXmlNodes(dataSetsNodes)}<c:axId val="${catAxId}"/><c:axId val="${valAxId}"/></c:radarChart>${addAx("b","c:catAx",catAxId,valAxId,chart.axesDesign?.x?.title,chart.fontColor)}
${addAx("l","c:valAx",valAxId,catAxId,chart.axesDesign?.y?.title,chart.fontColor)}`}
  `;}
function addDoughnutChart(chart,chartSheetIndex,data,{holeSize}={holeSize:50}){const maxLength=largeMax(chart.dataSets.map((ds)=>getRangeSize(ds.range,chartSheetIndex,data)));const colors=new ColorGenerator(maxLength);const doughnutColors=range(0,maxLength).map(()=>toXlsxHexColor(colors.next()));const dataSetsNodes=[];for(const[dsIndex,dataset]of Object.entries(chart.dataSets).reverse()){const dsSize=getRangeSize(dataset.range,chartSheetIndex,data);const dataPoints=[];for(const index of range(0,dsSize)){const pointShapeProperty=shapeProperty({backgroundColor:doughnutColors[index],line:{color:"FFFFFF",width:1.5},});dataPoints.push(escapeXml`
        <c:dPt>
          <c:idx val="${index}"/>
          ${pointShapeProperty}
        </c:dPt>
      `);}
dataSetsNodes.push(escapeXml`
      <c:ser>
        <c:idx val="${dsIndex}"/>
        <c:order val="${dsIndex}"/>
        ${extractDataSetLabel(dataset.label)}
        ${joinXmlNodes(dataPoints)}
        ${insertDataLabels({ showLeaderLines: true })}
        ${chart.labelRange ? escapeXml `<c:cat>${stringRef(chart.labelRange)}</c:cat>` : ""}
        <c:val>
          ${numberRef(dataset.range)}
        </c:val>
      </c:ser>
    `);}
return escapeXml`
    <c:doughnutChart>
      <c:varyColors val="1" />
      <c:holeSize val="${holeSize}" />
      ${insertDataLabels()}
      ${joinXmlNodes(dataSetsNodes)}
    </c:doughnutChart>
  `;}
function insertDataLabels({showLeaderLines}={showLeaderLines:false}){return escapeXml`
    <dLbls>
      <c:showLegendKey val="0"/>
      <c:showVal val="0"/>
      <c:showCatName val="0"/>
      <c:showSerName val="0"/>
      <c:showPercent val="0"/>
      <c:showBubbleSize val="0"/>
      <c:showLeaderLines val="${showLeaderLines ? "1" : "0"}"/>
    </dLbls>
  `;}
function addAx(position,axisName,axId,crossAxId,title,defaultFontColor,deleteAxis=0){const color=title?.color?toXlsxHexColor(title.color):defaultFontColor;const fontSize=title?.fontSize??CHART_AXIS_TITLE_FONT_SIZE;return escapeXml`
    <${axisName}>
      <c:axId val="${axId}"/>
      <c:crossAx val="${crossAxId}"/> <!-- reference to the other axe of the chart -->
      <c:crosses val="${position === "b" || position === "l" ? "min" : "max"}"/>
      <c:delete val="${deleteAxis}"/> <!-- by default, axis are not displayed -->
      <c:scaling>
        <c:orientation  val="minMax" />
      </c:scaling>
      <c:axPos val="${position}" />
      ${insertMajorGridLines()}
      <c:majorTickMark val="out" />
      <c:minorTickMark val="none" />
      <c:numFmt formatCode="General" sourceLinked="1" />
      <c:title>
        ${insertText(title?.text ?? "", color, fontSize, title)}
      </c:title>
      ${insertTextProperties(10, defaultFontColor)}
    </${axisName}>
    <!-- <tickLblPos/> omitted -->
  `;}
function addLegend(position,fontColor){return escapeXml`
    <c:legend>
      <c:legendPos val="${position}"/>
      <c:overlay val="0"/>
      ${insertTextProperties(10, fontColor)}
    </c:legend>
  `;}
function insertMajorGridLines(color="B7B7B7"){return escapeXml`
    <c:majorGridlines>
      ${shapeProperty({ line: { color } })}
    </c:majorGridlines>
  `;}
function stringRef(reference){return escapeXml`
    <c:strRef>
      <c:f>${reference}</c:f>
    </c:strRef>
  `;}
function numberRef(reference){return escapeXml`
    <c:numRef>
      <c:f>${reference}</c:f>
      <c:numCache />
    </c:numRef>
  `;}
function addFormula(formula,value,formulaSpillRange){if(!formula){return{attrs:[],node:escapeXml``};}
const type=getCellType(value);if(type===undefined){return{attrs:[],node:escapeXml``};}
const attrs=[["cm","1"],["t",type],];const XlsxFormula=adaptFormulaToExcel(formula);const exportedValue=adaptFormulaValueToExcel(value);const node=escapeXml`<f t="array" ref="${formulaSpillRange}">${XlsxFormula}</f><v>${exportedValue}</v>`;return{attrs,node};}
function addContent(content,sharedStrings,forceString=false){let value=content;const attrs=[];const clearValue=value.trim().toUpperCase();if(!forceString&&["TRUE","FALSE"].includes(clearValue)){value=clearValue==="TRUE"?"1":"0";attrs.push(["t","b"]);}
else if(forceString||!isNumber(value,DEFAULT_LOCALE)){value=pushElement(content,sharedStrings);attrs.push(["t","s"]);}
return{attrs,node:escapeXml`<v>${value}</v>`};}
function adaptFormulaToExcel(formulaText){if(formulaText[0]==="="){formulaText=formulaText.slice(1);}
let ast;try{ast=parse(formulaText);}
catch(error){return formulaText;}
ast=convertAstNodes(ast,"STRING",convertDateFormat);ast=convertAstNodes(ast,"FUNCALL",(ast)=>{ast={...ast,value:ast.value.toUpperCase()};ast=prependNonRetrocompatibleFunction(ast);ast=addMissingRequiredArgs(ast);return ast;});ast=convertAstNodes(ast,"REFERENCE",(ast)=>{return ast.value===CellErrorType.InvalidReference?{...ast,value:"#REF!"}:ast;});return ast?astToFormula(ast):formulaText;}
function adaptFormulaValueToExcel(formulaValue){return formulaValue===CellErrorType.InvalidReference?"#REF!":formulaValue;}
function addMissingRequiredArgs(ast){const formulaName=ast.value.toUpperCase();const args=ast.args;const exportDefaultArgs=FORCE_DEFAULT_ARGS_FUNCTIONS[formulaName];if(exportDefaultArgs){const requiredArgs=functionRegistry.content[formulaName].args.filter((el)=>!el.optional);const diffArgs=requiredArgs.length-ast.args.length;if(diffArgs){for(let i=ast.args.length;i<requiredArgs.length;i++){const currentDefaultArg=exportDefaultArgs[i-diffArgs];args.push({type:currentDefaultArg.type,value:currentDefaultArg.value,tokenEndIndex:0,tokenStartIndex:0,});}}}
return{...ast,args};}
function prependNonRetrocompatibleFunction(ast){const formulaName=ast.value.toUpperCase();return{...ast,value:NON_RETROCOMPATIBLE_FUNCTIONS.includes(formulaName)?`_xlfn.${formulaName}`:formulaName,};}
function convertDateFormat(ast){const value=ast.value.replace(new RegExp('"',"g"),"");const internalDate=parseDateTime(value,DEFAULT_LOCALE);if(internalDate){const format=[];if(mdyDateRegexp.test(value)||ymdDateRegexp.test(value)){format.push("yyyy-mm-dd");}
if(timeRegexp.test(value)){format.push("hh:mm:ss");}
return{...ast,value:formatValue(internalDate.value,{format:format.join(" "),locale:DEFAULT_LOCALE}),};}
else{return{...ast,value:ast.value.replace(/\\"/g,`""`)};}}
function addConditionalFormatting(dxfs,conditionalFormats){const cfNodes=[];for(const cf of conditionalFormats){switch(cf.rule.type){case"CellIsRule":cfNodes.push(addCellIsRule(cf,cf.rule,dxfs));break;case"ColorScaleRule":cfNodes.push(addColorScaleRule(cf,cf.rule));break;case"IconSetRule":cfNodes.push(addIconSetRule(cf,cf.rule));break;case"DataBarRule":cfNodes.push(addDataBarRule(cf,cf.rule));break;default:console.warn(`Conditional formatting ${cf.rule.type} not implemented`);break;}}
return cfNodes;}
function addCellIsRule(cf,rule,dxfs){const ruleAttributes=commonCfAttributes(cf);const operator=convertOperator(rule.operator);ruleAttributes.push(...cellRuleTypeAttributes(rule),["operator",operator]);const formulas=cellRuleFormula(cf.ranges,rule).map((formula)=>escapeXml`<formula>${formula}</formula>`);const dxf={font:{color:{rgb:rule.style.textColor},bold:rule.style.bold,italic:rule.style.italic,strike:rule.style.strikethrough,underline:rule.style.underline,},};if(rule.style.fillColor){dxf.fill={fgColor:{rgb:rule.style.fillColor}};}
ruleAttributes.push(["dxfId",pushElement(dxf,dxfs)]);return escapeXml`
    <conditionalFormatting sqref="${cf.ranges.join(" ")}">
      <cfRule ${formatAttributes(ruleAttributes)}>
        ${joinXmlNodes(formulas)}
      </cfRule>
    </conditionalFormatting>
  `;}
function cellRuleFormula(ranges,rule){const firstCell=ranges[0].split(":")[0];const values=rule.values;switch(rule.operator){case"containsText":return[`NOT(ISERROR(SEARCH("${values[0]}",${firstCell})))`];case"notContainsText":return[`ISERROR(SEARCH("${values[0]}",${firstCell}))`];case"beginsWithText":return[`LEFT(${firstCell},LEN("${values[0]}"))="${values[0]}"`];case"endsWithText":return[`RIGHT(${firstCell},LEN("${values[0]}"))="${values[0]}"`];case"isEmpty":return[`LEN(TRIM(${firstCell}))=0`];case"isNotEmpty":return[`LEN(TRIM(${firstCell}))>0`];case"isEqual":case"isNotEqual":case"isGreaterThan":case"isGreaterOrEqualTo":case"isLessThan":case"isLessOrEqualTo":return[values[0]];case"isBetween":case"isNotBetween":return[values[0],values[1]];}}
function cellRuleTypeAttributes(rule){const operator=convertOperator(rule.operator);switch(rule.operator){case"containsText":case"notContainsText":case"beginsWithText":case"endsWithText":return[["type",operator],["text",rule.values[0]],];case"isEmpty":case"isNotEmpty":return[["type",operator]];case"isEqual":case"isNotEqual":case"isGreaterThan":case"isGreaterOrEqualTo":case"isLessThan":case"isLessOrEqualTo":case"isBetween":case"isNotBetween":return[["type","cellIs"]];}}
function addDataBarRule(cf,rule){const ruleAttributes=commonCfAttributes(cf);ruleAttributes.push(["type","dataBar"]);return escapeXml`
    <conditionalFormatting sqref="${cf.ranges.join(" ")}">
      <cfRule ${formatAttributes(ruleAttributes)}>
        <dataBar>
          <cfvo type="min" val="0"/>
          <cfvo type="max" val="100"/>
          <color rgb="${toXlsxHexColor(colorNumberString(rule.color))}"/>
        </dataBar>
      </cfRule>
    </conditionalFormatting>
  `;}
function addColorScaleRule(cf,rule){const ruleAttributes=commonCfAttributes(cf);ruleAttributes.push(["type","colorScale"]);const conditionalFormats=[];for(const range of cf.ranges){const cfValueObject=[];const colors=[];let canExport=true;for(const position of["minimum","midpoint","maximum"]){const threshold=rule[position];if(!threshold){continue;}
if(threshold.type==="formula"){canExport=false;continue;}
cfValueObject.push(thresholdAttributes(threshold,position));colors.push([["rgb",toXlsxHexColor(colorNumberString(threshold.color))]]);}
if(!canExport){console.warn("Conditional formats with formula rules are not supported at the moment. The rule is therefore skipped.");continue;}
const cfValueObjectNodes=cfValueObject.map((attrs)=>escapeXml`<cfvo ${formatAttributes(attrs)}/>`);const cfColorNodes=colors.map((attrs)=>escapeXml`<color ${formatAttributes(attrs)}/>`);conditionalFormats.push(escapeXml`
      <conditionalFormatting sqref="${range}">
        <cfRule ${formatAttributes(ruleAttributes)}>
          <colorScale>
            ${joinXmlNodes(cfValueObjectNodes)}
            ${joinXmlNodes(cfColorNodes)}
          </colorScale>
        </cfRule>
      </conditionalFormatting>
    `);}
return joinXmlNodes(conditionalFormats);}
function addIconSetRule(cf,rule){const ruleAttributes=commonCfAttributes(cf);ruleAttributes.push(["type","iconSet"]);const conditionalFormats=[];for(const range of cf.ranges){const cfValueObject=[[["type","percent"],["val",0],],];let canExport=true;for(const position of["lowerInflectionPoint","upperInflectionPoint"]){if(rule[position].type==="formula"){canExport=false;continue;}
const threshold=rule[position];cfValueObject.push([...thresholdAttributes(threshold,position),["gte",threshold.operator==="ge"?"1":"0"],]);}
if(!canExport){console.warn("Conditional formats with formula rules are not supported at the moment. The rule is therefore skipped.");continue;}
const cfValueObjectNodes=cfValueObject.map((attrs)=>escapeXml`<cfvo ${formatAttributes(attrs)} />`);const iconSetAttrs=[["iconSet",getIconSet(rule.icons)]];if(isIconSetReversed(rule.icons)){iconSetAttrs.push(["reverse","1"]);}
conditionalFormats.push(escapeXml`
      <conditionalFormatting sqref="${range}">
        <cfRule ${formatAttributes(ruleAttributes)}>
          <iconSet ${formatAttributes(iconSetAttrs)}>
            ${joinXmlNodes(cfValueObjectNodes)}
          </iconSet>
        </cfRule>
      </conditionalFormatting>
    `);}
return joinXmlNodes(conditionalFormats);}
function commonCfAttributes(cf){return[["priority",1],["stopIfTrue",cf.stopIfTrue?1:0],];}
function isIconSetReversed(iconSet){const defaultIconSet=ICON_SETS[detectIconsType(iconSet)];return iconSet.upper===defaultIconSet.bad&&iconSet.lower===defaultIconSet.good;}
function getIconSet(iconSet){return XLSX_ICONSET_MAP[detectIconsType(iconSet)];}
function detectIconsType(iconSet){const type=Object.keys(ICON_SETS).find((type)=>Object.values(ICON_SETS[type]).includes(iconSet.upper))||"dots";return type;}
function thresholdAttributes(threshold,position){const type=getExcelThresholdType(threshold.type,position);const attrs=[["type",type]];if(type!=="min"&&type!=="max"){let val=threshold.value;if(type==="formula"){try{val=adaptFormulaToExcel(threshold.value);}
catch(error){val=threshold.value;}}
attrs.push(["val",val]);}
return attrs;}
function getExcelThresholdType(type,position){switch(type){case"value":return position==="minimum"?"min":"max";case"number":return"num";case"percentage":return"percent";default:return type;}}
function addDataValidationRules(dataValidationRules){const dvRulesCount=dataValidationRules.length;if(dvRulesCount===0){return[];}
const dvNodes=[new XMLString(`<dataValidations count="${dvRulesCount}">`)];for(const dvRule of dataValidationRules){switch(dvRule.criterion.type){case"dateIs":case"dateIsBefore":case"dateIsOnOrBefore":case"dateIsAfter":case"dateIsOnOrAfter":case"dateIsBetween":case"dateIsNotBetween":dvNodes.push(addDateRule(dvRule));break;case"isEqual":case"isNotEqual":case"isGreaterThan":case"isGreaterOrEqualTo":case"isLessThan":case"isLessOrEqualTo":case"isBetween":case"isNotBetween":dvNodes.push(addDecimalRule(dvRule));break;case"isValueInRange":case"isValueInList":dvNodes.push(addListRule(dvRule));break;case"customFormula":dvNodes.push(addCustomFormulaRule(dvRule));break;default:console.warn(`Data validation ${dvRule.criterion.type} is not supported in xlsx.`);break;}}
dvNodes.push(new XMLString("</dataValidations>"));return dvNodes;}
function addDateRule(dvRule){const rule=dvRule.criterion;const formula1=adaptFormulaToExcel(rule.values[0]);const formula2=rule.values[1]?adaptFormulaToExcel(rule.values[1]):undefined;const operator=convertDateCriterionTypeToExcelOperator(dvRule.criterion.type);const attributes=commonDataValidationAttributes(dvRule);attributes.push(["type","date"],["operator",operator]);if(formula2){return escapeXml`
      <dataValidation ${formatAttributes(attributes)}>
        <formula1>${toNumber(formula1, DEFAULT_LOCALE)}</formula1>
        <formula2>${toNumber(formula2, DEFAULT_LOCALE)}</formula2>
      </dataValidation>
    `;}
return escapeXml`
    <dataValidation ${formatAttributes(attributes)}>
      <formula1>${toNumber(formula1, DEFAULT_LOCALE)}</formula1>
    </dataValidation>
  `;}
function addDecimalRule(dvRule){const rule=dvRule.criterion;const formula1=adaptFormulaToExcel(rule.values[0]);const formula2=rule.values[1]?adaptFormulaToExcel(rule.values[1]):undefined;const operator=convertDecimalCriterionTypeToExcelOperator(dvRule.criterion.type);const attributes=commonDataValidationAttributes(dvRule);attributes.push(["type","decimal"],["operator",operator]);if(formula2){return escapeXml`
      <dataValidation ${formatAttributes(attributes)}>
        <formula1>${formula1}</formula1>
        <formula2>${formula2}</formula2>
      </dataValidation>
    `;}
return escapeXml`
    <dataValidation ${formatAttributes(attributes)}>
      <formula1>${formula1}</formula1>
    </dataValidation>
  `;}
function addListRule(dvRule){const rule=dvRule.criterion;const formula1=dvRule.criterion.type==="isValueInRange"?adaptFormulaToExcel(rule.values[0]):`"${rule.values.join(",")}"`;const attributes=commonDataValidationAttributes(dvRule);attributes.push(["type","list"]);return escapeXml`
    <dataValidation ${formatAttributes(attributes)}>
      <formula1>${formula1}</formula1>
    </dataValidation>
  `;}
function addCustomFormulaRule(dvRule){const rule=dvRule.criterion;const formula1=adaptFormulaToExcel(rule.values[0]);const attributes=commonDataValidationAttributes(dvRule);attributes.push(["type","custom"]);return escapeXml`
    <dataValidation ${formatAttributes(attributes)}>
      <formula1>${formula1}</formula1>
    </dataValidation>
  `;}
function commonDataValidationAttributes(dvRule){return[["allowBlank","1"],["showInputMessage","1"],["showErrorMessage","1"],["errorStyle",!dvRule.isBlocking?"warning":""],["sqref",dvRule.ranges.join(" ")],];}
function createDrawing(drawingRelIds,sheet,figures){const namespaces=[["xmlns:xdr",NAMESPACE.drawing],["xmlns:r",RELATIONSHIP_NSR],["xmlns:a",DRAWING_NS_A],["xmlns:c",DRAWING_NS_C],];const figuresNodes=[];for(const[figureIndex,figure]of Object.entries(figures)){switch(figure?.tag){case"chart":figuresNodes.push(createChartDrawing(figure,sheet,drawingRelIds[figureIndex]));break;case"image":figuresNodes.push(createImageDrawing(figure,sheet,drawingRelIds[figureIndex]));break;}}
const xml=escapeXml`
    <xdr:wsDr ${formatAttributes(namespaces)}>
      ${joinXmlNodes(figuresNodes)}
    </xdr:wsDr>
  `;return parseXML(xml);}
function convertFigureData(figure,sheet){const{col,row,offset,width,height}=figure;const{x:offsetCol,y:offsetRow}=offset;const rows=Object.values(sheet.rows);const{index:rowFrom,offset:offsetRowFrom}=figureCoordinates(rows,row,offsetRow);const{index:rowTo,offset:offsetRowTo}=figureCoordinates(rows,row,offsetRow+height);const cols=Object.values(sheet.cols);const{index:colFrom,offset:offsetColFrom}=figureCoordinates(cols,col,offsetCol);const{index:colTo,offset:offsetColTo}=figureCoordinates(cols,col,offsetCol+width);return{from:{col:colFrom,colOff:offsetColFrom,row:rowFrom,rowOff:offsetRowFrom,},to:{col:colTo,colOff:offsetColTo,row:rowTo,rowOff:offsetRowTo,},};}
function figureCoordinates(headers,anchor,offset){let currentPosition=0;for(const[headerIndex,header]of headers.slice(anchor).entries()){if(currentPosition<=offset&&offset<currentPosition+header.size){return{index:headerIndex,offset:convertDotValueToEMU(offset-currentPosition+FIGURE_BORDER_WIDTH),};}
else if(headerIndex<headers.length-1){currentPosition+=header.size;}}
return{index:headers.length-1,offset:convertDotValueToEMU(offset-currentPosition+FIGURE_BORDER_WIDTH),};}
function createChartDrawing(figure,sheet,chartRelId){const{from,to}=convertFigureData(figure,sheet);const chartId=convertChartId(figure.id);const cNvPrAttrs=[["id",chartId],["name",`Chart ${chartId}`],["title","Chart"],];return escapeXml`
    <xdr:twoCellAnchor>
      <xdr:from>
        <xdr:col>${from.col}</xdr:col>
        <xdr:colOff>${from.colOff}</xdr:colOff>
        <xdr:row>${from.row}</xdr:row>
        <xdr:rowOff>${from.rowOff}</xdr:rowOff>
      </xdr:from>
      <xdr:to>
        <xdr:col>${to.col}</xdr:col>
        <xdr:colOff>${to.colOff}</xdr:colOff>
        <xdr:row>${to.row}</xdr:row>
        <xdr:rowOff>${to.rowOff}</xdr:rowOff>
      </xdr:to>
      <xdr:graphicFrame>
        <xdr:nvGraphicFramePr>
          <xdr:cNvPr ${formatAttributes(cNvPrAttrs)} />
          <xdr:cNvGraphicFramePr />
        </xdr:nvGraphicFramePr>
        <xdr:xfrm>
          <a:off x="0" y="0"/>
          <a:ext cx="0" cy="0"/>
        </xdr:xfrm>
        <a:graphic>
          <a:graphicData uri="${DRAWING_NS_C}">
            <c:chart r:id="${chartRelId}" />
          </a:graphicData>
        </a:graphic>
      </xdr:graphicFrame>
      <xdr:clientData fLocksWithSheet="0"/>
    </xdr:twoCellAnchor>
  `;}
function createImageDrawing(figure,sheet,imageRelId){const{from,to}=convertFigureData(figure,sheet);const imageId=convertImageId(figure.id);const cNvPrAttrs=[["id",imageId],["name",`Image ${imageId}`],["title","Image"],];const cx=convertDotValueToEMU(figure.width);const cy=convertDotValueToEMU(figure.height);return escapeXml`
    <xdr:twoCellAnchor editAs="oneCell">
      <xdr:from>
        <xdr:col>${from.col}</xdr:col>
        <xdr:colOff>${from.colOff}</xdr:colOff>
        <xdr:row>${from.row}</xdr:row>
        <xdr:rowOff>${from.rowOff}</xdr:rowOff>
      </xdr:from>
      <xdr:to>
        <xdr:col>${to.col}</xdr:col>
        <xdr:colOff>${to.colOff}</xdr:colOff>
        <xdr:row>${to.row}</xdr:row>
        <xdr:rowOff>${to.rowOff}</xdr:rowOff>
      </xdr:to>
      <xdr:pic>
        <xdr:nvPicPr>
          <xdr:cNvPr ${formatAttributes(cNvPrAttrs)}/>
          <xdr:cNvPicPr preferRelativeResize="0"/>
        </xdr:nvPicPr>
        <xdr:blipFill>
          <a:blip cstate="print" r:embed="${imageRelId}"/>
          <a:stretch>
            <a:fillRect/>
          </a:stretch>
        </xdr:blipFill>
        <xdr:spPr>
          <a:xfrm>
            <a:ext cx="${cx}" cy="${cy}" />
          </a:xfrm>
          <a:prstGeom prst="rect">
            <a:avLst/>
          </a:prstGeom>
          <a:noFill/>
        </xdr:spPr>
      </xdr:pic>
      <xdr:clientData fLocksWithSheet="0"/>
    </xdr:twoCellAnchor>
  `;}
function addNumberFormats(numFmts){const numFmtNodes=[];for(const[index,numFmt]of Object.entries(numFmts)){const numFmtAttrs=[["numFmtId",parseInt(index)+FIRST_NUMFMT_ID],["formatCode",numFmt.format],];numFmtNodes.push(escapeXml`
      <numFmt ${formatAttributes(numFmtAttrs)}/>
    `);}
return escapeXml`
    <numFmts count="${numFmts.length}">
      ${joinXmlNodes(numFmtNodes)}
    </numFmts>
  `;}
function addFont(font){if(isObjectEmptyRecursive(font)){return escapeXml``;}
return escapeXml`
    <font>
      ${font.bold ? escapeXml /*xml*/ `<b/>` : ""}
      ${font.italic ? escapeXml /*xml*/ `<i/>` : ""}
      ${font.underline ? escapeXml /*xml*/ `<u/>` : ""}
      ${font.strike ? escapeXml /*xml*/ `<strike/>` : ""}
      ${font.size ? escapeXml /*xml*/ `<sz val="${font.size}"/>` : ""}
      ${font.color && font.color.rgb
        ? escapeXml /*xml*/ `<color rgb="${toXlsxHexColor(font.color.rgb)}"/>`
        : ""}
      ${font.name ? escapeXml /*xml*/ `<name val="${font.name}"/>` : ""}
    </font>
  `;}
function addFonts(fonts){return escapeXml`
    <fonts count="${fonts.length}">
      ${joinXmlNodes(Object.values(fonts).map(addFont))}
    </fonts>
  `;}
function addFills(fills){const fillNodes=[];for(const fill of Object.values(fills)){if(fill.reservedAttribute!==undefined){fillNodes.push(escapeXml`
        <fill>
          <patternFill patternType="${fill.reservedAttribute}" />
        </fill>
      `);}
else{fillNodes.push(escapeXml`
        <fill>
          <patternFill patternType="solid">
            <fgColor rgb="${toXlsxHexColor(fill.fgColor.rgb)}" />
            <bgColor indexed="64" />
          </patternFill>
        </fill>
      `);}}
return escapeXml`
    <fills count="${fills.length}">
    ${joinXmlNodes(fillNodes)}
    </fills>
  `;}
function addBorders(borders){const borderNodes=[];for(const border of Object.values(borders)){borderNodes.push(escapeXml`
      <border>
        <left ${formatBorderAttribute(border["left"])}>
          ${addBorderColor(border["left"])}
        </left>
        <right ${formatBorderAttribute(border["right"])}>
          ${addBorderColor(border["right"])}
        </right>
        <top ${formatBorderAttribute(border["top"])}>
          ${addBorderColor(border["top"])}
        </top>
        <bottom ${formatBorderAttribute(border["bottom"])}>
          ${addBorderColor(border["bottom"])}
        </bottom>
        <diagonal ${formatBorderAttribute(border["diagonal"])}>
          ${addBorderColor(border["diagonal"])}
        </diagonal>
      </border>
    `);}
return escapeXml`
    <borders count="${borders.length}">
      ${joinXmlNodes(borderNodes)}
    </borders>
  `;}
function formatBorderAttribute(description){if(!description){return escapeXml``;}
return formatAttributes([["style",description.style]]);}
function addBorderColor(description){if(!description){return escapeXml``;}
return escapeXml`
    <color ${formatAttributes([["rgb", toXlsxHexColor(description.color.rgb)]])}/>
  `;}
function addStyles(styles){const styleNodes=[];for(const style of styles){const attributes=[["numFmtId",style.numFmtId],["fillId",style.fillId],["fontId",style.fontId],["borderId",style.borderId],];const alignAttrs=[];if(style.alignment&&style.alignment.vertical){alignAttrs.push(["vertical",style.alignment.vertical]);}
if(style.alignment&&style.alignment.horizontal){alignAttrs.push(["horizontal",style.alignment.horizontal]);}
if(style.alignment&&style.alignment.wrapText){alignAttrs.push(["wrapText","1"]);}
if(alignAttrs.length>0){attributes.push(["applyAlignment","1"]);styleNodes.push(escapeXml`<xf ${formatAttributes(attributes)}><alignment ${formatAttributes(alignAttrs)} /></xf> `);}
else{styleNodes.push(escapeXml`<xf ${formatAttributes(attributes)} />`);}}
return escapeXml`
    <cellXfs count="${styles.length}">
      ${joinXmlNodes(styleNodes)}
    </cellXfs>
  `;}
function addCellWiseConditionalFormatting(dxfs){const dxfNodes=[];for(const dxf of dxfs){let fontNode=escapeXml``;if(dxf.font){fontNode=addFont(dxf.font);}
let fillNode=escapeXml``;if(dxf.fill){fillNode=escapeXml`
        <fill>
          <patternFill>
            <bgColor rgb="${toXlsxHexColor(dxf.fill.fgColor.rgb)}" />
          </patternFill>
        </fill>
      `;}
dxfNodes.push(escapeXml`
      <dxf>
        ${fontNode}
        ${fillNode}
      </dxf>
    `);}
return escapeXml`
    <dxfs count="${dxfs.length}">
      ${joinXmlNodes(dxfNodes)}
    </dxfs>
  `;}
function createTable(table,tableId,sheetData){const tableAttributes=[["id",tableId],["name",`Table${tableId}`],["displayName",`Table${tableId}`],["ref",table.range],["headerRowCount",table.config.numberOfHeaders],["totalsRowCount",table.config.totalRow?1:0],["xmlns",NAMESPACE.table],["xmlns:xr",NAMESPACE.revision],["xmlns:xr3",NAMESPACE.revision3],["xmlns:mc",NAMESPACE.markupCompatibility],];const xml=escapeXml`
    <table ${formatAttributes(tableAttributes)}>
      ${table.config.hasFilters ? addAutoFilter(table) : ""}
      ${addTableColumns(table, sheetData)}
      ${addTableStyle(table)}
    </table>
    `;return parseXML(xml);}
function addAutoFilter(table){const autoFilterAttributes=[["ref",table.range]];return escapeXml`
  <autoFilter ${formatAttributes(autoFilterAttributes)}>
    ${joinXmlNodes(addFilterColumns(table))}
  </autoFilter>
  `;}
function addFilterColumns(table){const columns=[];for(const filter of table.filters){const colXml=escapeXml`
      <filterColumn ${formatAttributes([["colId", filter.colId]])}>
        ${addFilter(filter)}
      </filterColumn>
      `;columns.push(colXml);}
return columns;}
function addFilter(filter){const filterValues=filter.displayedValues.map((val)=>escapeXml`<filter ${formatAttributes([["val", val]])}/>`);const filterAttributes=filter.displayBlanks?[["blank",1]]:[];return escapeXml`
  <filters ${formatAttributes(filterAttributes)}>
      ${joinXmlNodes(filterValues)}
  </filters>
`;}
function addTableColumns(table,sheetData){const tableZone=toZone(table.range);const columns=[];for(const i of range(0,zoneToDimension(tableZone).numberOfCols)){const colHeaderXc=toXC(tableZone.left+i,tableZone.top);const colName=sheetData.cells[colHeaderXc]||`col${i}`;const colAttributes=[["id",i+1],["name",colName],];if(table.config.totalRow){const colTotalXc=toXC(tableZone.left+i,tableZone.bottom);const colTotalContent=sheetData.cells[colTotalXc];if(colTotalContent?.startsWith("=")){colAttributes.push(["totalsRowFunction","custom"]);}}
columns.push(escapeXml`<tableColumn ${formatAttributes(colAttributes)}/>`);}
return escapeXml`
        <tableColumns ${formatAttributes([["count", columns.length]])}>
            ${joinXmlNodes(columns)}
        </tableColumns>
    `;}
function addTableStyle(table){const tableStyleAttrs=[["name",table.config.styleId],["showFirstColumn",table.config.firstColumn?1:0],["showLastColumn",table.config.lastColumn?1:0],["showRowStripes",table.config.bandedRows?1:0],["showColumnStripes",table.config.bandedColumns?1:0],];return escapeXml`<tableStyleInfo ${formatAttributes(tableStyleAttrs)}/>`;}
function addColumns(cols){if(!Object.values(cols).length){return escapeXml``;}
const colNodes=[];for(const[id,col]of Object.entries(cols)){const attributes=[["min",parseInt(id)+1],["max",parseInt(id)+1],["width",convertWidthToExcel(col.size||DEFAULT_CELL_WIDTH)],["customWidth",1],["hidden",col.isHidden?1:0],];if(col.outlineLevel){attributes.push(["outlineLevel",col.outlineLevel]);}
if(col.collapsed){attributes.push(["collapsed",1]);}
colNodes.push(escapeXml`
      <col ${formatAttributes(attributes)}/>
    `);}
return escapeXml`
    <cols>
      ${joinXmlNodes(colNodes)}
    </cols>
  `;}
function addRows(construct,data,sheet){const rowNodes=[];const styles=new PositionMap(iterateItemIdsPositions(sheet.id,sheet.styles));const borders=new PositionMap(iterateItemIdsPositions(sheet.id,sheet.borders));const formats=new PositionMap(iterateItemIdsPositions(sheet.id,sheet.formats));for(let r=0;r<sheet.rowNumber;r++){const rowAttrs=[["r",r+1]];const row=sheet.rows[r]||{};if(row.size&&row.size!==DEFAULT_CELL_HEIGHT){rowAttrs.push(["ht",convertHeightToExcel(row.size)],["customHeight",1]);}
if(row.isHidden){rowAttrs.push(["hidden",1]);}
if(row.outlineLevel){rowAttrs.push(["outlineLevel",row.outlineLevel]);}
if(row.collapsed){rowAttrs.push(["collapsed",1]);}
const cellNodes=[];for(let c=0;c<sheet.colNumber;c++){const xc=toXC(c,r);const content=sheet.cells[xc];const value=sheet.cellValues[xc];const position={sheetId:sheet.id,col:c,row:r};const styleId=styles.get(position);const formatId=formats.get(position);const borderId=borders.get(position);if(content||styleId||formatId||borderId||value!==undefined){const attributes=[["r",xc]];const id=normalizeStyle(construct,extractStyle(data,content,styleId,formatId,borderId));if(id){attributes.push(["s",id]);}
let additionalAttrs=[];let cellNode=escapeXml``;if(content?.startsWith("=")&&value!==undefined){const res=addFormula(content,value,sheet.formulaSpillRanges[xc]??xc);if(!res){continue;}
({attrs:additionalAttrs,node:cellNode}=res);}
else if(content&&isMarkdownLink(content)){const{label}=parseMarkdownLink(content);({attrs:additionalAttrs,node:cellNode}=addContent(label,construct.sharedStrings));}
else if(content&&content!==""){const isTableHeader=isCellTableHeader(c,r,sheet);const isTableTotal=isCellTableTotal(c,r,sheet);const isPlainText=!!(formatId&&isTextFormat(data.formats[formatId]));({attrs:additionalAttrs,node:cellNode}=addContent(content,construct.sharedStrings,isTableHeader||isTableTotal||isPlainText));}
attributes.push(...additionalAttrs);cellNodes.push(escapeXml`<c ${formatAttributes(attributes)}>
  ${cellNode}
</c>`);}}
if(cellNodes.length||row.size!==DEFAULT_CELL_HEIGHT||row.isHidden||row.outlineLevel||row.collapsed){rowNodes.push(escapeXml`
        <row ${formatAttributes(rowAttrs)}>
          ${joinXmlNodes(cellNodes)}
        </row>
      `);}}
return escapeXml`
    <sheetData>
      ${joinXmlNodes(rowNodes)}
    </sheetData>
  `;}
function isCellTableHeader(col,row,sheet){return sheet.tables.some((table)=>{const zone=toZone(table.range);const headerZone={...zone,bottom:zone.top};return isInside(col,row,headerZone);});}
function isCellTableTotal(col,row,sheet){return sheet.tables.some((table)=>{if(!table.config.totalRow){return false;}
const zone=toZone(table.range);const totalZone={...zone,top:zone.bottom};return isInside(col,row,totalZone);});}
function addHyperlinks(construct,data,sheetIndex){const sheet=data.sheets[sheetIndex];const cells=sheet.cells;const linkNodes=[];for(const xc in cells){const content=cells[xc];if(content&&isMarkdownLink(content)){const{label,url}=parseMarkdownLink(content);if(isSheetUrl(url)){const sheetId=parseSheetUrl(url);const sheet=data.sheets.find((sheet)=>sheet.id===sheetId);const position=sheet?`${sheet.name}!A1`:CellErrorType.InvalidReference;const hyperlinkAttributes=[["display",label],["location",position],["ref",xc],];linkNodes.push(escapeXml`
          <hyperlink ${formatAttributes(hyperlinkAttributes)}/>
        `);}
else{const linkRelId=addRelsToFile(construct.relsFiles,`xl/worksheets/_rels/sheet${sheetIndex}.xml.rels`,{target:withHttps(url),type:XLSX_RELATION_TYPE.hyperlink,targetMode:"External",});const hyperlinkAttributes=[["r:id",linkRelId],["ref",xc],];linkNodes.push(escapeXml`
          <hyperlink ${formatAttributes(hyperlinkAttributes)}/>
        `);}}}
if(!linkNodes.length){return escapeXml``;}
return escapeXml`
    <hyperlinks>
      ${joinXmlNodes(linkNodes)}
    </hyperlinks>
  `;}
function addMerges(merges){if(merges.length){const mergeNodes=merges.map((merge)=>escapeXml`<mergeCell ref="${merge}" />`);return escapeXml`
      <mergeCells count="${merges.length}">
        ${joinXmlNodes(mergeNodes)}
      </mergeCells>
    `;}
else
return escapeXml``;}
function addSheetViews(sheet){const panes=sheet.panes;let splitPanes=escapeXml``;if(panes&&(panes.xSplit||panes.ySplit)){const xc=toXC(panes.xSplit,panes.ySplit);const xSplit=panes.xSplit?escapeXml`xSplit="${panes.xSplit}"`:"";const ySplit=panes.ySplit?escapeXml`ySplit="${panes.ySplit}"`:"";const topRight=panes.xSplit?escapeXml`<selection pane="topRight"/>`:"";const bottomLeft=panes.ySplit?escapeXml`<selection pane="bottomLeft"/>`:"";const bottomRight=panes.xSplit&&panes.ySplit?escapeXml`<selection pane="bottomRight"/>`:"";splitPanes=escapeXml`
    <pane
      ${xSplit}
      ${ySplit}
      topLeftCell="${xc}"
      activePane="${panes.xSplit ? (panes.ySplit ? "bottomRight" : "topRight") : "bottomLeft"}"
      state="frozen"/>
      ${topRight}
      ${bottomLeft}
      ${bottomRight}
    `;}
const sheetViewAttrs=[["showGridLines",sheet.areGridLinesVisible?1:0],["workbookViewId",0],];return escapeXml`
      <sheetViews>
        <sheetView ${formatAttributes(sheetViewAttrs)}>
          ${splitPanes}
        </sheetView>
      </sheetViews>
    `;}
function addSheetProperties(sheet){if(!sheet.color){return"";}
return escapeXml`
      <sheetPr>
        <tabColor ${formatAttributes([["rgb", toXlsxHexColor(sheet.color)]])} />
      </sheetPr>
    `;}
function getXLSX(data){data=fixLengthySheetNames(data);data=purgeSingleRowTables(data);const files=[];const construct=getDefaultXLSXStructure(data);files.push(createWorkbook(data,construct));files.push(...createWorksheets(data,construct));files.push(createStylesSheet(construct));files.push(createSharedStrings(construct.sharedStrings));files.push(...createRelsFiles(construct.relsFiles));files.push(createContentTypes(files));files.push(createRelRoot());return{name:`my_spreadsheet.xlsx`,files,};}
function createWorkbook(data,construct){const namespaces=[["xmlns",NAMESPACE["workbook"]],["xmlns:r",RELATIONSHIP_NSR],];const sheetNodes=[];for(const[index,sheet]of Object.entries(data.sheets)){const attributes=[["state",sheet.isVisible?"visible":"hidden"],["name",sheet.name],["sheetId",parseInt(index)+1],["r:id",`rId${parseInt(index) + 1}`],];sheetNodes.push(escapeXml`
      <sheet ${formatAttributes(attributes)} />
    `);addRelsToFile(construct.relsFiles,"xl/_rels/workbook.xml.rels",{type:XLSX_RELATION_TYPE.sheet,target:`worksheets/sheet${index}.xml`,});}
const xml=escapeXml`
    <workbook ${formatAttributes(namespaces)}>
      <sheets>
        ${joinXmlNodes(sheetNodes)}
      </sheets>
    </workbook>
  `;return createXMLFile(parseXML(xml),"xl/workbook.xml","workbook");}
function createWorksheets(data,construct){const files=[];let currentTableIndex=1;for(const[sheetIndex,sheet]of Object.entries(data.sheets)){const namespaces=[["xmlns",NAMESPACE["worksheet"]],["xmlns:r",RELATIONSHIP_NSR],];const sheetFormatAttributes=[["defaultRowHeight",convertHeightToExcel(DEFAULT_CELL_HEIGHT)],["defaultColWidth",convertWidthToExcel(DEFAULT_CELL_WIDTH)],];const tablesNode=createTablesForSheet(sheet,sheetIndex,currentTableIndex,construct,files);currentTableIndex+=sheet.tables.length;let drawingNode=escapeXml``;const drawingRelIds=[];for(const chart of sheet.charts){const xlsxChartId=convertChartId(chart.id);const chartRelId=addRelsToFile(construct.relsFiles,`xl/drawings/_rels/drawing${sheetIndex}.xml.rels`,{target:`../charts/chart${xlsxChartId}.xml`,type:XLSX_RELATION_TYPE.chart,});drawingRelIds.push(chartRelId);files.push(createXMLFile(createChart(chart,sheetIndex,data),`xl/charts/chart${xlsxChartId}.xml`,"chart"));}
for(const image of sheet.images){const mimeType=image.data.mimetype;if(mimeType===undefined)
continue;const extension=IMAGE_MIMETYPE_TO_EXTENSION_MAPPING[mimeType];if(extension===undefined)
continue;const xlsxImageId=convertImageId(image.id);const imageFileName=`image${xlsxImageId}.${extension}`;const imageRelId=addRelsToFile(construct.relsFiles,`xl/drawings/_rels/drawing${sheetIndex}.xml.rels`,{target:`../media/${imageFileName}`,type:XLSX_RELATION_TYPE.image,});drawingRelIds.push(imageRelId);files.push({path:`xl/media/${imageFileName}`,imageSrc:image.data.path,});}
const drawings=[...sheet.charts,...sheet.images];if(drawings.length){const drawingRelId=addRelsToFile(construct.relsFiles,`xl/worksheets/_rels/sheet${sheetIndex}.xml.rels`,{target:`../drawings/drawing${sheetIndex}.xml`,type:XLSX_RELATION_TYPE.drawing,});files.push(createXMLFile(createDrawing(drawingRelIds,sheet,drawings),`xl/drawings/drawing${sheetIndex}.xml`,"drawing"));drawingNode=escapeXml`<drawing r:id="${drawingRelId}" />`;}
const sheetXml=escapeXml`
      <worksheet ${formatAttributes(namespaces)}>
        ${addSheetProperties(sheet)}
        ${addSheetViews(sheet)}
        <sheetFormatPr ${formatAttributes(sheetFormatAttributes)} />
        ${addColumns(sheet.cols)}
        ${addRows(construct, data, sheet)}
        ${addMerges(sheet.merges)}
        ${joinXmlNodes(addConditionalFormatting(construct.dxfs, sheet.conditionalFormats))}
        ${joinXmlNodes(addDataValidationRules(sheet.dataValidationRules))}
        ${addHyperlinks(construct, data, sheetIndex)}
        ${drawingNode}
        ${tablesNode}
      </worksheet>
    `;files.push(createXMLFile(parseXML(sheetXml),`xl/worksheets/sheet${sheetIndex}.xml`,"sheet"));}
const sheetMetadataXml=escapeXml`
    <metadata xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:xda="http://schemas.microsoft.com/office/spreadsheetml/2017/dynamicarray">
        <metadataTypes count="1">
            <metadataType name="XLDAPR" minSupportedVersion="120000" copy="1" pasteAll="1"
                pasteValues="1" merge="1" splitFirst="1" rowColShift="1" clearFormats="1"
                clearComments="1" assign="1" coerce="1" cellMeta="1" />
        </metadataTypes>
        <futureMetadata name="XLDAPR" count="1">
            <bk>
                <extLst>
                    <ext uri="{${ARRAY_FORMULA_URI}}">
                        <xda:dynamicArrayProperties fDynamic="1" fCollapsed="0" />
                    </ext>
                </extLst>
            </bk>
        </futureMetadata>
        <cellMetadata count="1">
            <bk>
                <rc t="1" v="0" />
            </bk>
        </cellMetadata>
    </metadata>
  `;files.push(createXMLFile(parseXML(sheetMetadataXml),"xl/metadata.xml","metadata"));addRelsToFile(construct.relsFiles,"xl/_rels/workbook.xml.rels",{type:XLSX_RELATION_TYPE.sharedStrings,target:"sharedStrings.xml",});addRelsToFile(construct.relsFiles,"xl/_rels/workbook.xml.rels",{type:XLSX_RELATION_TYPE.styles,target:"styles.xml",});addRelsToFile(construct.relsFiles,"xl/_rels/workbook.xml.rels",{type:XLSX_RELATION_TYPE.metadata,target:"metadata.xml",});return files;}
function createTablesForSheet(sheetData,sheetId,startingTableId,construct,files){let currentTableId=startingTableId;if(!sheetData.tables.length)
return new XMLString("");const sheetRelFile=`xl/worksheets/_rels/sheet${sheetId}.xml.rels`;const tableParts=[];for(const table of sheetData.tables){const tableRelId=addRelsToFile(construct.relsFiles,sheetRelFile,{target:`../tables/table${currentTableId}.xml`,type:XLSX_RELATION_TYPE.table,});files.push(createXMLFile(createTable(table,currentTableId,sheetData),`xl/tables/table${currentTableId}.xml`,"table"));tableParts.push(escapeXml`<tablePart r:id="${tableRelId}" />`);currentTableId++;}
return escapeXml`
    <tableParts count="${sheetData.tables.length}">
      ${joinXmlNodes(tableParts)}
    </tableParts>
`;}
function createStylesSheet(construct){const namespaces=[["xmlns",NAMESPACE["styleSheet"]],["xmlns:r",RELATIONSHIP_NSR],];const styleXml=escapeXml`
    <styleSheet ${formatAttributes(namespaces)}>
      ${addNumberFormats(construct.numFmts)}
      ${addFonts(construct.fonts)}
      ${addFills(construct.fills)}
      ${addBorders(construct.borders)}
      ${addStyles(construct.styles)}
      ${addCellWiseConditionalFormatting(construct.dxfs)}
    </styleSheet>
  `;return createXMLFile(parseXML(styleXml),"xl/styles.xml","styles");}
function createSharedStrings(strings){const namespaces=[["xmlns",NAMESPACE["sst"]],["count",strings.length],["uniqueCount",strings.length],];const stringNodes=strings.map((string)=>{if(string.trim()!==string){return escapeXml`<si><t xml:space="preserve">${string}</t></si>`;}
return escapeXml`<si><t>${string}</t></si>`;});const xml=escapeXml`
    <sst ${formatAttributes(namespaces)}>
      ${joinXmlNodes(stringNodes)}
    </sst>
  `;return createXMLFile(parseXML(xml),"xl/sharedStrings.xml","sharedStrings");}
function createRelsFiles(relsFiles){const XMLRelsFiles=[];for(const relFile of relsFiles){const relationNodes=[];for(const rel of relFile.rels){const attributes=[["Id",rel.id],["Target",rel.target],["Type",rel.type],];if(rel.targetMode){attributes.push(["TargetMode",rel.targetMode]);}
relationNodes.push(escapeXml`
        <Relationship ${formatAttributes(attributes)} />
      `);}
const xml=escapeXml`
      <Relationships xmlns="${NAMESPACE["Relationships"]}">
        ${joinXmlNodes(relationNodes)}
      </Relationships>
    `;XMLRelsFiles.push(createXMLFile(parseXML(xml),relFile.path));}
return XMLRelsFiles;}
function createContentTypes(files){const overrideNodes=[];const imageDefaultNodes=Object.entries(IMAGE_MIMETYPE_TO_EXTENSION_MAPPING).map(([mimetype,extension])=>createDefaultXMLElement(extension,mimetype));for(const file of files){if("contentType"in file&&file.contentType){overrideNodes.push(createOverride("/"+file.path,CONTENT_TYPES[file.contentType]));}}
const relsAttributes=[["Extension","rels"],["ContentType","application/vnd.openxmlformats-package.relationships+xml"],];const xmlAttributes=[["Extension","xml"],["ContentType","application/xml"],];const xml=escapeXml`
    <Types xmlns="${NAMESPACE["Types"]}">
      ${joinXmlNodes(Object.values(imageDefaultNodes))}
      <Default ${formatAttributes(relsAttributes)} />
      <Default ${formatAttributes(xmlAttributes)} />
      ${joinXmlNodes(overrideNodes)}
    </Types>
  `;return createXMLFile(parseXML(xml),"[Content_Types].xml");}
function createRelRoot(){const attributes=[["Id","rId1"],["Type",XLSX_RELATION_TYPE.document],["Target","xl/workbook.xml"],];const xml=escapeXml`
    <Relationships xmlns="${NAMESPACE["Relationships"]}">
      <Relationship ${formatAttributes(attributes)} />
    </Relationships>
  `;return createXMLFile(parseXML(xml),"_rels/.rels");}
function fixLengthySheetNames(data){const nameMapping={};const newNames=[];for(const sheet of data.sheets){let newName=sheet.name.slice(0,31);newName=getUniqueText(newName,newNames,{compute:(name,i)=>name.slice(0,31-String(i).length)+i,});newNames.push(newName);if(newName!==sheet.name){nameMapping[sheet.name]=newName;sheet.name=newName;}}
if(!Object.keys(nameMapping).length){return data;}
const sheetWithNewNames=Object.keys(nameMapping).sort((a,b)=>b.length-a.length);let stringifiedData=JSON.stringify(data);for(const sheetName of sheetWithNewNames){const regex=new RegExp(`'?${escapeRegExp(sheetName)}'?!`,"g");stringifiedData=stringifiedData.replaceAll(regex,(match)=>{const newName=nameMapping[sheetName];return match.replace(sheetName,newName);});}
return JSON.parse(stringifiedData);}
function purgeSingleRowTables(data){for(const sheet of data.sheets){sheet.tables=sheet.tables.filter((table)=>zoneToDimension(toZone(table.range)).numberOfRows>1);}
return data;}
var Status;(function(Status){Status[Status["Ready"]=0]="Ready";Status[Status["Running"]=1]="Running";Status[Status["RunningCore"]=2]="RunningCore";Status[Status["Finalizing"]=3]="Finalizing";})(Status||(Status={}));class Model extends EventBus{corePlugins=[];statefulUIPlugins=[];range;session;isReplayingCommand=false;renderers={};status=0;config;corePluginConfig;coreViewPluginConfig;uiPluginConfig;state;selection;getters;coreGetters;uuidGenerator;handlers=[];uiHandlers=[];coreHandlers=[];constructor(data={},config={},stateUpdateMessages=[],uuidGenerator=new UuidGenerator(),verboseImport=false){const start=performance.now();console.debug("##### Model creation #####");super();setDefaultTranslationMethod();stateUpdateMessages=repairInitialMessages(data,stateUpdateMessages);const workbookData=load(data,verboseImport);this.state=new StateObserver();this.uuidGenerator=uuidGenerator;this.config=this.setupConfig(config);this.session=this.setupSession(workbookData.revisionId);this.coreGetters={};this.range=new RangeAdapter(this.coreGetters);this.coreGetters.getRangeString=this.range.getRangeString.bind(this.range);this.coreGetters.getRangeFromSheetXC=this.range.getRangeFromSheetXC.bind(this.range);this.coreGetters.createAdaptedRanges=this.range.createAdaptedRanges.bind(this.range);this.coreGetters.getRangeData=this.range.getRangeData.bind(this.range);this.coreGetters.getRangeDataFromXc=this.range.getRangeDataFromXc.bind(this.range);this.coreGetters.getRangeDataFromZone=this.range.getRangeDataFromZone.bind(this.range);this.coreGetters.getRangeFromRangeData=this.range.getRangeFromRangeData.bind(this.range);this.coreGetters.getRangeFromZone=this.range.getRangeFromZone.bind(this.range);this.coreGetters.recomputeRanges=this.range.recomputeRanges.bind(this.range);this.coreGetters.isRangeValid=this.range.isRangeValid.bind(this.range);this.coreGetters.extendRange=this.range.extendRange.bind(this.range);this.coreGetters.getRangesUnion=this.range.getRangesUnion.bind(this.range);this.coreGetters.removeRangesSheetPrefix=this.range.removeRangesSheetPrefix.bind(this.range);this.coreGetters.adaptFormulaStringDependencies=this.range.adaptFormulaStringDependencies.bind(this.range);this.coreGetters.copyFormulaStringForSheet=this.range.copyFormulaStringForSheet.bind(this.range);this.getters={isReadonly:()=>this.config.mode==="readonly"||this.config.mode==="dashboard",isDashboard:()=>this.config.mode==="dashboard",};this.selection=new SelectionStreamProcessorImpl(this.getters);this.coreHandlers.push(this.range);this.handlers.push(this.range);this.corePluginConfig=this.setupCorePluginConfig();this.coreViewPluginConfig=this.setupCoreViewPluginConfig();this.uiPluginConfig=this.setupUiPluginConfig();for(const Plugin of corePluginRegistry.getAll()){this.setupCorePlugin(Plugin,workbookData);}
Object.assign(this.getters,this.coreGetters);this.session.loadInitialMessages(stateUpdateMessages);for(const Plugin of coreViewsPluginRegistry.getAll()){const plugin=this.setupCoreViewPlugin(Plugin);this.handlers.push(plugin);this.uiHandlers.push(plugin);this.coreHandlers.push(plugin);}
for(const Plugin of statefulUIPluginRegistry.getAll()){const plugin=this.setupUiPlugin(Plugin);this.statefulUIPlugins.push(plugin);this.handlers.push(plugin);this.uiHandlers.push(plugin);}
for(const Plugin of featurePluginRegistry.getAll()){const plugin=this.setupUiPlugin(Plugin);this.handlers.push(plugin);this.uiHandlers.push(plugin);}
this.dispatch("START");this.selection.observe(this,{handleEvent:()=>this.trigger("update"),});this.setupSessionEvents();this.joinSession();if(config.snapshotRequested||(data["[Content_Types].xml"]&&!this.getters.isReadonly())){const startSnapshot=performance.now();console.debug("Snapshot requested");this.session.snapshot(this.exportData());this.garbageCollectExternalResources();console.debug("Snapshot taken in",performance.now()-startSnapshot,"ms");}
markRaw(this);console.debug("Model created in",performance.now()-start,"ms");console.debug("######");}
joinSession(){this.session.join(this.config.client);}
async leaveSession(){const snapshot=this.getters.isReadonly()?undefined:lazy(()=>this.exportData());await this.session.leave(snapshot);}
setupUiPlugin(Plugin){const plugin=new Plugin(this.uiPluginConfig);for(const name of Plugin.getters){if(!(name in plugin)){throw new Error(`Invalid getter name: ${name} for plugin ${plugin.constructor}`);}
if(name in this.getters){throw new Error(`Getter "${name}" is already defined.`);}
this.getters[name]=plugin[name].bind(plugin);}
for(const layer of Plugin.layers){if(!this.renderers[layer]){this.renderers[layer]=[];}
this.renderers[layer].push(plugin);}
return plugin;}
setupCoreViewPlugin(Plugin){const plugin=new Plugin(this.coreViewPluginConfig);for(const name of Plugin.getters){if(!(name in plugin)){throw new Error(`Invalid getter name: ${name} for plugin ${plugin.constructor}`);}
if(name in this.getters){throw new Error(`Getter "${name}" is already defined.`);}
this.getters[name]=plugin[name].bind(plugin);}
return plugin;}
setupCorePlugin(Plugin,data){const plugin=new Plugin(this.corePluginConfig);for(const name of Plugin.getters){if(!(name in plugin)){throw new Error(`Invalid getter name: ${name} for plugin ${plugin.constructor}`);}
if(name in this.coreGetters){throw new Error(`Getter "${name}" is already defined.`);}
this.coreGetters[name]=plugin[name].bind(plugin);}
plugin.import(data);this.corePlugins.push(plugin);this.coreHandlers.push(plugin);this.handlers.push(plugin);}
onRemoteRevisionReceived({commands}){for(const command of commands){const previousStatus=this.status;this.status=2;this.dispatchToHandlers(this.statefulUIPlugins,command);this.status=previousStatus;}
this.finalize();}
setupSession(revisionId){return new Session(buildRevisionLog({initialRevisionId:revisionId,recordChanges:this.state.recordChanges.bind(this.state),dispatch:(command)=>{const result=this.checkDispatchAllowed(command);if(!result.isSuccessful){this.dispatchToHandlers(this.coreHandlers,{type:"UNDO",commands:[command],});return;}
this.isReplayingCommand=true;this.dispatchToHandlers(this.coreHandlers,command);this.isReplayingCommand=false;},}),this.config.transportService,revisionId);}
setupSessionEvents(){this.session.on("remote-revision-received",this,this.onRemoteRevisionReceived);this.session.on("revision-undone",this,({commands})=>{this.dispatchFromCorePlugin("UNDO",{commands});this.finalize();});this.session.on("revision-redone",this,({commands})=>{this.dispatchFromCorePlugin("REDO",{commands});this.finalize();});this.session.on("unexpected-revision-id",this,()=>this.trigger("unexpected-revision-id"));this.session.on("collaborative-event-received",this,()=>{this.trigger("update");});}
setupConfig(config){const client=config.client||{id:this.uuidGenerator.smallUuid(),name:_t("Anonymous").toString(),};const transportService=config.transportService||new LocalTransportService();return{...config,mode:config.mode||"normal",custom:config.custom||{},external:this.setupExternalConfig(config.external||{}),transportService,client,moveClient:()=>{},snapshotRequested:false,notifyUI:(payload)=>this.trigger("notify-ui",payload),raiseBlockingErrorUI:(text)=>this.trigger("raise-error-ui",{text}),customColors:config.customColors||[],};}
setupExternalConfig(external){const loadLocales=external.loadLocales||(()=>Promise.resolve(DEFAULT_LOCALES));return{...external,loadLocales,};}
setupCorePluginConfig(){return{getters:this.coreGetters,stateObserver:this.state,range:this.range,dispatch:this.dispatchFromCorePlugin,canDispatch:this.canDispatch,custom:this.config.custom,external:this.config.external,};}
setupCoreViewPluginConfig(){return{getters:this.getters,stateObserver:this.state,selection:this.selection,moveClient:this.session.move.bind(this.session),custom:this.config.custom,uiActions:this.config,session:this.session,defaultCurrency:this.config.defaultCurrency,customColors:this.config.customColors||[],external:this.config.external,};}
setupUiPluginConfig(){return{getters:this.getters,stateObserver:this.state,dispatch:this.dispatch,canDispatch:this.canDispatch,selection:this.selection,moveClient:this.session.move.bind(this.session),custom:this.config.custom,uiActions:this.config,session:this.session,defaultCurrency:this.config.defaultCurrency,customColors:this.config.customColors||[],external:this.config.external,};}
checkDispatchAllowed(command){const results=isCoreCommand(command)?this.checkDispatchAllowedCoreCommand(command):this.checkDispatchAllowedLocalCommand(command);if(results.some((r)=>r!=="Success")){return new DispatchResult(results.flat());}
return DispatchResult.Success;}
checkDispatchAllowedCoreCommand(command){const results=this.corePlugins.map((handler)=>handler.allowDispatch(command));results.push(this.range.allowDispatch(command));return results;}
checkDispatchAllowedLocalCommand(command){return this.uiHandlers.map((handler)=>handler.allowDispatch(command));}
finalize(){this.status=3;for(const h of this.handlers){h.finalize();}
this.status=0;this.trigger("command-finalized");}
canDispatch=(type,payload)=>{return this.checkDispatchAllowed(createCommand(type,payload));};dispatch=(type,payload)=>{const command=createCommand(type,payload);const status=this.status;if(this.getters.isReadonly()&&!canExecuteInReadonly(command)){return new DispatchResult("Readonly");}
if(!this.session.canApplyOptimisticUpdate()){return new DispatchResult("WaitingSessionConfirmation");}
switch(status){case 0:const result=this.checkDispatchAllowed(command);if(!result.isSuccessful){this.trigger("update");return result;}
this.status=1;const{changes,commands}=this.state.recordChanges(()=>{const start=performance.now();if(isCoreCommand(command)){this.state.addCommand(command);}
this.dispatchToHandlers(this.handlers,command);this.finalize();const time=performance.now()-start;if(time>5){console.debug(type,time,"ms");}});this.session.save(command,commands,changes);this.status=0;this.trigger("update");break;case 1:if(isCoreCommand(command)){const dispatchResult=this.checkDispatchAllowed(command);if(!dispatchResult.isSuccessful){return dispatchResult;}
this.state.addCommand(command);}
this.dispatchToHandlers(this.handlers,command);break;case 3:throw new Error("Cannot dispatch commands in the finalize state");case 2:if(isCoreCommand(command)){throw new Error(`A UI plugin cannot dispatch ${type} while handling a core command`);}
this.dispatchToHandlers(this.handlers,command);}
return DispatchResult.Success;};dispatchFromCorePlugin=(type,payload)=>{const command=createCommand(type,payload);const previousStatus=this.status;this.status=2;const handlers=this.isReplayingCommand?this.coreHandlers:this.handlers;this.dispatchToHandlers(handlers,command);this.status=previousStatus;return DispatchResult.Success;};dispatchToHandlers(handlers,command){const isCommandCore=isCoreCommand(command);for(const handler of handlers){if(!isCommandCore&&handler instanceof CorePlugin){continue;}
handler.beforeHandle(command);}
for(const handler of handlers){if(!isCommandCore&&handler instanceof CorePlugin){continue;}
handler.handle(command);}
this.trigger("command-dispatched",command);}
drawLayer(context,layer){const renderers=this.renderers[layer];if(!renderers){return;}
for(const renderer of renderers){context.ctx.save();renderer.drawLayer(context,layer);context.ctx.restore();}}
exportData(){let data=createEmptyWorkbookData();for(const handler of this.handlers){if(handler instanceof CorePlugin){handler.export(data);}}
data.revisionId=this.session.getRevisionId()||DEFAULT_REVISION_ID;data=deepCopy(data);return data;}
updateMode(mode){this.config.mode=mode;this.trigger("update");}
exportXLSX(){this.dispatch("EVALUATE_CELLS");let data=createEmptyExcelWorkbookData();for(const handler of this.handlers){if(handler instanceof BasePlugin){handler.exportForExcel(data);}}
data=deepCopy(data);return getXLSX(data);}
garbageCollectExternalResources(){for(const plugin of this.corePlugins){plugin.garbageCollectExternalResources();}}}
function createCommand(type,payload={}){const command=deepCopy(payload);command.type=type;return command;}
const __info__={};const SPREADSHEET_DIMENSIONS={MIN_ROW_HEIGHT,MIN_COL_WIDTH,HEADER_HEIGHT,HEADER_WIDTH,DESKTOP_BOTTOMBAR_HEIGHT,DEFAULT_CELL_WIDTH,DEFAULT_CELL_HEIGHT,SCROLLBAR_WIDTH,};const registries={autoCompleteProviders,autofillModifiersRegistry,autofillRulesRegistry,cellMenuRegistry,colMenuRegistry,errorTypes,linkMenuRegistry,functionRegistry,featurePluginRegistry,iconsOnCellRegistry,statefulUIPluginRegistry,coreViewsPluginRegistry,corePluginRegistry,rowMenuRegistry,sidePanelRegistry,figureRegistry,chartSidePanelComponentRegistry,chartComponentRegistry,chartRegistry,chartSubtypeRegistry,topbarMenuRegistry,topbarComponentRegistry,clickableCellRegistry,otRegistry,inverseCommandRegistry,urlRegistry,cellPopoverRegistry,numberFormatMenuRegistry,repeatLocalCommandTransformRegistry,repeatCommandTransformRegistry,clipboardHandlersRegistries,pivotRegistry,pivotTimeAdapterRegistry,pivotSidePanelRegistry,pivotNormalizationValueRegistry,supportedPivotPositionalFormulaRegistry,pivotToFunctionValueRegistry,migrationStepRegistry,chartJsExtensionRegistry,};const helpers={arg,isEvaluationError,toBoolean,toJsDate,toNumber,toString,toNormalizedPivotValue,toFunctionPivotValue,toXC,toZone,toUnboundedZone,toCartesian,numberToLetters,lettersToNumber,UuidGenerator,formatValue,createCurrencyFormat,ColorGenerator,computeTextWidth,createEmptyWorkbookData,createEmptySheet,createEmptyExcelSheet,rgbaToHex,colorToRGBA,positionToZone,isDefined,isMatrix,lazy,genericRepeat,createAction,createActions,transformRangeData,deepEquals,overlap,union,isInside,deepCopy,expandZoneOnInsertion,reduceZoneOnDeletion,unquote,getMaxObjectId,getFunctionsFromTokens,getFirstPivotFunction,getNumberOfPivotFunctions,parseDimension,isDateOrDatetimeField,makeFieldProposal,insertTokenAfterArgSeparator,insertTokenAfterLeftParenthesis,mergeContiguousZones,getPivotHighlights,pivotTimeAdapter,UNDO_REDO_PIVOT_COMMANDS,createPivotFormula,areDomainArgsFieldsValid,splitReference,sanitizeSheetName,getUniqueText,isNumber,isDateTime,};const links={isMarkdownLink,parseMarkdownLink,markdownLink,openLink,urlRepresentation,};const components={Checkbox,Section,RoundColorPicker,ChartDataSeries,ChartErrorSection,ChartLabelRange,ChartTitle,ChartPanel,ChartFigure,ChartJsComponent,Grid,GridOverlay,ScorecardChart,LineConfigPanel,BarConfigPanel,PieChartDesignPanel,GenericChartConfigPanel,ChartWithAxisDesignPanel,LineChartDesignPanel,GaugeChartConfigPanel,GaugeChartDesignPanel,ScorecardChartConfigPanel,ScorecardChartDesignPanel,GeoChartDesignPanel,RadarChartDesignPanel,WaterfallChartDesignPanel,ComboChartDesignPanel,FunnelChartDesignPanel,ChartTypePicker,FigureComponent,MenuPopover,Popover,SelectionInput,ValidationMessages,AddDimensionButton,PivotDimensionGranularity,PivotDimensionOrder,PivotDimension,PivotLayoutConfigurator,PivotHTMLRenderer,PivotDeferUpdate,PivotTitleSection,CogWheelMenu,TextInput,SidePanelCollapsible,RadioSelection,GeoChartRegionSelectSection,ChartDashboardMenu,FullScreenChart,};const hooks={useDragAndDropListItems,useHighlights,useHighlightsOnHover,};const stores={useStoreProvider,DependencyContainer,CellPopoverStore,ComposerFocusStore,CellComposerStore,FindAndReplaceStore,HighlightStore,DelayedHoveredCellStore,HoveredTableStore,ModelStore,NotificationStore,RendererStore,SelectionInputStore,SpreadsheetStore,useStore,useLocalStore,SidePanelStore,PivotSidePanelStore,PivotMeasureDisplayPanelStore,ClientFocusStore,GridRenderer,};function addFunction(functionName,functionDescription){functionRegistry.add(functionName,functionDescription);return{addFunction:(fName,fDescription)=>addFunction(fName,fDescription),};}
const constants={DEFAULT_LOCALE,HIGHLIGHT_COLOR,PIVOT_TABLE_CONFIG,ChartTerms,};const chartHelpers={...CHART_HELPERS,...CHART_RUNTIME_HELPERS};Object.assign(__exports,{AbstractCellClipboardHandler,AbstractChart,AbstractFigureClipboardHandler,CellErrorType,ClientDisconnectedError,CommandResult,CorePlugin,CoreViewPlugin,DispatchResult,EvaluationError,LocalTransportService,Model,PivotRuntimeDefinition,Registry,Revision,SPREADSHEET_DIMENSIONS,Spreadsheet,SpreadsheetPivotTable,UIPlugin,__info__,addFunction,addRenderingLayer,astToFormula,chartHelpers,compile,compileTokens,components,constants,convertAstNodes,coreTypes,findCellInNewZone,functionCache,helpers,hooks,invalidateCFEvaluationCommands,invalidateChartEvaluationCommands,invalidateDependenciesCommands,invalidateEvaluationCommands,iterateAstNodes,links,load,parse,parseTokens,readonlyAllowedCommands,registries,setDefaultSheetViewSize,setTranslationMethod,stores,tokenColors,tokenize});__info__.version="18.5.0-alpha.2";__info__.date="2025-07-11T11:52:38.378Z";__info__.hash="6d421789e";return __exports;});;

/* /spreadsheet_account/static/src/account_group_auto_complete.js */
odoo.define('@spreadsheet_account/account_group_auto_complete',['@web/core/l10n/translation','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registries,tokenColors,helpers}=require("@odoo/o-spreadsheet");const{insertTokenAfterLeftParenthesis}=helpers;const ACCOUNT_TYPES=[["asset_receivable",_t("Receivable")],["asset_cash",_t("Bank and Cash")],["asset_current",_t("Current Assets")],["asset_non_current",_t("Non-current Assets")],["asset_prepayments",_t("Prepayments")],["asset_fixed",_t("Fixed Assets")],["liability_payable",_t("Payable")],["liability_credit_card",_t("Credit Card")],["liability_current",_t("Current Liabilities")],["liability_non_current",_t("Non-current Liabilities")],["equity",_t("Equity")],["equity_unaffected",_t("Current Year Earnings")],["income",_t("Income")],["income_other",_t("Other Income")],["expense",_t("Expenses")],["expense_depreciation",_t("Depreciation")],["expense_direct_cost",_t("Cost of Revenue")],["off_balance",_t("Off-Balance Sheet")],];registries.autoCompleteProviders.add("account_group_types",{sequence:50,autoSelectFirstProposal:true,getProposals(tokenAtCursor){const functionContext=tokenAtCursor.functionContext;if(functionContext?.parent.toUpperCase()==="ODOO.ACCOUNT.GROUP"&&functionContext.argPosition===0){return ACCOUNT_TYPES.map(([technicalName,displayName])=>{const text=`"${technicalName}"`;return{text,description:displayName,htmlContent:[{value:text,color:tokenColors.STRING}],fuzzySearchKey:technicalName+displayName,};});}
return;},selectProposal:insertTokenAfterLeftParenthesis,});return __exports;});;

/* /spreadsheet_account/static/src/accounting_functions.js */
odoo.define('@spreadsheet_account/accounting_functions',['@web/core/l10n/translation','@web/core/utils/strings','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{sprintf}=require("@web/core/utils/strings");const spreadsheet=require("@odoo/o-spreadsheet");const{EvaluationError}=require("@odoo/o-spreadsheet");const{functionRegistry}=spreadsheet.registries;const{arg,toBoolean,toString,toNumber,toJsDate}=spreadsheet.helpers;const QuarterRegexp=/^q([1-4])\/(\d{4})$/i;const MonthRegexp=/^0?([1-9]|1[0-2])\/(\d{4})$/i;function parseAccountingQuarter(dateRange){const found=toString(dateRange?.value).trim().match(QuarterRegexp);return found?{rangeType:"quarter",year:Number(found[2]),quarter:Number(found[1]),}:undefined;}
function parseAccountingMonth(dateRange,locale){if(typeof dateRange?.value==="number"&&dateRange.format?.includes("m")&&!dateRange.format?.includes("d")){const date=toJsDate(dateRange.value,locale);return{rangeType:"month",year:date.getFullYear(),month:date.getMonth()+1,};}
const found=toString(dateRange?.value).trim().match(MonthRegexp);return found?{rangeType:"month",year:Number(found[2]),month:Number(found[1]),}:undefined;}
function parseAccountingYear(dateRange,locale){const dateNumber=toNumber(dateRange?.value,locale);if(dateNumber<3000){return{rangeType:"year",year:dateNumber};}
return undefined;}
function parseAccountingDay(dateRange,locale){const dateNumber=toNumber(dateRange?.value,locale);return{rangeType:"day",year:functionRegistry.get("YEAR").compute.bind({locale})(dateNumber),month:functionRegistry.get("MONTH").compute.bind({locale})(dateNumber),day:functionRegistry.get("DAY").compute.bind({locale})(dateNumber),};}
__exports.parseAccountingDate=parseAccountingDate;function parseAccountingDate(dateRange,locale){try{return(parseAccountingQuarter(dateRange)||parseAccountingMonth(dateRange,locale)||parseAccountingYear(dateRange,locale)||parseAccountingDay(dateRange,locale));}catch{throw new EvaluationError(sprintf(_t(`'%s' is not a valid period. Supported formats are "21/12/2022", "Q1/2022", "12/2022", and "2022".`),dateRange?.value));}}
const YEAR_OFFSET_ARG=arg("offset (number, default=0)",_t("Offset applied to the years."))
const COMPANY_ARG=arg("company_id (number, optional)",_t("The company to target (Advanced)."))
const POSTED_ARG=arg("include_unposted (boolean, default=FALSE)",_t("Set to TRUE to include unposted entries."))
const ODOO_FIN_ARGS=()=>[arg("account_codes (string)",_t("The prefix of the accounts.")),arg("date_range (string, date)",_t(`The date range. Supported formats are "21/12/2022", "Q1/2022", "12/2022", and "2022".`)),YEAR_OFFSET_ARG,COMPANY_ARG,POSTED_ARG,];const ODOO_RESIDUAL_ARGS=()=>[arg("account_codes (string, optional)",_t("The prefix of the accounts. If none provided, all receivable and payable accounts will be used.")),arg("date_range (string, date, optional)",_t(`The date range. Supported formats are "21/12/2022", "Q1/2022", "12/2022", and "2022".`)),YEAR_OFFSET_ARG,COMPANY_ARG,POSTED_ARG,];const ODOO_PARTNER_BALANCE_ARGS=()=>{const partner_arg=arg("partner_ids (string)",_t("The partner ids (separated by a comma)."));return[partner_arg,...ODOO_RESIDUAL_ARGS()];}
functionRegistry.add("ODOO.CREDIT",{description:_t("Get the total credit for the specified account(s) and period."),args:ODOO_FIN_ARGS(),category:"Odoo",returns:["NUMBER"],compute:function(accountCodes,dateRange,offset={value:0},companyId={value:null},includeUnposted={value:false}){const _accountCodes=toString(accountCodes).split(",").map((code)=>code.trim()).sort();const _offset=toNumber(offset,this.locale);const _dateRange=parseAccountingDate(dateRange,this.locale);const _companyId=companyId?.value;const _includeUnposted=toBoolean(includeUnposted);return{value:this.getters.getAccountPrefixCredit(_accountCodes,_dateRange,_offset,_companyId,_includeUnposted),format:this.getters.getCompanyCurrencyFormat(_companyId)||"#,##0.00",};},});functionRegistry.add("ODOO.DEBIT",{description:_t("Get the total debit for the specified account(s) and period."),args:ODOO_FIN_ARGS(),category:"Odoo",returns:["NUMBER"],compute:function(accountCodes,dateRange,offset={value:0},companyId={value:null},includeUnposted={value:false}){const _accountCodes=toString(accountCodes).split(",").map((code)=>code.trim()).sort();const _offset=toNumber(offset,this.locale);const _dateRange=parseAccountingDate(dateRange,this.locale);const _companyId=companyId?.value;const _includeUnposted=toBoolean(includeUnposted);return{value:this.getters.getAccountPrefixDebit(_accountCodes,_dateRange,_offset,_companyId,_includeUnposted),format:this.getters.getCompanyCurrencyFormat(_companyId)||"#,##0.00",};},});functionRegistry.add("ODOO.BALANCE",{description:_t("Get the total balance for the specified account(s) and period."),args:ODOO_FIN_ARGS(),category:"Odoo",returns:["NUMBER"],compute:function(accountCodes,dateRange,offset={value:0},companyId={value:null},includeUnposted={value:false}){const _accountCodes=toString(accountCodes).split(",").map((code)=>code.trim()).sort();const _offset=toNumber(offset,this.locale);const _dateRange=parseAccountingDate(dateRange,this.locale);const _companyId=companyId?.value;const _includeUnposted=toBoolean(includeUnposted);const value=this.getters.getAccountPrefixDebit(_accountCodes,_dateRange,_offset,_companyId,_includeUnposted)-
this.getters.getAccountPrefixCredit(_accountCodes,_dateRange,_offset,_companyId,_includeUnposted);return{value,format:this.getters.getCompanyCurrencyFormat(_companyId)||"#,##0.00"};},});functionRegistry.add("ODOO.FISCALYEAR.START",{description:_t("Returns the starting date of the fiscal year encompassing the provided date."),args:[arg("day (date)",_t("The day from which to extract the fiscal year start.")),arg("company_id (number, optional)",_t("The company.")),],category:"Odoo",returns:["NUMBER"],compute:function(date,companyId={value:null}){const startDate=this.getters.getFiscalStartDate(toJsDate(date,this.locale),companyId.value===null?null:toNumber(companyId,this.locale));return{value:toNumber(startDate,this.locale),format:this.locale.dateFormat,};},});functionRegistry.add("ODOO.FISCALYEAR.END",{description:_t("Returns the ending date of the fiscal year encompassing the provided date."),args:[arg("day (date)",_t("The day from which to extract the fiscal year end.")),arg("company_id (number, optional)",_t("The company.")),],category:"Odoo",returns:["NUMBER"],compute:function(date,companyId={value:null}){const endDate=this.getters.getFiscalEndDate(toJsDate(date,this.locale),companyId.value===null?null:toNumber(companyId,this.locale));return{value:toNumber(endDate,this.locale),format:this.locale.dateFormat,};},});const ACCOUNT_TYPES=["asset_receivable","asset_cash","asset_current","asset_non_current","asset_prepayments","asset_fixed","liability_payable","liability_credit_card","liability_current","liability_non_current","equity","equity_unaffected","income","income_other","expense","expense_depreciation","expense_direct_cost","off_balance",];functionRegistry.add("ODOO.ACCOUNT.GROUP",{description:_t("Returns the account codes of a given group."),args:[arg("type (string)",_t("The technical account type (possible values are: %s).",ACCOUNT_TYPES.join(", "))),],category:"Odoo",returns:["NUMBER"],compute:function(accountType){const accountTypes=this.getters.getAccountGroupCodes(toString(accountType));return accountTypes.join(",");},});functionRegistry.add("ODOO.RESIDUAL",{description:_t("Return the residual amount for the specified account(s) and period"),args:ODOO_RESIDUAL_ARGS(),category:"Odoo",returns:["NUMBER"],compute:function(accountCodes,dateRange,offset={value:0},companyId={value:null},includeUnposted={value:false}){const _accountCodes=toString(accountCodes).split(",").map((code)=>code.trim()).sort();const _offset=toNumber(offset,this.locale);if(!dateRange?.value){dateRange={value:new Date().getFullYear()}}
const _dateRange=parseAccountingDate(dateRange,this.locale);const _companyId=toNumber(companyId,this.locale);const _includeUnposted=toBoolean(includeUnposted);return{value:this.getters.getAccountResidual(_accountCodes,_dateRange,_offset,_companyId,_includeUnposted),format:this.getters.getCompanyCurrencyFormat(_companyId)||"#,##0.00",};},})
functionRegistry.add("ODOO.PARTNER.BALANCE",{description:_t("Return the partner balance for the specified account(s) and period"),args:ODOO_PARTNER_BALANCE_ARGS(),category:"Odoo",returns:["NUMBER"],compute:function(partnerIds,accountCodes,dateRange,offset={value:0},companyId={value:null},includeUnposted={value:false}){const _partnerIds=toString(partnerIds).split(",").map((partnerId)=>toNumber(partnerId,this.locale)).sort();const _accountCodes=toString(accountCodes).split(",").map((code)=>code.trim()).sort();const _offset=toNumber(offset,this.locale);if(!dateRange?.value){dateRange={value:new Date().getFullYear()}}
const _dateRange=parseAccountingDate(dateRange,this.locale);const _companyId=toNumber(companyId,this.locale);const _includeUnposted=toBoolean(includeUnposted);return{value:this.getters.getAccountPartnerData(_accountCodes,_dateRange,_offset,_companyId,_includeUnposted,_partnerIds),format:this.getters.getCompanyCurrencyFormat(_companyId)||"#,##0.00",};},})
return __exports;});;

/* /spreadsheet_account/static/src/index.js */
odoo.define('@spreadsheet_account',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet_account/plugins/accounting_plugin','@spreadsheet_account/utils','@spreadsheet_account/accounting_functions','@spreadsheet/helpers/helpers'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{AccountingPlugin}=require("@spreadsheet_account/plugins/accounting_plugin");const{getFirstAccountFunction,getNumberOfAccountFormulas}=require("@spreadsheet_account/utils");const{parseAccountingDate}=require("@spreadsheet_account/accounting_functions");const{camelToSnakeObject}=require("@spreadsheet/helpers/helpers");const{cellMenuRegistry,featurePluginRegistry}=spreadsheet.registries;const{astToFormula}=spreadsheet;const{isEvaluationError,toString,toBoolean}=spreadsheet.helpers;featurePluginRegistry.add("odooAccountingAggregates",AccountingPlugin);cellMenuRegistry.add("move_lines_see_records",{name:_t("See records"),sequence:176,async execute(env,newWindow){const position=env.model.getters.getActivePosition();const sheetId=position.sheetId;const cell=env.model.getters.getCell(position);const func=getFirstAccountFunction(cell.compiledFormula.tokens);let codes,partner_ids="";let date_range,offset,companyId,includeUnposted=false;const parsed_args=func.args.map(astToFormula).map((arg)=>env.model.getters.evaluateFormulaResult(sheetId,arg));if(func.functionName==="ODOO.PARTNER.BALANCE"){[partner_ids,codes,date_range,offset,companyId,includeUnposted]=parsed_args;}else{[codes,date_range,offset,companyId,includeUnposted]=parsed_args;}
if(codes?.value&&!isEvaluationError(codes.value)){codes=toString(codes?.value).split(",").map((code)=>code.trim());}else{codes=[];}
const locale=env.model.getters.getLocale();let dateRange;if(date_range?.value&&!isEvaluationError(date_range.value)){dateRange=parseAccountingDate(date_range,locale);}else{if(["ODOO.PARTNER.BALANCE","ODOO.RESIDUAL"].includes(func.functionName)){dateRange=parseAccountingDate({value:new Date().getFullYear()},locale);}}
offset=parseInt(offset?.value)||0;dateRange.year+=offset||0;companyId=parseInt(companyId?.value)||null;try{includeUnposted=toBoolean(includeUnposted.value);}catch{includeUnposted=false;}
const partnerIds=toString(partner_ids).split(",").map((code)=>code.trim());let param;if(func.functionName==="ODOO.PARTNER.BALANCE"){param=[camelToSnakeObject({dateRange,companyId,codes,includeUnposted,partnerIds})]}else{param=[camelToSnakeObject({dateRange,companyId,codes,includeUnposted})]}
const action=await env.services.orm.call("account.account","spreadsheet_move_line_action",param);await env.services.action.doAction(action,{newWindow});},isVisible:(env)=>{const position=env.model.getters.getActivePosition();const evaluatedCell=env.model.getters.getEvaluatedCell(position);const cell=env.model.getters.getCell(position);return(!isEvaluationError(evaluatedCell.value)&&evaluatedCell.value!==""&&cell&&cell.isFormula&&getNumberOfAccountFormulas(cell.compiledFormula.tokens)===1);},icon:"o-spreadsheet-Icon.SEE_RECORDS",});return __exports;});;

/* /spreadsheet_account/static/src/plugins/accounting_plugin.js */
odoo.define('@spreadsheet_account/plugins/accounting_plugin',['@odoo/o-spreadsheet','@spreadsheet/plugins','@web/core/l10n/translation','@web/core/utils/objects','@spreadsheet/helpers/helpers'],function(require){'use strict';let __exports={};const{EvaluationError}=require("@odoo/o-spreadsheet");const{OdooUIPlugin}=require("@spreadsheet/plugins");const{_t}=require("@web/core/l10n/translation");const{deepCopy}=require("@web/core/utils/objects");const{camelToSnakeObject,toServerDateString}=require("@spreadsheet/helpers/helpers");const AccountingPlugin=__exports.AccountingPlugin=class AccountingPlugin extends OdooUIPlugin{static getters=(["getAccountPrefixCredit","getAccountPrefixDebit","getAccountGroupCodes","getFiscalStartDate","getFiscalEndDate","getAccountResidual","getAccountPartnerData",]);constructor(config){super(config);this._serverData=config.custom.odooDataProvider?.serverData;}
get serverData(){if(!this._serverData){throw new Error("'serverData' is not defined, please make sure a 'OdooDataProvider' instance is provided to the model.");}
return this._serverData;}
getAccountPrefixCredit(codes,dateRange,offset,companyId,includeUnposted){const data=this._fetchAccountData(codes,dateRange,offset,companyId,includeUnposted);return data.credit;}
getAccountPrefixDebit(codes,dateRange,offset,companyId,includeUnposted){const data=this._fetchAccountData(codes,dateRange,offset,companyId,includeUnposted);return data.debit;}
getFiscalStartDate(date,companyId){return this._fetchCompanyData(date,companyId).start;}
getFiscalEndDate(date,companyId){return this._fetchCompanyData(date,companyId).end;}
getAccountGroupCodes(accountType){return this.serverData.batch.get("account.account","get_account_group",accountType);}
_fetchAccountData(codes,dateRange,offset,companyId,includeUnposted){dateRange=deepCopy(dateRange);dateRange.year+=offset;if(dateRange.year<1900){throw new EvaluationError(_t("%s is not a valid year.",dateRange.year));}
return this.serverData.batch.get("account.account","spreadsheet_fetch_debit_credit",camelToSnakeObject({dateRange,codes,companyId,includeUnposted}));}
_fetchCompanyData(date,companyId){const result=this.serverData.batch.get("res.company","get_fiscal_dates",{date:toServerDateString(date),company_id:companyId,});if(result===false){throw new EvaluationError(_t("The company fiscal year could not be found."));}
return result;}
getAccountResidual(codes,dateRange,offset,companyId,includeUnposted){dateRange=deepCopy(dateRange);dateRange.year+=offset;if(dateRange.year<1900){throw new EvaluationError(_t("%s is not a valid year.",dateRange.year));}
const result=this.serverData.batch.get("account.account","spreadsheet_fetch_residual_amount",camelToSnakeObject({codes,dateRange,companyId,includeUnposted}));if(result===false){throw new EvaluationError(_t("The residual amount for given accounts could not be computed."));}
return result.amount_residual;}
getAccountPartnerData(codes,dateRange,offset,companyId,includeUnposted,partnerIds){dateRange=deepCopy(dateRange);dateRange.year+=offset;if(dateRange.year<1900){throw new EvaluationError(_t("%s is not a valid year.",dateRange.year));}
const result=this.serverData.batch.get("account.account","spreadsheet_fetch_partner_balance",camelToSnakeObject({dateRange,codes,companyId,includeUnposted,partnerIds}));if(result===false){throw new EvaluationError(_t("The balance for given partners could not be computed."));}
return result.balance;}}
return __exports;});;

/* /spreadsheet_account/static/src/utils.js */
odoo.define('@spreadsheet_account/utils',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{helpers}=require("@odoo/o-spreadsheet");const{getFunctionsFromTokens}=helpers;__exports.getNumberOfAccountFormulas=getNumberOfAccountFormulas;function getNumberOfAccountFormulas(tokens){return getFunctionsFromTokens(tokens,["ODOO.BALANCE","ODOO.CREDIT","ODOO.DEBIT","ODOO.RESIDUAL","ODOO.PARTNER.BALANCE"]).length;}
__exports.getFirstAccountFunction=getFirstAccountFunction;function getFirstAccountFunction(tokens){return getFunctionsFromTokens(tokens,["ODOO.BALANCE","ODOO.CREDIT","ODOO.DEBIT","ODOO.RESIDUAL","ODOO.PARTNER.BALANCE"])[0];}
return __exports;});;

/* /spreadsheet/static/src/actions/helpers.js */
odoo.define('@spreadsheet/actions/helpers',[],function(require){'use strict';let __exports={};__exports.navigateTo=navigateTo;async function navigateTo(env,actionXmlId,actionDescription,options){const actionService=env.services.action;let navigateActionDescription;const{views,view_mode,domain,context,name,res_model,res_id}=actionDescription;try{navigateActionDescription=await actionService.loadAction(actionXmlId,context);const filteredViews=views.map(([v,viewType])=>navigateActionDescription.views.find(([,type])=>viewType===type)||[v,viewType,]);navigateActionDescription={...navigateActionDescription,context,domain,name,res_model,res_id,view_mode,target:"current",views:filteredViews,};}catch{navigateActionDescription={type:"ir.actions.act_window",name,res_model,res_id,views,target:"current",domain,context,view_mode,};}finally{await actionService.doAction(JSON.parse(JSON.stringify(navigateActionDescription)),options);}}
return __exports;});;

/* /spreadsheet/static/src/actions/spreadsheet_component.js */
odoo.define('@spreadsheet/actions/spreadsheet_component',['@spreadsheet/hooks','@odoo/o-spreadsheet','@odoo/owl'],function(require){'use strict';let __exports={};const{useSpreadsheetNotificationStore}=require("@spreadsheet/hooks");const{Spreadsheet,Model}=require("@odoo/o-spreadsheet");const{Component}=require("@odoo/owl");const SpreadsheetComponent=__exports.SpreadsheetComponent=class SpreadsheetComponent extends Component{static template="spreadsheet.SpreadsheetComponent";static components={Spreadsheet};static props={model:Model,};get model(){return this.props.model;}
setup(){useSpreadsheetNotificationStore();}}
return __exports;});;

/* /spreadsheet/static/src/actions/spreadsheet_download_action.js */
odoo.define('@spreadsheet/actions/spreadsheet_download_action',['@web/core/network/download','@web/core/registry','@spreadsheet/helpers/model'],function(require){'use strict';let __exports={};const{download}=require("@web/core/network/download");const{registry}=require("@web/core/registry");const{createSpreadsheetModel,waitForDataLoaded}=require("@spreadsheet/helpers/model");async function downloadSpreadsheet(env,action){let{name,data,stateUpdateMessages,xlsxData}=action.params;if(!xlsxData){const model=await createSpreadsheetModel({env,data,revisions:stateUpdateMessages});await waitForDataLoaded(model);xlsxData=model.exportXLSX();}
await download({url:"/spreadsheet/xlsx",data:{zip_name:`${name}.xlsx`,files:new Blob([JSON.stringify(xlsxData.files)],{type:"application/json"}),},});}
registry.category("actions").add("action_download_spreadsheet",downloadSpreadsheet,{force:true});return __exports;});;

/* /spreadsheet/static/src/chart/data_source/chart_data_source.js */
odoo.define('@spreadsheet/chart/data_source/chart_data_source',['@spreadsheet/data_sources/odoo_views_data_source','@web/core/l10n/translation','@web/views/graph/graph_model'],function(require){'use strict';let __exports={};const{OdooViewsDataSource}=require("@spreadsheet/data_sources/odoo_views_data_source");const{_t}=require("@web/core/l10n/translation");const{GraphModel:ChartModel}=require("@web/views/graph/graph_model");const ChartDataSource=__exports.ChartDataSource=class ChartDataSource extends OdooViewsDataSource{constructor(services,params){super(services,params);}
async _load(){await super._load();const metaData={fieldAttrs:{},...this._metaData,};this._model=new ChartModel({_t,},metaData,{orm:this._orm,});await this._model.load(this._searchParams);}
getData(){if(!this.isReady()){this.load();return{datasets:[],labels:[]};}
if(!this._isValid){return{datasets:[],labels:[]};}
return this._model.data;}
changeChartType(newMode){this._metaData.mode=newMode;this._model?.updateMetaData({mode:newMode});}}
__exports.chartTypeToDataSourceMode=chartTypeToDataSourceMode;function chartTypeToDataSourceMode(chartType){switch(chartType){case"odoo_bar":case"odoo_line":case"odoo_pie":return chartType.replace("odoo_","");default:return"bar";}}
return __exports;});;

/* /spreadsheet/static/src/chart/index.js */
odoo.define('@spreadsheet/chart',['@odoo/o-spreadsheet','@spreadsheet/chart/plugins/odoo_chart_core_plugin','@spreadsheet/chart/plugins/chart_odoo_menu_plugin','@spreadsheet/chart/plugins/odoo_chart_ui_plugin','@web/core/l10n/translation','@spreadsheet/chart/odoo_menu/odoo_menu_chartjs_plugin'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{OdooChartCorePlugin}=require("@spreadsheet/chart/plugins/odoo_chart_core_plugin");const{ChartOdooMenuPlugin}=require("@spreadsheet/chart/plugins/chart_odoo_menu_plugin");const{OdooChartUIPlugin}=require("@spreadsheet/chart/plugins/odoo_chart_ui_plugin");const{_t}=require("@web/core/l10n/translation");const{chartOdooMenuPlugin}=require("@spreadsheet/chart/odoo_menu/odoo_menu_chartjs_plugin");const{chartComponentRegistry,chartSubtypeRegistry,chartJsExtensionRegistry}=spreadsheet.registries;const{ChartJsComponent}=spreadsheet.components;chartComponentRegistry.add("odoo_bar",ChartJsComponent);chartComponentRegistry.add("odoo_line",ChartJsComponent);chartComponentRegistry.add("odoo_pie",ChartJsComponent);chartComponentRegistry.add("odoo_radar",ChartJsComponent);chartComponentRegistry.add("odoo_waterfall",ChartJsComponent);chartComponentRegistry.add("odoo_pyramid",ChartJsComponent);chartComponentRegistry.add("odoo_scatter",ChartJsComponent);chartComponentRegistry.add("odoo_combo",ChartJsComponent);chartComponentRegistry.add("odoo_geo",ChartJsComponent);chartComponentRegistry.add("odoo_funnel",ChartJsComponent);chartSubtypeRegistry.add("odoo_line",{matcher:(definition)=>definition.type==="odoo_line"&&!definition.stacked&&!definition.fillArea,subtypeDefinition:{stacked:false,fillArea:false},displayName:_t("Line"),chartSubtype:"odoo_line",chartType:"odoo_line",category:"line",preview:"o-spreadsheet-ChartPreview.LINE_CHART",});chartSubtypeRegistry.add("odoo_stacked_line",{matcher:(definition)=>definition.type==="odoo_line"&&definition.stacked&&!definition.fillArea,subtypeDefinition:{stacked:true,fillArea:false},displayName:_t("Stacked Line"),chartSubtype:"odoo_stacked_line",chartType:"odoo_line",category:"line",preview:"o-spreadsheet-ChartPreview.STACKED_LINE_CHART",});chartSubtypeRegistry.add("odoo_area",{matcher:(definition)=>definition.type==="odoo_line"&&!definition.stacked&&definition.fillArea,subtypeDefinition:{stacked:false,fillArea:true},displayName:_t("Area"),chartSubtype:"odoo_area",chartType:"odoo_line",category:"area",preview:"o-spreadsheet-ChartPreview.AREA_CHART",});chartSubtypeRegistry.add("odoo_stacked_area",{matcher:(definition)=>definition.type==="odoo_line"&&definition.stacked&&definition.fillArea,subtypeDefinition:{stacked:true,fillArea:true},displayName:_t("Stacked Area"),chartSubtype:"odoo_stacked_area",chartType:"odoo_line",category:"area",preview:"o-spreadsheet-ChartPreview.STACKED_AREA_CHART",});chartSubtypeRegistry.add("odoo_bar",{matcher:(definition)=>definition.type==="odoo_bar"&&!definition.stacked&&!definition.horizontal,subtypeDefinition:{stacked:false,horizontal:false},displayName:_t("Column"),chartSubtype:"odoo_bar",chartType:"odoo_bar",category:"column",preview:"o-spreadsheet-ChartPreview.COLUMN_CHART",});chartSubtypeRegistry.add("odoo_stacked_bar",{matcher:(definition)=>definition.type==="odoo_bar"&&definition.stacked&&!definition.horizontal,subtypeDefinition:{stacked:true,horizontal:false},displayName:_t("Stacked Column"),chartSubtype:"odoo_stacked_bar",chartType:"odoo_bar",category:"column",preview:"o-spreadsheet-ChartPreview.STACKED_COLUMN_CHART",});chartSubtypeRegistry.add("odoo_horizontal_bar",{matcher:(definition)=>definition.type==="odoo_bar"&&!definition.stacked&&definition.horizontal,subtypeDefinition:{stacked:false,horizontal:true},displayName:_t("Bar"),chartSubtype:"odoo_horizontal_bar",chartType:"odoo_bar",category:"bar",preview:"o-spreadsheet-ChartPreview.BAR_CHART",});chartSubtypeRegistry.add("odoo_horizontal_stacked_bar",{matcher:(definition)=>definition.type==="odoo_bar"&&definition.stacked&&definition.horizontal,subtypeDefinition:{stacked:true,horizontal:true},displayName:_t("Stacked Bar"),chartSubtype:"odoo_horizontal_stacked_bar",chartType:"odoo_bar",category:"bar",preview:"o-spreadsheet-ChartPreview.STACKED_BAR_CHART",});chartSubtypeRegistry.add("odoo_combo",{displayName:_t("Combo"),chartSubtype:"odoo_combo",chartType:"odoo_combo",category:"line",preview:"o-spreadsheet-ChartPreview.COMBO_CHART",});chartSubtypeRegistry.add("odoo_pie",{displayName:_t("Pie"),matcher:(definition)=>definition.type==="odoo_pie"&&!definition.isDoughnut,subtypeDefinition:{isDoughnut:false},chartSubtype:"odoo_pie",chartType:"odoo_pie",category:"pie",preview:"o-spreadsheet-ChartPreview.PIE_CHART",});chartSubtypeRegistry.add("odoo_doughnut",{matcher:(definition)=>definition.type==="odoo_pie"&&definition.isDoughnut,subtypeDefinition:{isDoughnut:true},displayName:_t("Doughnut"),chartSubtype:"odoo_doughnut",chartType:"odoo_pie",category:"pie",preview:"o-spreadsheet-ChartPreview.DOUGHNUT_CHART",});chartSubtypeRegistry.add("odoo_scatter",{displayName:_t("Scatter"),chartType:"odoo_scatter",chartSubtype:"odoo_scatter",category:"misc",preview:"o-spreadsheet-ChartPreview.SCATTER_CHART",});chartSubtypeRegistry.add("odoo_waterfall",{displayName:_t("Waterfall"),chartSubtype:"odoo_waterfall",chartType:"odoo_waterfall",category:"misc",preview:"o-spreadsheet-ChartPreview.WATERFALL_CHART",});chartSubtypeRegistry.add("odoo_pyramid",{displayName:_t("Population Pyramid"),chartSubtype:"odoo_pyramid",chartType:"odoo_pyramid",category:"misc",preview:"o-spreadsheet-ChartPreview.POPULATION_PYRAMID_CHART",});chartSubtypeRegistry.add("odoo_radar",{matcher:(definition)=>definition.type==="odoo_radar"&&!definition.fillArea,displayName:_t("Radar"),chartSubtype:"odoo_radar",chartType:"odoo_radar",subtypeDefinition:{fillArea:false},category:"misc",preview:"o-spreadsheet-ChartPreview.RADAR_CHART",});chartSubtypeRegistry.add("odoo_filled_radar",{matcher:(definition)=>definition.type==="odoo_radar"&&!!definition.fillArea,displayName:_t("Filled Radar"),chartType:"odoo_radar",chartSubtype:"odoo_filled_radar",subtypeDefinition:{fillArea:true},category:"misc",preview:"o-spreadsheet-ChartPreview.FILLED_RADAR_CHART",});chartSubtypeRegistry.add("odoo_geo",{displayName:_t("Geo chart"),chartType:"odoo_geo",chartSubtype:"odoo_geo",category:"misc",preview:"o-spreadsheet-ChartPreview.GEO_CHART",});chartSubtypeRegistry.add("odoo_funnel",{matcher:(definition)=>definition.type==="odoo_funnel",displayName:_t("Funnel"),chartType:"odoo_funnel",chartSubtype:"odoo_funnel",subtypeDefinition:{cumulative:true},category:"misc",preview:"o-spreadsheet-ChartPreview.FUNNEL_CHART",});chartJsExtensionRegistry.add("chartOdooMenuPlugin",{register:(Chart)=>Chart.register(chartOdooMenuPlugin),unregister:(Chart)=>Chart.unregister(chartOdooMenuPlugin),});Object.assign(__exports,{OdooChartCorePlugin,ChartOdooMenuPlugin,OdooChartUIPlugin});return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_bar_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_bar_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{registries,chartHelpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{onOdooChartItemClick,onOdooChartItemHover}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const{chartRegistry}=registries;const{getBarChartDatasets,CHART_COMMON_OPTIONS,getChartLayout,getBarChartScales,getBarChartTooltip,getChartTitle,getBarChartLegend,getChartShowValues,getTrendDatasetForBarChart,getTopPaddingForDashboard,}=chartHelpers;const OdooBarChart=__exports.OdooBarChart=class OdooBarChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.verticalAxisPosition=definition.verticalAxisPosition;this.stacked=definition.stacked;this.axesDesign=definition.axesDesign;this.horizontal=definition.horizontal;}
getDefinition(){return{...super.getDefinition(),verticalAxisPosition:this.verticalAxisPosition,stacked:this.stacked,axesDesign:this.axesDesign,trend:this.trend,horizontal:this.horizontal,};}}
chartRegistry.add("odoo_bar",{match:(type)=>type==="odoo_bar",createChart:(definition,sheetId,getters)=>new OdooBarChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooBarChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooBarChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooBarChart.getDefinitionFromContextCreation(),name:_t("Bar"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const definition=chart.getDefinition();const trendDataSetsValues=datasets.map((dataset,index)=>{const trend=definition.dataSets[index]?.trend;return!trend?.display||chart.horizontal?undefined:getTrendDatasetForBarChart(trend,dataset.data);});const chartData={labels,dataSetsValues:datasets.map((ds)=>({data:ds.data,label:ds.label})),locale:getters.getLocale(),trendDataSetsValues,topPadding:getTopPaddingForDashboard(definition,getters),};const config={type:"bar",data:{labels:chartData.labels,datasets:getBarChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,indexAxis:chart.horizontal?"y":"x",layout:getChartLayout(definition,chartData),scales:getBarChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getBarChartLegend(definition,chartData),tooltip:getBarChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},onHover:onOdooChartItemHover(),onClick:onOdooChartItemClick(getters,chart),},};return{background,chartJsConfig:config};}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_chart',['@odoo/o-spreadsheet','@spreadsheet/chart/data_source/chart_data_source'],function(require){'use strict';let __exports={};const{AbstractChart,CommandResult}=require("@odoo/o-spreadsheet");const{ChartDataSource,chartTypeToDataSourceMode}=require("@spreadsheet/chart/data_source/chart_data_source");const OdooChart=__exports.OdooChart=class OdooChart extends AbstractChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.type=definition.type;this.metaData={...definition.metaData,mode:chartTypeToDataSourceMode(this.type),cumulated:definition.cumulative,cumulatedStart:definition.cumulatedStart,};this.searchParams=definition.searchParams;this.legendPosition=definition.legendPosition;this.background=definition.background;this.dataSource=undefined;this.actionXmlId=definition.actionXmlId;this.showValues=definition.showValues;this._dataSets=definition.dataSets||[];}
static transformDefinition(definition){return definition;}
static validateChartDefinition(validator,definition){return CommandResult.Success;}
static getDefinitionFromContextCreation(){throw new Error("It's not possible to convert an Odoo chart to a native chart");}
getDefinitionForDataSource(){return{metaData:this.metaData,searchParams:this.searchParams,};}
getDefinition(){return{title:this.title,background:this.background,legendPosition:this.legendPosition,metaData:this.metaData,searchParams:this.searchParams,type:this.type,actionXmlId:this.actionXmlId,showValues:this.showValues,dataSets:this.dataSets,datasetsConfig:this.datasetsConfig,};}
getDefinitionForExcel(){return undefined;}
updateRanges(){return this;}
duplicateInDuplicatedSheet(){return this;}
copyInSheetId(){return this;}
getContextCreation(){return{};}
getSheetIdsUsedInChartRanges(){return[];}
setDataSource(dataSource){if(dataSource instanceof ChartDataSource){this.dataSource=dataSource;}else{throw new Error("Only ChartDataSources can be added.");}}
get dataSets(){if(!this.dataSource){return this.datasetsConfig||[];}
const data=this.dataSource.getData();return data.datasets.map((ds,index)=>this._dataSets?.[index]||{});}}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_chart_helpers.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_chart_helpers',['@spreadsheet/actions/helpers','@web/core/domain','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{navigateTo}=require("@spreadsheet/actions/helpers");const{Domain}=require("@web/core/domain");const{_t}=require("@web/core/l10n/translation");__exports.onOdooChartItemClick=onOdooChartItemClick;function onOdooChartItemClick(getters,chart){return navigateInOdooMenuOnClick(getters,chart,(chartJsItem,chartData)=>{const{datasets,labels}=chartData;const{datasetIndex,index}=chartJsItem;const dataset=datasets[datasetIndex];let name=labels[index];if(dataset.label){name+=` / ${dataset.label}`;}
return{name,domain:dataset.domains[index]};});}
__exports.onWaterfallOdooChartItemClick=onWaterfallOdooChartItemClick;function onWaterfallOdooChartItemClick(getters,chart){return navigateInOdooMenuOnClick(getters,chart,(chartJsItem,chartData)=>{const showSubtotals=chart.showSubTotals;const{datasets,labels}=chartData;let datasetIndex=0;let index=chartJsItem.index;for(const dataset of datasets){const length=dataset.data.length+(showSubtotals?1:0);if(index<length){break;}else{datasetIndex++;index-=length;}}
const dataset=datasets[datasetIndex];let name=labels[index];if(dataset.label){name+=` / ${dataset.label}`;}
let domain=dataset.domains[index];if(!domain){const datasetItemDomain=dataset.domains[0];const firstGroupBy=chart.dataSource._metaData.groupBy[0];domain=Domain.removeDomainLeaves(datasetItemDomain,[firstGroupBy]).toList();}
return{name,domain};});}
__exports.onGeoOdooChartItemClick=onGeoOdooChartItemClick;function onGeoOdooChartItemClick(getters,chart){return navigateInOdooMenuOnClick(getters,chart,(chartJsItem)=>{const label=chartJsItem.element.feature.properties.name;const{datasets,labels}=chart.dataSource.getData();const index=labels.indexOf(label);if(index===-1){return{};}
const dataset=datasets[0];let name=labels[index];if(dataset.label){name+=` / ${dataset.label}`;}
return{name,domain:dataset.domains[index]};});}
function navigateInOdooMenuOnClick(getters,chart,getDomainFromChartItem){return async(event,items)=>{const env=getters.getOdooEnv();const{datasets,labels}=chart.dataSource.getData();if(!items.length||!env||!datasets[items[0].datasetIndex]){return;}
if(event.type==="click"||isChartJSMiddleClick(event)){event.native.preventDefault();}else{return;}
const{name,domain}=getDomainFromChartItem(items[0],{datasets,labels});if(!domain||!name){return;}
await navigateTo(env,chart.actionXmlId,{name,type:"ir.actions.act_window",res_model:chart.metaData.resModel,views:[[false,"list"],[false,"form"],],domain,},{viewType:"list",newWindow:isChartJSMiddleClick(event)});};}
__exports.onOdooChartItemHover=onOdooChartItemHover;function onOdooChartItemHover(){return(event,items)=>{if(items.length>0){event.native.target.style.cursor="pointer";}else{event.native.target.style.cursor="";}};}
__exports.onGeoOdooChartItemHover=onGeoOdooChartItemHover;function onGeoOdooChartItemHover(){return(event,items)=>{if(!items.length){event.native.target.style.cursor="";return;}
const item=items[0];const data=event.chart.data.datasets?.[item.datasetIndex]?.data?.[item.index];if(data?.value!==undefined){event.native.target.style.cursor="pointer";}else{event.native.target.style.cursor="";}};}
__exports.navigateToOdooMenu=navigateToOdooMenu;async function navigateToOdooMenu(menu,actionService,notificationService,newWindow){if(!menu){throw new Error(`Cannot find any menu associated with the chart`);}
if(!menu.actionID){notificationService.add(_t("The menu linked to this chart doesn't have an corresponding action. Please link the chart to another menu."),{type:"danger"});return;}
await actionService.doAction(menu.actionID,{newWindow});}
__exports.isChartJSMiddleClick=isChartJSMiddleClick;function isChartJSMiddleClick(event){return((event.type==="click"&&event.native.button===0&&(event.native.ctrlKey||event.native.metaKey))||(event.type==="mouseup"&&event.native.button===1));}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_combo_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_combo_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{registries,chartHelpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{onOdooChartItemHover,onOdooChartItemClick}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const{chartRegistry}=registries;const{getComboChartDatasets,CHART_COMMON_OPTIONS,getChartLayout,getBarChartScales,getBarChartTooltip,getChartTitle,getComboChartLegend,getChartShowValues,getTrendDatasetForBarChart,}=chartHelpers;const OdooComboChart=__exports.OdooComboChart=class OdooComboChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.axesDesign=definition.axesDesign;this.hideDataMarkers=definition.hideDataMarkers;}
getDefinition(){return{...super.getDefinition(),axesDesign:this.axesDesign,hideDataMarkers:this.hideDataMarkers,};}
get dataSets(){const dataSets=super.dataSets;if(dataSets.every((ds)=>!ds.type)){return dataSets.map((ds,index)=>({...ds,type:index===0?"bar":"line",}));}
return dataSets;}}
chartRegistry.add("odoo_combo",{match:(type)=>type==="odoo_combo",createChart:(definition,sheetId,getters)=>new OdooComboChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooComboChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooComboChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooComboChart.getDefinitionFromContextCreation(),name:_t("Combo"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const definition=chart.getDefinition();const trendDataSetsValues=datasets.map((dataset,index)=>{const trend=definition.dataSets[index]?.trend;return!trend?.display||chart.horizontal?undefined:getTrendDatasetForBarChart(trend,dataset.data);});const chartData={labels,dataSetsValues:datasets.map((ds)=>({data:ds.data,label:ds.label})),locale:getters.getLocale(),trendDataSetsValues,};const config={type:"bar",data:{labels:chartData.labels,datasets:getComboChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getBarChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getComboChartLegend(definition,chartData),tooltip:getBarChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},onHover:onOdooChartItemHover(),onClick:onOdooChartItemClick(getters,chart),},};return{background,chartJsConfig:config};}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_funnel_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_funnel_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{registries,chartHelpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{onOdooChartItemHover,onOdooChartItemClick}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const{chartRegistry}=registries;const{getFunnelChartDatasets,CHART_COMMON_OPTIONS,getChartLayout,getChartTitle,getChartShowValues,getFunnelChartScales,getFunnelChartTooltip,makeDatasetsCumulative,}=chartHelpers;const OdooFunnelChart=__exports.OdooFunnelChart=class OdooFunnelChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.cumulative=definition.cumulative;this.funnelColors=definition.funnelColors;}
getDefinition(){return{...super.getDefinition(),cumulative:this.cumulative,funnelColors:this.funnelColors,};}}
chartRegistry.add("odoo_funnel",{match:(type)=>type==="odoo_funnel",createChart:(definition,sheetId,getters)=>new OdooFunnelChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooFunnelChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooFunnelChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooFunnelChart.getDefinitionFromContextCreation(),name:_t("Funnel"),});function createOdooChartRuntime(chart,getters){const definition=chart.getDefinition();const background=chart.background||"#FFFFFF";let{datasets,labels}=chart.dataSource.getData();if(definition.cumulative){datasets=makeDatasetsCumulative(datasets,"desc");}
const locale=getters.getLocale();const chartData={labels,dataSetsValues:datasets.map((ds)=>({data:ds.data,label:ds.label})),locale,};const config={type:"funnel",data:{labels:chartData.labels,datasets:getFunnelChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,indexAxis:"y",layout:getChartLayout(definition,chartData),scales:getFunnelChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:{display:false},tooltip:getFunnelChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},onHover:onOdooChartItemHover(),onClick:onOdooChartItemClick(getters,chart),},};return{background,chartJsConfig:config};}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_geo_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_geo_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{registries,chartHelpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{onGeoOdooChartItemHover,onGeoOdooChartItemClick}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const{chartRegistry}=registries;const{getGeoChartDatasets,CHART_COMMON_OPTIONS,getChartLayout,getChartTitle,getGeoChartScales,getGeoChartTooltip,}=chartHelpers;const OdooGeoChart=__exports.OdooGeoChart=class OdooGeoChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.colorScale=definition.colorScale;this.missingValueColor=definition.missingValueColor;this.region=definition.region;}
getDefinition(){return{...super.getDefinition(),colorScale:this.colorScale,missingValueColor:this.missingValueColor,region:this.region,};}}
chartRegistry.add("odoo_geo",{match:(type)=>type==="odoo_geo",createChart:(definition,sheetId,getters)=>new OdooGeoChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooGeoChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooGeoChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooGeoChart.getDefinitionFromContextCreation(),name:_t("Geo"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const definition=chart.getDefinition();const locale=getters.getLocale();const chartData={labels,dataSetsValues:datasets.map((ds)=>({data:ds.data,label:ds.label})),locale,availableRegions:getters.getGeoChartAvailableRegions(),geoFeatureNameToId:getters.geoFeatureNameToId,getGeoJsonFeatures:getters.getGeoJsonFeatures,};const config={type:"choropleth",data:{datasets:getGeoChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getGeoChartScales(definition,chartData),plugins:{title:getChartTitle(definition),tooltip:getGeoChartTooltip(definition,chartData),legend:{display:false},},onHover:onGeoOdooChartItemHover(),onClick:onGeoOdooChartItemClick(getters,chart),},};return{background,chartJsConfig:config};}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_line_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_line_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{registries,chartHelpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{onOdooChartItemClick,onOdooChartItemHover}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const{chartRegistry}=registries;const{getLineChartDatasets,CHART_COMMON_OPTIONS,getChartLayout,getLineChartScales,getLineChartTooltip,getChartTitle,getLineChartLegend,getChartShowValues,getTrendDatasetForLineChart,getTopPaddingForDashboard,}=chartHelpers;const OdooLineChart=__exports.OdooLineChart=class OdooLineChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.verticalAxisPosition=definition.verticalAxisPosition;this.stacked=definition.stacked;this.cumulative=definition.cumulative;this.cumulatedStart=definition.cumulatedStart;this.axesDesign=definition.axesDesign;this.fillArea=definition.fillArea;this.cumulatedStart=definition.cumulatedStart;this.hideDataMarkers=definition.hideDataMarkers;}
getDefinition(){return{...super.getDefinition(),verticalAxisPosition:this.verticalAxisPosition,stacked:this.stacked,cumulative:this.cumulative,cumulatedStart:this.cumulatedStart,axesDesign:this.axesDesign,fillArea:this.fillArea,hideDataMarkers:this.hideDataMarkers,};}}
chartRegistry.add("odoo_line",{match:(type)=>type==="odoo_line",createChart:(definition,sheetId,getters)=>new OdooLineChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooLineChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooLineChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooLineChart.getDefinitionFromContextCreation(),name:_t("Line"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";let{datasets,labels}=chart.dataSource.getData();datasets=computeCumulatedDatasets(chart,datasets);const definition=chart.getDefinition();const locale=getters.getLocale();const trendDataSetsValues=datasets.map((dataset,index)=>{const trend=definition.dataSets[index]?.trend;return!trend?.display?undefined:getTrendDatasetForLineChart(trend,dataset.data,labels,"category",locale);});const chartData={labels,dataSetsValues:datasets.map((ds)=>({data:ds.data,label:ds.label})),locale,trendDataSetsValues,topPadding:getTopPaddingForDashboard(definition,getters),axisType:definition.axisType||"category",};const chartJsDatasets=getLineChartDatasets(definition,chartData);const config={type:"line",data:{labels:chartData.labels,datasets:chartJsDatasets,},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getLineChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getLineChartLegend(definition,chartData),tooltip:getLineChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},onHover:onOdooChartItemHover(),onClick:onOdooChartItemClick(getters,chart),},};return{background,chartJsConfig:config};}
function computeCumulatedDatasets(chart,datasets){const cumulatedDatasets=[];for(const dataset of datasets){if(chart.cumulative){let accumulator=dataset.cumulatedStart||0;const data=dataset.data.map((value)=>{accumulator+=value;return accumulator;});cumulatedDatasets.push({...dataset,data});}else{cumulatedDatasets.push(dataset);}}
return cumulatedDatasets;}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_pie_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_pie_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{registries,chartHelpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{onOdooChartItemHover,onOdooChartItemClick}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const{chartRegistry}=registries;const{getPieChartDatasets,CHART_COMMON_OPTIONS,getChartLayout,getPieChartTooltip,getChartTitle,getPieChartLegend,getChartShowValues,getTopPaddingForDashboard,}=chartHelpers;const OdooPieChart=__exports.OdooPieChart=class OdooPieChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.isDoughnut=definition.isDoughnut;}
getDefinition(){return{...super.getDefinition(),isDoughnut:this.isDoughnut,};}}
chartRegistry.add("odoo_pie",{match:(type)=>type==="odoo_pie",createChart:(definition,sheetId,getters)=>new OdooPieChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooPieChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooPieChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooPieChart.getDefinitionFromContextCreation(),name:_t("Pie"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const definition=chart.getDefinition();definition.dataSets=datasets.map(()=>({trend:definition.trend}));const chartData={labels,dataSetsValues:datasets.map((ds)=>({data:ds.data,label:ds.label})),locale:getters.getLocale(),topPadding:getTopPaddingForDashboard(definition,getters),};const config={type:definition.isDoughnut?"doughnut":"pie",data:{labels:chartData.labels,datasets:getPieChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),plugins:{title:getChartTitle(definition),legend:getPieChartLegend(definition,chartData),tooltip:getPieChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},onHover:onOdooChartItemHover(),onClick:onOdooChartItemClick(getters,chart),},};return{background,chartJsConfig:config};}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_pyramid_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_pyramid_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{registries,chartHelpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{onOdooChartItemHover,onOdooChartItemClick}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const{chartRegistry}=registries;const{CHART_COMMON_OPTIONS,getBarChartDatasets,getChartLayout,getChartTitle,getPyramidChartShowValues,getPyramidChartScales,getBarChartLegend,getPyramidChartTooltip,}=chartHelpers;const OdooPyramidChart=__exports.OdooPyramidChart=class OdooPyramidChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.axesDesign=definition.axesDesign;}
getDefinition(){return{...super.getDefinition(),axesDesign:this.axesDesign,horizontal:true,stacked:true,};}}
chartRegistry.add("odoo_pyramid",{match:(type)=>type==="odoo_pyramid",createChart:(definition,sheetId,getters)=>new OdooPyramidChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooPyramidChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooPyramidChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooPyramidChart.getDefinitionFromContextCreation(),name:_t("Pyramid"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const pyramidDatasets=[];if(datasets[0]){const pyramidData=datasets[0].data.map((value)=>(value>0?value:0));pyramidDatasets.push({...datasets[0],data:pyramidData});}
if(datasets[1]){const pyramidData=datasets[1].data.map((value)=>(value>0?-value:0));pyramidDatasets.push({...datasets[1],data:pyramidData});}
const definition=chart.getDefinition();const locale=getters.getLocale();const chartData={labels,dataSetsValues:pyramidDatasets.map((ds)=>({data:ds.data,label:ds.label})),locale,};const config={type:"bar",data:{labels:chartData.labels,datasets:getBarChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,indexAxis:"y",layout:getChartLayout(definition,chartData),scales:getPyramidChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getBarChartLegend(definition,chartData),tooltip:getPyramidChartTooltip(definition,chartData),chartShowValuesPlugin:getPyramidChartShowValues(definition,chartData),},onHover:onOdooChartItemHover(),onClick:onOdooChartItemClick(getters,chart),},};return{background,chartJsConfig:config};}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_radar_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_radar_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{registries,chartHelpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{onOdooChartItemHover,onOdooChartItemClick}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const{chartRegistry}=registries;const{getRadarChartDatasets,CHART_COMMON_OPTIONS,getChartLayout,getChartTitle,getChartShowValues,getRadarChartScales,getRadarChartLegend,getRadarChartTooltip,}=chartHelpers;const OdooRadarChart=__exports.OdooRadarChart=class OdooRadarChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.fillArea=definition.fillArea;this.hideDataMarkers=definition.hideDataMarkers;}
getDefinition(){return{...super.getDefinition(),fillArea:this.fillArea,hideDataMarkers:this.hideDataMarkers,};}}
chartRegistry.add("odoo_radar",{match:(type)=>type==="odoo_radar",createChart:(definition,sheetId,getters)=>new OdooRadarChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooRadarChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooRadarChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooRadarChart.getDefinitionFromContextCreation(),name:_t("Radar"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const definition=chart.getDefinition();const locale=getters.getLocale();const chartData={labels,dataSetsValues:datasets.map((ds)=>({data:ds.data,label:ds.label})),locale,};const config={type:"radar",data:{labels:chartData.labels,datasets:getRadarChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getRadarChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getRadarChartLegend(definition,chartData),tooltip:getRadarChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},onHover:onOdooChartItemHover(),onClick:onOdooChartItemClick(getters,chart),},};return{background,chartJsConfig:config};}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_scatter_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_scatter_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{registries,chartHelpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{onOdooChartItemHover,onOdooChartItemClick}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const{chartRegistry}=registries;const{getScatterChartDatasets,CHART_COMMON_OPTIONS,getChartLayout,getScatterChartScales,getLineChartTooltip,getChartTitle,getScatterChartLegend,getChartShowValues,getTrendDatasetForLineChart,}=chartHelpers;const OdooScatterChart=__exports.OdooScatterChart=class OdooScatterChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.verticalAxisPosition=definition.verticalAxisPosition;this.axesDesign=definition.axesDesign;}
getDefinition(){return{...super.getDefinition(),verticalAxisPosition:this.verticalAxisPosition,axesDesign:this.axesDesign,};}}
chartRegistry.add("odoo_scatter",{match:(type)=>type==="odoo_scatter",createChart:(definition,sheetId,getters)=>new OdooScatterChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooScatterChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooScatterChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooScatterChart.getDefinitionFromContextCreation(),name:_t("Scatter"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const definition=chart.getDefinition();const locale=getters.getLocale();const trendDataSetsValues=datasets.map((dataset,index)=>{const trend=definition.dataSets[index]?.trend;return!trend?.display?undefined:getTrendDatasetForLineChart(trend,dataset.data,labels,"category",locale);});const chartData={labels,dataSetsValues:datasets.map((ds)=>({data:ds.data,label:ds.label})),locale,trendDataSetsValues,axisType:definition.axisType||"category",};const config={type:"line",data:{labels:chartData.labels,datasets:getScatterChartDatasets(definition,chartData),},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getScatterChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getScatterChartLegend(definition,chartData),tooltip:getLineChartTooltip(definition,chartData),chartShowValuesPlugin:getChartShowValues(definition,chartData),},onHover:onOdooChartItemHover(),onClick:onOdooChartItemClick(getters,chart),},};return{background,chartJsConfig:config};}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_chart/odoo_waterfall_chart.js */
odoo.define('@spreadsheet/chart/odoo_chart/odoo_waterfall_chart',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/chart/odoo_chart/odoo_chart','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{registries,chartHelpers}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{OdooChart}=require("@spreadsheet/chart/odoo_chart/odoo_chart");const{onOdooChartItemHover,onWaterfallOdooChartItemClick}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const{chartRegistry}=registries;const{CHART_COMMON_OPTIONS,getChartLayout,getChartTitle,getWaterfallChartShowValues,getWaterfallChartScales,getWaterfallChartLegend,getWaterfallChartTooltip,getWaterfallDatasetAndLabels,}=chartHelpers;const OdooWaterfallChart=__exports.OdooWaterfallChart=class OdooWaterfallChart extends OdooChart{constructor(definition,sheetId,getters){super(definition,sheetId,getters);this.verticalAxisPosition=definition.verticalAxisPosition??"left";this.showConnectorLines=definition.showConnectorLines??true;this.positiveValuesColor=definition.positiveValuesColor;this.negativeValuesColor=definition.negativeValuesColor;this.subTotalValuesColor=definition.subTotalValuesColor;this.firstValueAsSubtotal=definition.firstValueAsSubtotal??false;this.showSubTotals=definition.showSubTotals??false;this.axesDesign=definition.axesDesign;}
getDefinition(){return{...super.getDefinition(),verticalAxisPosition:this.verticalAxisPosition,showConnectorLines:this.showConnectorLines,firstValueAsSubtotal:this.firstValueAsSubtotal,showSubTotals:this.showSubTotals,positiveValuesColor:this.positiveValuesColor,negativeValuesColor:this.negativeValuesColor,subTotalValuesColor:this.subTotalValuesColor,axesDesign:this.axesDesign,};}}
chartRegistry.add("odoo_waterfall",{match:(type)=>type==="odoo_waterfall",createChart:(definition,sheetId,getters)=>new OdooWaterfallChart(definition,sheetId,getters),getChartRuntime:createOdooChartRuntime,validateChartDefinition:(validator,definition)=>OdooWaterfallChart.validateChartDefinition(validator,definition),transformDefinition:(definition)=>OdooWaterfallChart.transformDefinition(definition),getChartDefinitionFromContextCreation:()=>OdooWaterfallChart.getDefinitionFromContextCreation(),name:_t("Waterfall"),});function createOdooChartRuntime(chart,getters){const background=chart.background||"#FFFFFF";const{datasets,labels}=chart.dataSource.getData();const definition=chart.getDefinition();const locale=getters.getLocale();const chartData={labels,dataSetsValues:datasets.map((ds)=>({data:ds.data,label:ds.label})),locale,};const chartJSData=getWaterfallDatasetAndLabels(definition,chartData);const config={type:"bar",data:{labels:chartJSData.labels,datasets:chartJSData.datasets},options:{...CHART_COMMON_OPTIONS,layout:getChartLayout(definition,chartData),scales:getWaterfallChartScales(definition,chartData),plugins:{title:getChartTitle(definition),legend:getWaterfallChartLegend(definition,chartData),tooltip:getWaterfallChartTooltip(definition,chartData),chartShowValuesPlugin:getWaterfallChartShowValues(definition,chartData),waterfallLinesPlugin:{showConnectorLines:definition.showConnectorLines},},onHover:onOdooChartItemHover(),onClick:onWaterfallOdooChartItemClick(getters,chart),},};return{background,chartJsConfig:config};}
return __exports;});;

/* /spreadsheet/static/src/chart/odoo_menu/figure_component.js */
odoo.define('@spreadsheet/chart/odoo_menu/figure_component',['@web/core/utils/patch','@odoo/o-spreadsheet','@web/core/utils/hooks','@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const spreadsheet=require("@odoo/o-spreadsheet");const{useService}=require("@web/core/utils/hooks");const{navigateToOdooMenu}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");patch(spreadsheet.components.FigureComponent.prototype,{setup(){super.setup();this.menuService=useService("menu");this.actionService=useService("action");this.notificationService=useService("notification");},async navigateToOdooMenu(newWindow){const menu=this.env.model.getters.getChartOdooMenu(this.props.figureUI.id);await navigateToOdooMenu(menu,this.actionService,this.notificationService,newWindow);},get hasOdooMenu(){return this.env.model.getters.getChartOdooMenu(this.props.figureUI.id)!==undefined;},async onClick(){try{const definition=this.env.model.getters.getChartDefinition(this.props.figureUI.id);if(this.env.isDashboard()&&this.hasOdooMenu&&(definition.type==="scorecard"||definition.type==="gauge")){await this.navigateToOdooMenu();}}catch{}},});return __exports;});;

/* /spreadsheet/static/src/chart/odoo_menu/odoo_menu_chartjs_plugin.js */
odoo.define('@spreadsheet/chart/odoo_menu/odoo_menu_chartjs_plugin',['@spreadsheet/chart/odoo_chart/odoo_chart_helpers'],function(require){'use strict';let __exports={};const{navigateToOdooMenu,isChartJSMiddleClick,}=require("@spreadsheet/chart/odoo_chart/odoo_chart_helpers");const chartOdooMenuPlugin=__exports.chartOdooMenuPlugin={id:"chartOdooMenuPlugin",afterEvent(chart,{event},{env,menu}){const isDashboard=env?.model.getters.isDashboard();const middleClick=isChartJSMiddleClick(event);if((event.type!=="click"&&!middleClick)||!menu||!isDashboard||event.native.defaultPrevented){return;}
navigateToOdooMenu(menu,env.services.action,env.services.notification,middleClick);},};return __exports;});;

/* /spreadsheet/static/src/chart/plugins/chart_odoo_menu_plugin.js */
odoo.define('@spreadsheet/chart/plugins/chart_odoo_menu_plugin',['@spreadsheet/plugins','@odoo/o-spreadsheet','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{OdooCorePlugin}=require("@spreadsheet/plugins");const{coreTypes,helpers}=require("@odoo/o-spreadsheet");const{omit}=require("@web/core/utils/objects");const{deepEquals}=helpers;const ChartOdooMenuPlugin=__exports.ChartOdooMenuPlugin=class ChartOdooMenuPlugin extends OdooCorePlugin{static getters=(["getChartOdooMenu"]);constructor(config){super(config);this.odooMenuReference={};}
handle(cmd){switch(cmd.type){case"LINK_ODOO_MENU_TO_CHART":this.history.update("odooMenuReference",cmd.chartId,cmd.odooMenuId);break;case"DELETE_FIGURE":this.history.update("odooMenuReference",cmd.figureId,undefined);break;case"DUPLICATE_SHEET":this.updateOnDuplicateSheet(cmd.sheetId,cmd.sheetIdTo);break;}}
updateOnDuplicateSheet(sheetIdFrom,sheetIdTo){for(const oldChartId of this.getters.getChartIds(sheetIdFrom)){if(!this.odooMenuReference[oldChartId]){continue;}
const oldChartDefinition=this.getters.getChartDefinition(oldChartId);const oldFigure=this.getters.getFigure(sheetIdFrom,oldChartId);const newChartId=this.getters.getChartIds(sheetIdTo).find((newChartId)=>{const newChartDefinition=this.getters.getChartDefinition(newChartId);const newFigure=this.getters.getFigure(sheetIdTo,newChartId);return(deepEquals(oldChartDefinition,newChartDefinition)&&deepEquals(omit(newFigure,"id"),omit(oldFigure,"id")));});if(newChartId){this.history.update("odooMenuReference",newChartId,this.odooMenuReference[oldChartId]);}}}
getChartOdooMenu(chartId){const menuId=this.odooMenuReference[chartId];return menuId?this.getters.getIrMenu(menuId):undefined;}
import(data){if(data.chartOdooMenusReferences){this.odooMenuReference=data.chartOdooMenusReferences;}}
export(data){data.chartOdooMenusReferences=this.odooMenuReference;}}
coreTypes.add("LINK_ODOO_MENU_TO_CHART");return __exports;});;

/* /spreadsheet/static/src/chart/plugins/odoo_chart_core_plugin.js */
odoo.define('@spreadsheet/chart/plugins/odoo_chart_core_plugin',['@spreadsheet/global_filters/helpers','@spreadsheet/o_spreadsheet/cancelled_reason','@web/core/domain','@spreadsheet/plugins','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{checkFilterFieldMatching}=require("@spreadsheet/global_filters/helpers");const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{Domain}=require("@web/core/domain");const{OdooCorePlugin}=require("@spreadsheet/plugins");const{_t}=require("@web/core/l10n/translation");const CHART_PLACEHOLDER_DISPLAY_NAME={odoo_bar:_t("Odoo Bar Chart"),odoo_line:_t("Odoo Line Chart"),odoo_pie:_t("Odoo Pie Chart"),odoo_radar:_t("Odoo Radar Chart"),};const OdooChartCorePlugin=__exports.OdooChartCorePlugin=class OdooChartCorePlugin extends OdooCorePlugin{static getters=(["getOdooChartIds","getChartFieldMatch","getOdooChartDisplayName","getOdooChartFieldMatching",]);constructor(config){super(config);this.charts={};}
allowDispatch(cmd){switch(cmd.type){case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.chart){return checkFilterFieldMatching(cmd.chart);}}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"CREATE_CHART":{if(cmd.definition.type.startsWith("odoo_")){this._addOdooChart(cmd.figureId);}
break;}
case"DELETE_FIGURE":{const charts={...this.charts};delete charts[cmd.figureId];this.history.update("charts",charts);break;}
case"REMOVE_GLOBAL_FILTER":this._onFilterDeletion(cmd.id);break;case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.chart){this._setOdooChartFieldMatching(cmd.filter.id,cmd.chart);}
break;}}
getOdooChartIds(){return Object.keys(this.charts);}
getChartFieldMatch(chartId){return this.charts[chartId].fieldMatching;}
getOdooChartDisplayName(chartId){const{title,type}=this.getters.getChart(chartId);const name=title.text||CHART_PLACEHOLDER_DISPLAY_NAME[type];return`(#${this.getOdooChartIds().indexOf(chartId) + 1}) ${name}`;}
import(data){for(const sheet of data.sheets){if(sheet.figures){for(const figure of sheet.figures){if(figure.tag==="chart"&&figure.data.type.startsWith("odoo_")){this._addOdooChart(figure.id,figure.data.fieldMatching??{});}}}}}
export(data){for(const sheet of data.sheets){if(sheet.figures){for(const figure of sheet.figures){if(figure.tag==="chart"&&figure.data.type.startsWith("odoo_")){figure.data.fieldMatching=this.getChartFieldMatch(figure.id);figure.data.searchParams.domain=new Domain(figure.data.searchParams.domain).toJson();}}}}}
getOdooChartFieldMatching(chartId,filterId){return this.charts[chartId].fieldMatching[filterId];}
_setOdooChartFieldMatching(filterId,chartFieldMatches){const charts={...this.charts};for(const[chartId,fieldMatch]of Object.entries(chartFieldMatches)){charts[chartId].fieldMatching[filterId]=fieldMatch;}
this.history.update("charts",charts);}
_onFilterDeletion(filterId){const charts={...this.charts};for(const chartId in charts){this.history.update("charts",chartId,"fieldMatching",filterId,undefined);}}
_addOdooChart(chartId,fieldMatching=undefined){const model=this.getters.getChartDefinition(chartId).metaData.resModel;this.history.update("charts",chartId,{figureId:chartId,fieldMatching:fieldMatching||this.getters.getFieldMatchingForModel(model),});}}
return __exports;});;

/* /spreadsheet/static/src/chart/plugins/odoo_chart_ui_plugin.js */
odoo.define('@spreadsheet/chart/plugins/odoo_chart_ui_plugin',['@web/core/domain','@spreadsheet/chart/data_source/chart_data_source','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{ChartDataSource,chartTypeToDataSourceMode}=require("@spreadsheet/chart/data_source/chart_data_source");const{OdooUIPlugin}=require("@spreadsheet/plugins");const OdooChartUIPlugin=__exports.OdooChartUIPlugin=class OdooChartUIPlugin extends OdooUIPlugin{static getters=(["getChartDataSource","getOdooEnv"]);shouldChartUpdateReloadDataSource=false;constructor(config){super(config);this.custom=config.custom;this.charts={};}
beforeHandle(cmd){switch(cmd.type){case"START":for(const chartId of this.getters.getOdooChartIds()){this._setupChartDataSource(chartId);}
this._addDomains();break;case"UPDATE_CHART":{if(cmd.definition.type.startsWith("odoo_")){const dataSource=this.getChartDataSource(cmd.figureId);const chart=this.getters.getChart(cmd.figureId);if(chart.metaData.cumulated!==cmd.definition.cumulative||chart.cumulatedStart!==cmd.definition.cumulatedStart||dataSource.getInitialDomainString()!==new Domain(cmd.definition.searchParams.domain).toString()){this.shouldChartUpdateReloadDataSource=true;}else if(cmd.definition.type!==chart.type){dataSource.changeChartType(chartTypeToDataSourceMode(cmd.definition.type));}}
break;}}}
handle(cmd){switch(cmd.type){case"CREATE_CHART":{if(cmd.definition.type.startsWith("odoo_")){this._setupChartDataSource(cmd.figureId);}
break;}
case"UPDATE_CHART":{if(cmd.definition.type.startsWith("odoo_")){if(this.shouldChartUpdateReloadDataSource){this._resetChartDataSource(cmd.figureId);this.shouldChartUpdateReloadDataSource=false;}
this._setChartDataSource(cmd.figureId);}
break;}
case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":case"REMOVE_GLOBAL_FILTER":case"SET_GLOBAL_FILTER_VALUE":this._addDomains();break;case"UNDO":case"REDO":{if(cmd.commands.find((command)=>["ADD_GLOBAL_FILTER","EDIT_GLOBAL_FILTER","REMOVE_GLOBAL_FILTER",].includes(command.type))){this._addDomains();}
const domainEditionCommands=cmd.commands.filter((cmd)=>cmd.type==="UPDATE_CHART"||cmd.type==="CREATE_CHART");for(const cmd of domainEditionCommands){if(!this.getters.getOdooChartIds().includes(cmd.figureId)){continue;}
const dataSource=this.getChartDataSource(cmd.figureId);if(dataSource.getInitialDomainString()!==new Domain(cmd.definition.searchParams.domain).toString()){this._resetChartDataSource(cmd.figureId);}}
break;}
case"REFRESH_ALL_DATA_SOURCES":this._refreshOdooCharts();break;}}
getChartDataSource(chartId){const dataSourceId=this._getOdooChartDataSourceId(chartId);return this.charts[dataSourceId];}
getOdooEnv(){return this.custom.env;}
_addDomain(chartId){const domainList=[];for(const[filterId,fieldMatch]of Object.entries(this.getters.getChartFieldMatch(chartId))){domainList.push(this.getters.getGlobalFilterDomain(filterId,fieldMatch));}
const domain=Domain.combine(domainList,"AND").toString();this.getChartDataSource(chartId).addDomain(domain);}
_addDomains(){for(const chartId of this.getters.getOdooChartIds()){this._addDomain(chartId);}}
_setupChartDataSource(chartId){const dataSourceId=this._getOdooChartDataSourceId(chartId);if(!(dataSourceId in this.charts)){this._resetChartDataSource(chartId);}
this._setChartDataSource(chartId);}
_resetChartDataSource(chartId){const definition=this.getters.getChart(chartId).getDefinitionForDataSource();const dataSourceId=this._getOdooChartDataSourceId(chartId);this.charts[dataSourceId]=new ChartDataSource(this.custom,definition);}
_setChartDataSource(chartId){const chart=this.getters.getChart(chartId);chart.setDataSource(this.getChartDataSource(chartId));}
_getOdooChartDataSourceId(chartId){return`chart-${chartId}`;}
_refreshOdooChart(chartId){this.getChartDataSource(chartId).load({reload:true});}
_refreshOdooCharts(){for(const chartId of this.getters.getOdooChartIds()){this._refreshOdooChart(chartId);}}}
return __exports;});;

/* /spreadsheet/static/src/chart/plugins/operational_transform.js */
odoo.define('@spreadsheet/chart/plugins/operational_transform',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{inverseCommandRegistry,otRegistry}=spreadsheet.registries;function identity(cmd){return[cmd];}
otRegistry.addTransformation("DELETE_FIGURE",["LINK_ODOO_MENU_TO_CHART"],(toTransform,executed)=>{if(executed.figureId===toTransform.chartId){return undefined;}
return toTransform;});inverseCommandRegistry.add("LINK_ODOO_MENU_TO_CHART",identity);return __exports;});;

/* /spreadsheet/static/src/command_palette.js */
odoo.define('@spreadsheet/command_palette',['@odoo/o-spreadsheet','@web/core/utils/patch','@spreadsheet/command_provider'],function(require){'use strict';let __exports={};const{Spreadsheet,components}=require("@odoo/o-spreadsheet");const{patch}=require("@web/core/utils/patch");const{useSpreadsheetCommandPalette}=require("@spreadsheet/command_provider");const{Grid}=components;patch(Spreadsheet.prototype,{setup(){super.setup();if(this.env.isDashboard()){return;}
useSpreadsheetCommandPalette();},});patch(Grid.prototype,{setup(){super.setup();delete this.keyDownMapping["Ctrl+K"];},});return __exports;});;

/* /spreadsheet/static/src/command_provider.js */
odoo.define('@spreadsheet/command_provider',['@odoo/o-spreadsheet','@odoo/owl','@web/core/registry'],function(require){'use strict';let __exports={};const{registries}=require("@odoo/o-spreadsheet");const{useEffect,useEnv}=require("@odoo/owl");const{registry}=require("@web/core/registry");const{topbarMenuRegistry}=registries;const commandProviderRegistry=registry.category("command_provider");const commandCategoryRegistry=registry.category("command_categories");__exports.useSpreadsheetCommandPalette=useSpreadsheetCommandPalette;function useSpreadsheetCommandPalette(){const env=useEnv();useEffect(()=>{setupSpreadsheetCategories(env);setupSpreadsheetCommandProvider(env);return()=>commandProviderRegistry.remove("spreadsheet_provider");},()=>[]);}
function setupSpreadsheetCategories(spreadsheetEnv){let sequence=5;commandCategoryRegistry.add("spreadsheet_insert_link",{},{sequence:0,force:true});for(const menu of topbarMenuRegistry.getMenuItems()){const category=`spreadsheet_${menu.name(spreadsheetEnv)}`;commandCategoryRegistry.add(category,{},{sequence,force:true});sequence++;}}
function setupSpreadsheetCommandProvider(spreadsheetEnv){commandProviderRegistry.add("spreadsheet_provider",{provide:(env,options)=>{const result=[];for(const menu of topbarMenuRegistry.getMenuItems()){const name=menu.name(spreadsheetEnv);const category=`spreadsheet_${name}`;result.push(...registerCommand(spreadsheetEnv,menu,name,category));}
return result;},});}
function registerCommand(spreadsheetEnv,menu,parentName,category){const result=[];if(menu.children){for(const subMenu of menu.children(spreadsheetEnv).sort((a,b)=>a.sequence-b.sequence)){if(!subMenu.isVisible(spreadsheetEnv)||!subMenu.isEnabled(spreadsheetEnv)){continue;}
const subMenuName=`${subMenu.name(spreadsheetEnv)}`;if(subMenu.execute){result.push({action(){subMenu.execute(spreadsheetEnv);},category:subMenu.id==="insert_link"?"spreadsheet_insert_link":category,name:`${parentName} / ${subMenuName}`,});}else{result.push(...registerCommand(spreadsheetEnv,subMenu,`${parentName} / ${subMenuName}`,category));}}}
return result;}
return __exports;});;

/* /spreadsheet/static/src/components/share_button/share_button.js */
odoo.define('@spreadsheet/components/share_button/share_button',['@odoo/owl','@web/core/browser/browser','@web/core/l10n/translation','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/copy_button/copy_button','@spreadsheet/helpers/model','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{Component,useState}=require("@odoo/owl");const{browser}=require("@web/core/browser/browser");const{_t}=require("@web/core/l10n/translation");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{CopyButton}=require("@web/core/copy_button/copy_button");const{waitForDataLoaded,freezeOdooData}=require("@spreadsheet/helpers/model");const{Model}=require("@odoo/o-spreadsheet");const SpreadsheetShareButton=__exports.SpreadsheetShareButton=class SpreadsheetShareButton extends Component{static template="spreadsheet.ShareButton";static components={Dropdown,DropdownItem,CopyButton};static props={model:{type:Model,optional:true},onSpreadsheetShared:Function,togglerClass:{type:String,optional:true},};setup(){this.copiedText=_t("Copied");this.state=useState({url:undefined});}
get togglerClass(){return["btn",this.props.togglerClass].join(" ");}
async onOpened(){const model=this.props.model;await waitForDataLoaded(model);const data=await freezeOdooData(model);if(!this.isChanged(data)){return;}
const url=await this.props.onSpreadsheetShared(data,model.exportXLSX());this.state.url=url;setTimeout(async()=>{try{await browser.navigator.clipboard.writeText(url);}catch(error){browser.console.warn(error);}});}
isChanged(data){const contentsChanged=data.revisionId!==this.lastRevisionId;let globalFilterChanged=this.lastGlobalFilters===undefined;const newCells=data.sheets[data.sheets.length-1].cells;if(this.lastGlobalFilters!==undefined){for(const key of Object.keys(newCells)){if(this.lastGlobalFilters[key]!==newCells[key]){globalFilterChanged=true;break;}}}
const localeChanged=data.settings.locale.code!==this.lastLocale;if(!(localeChanged||globalFilterChanged||contentsChanged)){return false;}
this.lastRevisionId=data.revisionId;this.lastGlobalFilters=newCells;this.lastLocale=data.settings.locale.code;return true;}}
return __exports;});;

/* /spreadsheet/static/src/currency/formulas.js */
odoo.define('@spreadsheet/currency/formulas',['@web/core/l10n/translation','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{arg,toString,toJsDate,toNumber}=spreadsheet.helpers;const{functionRegistry}=spreadsheet.registries;functionRegistry.add("ODOO.CURRENCY.RATE",{description:_t("This function takes in two currency codes as arguments, and returns the exchange rate from the first currency to the second as float."),category:"Odoo",compute:function(currencyFrom,currencyTo,date,companyId){const from=toString(currencyFrom);const to=toString(currencyTo);const _date=date?toJsDate(date,this.locale):undefined;const _companyId=companyId?toNumber(companyId):undefined;return this.getters.getCurrencyRate(from,to,_date,_companyId);},args:[arg("currency_from (string)",_t("First currency code.")),arg("currency_to (string)",_t("Second currency code.")),arg("date (date, optional)",_t("Date of the rate.")),arg("company_id (number, optional)",_t("The company to take the exchange rate from.")),],returns:["NUMBER"],});return __exports;});;

/* /spreadsheet/static/src/currency/helpers.js */
odoo.define('@spreadsheet/currency/helpers',[],function(require){'use strict';let __exports={};__exports.createDefaultCurrency=createDefaultCurrency;function createDefaultCurrency(currency){if(!currency){return undefined;}
return{symbol:currency.symbol,position:currency.position,decimalPlaces:currency.decimalPlaces,};}
return __exports;});;

/* /spreadsheet/static/src/currency/plugins/currency.js */
odoo.define('@spreadsheet/currency/plugins/currency',['@odoo/o-spreadsheet','@spreadsheet/plugins','@spreadsheet/helpers/helpers','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{EvaluationError,helpers,registries}=require("@odoo/o-spreadsheet");const{OdooUIPlugin}=require("@spreadsheet/plugins");const{toServerDateString}=require("@spreadsheet/helpers/helpers");const{_t}=require("@web/core/l10n/translation");const{featurePluginRegistry}=registries;const{createCurrencyFormat}=helpers;const CurrencyPlugin=__exports.CurrencyPlugin=class CurrencyPlugin extends OdooUIPlugin{static getters=(["getCurrencyRate","computeFormatFromCurrency","getCompanyCurrencyFormat",]);constructor(config){super(config);this.currentCompanyCurrency=config.defaultCurrency;this._serverData=config.custom.odooDataProvider?.serverData;}
get serverData(){if(!this._serverData){throw new Error("'serverData' is not defined, please make sure a 'OdooDataProvider' instance is provided to the model.");}
return this._serverData;}
getCurrencyRate(from,to,date,companyId){const data=this.serverData.batch.get("res.currency.rate","get_rates_for_spreadsheet",{from,to,date:date?toServerDateString(date):undefined,company_id:companyId,});const rate=data!==undefined?data.rate:undefined;if(rate===false){throw new EvaluationError(_t("Currency rate unavailable."));}
return rate;}
computeFormatFromCurrency(currency){if(!currency){return undefined;}
return createCurrencyFormat({symbol:currency.symbol,position:currency.position,decimalPlaces:currency.decimalPlaces,});}
getCompanyCurrencyFormat(companyId){if(!companyId&&this.currentCompanyCurrency){return this.computeFormatFromCurrency(this.currentCompanyCurrency);}
const currency=this.serverData.get("res.currency","get_company_currency_for_spreadsheet",[companyId]);if(currency===false){throw new EvaluationError(_t("Currency not available for this company."));}
return this.computeFormatFromCurrency(currency);}}
featurePluginRegistry.add("odooCurrency",CurrencyPlugin);return __exports;});;

/* /spreadsheet/static/src/data_sources/data_source.js */
odoo.define('@spreadsheet/data_sources/data_source',['@spreadsheet/o_spreadsheet/errors','@web/core/network/rpc','@web/core/utils/concurrency','@odoo/o-spreadsheet','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{LoadingDataError}=require("@spreadsheet/o_spreadsheet/errors");const{RPCError}=require("@web/core/network/rpc");const{KeepLast}=require("@web/core/utils/concurrency");const{CellErrorType,EvaluationError}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const LoadableDataSource=__exports.LoadableDataSource=class LoadableDataSource{constructor({odooDataProvider}){this.odooDataProvider=odooDataProvider;this._lastUpdate=undefined;this._concurrency=new KeepLast();this._loadPromise=undefined;this._isFullyLoaded=false;this._isValid=true;this._loadError=undefined;this._isModelValid=true;}
get _orm(){return this.odooDataProvider.orm;}
get serverData(){return this.odooDataProvider.serverData;}
async load(params){if(params&&params.reload){this.odooDataProvider.cancelPromise(this._loadPromise);this._loadPromise=undefined;}
if(!this._loadPromise){this._isFullyLoaded=false;this._isValid=true;this._loadError=undefined;this._loadPromise=this._concurrency.add(this._load()).catch((e)=>{this._isValid=false;if(e instanceof ModelNotFoundError){this._isModelValid=false;this._loadError=Object.assign(new EvaluationError(_t(`The model "%(model)s" does not exist.`,{model:e.message})),{cause:e,});return;}
this._loadError=Object.assign(new EvaluationError(e instanceof RPCError?e.data.message:e.message),{cause:e});}).finally(()=>{this._lastUpdate=Date.now();this._isFullyLoaded=true;});await this.odooDataProvider.notifyWhenPromiseResolves(this._loadPromise);}
return this._loadPromise;}
get lastUpdate(){return this._lastUpdate;}
isReady(){return this._isFullyLoaded;}
isLoading(){return!!this._loadPromise&&!this.isReady();}
isValid(){return this.isReady()&&this._isValid;}
isModelValid(){return this.isReady()&&this._isModelValid;}
assertIsValid({throwOnError}={throwOnError:true}){if(!this._isFullyLoaded){this.load();if(throwOnError){throw LOADING_ERROR;}
return LOADING_ERROR;}
if(!this._isValid){if(throwOnError){throw this._loadError;}
return{value:CellErrorType.GenericError,message:this._loadError.message};}}
async _load(){}}
const LOADING_ERROR=__exports.LOADING_ERROR=new LoadingDataError();const ModelNotFoundError=__exports.ModelNotFoundError=class ModelNotFoundError extends Error{}
__exports.getFields=getFields;async function getFields(fieldService,model){try{return await fieldService.loadFields(model);}catch(e){if(e instanceof RPCError&&e.code===404){throw new ModelNotFoundError(model);}
throw e;}}
return __exports;});;

/* /spreadsheet/static/src/data_sources/odoo_data_provider.js */
odoo.define('@spreadsheet/data_sources/odoo_data_provider',['@odoo/owl','@spreadsheet/data_sources/server_data'],function(require){'use strict';let __exports={};const{EventBus}=require("@odoo/owl");const{ServerData}=require("@spreadsheet/data_sources/server_data");const OdooDataProvider=__exports.OdooDataProvider=class OdooDataProvider extends EventBus{constructor(env){super();this.orm=env.services.orm.silent;this.fieldService=env.services.field;this.serverData=new ServerData(this.orm,{whenDataStartLoading:(promise)=>this.notifyWhenPromiseResolves(promise),});this.pendingPromises=new Set();}
cancelPromise(promise){this.pendingPromises.delete(promise);}
async notifyWhenPromiseResolves(promise){this.pendingPromises.add(promise);await promise.then(()=>{this.pendingPromises.delete(promise);this.notify();}).catch(()=>{this.pendingPromises.delete(promise);this.notify();});}
notify(){if(this.pendingPromises.size){if(!this.nextTriggerTimeOutId){this.nextTriggerTimeOutId=setTimeout(()=>{this.nextTriggerTimeOutId=undefined;if(this.pendingPromises.size){this.trigger("data-source-updated");}},10000);}
return;}
this.trigger("data-source-updated");}}
return __exports;});;

/* /spreadsheet/static/src/data_sources/odoo_views_data_source.js */
odoo.define('@spreadsheet/data_sources/odoo_views_data_source',['@spreadsheet/data_sources/data_source','@web/core/domain','@web/core/user','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{LOADING_ERROR,LoadableDataSource,getFields}=require("@spreadsheet/data_sources/data_source");const{Domain}=require("@web/core/domain");const{user}=require("@web/core/user");const{omit}=require("@web/core/utils/objects");const OdooViewsDataSource=__exports.OdooViewsDataSource=class OdooViewsDataSource extends LoadableDataSource{constructor(services,params){super(services);this._metaData=JSON.parse(JSON.stringify(params.metaData));this._initialSearchParams=JSON.parse(JSON.stringify(params.searchParams));const userContext=user.context;this._initialSearchParams.context=omit(this._initialSearchParams.context||{},...Object.keys(userContext));this._customDomain=this._initialSearchParams.domain;this._metaDataLoaded=false;}
get _searchParams(){return{...this._initialSearchParams,domain:this.getComputedDomain(),};}
async loadMetadata(){if(!this._metaData.fields){this._metaData.fields=await getFields(this.odooDataProvider.fieldService,this._metaData.resModel);}
this._metaDataLoaded=true;}
_assertMetaDataLoaded(){if(!this._isModelValid){throw this.loadError;}
if(!this._metaDataLoaded){this.loadMetadata();throw LOADING_ERROR;}}
getFields(){this._assertMetaDataLoaded();return this._metaData.fields;}
getField(field){this._assertMetaDataLoaded();return this._metaData.fields[field];}
async _load(){await this.loadMetadata();}
isMetaDataLoaded(){return this._metaData.fields!==undefined;}
getComputedDomain(){const userContext=user.context;return new Domain(this._customDomain).toList({...this._initialSearchParams.context,...userContext,});}
getInitialDomainString(){return new Domain(this._initialSearchParams.domain).toString();}
addDomain(domain){const newDomain=Domain.and([this._initialSearchParams.domain,domain]).toString();if(newDomain.toString()===new Domain(this._customDomain).toString()){return;}
this._customDomain=newDomain;if(this._loadPromise===undefined){return;}
this.load({reload:true});}
async getModelLabel(){const result=await this._orm.cached().call("ir.model","display_name_for",[[this._metaData.resModel]]);return result[0]?.display_name||"";}}
return __exports;});;

/* /spreadsheet/static/src/data_sources/server_data.js */
odoo.define('@spreadsheet/data_sources/server_data',['@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/errors'],function(require){'use strict';let __exports={};const{EvaluationError}=require("@odoo/o-spreadsheet");const{LoadingDataError,isLoadingError}=require("@spreadsheet/o_spreadsheet/errors");function removeDuplicates(array){return[...new Set(array.map((el)=>JSON.stringify(el)))].map((el)=>JSON.parse(el));}
const Request=__exports.Request=class Request{constructor(resModel,method,args){this.resModel=resModel;this.method=method;this.args=args;this.key=`${resModel}/${method}(${JSON.stringify(args)})`;}}
class ListRequestBatch{constructor(resModel,method,requests=[]){this.resModel=resModel;this.method=method;this.requests=requests;}
get payload(){const payload=removeDuplicates(this.requests.map((request)=>request.args).flat());return[payload];}
add(request){if(request.resModel!==this.resModel||request.method!==this.method){throw new Error(`Request ${request.resModel}/${request.method} cannot be added to the batch ${this.resModel}/${this.method}`);}
this.requests.push(request);}
splitResponse(results){const split=new Map();for(let i=0;i<this.requests.length;i++){split.set(this.requests[i],results[i]);}
return split;}}
const ServerData=__exports.ServerData=class ServerData{constructor(orm,{whenDataStartLoading}){this.orm=orm;this.startLoadingCallback=whenDataStartLoading??(()=>{});this.cache={};this.batchEndpoints={};}
get batch(){return{get:(resModel,method,args)=>this._getBatchItem(resModel,method,args)};}
_getBatchItem(resModel,method,args){const request=new Request(resModel,method,[args]);if(!(request.key in this.cache)){const error=new LoadingDataError();this.cache[request.key]=error;this._batch(request);throw error;}
return this._getOrThrowCachedResponse(request);}
get(resModel,method,args){const request=new Request(resModel,method,args);if(!(request.key in this.cache)){const error=new LoadingDataError();this.cache[request.key]=error;const promise=this.orm.call(resModel,method,args).then((result)=>(this.cache[request.key]=result)).catch((error)=>(this.cache[request.key]=new EvaluationError(error.data?.message||error.message)));this.startLoadingCallback(promise);throw error;}
return this._getOrThrowCachedResponse(request);}
_batch(request){const endpoint=this._getBatchEndPoint(request.resModel,request.method);endpoint.call(request);}
_getOrThrowCachedResponse(request){const data=this.cache[request.key];if(data instanceof Error||data instanceof EvaluationError||isLoadingError({value:data})){throw data;}
return data;}
_getBatchEndPoint(resModel,method){if(!this.batchEndpoints[resModel]||!this.batchEndpoints[resModel][method]){this.batchEndpoints[resModel]={...this.batchEndpoints[resModel],[method]:this._createBatchEndpoint(resModel,method),};}
return this.batchEndpoints[resModel][method];}
_createBatchEndpoint(resModel,method){return new BatchEndpoint(this.orm,resModel,method,{whenDataStartLoading:(promise)=>this.startLoadingCallback(promise),successCallback:(request,result)=>{this.cache[request.key]=result;},failureCallback:(request,error)=>(this.cache[request.key]=new EvaluationError(error.data?.message||error.message)),});}}
const BatchEndpoint=__exports.BatchEndpoint=class BatchEndpoint{constructor(orm,resModel,method,{successCallback,failureCallback,whenDataStartLoading}){this.orm=orm;this.resModel=resModel;this.method=method;this.successCallback=successCallback;this.failureCallback=failureCallback;this.batchStartsLoadingCallback=whenDataStartLoading;this._isScheduled=false;this._pendingBatch=new ListRequestBatch(resModel,method);}
call(request){this._pendingBatch.add(request);this._scheduleNextBatch();}
_notifyResults(batchResult){for(const[request,result]of batchResult){if(result instanceof Error){this.failureCallback(request,result);}else{this.successCallback(request,result);}}}
_scheduleNextBatch(){if(this._isScheduled||this._pendingBatch.requests.length===0){return;}
this._isScheduled=true;queueMicrotask(async()=>{this._isScheduled=false;const batch=this._pendingBatch;const{resModel,method}=batch;this._pendingBatch=new ListRequestBatch(resModel,method);const promise=this.orm.call(resModel,method,batch.payload).then((result)=>batch.splitResponse(result)).catch(()=>this._retryOneByOne(batch)).then((batchResults)=>this._notifyResults(batchResults));this.batchStartsLoadingCallback(promise);});}
async _retryOneByOne(batch){const mergedResults=new Map();const{resModel,method}=batch;const singleRequestBatches=batch.requests.map((request)=>new ListRequestBatch(resModel,method,[request]));const proms=[];for(const batch of singleRequestBatches){const request=batch.requests[0];const prom=this.orm.call(resModel,method,batch.payload).then((result)=>mergedResults.set(request,batch.splitResponse(result).get(request))).catch((error)=>mergedResults.set(request,error));proms.push(prom);}
await Promise.allSettled(proms);return mergedResults;}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/date_filter_dropdown/date_filter_dropdown.js */
odoo.define('@spreadsheet/global_filters/components/date_filter_dropdown/date_filter_dropdown',['@odoo/owl','@spreadsheet/global_filters/helpers','@web/core/datetime/datetime_input','@web/core/dropdown/dropdown_item','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component,onWillUpdateProps}=require("@odoo/owl");const{dateFilterValueToString,getDateRange,getNextDateFilterValue,getPreviousDateFilterValue,RELATIVE_PERIODS,}=require("@spreadsheet/global_filters/helpers");const{DateTimeInput}=require("@web/core/datetime/datetime_input");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{DateTime}=luxon;const DATE_OPTIONS=[{id:"today",type:"relative",label:RELATIVE_PERIODS["today"],},{id:"yesterday",type:"relative",label:RELATIVE_PERIODS["yesterday"],separator:true,},{id:"last_7_days",type:"relative",label:RELATIVE_PERIODS["last_7_days"],},{id:"last_30_days",type:"relative",label:RELATIVE_PERIODS["last_30_days"],},{id:"last_90_days",type:"relative",label:RELATIVE_PERIODS["last_90_days"],separator:true,},{id:"month_to_date",type:"relative",label:RELATIVE_PERIODS["month_to_date"],},{id:"last_month",type:"relative",label:RELATIVE_PERIODS["last_month"],},{id:"month",type:"month",label:_t("Month"),},{id:"quarter",type:"quarter",label:_t("Quarter"),separator:true,},{id:"year_to_date",type:"relative",label:RELATIVE_PERIODS["year_to_date"],},{id:"last_12_months",type:"relative",label:RELATIVE_PERIODS["last_12_months"],},{id:"year",type:"year",label:_t("Year"),separator:true,},{id:undefined,type:undefined,label:_t("All time"),},{id:"range",type:"range",label:_t("Custom Range"),},];const DateFilterDropdown=__exports.DateFilterDropdown=class DateFilterDropdown extends Component{static template="spreadsheet.DateFilterDropdown";static components={DropdownItem,DateTimeInput};static props={value:{type:Object,optional:true},update:Function,};setup(){this._computeDefaultSelectedValues();this._applyCurrentValueToSelectedValues(this.props.value);onWillUpdateProps((nextProps)=>this._applyCurrentValueToSelectedValues(nextProps.value));}
_computeDefaultSelectedValues(){const now=DateTime.local();this.selectedValues={month:{month:now.month,year:now.year,type:"month"},quarter:{quarter:Math.ceil(now.month/3),year:now.year,type:"quarter"},year:{year:now.year,type:"year"},range:{from:"",to:"",type:"range"},};}
_applyCurrentValueToSelectedValues(value){this._setRangeToCurrentValue(value);switch(value?.type){case"month":this.selectedValues.month={type:"month",month:value.month,year:value.year,};break;case"quarter":this.selectedValues.quarter={type:"quarter",quarter:value.quarter,year:value.year,};break;case"year":this.selectedValues.year={type:"year",year:value.year};break;case"range":this.selectedValues.range={type:"range",from:value.from,to:value.to,};break;}}
_setRangeToCurrentValue(value){const{from,to}=getDateRange(value);const now=DateTime.local();this.selectedValues.range={type:"range",from:from?from.toISODate():now.startOf("month").toISODate(),to:to?to.toISODate():now.endOf("month").toISODate(),};}
get dateOptions(){return DATE_OPTIONS;}
isMonthQuarterYear(value){return["month","quarter","year"].includes(value?.type);}
isSelected(value){if(!this.props.value){return value.id===undefined;}
if(this.props.value.type==="relative"){return this.props.value.period===value.id;}
return this.props.value.type===value.type;}
update(value){switch(value.type){case"relative":this.props.update({type:"relative",period:value.id});break;case"month":this.props.update(this.selectedValues.month);break;case"quarter":this.props.update(this.selectedValues.quarter);break;case"year":this.props.update(this.selectedValues.year);break;case"range":{const{from,to}=this.selectedValues.range;if(from&&to){if(DateTime.fromISO(from)>DateTime.fromISO(to)){this.selectedValues.range.to=from;this.selectedValues.range.from=to;}}
this.props.update(this.selectedValues.range);break;}
default:this.props.update(undefined);}}
dateFrom(){return this.selectedValues.range.from?DateTime.fromISO(this.selectedValues.range.from):undefined;}
dateTo(){return this.selectedValues.range.to?DateTime.fromISO(this.selectedValues.range.to):undefined;}
setDateFrom(date){this.selectedValues.range.from=date?date.toISODate():"";this.update(this.selectedValues.range);}
setDateTo(date){this.selectedValues.range.to=date?date.toISODate():"";this.update(this.selectedValues.range);}
getDescription(type){return dateFilterValueToString(this.selectedValues[type]);}
selectPrevious(type){this.selectedValues[type]=getPreviousDateFilterValue(this.selectedValues[type]);}
selectNext(type){this.selectedValues[type]=getNextDateFilterValue(this.selectedValues[type]);}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/date_filter_value/date_filter_value.js */
odoo.define('@spreadsheet/global_filters/components/date_filter_value/date_filter_value',['@odoo/owl','@web/core/dropdown/dropdown','@spreadsheet/global_filters/components/date_filter_dropdown/date_filter_dropdown','@spreadsheet/global_filters/helpers'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DateFilterDropdown}=require("@spreadsheet/global_filters/components/date_filter_dropdown/date_filter_dropdown");const{dateFilterValueToString}=require("@spreadsheet/global_filters/helpers");const DateFilterValue=__exports.DateFilterValue=class DateFilterValue extends Component{static template="spreadsheet.DateFilterValue";static components={Dropdown,DateFilterDropdown};static props={value:{type:Object,optional:true},update:Function,};get inputValue(){return dateFilterValueToString(this.props.value);}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/default_date_value/default_date_value.js */
odoo.define('@spreadsheet/global_filters/components/default_date_value/default_date_value',['@odoo/owl','@spreadsheet/global_filters/helpers','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{RELATIVE_PERIODS}=require("@spreadsheet/global_filters/helpers");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const DATE_OPTIONS=[{id:"today",label:RELATIVE_PERIODS["today"],},{id:"yesterday",label:RELATIVE_PERIODS["yesterday"],separator:true,},{id:"last_7_days",label:RELATIVE_PERIODS["last_7_days"],},{id:"last_30_days",label:RELATIVE_PERIODS["last_30_days"],},{id:"last_90_days",label:RELATIVE_PERIODS["last_90_days"],separator:true,},{id:"month_to_date",label:RELATIVE_PERIODS["month_to_date"],},{id:"last_month",label:RELATIVE_PERIODS["last_month"],},{id:"this_month",label:_t("Current Month"),},{id:"this_quarter",label:_t("Current Quarter"),separator:true,},{id:"year_to_date",label:RELATIVE_PERIODS["year_to_date"],},{id:"last_12_months",label:RELATIVE_PERIODS["last_12_months"],},{id:"this_year",label:_t("Current Year"),separator:true,},{id:undefined,label:_t("All time"),},];const DefaultDateValue=__exports.DefaultDateValue=class DefaultDateValue extends Component{static template="spreadsheet.DefaultDateValue";static components={Dropdown,DropdownItem};static props={value:{type:String,optional:true},update:Function,};get currentFormattedValue(){return(this.dateOptions.find((option)=>option.id===this.props.value)?.label||_t("All time"));}
get dateOptions(){return DATE_OPTIONS;}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/filter_text_value/filter_text_value.js */
odoo.define('@spreadsheet/global_filters/components/filter_text_value/filter_text_value',['@odoo/owl','@web/core/utils/hooks','@web/core/tags_list/tags_list','@web/core/autocomplete/autocomplete'],function(require){'use strict';let __exports={};const{Component,useEffect}=require("@odoo/owl");const{useChildRef}=require("@web/core/utils/hooks");const{TagsList}=require("@web/core/tags_list/tags_list");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const TextFilterValue=__exports.TextFilterValue=class TextFilterValue extends Component{static template="spreadsheet.TextFilterValue";static components={TagsList,AutoComplete,};static props={onValueChanged:Function,value:{type:Array,optional:true},options:{type:Array,element:{type:Object,shape:{value:String,formattedValue:String},optional:true,},},};static defaultProps={value:[],};setup(){this.inputRef=useChildRef();useEffect(()=>{if(this.props.options.length&&this.inputRef.el){this.inputRef.el.setAttribute("maxlength",0);}else{this.inputRef.el.removeAttribute("maxlength");}},()=>[this.props.options.length,this.inputRef.el]);}
get tags(){return this.props.value.map((value)=>({id:value,text:this.props.options.find((option)=>option.value===value)?.formattedValue??value,onDelete:()=>{this.props.onValueChanged(this.props.value.filter((v)=>v!==value));},}));}
get sources(){const alreadySelected=new Set(this.props.value);return[{options:this.props.options.filter((option)=>!alreadySelected.has(option.value)).map((option)=>({label:option.formattedValue,onSelect:()=>this.props.onValueChanged([...this.props.value,option.value]),})),},];}
onInputChange({inputValue}){const value=inputValue.trim();if(value){if(!this.props.value?.includes(value)){this.props.onValueChanged([...this.props.value,value]);}
this.inputRef.el.value="";}}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/filter_value/filter_value.js */
odoo.define('@spreadsheet/global_filters/components/filter_value/filter_value',['@web/core/record_selectors/multi_record_selector','@spreadsheet/global_filters/components/date_filter_value/date_filter_value','@odoo/owl','@odoo/o-spreadsheet','@web/core/l10n/translation','@web/core/utils/hooks','@web/core/domain','@web/core/user','@spreadsheet/global_filters/components/filter_text_value/filter_text_value','@spreadsheet/data_sources/data_source','@spreadsheet/global_filters/components/selection_filter_value/selection_filter_value','@spreadsheet/global_filters/helpers'],function(require){'use strict';let __exports={};const{MultiRecordSelector}=require("@web/core/record_selectors/multi_record_selector");const{DateFilterValue}=require("@spreadsheet/global_filters/components/date_filter_value/date_filter_value");const{Component,onWillStart}=require("@odoo/owl");const{components}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{Domain}=require("@web/core/domain");const{user}=require("@web/core/user");const{TextFilterValue}=require("@spreadsheet/global_filters/components/filter_text_value/filter_text_value");const{getFields,ModelNotFoundError}=require("@spreadsheet/data_sources/data_source");const{SelectionFilterValue}=require("@spreadsheet/global_filters/components/selection_filter_value/selection_filter_value");const{isTextualOperator,isSetOperator,getDefaultValue,}=require("@spreadsheet/global_filters/helpers");const{ValidationMessages}=components;const FilterValue=__exports.FilterValue=class FilterValue extends Component{static template="spreadsheet.FilterValue";static components={TextFilterValue,DateFilterValue,MultiRecordSelector,SelectionFilterValue,ValidationMessages,};static props={filter:Object,model:Object,setGlobalFilterValue:Function,globalFilterValue:{optional:true},showTitle:{type:Boolean,optional:true},showClear:{type:Boolean,optional:true},};setup(){this.getters=this.props.model.getters;this.fieldService=useService("field");this.isValid=false;onWillStart(async()=>{if(this.filter.type!=="relation"){this.isValid=true;return;}
try{await getFields(this.fieldService,this.filter.modelName);this.isValid=true;}catch(e){if(e instanceof ModelNotFoundError){this.isValid=false;}else{throw e;}}});}
get isTextualOperator(){return isTextualOperator(this.filterValue?.operator);}
get isSetOperator(){return isSetOperator(this.filterValue?.operator);}
get filter(){return this.props.filter;}
get filterValue(){return this.props.globalFilterValue;}
get textAllowedValues(){return this.getters.getTextFilterOptions(this.filter.id);}
get relationalAllowedDomain(){const domain=this.props.filter.domainOfAllowedValues;if(domain){return new Domain(domain).toList(user.context);}
return[];}
get invalidModel(){const model=this.filter.modelName;return _t("The model (%(model)s) of this global filter is not valid (it may have been renamed/deleted).",{model,});}
getDefaultOperator(){return getDefaultValue(this.filter.type).operator;}
onDateInput(id,value){this.props.setGlobalFilterValue(id,value);}
onTextInput(id,value){if(Array.isArray(value)&&value.length===0){this.clear(id);return;}
const operator=this.filterValue?.operator??this.getDefaultOperator();this.props.setGlobalFilterValue(id,{operator,strings:value});}
onBooleanInput(id,value){if(Array.isArray(value)&&value.length===0){this.clear(id);return;}
this.props.setGlobalFilterValue(id,value);}
onSelectionInput(id,value){if(Array.isArray(value)&&value.length===0){this.clear(id);return;}
const operator=this.filterValue?.operator??this.getDefaultOperator();this.props.setGlobalFilterValue(id,{operator,selectionValues:value});}
async onTagSelected(id,resIds){if(!resIds.length){this.clear(id);}else{const operator=this.filterValue?.operator??this.getDefaultOperator();this.props.setGlobalFilterValue(id,{operator,ids:resIds},);}}
clear(id){this.props.setGlobalFilterValue(id);}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/filters_search_dialog/filters_search_dialog.js */
odoo.define('@spreadsheet/global_filters/components/filters_search_dialog/filters_search_dialog',['@odoo/owl','@spreadsheet/global_filters/components/filter_value/filter_value','@web/core/dialog/dialog','@web/core/dropdown/dropdown','@web/core/dropdown/dropdown_item','@web/core/l10n/translation','@web/core/tree_editor/tree_editor_operator_editor','@spreadsheet/global_filters/helpers','@web/core/utils/hooks'],function(require){'use strict';let __exports={};const{Component,onWillStart,useState}=require("@odoo/owl");const{FilterValue}=require("@spreadsheet/global_filters/components/filter_value/filter_value");const{Dialog}=require("@web/core/dialog/dialog");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{_t}=require("@web/core/l10n/translation");const{getOperatorLabel}=require("@web/core/tree_editor/tree_editor_operator_editor");const{getDefaultValue,getEmptyFilterValue,getFilterTypeOperators,}=require("@spreadsheet/global_filters/helpers");const{useService}=require("@web/core/utils/hooks");const{isEmptyFilterValue}=require("@spreadsheet/global_filters/helpers");const FiltersSearchDialog=__exports.FiltersSearchDialog=class FiltersSearchDialog extends Component{static template="spreadsheet_dashboard.FiltersSearchDialog";static components={Dialog,Dropdown,DropdownItem,FilterValue,};static props={close:Function,model:Object,openFiltersEditor:{type:Function,optional:true},};setup(){this.orm=useService("orm");this.state=useState({activeFilters:this.globalFilters.filter((globalFilter)=>this.props.model.getters.isGlobalFilterActive(globalFilter.id)).map((globalFilter)=>({globalFilter,value:{...this.props.model.getters.getGlobalFilterValue(globalFilter.id)},})),});onWillStart(async()=>{this.searchableParentRelations=await this.fetchSearchableParentRelation();});}
get globalFilters(){return this.props.model.getters.getGlobalFilters();}
get hasUnusedGlobalFilters(){return this.globalFilters.length>this.state.activeFilters.length;}
get unusedGlobalFilters(){return this.globalFilters.filter((globalFilter)=>!this.state.activeFilters.some((node)=>node.globalFilter.id===globalFilter.id));}
activateFilter(filter){this.state.activeFilters.push({globalFilter:filter,value:getDefaultValue(filter.type),});}
getFilterLabel(node){return _t(node.globalFilter.label);}
setGlobalFilterValue(node,value){if(!value&&node.globalFilter.type!=="date"){node.value={...node.value,...getEmptyFilterValue(node.globalFilter,node.value.operator),};}else{node.value=value;}}
getTranslatedFilterLabel(filter){return _t(filter.label);}
getOperators(filter){const operators=getFilterTypeOperators(filter.type);if(filter.type==="relation"&&!this.searchableParentRelations[filter.modelName]){return operators.filter((op)=>op!=="child_of");}
return operators;}
getOperatorLabel(operator){return getOperatorLabel(operator);}
updateOperator(node,operator){node.value.operator=operator;const defaultValue=getEmptyFilterValue(node.globalFilter,operator);for(const key of Object.keys(defaultValue??{})){if(!(key in node.value)){node.value[key]=defaultValue[key];}}}
removeFilter(filterId){const index=this.state.activeFilters.findIndex((node)=>node.globalFilter.id===filterId);if(index!==-1){this.state.activeFilters.splice(index,1);}}
onConfirm(){for(const filter of this.globalFilters){const node=this.state.activeFilters.find((node)=>node.globalFilter.id===filter.id);if(node&&!isEmptyFilterValue(filter,node.value)){this.props.model.dispatch("SET_GLOBAL_FILTER_VALUE",{id:filter.id,value:node.value,});}else{this.props.model.dispatch("SET_GLOBAL_FILTER_VALUE",{id:filter.id});}}
this.props.close();}
onDiscard(){this.props.close();}
fetchSearchableParentRelation(){const models=this.globalFilters.filter((filter)=>filter.type==="relation").map((filter)=>filter.modelName);return this.orm.cached().call("ir.model","has_searchable_parent_relation",[models]);}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/components/selection_filter_value/selection_filter_value.js */
odoo.define('@spreadsheet/global_filters/components/selection_filter_value/selection_filter_value',['@odoo/owl','@web/core/utils/hooks','@web/core/tags_list/tags_list','@web/core/autocomplete/autocomplete'],function(require){'use strict';let __exports={};const{Component,onWillStart,onWillUpdateProps,useEffect}=require("@odoo/owl");const{useChildRef,useService}=require("@web/core/utils/hooks");const{TagsList}=require("@web/core/tags_list/tags_list");const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const SelectionFilterValue=__exports.SelectionFilterValue=class SelectionFilterValue extends Component{static template="spreadsheet.SelectionFilterValue";static components={TagsList,AutoComplete,};static props={resModel:String,field:String,value:{type:Array,optional:true},onValueChanged:Function,};static defaultProps={value:[],};setup(){this.inputRef=useChildRef();useEffect(()=>{if(this.inputRef.el){this.inputRef.el.setAttribute("maxlength",0);}},()=>[this.inputRef.el]);this.tags=[];this.sources=[];this.fields=useService("field");onWillStart(()=>this._computeTagsAndSources(this.props));onWillUpdateProps((nextProps)=>this._computeTagsAndSources(nextProps));}
async _computeTagsAndSources(props){const fields=await this.fields.loadFields(props.resModel);const field=fields[props.field];if(!field){throw new Error(`Field "${props.field}" not found in model "${props.resModel}"`);}
const selection=field.selection;this.tags=props.value.map((value)=>({id:value,text:selection.find((option)=>option[0]===value)?.[1]??value,onDelete:()=>{props.onValueChanged(props.value.filter((v)=>v!==value));},}));const alreadySelected=new Set(props.value);this.sources=[{options:selection.filter((option)=>!alreadySelected.has(option[0])).map(([value,formattedValue])=>({label:formattedValue,onSelect:()=>{props.onValueChanged([...props.value,value]);},})),},];}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/helpers.js */
odoo.define('@spreadsheet/global_filters/helpers',['@web/core/l10n/translation','@web/core/l10n/dates','@web/core/domain','@web/core/tree_editor/tree_editor_operator_editor','@spreadsheet/o_spreadsheet/cancelled_reason','@spreadsheet/o_spreadsheet/o_spreadsheet','@web/core/utils/objects'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{serializeDate,serializeDateTime}=require("@web/core/l10n/dates");const{Domain}=require("@web/core/domain");const{getOperatorLabel:getDomainOperatorLabel}=require("@web/core/tree_editor/tree_editor_operator_editor");const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{Registry}=require("@spreadsheet/o_spreadsheet/o_spreadsheet");const{deepEqual}=require("@web/core/utils/objects");const globalFieldMatchingRegistry=__exports.globalFieldMatchingRegistry=new Registry();const{DateTime,Interval}=luxon;const RELATIVE_PERIODS=__exports.RELATIVE_PERIODS={today:_t("Today"),yesterday:_t("Yesterday"),last_7_days:_t("Last 7 Days"),last_30_days:_t("Last 30 Days"),last_90_days:_t("Last 90 Days"),month_to_date:_t("Month to Date"),last_month:_t("Last Month"),last_12_months:_t("Last 12 Months"),year_to_date:_t("Year to Date"),};__exports.dateFilterValueToString=dateFilterValueToString;function dateFilterValueToString(value){switch(value?.type){case"relative":return RELATIVE_PERIODS[value.period];case"month":{const month=DateTime.local().set({year:value.year,month:value.month,});return month.toFormat("LLLL yyyy");}
case"quarter":{return _t("Q%(quarter)s %(year)s",{quarter:value.quarter,year:value.year,});}
case"year":return String(value.year);case"range":if(value.from&&value.to){const interval=Interval.fromDateTimes(DateTime.fromISO(value.from).startOf("day"),DateTime.fromISO(value.to).endOf("day"));return interval.toLocaleString(DateTime.DATE_FULL);}else if(value.from){return _t("Since %(from)s",{from:DateTime.fromISO(value.from).toLocaleString(DateTime.DATE_FULL),});}else if(value.to){return _t("Until %(to)s",{to:DateTime.fromISO(value.to).toLocaleString(DateTime.DATE_FULL),});}}
return _t("All time");}
__exports.checkFilterDefaultValueIsValid=checkFilterDefaultValueIsValid;function checkFilterDefaultValueIsValid(filter,defaultValue){if(defaultValue===undefined){return true;}
switch(filter.type){case"date":return isDateFilterDefaultValueValid(defaultValue);default:{const{validateDefaultValue}=getFilterBehavior(filter,defaultValue.operator);return validateDefaultValue(defaultValue);}}}
const SET_OPERATORS_BEHAVIORS={operators:["set","not_set"],validateValue:isSetValueValid,validateDefaultValue:isSetValueValid,getSearchBarFacetValues:(env,filter,filterValue)=>[getDomainOperatorLabel(filterValue.operator),],toDomain(fieldPath,filterValue){const domainOperator=filterValue.operator==="set"?"!=":"=";return new Domain([[fieldPath,domainOperator,false]]);},toCellValue(getters,filter,filterValue){return{value:filterValue.operator==="set"};},};const FILTERS_BEHAVIORS={text:[{operators:["ilike","not ilike"],defaultValue:{strings:[]},validateValue:(filterValue)=>isArrayOfStrings(filterValue.strings),validateDefaultValue:(filterValue)=>isArrayOfStrings(filterValue.strings),getSearchBarFacetValues:(env,filter,filterValue)=>filterValue.strings,toDomain(fieldPath,filterValue){return Domain.or(filterValue.strings.map((str)=>[[fieldPath,filterValue.operator,str]]));},toCellValue(getters,filter,filterValue){return{value:filterValue.strings.join(", ")};},},{operators:["in","not in"],defaultValue:{strings:[]},validateValue:(filterValue)=>isArrayOfStrings(filterValue.strings),validateDefaultValue:(filterValue)=>isArrayOfStrings(filterValue.strings),getSearchBarFacetValues:(env,filter,filterValue)=>filterValue.strings,toDomain(fieldPath,filterValue){return new Domain([[fieldPath,filterValue.operator,filterValue.strings]]);},toCellValue(getters,filter,filterValue){return{value:filterValue.strings.join(", ")};},},{operators:["starts_with"],defaultValue:{strings:[]},validateValue:(filterValue)=>isArrayOfStrings(filterValue.strings),validateDefaultValue:(filterValue)=>isArrayOfStrings(filterValue.strings),getSearchBarFacetValues:(env,filter,filterValue)=>filterValue.strings,toDomain(fieldPath,filterValue){return Domain.or(filterValue.strings.map((str)=>[[fieldPath,"=ilike",`${str}%`]]));},toCellValue(getters,filter,filterValue){return{value:filterValue.strings.join(", ")};},},SET_OPERATORS_BEHAVIORS,],relation:[{operators:["in","not in","child_of"],defaultValue:{ids:[]},validateValue:(filterValue)=>isArrayOfIds(filterValue.ids),validateDefaultValue:isCurrentUserOrArrayOfIds,async getSearchBarFacetValues(env,filter,filterValue){const values=await env.services.name.loadDisplayNames(filter.modelName,filterValue.ids);return Object.values(values).map((value)=>typeof value==="string"?value:_t("Inaccessible/missing record ID"));},toDomain(fieldPath,filterValue){return new Domain([[fieldPath,filterValue.operator,filterValue.ids]]);},toCellValue(getters,filter,filterValue){return[[{value:filterValue.ids.join(", ")}]];},},{operators:["ilike","not ilike"],defaultValue:{strings:[]},validateValue:(filterValue)=>isArrayOfStrings(filterValue.strings),validateDefaultValue:(filterValue)=>isArrayOfStrings(filterValue.strings),getSearchBarFacetValues:(env,filter,filterValue)=>filterValue.strings,toDomain(fieldPath,filterValue){return Domain.or(filterValue.strings.map((str)=>[[fieldPath,filterValue.operator,str]]));},toCellValue(getters,filter,filterValue){return{value:filterValue.strings.join(", ")};},},SET_OPERATORS_BEHAVIORS,],selection:[{operators:["in","not in"],defaultValue:{selectionValues:[]},validateValue:(filterValue)=>isArrayOfStrings(filterValue.selectionValues),validateDefaultValue:(filterValue)=>isArrayOfStrings(filterValue.selectionValues),async getSearchBarFacetValues(env,filter,filterValue){const fields=await env.services.field.loadFields(filter.resModel);const field=fields[filter.selectionField];if(!field){throw new Error(`Field ${filter.selectionField} not found in model ${filter.resModel}`);}
return filterValue.selectionValues.map((value)=>{const option=field.selection.find((option)=>option[0]===value);return option?option[1]:value;});},toDomain(fieldPath,filterValue){return new Domain([[fieldPath,filterValue.operator,filterValue.selectionValues]]);},toCellValue(getters,filter,filterValue){return{value:filterValue.selectionValues.join(", ")};},},],boolean:[SET_OPERATORS_BEHAVIORS],};__exports.checkFilterValueIsValid=checkFilterValueIsValid;function checkFilterValueIsValid(filter,value){if(value===undefined){return true;}
switch(filter.type){case"date":return isDateFilterValueValid(value);default:{const{validateValue}=getFilterBehavior(filter,value.operator);return validateValue(value);}}}
function isArrayOfStrings(strings){return(Array.isArray(strings)&&strings.length&&strings.every((item)=>typeof item==="string"));}
function isArrayOfIds(ids){return Array.isArray(ids)&&ids.length&&ids.every((id)=>Number.isInteger(id));}
function isCurrentUserOrArrayOfIds(value){return value.ids==="current_user"||isArrayOfIds(value.ids);}
function isSetValueValid(value){return value.operator==="set"||value.operator==="not_set";}
function isDateFilterDefaultValueValid(value){return(Object.keys(RELATIVE_PERIODS).includes(value)||["this_month","this_quarter","this_year"].includes(value));}
function isDateFilterValueValid(value){switch(value.type){case"relative":return Object.keys(RELATIVE_PERIODS).includes(value.period);case"month":return(typeof value.year==="number"&&typeof value.month==="number"&&value.month>=1&&value.month<=12);case"quarter":return(typeof value.year==="number"&&typeof value.quarter==="number"&&value.quarter>=1&&value.quarter<=4);case"year":return typeof value.year==="number";case"range":return((value.from===undefined||typeof value.from==="string")&&(value.to===undefined||typeof value.to==="string"));}
return false;}
__exports.checkFilterFieldMatching=checkFilterFieldMatching;function checkFilterFieldMatching(fieldMatchings){for(const fieldMatch of Object.values(fieldMatchings)){if(fieldMatch.offset&&(!fieldMatch.chain||!fieldMatch.type)){return CommandResult.InvalidFieldMatch;}}
return CommandResult.Success;}
__exports.getDateRange=getDateRange;function getDateRange(value,offset=0){if(!value){return{};}
const now=DateTime.local();switch(value.type){case"month":case"quarter":case"year":return getFixedPeriodFromTo(now,offset,value);case"relative":return getRelativeDateFromTo(now,offset,value.period);case"range":return{from:value.from&&DateTime.fromISO(value.from).startOf("day"),to:value.to&&DateTime.fromISO(value.to).endOf("day"),};}}
function getFixedPeriodFromTo(now,offset,value){let granularity="year";const noYear=value.year===undefined;if(noYear){return{};}
const setParam={year:value.year};const plusParam={};switch(value.type){case"year":plusParam.year=offset;break;case"month":if(value.month!==undefined){granularity="month";setParam.month=value.month;plusParam.month=offset;}
break;case"quarter":if(value.quarter!==undefined){granularity="quarter";setParam.quarter=value.quarter;plusParam.quarter=offset;}
break;}
if("quarter"in setParam){setParam.month=setParam.quarter*3-2;delete setParam.quarter;}
const date=now.set(setParam).plus(plusParam||{});return{from:date.startOf(granularity),to:date.endOf(granularity),};}
__exports.getRelativeDateFromTo=getRelativeDateFromTo;function getRelativeDateFromTo(now,offset,period){const startOfNextDay=now.plus({days:1}).startOf("day");let to=now.endOf("day");let from=to;switch(period){case"today":{const offsetParam={days:offset};from=now.startOf("day").plus(offsetParam);to=now.endOf("day").plus(offsetParam);break;}
case"yesterday":{const offsetParam={days:offset};from=now.startOf("day").minus({days:1}).plus(offsetParam);to=now.endOf("day").minus({days:1}).plus(offsetParam);break;}
case"month_to_date":{const offsetParam={months:offset};from=now.startOf("month").plus(offsetParam);to=now.endOf("day").plus(offsetParam);break;}
case"last_month":{const offsetParam={months:offset};from=now.plus(offsetParam).minus({months:1}).startOf("month");to=now.plus(offsetParam).minus({months:1}).endOf("month");break;}
case"year_to_date":{const offsetParam={years:offset};from=now.startOf("year").plus(offsetParam);to=now.endOf("day").plus(offsetParam);break;}
case"last_7_days":{const offsetParam={days:7*offset};to=to.plus(offsetParam);from=startOfNextDay.minus({days:7}).plus(offsetParam);break;}
case"last_30_days":{const offsetParam={days:30*offset};to=to.plus(offsetParam);from=startOfNextDay.minus({days:30}).plus(offsetParam);break;}
case"last_90_days":{const offsetParam={days:90*offset};to=to.plus(offsetParam);from=startOfNextDay.minus({days:90}).plus(offsetParam);break;}
case"last_12_months":{const offsetParam={months:12*offset};to=startOfNextDay.minus({months:1}).endOf("month").plus(offsetParam);from=startOfNextDay.minus({months:12}).startOf("month").plus(offsetParam);break;}
default:return undefined;}
return{from,to};}
__exports.getNextDateFilterValue=getNextDateFilterValue;function getNextDateFilterValue(value){switch(value?.type){case"quarter":return{type:"quarter",year:value.quarter===4?value.year+1:value.year,quarter:value.quarter===4?1:value.quarter+1,};case"month":return{type:"month",year:value.month===12?value.year+1:value.year,month:value.month===12?1:value.month+1,};case"year":return{type:"year",year:value.year+1,};case"relative":return getNextRelativeDateFilterValue(value);case"range":return getNextRangeDateFilterValue(value);}
return undefined;}
__exports.getPreviousDateFilterValue=getPreviousDateFilterValue;function getPreviousDateFilterValue(value){switch(value?.type){case"quarter":return{type:"quarter",year:value.quarter===1?value.year-1:value.year,quarter:value.quarter===1?4:value.quarter-1,};case"month":return{type:"month",year:value.month===1?value.year-1:value.year,month:value.month===1?12:value.month-1,};case"year":return{type:"year",year:value.year-1,};case"relative":return getPreviousRelativeDateFilterValue(value);case"range":return getPreviousRangeDateFilterValue(value);}
return undefined;}
function getNextRelativeDateFilterValue(value){switch(value.period){case"today":case"yesterday":case"last_7_days":case"last_30_days":case"last_90_days":{const{from,to}=getRelativeDateFromTo(DateTime.local(),1,value.period);return{type:"range",from:from.toISODate(),to:to.toISODate(),};}
case"last_12_months":{const{from,to}=getRelativeDateFromTo(DateTime.local(),1,value.period);return{type:"range",from:from.startOf("month").toISODate(),to:to.endOf("month").toISODate(),};}
case"last_month":{const now=DateTime.local();return{type:"month",year:now.year,month:now.month,};}
case"month_to_date":{const now=DateTime.local().plus({months:1});return{type:"month",year:now.year,month:now.month,};}
case"year_to_date":{return{type:"year",year:DateTime.local().year+1,};}}}
function getPreviousRelativeDateFilterValue(value){switch(value.period){case"today":case"yesterday":case"last_7_days":case"last_30_days":case"last_90_days":{const{from,to}=getRelativeDateFromTo(DateTime.local(),-1,value.period);return{type:"range",from:from.toISODate(),to:to.toISODate(),};}
case"last_12_months":{const{from,to}=getRelativeDateFromTo(DateTime.local(),-1,value.period);return{type:"range",from:from.startOf("month").toISODate(),to:to.endOf("month").toISODate(),};}
case"last_month":{const now=DateTime.local().minus({months:2});return{type:"month",year:now.year,month:now.month,};}
case"month_to_date":{const now=DateTime.local().minus({months:1});return{type:"month",year:now.year,month:now.month,};}
case"year_to_date":{return{type:"year",year:DateTime.local().year-1,};}}}
__exports.getNextRangeDateFilterValue=getNextRangeDateFilterValue;function getNextRangeDateFilterValue(value){if(!value.from&&!value.to){return value;}
const from=DateTime.fromISO(value.from);const to=DateTime.fromISO(value.to);const days=to.diff(from,"days").days+1;return{type:"range",from:from.plus({days}).toISODate(),to:to.plus({days}).toISODate(),};}
__exports.getPreviousRangeDateFilterValue=getPreviousRangeDateFilterValue;function getPreviousRangeDateFilterValue(value){if(!value.from&&!value.to){return value;}
const from=DateTime.fromISO(value.from);const to=DateTime.fromISO(value.to);const days=to.diff(from,"days").days+1;return{type:"range",from:from.minus({days}).toISODate(),to:to.minus({days}).toISODate(),};}
__exports.getDateDomain=getDateDomain;function getDateDomain(from,to,field,fieldType){const serialize=fieldType==="date"?serializeDate:serializeDateTime;if(from&&to){return new Domain(["&",[field,">=",serialize(from)],[field,"<=",serialize(to)]]);}
if(from){return new Domain([[field,">=",serialize(from)]]);}
if(to){return new Domain([[field,"<=",serialize(to)]]);}
return new Domain();}
const TEXT_OPERATORS=["ilike","not ilike","starts_with"];__exports.getFilterTypeOperators=getFilterTypeOperators;function getFilterTypeOperators(filterType){if(filterType==="date"){return[];}
return FILTERS_BEHAVIORS[filterType].flatMap((entry)=>entry.operators);}
__exports.isTextualOperator=isTextualOperator;function isTextualOperator(operator){return TEXT_OPERATORS.includes(operator);}
__exports.isSetOperator=isSetOperator;function isSetOperator(operator){return SET_OPERATORS_BEHAVIORS.operators.includes(operator);}
__exports.getDefaultValue=getDefaultValue;function getDefaultValue(type){if(type==="date"){return undefined;}
const defaultOperator=FILTERS_BEHAVIORS[type][0].operators[0];return{operator:defaultOperator,...getEmptyFilterValue({type},defaultOperator),};}
function getFilterBehavior(filter,operator){const entry=FILTERS_BEHAVIORS[filter.type].find((entry)=>entry.operators.includes(operator));if(!entry){throw new Error(`No behavior found for filter type "${filter.type}" and operator "${operator}"`);}
return entry;}
__exports.getFilterValueDomain=getFilterValueDomain;function getFilterValueDomain(filter,filterValue,fieldPath){return getFilterBehavior(filter,filterValue.operator).toDomain(fieldPath,filterValue);}
__exports.getEmptyFilterValue=getEmptyFilterValue;function getEmptyFilterValue(filter,operator){if(filter.type==="date"){return undefined;}
return getFilterBehavior(filter,operator).defaultValue;}
__exports.isEmptyFilterValue=isEmptyFilterValue;function isEmptyFilterValue(filter,filterValue){if(!filterValue){return true;}
const emptyValue=getEmptyFilterValue(filter,filterValue.operator);if(!emptyValue){return false;}
for(const key in emptyValue){if(!deepEqual(emptyValue[key],filterValue[key])){return false;}}
return true;}
__exports.getFilterCellValue=getFilterCellValue;function getFilterCellValue(getters,filter,filterValue){return getFilterBehavior(filter,filterValue.operator).toCellValue(getters,filter,filterValue);}
__exports.getFacetInfo=getFacetInfo;async function getFacetInfo(env,filter,filterValue){let values;const separator=_t("or");switch(filter.type){case"date":{if(!filterValue){throw new Error("Should be defined at this point");}
values=[dateFilterValueToString(filterValue)];break;}
default:{values=await getFilterBehavior(filter,filterValue.operator).getSearchBarFacetValues(env,filter,filterValue);break;}}
return{title:filter.label,values,id:filter.id,separator,operator:getOperatorLabel(filterValue.operator),};}
function getOperatorLabel(operator){if(!operator){return"";}
switch(operator){case"=":case"in":case"set":case"not_set":return"";case"!=":case"not in":return _t("not");}
return getDomainOperatorLabel(operator);}
return __exports;});;

/* /spreadsheet/static/src/global_filters/index.js */
odoo.define('@spreadsheet/global_filters',['@odoo/o-spreadsheet','@spreadsheet/global_filters/plugins/global_filters_ui_plugin','@spreadsheet/global_filters/plugins/global_filters_core_plugin','@spreadsheet/global_filters/plugins/global_filters_core_view_plugin'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{GlobalFiltersUIPlugin}=require("@spreadsheet/global_filters/plugins/global_filters_ui_plugin");const{GlobalFiltersCorePlugin}=require("@spreadsheet/global_filters/plugins/global_filters_core_plugin");const{GlobalFiltersCoreViewPlugin}=require("@spreadsheet/global_filters/plugins/global_filters_core_view_plugin");const{inverseCommandRegistry}=spreadsheet.registries;function identity(cmd){return[cmd];}
const{coreTypes,invalidateEvaluationCommands,readonlyAllowedCommands}=spreadsheet;coreTypes.add("ADD_GLOBAL_FILTER");coreTypes.add("EDIT_GLOBAL_FILTER");coreTypes.add("REMOVE_GLOBAL_FILTER");coreTypes.add("MOVE_GLOBAL_FILTER");invalidateEvaluationCommands.add("ADD_GLOBAL_FILTER");invalidateEvaluationCommands.add("EDIT_GLOBAL_FILTER");invalidateEvaluationCommands.add("REMOVE_GLOBAL_FILTER");invalidateEvaluationCommands.add("SET_GLOBAL_FILTER_VALUE");readonlyAllowedCommands.add("SET_GLOBAL_FILTER_VALUE");readonlyAllowedCommands.add("SET_MANY_GLOBAL_FILTER_VALUE");readonlyAllowedCommands.add("UPDATE_OBJECT_DOMAINS");inverseCommandRegistry.add("EDIT_GLOBAL_FILTER",identity).add("ADD_GLOBAL_FILTER",(cmd)=>[{type:"REMOVE_GLOBAL_FILTER",id:cmd.filter.id,},]).add("REMOVE_GLOBAL_FILTER",(cmd)=>[{type:"ADD_GLOBAL_FILTER",filter:{},},]).add("MOVE_GLOBAL_FILTER",(cmd)=>[{type:"MOVE_GLOBAL_FILTER",id:cmd.id,delta:cmd.delta*-1,},]);Object.assign(__exports,{GlobalFiltersCorePlugin,GlobalFiltersCoreViewPlugin,GlobalFiltersUIPlugin});return __exports;});;

/* /spreadsheet/static/src/global_filters/plugins/global_filters_core_plugin.js */
odoo.define('@spreadsheet/global_filters/plugins/global_filters_core_plugin',['@spreadsheet/o_spreadsheet/cancelled_reason','@spreadsheet/global_filters/helpers','@web/core/l10n/translation','@web/core/utils/strings','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{checkFilterDefaultValueIsValid,globalFieldMatchingRegistry,}=require("@spreadsheet/global_filters/helpers");const{_t}=require("@web/core/l10n/translation");const{escapeRegExp}=require("@web/core/utils/strings");const{OdooCorePlugin}=require("@spreadsheet/plugins");const GlobalFiltersCorePlugin=__exports.GlobalFiltersCorePlugin=class GlobalFiltersCorePlugin extends OdooCorePlugin{static getters=(["getGlobalFilter","getGlobalFilters","getGlobalFilterDefaultValue","getGlobalFilterLabel","getFieldMatchingForModel",]);constructor(config){super(config);this.globalFilters=[];}
allowDispatch(cmd){switch(cmd.type){case"EDIT_GLOBAL_FILTER":if(!this.getGlobalFilter(cmd.filter.id)){return CommandResult.FilterNotFound;}else if(!cmd.filter.label){return CommandResult.InvalidFilterLabel;}else if(this._isDuplicatedLabel(cmd.filter.id,cmd.filter.label)){return CommandResult.DuplicatedFilterLabel;}
if(!checkFilterDefaultValueIsValid(cmd.filter,cmd.filter.defaultValue)){return CommandResult.InvalidValueTypeCombination;}
break;case"REMOVE_GLOBAL_FILTER":if(!this.getGlobalFilter(cmd.id)){return CommandResult.FilterNotFound;}
break;case"ADD_GLOBAL_FILTER":if(!cmd.filter.label){return CommandResult.InvalidFilterLabel;}else if(this._isDuplicatedLabel(cmd.filter.id,cmd.filter.label)){return CommandResult.DuplicatedFilterLabel;}
if(!checkFilterDefaultValueIsValid(cmd.filter,cmd.filter.defaultValue)){return CommandResult.InvalidValueTypeCombination;}
break;case"MOVE_GLOBAL_FILTER":{const index=this.globalFilters.findIndex((filter)=>filter.id===cmd.id);if(index===-1){return CommandResult.FilterNotFound;}
const targetIndex=index+cmd.delta;if(targetIndex<0||targetIndex>=this.globalFilters.length){return CommandResult.InvalidFilterMove;}
break;}}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"ADD_GLOBAL_FILTER":{const filter={...cmd.filter};if(filter.type==="text"&&filter.rangesOfAllowedValues?.length){filter.rangesOfAllowedValues=filter.rangesOfAllowedValues.map((rangeData)=>this.getters.getRangeFromRangeData(rangeData));}
this.history.update("globalFilters",[...this.globalFilters,filter]);break;}
case"EDIT_GLOBAL_FILTER":{this._editGlobalFilter(cmd.filter);break;}
case"REMOVE_GLOBAL_FILTER":{const filters=this.globalFilters.filter((filter)=>filter.id!==cmd.id);this.history.update("globalFilters",filters);break;}
case"MOVE_GLOBAL_FILTER":this._onMoveFilter(cmd.id,cmd.delta);break;}}
adaptRanges(applyChange){for(const filterIndex in this.globalFilters){const filter=this.globalFilters[filterIndex];if(filter.type==="text"&&filter.rangesOfAllowedValues){const ranges=filter.rangesOfAllowedValues.map((range)=>{const change=applyChange(range);switch(change.changeType){case"RESIZE":case"MOVE":case"CHANGE":{return change.range;}}}).filter(Boolean);this.history.update("globalFilters",filterIndex,"rangesOfAllowedValues",ranges.length?ranges:undefined);}}}
getGlobalFilter(id){return this.globalFilters.find((filter)=>filter.id===id);}
getGlobalFilterLabel(label){return this.globalFilters.find((filter)=>_t(filter.label)===_t(label));}
getGlobalFilters(){return[...this.globalFilters];}
getGlobalFilterDefaultValue(id){return this.getGlobalFilter(id).defaultValue;}
getFieldMatchingForModel(newModel){const globalFilters=this.getGlobalFilters();if(globalFilters.length===0){return{};}
for(const matcher of globalFieldMatchingRegistry.getAll()){for(const dataSourceId of matcher.getIds(this.getters)){const model=matcher.getModel(this.getters,dataSourceId);if(model===newModel){const fieldMatching={};for(const filter of globalFilters){const matchedField=matcher.getFieldMatching(this.getters,dataSourceId,filter.id);if(matchedField){fieldMatching[filter.id]={chain:matchedField.chain,type:matchedField.type,};}}
return fieldMatching;}}}
return{};}
_editGlobalFilter(cmdFilter){const rangesOfAllowedValues=cmdFilter.type==="text"&&cmdFilter.rangesOfAllowedValues?.length?cmdFilter.rangesOfAllowedValues.map((rangeData)=>this.getters.getRangeFromRangeData(rangeData)):undefined;const newFilter=cmdFilter.type==="text"?{...cmdFilter,rangesOfAllowedValues}:{...cmdFilter};const id=newFilter.id;const currentLabel=this.getGlobalFilter(id).label;const index=this.globalFilters.findIndex((filter)=>filter.id===id);if(index===-1){return;}
this.history.update("globalFilters",index,newFilter);const newLabel=this.getGlobalFilter(id).label;if(currentLabel!==newLabel){this._updateFilterLabelInFormulas(currentLabel,newLabel);}}
import(data){for(const globalFilter of data.globalFilters||[]){if(globalFilter.type==="text"&&globalFilter.rangesOfAllowedValues?.length){globalFilter.rangesOfAllowedValues=globalFilter.rangesOfAllowedValues.map((xc)=>this.getters.getRangeFromSheetXC(data.sheets[0].id,xc));}
this.globalFilters.push(globalFilter);}}
export(data){data.globalFilters=this.globalFilters.map((filter)=>{const filterData={...filter};if(filter.type==="text"&&filter.rangesOfAllowedValues?.length){filterData.rangesOfAllowedValues=filter.rangesOfAllowedValues.map((range)=>this.getters.getRangeString(range,""));}
return filterData;});}
_updateFilterLabelInFormulas(currentLabel,newLabel){const sheetIds=this.getters.getSheetIds();currentLabel=escapeRegExp(currentLabel);for(const sheetId of sheetIds){for(const cell of Object.values(this.getters.getCells(sheetId))){if(cell.isFormula){const newContent=cell.content.replace(new RegExp(`FILTER\\.VALUE\\(\\s*"${currentLabel}"\\s*\\)`,"g"),`FILTER.VALUE("${newLabel}")`);if(newContent!==cell.content){const{col,row}=this.getters.getCellPosition(cell.id);this.dispatch("UPDATE_CELL",{sheetId,content:newContent,col,row,});}}}}}
_isDuplicatedLabel(filterId,label){return(this.globalFilters.findIndex((filter)=>(!filterId||filter.id!==filterId)&&filter.label===label)>-1);}
_onMoveFilter(filterId,delta){const filters=[...this.globalFilters];const currentIndex=filters.findIndex((s)=>s.id===filterId);const filter=filters[currentIndex];const targetIndex=currentIndex+delta;filters.splice(currentIndex,1);filters.splice(targetIndex,0,filter);this.history.update("globalFilters",filters);}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/plugins/global_filters_core_view_plugin.js */
odoo.define('@spreadsheet/global_filters/plugins/global_filters_core_view_plugin',['@web/core/l10n/translation','@web/core/domain','@web/core/user','@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/cancelled_reason','@spreadsheet/global_filters/helpers','@spreadsheet/plugins','@spreadsheet/helpers/model','@web/core/l10n/dates'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{user}=require("@web/core/user");const{EvaluationError,helpers}=require("@odoo/o-spreadsheet");const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{checkFilterValueIsValid,getDateDomain,getDateRange,}=require("@spreadsheet/global_filters/helpers");const{OdooCoreViewPlugin}=require("@spreadsheet/plugins");const{getItemId}=require("@spreadsheet/helpers/model");const{serializeDate}=require("@web/core/l10n/dates");const{getFilterCellValue,getFilterValueDomain}=require("@spreadsheet/global_filters/helpers");const{DateTime}=luxon;const{UuidGenerator,createEmptyExcelSheet,createEmptySheet,toXC,toNumber}=helpers;const uuidGenerator=new UuidGenerator();const GlobalFiltersCoreViewPlugin=__exports.GlobalFiltersCoreViewPlugin=class GlobalFiltersCoreViewPlugin extends OdooCoreViewPlugin{static getters=(["exportSheetWithActiveFilters","getFilterDisplayValue","getGlobalFilterDomain","getGlobalFilterValue","getActiveFilterCount","isGlobalFilterActive","getTextFilterOptions","getTextFilterOptionsFromRanges",]);constructor(config){super(config);this.values={};}
allowDispatch(cmd){switch(cmd.type){case"SET_GLOBAL_FILTER_VALUE":{const filter=this.getters.getGlobalFilter(cmd.id);if(!filter){return CommandResult.FilterNotFound;}
if(!checkFilterValueIsValid(filter,cmd.value)){return CommandResult.InvalidValueTypeCombination;}
break;}}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"SET_GLOBAL_FILTER_VALUE":if(cmd.value===undefined){this._clearGlobalFilterValue(cmd.id);}else{this._setGlobalFilterValue(cmd.id,cmd.value);}
break;case"REMOVE_GLOBAL_FILTER":delete this.values[cmd.id];break;}}
getGlobalFilterDomain(filterId,fieldMatching){const filter=this.getters.getGlobalFilter(filterId);if(!filter){return new Domain();}
const value=this.getGlobalFilterValue(filter.id);const field=fieldMatching.chain;if(!field||!value){return new Domain();}else if(filter.type==="date"){return this._getDateDomain(filter,fieldMatching);}else{return getFilterValueDomain(filter,value,field);}}
getGlobalFilterValue(filterId){const filter=this.getters.getGlobalFilter(filterId);const value=filterId in this.values?this.values[filterId].value:undefined;if(value!==undefined){return value;}
const preventDefaultValue=this.values[filterId]?.preventDefaultValue;if(preventDefaultValue||filter.defaultValue===undefined){return undefined;}
switch(filter.type){case"date":return this._getDateValueFromDefaultValue(filter.defaultValue);case"relation":if(filter.defaultValue.ids==="current_user"){return{...filter.defaultValue,ids:[user.userId]};}
return filter.defaultValue;default:return filter.defaultValue;}}
isGlobalFilterActive(id){return this.getGlobalFilterValue(id)!==undefined;}
getActiveFilterCount(){return this.getters.getGlobalFilters().filter((filter)=>this.isGlobalFilterActive(filter.id)).length;}
getFilterDisplayValue(filterName){const filter=this.getters.getGlobalFilterLabel(filterName);if(!filter){throw new EvaluationError(_t(`Filter "%(filter_name)s" not found`,{filter_name:filterName}));}
switch(filter.type){case"date":return this._getDateFilterDisplayValue(filter);default:{const value=this.getGlobalFilterValue(filter.id);if(!value){return[[{value:""}]];}
return getFilterCellValue(this.getters,filter,value);}}}
getTextFilterOptions(filterId){const filter=this.getters.getGlobalFilter(filterId);if(filter.type!=="text"||!filter.rangesOfAllowedValues){return[];}
const additionOptions=[...(this.getGlobalFilterValue(filterId)?.strings??[]),...(filter.defaultValue?.strings??[]),];const options=this.getTextFilterOptionsFromRanges(filter.rangesOfAllowedValues,additionOptions);return options;}
getTextFilterOptionsFromRanges(ranges,additionalOptionValues=[]){const cells=ranges.flatMap((range)=>this.getters.getEvaluatedCellsInZone(range.sheetId,range.zone));const uniqueFormattedValues=new Set();const uniqueValues=new Set();const allowedValues=cells.filter((cell)=>!["empty","error"].includes(cell.type)&&cell.value!=="").map((cell)=>({value:cell.value.toString(),formattedValue:cell.formattedValue,})).filter((cell)=>{if(uniqueFormattedValues.has(cell.formattedValue)){return false;}
uniqueFormattedValues.add(cell.formattedValue);uniqueValues.add(cell.value);return true;});const additionalOptions=additionalOptionValues.map((value)=>({value,formattedValue:value})).filter((cell)=>{if(cell.value===undefined||cell.value===""||uniqueValues.has(cell.value)){return false;}
uniqueValues.add(cell.value);return true;});return allowedValues.concat(additionalOptions);}
_setGlobalFilterValue(id,value){this.values[id]={preventDefaultValue:false,value,};}
_clearGlobalFilterValue(id){this.values[id]={preventDefaultValue:true,value:undefined,};}
_getDateFilterDisplayValue(filter){const{from,to}=getDateRange(this.getGlobalFilterValue(filter.id));const locale=this.getters.getLocale();const _from={value:from?toNumber(serializeDate(from),locale):"",format:locale.dateFormat,};const _to={value:to?toNumber(serializeDate(to),locale):"",format:locale.dateFormat,};return[[_from],[_to]];}
_getDateValueFromDefaultValue(defaultValue){const year=DateTime.local().year;switch(defaultValue){case"this_year":return{type:"year",year};case"this_month":{const month=DateTime.local().month;return{type:"month",year,month};}
case"this_quarter":{const quarter=Math.floor(new Date().getMonth()/3)+1;return{type:"quarter",year,quarter};}
case"today":case"yesterday":case"last_7_days":case"last_30_days":case"last_90_days":case"month_to_date":case"last_month":case"last_12_months":case"year_to_date":return{type:"relative",period:defaultValue,};}
return undefined;}
_getDateDomain(filter,fieldMatching){if(!fieldMatching.chain){return new Domain();}
const field=fieldMatching.chain;const type=(fieldMatching.type);const offset=fieldMatching.offset||0;const{from,to}=getDateRange(this.getGlobalFilterValue(filter.id),offset);return getDateDomain(from,to,field,type);}
exportForExcel(data){if(this.getters.getGlobalFilters().length===0){return;}
this.exportSheetWithActiveFilters(data);data.sheets[data.sheets.length-1]={...createEmptyExcelSheet(uuidGenerator.smallUuid(),_t("Active Filters")),...data.sheets.at(-1),};}
exportSheetWithActiveFilters(data){if(this.getters.getGlobalFilters().length===0){return;}
const cells={A1:"Filter",B1:"Value",};const formats={};let numberOfCols=2;let filterRowIndex=1;for(const filter of this.getters.getGlobalFilters()){cells[`A${filterRowIndex + 1}`]=filter.label;const result=this.getFilterDisplayValue(filter.label);for(const colIndex in result){numberOfCols=Math.max(numberOfCols,Number(colIndex)+2);for(const rowIndex in result[colIndex]){const cell=result[colIndex][rowIndex];if(cell.value===undefined){continue;}
const xc=toXC(Number(colIndex)+1,Number(rowIndex)+filterRowIndex);cells[xc]=cell.value.toString();if(cell.format){const formatId=getItemId(cell.format,data.formats);formats[xc]=formatId;}}}
filterRowIndex+=result[0].length;}
const styleId=getItemId({bold:true},data.styles);const sheet={...createEmptySheet(uuidGenerator.smallUuid(),_t("Active Filters")),cells,formats,styles:{A1:styleId,B1:styleId,},colNumber:numberOfCols,rowNumber:filterRowIndex,};data.sheets.push(sheet);}}
return __exports;});;

/* /spreadsheet/static/src/global_filters/plugins/global_filters_ui_plugin.js */
odoo.define('@spreadsheet/global_filters/plugins/global_filters_ui_plugin',['@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{OdooUIPlugin}=require("@spreadsheet/plugins");const GlobalFiltersUIPlugin=__exports.GlobalFiltersUIPlugin=class GlobalFiltersUIPlugin extends OdooUIPlugin{handle(cmd){switch(cmd.type){case"SET_MANY_GLOBAL_FILTER_VALUE":for(const filter of cmd.filters){this.dispatch("SET_GLOBAL_FILTER_VALUE",{id:filter.filterId,value:filter.value,});}
break;}}}
return __exports;});;

/* /spreadsheet/static/src/helpers/constants.js */
odoo.define('@spreadsheet/helpers/constants',['@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const DEFAULT_LINES_NUMBER=__exports.DEFAULT_LINES_NUMBER=20;const UNTITLED_SPREADSHEET_NAME=__exports.UNTITLED_SPREADSHEET_NAME=_t("Untitled spreadsheet");return __exports;});;

/* /spreadsheet/static/src/helpers/geo_json_service.js */
odoo.define('@spreadsheet/helpers/geo_json_service',['@web/core/l10n/translation','@web/core/registry'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const diacriticalMarksRegex=/[\u0300-\u036f]/g;function normalizeFeatureName(name){return name.normalize("NFD").replace(diacriticalMarksRegex,"").toLowerCase();}
const geoJsonService=__exports.geoJsonService={dependencies:["orm"],start(env,{orm}){const geoJsonPromises=new Map();const geoJsonCache=new Map();let usaStatesMapping=undefined;let countriesMapping=undefined;let countriesMappingPromise=undefined;let usStatesMappingPromise=undefined;async function getRegionAndFetchMapping(region){const featurePromise=fetchJsonFromServer(`/spreadsheet/static/topojson/${region}.topo.json`);const mappingPromise=region==="usa"?getUsaStatesMapping():getCountriesMapping();return Promise.all([featurePromise,mappingPromise]);}
async function getUsaStatesMapping(){if(usaStatesMapping){return usaStatesMapping;}
if(usStatesMappingPromise){return usStatesMappingPromise;}
usStatesMappingPromise=orm.searchRead("res.country.state",[["country_id.code","=","US"]],["name","code"]).then((usStates)=>{const mapping={};for(const state of usStates){mapping[normalizeFeatureName(state.name)]=state.code;mapping[normalizeFeatureName(state.code)]=state.code;}
usaStatesMapping=mapping;usStatesMappingPromise=undefined;return mapping;}).catch((e)=>{console.error(e);usaStatesMapping={};usStatesMappingPromise=undefined;return{};});return usStatesMappingPromise;}
async function getCountriesMapping(){if(countriesMapping){return countriesMapping;}
if(countriesMappingPromise){return countriesMappingPromise;}
countriesMappingPromise=orm.searchRead("res.country",[],["name","code"]).then((resCountries)=>{const mapping={};for(const country of resCountries){mapping[normalizeFeatureName(country.name)]=country.code;mapping[normalizeFeatureName(country.code)]=country.code;}
countriesMapping=mapping;countriesMappingPromise=undefined;return mapping;}).catch((e)=>{console.error(e);countriesMapping={};countriesMappingPromise=undefined;return{};});return countriesMappingPromise;}
async function fetchJsonFromServer(url){if(geoJsonCache.has(url)){return geoJsonCache.get(url);}
if(geoJsonPromises.has(url)){return geoJsonPromises.get(url);}
const promise=fetch(url,{method:"GET"}).then((res)=>res.json()).then((geoJson)=>{geoJsonCache.set(url,geoJson);geoJsonPromises.delete(url);return geoJson;}).catch((e)=>{console.error(e);geoJsonCache.set(url,{type:"FeatureCollection",features:[]});geoJsonPromises.delete(url);return geoJsonCache.get(url);});geoJsonPromises.set(url,promise);return promise;}
const stateNameRegex=/(.*?)(\(.*\))?$/;return{getAvailableRegions:()=>[{id:"world",label:_t("World"),defaultProjection:"mercator"},{id:"africa",label:_t("Africa"),defaultProjection:"mercator"},{id:"asia",label:_t("Asia"),defaultProjection:"mercator"},{id:"europe",label:_t("Europe"),defaultProjection:"mercator"},{id:"north_america",label:_t("North America"),defaultProjection:"conicConformal",},{id:"usa",label:_t("United States"),defaultProjection:"albersUsa"},{id:"south_america",label:_t("South America"),defaultProjection:"mercator"},],getTopoJson:async function(region){const[topoJson]=await getRegionAndFetchMapping(region);return topoJson;},geoFeatureNameToId:function(region,name){if(region==="usa"){const match=name.match(stateNameRegex);if(match){name=match[1].trim();}}
name=normalizeFeatureName(name);const mapping=region==="usa"?usaStatesMapping:countriesMapping;return mapping?.[name];},};},};registry.category("services").add("geo_json_service",geoJsonService);return __exports;});;

/* /spreadsheet/static/src/helpers/helpers.js */
odoo.define('@spreadsheet/helpers/helpers',[],function(require){'use strict';let __exports={};__exports.intersect=intersect;function intersect(a,b){return a.filter((x)=>b.includes(x));}
__exports.toServerDateString=toServerDateString;function toServerDateString(value){return`${value.getFullYear()}-${value.getMonth() + 1}-${value.getDate()}`;}
__exports.sum=sum;function sum(array){return array.reduce((acc,n)=>acc+n,0);}
function camelToSnakeKey(word){const result=word.replace(/(.){1}([A-Z])/g,"$1 $2");return result.split(" ").join("_").toLowerCase();}
__exports.camelToSnakeObject=camelToSnakeObject;function camelToSnakeObject(obj){const result={};for(const[key,value]of Object.entries(obj)){const isPojo=typeof value==="object"&&value!==null&&value.constructor===Object;result[camelToSnakeKey(key)]=isPojo?camelToSnakeObject(value):value;}
return result;}
__exports.isEmpty=isEmpty;function isEmpty(item){if(!item){return true;}
if(typeof item==="object"){if(Object.values(item).length===0||Object.values(item).every((val)=>val===undefined)){return true;}}
return false;}
__exports.containsReferences=containsReferences;function containsReferences(cell){if(!cell.isFormula){return false;}
return cell.compiledFormula.tokens.some((token)=>token.type==="REFERENCE");}
return __exports;});;

/* /spreadsheet/static/src/helpers/model.js */
odoo.define('@spreadsheet/helpers/model',['@odoo/o-spreadsheet','@spreadsheet/o_spreadsheet/errors','@spreadsheet/model','@spreadsheet/data_sources/odoo_data_provider','@spreadsheet/ir_ui_menu/odoo_menu_link_cell'],function(require){'use strict';let __exports={};const{parse,helpers,iterateAstNodes}=require("@odoo/o-spreadsheet");const{isLoadingError}=require("@spreadsheet/o_spreadsheet/errors");const{OdooSpreadsheetModel}=require("@spreadsheet/model");const{OdooDataProvider}=require("@spreadsheet/data_sources/odoo_data_provider");const{formatValue,isDefined,toCartesian,toXC}=helpers;const{isMarkdownViewUrl,isMarkdownIrMenuIdUrl,isIrMenuXmlUrl,}=require("@spreadsheet/ir_ui_menu/odoo_menu_link_cell");__exports.fetchSpreadsheetModel=fetchSpreadsheetModel;async function fetchSpreadsheetModel(env,resModel,resId){const{data,revisions}=await env.services.http.get(`/spreadsheet/data/${resModel}/${resId}`);return createSpreadsheetModel({env,data,revisions});}
__exports.createSpreadsheetModel=createSpreadsheetModel;function createSpreadsheetModel({env,data,revisions}){const odooDataProvider=new OdooDataProvider(env);const model=new OdooSpreadsheetModel(data,{custom:{odooDataProvider}},revisions);return model;}
__exports.waitForOdooSources=waitForOdooSources;async function waitForOdooSources(model){const promises=model.getters.getOdooChartIds().map((chartId)=>model.getters.getChartDataSource(chartId).load());promises.push(...model.getters.getPivotIds().filter((pivotId)=>model.getters.getPivotCoreDefinition(pivotId).type==="ODOO").map((pivotId)=>model.getters.getPivot(pivotId)).map((pivot)=>pivot.load()));promises.push(...model.getters.getListIds().map((listId)=>model.getters.getListDataSource(listId)).map((list)=>list.load()));await Promise.all(promises);}
__exports.waitForDataLoaded=waitForDataLoaded;async function waitForDataLoaded(model){await waitForOdooSources(model);const odooDataProvider=model.config.custom.odooDataProvider;if(!odooDataProvider){return;}
await new Promise((resolve,reject)=>{function check(){model.dispatch("EVALUATE_CELLS");if(isLoaded(model)){odooDataProvider.removeEventListener("data-source-updated",check);resolve();}}
odooDataProvider.addEventListener("data-source-updated",check);check();});}
function containsLinkToOdoo(link){if(link&&link.url){return(isMarkdownViewUrl(link.url)||isIrMenuXmlUrl(link.url)||isMarkdownIrMenuIdUrl(link.url));}}
__exports.freezeOdooData=freezeOdooData;async function freezeOdooData(model){await waitForDataLoaded(model);const data=model.exportData();for(const sheet of Object.values(data.sheets)){sheet.formats??={};for(const[xc,content]of Object.entries(sheet.cells)){const{col,row}=toCartesian(xc);const sheetId=sheet.id;const position={sheetId,col,row};const evaluatedCell=model.getters.getEvaluatedCell(position);if(containsOdooFunction(content)){const pivotId=model.getters.getPivotIdFromPosition(position);if(pivotId&&model.getters.getPivotCoreDefinition(pivotId).type!=="ODOO"){continue;}
sheet.cells[xc]=evaluatedCell.value.toString();if(evaluatedCell.format){sheet.formats[xc]=getItemId(evaluatedCell.format,data.formats);}
const spreadZone=model.getters.getSpreadZone(position);if(spreadZone){const{left,right,top,bottom}=spreadZone;for(let row=top;row<=bottom;row++){for(let col=left;col<=right;col++){const xc=toXC(col,row);const evaluatedCell=model.getters.getEvaluatedCell({sheetId,col,row,});sheet.cells[xc]=evaluatedCell.value.toString();if(evaluatedCell.format){sheet.formats[xc]=getItemId(evaluatedCell.format,data.formats);}}}}}
if(containsLinkToOdoo(evaluatedCell.link)){sheet.cells[xc]=evaluatedCell.link.label;}}
for(const figure of sheet.figures){if(figure.tag==="chart"&&(figure.data.type.startsWith("odoo_")||figure.data.type==="geo")){const img=odooChartToImage(model,figure);figure.tag="image";figure.data={path:img,size:{width:figure.width,height:figure.height},};}}}
if(data.pivots){data.pivots=Object.fromEntries(Object.entries(data.pivots).filter(([id,def])=>def.type!=="ODOO"));}
data.lists={};exportGlobalFiltersToSheet(model,data);return data;}
function exportGlobalFiltersToSheet(model,data){model.getters.exportSheetWithActiveFilters(data);const locale=model.getters.getLocale();for(const filter of data.globalFilters){const content=model.getters.getFilterDisplayValue(filter.label);filter["value"]=content.flat().filter(isDefined).map(({value,format})=>formatValue(value,{format,locale})).filter((formattedValue)=>formattedValue!=="").join(", ");}}
__exports.getItemId=getItemId;function getItemId(item,itemsDic){for(const[key,value]of Object.entries(itemsDic)){if(value===item){return parseInt(key,10);}}
const ids=Object.keys(itemsDic);const maxId=ids.length===0?0:Math.max(...ids.map((id)=>parseInt(id,10)));itemsDic[maxId+1]=item;return maxId+1;}
function containsOdooFunction(content){if(!content||!content.startsWith("=")||(!content.toUpperCase().includes("ODOO.")&&!content.toUpperCase().includes("_T")&&!content.toUpperCase().includes("PIVOT"))){return false;}
try{const ast=parse(content);return iterateAstNodes(ast).some((ast)=>ast.type==="FUNCALL"&&(ast.value.toUpperCase().startsWith("ODOO.")||ast.value.toUpperCase().startsWith("_T")||ast.value.toUpperCase().startsWith("PIVOT")));}catch{return false;}}
function isLoaded(model){for(const sheetId of model.getters.getSheetIds()){for(const cell of Object.values(model.getters.getEvaluatedCells(sheetId))){if(cell.type==="error"&&isLoadingError(cell)){return false;}}}
return true;}
function odooChartToImage(model,figure){const runtime=model.getters.getChartRuntime(figure.id);const div=document.createElement("div");div.style.width=`${figure.width}px`;div.style.height=`${figure.height}px`;const canvas=document.createElement("canvas");div.append(canvas);canvas.setAttribute("width",figure.width);canvas.setAttribute("height",figure.height);document.body.append(div);if(!("chartJsConfig"in runtime)){return"";}
runtime.chartJsConfig.plugins=[backgroundColorPlugin];const chart=new Chart(canvas,runtime.chartJsConfig);const img=chart.toBase64Image();chart.destroy();div.remove();return img;}
const backgroundColorPlugin={id:"customCanvasBackgroundColor",beforeDraw:(chart,args,options)=>{const{ctx}=chart;ctx.save();ctx.globalCompositeOperation="destination-over";ctx.fillStyle="#ffffff";ctx.fillRect(0,0,chart.width,chart.height);ctx.restore();},};return __exports;});;

/* /spreadsheet/static/src/helpers/odoo_functions_helpers.js */
odoo.define('@spreadsheet/helpers/odoo_functions_helpers',[],function(require){'use strict';let __exports={};__exports.extractDataSourceId=extractDataSourceId;function extractDataSourceId(tokenAtCursor){const idAst=tokenAtCursor.functionContext?.args[0];if(!idAst||!["STRING","NUMBER"].includes(idAst.type)){return;}
return idAst.value;}
return __exports;});;

/* /spreadsheet/static/src/hooks.js */
odoo.define('@spreadsheet/hooks',['@web/core/l10n/translation','@web/core/utils/hooks','@web/core/confirmation_dialog/confirmation_dialog','@odoo/o-spreadsheet','@odoo/owl','@web/core/assets'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{useService}=require("@web/core/utils/hooks");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{stores}=require("@odoo/o-spreadsheet");const{useEffect,useExternalListener,useState}=require("@odoo/owl");const{loadBundle}=require("@web/core/assets");const{useStore,useStoreProvider,NotificationStore}=stores;__exports.useSpreadsheetPrint=useSpreadsheetPrint;function useSpreadsheetPrint(model){let frozenPrintState=undefined;const printState=useState({active:false});useExternalListener(window,"keydown",async(ev)=>{const isMeta=ev.metaKey||ev.ctrlKey;if(ev.key==="p"&&isMeta){if(!model()){return;}
ev.preventDefault();ev.stopImmediatePropagation();await preparePrint();}},{capture:true});useExternalListener(window,"afterprint",afterPrint);useEffect(()=>{if(printState.active){window.print();}},()=>[printState.active]);function getPrintRect(){const sheetId=model().getters.getActiveSheetId();const{bottom,right}=model().getters.getSheetZone(sheetId);const{end:width}=model().getters.getColDimensions(sheetId,right);const{end:height}=model().getters.getRowDimensions(sheetId,bottom);return{x:0,y:0,width,height};}
async function preparePrint(){if(!model()){return;}
await loadBundle("spreadsheet.assets_print");const{width,height}=model().getters.getSheetViewDimension();const{width:widthAndHeader,height:heightAndHeader}=model().getters.getSheetViewDimension();const viewRect={x:widthAndHeader-width,y:heightAndHeader-height,width,height,};frozenPrintState={viewRect,offset:model().getters.getActiveSheetScrollInfo(),mode:model().config.mode,};model().updateMode("dashboard");model().dispatch("SET_VIEWPORT_OFFSET",{offsetX:0,offsetY:0});model().dispatch("RESIZE_SHEETVIEW",{...getPrintRect(),});printState.active=true;}
function afterPrint(){if(!model()){return;}
if(frozenPrintState){model().dispatch("RESIZE_SHEETVIEW",frozenPrintState.viewRect);const{scrollX:offsetX,scrollY:offsetY}=frozenPrintState.offset;model().dispatch("SET_VIEWPORT_OFFSET",{offsetX,offsetY});model().updateMode(frozenPrintState.mode);frozenPrintState=undefined;}
printState.active=false;}
return preparePrint;}
__exports.useSpreadsheetNotificationStore=useSpreadsheetNotificationStore;function useSpreadsheetNotificationStore(){function askConfirmation(body,confirm){dialog.add(ConfirmationDialog,{title:_t("Odoo Spreadsheet"),body,confirm,cancel:()=>{},confirmLabel:_t("Confirm"),});}
function notifyUser(notification){notifications.add(notification.text,{type:notification.type,sticky:notification.sticky,});}
function raiseError(body,callBack){dialog.add(ConfirmationDialog,{title:_t("Odoo Spreadsheet"),body,},{onClose:callBack,});}
const dialog=useService("dialog");const notifications=useService("notification");useStoreProvider();const notificationStore=useStore(NotificationStore);notificationStore.updateNotificationCallbacks({notifyUser:notifyUser,raiseError:raiseError,askConfirmation:askConfirmation,});}
return __exports;});;

/* /spreadsheet/static/src/index.js */
odoo.define('@spreadsheet',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/global_filters','@spreadsheet/pivot','@spreadsheet/list','@spreadsheet/chart','@spreadsheet/pivot/plugins/pivot_core_global_filter_plugin','@spreadsheet/pivot/plugins/pivot_odoo_ui_plugin','@spreadsheet/list/plugins/list_core_global_filter_plugin','@spreadsheet/global_filters/helpers'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{corePluginRegistry,coreViewsPluginRegistry,featurePluginRegistry}=spreadsheet.registries;const{GlobalFiltersCorePlugin,GlobalFiltersUIPlugin,GlobalFiltersCoreViewPlugin,}=require("@spreadsheet/global_filters");const{PivotOdooCorePlugin,PivotCoreViewGlobalFilterPlugin,PivotUIGlobalFilterPlugin,}=require("@spreadsheet/pivot");const{ListCorePlugin,ListCoreViewPlugin,ListUIPlugin}=require("@spreadsheet/list");const{ChartOdooMenuPlugin,OdooChartCorePlugin,OdooChartUIPlugin,}=require("@spreadsheet/chart");const{PivotCoreGlobalFilterPlugin}=require("@spreadsheet/pivot/plugins/pivot_core_global_filter_plugin");const{PivotOdooUIPlugin}=require("@spreadsheet/pivot/plugins/pivot_odoo_ui_plugin");const{ListCoreGlobalFilterPlugin}=require("@spreadsheet/list/plugins/list_core_global_filter_plugin");const{globalFieldMatchingRegistry}=require("@spreadsheet/global_filters/helpers");globalFieldMatchingRegistry.add("pivot",{getIds:(getters)=>getters.getPivotIds().filter((id)=>getters.getPivotCoreDefinition(id).type==="ODOO"&&getters.getPivotFieldMatch(id)),getDisplayName:(getters,pivotId)=>getters.getPivotName(pivotId),getTag:(getters,pivotId)=>_t("Pivot #%(pivot_id)s",{pivot_id:getters.getPivotFormulaId(pivotId)}),getFieldMatching:(getters,pivotId,filterId)=>getters.getPivotFieldMatching(pivotId,filterId),getModel:(getters,pivotId)=>{const pivot=getters.getPivotCoreDefinition(pivotId);return pivot.type==="ODOO"&&pivot.model;},waitForReady:(getters)=>getters.getPivotIds().map((pivotId)=>getters.getPivot(pivotId)).filter((pivot)=>pivot.type==="ODOO").map((pivot)=>pivot.loadMetadata()),getFields:(getters,pivotId)=>getters.getPivot(pivotId).getFields(),getActionXmlId:(getters,pivotId)=>getters.getPivotCoreDefinition(pivotId).actionXmlId,});globalFieldMatchingRegistry.add("list",{getIds:(getters)=>getters.getListIds().filter((id)=>getters.getListFieldMatch(id)),getDisplayName:(getters,listId)=>getters.getListName(listId),getTag:(getters,listId)=>_t(`List #%(list_id)s`,{list_id:listId}),getFieldMatching:(getters,listId,filterId)=>getters.getListFieldMatching(listId,filterId),getModel:(getters,listId)=>getters.getListDefinition(listId).model,waitForReady:(getters)=>getters.getListIds().map((listId)=>getters.getListDataSource(listId).loadMetadata()),getFields:(getters,listId)=>getters.getListDataSource(listId).getFields(),getActionXmlId:(getters,listId)=>getters.getListDefinition(listId).actionXmlId,});globalFieldMatchingRegistry.add("chart",{getIds:(getters)=>getters.getOdooChartIds(),getDisplayName:(getters,chartId)=>getters.getOdooChartDisplayName(chartId),getFieldMatching:(getters,chartId,filterId)=>getters.getOdooChartFieldMatching(chartId,filterId),getModel:(getters,chartId)=>getters.getChart(chartId).getDefinitionForDataSource().metaData.resModel,getTag:async(getters,chartId)=>{const chartModel=await getters.getChartDataSource(chartId).getModelLabel();return _t("Chart - %(chart_model)s",{chart_model:chartModel});},waitForReady:(getters)=>getters.getOdooChartIds().map((chartId)=>getters.getChartDataSource(chartId).loadMetadata()),getFields:(getters,chartId)=>getters.getChartDataSource(chartId).getFields(),getActionXmlId:(getters,chartId)=>getters.getChartDefinition(chartId).actionXmlId,});corePluginRegistry.add("OdooGlobalFiltersCorePlugin",GlobalFiltersCorePlugin);corePluginRegistry.add("PivotOdooCorePlugin",PivotOdooCorePlugin);corePluginRegistry.add("OdooPivotGlobalFiltersCorePlugin",PivotCoreGlobalFilterPlugin);corePluginRegistry.add("OdooListCorePlugin",ListCorePlugin);corePluginRegistry.add("OdooListCoreGlobalFilterPlugin",ListCoreGlobalFilterPlugin);corePluginRegistry.add("odooChartCorePlugin",OdooChartCorePlugin);corePluginRegistry.add("chartOdooMenuPlugin",ChartOdooMenuPlugin);coreViewsPluginRegistry.add("OdooGlobalFiltersCoreViewPlugin",GlobalFiltersCoreViewPlugin);coreViewsPluginRegistry.add("OdooPivotGlobalFiltersCoreViewPlugin",PivotCoreViewGlobalFilterPlugin);coreViewsPluginRegistry.add("OdooListCoreViewPlugin",ListCoreViewPlugin);coreViewsPluginRegistry.add("odooChartUIPlugin",OdooChartUIPlugin);featurePluginRegistry.add("OdooPivotGlobalFilterUIPlugin",PivotUIGlobalFilterPlugin);featurePluginRegistry.add("OdooGlobalFiltersUIPlugin",GlobalFiltersUIPlugin);featurePluginRegistry.add("odooPivotUIPlugin",PivotOdooUIPlugin);featurePluginRegistry.add("odooListUIPlugin",ListUIPlugin);return __exports;});;

/* /spreadsheet/static/src/ir_ui_menu/index.js */
odoo.define('@spreadsheet/ir_ui_menu',['@web/core/registry','@odoo/o-spreadsheet','@spreadsheet/ir_ui_menu/ir_ui_menu_plugin','@spreadsheet/ir_ui_menu/odoo_menu_link_cell','@web/core/l10n/translation','@web/core/utils/strings','@spreadsheet/actions/helpers'],function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const spreadsheet=require("@odoo/o-spreadsheet");const{IrMenuPlugin}=require("@spreadsheet/ir_ui_menu/ir_ui_menu_plugin");const{isMarkdownIrMenuIdUrl,isIrMenuXmlUrl,isMarkdownViewUrl,parseIrMenuXmlUrl,parseViewLink,parseIrMenuIdLink,}=require("@spreadsheet/ir_ui_menu/odoo_menu_link_cell");const{_t}=require("@web/core/l10n/translation");const{sprintf}=require("@web/core/utils/strings");const{navigateTo}=require("@spreadsheet/actions/helpers");const{urlRegistry,corePluginRegistry,errorTypes}=spreadsheet.registries;const{EvaluationError}=spreadsheet;corePluginRegistry.add("ir_ui_menu_plugin",IrMenuPlugin);const LINK_ERROR="#LINK";errorTypes.add(LINK_ERROR);class BadOdooLinkError extends EvaluationError{constructor(menuId){super(sprintf(_t("Menu %s not found. You may not have the required access rights."),menuId),LINK_ERROR);}}
const spreadsheetLinkMenuCellService=__exports.spreadsheetLinkMenuCellService={dependencies:["menu"],start(env){function _getIrMenuByXmlId(xmlId){const menu=env.services.menu.getAll().find((menu)=>menu.xmlid===xmlId);if(!menu){throw new BadOdooLinkError(xmlId);}
return menu;}
urlRegistry.replace("OdooMenuIdLink",{sequence:65,match:isMarkdownIrMenuIdUrl,createLink(url,label){const menuId=parseIrMenuIdLink(url);const menu=env.services.menu.getMenu(menuId);if(!menu){throw new BadOdooLinkError(menuId);}
return{url,label:_t(label),isExternal:false,isUrlEditable:false,};},urlRepresentation(url){const menuId=parseIrMenuIdLink(url);return env.services.menu.getMenu(menuId).name;},open(url,env,newWindow){const menuId=parseIrMenuIdLink(url);const menu=env.services.menu.getMenu(menuId);env.services.action.doAction(menu.actionID,{newWindow});},}).replace("OdooMenuXmlLink",{sequence:66,match:isIrMenuXmlUrl,createLink(url,label){const xmlId=parseIrMenuXmlUrl(url);_getIrMenuByXmlId(xmlId);return{url,label:_t(label),isExternal:false,isUrlEditable:false,};},urlRepresentation(url){const xmlId=parseIrMenuXmlUrl(url);const menuId=_getIrMenuByXmlId(xmlId).id;return env.services.menu.getMenu(menuId).name;},open(url,env,newWindow){const xmlId=parseIrMenuXmlUrl(url);const menuId=_getIrMenuByXmlId(xmlId).id;const menu=env.services.menu.getMenu(menuId);env.services.action.doAction(menu.actionID,{newWindow});},}).replace("OdooViewLink",{sequence:67,match:isMarkdownViewUrl,createLink(url,label){return{url,label:_t(label),isExternal:false,isUrlEditable:false,};},urlRepresentation(url){const actionDescription=parseViewLink(url);return actionDescription.name;},async open(url,env,newWindow){const{viewType,action,name}=parseViewLink(url);await navigateTo(env,action.xmlId,{type:"ir.actions.act_window",name:name,res_model:action.modelName,views:action.views,target:"current",domain:action.domain,context:action.context,},{viewType,newWindow});},});return true;},};registry.category("services").add("spreadsheetLinkMenuCell",spreadsheetLinkMenuCellService);return __exports;});;

/* /spreadsheet/static/src/ir_ui_menu/ir_ui_menu_plugin.js */
odoo.define('@spreadsheet/ir_ui_menu/ir_ui_menu_plugin',['@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{OdooCorePlugin}=require("@spreadsheet/plugins");const IrMenuPlugin=__exports.IrMenuPlugin=class IrMenuPlugin extends OdooCorePlugin{static getters=(["getIrMenu"]);constructor(config){super(config);this.env=config.custom.env;}
getIrMenu(menuId){let menu=this.env.services.menu.getMenu(menuId);if(!menu){menu=this.env.services.menu.getAll().find((menu)=>menu.xmlid===menuId);}
return menu;}}
return __exports;});;

/* /spreadsheet/static/src/ir_ui_menu/odoo_menu_link_cell.js */
odoo.define('@spreadsheet/ir_ui_menu/odoo_menu_link_cell',[],function(require){'use strict';let __exports={};const VIEW_PREFIX="odoo://view/";const IR_MENU_ID_PREFIX="odoo://ir_menu_id/";const IR_MENU_XML_ID_PREFIX="odoo://ir_menu_xml_id/";__exports.isMarkdownViewUrl=isMarkdownViewUrl;function isMarkdownViewUrl(url){return url.startsWith(VIEW_PREFIX);}
__exports.parseViewLink=parseViewLink;function parseViewLink(viewLink){if(viewLink.startsWith(VIEW_PREFIX)){return JSON.parse(viewLink.substring(VIEW_PREFIX.length));}
throw new Error(`${viewLink} is not a valid view link`);}
__exports.buildViewLink=buildViewLink;function buildViewLink(viewDescription){return`${VIEW_PREFIX}${JSON.stringify(viewDescription)}`;}
__exports.isMarkdownIrMenuIdUrl=isMarkdownIrMenuIdUrl;function isMarkdownIrMenuIdUrl(url){return url.startsWith(IR_MENU_ID_PREFIX);}
__exports.parseIrMenuIdLink=parseIrMenuIdLink;function parseIrMenuIdLink(irMenuLink){if(irMenuLink.startsWith(IR_MENU_ID_PREFIX)){return parseInt(irMenuLink.substring(IR_MENU_ID_PREFIX.length),10);}
throw new Error(`${irMenuLink} is not a valid menu id link`);}
__exports.buildIrMenuIdLink=buildIrMenuIdLink;function buildIrMenuIdLink(menuId){return`${IR_MENU_ID_PREFIX}${menuId}`;}
__exports.isIrMenuXmlUrl=isIrMenuXmlUrl;function isIrMenuXmlUrl(url){return url.startsWith(IR_MENU_XML_ID_PREFIX);}
__exports.parseIrMenuXmlUrl=parseIrMenuXmlUrl;function parseIrMenuXmlUrl(irMenuUrl){if(irMenuUrl.startsWith(IR_MENU_XML_ID_PREFIX)){return irMenuUrl.substring(IR_MENU_XML_ID_PREFIX.length);}
throw new Error(`${irMenuUrl} is not a valid menu xml link`);}
__exports.buildIrMenuXmlLink=buildIrMenuXmlLink;function buildIrMenuXmlLink(menuXmlId){return`${IR_MENU_XML_ID_PREFIX}${menuXmlId}`;}
return __exports;});;

/* /spreadsheet/static/src/list/index.js */
odoo.define('@spreadsheet/list',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet/list/list_functions','@spreadsheet/list/plugins/list_core_plugin','@spreadsheet/list/plugins/list_core_view_plugin','@spreadsheet/list/plugins/list_ui_plugin','@spreadsheet/list/list_actions'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");require("@spreadsheet/list/list_functions");const{ListCorePlugin}=require("@spreadsheet/list/plugins/list_core_plugin");const{ListCoreViewPlugin}=require("@spreadsheet/list/plugins/list_core_view_plugin");const{ListUIPlugin}=require("@spreadsheet/list/plugins/list_ui_plugin");const{SEE_RECORD_LIST,SEE_RECORD_LIST_VISIBLE}=require("@spreadsheet/list/list_actions");const{inverseCommandRegistry}=spreadsheet.registries;function identity(cmd){return[cmd];}
const{coreTypes,invalidateEvaluationCommands}=spreadsheet;const{cellMenuRegistry}=spreadsheet.registries;coreTypes.add("INSERT_ODOO_LIST");coreTypes.add("RENAME_ODOO_LIST");coreTypes.add("REMOVE_ODOO_LIST");coreTypes.add("RE_INSERT_ODOO_LIST");coreTypes.add("UPDATE_ODOO_LIST_DOMAIN");coreTypes.add("UPDATE_ODOO_LIST");coreTypes.add("ADD_LIST_DOMAIN");coreTypes.add("DUPLICATE_ODOO_LIST");invalidateEvaluationCommands.add("UPDATE_ODOO_LIST_DOMAIN");invalidateEvaluationCommands.add("UPDATE_ODOO_LIST");invalidateEvaluationCommands.add("INSERT_ODOO_LIST");invalidateEvaluationCommands.add("REMOVE_ODOO_LIST");cellMenuRegistry.add("list_see_record",({name:_t("See record"),sequence:200,execute:async(env,isMiddleClick)=>{const position=env.model.getters.getActivePosition();await SEE_RECORD_LIST(position,env,isMiddleClick);},isVisible:(env)=>{const position=env.model.getters.getActivePosition();return SEE_RECORD_LIST_VISIBLE(position,env.model.getters);},icon:"o-spreadsheet-Icon.SEE_RECORDS",}));inverseCommandRegistry.add("INSERT_ODOO_LIST",identity).add("UPDATE_ODOO_LIST_DOMAIN",identity).add("UPDATE_ODOO_LIST",identity).add("RE_INSERT_ODOO_LIST",identity).add("RENAME_ODOO_LIST",identity).add("REMOVE_ODOO_LIST",identity);Object.assign(__exports,{ListCorePlugin,ListCoreViewPlugin,ListUIPlugin});return __exports;});;

/* /spreadsheet/static/src/list/list_actions.js */
odoo.define('@spreadsheet/list/list_actions',['@odoo/o-spreadsheet','@spreadsheet/list/list_helpers','@spreadsheet/actions/helpers'],function(require){'use strict';let __exports={};const{astToFormula,helpers}=require("@odoo/o-spreadsheet");const{getFirstListFunction,getNumberOfListFormulas}=require("@spreadsheet/list/list_helpers");const{navigateTo}=require("@spreadsheet/actions/helpers");const{isMatrix}=helpers;const SEE_RECORD_LIST=__exports.SEE_RECORD_LIST=async(position,env,newWindow)=>{const cell=env.model.getters.getCorrespondingFormulaCell(position);const sheetId=position.sheetId;if(!cell||!cell.isFormula){return;}
const{args}=getFirstListFunction(cell.compiledFormula.tokens);const evaluatedArgs=args.map(astToFormula).map((arg)=>env.model.getters.evaluateFormula(sheetId,arg));const listId=env.model.getters.getListIdFromPosition(position);const{model,actionXmlId,context}=env.model.getters.getListDefinition(listId);const dataSource=await env.model.getters.getAsyncListDataSource(listId);let index=evaluatedArgs[1];if(isMatrix(index)){const mainPosition=env.model.getters.getCellPosition(cell.id);const rowOffset=position.row-mainPosition.row;const colOffset=position.col-mainPosition.col;index=index[colOffset][rowOffset];}
if(typeof index!=="number"){return;}
const recordId=dataSource.getIdFromPosition(index-1);if(!recordId){return;}
await navigateTo(env,actionXmlId,{type:"ir.actions.act_window",res_model:model,res_id:recordId,views:[[false,"form"]],context,},{viewType:"form",newWindow});};const SEE_RECORD_LIST_VISIBLE=__exports.SEE_RECORD_LIST_VISIBLE=(position,getters)=>{const evaluatedCell=getters.getEvaluatedCell(position);const cell=getters.getCorrespondingFormulaCell(position);return!!(evaluatedCell.type!=="empty"&&evaluatedCell.type!=="error"&&evaluatedCell.value!==""&&cell&&cell.isFormula&&getNumberOfListFormulas(cell.compiledFormula.tokens)===1&&getFirstListFunction(cell.compiledFormula.tokens).functionName==="ODOO.LIST");};return __exports;});;

/* /spreadsheet/static/src/list/list_data_source.js */
odoo.define('@spreadsheet/list/list_data_source',['@spreadsheet/data_sources/odoo_views_data_source','@odoo/o-spreadsheet','@web/core/l10n/translation','@web/core/l10n/dates','@web/search/utils/order_by','@spreadsheet/data_sources/data_source'],function(require){'use strict';let __exports={};const{OdooViewsDataSource}=require("@spreadsheet/data_sources/odoo_views_data_source");const{EvaluationError}=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{formatDateTime,deserializeDateTime,formatDate,deserializeDate,}=require("@web/core/l10n/dates");const{orderByToString}=require("@web/search/utils/order_by");const spreadsheet=require("@odoo/o-spreadsheet");const{LOADING_ERROR}=require("@spreadsheet/data_sources/data_source");const{toNumber}=spreadsheet.helpers;const{DEFAULT_LOCALE}=spreadsheet.constants;const ListDataSource=__exports.ListDataSource=class ListDataSource extends OdooViewsDataSource{constructor(services,params){super(services,params);this.maxPosition=0;this.maxPositionFetched=0;this.data=[];this.fieldPathsToFetch=new Set(["id"]);this.alreadyFetchedFieldPaths=new Set();this.fieldService=services.env.services.field;this.fieldPathsToFieldMap={};}
increaseMaxPosition(position){this.maxPosition=Math.max(this.maxPosition,position);}
isModelValid(){return this._isModelValid;}
addFieldPathToFetch(fieldPath){if(fieldPath&&!this.alreadyFetchedFieldPaths.has(fieldPath)){this.fieldPathsToFetch.add(fieldPath);}}
async load(params){if(this._fetchingPromise){await this._fetchingPromise;await this._loadPromise;return;}
return super.load(params);}
async _load(){await super._load();if(this.maxPosition===0){this.data=[];return;}
this.fieldPathsToFieldMap={};const{domain,orderBy,context}=this._searchParams;const specification=await this._getReadSpec();const{records}=await this._orm.webSearchRead(this._metaData.resModel,domain,{specification,order:orderByToString(orderBy),limit:this.maxPosition,context,});this.alreadyFetchedFieldPaths=new Set([...this.fieldPathsToFetch]);this.data=records;this.maxPositionFetched=this.maxPosition;}
_addSpecForFieldPath(spec,pathInfo){const[first,...rest]=pathInfo.names;const[modelInfo,...othersModelsInfo]=pathInfo.modelsInfo;const field=modelInfo.fieldDefs[first];switch(field.type){case"monetary":spec[field.name]={};spec[field.currency_field]={fields:{...spec[field.currency_field]?.fields,name:{},symbol:{},decimal_places:{},position:{},},};break;case"many2one":case"many2many":case"one2many":spec[field.name]={fields:{display_name:{},...spec[field.name]?.fields,},};if(rest.length){const newPathInfo={names:rest,modelsInfo:othersModelsInfo};this._addSpecForFieldPath(spec[field.name].fields,newPathInfo);}
break;default:spec[field.name]={};break;}
return spec;}
async _getReadSpec(){const allFieldPaths=await Promise.all([...this.fieldPathsToFetch].map((fieldPath)=>this.fieldService.loadPath(this._metaData.resModel,fieldPath)));const validFieldPaths=allFieldPaths.filter((result)=>!result.isInvalid);const spec={};for(const pathInfo of validFieldPaths){this.fieldPathsToFieldMap[pathInfo.names.join(".")]=pathInfo.modelsInfo.at(-1).fieldDefs[pathInfo.names.at(-1)];this._addSpecForFieldPath(spec,pathInfo);}
return spec;}
getIdFromPosition(position){this.assertIsValid();const record=this.data[position];return record?record.id:undefined;}
getListHeaderValue(fieldPath){if(this.isLoading()){return LOADING_ERROR;}
if(!this._isValid||!this._isModelValid){return this._loadError;}
if(!this.isMetaDataLoaded()){this._triggerFetching();return LOADING_ERROR;}
this.assertIsValid();const field=this.fieldPathsToFieldMap[fieldPath];return field?field.string:fieldPath;}
_getRecordFromRelation(mainRecord,fieldPath){const fields=fieldPath.split(".");let record=mainRecord;for(let i=0;i<fields.length-1;i++){if(Array.isArray(record)){record=record.map((r)=>r[fields[i]]).flat();}else{record=record&&record[fields[i]];}}
return record;}
getListCellValue(position,fieldPath){if(this.isLoading()){return LOADING_ERROR;}
if(!this._isValid||!this._isModelValid){return this._loadError;}
if(position>=this.maxPositionFetched){this.increaseMaxPosition(position+1);this._triggerFetching();return LOADING_ERROR;}
if(!this.alreadyFetchedFieldPaths.has(fieldPath)){this.addFieldPathToFetch(fieldPath);this._triggerFetching();return LOADING_ERROR;}
const field=this.getFieldFromFieldPath(fieldPath);if(!field){return new EvaluationError(_t("The field %s does not exist or you do not have access to that field",fieldPath));}
const mainRecord=this.data[position];if(!mainRecord){return"";}
this.assertIsValid();const record=this._getRecordFromRelation(mainRecord,fieldPath);if(!record){return"";}
const lastField=fieldPath.split(".").at(-1);if(Array.isArray(record)){return record.map((r)=>this._parseServerValue(field,r[lastField])).join(", ");}
return this._parseServerValue(field,record[lastField]);}
_parseServerValue(field,value){switch(field.type){case"many2one":return value.display_name??"";case"one2many":case"many2many":{const labels=value.map(({display_name})=>display_name).filter((displayName)=>displayName!==undefined);return labels.join(", ");}
case"selection":{const key=value;const selectedOption=field.selection.find((array)=>array[0]===key);return selectedOption?selectedOption[1]:"";}
case"boolean":return value?true:false;case"date":return value?toNumber(this._formatDate(value),DEFAULT_LOCALE):"";case"datetime":return value?toNumber(this._formatDateTime(value),DEFAULT_LOCALE):"";case"properties":{const properties=value||[];return properties.map((property)=>property.string).join(", ");}
case"json":return new EvaluationError(_t('Fields of type "%s" are not supported',"json"));case"monetary":case"float":case"integer":return value??"";default:return value||"";}}
getListCurrency(position,fieldPath,currencyFieldName){this.assertIsValid();const currency=this._getRecordFromRelation(this.data[position],fieldPath)?.[currencyFieldName];if(!currency){return undefined;}
return{code:currency.name,symbol:currency.symbol,decimalPlaces:currency.decimal_places,position:currency.position,};}
getFieldFromFieldPath(fieldPath){return this.fieldPathsToFieldMap[fieldPath];}
_formatDateTime(dateValue){const date=deserializeDateTime(dateValue);return formatDateTime(date.reconfigure({numberingSystem:"latn"}),{format:"yyyy-MM-dd HH:mm:ss",});}
_formatDate(dateValue){const date=deserializeDate(dateValue);return formatDate(date.reconfigure({numberingSystem:"latn"}),{format:"yyyy-MM-dd",});}
_triggerFetching(){if(this._fetchingPromise){return;}
this._fetchingPromise=Promise.resolve().then(()=>new Promise((resolve)=>{this._fetchingPromise=undefined;this.load({reload:true});resolve();}));}}
return __exports;});;

/* /spreadsheet/static/src/list/list_functions.js */
odoo.define('@spreadsheet/list/list_functions',['@web/core/l10n/translation','@odoo/o-spreadsheet','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{helpers,registries,EvaluationError}=require("@odoo/o-spreadsheet");const{sprintf}=require("@web/core/utils/strings");const{arg,toString,toNumber}=helpers;const{functionRegistry}=registries;function assertListsExists(listId,getters){if(!getters.isExistingList(listId)){throw new EvaluationError(sprintf(_t('There is no list with id "%s"'),listId));}}
const ODOO_LIST={description:_t("Get the value from a list."),args:[arg("list_id (string)",_t("ID of the list.")),arg("index (string)",_t("Position of the record in the list.")),arg("field_name (string)",_t("Name of the field.")),],category:"Odoo",compute:function(listId,index,fieldName){const id=toString(listId);const position=toNumber(index,this.locale)-1;const _fieldName=toString(fieldName);if(!_fieldName){return new EvaluationError(_t("The field name should not be empty."));}
assertListsExists(id,this.getters);return this.getters.getListCellValueAndFormat(id,position,_fieldName);},returns:["NUMBER","STRING"],};const ODOO_LIST_HEADER={description:_t("Get the header of a list."),args:[arg("list_id (string)",_t("ID of the list.")),arg("field_name (string)",_t("Name of the field.")),],category:"Odoo",compute:function(listId,fieldName){const id=toString(listId);const field=toString(fieldName);assertListsExists(id,this.getters);return this.getters.getListHeaderValue(id,field);},returns:["NUMBER","STRING"],};functionRegistry.add("ODOO.LIST",ODOO_LIST);functionRegistry.add("ODOO.LIST.HEADER",ODOO_LIST_HEADER);return __exports;});;

/* /spreadsheet/static/src/list/list_helpers.js */
odoo.define('@spreadsheet/list/list_helpers',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{helpers}=require("@odoo/o-spreadsheet");const{getFunctionsFromTokens}=helpers;__exports.getNumberOfListFormulas=getNumberOfListFormulas;function getNumberOfListFormulas(tokens){return getFunctionsFromTokens(tokens,["ODOO.LIST","ODOO.LIST.HEADER"]).length;}
__exports.getFirstListFunction=getFirstListFunction;function getFirstListFunction(tokens){return getFunctionsFromTokens(tokens,["ODOO.LIST","ODOO.LIST.HEADER"])[0];}
return __exports;});;

/* /spreadsheet/static/src/list/plugins/list_core_global_filter_plugin.js */
odoo.define('@spreadsheet/list/plugins/list_core_global_filter_plugin',['@spreadsheet/o_spreadsheet/cancelled_reason','@spreadsheet/global_filters/helpers','@web/core/utils/objects','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{checkFilterFieldMatching}=require("@spreadsheet/global_filters/helpers");const{deepCopy}=require("@web/core/utils/objects");const{OdooCorePlugin}=require("@spreadsheet/plugins");const ListCoreGlobalFilterPlugin=__exports.ListCoreGlobalFilterPlugin=class ListCoreGlobalFilterPlugin extends OdooCorePlugin{static getters=(["getListFieldMatch","getListFieldMatching"]);constructor(config){super(config);this.fieldMatchings={};}
allowDispatch(cmd){switch(cmd.type){case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.list){return checkFilterFieldMatching(cmd.list);}}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"INSERT_ODOO_LIST":{this._addList(cmd.id);break;}
case"REMOVE_ODOO_LIST":{this.history.update("fieldMatchings",cmd.listId,undefined);break;}
case"DUPLICATE_ODOO_LIST":{const{listId,newListId}=cmd;const fieldMatch=deepCopy(this.fieldMatchings[listId]);this._addList(newListId,fieldMatch);break;}
case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.list){this._setListFieldMatching(cmd.filter.id,cmd.list);}
break;case"REMOVE_GLOBAL_FILTER":this._onFilterDeletion(cmd.id);break;}}
getListFieldMatch(id){return this.fieldMatchings[id];}
getListFieldMatching(listId,filterId){return this.getListFieldMatch(listId)[filterId];}
_setListFieldMatching(filterId,listFieldMatches){const fieldMatchings={...this.fieldMatchings};for(const[listId,fieldMatch]of Object.entries(listFieldMatches)){fieldMatchings[listId][filterId]=fieldMatch;}
this.history.update("fieldMatchings",fieldMatchings);}
_onFilterDeletion(filterId){const fieldMatchings={...this.fieldMatchings};for(const listId in fieldMatchings){this.history.update("fieldMatchings",listId,filterId,undefined);}}
_addList(id,fieldMatching=undefined){const list=this.getters.getListDefinition(id);const model=list.model;this.history.update("fieldMatchings",id,fieldMatching||this.getters.getFieldMatchingForModel(model));}
import(data){if(data.lists){for(const[id,list]of Object.entries(data.lists)){this._addList(id,list.fieldMatching??{});}}}
export(data){for(const id in this.fieldMatchings){data.lists[id].fieldMatching=this.fieldMatchings[id];}}}
return __exports;});;

/* /spreadsheet/static/src/list/plugins/list_core_plugin.js */
odoo.define('@spreadsheet/list/plugins/list_core_plugin',['@spreadsheet/o_spreadsheet/cancelled_reason','@odoo/o-spreadsheet','@web/core/domain','@web/core/utils/objects','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{helpers}=require("@odoo/o-spreadsheet");const{Domain}=require("@web/core/domain");const{deepCopy}=require("@web/core/utils/objects");const{OdooCorePlugin}=require("@spreadsheet/plugins");const{getMaxObjectId}=helpers;const ListCorePlugin=__exports.ListCorePlugin=class ListCorePlugin extends OdooCorePlugin{static getters=(["getListDisplayName","getListDefinition","getListModelDefinition","getListIds","getListName","getNextListId","isExistingList",]);constructor(config){super(config);this.nextId=1;this.lists={};}
allowDispatch(cmd){switch(cmd.type){case"INSERT_ODOO_LIST":if(cmd.id!==this.nextId.toString()){return CommandResult.InvalidNextId;}
if(this.lists[cmd.id]){return CommandResult.ListIdDuplicated;}
break;case"DUPLICATE_ODOO_LIST":if(!this.lists[cmd.listId]){return CommandResult.ListIdNotFound;}
if(cmd.newListId!==this.nextId.toString()){return CommandResult.InvalidNextId;}
break;case"RENAME_ODOO_LIST":if(!(cmd.listId in this.lists)){return CommandResult.ListIdNotFound;}
if(cmd.name===""){return CommandResult.EmptyName;}
break;case"UPDATE_ODOO_LIST":case"UPDATE_ODOO_LIST_DOMAIN":if(!(cmd.listId in this.lists)){return CommandResult.ListIdNotFound;}
break;}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"INSERT_ODOO_LIST":{const{sheetId,col,row,id,definition,linesNumber,columns}=cmd;const anchor=[col,row];this._addList(id,definition);this._insertList(sheetId,anchor,id,linesNumber,columns);this.history.update("nextId",parseInt(id,10)+1);break;}
case"DUPLICATE_ODOO_LIST":{const{listId,newListId,duplicatedListName}=cmd;const duplicatedList=deepCopy(this.lists[listId].definition);duplicatedList.name=duplicatedListName??duplicatedList.name+" (copy)";this._addList(newListId,duplicatedList);this.history.update("nextId",parseInt(newListId,10)+1);break;}
case"RE_INSERT_ODOO_LIST":{const{sheetId,col,row,id,linesNumber,columns}=cmd;const anchor=[col,row];this._insertList(sheetId,anchor,id,linesNumber,columns);break;}
case"RENAME_ODOO_LIST":{this.history.update("lists",cmd.listId,"definition","name",cmd.name);break;}
case"REMOVE_ODOO_LIST":{const lists={...this.lists};delete lists[cmd.listId];this.history.update("lists",lists);break;}
case"UPDATE_ODOO_LIST_DOMAIN":{this.history.update("lists",cmd.listId,"definition","searchParams","domain",cmd.domain);break;}
case"UPDATE_ODOO_LIST":{this.history.update("lists",cmd.listId,"definition",cmd.list);break;}}}
getListDisplayName(id){return`(#${id}) ${this.getListName(id)}`;}
getListName(id){return this.lists[id].definition.name;}
getListIds(){return Object.keys(this.lists);}
getNextListId(){return this.nextId.toString();}
getListDefinition(id){const def=this.lists[id].definition;return{columns:[...def.metaData.columns],domain:def.searchParams.domain,model:def.metaData.resModel,context:{...def.searchParams.context},orderBy:[...def.searchParams.orderBy],id,name:def.name,actionXmlId:def.actionXmlId,};}
getListModelDefinition(id){return this.lists[id].definition;}
isExistingList(id){return id in this.lists;}
_addList(id,definition){const lists={...this.lists};lists[id]={id,definition,};this.history.update("lists",lists);}
_insertList(sheetId,anchor,id,linesNumber,columns){this._resizeSheet(sheetId,anchor,columns.length,linesNumber+1);this._insertHeaders(sheetId,anchor,id,columns);this._insertValues(sheetId,anchor,id,columns,linesNumber);}
_insertHeaders(sheetId,anchor,id,columns){let[col,row]=anchor;for(const column of columns){this.dispatch("UPDATE_CELL",{sheetId,col,row,content:`=ODOO.LIST.HEADER(${id},"${column.name}")`,});col++;}}
_insertValues(sheetId,anchor,id,columns,linesNumber){let col=anchor[0];let row=anchor[1]+1;for(let i=1;i<=linesNumber;i++){col=anchor[0];for(const column of columns){this.dispatch("UPDATE_CELL",{sheetId,col,row,content:`=ODOO.LIST(${id},${i},"${column.name}")`,});col++;}
row++;}}
_resizeSheet(sheetId,anchor,columns,rows){const numberCols=this.getters.getNumberCols(sheetId);const deltaCol=numberCols-anchor[0];if(deltaCol<columns){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"COL",base:numberCols-1,sheetId:sheetId,quantity:columns-deltaCol,position:"after",});}
const numberRows=this.getters.getNumberRows(sheetId);const deltaRow=numberRows-anchor[1];if(deltaRow<rows){this.dispatch("ADD_COLUMNS_ROWS",{dimension:"ROW",base:numberRows-1,sheetId:sheetId,quantity:rows-deltaRow,position:"after",});}}
import(data){if(data.lists){for(const[id,list]of Object.entries(data.lists)){const definition={metaData:{resModel:list.model,columns:list.columns,},searchParams:{domain:list.domain,context:list.context,orderBy:list.orderBy,},actionXmlId:list.actionXmlId,name:list.name,};this._addList(id,definition);}}
this.nextId=data.listNextId||getMaxObjectId(this.lists)+1;}
export(data){data.lists={};for(const id in this.lists){data.lists[id]=JSON.parse(JSON.stringify(this.getListDefinition(id)));data.lists[id].domain=new Domain(data.lists[id].domain).toJson();}
data.listNextId=this.nextId;}}
return __exports;});;

/* /spreadsheet/static/src/list/plugins/list_core_view_plugin.js */
odoo.define('@spreadsheet/list/plugins/list_core_view_plugin',['@odoo/o-spreadsheet','@spreadsheet/list/list_helpers','@web/core/domain','@spreadsheet/list/list_data_source','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{getFirstListFunction}=require("@spreadsheet/list/list_helpers");const{Domain}=require("@web/core/domain");const{ListDataSource}=require("@spreadsheet/list/list_data_source");const{OdooCoreViewPlugin}=require("@spreadsheet/plugins");const{astToFormula}=spreadsheet;const{isEvaluationError}=spreadsheet.helpers;const ListCoreViewPlugin=__exports.ListCoreViewPlugin=class ListCoreViewPlugin extends OdooCoreViewPlugin{static getters=(["getListComputedDomain","getListHeaderValue","getListIdFromPosition","getListCellValueAndFormat","getListDataSource","getAsyncListDataSource","isListUnused",]);constructor(config){super(config);this.env=config.custom.env;this.lists={};this.custom=config.custom;}
beforeHandle(cmd){switch(cmd.type){case"START":for(const listId of this.getters.getListIds()){this._setupListDataSource(listId,0);}
this._addDomains();break;}}
handle(cmd){switch(cmd.type){case"INSERT_ODOO_LIST":{const{id,linesNumber}=cmd;this._setupListDataSource(id,linesNumber);break;}
case"DUPLICATE_ODOO_LIST":{this._setupListDataSource(cmd.newListId,0);break;}
case"REFRESH_ALL_DATA_SOURCES":this._refreshOdooLists();break;case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":case"REMOVE_GLOBAL_FILTER":case"SET_GLOBAL_FILTER_VALUE":this._addDomains();break;case"UPDATE_ODOO_LIST":case"UPDATE_ODOO_LIST_DOMAIN":{const listDefinition=this.getters.getListModelDefinition(cmd.listId);const dataSourceId=this._getListDataSourceId(cmd.listId);this.lists[dataSourceId]=new ListDataSource(this.custom,listDefinition);this._addDomain(cmd.listId);break;}
case"DELETE_SHEET":this.unusedLists=undefined;break;case"UPDATE_CELL":this.unusedLists=undefined;break;case"UNDO":case"REDO":{this.unusedLists=undefined;if(cmd.commands.find((command)=>["ADD_GLOBAL_FILTER","EDIT_GLOBAL_FILTER","REMOVE_GLOBAL_FILTER",].includes(command.type))){this._addDomains();}
const updateCommands=cmd.commands.filter((cmd)=>cmd.type==="UPDATE_ODOO_LIST_DOMAIN"||cmd.type==="UPDATE_ODOO_LIST"||cmd.type==="INSERT_ODOO_LIST");for(const cmd of updateCommands){if(!this.getters.isExistingList(cmd.listId)){continue;}
const listDefinition=this.getters.getListModelDefinition(cmd.listId);const dataSourceId=this._getListDataSourceId(cmd.listId);this.lists[dataSourceId]=new ListDataSource(this.custom,listDefinition);this._addDomain(cmd.listId);}
break;}}}
_setupListDataSource(listId,limit,definition){const dataSourceId=this._getListDataSourceId(listId);definition=definition||this.getters.getListModelDefinition(listId);if(!(dataSourceId in this.lists)){this.lists[dataSourceId]=new ListDataSource(this.custom,{...definition,limit});}}
_addDomain(listId){const domainList=[];for(const[filterId,fieldMatch]of Object.entries(this.getters.getListFieldMatch(listId))){domainList.push(this.getters.getGlobalFilterDomain(filterId,fieldMatch));}
const domain=Domain.combine(domainList,"AND").toString();this.getters.getListDataSource(listId).addDomain(domain);}
_addDomains(){for(const listId of this.getters.getListIds()){this._addDomain(listId);}}
_refreshOdooList(listId){this.getters.getListDataSource(listId).load({reload:true});}
_refreshOdooLists(){for(const listId of this.getters.getListIds()){this._refreshOdooList(listId);}}
_getListDataSourceId(listId){return`list-${listId}`;}
_getUnusedLists(){if(this.unusedLists!==undefined){return this.unusedLists;}
const unusedLists=new Set(this.getters.getListIds());for(const sheetId of this.getters.getSheetIds()){for(const cellId in this.getters.getCells(sheetId)){const position=this.getters.getCellPosition(cellId);const listId=this.getListIdFromPosition(position);if(listId){unusedLists.delete(listId);if(!unusedLists.size){this.unusedLists=[];return this.unusedLists;}}}}
this.unusedLists=[...unusedLists];return this.unusedLists;}
_getListFormat(listId,position,path,field){const locale=this.getters.getLocale();switch(field?.type){case"integer":return"0";case"float":return"#,##0.00";case"monetary":{const currency=this.getListCurrency(listId,position,path,field.currency_field);if(!currency){return"#,##0.00";}
return this.getters.computeFormatFromCurrency(currency);}
case"date":return locale.dateFormat;case"datetime":return locale.dateFormat+" "+locale.timeFormat;case"char":case"text":return"@";default:return undefined;}}
getListComputedDomain(listId){return this.getters.getListDataSource(listId).getComputedDomain();}
getListIdFromPosition(position){const cell=this.getters.getCorrespondingFormulaCell(position);const sheetId=position.sheetId;if(cell&&cell.isFormula){const listFunction=getFirstListFunction(cell.compiledFormula.tokens);if(listFunction){const content=astToFormula(listFunction.args[0]);return this.getters.evaluateFormula(sheetId,content)?.toString();}}
return undefined;}
getListHeaderValue(listId,path){return this.getters.getListDataSource(listId).getListHeaderValue(path);}
getListCellValueAndFormat(listId,position,path){const dataSource=this.getters.getListDataSource(listId);dataSource.addFieldPathToFetch(path);const value=dataSource.getListCellValue(position,path);if(typeof value==="object"&&isEvaluationError(value.value)){return value;}
const field=dataSource.getFieldFromFieldPath(path);const format=this._getListFormat(listId,position,path,field);return{value,format};}
getListCurrency(listId,position,path,currentFieldName){return this.getters.getListDataSource(listId).getListCurrency(position,path,currentFieldName);}
getListDataSource(id){const dataSourceId=this._getListDataSourceId(id);return this.lists[dataSourceId];}
async getAsyncListDataSource(id){const dataSource=this.getListDataSource(id);await dataSource.load();return dataSource;}
isListUnused(listId){return this._getUnusedLists().includes(listId);}}
return __exports;});;

/* /spreadsheet/static/src/list/plugins/list_ui_plugin.js */
odoo.define('@spreadsheet/list/plugins/list_ui_plugin',['@odoo/o-spreadsheet','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{OdooUIPlugin}=require("@spreadsheet/plugins");const{constants}=spreadsheet;const{PIVOT_TABLE_CONFIG}=constants;const ListUIPlugin=__exports.ListUIPlugin=class ListUIPlugin extends OdooUIPlugin{handle(cmd){switch(cmd.type){case"INSERT_ODOO_LIST_WITH_TABLE":{this.dispatch("INSERT_ODOO_LIST",cmd);this._addTable(cmd);break;}
case"RE_INSERT_ODOO_LIST_WITH_TABLE":{this.dispatch("RE_INSERT_ODOO_LIST",cmd);this._addTable(cmd);break;}}}
_addTable({sheetId,col,row,linesNumber,columns}){const zone={left:col,right:col+columns.length-1,top:row,bottom:row+linesNumber,};this.dispatch("CREATE_TABLE",{tableType:"static",sheetId,ranges:[this.getters.getRangeDataFromZone(sheetId,zone)],config:{...PIVOT_TABLE_CONFIG,firstColumn:false},});}}
return __exports;});;

/* /spreadsheet/static/src/model.js */
odoo.define('@spreadsheet/model',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{Model}=require("@odoo/o-spreadsheet");const OdooSpreadsheetModel=__exports.OdooSpreadsheetModel=Model;return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/cancelled_reason.js */
odoo.define('@spreadsheet/o_spreadsheet/cancelled_reason',[],function(require){'use strict';let __exports={};const CommandResult=__exports.CommandResult={Success:"Success",FilterNotFound:"FilterNotFound",InvalidFilterMove:"InvalidFilterMove",DuplicatedFilterLabel:"DuplicatedFilterLabel",InvalidFilterLabel:"InvalidFilterLabel",PivotCacheNotLoaded:"PivotCacheNotLoaded",InvalidValueTypeCombination:"InvalidValueTypeCombination",ListIdDuplicated:"ListIdDuplicated",InvalidNextId:"InvalidNextId",ListIdNotFound:"ListIdNotFound",EmptyName:"EmptyName",PivotIdNotFound:"PivotIdNotFound",InvalidFieldMatch:"InvalidFieldMatch",};return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/errors.js */
odoo.define('@spreadsheet/o_spreadsheet/errors',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{registries,EvaluationError}=require("@odoo/o-spreadsheet");const LOADING_ERROR="Loading...";registries.errorTypes.add(LOADING_ERROR);__exports.isLoadingError=isLoadingError;function isLoadingError(valueOrError){return valueOrError.value===LOADING_ERROR;}
const LoadingDataError=__exports.LoadingDataError=class LoadingDataError extends EvaluationError{constructor(){super("",LOADING_ERROR);}}
return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/init_callbacks.js */
odoo.define('@spreadsheet/o_spreadsheet/init_callbacks',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{Registry}=require("@odoo/o-spreadsheet");const initCallbackRegistry=__exports.initCallbackRegistry=new Registry();return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/migration.js */
odoo.define('@spreadsheet/o_spreadsheet/migration',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{tokenize,parse,convertAstNodes,astToFormula}=spreadsheet;const{migrationStepRegistry}=spreadsheet.registries;const MAP_V1={PIVOT:"ODOO.PIVOT","PIVOT.HEADER":"ODOO.PIVOT.HEADER","PIVOT.POSITION":"ODOO.PIVOT.POSITION","FILTER.VALUE":"ODOO.FILTER.VALUE",LIST:"ODOO.LIST","LIST.HEADER":"ODOO.LIST.HEADER",};const MAP_FN_NAMES_V10={"ODOO.PIVOT":"PIVOT.VALUE","ODOO.PIVOT.HEADER":"PIVOT.HEADER","ODOO.PIVOT.TABLE":"PIVOT",};const dmyRegex=/^([0|1|2|3][1-9])\/(0[1-9]|1[0-2])\/(\d{4})$/i;migrationStepRegistry.add("17.3.1",{migrate(data){return migrateOdooData(data);},});migrationStepRegistry.add("18.1.2",{migrate(data){const version=data.odooVersion||0;if(version<13){data=migrate12to13(data);}
return data;},});migrationStepRegistry.add("18.3.2",{migrate(data){for(const sheet of data.sheets||[]){for(const figure of sheet.figures||[]){if(figure.tag==="chart"&&["odoo_bar","odoo_line","odoo_pie"].includes(figure.data.type)&&!("cumulatedStart"in figure.data)){const isCumulative=figure.data.cumulative||false;figure.data.cumulatedStart=isCumulative;figure.data.metaData.cumulatedStart=isCumulative;}}}
return data;},});migrationStepRegistry.add("18.4.10",{migrate(data){for(const globalFilter of data.globalFilters||[]){if(globalFilter.type==="text"&&typeof globalFilter.defaultValue=="string"){if(globalFilter.defaultValue===""){delete globalFilter.defaultValue;}else{globalFilter.defaultValue=[globalFilter.defaultValue];}}
if(globalFilter.type==="text"&&globalFilter.rangeOfAllowedValues){globalFilter.rangesOfAllowedValues=[globalFilter.rangeOfAllowedValues];delete globalFilter.rangeOfAllowedValues;}}
return data;},});migrationStepRegistry.add("18.4.11",{migrate(data){for(const globalFilter of data.globalFilters||[]){if(globalFilter.type==="date"&&globalFilter.rangeType==="fixedPeriod"){if(typeof globalFilter.defaultValue!=="string"){delete globalFilter.defaultValue;}}}
return data;},});migrationStepRegistry.add("18.4.12",{migrate(data){for(const globalFilter of data.globalFilters||[]){if(globalFilter.defaultValue?.length===0){delete globalFilter.defaultValue;}}
return data;},});const defaultValueMap={last_week:"last_7_days",last_month:"last_30_days",last_three_months:"last_90_days",last_year:"last_12_months",};migrationStepRegistry.add("18.4.13",{migrate(data){for(const globalFilter of data.globalFilters||[]){if(["last_six_month","last_three_years"].includes(globalFilter.defaultValue)){delete globalFilter.defaultValue;}
if(globalFilter.defaultValue in defaultValueMap){globalFilter.defaultValue=defaultValueMap[globalFilter.defaultValue];}}
return data;},});migrationStepRegistry.add("18.4.14",{migrate(data){for(const globalFilter of data.globalFilters||[]){delete globalFilter.rangeType;delete globalFilter.disabledPeriods;}
return data;},});migrationStepRegistry.add("18.5.10",{migrate(data){for(const globalFilter of data.globalFilters||[]){if(globalFilter.type==="relation"&&globalFilter.defaultValue){const operator=globalFilter.includeChildren?"child_of":"in";delete globalFilter.includeChildren;globalFilter.defaultValue={operator,ids:globalFilter.defaultValue,};}else if(globalFilter.type==="text"&&globalFilter.defaultValue){globalFilter.defaultValue={operator:"ilike",strings:globalFilter.defaultValue,};}else if(globalFilter.type==="boolean"&&globalFilter.defaultValue){if(globalFilter.defaultValue.length===2){delete globalFilter.defaultValue;}else{globalFilter.defaultValue={operator:globalFilter.defaultValue[0]?"set":"not_set",};}}}
return data;},});function migrateOdooData(data){const version=data.odooVersion||0;if(version<1){data=migrate0to1(data);}
if(version<2){data=migrate1to2(data);}
if(version<3){data=migrate2to3(data);}
if(version<4){data=migrate3to4(data);}
if(version<5){data=migrate4to5(data);}
if(version<6){data=migrate5to6(data);}
if(version<7){data=migrate6to7(data);}
if(version<8){data=migrate7to8(data);}
if(version<9){data=migrate8to9(data);}
if(version<10){data=migrate9to10(data);}
if(version<11){data=migrate10to11(data);}
if(version<12){data=migrate11to12(data);}
return data;}
function parseDimension(dimension){const[name,granularity]=dimension.split(":");if(granularity){return{name,granularity};}
return{name};}
function renameFunctions(data,map){for(const sheet of data.sheets||[]){for(const xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.content&&cell.content.startsWith("=")){const tokens=tokenize(cell.content);for(const token of tokens){if(token.type==="SYMBOL"&&token.value.toUpperCase()in map){token.value=map[token.value.toUpperCase()];}}
cell.content=tokensToString(tokens);}}}
return data;}
function tokensToString(tokens){return tokens.reduce((acc,token)=>acc+token.value,"");}
function migrate0to1(data){return renameFunctions(data,MAP_V1);}
function migrate1to2(data){for(const sheet of data.sheets||[]){for(const xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.content&&cell.content.startsWith("=")){try{cell.content=migratePivotDaysParameters(cell.content);}catch{continue;}}}}
return data;}
function migrate2to3(data){if(data.globalFilters){for(const gf of data.globalFilters){if(gf.fields){gf.pivotFields=gf.fields;delete gf.fields;}
if(gf.type==="date"&&typeof gf.defaultValue==="object"&&"year"in gf.defaultValue){switch(gf.defaultValue.year){case"last_year":gf.defaultValue.yearOffset=-1;break;case"antepenultimate_year":gf.defaultValue.yearOffset=-2;break;case"this_year":case undefined:gf.defaultValue.yearOffset=0;break;}
delete gf.defaultValue.year;}
if(!gf.listFields){gf.listFields={};}
if(!gf.graphFields){gf.graphFields={};}}}
return data;}
function migrate3to4(data){if(data.lists){for(const list of Object.values(data.lists)){list.name=list.name||list.model;}}
if(data.pivots){for(const pivot of Object.values(data.pivots)){pivot.name=pivot.name||pivot.model;}}
return data;}
function migrate4to5(data){for(const filter of data.globalFilters||[]){for(const[id,fm]of Object.entries(filter.pivotFields||{})){if(!(data.pivots&&id in data.pivots)){delete filter.pivotFields[id];continue;}
if(!data.pivots[id].fieldMatching){data.pivots[id].fieldMatching={};}
data.pivots[id].fieldMatching[filter.id]={chain:fm.field,type:fm.type};if("offset"in fm){data.pivots[id].fieldMatching[filter.id].offset=fm.offset;}}
delete filter.pivotFields;for(const[id,fm]of Object.entries(filter.listFields||{})){if(!(data.lists&&id in data.lists)){delete filter.listFields[id];continue;}
if(!data.lists[id].fieldMatching){data.lists[id].fieldMatching={};}
data.lists[id].fieldMatching[filter.id]={chain:fm.field,type:fm.type};if("offset"in fm){data.lists[id].fieldMatching[filter.id].offset=fm.offset;}}
delete filter.listFields;const findFigureFromId=(id)=>{for(const sheet of data.sheets){const fig=sheet.figures.find((f)=>f.id===id);if(fig){return fig;}}
return undefined;};for(const[id,fm]of Object.entries(filter.graphFields||{})){const figure=findFigureFromId(id);if(!figure){delete filter.graphFields[id];continue;}
if(!figure.data.fieldMatching){figure.data.fieldMatching={};}
figure.data.fieldMatching[filter.id]={chain:fm.field,type:fm.type};if("offset"in fm){figure.data.fieldMatching[filter.id].offset=fm.offset;}}
delete filter.graphFields;}
return data;}
function migratePivotDaysParameters(formulaString){const ast=parse(formulaString);const convertedAst=convertAstNodes(ast,"FUNCALL",(ast)=>{if(["ODOO.PIVOT","ODOO.PIVOT.HEADER"].includes(ast.value.toUpperCase())){for(const subAst of ast.args){if(subAst.type==="STRING"){const date=subAst.value.match(dmyRegex);if(date){subAst.value=`${[date[2], date[1], date[3]].join("/")}`;}}}}
return ast;});return"="+astToFormula(convertedAst);}
function migrate5to6(data){if(!data.globalFilters?.length){return data;}
for(const filter of data.globalFilters){if(filter.type==="date"&&["year","quarter","month"].includes(filter.rangeType)){if(filter.defaultsToCurrentPeriod){filter.defaultValue=`this_${filter.rangeType}`;}
filter.rangeType="fixedPeriod";}
delete filter.defaultsToCurrentPeriod;}
return data;}
function migrate6to7(data){if(data.pivots){for(const[id,definition]of Object.entries(data.pivots)){definition.measures=definition.measures.map((measure)=>measure.field);const fieldMatching=definition.fieldMatching;delete definition.fieldMatching;data.pivots[id]={type:"ODOO",definition,fieldMatching,};}}
return data;}
function migrate7to8(data){if(data.pivots){for(const[id,pivot]of Object.entries(data.pivots)){data.pivots[id]={type:pivot.type,fieldMatching:pivot.fieldMatching,...pivot.definition,};}}
return data;}
function migrate8to9(data){if(data.pivots){for(const id of Object.keys(data.pivots)){data.pivots[id].formulaId=id;}}
return data;}
function migrate9to10(data){return renameFunctions(data,MAP_FN_NAMES_V10);}
function migrate10to11(data){if(data.pivots){for(const pivot of Object.values(data.pivots)){pivot.measures=pivot.measures.map((measure)=>({name:measure,}));pivot.columns=pivot.colGroupBys.map(parseDimension);delete pivot.colGroupBys;pivot.rows=pivot.rowGroupBys.map(parseDimension);delete pivot.rowGroupBys;}}
return data;}
function migrate11to12(data){for(const sheet of data.sheets||[]){for(const xc in sheet.cells||[]){const cell=sheet.cells[xc];if(cell.content&&cell.content.startsWith("=")&&cell.content.includes("ODOO.PIVOT.POSITION")){const tokens=tokenize(cell.content);for(let i=2;i<tokens.length-7;i++){const token=tokens[i];if(token.type==="SYMBOL"&&token.value.toUpperCase()==="ODOO.PIVOT.POSITION"){const order=tokens[i+6];tokens[i-2].value='"#'+tokens[i-2].value.slice(1);tokens.splice(i,7);tokens[i]=order;cell.content=tokensToString(tokens);}}}}}
return data;}
function migrate12to13(data){if(data.pivots){for(const pivot of Object.values(data.pivots)){if(!pivot.sortedColumn){continue;}
const measure=pivot.measures.find((measure)=>measure.fieldName===pivot.sortedColumn.measure);if(pivot.sortedColumn.groupId[1]?.length||!measure){pivot.sortedColumn=undefined;continue;}
pivot.sortedColumn={measure:measure.id,order:pivot.sortedColumn.order,domain:[],};}}
return data;}
return __exports;});;

/* /spreadsheet/static/src/o_spreadsheet/odoo_module.js */
odoo.define("@odoo/o-spreadsheet",["@web/core/l10n/translation","@spreadsheet/o_spreadsheet/o_spreadsheet"],function(require){"use strict";const{_t,translationLoaded,translatedTerms}=require("@web/core/l10n/translation");const spreadsheet=require("@spreadsheet/o_spreadsheet/o_spreadsheet");window.o_spreadsheet=spreadsheet;spreadsheet.setTranslationMethod(_t,()=>translatedTerms[translationLoaded]);return spreadsheet;});;

/* /spreadsheet/static/src/o_spreadsheet/translation.js */
odoo.define('@spreadsheet/o_spreadsheet/translation',['@odoo/o-spreadsheet','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{arg,toString}=spreadsheet.helpers;const{functionRegistry}=spreadsheet.registries;functionRegistry.add("_t",{description:_t("Get the translated value of the given string"),args:[arg("value (string)",_t("Value to translate."))],compute:function(value){return _t(toString(value));},returns:["STRING"],hidden:true,});return __exports;});;

/* /spreadsheet/static/src/pivot/index.js */
odoo.define('@spreadsheet/pivot',['@web/core/l10n/translation','@odoo/o-spreadsheet','@spreadsheet/pivot/pivot_actions','@spreadsheet/pivot/plugins/pivot_odoo_core_plugin','@spreadsheet/pivot/plugins/pivot_core_view_global_filter_plugin','@spreadsheet/pivot/plugins/pivot_ui_global_filter_plugin'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{SEE_RECORDS_PIVOT,SEE_RECORDS_PIVOT_VISIBLE}=require("@spreadsheet/pivot/pivot_actions");const{PivotOdooCorePlugin}=require("@spreadsheet/pivot/plugins/pivot_odoo_core_plugin");const{PivotCoreViewGlobalFilterPlugin}=require("@spreadsheet/pivot/plugins/pivot_core_view_global_filter_plugin");const{PivotUIGlobalFilterPlugin}=require("@spreadsheet/pivot/plugins/pivot_ui_global_filter_plugin");const{coreTypes,invalidateEvaluationCommands}=spreadsheet;const{cellMenuRegistry}=spreadsheet.registries;const{inverseCommandRegistry}=spreadsheet.registries;function identity(cmd){return[cmd];}
coreTypes.add("UPDATE_ODOO_PIVOT_DOMAIN");invalidateEvaluationCommands.add("UPDATE_ODOO_PIVOT_DOMAIN");cellMenuRegistry.add("pivot_see_records",{name:_t("See records"),sequence:175,execute:async(env,isMiddleClick)=>{const position=env.model.getters.getActivePosition();await SEE_RECORDS_PIVOT(position,env,isMiddleClick);},isVisible:(env)=>{const position=env.model.getters.getActivePosition();return SEE_RECORDS_PIVOT_VISIBLE(position,env.model.getters);},icon:"o-spreadsheet-Icon.SEE_RECORDS",});inverseCommandRegistry.add("UPDATE_ODOO_PIVOT_DOMAIN",identity);Object.assign(__exports,{PivotOdooCorePlugin,PivotCoreViewGlobalFilterPlugin,PivotUIGlobalFilterPlugin});return __exports;});;

/* /spreadsheet/static/src/pivot/odoo_pivot.js */
odoo.define('@spreadsheet/pivot/odoo_pivot',['@web/core/domain','@web/core/l10n/translation','@web/core/user','@spreadsheet/pivot/pivot_model','@odoo/o-spreadsheet','@spreadsheet/data_sources/data_source','@web/core/utils/objects','@spreadsheet/pivot/odoo_pivot_loader'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{_t}=require("@web/core/l10n/translation");const{user}=require("@web/core/user");const{NO_RECORD_AT_THIS_POSITION,OdooPivotModel}=require("@spreadsheet/pivot/pivot_model");const{EvaluationError,PivotRuntimeDefinition,registries,helpers}=require("@odoo/o-spreadsheet");const{LOADING_ERROR}=require("@spreadsheet/data_sources/data_source");const{omit}=require("@web/core/utils/objects");const{OdooPivotLoader}=require("@spreadsheet/pivot/odoo_pivot_loader");const{pivotRegistry,supportedPivotPositionalFormulaRegistry}=registries;const{pivotTimeAdapter,toString,areDomainArgsFieldsValid,toNormalizedPivotValue,deepEquals}=helpers;const OdooPivot=__exports.OdooPivot=class OdooPivot{constructor(services,{definition,getters}){this.type="ODOO";this.coreDefinition=definition;this.needsReevaluation=false;this.runtimeDefinition=undefined;this.model=undefined;this.getters=getters;this.loader=new OdooPivotLoader(services.odooDataProvider,this._load.bind(this));this._fields=undefined;this.odooDataProvider=services.odooDataProvider;this.context=omit(definition.context,...Object.keys(user.context),"pivot_measures","pivot_row_groupby","pivot_column_groupby");this.domainWithGlobalFilters=this.coreDefinition.domain;}
onDefinitionChange(nextDefinition){this.context=omit(nextDefinition.context,...Object.keys(user.context));const actualDefinition=this.coreDefinition;this.coreDefinition=nextDefinition;if(!deepEquals(actualDefinition.sortedColumn,nextDefinition.sortedColumn)){this.model.updateSortColumn(nextDefinition.sortedColumn);}
if(!deepEquals(actualDefinition.collapsedDomains,nextDefinition.collapsedDomains)){this.model.updateCollapsedDomains(nextDefinition.collapsedDomains);}
if(deepEquals(actualDefinition.columns,nextDefinition.columns)&&deepEquals(actualDefinition.rows,nextDefinition.rows)&&deepEquals(actualDefinition.domain,nextDefinition.domain)&&deepEquals(actualDefinition.context,nextDefinition.context)&&deepEquals(actualDefinition.actionXmlId,nextDefinition.actionXmlId)&&deepEquals(actualDefinition.model,nextDefinition.model)){if(deepEquals(actualDefinition.measures,nextDefinition.measures)){return;}
if(!this.isMeasuresChangesRequireRPC(actualDefinition.measures,nextDefinition.measures)){this.coreDefinition=nextDefinition;const runtimeDefinition=new OdooPivotRuntimeDefinition(this.coreDefinition,this.getFields());this.model.updateMeasures(runtimeDefinition.measures);return;}}
this.load({reload:true});}
isMeasuresChangesRequireRPC(actualMeasures,nextMeasures){const nonComputedActualMeasures=actualMeasures.filter((m)=>!m.computedBy);const nonComputedNextMeasures=nextMeasures.filter((m)=>!m.computedBy);if(nonComputedActualMeasures.length!==nonComputedNextMeasures.length){return true;}
for(const measure of nonComputedActualMeasures){const updatedMeasure=nonComputedNextMeasures.find((m)=>m.id===measure.id);if(!updatedMeasure||updatedMeasure.fieldName!==measure.fieldName||updatedMeasure.aggregator!==measure.aggregator){return true;}}
return false;}
async loadMetadata(){this._fields=await this.loader.getFields(this.coreDefinition.model);await this._loadPropertiesDefinitions();}
async getModelLabel(){return this.loader.getModelLabel(this.coreDefinition.model);}
getFields(){return this._fields||{};}
init(options){this.load(options);}
async load(options){return this.loader.load(options);}
async createModelAndDefinition(){await this.loadMetadata();const definition=new OdooPivotRuntimeDefinition(this.coreDefinition,this.getFields());const model=new OdooPivotModel({_t},{fields:this.getFields(),definition,searchParams:{context:this.context,domain:this.coreDefinition.domain,},},{orm:this.odooDataProvider.orm,serverData:this.odooDataProvider.serverData,getters:this.getters,});return{model,definition};}
async _load(){const{model,definition}=await this.createModelAndDefinition();this.model=model;this.runtimeDefinition=definition;await this.model.load({context:this.context,domain:this.getDomainWithGlobalFilters()});}
get definition(){if(!this.runtimeDefinition){throw LOADING_ERROR;}
return this.runtimeDefinition;}
parseArgsToPivotDomain(args){const domain=[];const stringArgs=args.map(toString);for(let i=0;i<stringArgs.length;i+=2){const nameWithGranularity=stringArgs[i];if(nameWithGranularity==="measure"){domain.push({field:nameWithGranularity,value:stringArgs[i+1],type:"char"});continue;}
const{dimensionWithGranularity,isPositional,field}=this.parseGroupField(nameWithGranularity);if(isPositional){const table=this.getExpandedTableStructure();this.sortTableStructure(table);const previousDomain=[...domain,{field:nameWithGranularity,value:stringArgs[i+1],type:"number"},];domain.push({field:dimensionWithGranularity,value:this.getLastPivotGroupValue(previousDomain),type:field.type,});}else{const normalizedValue=toNormalizedPivotValue(this.definition.getDimension(dimensionWithGranularity),args[i+1]);domain.push({field:dimensionWithGranularity,value:normalizedValue,type:field.type,});}}
return domain;}
areDomainArgsFieldsValid(args){let dimensions=args.filter((_,index)=>index%2===0).map(toString).map((arg)=>arg==="measure"?"measure":this.parseGroupField(arg).dimensionWithGranularity);if(dimensions.length&&dimensions.at(-1)==="measure"){dimensions=dimensions.slice(0,-1);}
return areDomainArgsFieldsValid(dimensions,this.definition);}
getPivotMeasureValue(name){this.assertIsValid();return{value:this.getMeasure(name).displayName,};}
getPivotHeaderValueAndFormat(domain){this.assertIsValid();const lastNode=domain.at(-1);if(!lastNode){return{value:_t("Total")};}
if(lastNode.field==="measure"){const measureId=lastNode.value;return{value:this.getMeasure(measureId).displayName};}
const value=this.model.getGroupByCellValue(lastNode.field,lastNode.value);const format=this._getPivotFieldFormat(lastNode.field,lastNode.value);return{value,format};}
getMeasure(id){const measures=this.definition.measures;const measure=measures.find((m)=>m.id===id);if(!measure){throw new EvaluationError(_t("Field %s does not exist",id));}
return measure;}
getLastPivotGroupValue(domain){this.assertIsValid();return this.model.getLastPivotGroupValue(domain);}
getCollapsedTableStructure(){this.assertIsValid();return this.model.getCollapsedTableStructure();}
getExpandedTableStructure(){this.assertIsValid();return this.model.getExpandedTableStructure();}
_getPivotFieldFormat(fieldName,value){const{field,granularity}=this.parseGroupField(fieldName);switch(field.type){case"integer":return"0";case"float":return"#,##0.00";case"monetary":return this.getters.getCompanyCurrencyFormat()||"#,##0.00";case"date":case"datetime":{const timeAdapter=pivotTimeAdapter(granularity);return timeAdapter.toValueAndFormat(value,this.getters.getLocale()).format;}
default:return undefined;}}
getPivotCellValueAndFormat(measureId,domain){this.assertIsValid();if(domain.filter((node)=>node.value===NO_RECORD_AT_THIS_POSITION).length){return{value:""};}
const measure=this.getMeasure(measureId);const value=this.model.getPivotCellValue(measure,domain);let format;switch(measure.aggregator){case"count":case"count_distinct":format="0";break;default:format=measure.fieldName==="__count"?"0":this._getPivotFieldFormat(measure.fieldName,value);}
return{value,format};}
parseGroupField(groupFieldString){this.assertIsValid();return this.model.parseGroupField(groupFieldString);}
getPivotCellDomain(domain){this.assertIsValid();return this.model.getPivotCellDomain(domain);}
getPossibleFieldValues(dimension){this.assertIsValid();return this.model.getPossibleFieldValues(dimension);}
async copyModelWithOriginalDomain(){const{model}=await this.createModelAndDefinition();const domain=new Domain(this.coreDefinition.domain).toList({...this.context,...user.context,});const searchParams={context:this.context,domain};await model.load(searchParams);return model;}
get lastUpdate(){return this.loader.lastUpdate;}
isModelValid(){return this.loader.isModelValid();}
isValid(){return this.loader.isValid();}
assertIsValid({throwOnError}={throwOnError:true}){return this.loader.assertIsValid({throwOnError});}
async _loadPropertiesDefinitions(){const orm=this.odooDataProvider.orm;const properties=this.coreDefinition.rows.concat(this.coreDefinition.columns).filter((dimension)=>dimension.fieldName.includes("."));await Promise.all(properties.map((dimension)=>orm.call(this.coreDefinition.model,"get_property_definition",[dimension.fieldName,]).then((propertyDefinition)=>{this._fields[dimension.fieldName]={...propertyDefinition,name:dimension.fieldName,};})));}
addGlobalFilterDomain(globalFilterDomain){const domain=Domain.and([this.coreDefinition.domain,globalFilterDomain]).toString();if(domain.toString()===new Domain(this.domainWithGlobalFilters).toString()){return;}
this.domainWithGlobalFilters=domain;if(!this.loader.hasEverBeenLoaded()){return;}
this.load({reload:true});}
getDomainWithGlobalFilters(){return new Domain(this.domainWithGlobalFilters).toList({...this.context,...user.context,});}}
const OdooPivotRuntimeDefinition=__exports.OdooPivotRuntimeDefinition=class OdooPivotRuntimeDefinition extends PivotRuntimeDefinition{constructor(definition,fields){super(definition,fields);this._domain=new Domain(definition.domain);this._context=definition.context;this._model=definition.model;for(const dimension of this.columns.concat(this.rows)){if((dimension.type==="date"||dimension.type==="datetime")&&!dimension.granularity){dimension.granularity="month";dimension.nameWithGranularity=`${dimension.fieldName}:month`;}}}
get domain(){return this._domain;}
get context(){return this._context;}
get model(){return this._model;}
getDefinitionForPivotModel(fields){return{searchParams:{domain:this.domain,context:this.context,groupBy:[],orderBy:[],},metaData:{activeMeasures:this.measures.filter((m)=>!m.computedBy).map((m)=>m.fieldName),resModel:this.model,colGroupBys:this.columns.map((c)=>c.nameWithGranularity),rowGroupBys:this.rows.map((r)=>r.nameWithGranularity),fieldAttrs:{},fields,},};}}
const MEASURES_TYPES=["integer","float","monetary"];const granularities=["year","quarter_number","quarter","month_number","month","iso_week_number","week","day_of_month","day","day_of_week",];pivotRegistry.add("ODOO",{ui:OdooPivot,definition:OdooPivotRuntimeDefinition,externalData:true,onIterationEndEvaluation:()=>{},dateGranularities:[...granularities],datetimeGranularities:[...granularities,"hour_number","minute_number","second_number"],isMeasureCandidate:(field)=>((MEASURES_TYPES.includes(field.type)&&field.aggregator)||field.type==="many2one")&&field.name!=="id"&&field.store,isGroupable:(field)=>field.groupable,});supportedPivotPositionalFormulaRegistry.add("ODOO",true);return __exports;});;

/* /spreadsheet/static/src/pivot/odoo_pivot_loader.js */
odoo.define('@spreadsheet/pivot/odoo_pivot_loader',['@odoo/o-spreadsheet','@web/core/network/rpc','@web/core/utils/concurrency','@spreadsheet/data_sources/data_source','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{EvaluationError,CellErrorType}=require("@odoo/o-spreadsheet");const{RPCError}=require("@web/core/network/rpc");const{KeepLast}=require("@web/core/utils/concurrency");const{getFields,LOADING_ERROR,ModelNotFoundError,}=require("@spreadsheet/data_sources/data_source");const{_t}=require("@web/core/l10n/translation");const OdooPivotLoader=__exports.OdooPivotLoader=class OdooPivotLoader{constructor(odooDataProvider,load){this.odooDataProvider=odooDataProvider;this.loadFn=load;this.lastUpdate=undefined;this.concurrency=new KeepLast();this.loadPromise=undefined;this.isFullyLoaded=false;this._isValid=true;this.loadError=undefined;this._isModelValid=true;}
async load(options){if(options&&options.reload){this.odooDataProvider.cancelPromise(this.loadPromise);this.loadPromise=undefined;}
if(!this.loadPromise){this.isFullyLoaded=false;this._isValid=true;this.loadError=undefined;this.loadPromise=this.concurrency.add(this.loadFn()).catch((e)=>{this._isValid=false;if(e instanceof ModelNotFoundError){this._isModelValid=false;this.loadError=Object.assign(new EvaluationError(_t(`The model "%(model)s" does not exist.`,{model:e.message})),{cause:e,});return;}
this.loadError=Object.assign(new EvaluationError(e instanceof RPCError?e.data.message:e.message),{cause:e});}).finally(()=>{this.lastUpdate=Date.now();this.isFullyLoaded=true;});await this.odooDataProvider.notifyWhenPromiseResolves(this.loadPromise);}
return this.loadPromise;}
async getFields(model){return getFields(this.odooDataProvider.fieldService,model);}
async getModelLabel(model){const result=await this.odooDataProvider.orm.cached().call("ir.model","display_name_for",[[model]]);return result[0]?.display_name||"";}
isModelValid(){return this.isFullyLoaded&&this._isModelValid;}
isValid(){return this.isFullyLoaded&&this._isValid;}
hasEverBeenLoaded(){return this.loadPromise!==undefined;}
assertIsValid({throwOnError}={throwOnError:true}){if(!this.isFullyLoaded){this.load();if(throwOnError){throw LOADING_ERROR;}
return LOADING_ERROR;}
if(!this.isValid()){if(throwOnError){throw this.loadError;}
return{value:CellErrorType.GenericError,message:this.loadError.message};}}}
return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_actions.js */
odoo.define('@spreadsheet/pivot/pivot_actions',['@spreadsheet/actions/helpers','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{navigateTo}=require("@spreadsheet/actions/helpers");const{helpers}=require("@odoo/o-spreadsheet");const{getNumberOfPivotFunctions}=helpers;const SEE_RECORDS_PIVOT=__exports.SEE_RECORDS_PIVOT=async(position,env,newWindow)=>{const pivotId=env.model.getters.getPivotIdFromPosition(position);const pivot=env.model.getters.getPivot(pivotId);await pivot.load();const{model}=pivot.definition;const{actionXmlId,context}=env.model.getters.getPivotCoreDefinition(pivotId);const pivotCell=env.model.getters.getPivotCellFromPosition(position);const domain=pivot.getPivotCellDomain(pivotCell.domain);const name=await pivot.getModelLabel();await navigateTo(env,actionXmlId,{type:"ir.actions.act_window",name,res_model:model,views:[[false,"list"],[false,"form"],],target:"current",domain,context,},{viewType:"list",newWindow});};const SEE_RECORDS_PIVOT_VISIBLE=__exports.SEE_RECORDS_PIVOT_VISIBLE=(position,getters)=>{const cell=getters.getCorrespondingFormulaCell(position);const evaluatedCell=getters.getEvaluatedCell(position);const pivotId=getters.getPivotIdFromPosition(position);const pivotCell=getters.getPivotCellFromPosition(position);return!!(pivotId&&evaluatedCell.type!=="empty"&&evaluatedCell.type!=="error"&&evaluatedCell.value!==""&&pivotCell.type!=="EMPTY"&&cell&&cell.isFormula&&getNumberOfPivotFunctions(cell.compiledFormula.tokens)===1&&getters.getPivotCoreDefinition(pivotId).type==="ODOO"&&getters.getPivot(pivotId).getPivotCellDomain(pivotCell.domain));};__exports.SET_FILTER_MATCHING_CONDITION=SET_FILTER_MATCHING_CONDITION;function SET_FILTER_MATCHING_CONDITION(position,getters){if(!SEE_RECORDS_PIVOT_VISIBLE(position,getters)){return false;}
const pivotId=getters.getPivotIdFromPosition(position);const pivotCell=getters.getPivotCellFromPosition(position);if(pivotCell.type==="EMPTY"){return false;}
const matchingFilters=getters.getFiltersMatchingPivotArgs(pivotId,pivotCell.domain);return matchingFilters.length>0&&pivotCell.type==="HEADER";}
__exports.SET_FILTER_MATCHING=SET_FILTER_MATCHING;function SET_FILTER_MATCHING(position,env){const pivotId=env.model.getters.getPivotIdFromPosition(position);const domain=env.model.getters.getPivotCellFromPosition(position).domain;const filters=env.model.getters.getFiltersMatchingPivotArgs(pivotId,domain);env.model.dispatch("SET_MANY_GLOBAL_FILTER_VALUE",{filters});}
return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_functions.js */
odoo.define('@spreadsheet/pivot/pivot_functions',['@web/core/l10n/translation','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const spreadsheet=require("@odoo/o-spreadsheet");const{arg,toString}=spreadsheet.helpers;const{functionRegistry}=spreadsheet.registries;const ODOO_FILTER_VALUE=({description:_t("Return the current value of a spreadsheet filter."),args:[arg("filter_name (string)",_t("The label of the filter whose value to return."))],category:"Odoo",compute:function(filterName){const unEscapedFilterName=toString(filterName).replaceAll('\\"','"');return this.getters.getFilterDisplayValue(unEscapedFilterName);},returns:["STRING"],});functionRegistry.add("ODOO.FILTER.VALUE",ODOO_FILTER_VALUE);return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_helpers.js */
odoo.define('@spreadsheet/pivot/pivot_helpers',['@web/core/l10n/translation','@odoo/o-spreadsheet','@web/core/utils/strings'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{EvaluationError,helpers}=require("@odoo/o-spreadsheet");const{sprintf}=require("@web/core/utils/strings");const{isDateOrDatetimeField}=helpers;const pivotFormulaRegex=__exports.pivotFormulaRegex=/^=.*PIVOT/;const AGGREGATOR_NAMES={count:_t("Count"),count_distinct:_t("Count Distinct"),bool_and:_t("Boolean And"),bool_or:_t("Boolean Or"),max:_t("Maximum"),min:_t("Minimum"),avg:_t("Average"),sum:_t("Sum"),};const NUMBER_AGGREGATORS=["max","min","avg","sum","count_distinct","count"];const DATE_AGGREGATORS=["max","min","count_distinct","count"];const AGGREGATORS_BY_FIELD_TYPE={integer:NUMBER_AGGREGATORS,float:NUMBER_AGGREGATORS,monetary:NUMBER_AGGREGATORS,date:DATE_AGGREGATORS,datetime:DATE_AGGREGATORS,boolean:["count_distinct","count","bool_and","bool_or"],char:["count_distinct","count"],many2one:["count_distinct","count"],reference:["count_distinct","count"],};const ODOO_AGGREGATORS=__exports.ODOO_AGGREGATORS={};for(const type in AGGREGATORS_BY_FIELD_TYPE){ODOO_AGGREGATORS[type]={};for(const aggregator of AGGREGATORS_BY_FIELD_TYPE[type]){ODOO_AGGREGATORS[type][aggregator]=AGGREGATOR_NAMES[aggregator];}}
__exports.parseGroupField=parseGroupField;function parseGroupField(allFields,groupFieldString){let fieldName=groupFieldString;let granularity=undefined;const index=groupFieldString.indexOf(":");if(index!==-1){fieldName=groupFieldString.slice(0,index);granularity=groupFieldString.slice(index+1);}
const isPositional=fieldName.startsWith("#");fieldName=isPositional?fieldName.substring(1):fieldName;const field=allFields[fieldName];if(field===undefined){throw new EvaluationError(sprintf(_t("Field %s does not exist"),fieldName));}
if(isDateOrDatetimeField(field)){granularity=granularity||"month";}
const dimensionWithGranularity=granularity?`${fieldName}:${granularity}`:fieldName;return{isPositional,field,granularity,dimensionWithGranularity,};}
__exports.domainHasNoRecordAtThisPosition=domainHasNoRecordAtThisPosition;function domainHasNoRecordAtThisPosition(domain){return domain.some((node)=>node.value==="NO_RECORD_AT_THIS_POSITION");}
return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_model.js */
odoo.define('@spreadsheet/pivot/pivot_model',['@web/core/l10n/translation','@web/core/domain','@web/core/utils/strings','@web/views/pivot/pivot_model','@odoo/o-spreadsheet','@spreadsheet/pivot/pivot_helpers'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Domain}=require("@web/core/domain");const{sprintf}=require("@web/core/utils/strings");const{PivotModel}=require("@web/views/pivot/pivot_model");const{helpers,constants,EvaluationError,SpreadsheetPivotTable}=require("@odoo/o-spreadsheet");const{parseGroupField}=require("@spreadsheet/pivot/pivot_helpers");const{toNormalizedPivotValue,toNumber,isDateOrDatetimeField,pivotTimeAdapter}=helpers;const{DEFAULT_LOCALE}=constants;const NO_RECORD_AT_THIS_POSITION=__exports.NO_RECORD_AT_THIS_POSITION="__NO_RECORD_AT_THIS_POSITION__";const OdooPivotModel=__exports.OdooPivotModel=class OdooPivotModel extends PivotModel{constructor(env,params,services){super(env,params,services);this._displayNames={};this._displayLabels={};this.serverData=services.serverData;this.getters=services.getters;}
setup(params,services){const p=params.definition.getDefinitionForPivotModel(params.fields);p.searchParams={...p.searchParams,...params.searchParams,};super.setup(p);this.definition=params.definition;}
updateMeasures(measures){for(const measure of this.definition.measures){const updatedMeasure=measures.find((m)=>m.id===measure.id);if(!updatedMeasure||updatedMeasure.computedBy){continue;}
if(updatedMeasure.fieldName!==measure.fieldName||updatedMeasure.aggregator!==measure.aggregator){throw new Error("Measures fieldName or aggregator cannot be updated");}}
this.definition.measures=measures;this.resetTableStructure();}
updateSortColumn(sortedColumn){this.definition.sortedColumn=sortedColumn;this.resetTableStructure();}
updateCollapsedDomains(collapsedDomains){console.log("updateCollapsedDomains",collapsedDomains);this.definition.collapsedDomains=collapsedDomains;this.resetTableStructure();}
getDefinition(){return this.definition;}
async load(searchParams){if(this.metaData.activeMeasures.find((fieldName)=>fieldName!=="__count"&&!this.metaData.fields[fieldName])){throw new Error(_t("Some measures are not available: %s",this.metaData.activeMeasures.filter((fieldName)=>!this.metaData.fields[fieldName]).join(", ")));}
searchParams.groupBy=[];searchParams.orderBy=[];await super.load(searchParams);}
getPivotCellValue(measure,domain){if(domain.some((node)=>node.value===NO_RECORD_AT_THIS_POSITION)){return"";}
const{cols,rows}=this._getColsRowsValuesFromDomain(domain);const group=JSON.stringify([rows,cols]);const values=this.data.measurements[group];const measurementId=this._getAggregateSpec(measure);if(values&&(values[0][measurementId]||values[0][measurementId]===0)){return values[0][measurementId];}
return"";}
getGroupByCellValue(groupFieldString,groupValueString){if(groupValueString===NO_RECORD_AT_THIS_POSITION){return"";}
const{field,granularity,dimensionWithGranularity}=this.parseGroupField(groupFieldString);const dimension=this.definition.getDimension(dimensionWithGranularity);const value=toNormalizedPivotValue(dimension,groupValueString);const undef=_t("None");if(isDateOrDatetimeField(field)){const adapter=pivotTimeAdapter(granularity);return adapter.toValueAndFormat(value,this.getters.getLocale()).value;}
if(field.relation){if(value===false){return undef;}
return this._getRelationalDisplayName(field.relation,value);}
const label=this._displayLabels[field.name]?.[value];if(!label){return undef;}
return label;}
getLastPivotGroupValue(domain){const lastNode=domain.at(-1);if(!lastNode){throw new Error("Domain size should be at least 1");}
if(lastNode.field.startsWith("#")){if(domain.filter((node)=>node.value===NO_RECORD_AT_THIS_POSITION).length){return NO_RECORD_AT_THIS_POSITION;}
const{dimensionWithGranularity}=this.parseGroupField(lastNode.field);const{cols,rows}=this._getColsRowsValuesFromDomain(domain);return this._isCol(dimensionWithGranularity)?cols.at(-1):rows.at(-1);}
return lastNode.value;}
getPivotCellDomain(domain){if(domain.some((node)=>node.value===NO_RECORD_AT_THIS_POSITION)){return undefined;}
const{cols,rows}=this._getColsRowsValuesFromDomain(domain);const key=JSON.stringify([rows,cols]);const domains=this.data.groupDomains[key];return domains?domains[0]:Domain.FALSE.toList();}
resetTableStructure(){this._collapsedTableStructure=undefined;this._expandedTableStructure=undefined;}
getCollapsedTableStructure(){if(this._collapsedTableStructure===undefined){this._collapsedTableStructure=this._buildTableStructure("collapsed");}
return this._collapsedTableStructure;}
getExpandedTableStructure(){if(this._expandedTableStructure===undefined){this._expandedTableStructure=this._buildTableStructure("expanded");}
return this._expandedTableStructure;}
getPossibleFieldValues(dimension){const valuesWithLabels=[];const valuesUniqueness=new Set();const isCol=this._isCol(dimension.nameWithGranularity);const groupBys=isCol?this.definition.columns:this.definition.rows;const tree=isCol?this.data.colGroupTree:this.data.rowGroupTree;const groupByIndex=groupBys.findIndex((d)=>d.nameWithGranularity===dimension.nameWithGranularity);const visitTree=(tree)=>{const{values,labels}=tree.root;const value=values[groupByIndex];if(value!==undefined&&!valuesUniqueness.has(value)){valuesUniqueness.add(value);valuesWithLabels.push({value:value,label:labels[groupByIndex].toString(),});}
[...tree.directSubTrees.values()].forEach((subTree)=>{visitTree(subTree);});};visitTree(tree);return valuesWithLabels;}
_buildTableStructure(mode){const cols=this._getSpreadsheetCols();const rows=this._getSpreadsheetRows(this.data.rowGroupTree);rows.push(rows.shift());const measures=this.getDefinition().measures.filter((measure)=>!measure.isHidden).map((measure)=>measure.id);const fieldsType={};for(const columns of this.getDefinition().columns){fieldsType[columns.fieldName]=columns.type;}
for(const row of this.getDefinition().rows){fieldsType[row.fieldName]=row.type;}
const collapsedDomains=mode==="collapsed"?this.getDefinition().collapsedDomains:undefined;return new SpreadsheetPivotTable(cols,rows,measures,fieldsType,collapsedDomains);}
async _loadData(config){this.parseGroupField=parseGroupField.bind(null,this.metaData.fields);const prune=false;await super._loadData(config,prune);const registerLabels=(tree,groupBys)=>{const group=tree.root;if(!tree.directSubTrees.size){for(let i=0;i<group.values.length;i++){const{field}=this.parseGroupField(groupBys[i]);if(!field.relation){this._registerDisplayLabel(field.name,group.values[i],group.labels[i]);}else{const id=group.values[i];const displayName=group.labels[i];this._registerDisplayName(field.relation,id,displayName);}}}
[...tree.directSubTrees.values()].forEach((subTree)=>{registerLabels(subTree,groupBys);});};registerLabels(this.data.colGroupTree,this.metaData.fullColGroupBys);registerLabels(this.data.rowGroupTree,this.metaData.fullRowGroupBys);}
_registerDisplayLabel(fieldName,value,label){if(!this._displayLabels[fieldName]){this._displayLabels[fieldName]={};}
this._displayLabels[fieldName][value]=label;}
_registerDisplayName(resModel,resId,displayName){if(!this._displayNames[resModel]){this._displayNames[resModel]={};}
this._displayNames[resModel][resId]=displayName;}
_getRelationalDisplayName(resModel,resId){const displayName=this._displayNames[resModel]?.[resId]||this.serverData.batch.get("spreadsheet.mixin","get_display_names_for_spreadsheet",{model:resModel,id:resId,});if(!displayName){throw new EvaluationError(_t("Unable to fetch the label of %(id)s of model %(model)s",{id:resId,model:resModel,}));}
return displayName;}
_normalize(groupBy){const[fieldName]=groupBy.split(":");const field=this.metaData.fields[fieldName];if(!field){throw new EvaluationError(_t("Field %s does not exist",fieldName));}
return super._normalize(groupBy);}
_getGroupValues(group,groupBys){return groupBys.map((gb)=>{const groupBy=this._normalize(gb);const{field,granularity}=this.parseGroupField(gb);if(isDateOrDatetimeField(field)){return pivotTimeAdapter(granularity).normalizeServerValue(groupBy,field,group,this.getters.getLocale());}
return this._sanitizeValue(group[groupBy]);});}
_isCol(nameWithGranularity){return this.metaData.fullColGroupBys.includes(nameWithGranularity);}
_isRow(nameWithGranularity){return this.metaData.fullRowGroupBys.includes(nameWithGranularity);}
_parsePivotFormulaWithPosition(dimensionWithGranularity,groupValueString,cols,rows){const position=toNumber(groupValueString,DEFAULT_LOCALE)-1;const table=this.getExpandedTableStructure();let tree;if(this._isCol(dimensionWithGranularity)){tree=table.getColTree();for(const col of cols){tree=tree&&tree.find((child)=>child.value===col)?.children;}}else{tree=table.getRowTree();for(const row of rows){tree=tree&&tree.find((child)=>child.value===row)?.children;}}
if(tree){const value=tree[position]?.value;return value!==undefined?value:NO_RECORD_AT_THIS_POSITION;}
return NO_RECORD_AT_THIS_POSITION;}
_getColsRowsValuesFromDomain(domain){const rows=[];const cols=[];for(const node of domain){const{isPositional,dimensionWithGranularity}=this.parseGroupField(node.field);let value;if(isPositional){value=this._parsePivotFormulaWithPosition(dimensionWithGranularity,node.value,cols,rows);}else{const dimension=this.definition.getDimension(dimensionWithGranularity);value=toNormalizedPivotValue(dimension,node.value);}
if(this._isCol(dimensionWithGranularity)){cols.push(value);}else if(this._isRow(dimensionWithGranularity)){rows.push(value);}else{throw new EvaluationError(sprintf(_t("Dimension %s is not a group by"),dimensionWithGranularity));}}
return{rows,cols};}
_getSpreadsheetRows(tree){const rows=[];const group=tree.root;const indent=group.labels.length;const rowGroupBys=this.metaData.fullRowGroupBys;rows.push({fields:rowGroupBys.slice(0,indent),values:group.values.map((val)=>val.toString()),indent,});const subTreeKeys=tree.sortedKeys||[...tree.directSubTrees.keys()];subTreeKeys.forEach((subTreeKey)=>{const subTree=tree.directSubTrees.get(subTreeKey);rows.push(...this._getSpreadsheetRows(subTree));});return rows;}
_getSpreadsheetCols(){const colGroupBys=this.metaData.fullColGroupBys;const height=colGroupBys.length;const measures=this.getDefinition().measures.filter((measure)=>!measure.isHidden);const measureCount=measures.length;const leafCounts=this._getLeafCounts(this.data.colGroupTree);const headers=new Array(height).fill(0).map(()=>[]);function generateTreeHeaders(tree,fields){const group=tree.root;const rowIndex=group.values.length;if(rowIndex!==0){const row=headers[rowIndex-1];const leafCount=leafCounts[JSON.stringify(tree.root.values)];const cell={fields:colGroupBys.slice(0,rowIndex),values:group.values.map((val)=>val.toString()),width:leafCount*measureCount,};row.push(cell);}
[...tree.directSubTrees.values()].forEach((subTree)=>{generateTreeHeaders(subTree,fields);});}
generateTreeHeaders(this.data.colGroupTree,this.metaData.fields);const hasColGroupBys=this.metaData.colGroupBys.length;const measureRow=[];if(hasColGroupBys){headers[headers.length-1].forEach((cell)=>{measures.forEach((measure)=>{const measureCell={fields:[...cell.fields,"measure"],values:[...cell.values,measure.id],width:1,};measureRow.push(measureCell);});});}
measures.forEach((measure)=>{const measureCell={fields:["measure"],values:[measure.id],width:1,};measureRow.push(measureCell);});headers.push(measureRow);if(headers.length===1){headers.unshift([]);}
headers[headers.length-2].push({fields:[],values:[],width:measures.length,});return headers;}
_getAggregateSpec(measure){if(measure.fieldName==="__count"){return"__count";}
if(measure.aggregator){return`${measure.fieldName}:${measure.aggregator}`;}
if(measure.type==="many2one"){return`${measure.fieldName}:count_distinct`;}
const field=this.metaData.fields[measure.fieldName];if(!field.aggregator){throw new Error(`Field ${measure.fieldName} doesn't have a default aggregator`);}
return`${measure.fieldName}:${field.aggregator}`;}
_getMeasureSpecs(){return this.getDefinition().measures.filter((measure)=>!measure.computedBy).map(this._getAggregateSpec,this);}
async _getGroupsSubdivision(params,groupInfo){const{columns,rows}=this.getDefinition();const allGroupBys=params.groupingSets.flat();const order=columns.concat(rows).filter((dimension)=>dimension.order&&allGroupBys.includes(dimension.nameWithGranularity)).map((dimension)=>`${dimension.nameWithGranularity} ${dimension.order}`).join(",");params.kwargs.order=order;return super._getGroupsSubdivision(params,groupInfo);}
_getMeasurements(group){return this.getDefinition().measures.filter((measure)=>!measure.computedBy).reduce((measurements,measure)=>{const measurementId=this._getAggregateSpec(measure);var measurement=group[measurementId];if(measurement instanceof Array){measurement=1;}
if(measure.type==="boolean"&&measurement instanceof Boolean){measurement=measurement?1:0;}
measurements[measurementId]=measurement;return measurements;},{});}
_getCellValue(groupId,measureName,originIndexes,config){const measure=this.getDefinition().measures.find((m)=>m.fieldName===measureName);const measurementId=this._getAggregateSpec(measure);var key=JSON.stringify(groupId);if(!config.data.measurements[key]){return;}
var values=originIndexes.map((originIndex)=>config.data.measurements[key][originIndex][measurementId]);return values[0];}}
return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_time_adapters.js */
odoo.define('@spreadsheet/pivot/pivot_time_adapters',['@odoo/o-spreadsheet','@web/core/l10n/dates','@web/core/l10n/translation','@web/core/user'],function(require){'use strict';let __exports={};const{registries,helpers,constants,EvaluationError}=require("@odoo/o-spreadsheet");const{deserializeDate}=require("@web/core/l10n/dates");const{_t}=require("@web/core/l10n/translation");const{user}=require("@web/core/user");const{pivotTimeAdapterRegistry}=registries;const{toNumber,toJsDate,toString}=helpers;const{DEFAULT_LOCALE}=constants;const{DateTime}=luxon;function boundedOdooNumberDateAdapter(lower,upper){return{normalizeServerValue(groupBy,field,readGroupResult){return Number(readGroupResult[groupBy]);},increment(normalizedValue,step){const value=normalizedValue+step;if(value<lower||upper<value){return undefined;}
return value;},};}
const odooDayAdapter={normalizeServerValue(groupBy,field,readGroupResult){const serverDayValue=getGroupStartingDay(field,groupBy,readGroupResult);return toNumber(serverDayValue,DEFAULT_LOCALE);},increment(normalizedValue,step){return normalizedValue+step;},};const weekInputRegex=/\d{1,2}\/\d{4}/;const odooWeekAdapter={normalizeFunctionValue(value){if(!weekInputRegex.test(value)){const example=`"52/${DateTime.now().year}"`;throw new EvaluationError(_t("Week value must be a string in the format %(example)s, but received %(received_value)s instead.",{example,received_value:value}));}
const[week,year]=toString(value).split("/");return`${Number(week)}/${Number(year)}`;},toValueAndFormat(normalizedValue,locale){const[week,year]=normalizedValue.split("/");return{value:_t("W%(week)s %(year)s",{week,year}),};},toFunctionValue(normalizedValue){return`"${normalizedValue}"`;},normalizeServerValue(groupBy,field,readGroupResult){const weekValue=readGroupResult[groupBy];const{week,year}=parseServerWeekHeader(weekValue);return`${week}/${year}`;},increment(normalizedValue,step){const[week,year]=normalizedValue.split("/");const weekNumber=Number(week);const yearNumber=Number(year);const date=DateTime.fromObject({weekNumber,weekYear:yearNumber});const nextWeek=date.plus({weeks:step});return`${nextWeek.weekNumber}/${nextWeek.weekYear}`;},};const odooMonthAdapter={normalizeServerValue(groupBy,field,readGroupResult){const firstOfTheMonth=getGroupStartingDay(field,groupBy,readGroupResult);const date=deserializeDate(firstOfTheMonth).reconfigure({numberingSystem:"latn"});return date.toFormat("MM/yyyy");},increment(normalizedValue,step){return DateTime.fromFormat(normalizedValue,"MM/yyyy",{numberingSystem:"latn"}).plus({months:step}).toFormat("MM/yyyy");},};const NORMALIZED_QUARTER_REGEXP=/^[1-4]\/\d{4}$/;const odooQuarterAdapter={normalizeFunctionValue(value){if(typeof value==="string"&&NORMALIZED_QUARTER_REGEXP.test(value)){return value;}
const dateTime=toJsDate(value,DEFAULT_LOCALE);return`${dateTime.getQuarter()}/${dateTime.getFullYear()}`;},toValueAndFormat(normalizedValue){const[quarter,year]=normalizedValue.split("/");return{value:_t("Q%(quarter)s %(year)s",{quarter,year}),};},toFunctionValue(normalizedValue){return`"${normalizedValue}"`;},normalizeServerValue(groupBy,field,readGroupResult){const firstOfTheQuarter=getGroupStartingDay(field,groupBy,readGroupResult);const date=deserializeDate(firstOfTheQuarter);return`${date.quarter}/${date.year}`;},increment(normalizedValue,step){const[quarter,year]=normalizedValue.split("/");const date=DateTime.fromObject({year:Number(year),month:Number(quarter)*3});const nextQuarter=date.plus({quarters:step});return`${nextQuarter.quarter}/${nextQuarter.year}`;},};const odooYearAdapter={normalizeServerValue(groupBy,field,readGroupResult){const value=readGroupResult[groupBy];return Array.isArray(value)?Number(value[1]):false;},increment(normalizedValue,step){return normalizedValue+step;},};const odooDayOfWeekAdapter={normalizeServerValue(groupBy,field,readGroupResult,locale){const fromLocaleIsZero=(7-locale.weekStart+Number(readGroupResult[groupBy]))%7;return fromLocaleIsZero+1;},increment(normalizedValue,step){return(normalizedValue+step)%7;},};const odooHourNumberAdapter={normalizeServerValue(groupBy,field,readGroupResult){return Number(readGroupResult[groupBy]);},increment(normalizedValue,step){return(normalizedValue+step)%24;},};const odooMinuteNumberAdapter={normalizeServerValue(groupBy,field,readGroupResult){return Number(readGroupResult[groupBy]);},increment(normalizedValue,step){return(normalizedValue+step)%60;},};const odooSecondNumberAdapter={normalizeServerValue(groupBy,field,readGroupResult){return Number(readGroupResult[groupBy]);},increment(normalizedValue,step){return(normalizedValue+step)%60;},};function falseHandlerDecorator(adapter){return{normalizeServerValue(groupBy,field,readGroupResult,locale){if(readGroupResult[groupBy]===false){return false;}
return adapter.normalizeServerValue(groupBy,field,readGroupResult,locale);},increment(normalizedValue,step){if(normalizedValue===false||(typeof normalizedValue==="string"&&normalizedValue.toLowerCase()==="false")){return false;}
return adapter.increment(normalizedValue,step);},normalizeFunctionValue(value){if(value.toLowerCase()==="false"){return false;}
return adapter.normalizeFunctionValue(value);},toValueAndFormat(normalizedValue,locale){if(normalizedValue===false||(typeof normalizedValue==="string"&&normalizedValue.toLowerCase()==="false")){return{value:_t("None")};}
return adapter.toValueAndFormat(normalizedValue,locale);},toFunctionValue(value){if(value===false){return"FALSE";}
return adapter.toFunctionValue(value);},};}
function extendSpreadsheetAdapter(granularity,adapter){const originalAdapter=pivotTimeAdapterRegistry.get(granularity);pivotTimeAdapterRegistry.replace(granularity,falseHandlerDecorator({...originalAdapter,...adapter,}));}
pivotTimeAdapterRegistry.add("week",falseHandlerDecorator(odooWeekAdapter));pivotTimeAdapterRegistry.add("quarter",falseHandlerDecorator(odooQuarterAdapter));extendSpreadsheetAdapter("day",odooDayAdapter);extendSpreadsheetAdapter("year",odooYearAdapter);extendSpreadsheetAdapter("day_of_month",boundedOdooNumberDateAdapter(1,31));extendSpreadsheetAdapter("iso_week_number",boundedOdooNumberDateAdapter(0,54));extendSpreadsheetAdapter("month_number",boundedOdooNumberDateAdapter(1,12));extendSpreadsheetAdapter("quarter_number",boundedOdooNumberDateAdapter(1,4));extendSpreadsheetAdapter("day_of_week",odooDayOfWeekAdapter);extendSpreadsheetAdapter("hour_number",odooHourNumberAdapter);extendSpreadsheetAdapter("minute_number",odooMinuteNumberAdapter);extendSpreadsheetAdapter("second_number",odooSecondNumberAdapter);extendSpreadsheetAdapter("month",odooMonthAdapter);function getGroupStartingDay(field,groupBy,group){const sqlValue=group[groupBy][0];if(field.type==="date"){return sqlValue;}
const userTz=user.tz||luxon.Settings.defaultZone.name;return DateTime.fromSQL(sqlValue,{zone:"utc"}).setZone(userTz).toISODate();}
function parseServerWeekHeader(value){const[week,year]=value[1].split(" ");return{week:Number(week.slice(1)),year:Number(year)};}
return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_to_function_values.js */
odoo.define('@spreadsheet/pivot/pivot_to_function_values',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{registries,helpers,constants}=require("@odoo/o-spreadsheet");const{DEFAULT_LOCALE}=constants;const{pivotToFunctionValueRegistry}=registries;const{toString,toNumber}=helpers;const toFunctionValueDateTime=pivotToFunctionValueRegistry.get("date");function isFalseValue(value){return value===false||(typeof value==="string"&&value.toLowerCase()==="false");}
function _toDate(value,granularity){if(isFalseValue(value)){return"FALSE";}
if(!granularity){granularity="month";}
return toFunctionValueDateTime(value,granularity);}
function _toString(value){if(isFalseValue(value)){return"FALSE";}
return`"${toString(value).replace(/"/g, '\\"')}"`;}
function _toNumber(value){if(isFalseValue(value)){return"FALSE";}
return`${toNumber(value, DEFAULT_LOCALE)}`;}
pivotToFunctionValueRegistry.add("text",_toString).add("selection",_toString).replace("char",_toString).replace("integer",_toNumber).add("monetary",_toNumber).add("many2one",_toNumber).add("many2many",_toNumber).add("float",_toNumber).replace("date",_toDate).replace("datetime",_toDate);return __exports;});;

/* /spreadsheet/static/src/pivot/pivot_values_normalizers.js */
odoo.define('@spreadsheet/pivot/pivot_values_normalizers',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{registries,helpers,constants}=require("@odoo/o-spreadsheet");const{DEFAULT_LOCALE}=constants;const{pivotNormalizationValueRegistry}=registries;const{toString,toNumber}=helpers;pivotNormalizationValueRegistry.add("text",(value)=>toString(value)).add("selection",(value)=>toString(value)).add("monetary",(value)=>toNumber(value,DEFAULT_LOCALE)).add("many2one",(value)=>toNumber(value,DEFAULT_LOCALE)).add("many2many",(value)=>toNumber(value,DEFAULT_LOCALE)).add("float",(value)=>toNumber(value,DEFAULT_LOCALE));return __exports;});;

/* /spreadsheet/static/src/pivot/plugins/pivot_core_global_filter_plugin.js */
odoo.define('@spreadsheet/pivot/plugins/pivot_core_global_filter_plugin',['@spreadsheet/o_spreadsheet/cancelled_reason','@spreadsheet/global_filters/helpers','@web/core/utils/objects','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{CommandResult}=require("@spreadsheet/o_spreadsheet/cancelled_reason");const{checkFilterFieldMatching}=require("@spreadsheet/global_filters/helpers");const{deepCopy}=require("@web/core/utils/objects");const{OdooCorePlugin}=require("@spreadsheet/plugins");const PivotCoreGlobalFilterPlugin=__exports.PivotCoreGlobalFilterPlugin=class PivotCoreGlobalFilterPlugin extends OdooCorePlugin{static getters=(["getPivotFieldMatch","getPivotFieldMatching"]);constructor(config){super(config);this.pivots={};}
allowDispatch(cmd){switch(cmd.type){case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.pivot){return checkFilterFieldMatching(cmd.pivot);}}
return CommandResult.Success;}
handle(cmd){switch(cmd.type){case"ADD_PIVOT":{if(cmd.pivot.type==="ODOO"){this._addPivot(cmd.pivotId,undefined);}
break;}
case"REMOVE_PIVOT":{this.history.update("pivots",cmd.pivotId,undefined);break;}
case"DUPLICATE_PIVOT":{const{pivotId,newPivotId}=cmd;const pivotDefinition=this.getters.getPivotCoreDefinition(pivotId);if(pivotDefinition.type!=="ODOO"){break;}
const pivot=deepCopy(this.pivots[pivotId]);this._addPivot(newPivotId,pivot.fieldMatching);break;}
case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":if(cmd.pivot){this._setPivotFieldMatching(cmd.filter.id,cmd.pivot);}
break;case"REMOVE_GLOBAL_FILTER":this._onFilterDeletion(cmd.id);break;}}
getPivotFieldMatch(id){const pivot=this.getters.getPivotCoreDefinition(id);if(pivot.type!=="ODOO"){return{};}
return this.pivots[id]?.fieldMatching||{};}
getPivotFieldMatching(pivotId,filterId){return this.getPivotFieldMatch(pivotId)[filterId];}
_setPivotFieldMatching(filterId,pivotFieldMatches){for(const[pivotId,fieldMatch]of Object.entries(pivotFieldMatches)){const pivot=this.getters.getPivotCoreDefinition(pivotId);if(pivot.type!=="ODOO"){continue;}
this.history.update("pivots",pivotId,"fieldMatching",filterId,fieldMatch);}}
_onFilterDeletion(filterId){const pivots={...this.pivots};for(const pivotId in pivots){this.history.update("pivots",pivotId,"fieldMatching",filterId,undefined);}}
_addPivot(id,fieldMatching=undefined){const pivot=this.getters.getPivotCoreDefinition(id);if(pivot.type==="ODOO"){this.history.update("pivots",id,{id,fieldMatching:fieldMatching||this.getters.getFieldMatchingForModel(pivot.model),});}}
import(data){if(data.pivots){for(const[id,pivot]of Object.entries(data.pivots)){this._addPivot(id,pivot.fieldMatching??{});}}}
export(data){for(const id in this.pivots){const pivot=this.getters.getPivotCoreDefinition(id);data.pivots[id].fieldMatching=pivot.type==="ODOO"?this.pivots[id].fieldMatching:{};}}}
return __exports;});;

/* /spreadsheet/static/src/pivot/plugins/pivot_core_view_global_filter_plugin.js */
odoo.define('@spreadsheet/pivot/plugins/pivot_core_view_global_filter_plugin',['@web/core/domain','@spreadsheet/pivot/pivot_model','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{NO_RECORD_AT_THIS_POSITION}=require("@spreadsheet/pivot/pivot_model");const{OdooCoreViewPlugin}=require("@spreadsheet/plugins");function pivotPeriodToFilterValue(timeRange,value){if(typeof value==="number"){value=value.toString(10);}
if(value==="false"||typeof value!=="string"){return undefined;}
const year=Number.parseInt(value.split("/").at(-1),10);if(isNaN(year)){return undefined;}
switch(timeRange){case"year":return{type:"year",year,};case"month":{const month=value.includes("/")?Number.parseInt(value.split("/")[0]):-1;if(month<=0||month>12){return{type:"year",year};}
return{type:"month",month,year,};}
case"quarter":{const quarter=value.includes("/")?Number.parseInt(value.split("/")[0]):-1;if(quarter<=0||quarter>4){return{type:"year",year};}
return{type:"quarter",quarter,year,};}}}
const PivotCoreViewGlobalFilterPlugin=__exports.PivotCoreViewGlobalFilterPlugin=class PivotCoreViewGlobalFilterPlugin extends OdooCoreViewPlugin{static getters=(["getPivotComputedDomain","getFiltersMatchingPivotArgs",]);constructor(config){super(config);}
beforeHandle(cmd){switch(cmd.type){case"START":this._addDomains();break;}}
handle(cmd){switch(cmd.type){case"ADD_GLOBAL_FILTER":case"EDIT_GLOBAL_FILTER":case"REMOVE_GLOBAL_FILTER":case"SET_GLOBAL_FILTER_VALUE":this._addDomains();break;case"UPDATE_PIVOT":case"UPDATE_ODOO_PIVOT_DOMAIN":this._addDomain(cmd.pivotId);break;case"UNDO":case"REDO":{if(cmd.commands.find((command)=>["ADD_GLOBAL_FILTER","EDIT_GLOBAL_FILTER","REMOVE_GLOBAL_FILTER","UPDATE_ODOO_PIVOT_DOMAIN","UPDATE_PIVOT",].includes(command.type))){this._addDomains();}
break;}}}
getPivotComputedDomain(pivotId){return this.getters.getPivot(pivotId).getDomainWithGlobalFilters();}
getFiltersMatchingPivotArgs(pivotId,PivotDomain){const lastNode=PivotDomain.at(-1);if(!lastNode||lastNode.field==="measure"){return[];}
const filters=this.getters.getGlobalFilters();const matchingFilters=[];for(const filter of filters){const dataSource=this.getters.getPivot(pivotId);const{type}=this.getters.getPivotCoreDefinition(pivotId);if(type!=="ODOO"){continue;}
const{field,granularity:time}=dataSource.parseGroupField(lastNode.field);const pivotFieldMatching=this.getters.getPivotFieldMatching(pivotId,filter.id);if(pivotFieldMatching&&pivotFieldMatching.chain===field.name){let value=dataSource.getLastPivotGroupValue(PivotDomain.slice(-1));if(value===NO_RECORD_AT_THIS_POSITION){continue;}
let transformedValue;const currentValue=this.getters.getGlobalFilterValue(filter.id);switch(filter.type){case"date":if(time){if(value==="false"){transformedValue=undefined;}else{transformedValue=pivotPeriodToFilterValue(time,value);if(JSON.stringify(transformedValue)===JSON.stringify(currentValue)){transformedValue=undefined;}}}else{continue;}
break;case"relation":if(typeof value=="string"){value=Number(value);if(Number.isNaN(value)){break;}}
if(value===false){break;}
if(JSON.stringify(currentValue?.ids)!==`[${value}]`){transformedValue={operator:"in",ids:[value]};}
break;case"text":if(JSON.stringify(currentValue?.strings)!==`[${value}]`){transformedValue={operator:"ilike",strings:[value]};}
break;}
matchingFilters.push({filterId:filter.id,value:transformedValue});}}
return matchingFilters;}
_addDomain(pivotId){if(this.getters.getPivotCoreDefinition(pivotId).type!=="ODOO"){return;}
const domainList=[];for(const[filterId,fieldMatch]of Object.entries(this.getters.getPivotFieldMatch(pivotId))){domainList.push(this.getters.getGlobalFilterDomain(filterId,fieldMatch));}
const domain=Domain.combine(domainList,"AND").toString();this.getters.getPivot(pivotId).addGlobalFilterDomain(domain);}
_addDomains(){for(const pivotId of this.getters.getPivotIds().filter((pivotId)=>this.getters.getPivot(pivotId).type==="ODOO")){this._addDomain(pivotId);}}}
return __exports;});;

/* /spreadsheet/static/src/pivot/plugins/pivot_odoo_core_plugin.js */
odoo.define('@spreadsheet/pivot/plugins/pivot_odoo_core_plugin',['@web/core/domain','@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{OdooCorePlugin}=require("@spreadsheet/plugins");const PivotOdooCorePlugin=__exports.PivotOdooCorePlugin=class PivotOdooCorePlugin extends OdooCorePlugin{handle(cmd){switch(cmd.type){case"UPDATE_ODOO_PIVOT_DOMAIN":this.dispatch("UPDATE_PIVOT",{pivotId:cmd.pivotId,pivot:{...this.getters.getPivotCoreDefinition(cmd.pivotId),domain:cmd.domain,},});break;}}
export(data){if(data.pivots){for(const id in data.pivots){if(data.pivots[id].type==="ODOO"){data.pivots[id].domain=new Domain(data.pivots[id].domain).toJson();}}}}}
return __exports;});;

/* /spreadsheet/static/src/pivot/plugins/pivot_odoo_ui_plugin.js */
odoo.define('@spreadsheet/pivot/plugins/pivot_odoo_ui_plugin',['@spreadsheet/plugins','@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{OdooUIPlugin}=require("@spreadsheet/plugins");const{helpers}=require("@odoo/o-spreadsheet");const{UNDO_REDO_PIVOT_COMMANDS}=helpers;UNDO_REDO_PIVOT_COMMANDS.push("UPDATE_ODOO_PIVOT_DOMAIN");const PivotOdooUIPlugin=__exports.PivotOdooUIPlugin=class PivotOdooUIPlugin extends OdooUIPlugin{static getters=([]);handle(cmd){switch(cmd.type){case"REFRESH_ALL_DATA_SOURCES":this.refreshAllPivots();break;}}
refreshAllPivots(){for(const pivotId of this.getters.getPivotIds()){this.dispatch("REFRESH_PIVOT",{id:pivotId});}}}
return __exports;});;

/* /spreadsheet/static/src/pivot/plugins/pivot_ui_global_filter_plugin.js */
odoo.define('@spreadsheet/pivot/plugins/pivot_ui_global_filter_plugin',['@spreadsheet/plugins'],function(require){'use strict';let __exports={};const{OdooUIPlugin}=require("@spreadsheet/plugins");const PivotUIGlobalFilterPlugin=__exports.PivotUIGlobalFilterPlugin=class PivotUIGlobalFilterPlugin extends OdooUIPlugin{constructor(config){super(config);this.selection.observe(this,{handleEvent:this.handleEvent.bind(this),});}
handleEvent(event){if(!this.getters.isDashboard()){return;}
switch(event.type){case"ZonesSelected":{const sheetId=this.getters.getActiveSheetId();const{col,row}=event.anchor.cell;const cell=this.getters.getCell({sheetId,col,row});if(cell!==undefined&&cell.content.startsWith("=PIVOT.HEADER(")){const filters=this._getFiltersMatchingPivot(sheetId,cell.compiledFormula.tokens);this.dispatch("SET_MANY_GLOBAL_FILTER_VALUE",{filters});}
break;}}}
_getFiltersMatchingPivot(sheetId,tokens){const functionDescription=this.getters.getFirstPivotFunction(sheetId,tokens);if(!functionDescription){return[];}
const{args}=functionDescription;if(args.length<=2){return[];}
const formulaId=args[0];const pivotId=this.getters.getPivotId(formulaId);const index=functionDescription.functionName==="PIVOT.HEADER"?1:2;const pivot=this.getters.getPivot(pivotId);const domainArgs=args.slice(index).map((value)=>({value}));const domain=pivot.parseArgsToPivotDomain(domainArgs);return this.getters.getFiltersMatchingPivotArgs(pivotId,domain);}}
return __exports;});;

/* /spreadsheet/static/src/plugins.js */
odoo.define('@spreadsheet/plugins',['@odoo/o-spreadsheet'],function(require){'use strict';let __exports={};const{CorePlugin,CoreViewPlugin,UIPlugin}=require("@odoo/o-spreadsheet");const OdooCorePlugin=__exports.OdooCorePlugin=CorePlugin;const OdooCoreViewPlugin=__exports.OdooCoreViewPlugin=CoreViewPlugin;const OdooUIPlugin=__exports.OdooUIPlugin=UIPlugin;return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/chart/chart_dashboard_menu.js */
odoo.define('@spreadsheet_dashboard/bundle/chart/chart_dashboard_menu',['@odoo/o-spreadsheet','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{components,registries}=require("@odoo/o-spreadsheet");const{patch}=require("@web/core/utils/patch");const{chartSubtypeRegistry}=registries;patch(components.ChartDashboardMenu.prototype,{get changeChartTypeMenuItems(){const definition=this.env.model.getters.getChartDefinition(this.props.figureUI.id);if(["odoo_bar","odoo_line","odoo_pie"].includes(definition.type)){return["odoo_bar","odoo_line","odoo_pie"].map((type)=>{const item=chartSubtypeRegistry.get(type);return{id:item.chartType,label:item.displayName,onClick:()=>this.onTypeChange(item.chartType),isSelected:item.chartType===this.selectedChartType,iconClass:this.getIconClasses(item.chartType),};});}
return super.changeChartTypeMenuItems;},onTypeChange(type){if(!type.startsWith("odoo_")){return super.onTypeChange(type);}
const figureId=this.props.figureUI.id;const currentDefinition=this.env.model.getters.getChartDefinition(figureId);if(currentDefinition.type===type){return;}
const definition=this.originalChartDefinition.type===type?this.originalChartDefinition:{...this.originalChartDefinition,...chartSubtypeRegistry.get(type).subtypeDefinition,type,};this.env.model.dispatch("UPDATE_CHART",{definition,figureId,sheetId:this.env.model.getters.getActiveSheetId(),});},});return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/chart/chart_js_component_dashboard.js */
odoo.define('@spreadsheet_dashboard/bundle/chart/chart_js_component_dashboard',['@odoo/o-spreadsheet','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{components}=require("@odoo/o-spreadsheet");const{patch}=require("@web/core/utils/patch");patch(components.ChartJsComponent.prototype,{createChart(chartData){if(this.env.model.getters.isDashboard()){chartData=this.addOdooMenuPluginToChartData(chartData);}
super.createChart(chartData);},updateChartJs(chartData){if(this.env.model.getters.isDashboard()){chartData=this.addOdooMenuPluginToChartData(chartData);}
super.updateChartJs(chartData);},addOdooMenuPluginToChartData(chartData){chartData.options.plugins.chartOdooMenuPlugin={env:this.env,menu:this.env.model.getters.getChartOdooMenu(this.props.figureUI.id),};return chartData;},});return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/chart/full_screen_chart/full_screen_chart.js */
odoo.define('@spreadsheet_dashboard/bundle/chart/full_screen_chart/full_screen_chart',['@odoo/o-spreadsheet','@web/core/utils/patch'],function(require){'use strict';let __exports={};const{components}=require("@odoo/o-spreadsheet");const{patch}=require("@web/core/utils/patch");patch(components.FullScreenChart.prototype,{get hasOdooMenu(){return(this.figureUI&&this.env.model.getters.getChartOdooMenu(this.figureUI.id)!==undefined);},});return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_action.js */
odoo.define('@spreadsheet_dashboard/bundle/dashboard_action/dashboard_action',['@web/core/l10n/translation','@web/core/registry','@web/search/control_panel/control_panel','@spreadsheet_dashboard/bundle/dashboard_action/dashboard_loader','@spreadsheet/actions/spreadsheet_component','@web/search/action_hook','@spreadsheet_dashboard/bundle/dashboard_action/mobile_search_panel/mobile_search_panel','@web/core/utils/hooks','@web/webclient/actions/action_service','@spreadsheet/components/share_button/share_button','@spreadsheet/hooks','@odoo/o-spreadsheet','@web/core/browser/router','@odoo/owl','@spreadsheet_dashboard/bundle/dashboard_action/dashboard_search_bar/dashboard_search_bar'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{ControlPanel}=require("@web/search/control_panel/control_panel");const{DashboardLoader,Status}=require("@spreadsheet_dashboard/bundle/dashboard_action/dashboard_loader");const{SpreadsheetComponent}=require("@spreadsheet/actions/spreadsheet_component");const{useSetupAction}=require("@web/search/action_hook");const{DashboardMobileSearchPanel}=require("@spreadsheet_dashboard/bundle/dashboard_action/mobile_search_panel/mobile_search_panel");const{useService}=require("@web/core/utils/hooks");const{standardActionServiceProps}=require("@web/webclient/actions/action_service");const{SpreadsheetShareButton}=require("@spreadsheet/components/share_button/share_button");const{useSpreadsheetPrint}=require("@spreadsheet/hooks");const{Registry}=require("@odoo/o-spreadsheet");const{router}=require("@web/core/browser/router");const{Component,onWillStart,useState,useEffect}=require("@odoo/owl");const{DashboardSearchBar}=require("@spreadsheet_dashboard/bundle/dashboard_action/dashboard_search_bar/dashboard_search_bar");const dashboardActionRegistry=__exports.dashboardActionRegistry=new Registry();const SpreadsheetDashboardAction=__exports.SpreadsheetDashboardAction=class SpreadsheetDashboardAction extends Component{static template="spreadsheet_dashboard.DashboardAction";static components={ControlPanel,SpreadsheetComponent,DashboardMobileSearchPanel,SpreadsheetShareButton,DashboardSearchBar,};static props={...standardActionServiceProps};static displayName=_t("Dashboards");setup(){this.Status=Status;this.controlPanelDisplay={};this.orm=useService("orm");this.actionService=useService("action");const geoJsonService=useService("geo_json_service");this.loader=useState(new DashboardLoader(this.env,this.env.services.orm,geoJsonService));onWillStart(async()=>{if(this.props.state&&this.props.state.dashboardLoader){const{groups,dashboards}=this.props.state.dashboardLoader;this.loader.restoreFromState(groups,dashboards);}else{await this.loader.load();}
const activeDashboardId=this.getInitialActiveDashboard();if(activeDashboardId){this.openDashboard(activeDashboardId);}});useEffect(()=>router.pushState({dashboard_id:this.activeDashboardId}),()=>[this.activeDashboardId]);useEffect(()=>{const dashboard=this.state.activeDashboard;if(dashboard&&dashboard.status===Status.Loaded){const render=()=>this.render(true);dashboard.model.on("update",this,render);return()=>dashboard.model.off("update",this,render);}},()=>{const dashboard=this.state.activeDashboard;return[dashboard?.model,dashboard?.status];});useSetupAction({getLocalState:()=>({activeDashboardId:this.activeDashboardId,dashboardLoader:this.loader.getState(),}),});useSpreadsheetPrint(()=>this.state.activeDashboard?.model);this.state=useState({activeDashboard:undefined,sidebarExpanded:true});}
get dashboardButton(){return dashboardActionRegistry.getAll()[0];}
get activeDashboardId(){return this.state.activeDashboard?this.state.activeDashboard.id:undefined;}
get filters(){const dashboard=this.state.activeDashboard;if(!dashboard||dashboard.status!==Status.Loaded){return[];}
return dashboard.model.getters.getGlobalFilters();}
setGlobalFilterValue(id,value,displayNames){this.state.activeDashboard.model.dispatch("SET_GLOBAL_FILTER_VALUE",{id,value,displayNames,});}
getInitialActiveDashboard(){if(this.props.state&&this.props.state.activeDashboardId){return this.props.state.activeDashboardId;}
const params=this.props.action.params;if(params&&params.dashboard_id){return params.dashboard_id;}
const[firstSection]=this.getDashboardGroups();if(firstSection&&firstSection.dashboards.length){return firstSection.dashboards[0].id;}}
getDashboardGroups(){return this.loader.getDashboardGroups();}
openDashboard(dashboardId){this.state.activeDashboard=this.loader.getDashboard(dashboardId);}
async editDashboard(id){const action=await this.env.services.orm.call("spreadsheet.dashboard","action_edit_dashboard",[id]);this.actionService.doAction(action);}
async shareSpreadsheet(data,excelExport){const url=await this.orm.call("spreadsheet.dashboard.share","action_get_share_url",[{dashboard_id:this.activeDashboardId,spreadsheet_data:JSON.stringify(data),excel_files:excelExport.files,},]);return url;}
async toggleFavorite(){if(!this.state.activeDashboard){return;}
const{id,isFavorite}=this.state.activeDashboard;await this.orm.call("spreadsheet.dashboard","action_toggle_favorite",[id]);this.state.activeDashboard.isFavorite=!isFavorite;}
toggleSidebar(){this.state.sidebarExpanded=!this.state.sidebarExpanded;}
get activeDashboardGroupName(){return this.getDashboardGroups().find((group)=>group.id!=="favorites"&&group.dashboards.some((d)=>d.id===this.activeDashboardId))?.name;}}
registry.category("actions").add("action_spreadsheet_dashboard",SpreadsheetDashboardAction,{force:true});return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_date_filter/dashboard_date_filter.js */
odoo.define('@spreadsheet_dashboard/bundle/dashboard_action/dashboard_date_filter/dashboard_date_filter',['@odoo/owl','@spreadsheet/global_filters/components/date_filter_dropdown/date_filter_dropdown','@spreadsheet/global_filters/helpers','@web/core/dropdown/dropdown'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const{DateFilterDropdown}=require("@spreadsheet/global_filters/components/date_filter_dropdown/date_filter_dropdown");const{dateFilterValueToString,getNextDateFilterValue,getPreviousDateFilterValue,}=require("@spreadsheet/global_filters/helpers");const{Dropdown}=require("@web/core/dropdown/dropdown");const DashboardDateFilter=__exports.DashboardDateFilter=class DashboardDateFilter extends Component{static template="spreadsheet_dashboard.DashboardDateFilter";static components={Dropdown,DateFilterDropdown};static props={value:{type:Object,optional:true},update:Function,};get inputValue(){return dateFilterValueToString(this.props.value);}
selectPrevious(){if(!this.props.value?.type){return;}
const previous=getPreviousDateFilterValue(this.props.value);if(!previous){return;}
this.props.update(previous);}
selectNext(){if(!this.props.value?.type){return;}
const next=getNextDateFilterValue(this.props.value);if(!next){return;}
this.props.update(next);}}
return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_facet/dashboard_facet.js */
odoo.define('@spreadsheet_dashboard/bundle/dashboard_action/dashboard_facet/dashboard_facet',['@odoo/owl'],function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const DashboardFacet=__exports.DashboardFacet=class DashboardFacet extends Component{static template="spreadsheet_dashboard.DashboardFacet";static components={};static props={facet:Object,clearFilter:Function,onClick:Function,};}
return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_loader.js */
odoo.define('@spreadsheet_dashboard/bundle/dashboard_action/dashboard_loader',['@odoo/o-spreadsheet','@spreadsheet/data_sources/odoo_data_provider','@spreadsheet/currency/helpers','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{Model}=require("@odoo/o-spreadsheet");const{OdooDataProvider}=require("@spreadsheet/data_sources/odoo_data_provider");const{createDefaultCurrency}=require("@spreadsheet/currency/helpers");const{_t}=require("@web/core/l10n/translation");const Status=__exports.Status={NotLoaded:"NotLoaded",Loading:"Loading",Loaded:"Loaded",Error:"Error",};const DashboardLoader=__exports.DashboardLoader=class DashboardLoader{constructor(env,orm,geoJsonService){this.env=env;this.orm=orm;this.groups=[];this.dashboards={};this.geoJsonService=geoJsonService;}
restoreFromState(groups,dashboards){this.groups=groups;this.dashboards=dashboards;}
getState(){return{groups:this.groups,dashboards:this.dashboards,};}
async load(){const groups=await this._fetchGroups();this.groups=groups.filter((group)=>group.published_dashboard_ids.length).map((group)=>({id:group.id,name:group.name,dashboards:group.published_dashboard_ids,}));const dashboards=this.groups.map((group)=>group.dashboards).flat();for(const dashboard of dashboards){this.dashboards[dashboard.id]={id:dashboard.id,displayName:dashboard.name,status:Status.NotLoaded,isFavorite:dashboard.is_favorite,};}}
getDashboard(dashboardId){const dashboard=this._getDashboard(dashboardId);if(dashboard.status===Status.NotLoaded){dashboard.promise=this._loadDashboardData(dashboardId);}
return dashboard;}
getDashboardGroups(){const favoriteDashboards=this._getFavoriteDashboards();const dashboardGroups=this.groups.map((section)=>({id:section.id,name:section.name,dashboards:section.dashboards.map((dashboard)=>({id:dashboard.id,displayName:dashboard.name,status:this._getDashboard(dashboard.id).status,})),}));return favoriteDashboards.length?[{id:"favorites",name:_t("FAVORITES"),dashboards:favoriteDashboards},...dashboardGroups,]:dashboardGroups;}
async _fetchGroups(){const groups=await this.orm.webSearchRead("spreadsheet.dashboard.group",[["published_dashboard_ids","!=",false]],{specification:{name:{},published_dashboard_ids:{fields:{name:{},is_favorite:{}}},},});return groups.records;}
_getFavoriteDashboards(){const favoriteDashboards=[];this.groups.flatMap((group)=>group.dashboards).forEach((dashboard)=>{const dashboardData=this._getDashboard(dashboard.id);if(dashboardData.isFavorite){favoriteDashboards.push({id:dashboard.id,displayName:dashboard.name,status:dashboardData.status,});}});return favoriteDashboards;}
_getDashboard(id){if(!this.dashboards[id]){this.dashboards[id]={status:Status.NotLoaded,id,displayName:""};}
return this.dashboards[id];}
async _loadDashboardData(dashboardId){const dashboard=this._getDashboard(dashboardId);dashboard.status=Status.Loading;try{const result=await this.env.services.http.get(`/spreadsheet/dashboard/data/${dashboardId}`);const{snapshot,revisions,default_currency,is_sample}=result;dashboard.model=this._createSpreadsheetModel(snapshot,revisions,default_currency);dashboard.status=Status.Loaded;dashboard.isSample=is_sample;}catch(error){dashboard.error=error;dashboard.status=Status.Error;throw error;}}
_activateFirstSheet(model){const sheetId=model.getters.getActiveSheetId();const firstSheetId=model.getters.getSheetIds()[0];if(firstSheetId!==sheetId){model.dispatch("ACTIVATE_SHEET",{sheetIdFrom:sheetId,sheetIdTo:firstSheetId,});}}
_createSpreadsheetModel(snapshot,revisions=[],currency){const odooDataProvider=new OdooDataProvider(this.env);const model=new Model(snapshot,{custom:{env:this.env,orm:this.orm,odooDataProvider},mode:"dashboard",defaultCurrency:createDefaultCurrency(currency),external:{geoJsonService:this.geoJsonService},},revisions);this._activateFirstSheet(model);odooDataProvider.addEventListener("data-source-updated",()=>model.dispatch("EVALUATE_CELLS"));return model;}}
return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_search_bar/dashboard_search_bar.js */
odoo.define('@spreadsheet_dashboard/bundle/dashboard_action/dashboard_search_bar/dashboard_search_bar',['@odoo/owl','@spreadsheet_dashboard/bundle/dashboard_action/dashboard_facet/dashboard_facet','@web/core/utils/hooks','@web/core/dropdown/dropdown_hooks','@spreadsheet_dashboard/bundle/dashboard_action/dashboard_date_filter/dashboard_date_filter','@spreadsheet/global_filters/components/filters_search_dialog/filters_search_dialog','@spreadsheet/global_filters/helpers'],function(require){'use strict';let __exports={};const{Component,onWillUpdateProps,onWillStart}=require("@odoo/owl");const{DashboardFacet}=require("@spreadsheet_dashboard/bundle/dashboard_action/dashboard_facet/dashboard_facet");const{useService}=require("@web/core/utils/hooks");const{useDropdownState}=require("@web/core/dropdown/dropdown_hooks");const{DashboardDateFilter}=require("@spreadsheet_dashboard/bundle/dashboard_action/dashboard_date_filter/dashboard_date_filter");const{FiltersSearchDialog}=require("@spreadsheet/global_filters/components/filters_search_dialog/filters_search_dialog");const{getFacetInfo}=require("@spreadsheet/global_filters/helpers");const DashboardSearchBar=__exports.DashboardSearchBar=class DashboardSearchBar extends Component{static template="spreadsheet_dashboard.DashboardSearchBar";static components={DashboardFacet,DashboardDateFilter,};static props={model:Object};setup(){this.facets=[];this.firstDateFilter=undefined;this.nameService=useService("name");this.dialog=useService("dialog");this.searchBarDropdownState=useDropdownState();onWillStart(this.computeState.bind(this));onWillUpdateProps(this.computeState.bind(this));}
openDialog(){this.dialog.add(FiltersSearchDialog,{model:this.props.model,});}
clearFilter(id){this.props.model.dispatch("SET_GLOBAL_FILTER_VALUE",{id});}
onFacetClick(){this.searchBarDropdownState.open();}
updateFirstDateFilter(value){this.props.model.dispatch("SET_GLOBAL_FILTER_VALUE",{id:this.firstDateFilter.id,value,});}
get firstDateFilterValue(){if(!this.firstDateFilter){return undefined;}
return this.props.model.getters.getGlobalFilterValue(this.firstDateFilter.id);}
async computeState(){const filters=this.props.model.getters.getGlobalFilters();const firstDateFilterIndex=filters.findIndex((filter)=>filter.type==="date");if(firstDateFilterIndex!==-1){this.firstDateFilter=filters.splice(firstDateFilterIndex,1)[0];}
this.facets=await Promise.all(filters.filter((filter)=>this.props.model.getters.isGlobalFilterActive(filter.id)).map((filter)=>this.getFacetFor(filter)));}
async getFacetFor(filter){const filterValue=this.props.model.getters.getGlobalFilterValue(filter.id);return getFacetInfo(this.env,filter,filterValue);}}
return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/dashboard_action/mobile_search_panel/mobile_search_panel.js */
odoo.define('@spreadsheet_dashboard/bundle/dashboard_action/mobile_search_panel/mobile_search_panel',['@web/core/l10n/translation','@odoo/owl'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{Component,useState}=require("@odoo/owl");const DashboardMobileSearchPanel=__exports.DashboardMobileSearchPanel=class DashboardMobileSearchPanel extends Component{static template="spreadsheet_dashboard.DashboardMobileSearchPanel";static props={onDashboardSelected:Function,groups:Object,activeDashboard:{type:Object,optional:true,},};setup(){this.state=useState({isOpen:false});}
get searchBarText(){return this.props.activeDashboard?this.props.activeDashboard.displayName:_t("Choose a dashboard....");}
onDashboardSelected(dashboardId){this.props.onDashboardSelected(dashboardId);this.state.isOpen=false;}
openDashboardSelection(){const dashboards=this.props.groups.map((group)=>group.dashboards).flat();if(dashboards.length>1){this.state.isOpen=true;}}}
return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/list/clickable_cell.js */
odoo.define('@spreadsheet_dashboard/bundle/list/clickable_cell',['@spreadsheet/list/list_actions','@odoo/o-spreadsheet','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{SEE_RECORD_LIST,SEE_RECORD_LIST_VISIBLE}=require("@spreadsheet/list/list_actions");const spreadsheet=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{clickableCellRegistry}=spreadsheet.registries;clickableCellRegistry.add("list",{condition:SEE_RECORD_LIST_VISIBLE,execute:SEE_RECORD_LIST,sequence:10,title:_t("Open record"),});return __exports;});;

/* /spreadsheet_dashboard/static/src/bundle/pivot/clickable_cell.js */
odoo.define('@spreadsheet_dashboard/bundle/pivot/clickable_cell',['@odoo/o-spreadsheet','@web/core/l10n/translation','@spreadsheet/pivot/pivot_actions'],function(require){'use strict';let __exports={};const spreadsheet=require("@odoo/o-spreadsheet");const{_t}=require("@web/core/l10n/translation");const{SEE_RECORDS_PIVOT,SEE_RECORDS_PIVOT_VISIBLE,SET_FILTER_MATCHING,SET_FILTER_MATCHING_CONDITION,}=require("@spreadsheet/pivot/pivot_actions");const{clickableCellRegistry}=spreadsheet.registries;clickableCellRegistry.add("pivot",{condition:SEE_RECORDS_PIVOT_VISIBLE,execute:SEE_RECORDS_PIVOT,title:_t("See records"),sequence:3,});clickableCellRegistry.add("pivot_set_filter_matching",{condition:SET_FILTER_MATCHING_CONDITION,execute:SET_FILTER_MATCHING,title:_t("Filter on this value"),sequence:2,});return __exports;});

                    /*******************************************
                    *  Templates                               *
                    *******************************************/

                    odoo.define("spreadsheet.o_spreadsheet.bundle.xml", ["@web/core/templates"], function(require) {
                        "use strict";
                        const { checkPrimaryTemplateParents, registerTemplate, registerTemplateExtension } = require("@web/core/templates");
                        /* spreadsheet.o_spreadsheet */
                        registerTemplate("o-spreadsheet-ValidationMessages", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ValidationMessages" xml:space="preserve">
    <t t-foreach="alertBoxes" t-as="box" t-key="'box' + box_index">
      <div t-att-class="divClasses" class="d-flex flex-column p-3 m-1 o-validation">
        <div class="d-flex align-items-center">
          <t t-if="props.msgType === 'info'" t-call="o-spreadsheet-Icon.CIRCLE_INFO"/>
          <t t-else="" t-call="o-spreadsheet-Icon.TRIANGLE_EXCLAMATION"/>
          <div class="d-flex flex-column overflow-hidden">
            <span t-foreach="box" t-as="msg" t-key="msg_index" class="ps-2" t-att-class="{'text-truncate': props.singleBox }" t-esc="msg"/>
          </div>
        </div>
      </div>
    </t>
  </t>

  `);
registerTemplate("o-spreadsheet-TopBar", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TopBar" xml:space="preserve">
    <div class="o-spreadsheet-topbar d-flex flex-column user-select-none" t-on-click="props.onClick">
      <div t-if="!env.isSmall" class="o-topbar-top d-flex justify-content-between">

        <div class="o-topbar-topleft d-flex">
          <t t-foreach="menus" t-as="menu" t-key="menu_index">
            <div t-if="menu.children.length !== 0" class="o-topbar-menu o-hoverable-button text-nowrap rounded" t-att-class="{'active': state.menuState.parentMenu and state.menuState.parentMenu.id === menu.id}" t-on-click="(ev) =&gt; this.toggleContextMenu(menu, ev)" t-on-mouseover="(ev) =&gt; this.onMenuMouseOver(menu, ev)" t-att-data-id="menu.id">
              <t t-esc="getMenuName(menu)"/>
            </div>
          </t>
        </div>
        <div class="o-topbar-topright d-flex justify-content-end align-items-center">
          <div t-foreach="topbarComponents" t-as="comp" t-key="comp.id" class="px-1">
            <t t-component="comp.component"/>
          </div>
        </div>
      </div>

      <div class="d-flex o-topbar-responsive" t-ref="toolBarContainer">
        <div class="o-topbar-toolbar d-flex">

          <div t-if="env.model.getters.isReadonly()" class="o-readonly-toolbar d-flex align-items-center text-muted">
            <span>
              <i class="fa fa-eye"/>
              Readonly Access
            </span>
          </div>
          <div t-else="" class="o-toolbar-tools d-flex ms-4 flex-grow-1" t-ref="toolBar">
            <div class="d-flex tool-container" t-foreach="toolsCategories" t-as="category" t-key="category" t-att-id="category">
              <t t-foreach="toolbarMenuRegistry.getEntries(category)" t-as="toolbarAction" t-key="toolbarAction_index">
                <t t-component="toolbarAction.component" t-props="toolbarAction.props"/>
              </t>
              <div t-if="showDivider(category_index)" class="o-topbar-divider"/>
            </div>
            <div t-ref="moreToolsContainer" class="d-flex align-items-center flex-grow-1 me-auto more-tools-container">
              <span class="o-toolbar-button o-menu-item-button o-hoverable-button  me-2 px-1 py-2 more-tools" t-ref="moreToolsButton" t-on-click.stop="toggleMoreTools">
                <t t-call="o-spreadsheet-Icon.SHORT_THIN_DRAG_HANDLE"/>
              </span>
            </div>
          </div>
        </div>
        <TopBarComposer t-if="!env.isSmall"/>
      </div>
      <div t-if="this.fingerprints.isEnabled" class="irregularity-map d-flex align-items-center justify-content-between">
        <div t-on-click="() =&gt; this.fingerprints.disable()" role="button" title="This tool analyzes spreadsheet formulas for patterns and highlights inconsistencies. Irregularities may indicate potential errors in formula structures, references, or arguments. (Click to turn off)" class="h-100 d-flex align-items-center text-info px-3">
          <t t-call="o-spreadsheet-Icon.IRREGULARITY_MAP"/>
          Irregularity map
        </div>
        <div class="ps-3 h-100 flex-fill d-flex justify-content-between rounded-0 alert alert-info ps-0 py-0 my-0">
          <span class="d-flex align-items-center">
            This tool analyzes formulas for patterns and highlights inconsistencies. Irregularities
            may indicate potential errors in formula structures, references or arguments.
          </span>
          <div class="ps-3 btn btn-link flex-shrink-0" t-on-click="() =&gt; this.fingerprints.disable()">
            Turn off
          </div>
        </div>
      </div>
    </div>
    <MenuPopover t-if="state.menuState.isOpen" anchorRect="state.menuState.anchorRect" menuItems="state.menuState.menuItems" onClose="() =&gt; this.closeMenus()" onMenuClicked="() =&gt; this.props.onClick()" popoverPositioning="'bottom-left'"/>
    <Popover t-if="state.toolsPopoverState.isOpen" t-props="toolsPopoverProps">
      <div class="d-flex px-2 py-1 flex-wrap align-items-center" style="background-color:white;">
        <t t-foreach="state.invisibleToolsCategories" t-as="category" t-key="category" t-att-id="category">
          <t t-foreach="toolbarMenuRegistry.getEntries(category)" t-as="toolbarAction" t-key="toolbarAction_index">
            <t t-component="toolbarAction.component" t-props="toolbarAction.props"/>
          </t>
          <div t-if="category_index &lt; state.invisibleToolsCategories.length-1" class="o-topbar-divider"/>
        </t>
      </div>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-NumberFormatsTool", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<div t-name="o-spreadsheet-NumberFormatsTool" t-ref="buttonRef" t-on-click.stop="" xml:space="preserve">
    <ActionButton action="formatNumberMenuItemSpec" hasTriangleDownIcon="true" onClick.bind="toggleMenu" class="props.class"/>
    <MenuPopover t-if="isActive" anchorRect="state.anchorRect" menuItems="state.menuItems" onClose="() =&gt; {}" popoverPositioning="'bottom-left'"/>
  </div>

  `);
registerTemplate("o-spreadsheet-TopBarFontSizeEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TopBarFontSizeEditor" xml:space="preserve">
    <FontSizeEditor currentFontSize="currentFontSize" onFontSizeChanged.bind="this.setFontSize" class="props.class" onToggle.bind="this.onToggle" onFocusInput.bind="this.onFocusInput"/>
  </t>

  `);
registerTemplate("o-spreadsheet-DropdownAction", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<div t-name="o-spreadsheet-DropdownAction" class="o-dropdown" t-ref="actionRef" t-on-click.stop="" xml:space="preserve">
    <ActionButton action="props.parentAction" hasTriangleDownIcon="true" onClick.bind="toggleDropdown" class="props.class"/>
    <Popover t-if="isActive" t-props="popoverProps">
      <div class="o-dropdown-content p-1" t-if="isActive" t-on-click.stop="">
        <div class="o-dropdown-line">
          <t t-foreach="props.childActions" t-as="action" t-key="action_index">
            <ActionButton action="action" class="props.childClass"/>
          </t>
        </div>
      </div>
    </Popover>
  </div>

  `);
registerTemplate("o-spreadsheet-ColorEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColorEditor" xml:space="preserve">
    <div class="d-flex align-items-center">
      <ColorPickerWidget currentColor="currentColor" toggleColorPicker.bind="onClick" showColorPicker="isMenuOpen" onColorPicked="(color) =&gt; this.setColor(color)" title="props.title" icon="props.icon" class="props.class"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-TextInput", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<div t-name="o-spreadsheet-TextInput" class="w-100" xml:space="preserve">
    <input t-ref="input" class="os-input w-100" type="text" t-att-class="props.class" t-att-id="props.id" t-att-placeholder="props.placeholder" t-att-value="props.value" t-on-change="save" t-on-blur="save" t-on-pointerdown="onMouseDown" t-on-pointerup="onMouseUp" t-on-keydown="onKeyDown"/>
  </div>

  `);
registerTemplate("o-spreadsheet-TableStylesPopover", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableStylesPopover" xml:space="preserve">
    <Popover t-if="props.popoverProps" t-props="props.popoverProps">
      <div class="o-table-style-popover d-flex flex-column py-3" t-ref="tableStyleList" t-on-contextmenu.prevent="">
        <div class="d-flex o-notebook ps-4 mb-3">
          <div t-foreach="Object.keys(categories)" t-as="category" t-key="category" class="o-notebook-tab d-flex align-items-center" t-att-class="{ 'selected': state.selectedCategory === category }" t-on-click="() =&gt; state.selectedCategory = category" t-att-data-id="category" t-esc="categories[category_value]"/>
        </div>
        <div class="d-flex flex-wrap px-4">
          <t t-foreach="displayedStyles" t-as="styleId" t-key="styleId">
            <TableStylePreview class="'o-table-style-popover-preview'" styleId="styleId" selected="styleId === props.selectedStyleId" tableConfig="props.tableConfig" tableStyle="env.model.getters.getTableStyle(styleId)" onClick="() =&gt; this.props.onStylePicked(styleId)"/>
          </t>
          <div t-if="state.selectedCategory === 'custom'" class="o-new-table-style o-table-style-list-item o-table-style-popover-preview d-flex justify-content-center align-items-center" t-on-click="newTableStyle">
            +
          </div>
        </div>
      </div>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-TableStylePreview", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableStylePreview" xml:space="preserve">
    <div class="o-table-style-list-item position-relative" t-att-class="{ 'selected': props.selected }" t-att-data-id="props.styleId" t-att-title="styleName" t-on-click="props.onClick" t-on-contextmenu.prevent="(ev) =&gt; this.onContextMenu(ev)">
      <div t-att-class="props.class">
        <canvas t-ref="canvas" class="w-100 h-100"/>
      </div>
      <div class="o-table-style-edit-button position-absolute d-none" t-if="isStyleEditable" t-on-click="this.editTableStyle" title="Edit custom table style">
        <t t-call="o-spreadsheet-Icon.EDIT"/>
      </div>
    </div>
    <MenuPopover t-if="menu.isOpen" menuItems="menu.menuItems" anchorRect="menu.anchorRect" onClose.bind="this.closeMenu"/>
  </t>

  `);
registerTemplate("o-spreadsheet-TableStylePicker", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableStylePicker" xml:space="preserve">
    <div class="o-table-style-picker d-flex flew-row justify-content-between ps-1">
      <div class="d-flex flex-row overflow-hidden ps-2">
        <t t-foreach="getDisplayedTableStyles()" t-as="styleId" t-key="styleId">
          <TableStylePreview class="'o-table-style-picker-preview'" selected="styleId === props.table.config.styleId" tableConfig="props.table.config" tableStyle="env.model.getters.getTableStyle(styleId)" styleId="styleId" onClick="() =&gt; this.onStylePicked(styleId)"/>
        </t>
      </div>
      <div class="o-table-style-picker-arrow d-flex align-items-center px-1" t-on-click.stop="onArrowButtonClick">
        <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
      </div>
    </div>
    <TableStylesPopover tableConfig="props.table.config" selectedStyleId="props.table.config.styleId" onStylePicked.bind="onStylePicked" popoverProps="state.popoverProps" closePopover.bind="closePopover"/>
  </t>

  `);
registerTemplate("o-spreadsheet-TableResizer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableResizer" xml:space="preserve">
    <div class="o-table-resizer position-absolute" t-att-style="containerStyle" t-on-pointerdown="onMouseDown"/>
  </t>

  `);
registerTemplate("o-spreadsheet-TableDropdownButton", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableDropdownButton" xml:space="preserve">
    <div class="o-table-widget d-flex align-item-center" t-att-class="props.class">
      <ActionButton action="action" hasTriangleDownIcon="true" t-on-click="onClick" class="'o-hoverable-button'"/>
    </div>
    <TableStylesPopover tableConfig="tableConfig" onStylePicked.bind="onStylePicked" popoverProps="state.popoverProps" closePopover.bind="closePopover"/>
  </t>

  `);
registerTemplate("o-spreadsheet-Spreadsheet", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Spreadsheet" xml:space="preserve">
    <div class="o-spreadsheet h-100 w-100" t-att-class="{'o-spreadsheet-mobile': env.isSmall}" t-ref="spreadsheet" t-att-style="getStyle()">
      <t t-if="env.isDashboard()">
        <SpreadsheetDashboard getGridSize.bind="getGridSize"/>
        <FullScreenChart/>
      </t>
      <t t-else="">
        <div class="o-spreadsheet-topbar-wrapper o-two-columns">
          <TopBar onClick="() =&gt; this.focusGrid()" dropdownMaxHeight="gridHeight"/>
        </div>
        <div class="o-grid-container" t-att-class="{'o-two-columns': !sidePanel.isMainPanelOpen}" t-att-style="gridContainerStyle" t-on-click="this.focusGrid">
          <div class="o-top-left"/>
          <div class="o-column-groups">
            <HeaderGroupContainer layers="colLayers" dimension="'COL'"/>
          </div>
          <div class="o-row-groups">
            <HeaderGroupContainer layers="rowLayers" dimension="'ROW'"/>
          </div>
          <div class="o-group-grid overflow-hidden">
            <Grid exposeFocus="(focus) =&gt; this._focusGrid = focus" getGridSize.bind="getGridSize"/>
          </div>
        </div>
        <SidePanels/>
        <div class="o-spreadsheet-bottombar-wrapper o-two-columns overflow-hidden">
          <SmallBottomBar t-if="env.isSmall" onClick="() =&gt; this.focusGrid()"/>
          <BottomBar t-else="" onClick="() =&gt; this.focusGrid()"/>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SmallBottomBar", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SmallBottomBar" xml:space="preserve">
    <div class="o-spreadsheet-small-bottom-bar o-two-columns d-flex flex-column overflow-hidden">
      <t t-if="menuState.isOpen">
        <RibbonMenu onClose="() =&gt; this.menuState.isOpen=false"/>
      </t>
      <t t-else="">
        <div class="o-small-composer px-2 py-2">
          <div class="w-100" t-ref="bottombarComposer">
            <Composer t-props="composerProps"/>
          </div>
          <span class="align-items-center d-flex justify-content-center o-selection-button" title="confirm edition" t-if="this.focus !== 'inactive'" t-on-click="() =&gt; this.composerStore.stopEdition()">
            <span class="d-flex">
              <t t-call="o-spreadsheet-Icon.CHECK"/>
            </span>
          </span>
        </div>
        <div class="d-flex flex-row mb-1" t-if="this.focus !== 'inactive'">
          <div t-foreach="symbols" t-as="symbol" t-key="symbol_index" class="o-spreadsheet-editor-symbol w-100 d-flex justify-content-center align-items-center mx-1" t-esc="symbol" tabindex="-1" t-att-title="symbol" t-on-click="() =&gt; this.insertSymbol(symbol)" composerFocusableElement="true"/>
        </div>
        <div class="d-flex flex-fill align-items-center bottom-bar-menu">
          <Ripple>
            <div class="py-1 px-1 mx-2 ribbon-toggler" t-on-click="toggleRibbon">
              <i class="o-icon fa fa-cog"/>
            </div>
          </Ripple>
          <BottomBar onClick="props.onClick"/>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-RibbonMenu", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<div t-name="o-spreadsheet-RibbonMenu" xml:space="preserve">
    <div class="o-ribbon-menu d-flex flex-column" t-ref="menu">
      <div class="o-ribbon-title d-flex py-2 fw-bold">
        <div class="o-previous-button px-3 py-1 mx-2 rounded" t-on-click="onClickBack" t-att-title="backTitle">
          <i class="fa fa-angle-left"/>
        </div>
        <span class="d-flex align-items-center" t-esc="state.title"/>
      </div>
      <div class="o-ribbon-menu-wrapper overflow-auto">
        <Menu t-props="menuProps"/>
      </div>
    </div>
  </div>

  `);
registerTemplate("o-spreadsheet-TableStyleEditorPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TableStyleEditorPanel" xml:space="preserve">
    <div class="o-table-style-editor-panel">
      <Section title.translate="Style name">
        <input type="text" class="o-input" t-model="state.styleName"/>
      </Section>
      <Section class="'pt-1'" title.translate="Style color">
        <RoundColorPicker currentColor="state.primaryColor" onColorPicked.bind="onColorPicked" disableNoColor="true"/>
      </Section>
      <Section class="'pt-1'" title.translate="Style template">
        <div class="d-flex flex-wrap">
          <t t-foreach="tableTemplates" t-as="templateName" t-key="templateName">
            <TableStylePreview class="'o-table-style-edit-template-preview'" selected="templateName === state.selectedTemplateName" tableConfig="previewTableConfig" tableStyle="computeTableStyle(templateName)" onClick="() =&gt; this.onTemplatePicked(templateName)"/>
          </t>
        </div>
      </Section>
      <Section>
        <div class="o-sidePanelButtons">
          <button t-if="props.styleId" t-on-click="onDelete" class="o-delete o-button-danger o-button">
            Delete
          </button>
          <button t-on-click="onCancel" class="o-cancel o-button">Cancel</button>
          <button t-on-click="onConfirm" class="o-confirm o-button primary">Confirm</button>
        </div>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-TablePanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TablePanel" xml:space="preserve">
    <div class="o-table-panel">
      <Section title.translate="Style options">
        <div class="d-flex flex-row">
          <div class="w-50">
            <div class="d-flex align-items-center">
              <Checkbox label="getCheckboxLabel('headerRow')" name="'headerRow'" value="tableConfig.numberOfHeaders &gt; 0" onChange.bind="this.updateHasHeaders"/>
              <input t-if="tableConfig.numberOfHeaders &gt; 0" t-att-value="tableConfig.numberOfHeaders" type="number" class="o-table-n-of-headers ms-2 o-input" t-on-change="onChangeNumberOfHeaders"/>
            </div>
            <Checkbox label="getCheckboxLabel('totalRow')" name="'totalRow'" value="tableConfig.totalRow" onChange="(val) =&gt; this.updateTableConfig('totalRow', val)"/>
            <Checkbox label="getCheckboxLabel('bandedRows')" name="'bandedRows'" value="tableConfig.bandedRows" onChange="(val) =&gt; this.updateTableConfig('bandedRows', val)"/>
            <Checkbox label="getCheckboxLabel('hasFilters')" name="'hasFilters'" value="tableConfig.hasFilters" title="hasFilterCheckboxTooltip" disabled="!this.canHaveFilters" onChange.bind="this.updateHasFilters"/>
          </div>
          <div>
            <Checkbox label="getCheckboxLabel('firstColumn')" name="'firstColumn'" value="tableConfig.firstColumn" onChange="(val) =&gt; this.updateTableConfig('firstColumn', val)"/>
            <Checkbox label="getCheckboxLabel('lastColumn')" name="'lastColumn'" value="tableConfig.lastColumn" onChange="(val) =&gt; this.updateTableConfig('lastColumn', val)"/>
            <Checkbox label="getCheckboxLabel('bandedColumns')" name="'bandedColumns'" value="tableConfig.bandedColumns" onChange="(val) =&gt; this.updateTableConfig('bandedColumns', val)"/>
          </div>
        </div>
      </Section>
      <Section>
        <TableStylePicker table="props.table"/>
      </Section>
      <Section title.translate="Data range">
        <SelectionInput t-key="props.table.type" ranges="[this.state.tableXc]" hasSingleRange="true" isInvalid="this.state.tableZoneErrors.length !== 0" onSelectionChanged="(ranges) =&gt; this.onRangeChanged(ranges)" onSelectionConfirmed.bind="this.onRangeConfirmed"/>
      </Section>
      <Section class="'pt-0'">
        <Checkbox label="getCheckboxLabel('automaticAutofill')" name="'automaticAutofill'" value="tableConfig.automaticAutofill" onChange="(val) =&gt; this.updateTableConfig('automaticAutofill', val)" className="'mb-1'"/>
        <div class="d-flex flex-row align-items-center">
          <Checkbox label="getCheckboxLabel('isDynamic')" name="'isDynamic'" value="props.table.type === 'dynamic'" onChange.bind="this.updateTableIsDynamic" disabled="!this.canBeDynamic"/>
          <div class="o-info-icon d-flex flex-row align-items-center text-muted ms-1" t-att-title="dynamicTableTooltip">
            <t t-call="o-spreadsheet-Icon.CIRCLE_INFO"/>
          </div>
        </div>
      </Section>
      <Section>
        <div class="o-sidePanelButtons">
          <button t-on-click="deleteTable" class="o-table-delete o-button o-button-danger">
            Delete table
          </button>
        </div>
      </Section>
      <Section t-if="errorMessages.length">
        <ValidationMessages messages="errorMessages" msgType="'error'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SplitIntoColumnsPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SplitIntoColumnsPanel" xml:space="preserve">
    <div class="o-split-to-cols-panel">
      <Section title.translate="Separator">
        <select class="o-input mb-3" t-on-change="(ev) =&gt; this.onSeparatorChange(ev.target.value)">
          <option t-foreach="separators" t-as="separator" t-key="separator.value" t-att-value="separator.value" t-esc="separator.name" t-att-selected="state.separatorValue === separator.value"/>
        </select>

        <input class="o-input mb-3" type="text" t-if="state.separatorValue === 'custom'" t-att-value="state.customSeparator" t-on-input="updateCustomSeparator" placeholder="Add any characters or symbol"/>

        <t t-set="addColumnsLabel">Add new columns to avoid overwriting cells</t>
        <Checkbox value="state.addNewColumns" label="addColumnsLabel" onChange.bind="updateAddNewColumnsCheckbox"/>
      </Section>
      <Section>
        <div class="o-sidePanelButtons">
          <button class="o-button primary" t-att-class="{'o-disabled': isConfirmDisabled}" t-on-click="confirm">
            Confirm
          </button>
        </div>
      </Section>
      <Section t-if="errorMessages.length || warningMessages.length" class="'pb-0 pt-2'">
        <ValidationMessages messages="errorMessages" msgType="'error'"/>
        <ValidationMessages messages="warningMessages" msgType="'warning'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SidePanels", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SidePanels" t-if="sidePanelStore.isMainPanelOpen" xml:space="preserve">
    <div class="o-sidePanels d-flex overflow-hidden">
      <t t-foreach="panelList" t-as="panel" t-key="panel.key">
        <div t-att-style="panel.style">
          <SidePanel t-key="panel.key" t-props="panel.props"/>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SidePanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SidePanel" xml:space="preserve">
    <t t-if="props.isCollapsed" t-call="o-spreadsheet-SidePanelCollapsed"/>
    <t t-else="" t-call="o-spreadsheet-SidePanelExtended"/>
  </t>

  `);
registerTemplate("o-spreadsheet-SidePanelExtended", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SidePanelExtended" xml:space="preserve">
    <div class="o-sidePanel h-100">
      <div class="o-sidePanelHeader d-flex align-items-center justify-content-between">
        <div t-if="props.onToggleCollapsePanel" class="o-collapse-panel o-sidePanelAction rounded" t-on-click="props.onToggleCollapsePanel">
          <i class="fa fa-angle-double-right"/>
        </div>
        <div class="o-sidePanelTitle o-fw-bold ms-2" t-esc="getTitle()"/>
        <div t-if="props.onTogglePinPanel" class="o-pin-panel o-sidePanelAction ms-auto rounded" t-att-class="{'active': props.isPinned}" t-on-click="props.onTogglePinPanel" t-att-title="pinInfoMessage">
          <i class="fa fa-thumb-tack"/>
        </div>
        <div class="o-sidePanelClose o-sidePanelAction rounded" t-on-click="props.onCloseSidePanel">
          ✕
        </div>
      </div>
      <div class="o-sidePanelBody-container d-flex flex-grow-1 ">
        <div class="o-sidePanel-handle-container">
          <div class="o-sidePanel-handle" t-on-pointerdown="props.onStartHandleDrag" t-on-dblclick="props.onResetPanelSize">
            <t t-call="o-spreadsheet-Icon.THIN_DRAG_HANDLE"/>
          </div>
        </div>
        <div class="o-sidePanelBody">
          <t t-component="props.panelContent.Body" t-props="props.panelProps" onCloseSidePanel="props.onCloseSidePanel"/>
        </div>
        <div class="o-sidePanelFooter" t-if="props.panelContent?.Footer">
          <t t-component="props.panelContent.Footer" t-props="props.panelProps"/>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SidePanelCollapsed", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SidePanelCollapsed" xml:space="preserve">
    <div class="o-sidePanel collapsed w-100 h-100" t-on-click="props.onToggleCollapsePanel">
      <div class="d-flex flex-column align-items-center">
        <div t-if="props.onToggleCollapsePanel" class="o-collapse-panel o-sidePanelAction rounded mb-1">
          <i class="fa fa-angle-double-left"/>
        </div>
        <div t-if="props.onTogglePinPanel" class="o-pin-panel o-sidePanelAction rounded mb-1" t-att-class="{'active': props.isPinned}" t-on-click.stop="props.onTogglePinPanel" t-att-title="pinInfoMessage">
          <i class="fa fa-thumb-tack"/>
        </div>
        <div class="o-sidePanelClose o-sidePanelAction rounded mb-1" t-on-click.stop="props.onCloseSidePanel">
          ✕
        </div>

        <div class="o-sidePanelTitle o-fw-bold" t-esc="getTitle()"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SettingsPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SettingsPanel" xml:space="preserve">
    <div class="o-settings-panel">
      <Section title.translate="Locale">
        <select class="o-input" t-on-change="(ev) =&gt; this.onLocaleChange(ev.target.value)">
          <option t-foreach="supportedLocales" t-as="locale" t-key="locale.code" t-att-value="locale.code" t-esc="locale.name" t-att-selected="currentLocale.code === locale.code"/>
        </select>
        <div class="o-locale-preview mt-4 p-3 rounded">
          <div>
            <span class="o-fw-bold me-1">Number:</span>
            <span t-esc="numberFormatPreview"/>
          </div>
          <div>
            <span class="o-fw-bold me-1">Date:</span>
            <span t-esc="dateFormatPreview"/>
          </div>
          <div>
            <span class="o-fw-bold me-1">Date time:</span>
            <span t-esc="dateTimeFormatPreview"/>
          </div>
          <div>
            <span class="o-fw-bold me-1">First day of week:</span>
            <span t-esc="firstDayOfWeek"/>
          </div>
        </div>
      </Section>

      <Section class="'pt-0'">
        <t t-set="message">Those settings affect all users.</t>
        <ValidationMessages messages="[message]" msgType="'info'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SelectMenu", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SelectMenu" xml:space="preserve">
    <select t-att-class="props.class" t-ref="select" t-on-pointerdown.stop.prevent="" t-on-click="onClick">
      <option selected="true" t-esc="props.selectedValue"/>
    </select>
    <MenuPopover t-if="state.isMenuOpen" menuItems="props.menuItems" anchorRect="menuAnchorRect" onClose.bind="onMenuClosed" menuId="menuId" popoverPositioning="'bottom-left'"/>
  </t>

  `);
registerTemplate("o-spreadsheet-RemoveDuplicatesPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-RemoveDuplicatesPanel" xml:space="preserve">
    <div class="o-remove-duplicates">
      <Section>
        <ValidationMessages messages="[selectionStatisticalInformation]" msgType="'info'"/>
      </Section>
      <Section class="'pt-0'">
        <t t-set="dataHasHeaderLabel">Data has header row</t>
        <Checkbox name="'dataHasHeader'" value="state.hasHeader" label="dataHasHeaderLabel" onChange.bind="toggleHasHeader"/>
      </Section>

      <Section class="'pt-0'" title.translate="Columns to analyze">
        <div class="o-checkbox-selection overflow-auto">
          <t t-set="selectAllLabel">Select all</t>
          <Checkbox value="isEveryColumnSelected" label="selectAllLabel" onChange.bind="toggleAllColumns"/>

          <t t-foreach="Object.keys(state.columns)" t-as="colIndex" t-key="colIndex">
            <Checkbox value="state.columns[colIndex]" label="getColLabel(colIndex)" onChange="() =&gt; this.toggleColumn(colIndex)"/>
          </t>
        </div>
      </Section>

      <Section>
        <div class="o-sidePanelButtons">
          <button class="o-button primary" t-att-class="{'o-disabled': !canConfirm}" t-on-click="onRemoveDuplicates">
            Remove duplicates
          </button>
        </div>
      </Section>
      <Section t-if="errorMessages.length">
        <ValidationMessages messages="errorMessages" msgType="'error'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotTitleSection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotTitleSection" xml:space="preserve">
    <Section>
      <t t-set-slot="title">
        <div class="d-flex flex-row justify-content-between align-items-center">
          Name
          <CogWheelMenu items="cogWheelMenuItems"/>
        </div>
      </t>
      <TextInput class="'os-pivot-title'" value="name" onChange.bind="onNameChanged"/>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotSidePanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotSidePanel" xml:space="preserve">
    <t t-component="sidePanelEditor" t-props="props"/>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotSpreadsheetSidePanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotSpreadsheetSidePanel" xml:space="preserve">
    <t t-set="isReadonly" t-value="env.model.getters.isReadonly()"/>
    <div class="d-flex flex-column h-100 justify-content-between overflow-hidden">
      <div class="h-100 position-relative overflow-x-hidden overflow-y-auto" t-ref="pivotSidePanel">
        <div t-att="isReadonly ? ['inert', 1] : []" t-att-class="{ 'pe-none opacity-50': isReadonly }">
          <PivotTitleSection pivotId="props.pivotId" flipAxis.bind="flipAxis"/>
          <Section title.translate="Range">
            <SelectionInput ranges="ranges" required="true" isInvalid="shouldDisplayInvalidRangeError" hasSingleRange="true" onSelectionChanged="(ranges) =&gt; this.onSelectionChanged(ranges)" onSelectionConfirmed="() =&gt; this.onSelectionConfirmed()"/>
            <span class="text-danger sp_range_error_message" t-if="shouldDisplayInvalidRangeError" t-esc="pivot.invalidRangeMessage"/>
          </Section>

          <PivotLayoutConfigurator t-if="!pivot.isInvalidRange" unusedGroupableFields="store.unusedGroupableFields" measureFields="store.measureFields" unusedGranularities="store.unusedGranularities" dateGranularities="store.dateGranularities" datetimeGranularities="store.datetimeGranularities" definition="definition" onDimensionsUpdated.bind="onDimensionsUpdated" getScrollableContainerEl.bind="getScrollableContainerEl" pivotId="props.pivotId"/>
        </div>
      </div>
      <PivotDeferUpdate t-if="!isReadonly" deferUpdate="store.updatesAreDeferred" toggleDeferUpdate="(value) =&gt; store.deferUpdates(value)" isDirty="store.isDirty" discard="store.discardPendingUpdate" apply="store.applyUpdate"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotMeasureDisplayPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotMeasureDisplayPanel" xml:space="preserve">
    <Section title.translate="Show measure as:">
      <select class="o-pivot-measure-display-type o-input" t-on-change="(ev) =&gt; this.store.updateMeasureDisplayType(ev.target.value)">
        <t t-foreach="measureDisplayTypeLabels" t-as="measureType" t-key="measureType">
          <option t-att-value="measureType" t-att-selected="measureType === store.measureDisplay.type" t-esc="measureType_value"/>
        </t>
      </select>
      <div class="o-pivot-measure-display-description mt-3 ps-3" t-esc="measureDisplayDescription[store.measureDisplay.type]"/>
    </Section>

    <Section t-if="store.doesDisplayNeedsField" title.translate="Base field:">
      <div class="o-pivot-measure-display-field w-100 py-1 px-3">
        <t t-if="store.fields.length">
          <RadioSelection choices="fieldChoices" selectedValue="store.measureDisplay.fieldNameWithGranularity" name="'baseField'" onChange.bind="(val) =&gt; store.updateMeasureDisplayField(val)" direction="'vertical'"/>
        </t>
        <t t-else="">
          <div class="text-muted text-center my-3">No active dimension in the pivot</div>
        </t>
      </div>
    </Section>

    <t t-set="values" t-value="store.values"/>
    <Section t-if="store.doesDisplayNeedsValue and values.length" title.translate="Base item:">
      <div class="o-pivot-measure-display-value w-100 py-1 px-3">
        <RadioSelection choices="values" selectedValue="store.measureDisplay.value" name="'baseValue'" onChange.bind="(val) =&gt; store.updateMeasureDisplayValue(val)" direction="'vertical'"/>
      </div>
    </Section>

    <Section>
      <div class="o-sidePanelButtons">
        <button t-on-click="onCancel" class="o-pivot-measure-cancel o-button">Cancel</button>
        <button t-on-click="onSave" class="o-pivot-measure-save o-button primary">Save</button>
      </div>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotLayoutConfigurator", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotLayoutConfigurator" xml:space="preserve">
    <div class="pivot-dimensions o-section" t-ref="pivot-dimensions">
      <div class="o-fw-bold py-1 d-flex flex-row justify-content-between align-items-center o-section-title">
        Columns
        <AddDimensionButton onFieldPicked.bind="addColumnDimension" fields="props.unusedGroupableFields"/>
      </div>
      <t t-foreach="props.definition.columns" t-as="col" t-key="col_index">
        <div t-on-pointerdown="(ev) =&gt; this.startDragAndDrop(col, ev)" t-att-style="dragAndDrop.itemsStyle[col.nameWithGranularity]" class="pt-1">
          <PivotDimension dimension="col" onRemoved.bind="removeDimension">
            <PivotDimensionGranularity t-if="isDateOrDatetimeField(col)" dimension="col" onUpdated.bind="this.updateGranularity" availableGranularities="props.unusedGranularities[col.fieldName]" allGranularities="getGranularitiesFor(col)"/>
            <PivotDimensionOrder dimension="col" onUpdated.bind="this.updateOrder"/>
          </PivotDimension>
        </div>
      </t>
      <div class="o-fw-bold pt-4 pb-1 d-flex flex-row justify-content-between align-items-center o-section-title" t-att-style="dragAndDrop.itemsStyle['__rows_title__']">
        Rows
        <AddDimensionButton onFieldPicked.bind="addRowDimension" fields="props.unusedGroupableFields"/>
      </div>
      <t t-foreach="props.definition.rows" t-as="row" t-key="row_index">
        <div t-on-pointerdown="(ev) =&gt; this.startDragAndDrop(row, ev)" t-att-style="dragAndDrop.itemsStyle[row.nameWithGranularity]" class="pt-1">
          <PivotDimension dimension="row" onRemoved.bind="removeDimension">
            <PivotDimensionGranularity t-if="isDateOrDatetimeField(row)" dimension="row" onUpdated.bind="this.updateGranularity" availableGranularities="props.unusedGranularities[row.fieldName]" allGranularities="getGranularitiesFor(row)"/>
            <PivotDimensionOrder dimension="row" onUpdated.bind="this.updateOrder"/>
          </PivotDimension>
        </div>
      </t>
      <div class="o-fw-bold pt-4 pb-1 d-flex flex-row justify-content-between align-items-center o-section-title o-pivot-measure">
        Measures
        <AddDimensionButton onFieldPicked.bind="addMeasureDimension" fields="props.measureFields">
          <div t-on-click="addCalculatedMeasure" class="p-2 bg-white border-top d-flex align-items-center sticky-bottom add-calculated-measure">
            <i class="pe-1">
              <t t-call="o-spreadsheet-Icon.FORMULA"/>
            </i>
            Add calculated measure
          </div>
        </AddDimensionButton>
      </div>
      <t t-foreach="props.definition.measures" t-as="measure" t-key="measure.id">
        <div t-on-pointerdown="(ev) =&gt; this.startDragAndDropMeasures(measure, ev)" t-att-style="dragAndDrop.itemsStyle[measure.id]" t-att-class="measure.isHidden ? 'opacity-50' : ''" class="pt-1 pivot-measure">
          <PivotMeasureEditor pivotId="props.pivotId" definition="props.definition" measure="measure" aggregators="AGGREGATORS" onRemoved="() =&gt; this.removeMeasureDimension(measure)" onMeasureUpdated="(newMeasure) =&gt; this.updateMeasure(measure, newMeasure)" generateMeasureId.bind="getMeasureId"/>
        </div>
      </t>
    </div>
    <PivotSortSection definition="props.definition" pivotId="props.pivotId"/>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotSortSection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotSortSection" xml:space="preserve">
    <Section t-if="hasValidSort" class="'o-pivot-sort'">
      <t t-set-slot="title">Sorting</t>
      <div t-esc="sortDescription" class="pb-2"/>
      <div class="d-flex flex-column gap-2">
        <t t-foreach="sortValuesAndFields" t-as="valueAndField" t-key="valueAndField_index">
          <div class="o-sort-card d-flex gap-1 px-2">
            <t t-if="valueAndField.field">
              <span class="fw-bolder" t-esc="valueAndField.field"/>
              =
            </t>
            <span class="fw-bolder o-sort-value" t-esc="valueAndField.value"/>
          </div>
        </t>
      </div>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotMeasureEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotMeasureEditor" xml:space="preserve">
    <t t-set="measure" t-value="props.measure"/>
    <PivotDimension dimension="measure" onRemoved="props.onRemoved" onNameUpdated.bind="updateName">
      <t t-set-slot="upper-right-icons">
        <t t-if="measure.isHidden" t-set="hideTitle">Show</t>
        <t t-else="" t-set="hideTitle">Hide</t>
        <i t-att-class="measure.isHidden ? 'fa fa-eye-slash': 'fa fa-eye'" t-att-title="hideTitle" class="o-button-icon pe-1 ps-2" t-on-click="toggleMeasureVisibility"/>
        <i class="o-button-icon pe-1 ps-2 fa fa-cog" title="Show values as" t-on-click="openShowValuesAs"/>
      </t>
      <div t-if="measure.computedBy" class="d-flex flex-row small">
        <div class="d-flex flex-column py-2 px-2 w-100" t-on-pointerdown.stop="">
          <StandaloneComposer onConfirm.bind="updateMeasureFormula" composerContent="measure.computedBy.formula" defaultRangeSheetId="measure.computedBy.sheetId" contextualAutocomplete="getMeasureAutocomplete()" getContextualColoredSymbolToken.bind="getColoredSymbolToken" invalid="isCalculatedMeasureInvalid"/>
        </div>
      </div>
      <div class="d-flex flex-row">
        <div class="d-flex py-1 px-2 w-100 small">
          <div class="pivot-dim-operator-label">Aggregated by</div>
          <select class="o-input flex-grow-1" t-on-change="(ev) =&gt; this.updateAggregator(ev.target.value)">
            <option t-foreach="Object.keys(props.aggregators[measure.type])" t-as="agg" t-key="agg" t-att-value="agg" t-att-selected="agg === measure.aggregator" t-esc="props.aggregators[measure.type][agg]"/>
          </select>
        </div>
      </div>
    </PivotDimension>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotDimensionOrder", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotDimensionOrder" xml:space="preserve">
    <div class="d-flex">
      <div class="d-flex py-1 px-2 w-100 small">
        <div class="pivot-dim-operator-label">Order by</div>
        <select class="o-input flex-grow-1" t-on-change="(ev) =&gt; props.onUpdated(props.dimension, ev.target.value)">
          <option value="asc" t-att-selected="props.dimension.order === 'asc'">Ascending</option>
          <option value="desc" t-att-selected="props.dimension.order === 'desc'">Descending</option>
          <option t-if="props.dimension.type !== 'date'" value="" t-att-selected="props.dimension.order === undefined">
            Unsorted
          </option>
        </select>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotDimensionGranularity", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotDimensionGranularity" xml:space="preserve">
    <div class="d-flex flex-row">
      <div class="d-flex flex-row py-1 px-2 w-100 small">
        <t t-set="granularityProps" t-value="props.dimension.granularity || 'month'"/>
        <div class="pivot-dim-operator-label">Granularity</div>
        <select class="o-input flex-grow-1" t-on-change="(ev) =&gt; props.onUpdated(props.dimension, ev.target.value)">
          <option t-foreach="props.allGranularities" t-as="granularity" t-key="granularity" t-if="props.availableGranularities.has(granularity) || granularity === granularityProps" t-att-value="granularity" t-esc="periods[granularity]" t-att-selected="granularity === granularityProps or (granularity === 'month' and !granularityProps)"/>
        </select>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotDimension", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotDimension" xml:space="preserve">
    <div class="py-1 px-2 d-flex flex-column shadow-sm pivot-dimension" t-att-class="{'pivot-dimension-invalid': !props.dimension.isValid}">
      <div class="d-flex flex-row justify-content-between align-items-center">
        <div class="d-flex align-items-center overflow-hidden text-nowrap">
          <span class="text-danger me-1" t-if="!props.dimension.isValid">
            <t t-call="o-spreadsheet-Icon.TRIANGLE_EXCLAMATION"/>
          </span>
          <TextInput t-if="props.onNameUpdated" value="props.dimension.displayName" onChange.bind="updateName" class="'o-fw-bold'"/>
          <span t-else="1" class="o-fw-bold" t-esc="props.dimension.displayName"/>
        </div>
        <div class="d-flex flex-rows" t-on-pointerdown.stop="">
          <t t-slot="upper-right-icons"/>
          <i class="o-button-icon fa fa-trash pe-1 ps-2" t-if="props.onRemoved" t-on-click="() =&gt; props.onRemoved(props.dimension)"/>
        </div>
      </div>
      <t t-slot="default"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-AddDimensionButton", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-AddDimensionButton" xml:space="preserve">
    <button class="add-dimension o-button" t-on-click="togglePopover" t-ref="button">Add</button>
    <Popover t-if="popover.isOpen" t-props="popoverProps">
      <div class="p-2 bg-white border-bottom d-flex sticky-top align-items-baseline pivot-dimension-search">
        <i class="pe-1 pivot-dimension-search-field-icon text-muted">
          <t t-call="o-spreadsheet-Icon.SEARCH"/>
        </i>
        <input t-on-input="(ev) =&gt; this.updateSearch(ev.target.value)" t-on-keydown="onKeyDown" class="border-0 w-100 pivot-dimension-search-field" t-ref="autofocus"/>
      </div>
      <TextValueProvider proposals="autoComplete.provider.proposals" selectedIndex="autoComplete.selectedIndex" onValueSelected="autoComplete.provider.selectProposal" onValueHovered="() =&gt; {}"/>
      <t t-slot="default" t-on-click="togglePopover"/>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-PivotDeferUpdate", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PivotDeferUpdate" xml:space="preserve">
    <Section class="'align-items-center border-top d-flex flex-row justify-content-between py-1 pivot-defer-update'">
      <Checkbox label="deferUpdatesLabel" title="deferUpdatesTooltip" value="props.deferUpdate" onChange="(value) =&gt; props.toggleDeferUpdate(value)"/>
      <div t-if="props.isDirty" class="d-flex align-items-center">
        <i class="o-button-icon pe-0 fa fa-undo" title="Discard all changes" t-on-click="() =&gt; props.discard()"/>
        <span class="o-button-link sp_apply_update small ps-2" title="Apply all changes" t-on-click="() =&gt; props.apply()">
          Update
        </span>
      </div>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-MoreFormatsPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-MoreFormatsPanel" xml:space="preserve">
    <div class="o-more-formats-panel">
      <div t-foreach="dateFormatsActions" t-as="action" t-key="action.name(env)" t-att-data-name="action.name(env)" t-on-click="() =&gt; action.execute(env)" class="w-100 d-flex align-items-center border-bottom format-preview">
        <span class="ms-3 check-icon">
          <t t-if="action.isActive(env)" t-call="o-spreadsheet-Icon.CHECK"/>
        </span>
        <span t-out="action.description(env)"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FindAndReplacePanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FindAndReplacePanel" xml:space="preserve">
    <div class="o-find-and-replace">
      <Section title.translate="Search">
        <div class="o-input-search-container">
          <input type="text" t-ref="searchInput" class="o-input o-input-with-count o-search" t-on-input="onSearchInput" t-on-focus="onFocusSearch" t-on-keydown="onKeydownSearch" placeholder="e.g. 'search me'"/>
          <div class="o-input-count" t-if="hasSearchResult">
            <t t-esc="store.selectedMatchIndex+1"/>
            /
            <t t-esc="store.searchMatches.length"/>
          </div>
          <div t-elif="!this.pendingSearch and store.toSearch !== ''" class="o-input-count">
            0 / 0
          </div>
          <div class="d-flex flex-row o-result-buttons align-items-center" t-if="hasSearchResult">
            <button t-on-click="() =&gt; store.selectPreviousMatch()" class="o-button ms-2 d-flex justify-content-center align-items-center">
              <t t-call="o-spreadsheet-Icon.ARROW_UP"/>
            </button>
            <button t-on-click="() =&gt; store.selectNextMatch()" class="o-button ms-1 d-flex justify-content-center align-items-center">
              <t t-call="o-spreadsheet-Icon.ARROW_DOWN"/>
            </button>
          </div>
        </div>
        <select class="o-input o-type-range-selector mt-3 mb-3" t-on-change="changeSearchScope" t-att-value="searchOptions.searchScope">
          <option value="allSheets">All sheets</option>
          <option value="activeSheet">Current sheet</option>
          <option value="specificRange">Specific range</option>
        </select>
        <div t-if="searchOptions.searchScope === 'specificRange'">
          <SelectionInput ranges="[this.state.dataRange]" onSelectionChanged="(ranges) =&gt; this.onSearchRangeChanged(ranges)" onSelectionConfirmed.bind="updateDataRange" hasSingleRange="true" required="true"/>
        </div>
        <div>
          <t t-set="matchCaseLabel">Match case</t>
          <Checkbox value="searchOptions.matchCase" label="matchCaseLabel" onChange.bind="searchMatchCase" className="'mb-1'"/>
          <t t-set="exactMatchLabel">Match entire cell content</t>
          <Checkbox value="searchOptions.exactMatch" label="exactMatchLabel" onChange.bind="searchExactMatch" className="'mb-1'"/>
          <t t-set="searchFormulasLabel">Search in formulas</t>
          <Checkbox value="searchOptions.searchFormulas" label="searchFormulasLabel" onChange.bind="searchFormulas"/>
        </div>
        <div class="o-matches-count mt-4" t-if="searchInfo.length">
          <ValidationMessages msgType="'info'" messages="searchInfo" singleBox="true"/>
        </div>
      </Section>
      <Section class="'pt-0'" t-if="!env.model.getters.isReadonly()" title.translate="Replace">
        <div class="o-input-search-container">
          <input type="text" class="o-input o-input-without-count o-replace" t-on-keydown="onKeydownReplace" t-model="store.toReplace" placeholder="e.g. 'replace me'"/>
        </div>
      </Section>
      <Section>
        <div class="o-sidePanelButtons" t-if="!env.model.getters.isReadonly()">
          <button t-att-disabled="store.selectedMatchIndex === null" t-on-click="() =&gt; store.replace()" class="o-button o-replace">
            Replace
          </button>
          <button t-att-disabled="store.selectedMatchIndex === null" t-on-click="() =&gt; store.replaceAll()" class="o-button o-replace-all">
            Replace all
          </button>
        </div>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationPanel" xml:space="preserve">
    <div class="o-data-validation">
      <t t-if="state.mode === 'list'">
        <div class="o-dv-preview-list">
          <t t-foreach="validationRules" t-as="rule" t-key="rule.id">
            <DataValidationPreview rule="localizeDVRule(rule)" onClick="() =&gt; this.onPreviewClick(rule.id)"/>
          </t>
        </div>
        <div class="o-dv-add o-button-link p-4 float-end" t-on-click="addDataValidationRule">
          + Add another rule
        </div>
      </t>
      <t t-else="">
        <DataValidationEditor rule="localizeDVRule(state.activeRule)" onExit.bind="onExitEditMode"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationPreview", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationPreview" xml:space="preserve">
    <div class="o-dv-preview p-3" t-on-click="props.onClick" t-ref="dvPreview">
      <div class="d-flex justify-content-between">
        <div class="o-dv-container d-flex flex-column">
          <div class="o-dv-preview-description o-fw-bold text-truncate" t-esc="descriptionString"/>
          <div class="o-dv-preview-ranges text-truncate" t-esc="rangesString"/>
        </div>
        <div class="o-dv-preview-delete d-flex align-items-center o-button-icon px-3" t-on-click.stop="deleteDataValidation">
          <t t-call="o-spreadsheet-Icon.TRASH_FILLED"/>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationEditor" xml:space="preserve">
    <div class="o-dv-form w-100 h-100">
      <Section class="'o-dv-range'" title.translate="Apply to range">
        <SelectionInput ranges="state.rule.ranges" onSelectionChanged="(ranges) =&gt; this.onRangesChanged(ranges)" required="true"/>
      </Section>
      <Section class="'pt-0'">
        <div class="o-subsection o-dv-settings">
          <div class="o-section-title">Criteria</div>
          <SelectMenu class="'o-dv-type o-input mb-2'" menuItems="dvCriterionMenuItems" selectedValue="selectedCriterionName"/>

          <t t-if="criterionComponent" t-component="criterionComponent" t-key="state.rule.criterion.type" criterion="state.rule.criterion" onCriterionChanged.bind="onCriterionChanged"/>
        </div>
      </Section>

      <Section class="'o-dv-invalid-option pt-0'" title.translate="If the data is invalid">
        <select class="o-dv-reject-input o-input" t-on-change="changeRuleIsBlocking">
          <option t-att-selected="!state.rule.isBlocking" value="false">Show a warning</option>
          <option t-att-selected="state.rule.isBlocking" value="true">Reject the input</option>
        </select>
      </Section>

      <Section>
        <div class="o-sidePanelButtons">
          <button t-on-click="props.onExit" class="o-dv-cancel o-button">Cancel</button>
          <button t-on-click="onSave" class="o-dv-save o-button primary">Save</button>
        </div>
      </Section>
      <Section>
        <ValidationMessages messages="errorMessages" msgType="'error'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-CustomCurrencyPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-CustomCurrencyPanel" xml:space="preserve">
    <div class="o-custom-currency">
      <Section t-if="availableCurrencies.length &gt; 1" title.translate="Currency">
        <select class="o-input o-available-currencies" t-on-change="(ev) =&gt; this.updateSelectCurrency(ev)">
          <t t-foreach="availableCurrencies" t-as="currency" t-key="currency_index">
            <option t-att-value="currency_index" t-esc="currencyDisplayName(currency)" t-att-selected="currency_index === state.selectedCurrencyIndex"/>
          </t>
        </select>
      </Section>
      <Section>
        <div class="o-subsection-left">
          <div class="o-section-title">Code</div>
          <input type="text" class="o-input" t-model="state.currencyCode" placeholder="code" t-on-input="(ev) =&gt; this.updateCode(ev)"/>
        </div>
        <div class="o-subsection-right">
          <div class="o-section-title">Symbol</div>
          <input type="text" class="o-input" placeholder="symbol" t-model="state.currencySymbol" t-on-input="(ev) =&gt; this.updateSymbol(ev)"/>
        </div>
      </Section>
      <Section title.translate="Format">
        <select class="o-input o-format-proposals mb-1" t-on-change="(ev) =&gt; this.updateSelectFormat(ev)" t-att-disabled="!formatProposals.length">
          <t t-foreach="formatProposals" t-as="proposal" t-key="proposal_index">
            <option t-att-value="proposal_index" t-esc="proposal.example" t-att-selected="proposal_index === state.selectedFormatIndex"/>
          </t>
        </select>
        <t t-set="accounting_format_label">Accounting format</t>
        <Checkbox name="'accountingFormat'" label="accounting_format_label" value="state.isAccountingFormat" onChange.bind="toggleAccountingFormat"/>
        <div class="o-format-examples mt-4" t-if="selectedFormat">
          <table class="w-100">
            <t t-foreach="getFormatExamples()" t-as="example" t-key="example_index">
              <tr>
                <td class="w-25 pe-3 o-fw-bold" t-esc="example.label"/>
                <td class="w-75 text-truncate" t-esc="example.value"/>
              </tr>
            </t>
          </table>
        </div>
      </Section>
      <Section>
        <div class="o-sidePanelButtons">
          <button class="o-button primary" t-on-click="() =&gt; this.apply()" t-att-disabled="!formatProposals.length || isSameFormat">
            Apply
          </button>
        </div>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ValueInRangeCriterionForm", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ValueInRangeCriterionForm" xml:space="preserve">
    <SelectionInput ranges="[props.criterion.values[0] || '']" onSelectionChanged="(ranges) =&gt; this.onRangeChanged(ranges[0])" required="true" hasSingleRange="true"/>
    <t t-foreach="values" t-as="value" t-key="value_index">
      <div class="o-dv-list-values p-1 d-flex align-items-center">
        <div class="me-2">
          <RoundColorPicker currentColor="props.criterion.colors?.[value] || '#E7E9ED'" onColorPicked="(c) =&gt; this.onColorChanged(c, value)"/>
        </div>
        <input type="text" class="o-input" t-att-value="value" disabled="1"/>
      </div>
    </t>

    <div class="o-section-subtitle mt-4">Display style</div>
    <select class="o-dv-display-style o-input" t-on-change="onChangedDisplayStyle">
      <option t-att-selected="props.criterion.displayStyle === 'chip'" value="chip">Chip</option>
      <option t-att-selected="props.criterion.displayStyle === 'arrow'" value="arrow">Arrow</option>
      <option t-att-selected="props.criterion.displayStyle === 'plainText'" value="plainText">
        Plain text
      </option>
    </select>
  </t>

  `);
registerTemplate("o-spreadsheet-ListCriterionForm", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ListCriterionForm" xml:space="preserve">
    <t t-foreach="displayedValues" t-as="value" t-key="value_index">
      <div class="o-dv-list-values d-flex align-items-center">
        <div class="me-1">
          <RoundColorPicker currentColor="props.criterion.colors?.[value] || '#E7E9ED'" onColorPicked="(c) =&gt; this.onColorChanged(c, value)"/>
        </div>
        <CriterionInput value="props.criterion.values[value_index]" onValueChanged="(v) =&gt; this.onValueChanged(v, value_index)" criterionType="props.criterion.type" onKeyDown="(ev) =&gt; this.onKeyDown(ev, value_index)" focused="value_index === state.focusedValueIndex" onBlur.bind="onBlurInput" disableFormulas="props.disableFormulas"/>
        <div class="o-dv-list-item-delete ms-2 o-button-icon" t-on-click="() =&gt; this.removeItem(value_index)">
          <t t-call="o-spreadsheet-Icon.TRASH_FILLED"/>
        </div>
      </div>
      <div class="mb-2"/>
    </t>
    <button class="o-dv-list-add-value o-button mb-3" t-on-click="onAddAnotherValue">
      Add another item
    </button>

    <div class="o-section-subtitle">Display style</div>
    <select class="o-dv-display-style o-input" t-on-change="onChangedDisplayStyle">
      <option t-att-selected="props.criterion.displayStyle === 'chip'" value="chip">Chip</option>
      <option t-att-selected="props.criterion.displayStyle === 'arrow'" value="arrow">Arrow</option>
      <option t-att-selected="props.criterion.displayStyle === 'plainText'" value="plainText">
        Plain text
      </option>
    </select>
  </t>

  `);
registerTemplate("o-spreadsheet-SingleInputCriterionForm", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SingleInputCriterionForm" xml:space="preserve">
    <CriterionInput value="props.criterion.values[0]" onValueChanged.bind="onValueChanged" criterionType="props.criterion.type" disableFormulas="props.disableFormulas"/>
  </t>

  `);
registerTemplate("o-spreadsheet-DoubleInputCriterionForm", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DoubleInputCriterionForm" xml:space="preserve">
    <CriterionInput value="props.criterion.values[0]" onValueChanged.bind="onFirstValueChanged" criterionType="props.criterion.type" disableFormulas="props.disableFormulas"/>
    <CriterionInput value="props.criterion.values[1]" onValueChanged.bind="onSecondValueChanged" criterionType="props.criterion.type" disableFormulas="props.disableFormulas"/>
  </t>

  `);
registerTemplate("o-spreadsheet-DataValidationDateCriterion", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataValidationDateCriterion" xml:space="preserve">
    <select class="o-dv-date-value o-input mb-4" t-on-change="onDateValueChanged">
      <option t-foreach="dateValues" t-as="dateValue" t-key="dateValue.value" t-att-value="dateValue.value" t-esc="dateValue.title" t-att-selected="dateValue.value === props.criterion.dateValue"/>
    </select>

    <CriterionInput t-if="props.criterion.dateValue === 'exactDate'" value="props.criterion.values[0]" onValueChanged.bind="onValueChanged" criterionType="props.criterion.type" disableFormulas="props.disableFormulas"/>
  </t>

  `);
registerTemplate("o-spreadsheet-CriterionInput", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-CriterionInput" xml:space="preserve">
    <div class="o-dv-input position-relative w-100 p-1">
      <t t-if="allowedValues === 'onlyLiterals'">
        <input type="text" t-ref="input" t-on-input="onInputValueChanged" t-att-value="props.value" class="o-input" t-att-class="{               'o-invalid border-danger position-relative': errorMessage,             }" t-att-title="errorMessage" t-att-placeholder="placeholder" t-on-keydown="props.onKeyDown" t-on-blur="props.onBlur"/>
      </t>
      <t t-else="">
        <StandaloneComposer t-props="getDataValidationRuleInputComposerProps()"/>
      </t>
      <span t-if="errorMessage" class="error-icon text-danger position-absolute d-flex align-items-center" t-att-title="errorMessage">
        <t t-call="o-spreadsheet-Icon.ERROR"/>
      </span>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ConditionalFormattingPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ConditionalFormattingPanel" xml:space="preserve">
    <div class="o-cf h-100">
      <t t-if="state.mode === 'list'">
        <ConditionalFormatPreviewList conditionalFormats="conditionalFormats" onPreviewClick.bind="editConditionalFormat" onAddConditionalFormat.bind="addConditionalFormat"/>
      </t>
      <t t-if="state.mode === 'edit'">
        <ConditionalFormattingEditor editedCf="editedCF" onSave.bind="switchToList" onCancel.bind="cancelEdition"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ConditionalFormatPreviewList", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ConditionalFormatPreviewList" xml:space="preserve">
    <div class="o-cf-preview-list h-100 overflow-auto" t-ref="cfList">
      <t t-foreach="props.conditionalFormats" t-as="cf" t-key="cf.id">
        <div class="o-cf-preview-container d-flex position-relative" t-att-style="getPreviewDivStyle(cf)">
          <ConditionalFormatPreview conditionalFormat="cf" class="dragAndDrop.draggedItemId === cf.id ? 'o-cf-dragging' : ''" onMouseDown="(ev) =&gt; this.onPreviewMouseDown(cf, ev)" onPreviewClick="() =&gt; props.onPreviewClick(cf)"/>
        </div>
      </t>
      <div class="o-button-link p-4 o-cf-add float-end" t-on-click.prevent.stop="props.onAddConditionalFormat">
        + Add another rule
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ConditionalFormatPreview", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ConditionalFormatPreview" xml:space="preserve">
    <t t-set="cf" t-value="props.conditionalFormat"/>
    <div class="o-cf-preview w-100" t-ref="cfPreview" t-att-class="props.class" t-att-data-id="cf.id" t-on-click="props.onPreviewClick" t-on-pointerdown="(ev) =&gt; this.onMouseDown(ev)">
      <div class="position-relative h-100 w-100 d-flex align-items-center">
        <div class="o-cf-drag-handle h-100 position-absolute d-flex align-items-center o-button-icon">
          <t t-call="o-spreadsheet-Icon.THIN_DRAG_HANDLE"/>
        </div>
        <t t-if="cf.rule.type==='IconSetRule'">
          <div class="o-cf-preview-icon d-flex justify-content-around align-items-center me-2">
            <t t-call="o-spreadsheet-Icon.{{icons[cf.rule.icons.upper].template}}"/>
            <t t-call="o-spreadsheet-Icon.{{icons[cf.rule.icons.middle].template}}"/>
            <t t-call="o-spreadsheet-Icon.{{icons[cf.rule.icons.lower].template}}"/>
          </div>
        </t>
        <t t-else="">
          <div t-att-style="getPreviewImageStyle(cf.rule)" class="o-cf-preview-icon d-flex justify-content-around align-items-center me-2">
            123
          </div>
        </t>
        <div class="o-cf-preview-description">
          <div class="o-cf-preview-ruletype">
            <div class="o-cf-preview-description-rule o-fw-bold text-truncate">
              <t t-esc="getDescription(cf)"/>
            </div>
          </div>
          <div class="o-cf-preview-range text-truncate" t-esc="cf.ranges"/>
        </div>
        <div class="o-cf-delete">
          <div class="o-cf-delete-button o-button-icon" t-on-click.stop="(ev) =&gt; this.deleteConditionalFormat(cf, ev)" title="Remove rule">
            <t t-call="o-spreadsheet-Icon.TRASH_FILLED"/>
          </div>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-IconSets", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-IconSets" xml:space="preserve">
    <div class="pb-2">
      <div class="o-section-subtitle">Icons</div>
      <div class="o-cf-iconsets d-flex flex-row">
        <div class="o-cf-iconset o-cf-clickable-icon d-flex flex-row justify-content-between" t-foreach="['arrows', 'smiley', 'dots']" t-as="iconSet" t-key="iconSet" t-on-click="(ev) =&gt; this.setIconSet(iconSet, ev)">
          <div>
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].good].template}}"/>
          </div>
          <div>
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].neutral].template}}"/>
          </div>
          <div>
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].bad].template}}"/>
          </div>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-IconSetInflexionPointRow", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-IconSetInflexionPointRow" xml:space="preserve">
    <tr>
      <td>
        <div t-on-click.stop="(ev) =&gt; this.toggleMenu('iconSet-'+icon+'Icon', ev)">
          <div class="o-cf-icon-button o-cf-clickable-icon me-3">
            <t t-call="o-spreadsheet-Icon.{{icons[iconValue].template}}"/>
          </div>
        </div>
        <IconPicker t-if="state.openedMenu === 'iconSet-'+icon+'Icon'" onIconPicked="(i) =&gt; this.setIcon(icon, i)"/>
      </td>
      <td>When value is</td>
      <td>
        <select class="o-input" name="valueType" t-on-change="(ev) =&gt; this.setInflectionOperator(inflectionPoint, ev.target.value)">
          <option value="gt" t-att-selected="inflectionPointValue.operator === 'gt'">
            <span>&gt;</span>
          </option>
          <option value="ge" t-att-selected="inflectionPointValue.operator === 'ge'">
            <span>≥</span>
          </option>
        </select>
      </td>
      <td>
        <div class="ms-2 me-2">
          <input type="text" t-if="inflectionPointValue.type !== 'formula'" class="o-input" t-att-class="{ 'o-invalid': isInflectionPointInvalid(inflectionPoint) }" t-att-value="rule[inflectionPoint].value" t-on-change="(ev) =&gt; this.setInflectionValue(inflectionPoint, ev.target.value)"/>
          <StandaloneComposer t-else="" t-props="getColorIconSetComposerProps(inflectionPoint)"/>
        </div>
      </td>
      <td>
        <select class="o-input" name="valueType" t-on-change="(ev) =&gt; this.setInflectionType(inflectionPoint, ev.target.value, ev)">
          <option value="number" t-att-selected="inflectionPointValue.type === 'number'">
            Number
          </option>
          <option value="percentage" t-att-selected="inflectionPointValue.type === 'percentage'">
            Percentage
          </option>
          <option value="percentile" t-att-selected="inflectionPointValue.type === 'percentile'">
            Percentile
          </option>
          <option value="formula" t-att-selected="inflectionPointValue.type === 'formula'">
            Formula
          </option>
        </select>
      </td>
    </tr>
  </t>

  `);
registerTemplate("o-spreadsheet-IconSetInflexionPoints", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-IconSetInflexionPoints" xml:space="preserve">
    <div class="o-inflection mt-4">
      <table class="w-100">
        <tr>
          <th class="o-cf-iconset-icons"/>
          <th class="o-cf-iconset-text"/>
          <th class="o-cf-iconset-operator"/>
          <th/>
          <th class="o-cf-iconset-type"/>
        </tr>
        <t t-call="o-spreadsheet-IconSetInflexionPointRow">
          <t t-set="iconValue" t-value="rule.icons.upper"/>
          <t t-set="icon" t-value="'upper'"/>
          <t t-set="inflectionPointValue" t-value="rule.upperInflectionPoint"/>
          <t t-set="inflectionPoint" t-value="'upperInflectionPoint'"/>
        </t>
        <t t-call="o-spreadsheet-IconSetInflexionPointRow">
          <t t-set="iconValue" t-value="rule.icons.middle"/>
          <t t-set="icon" t-value="'middle'"/>
          <t t-set="inflectionPointValue" t-value="rule.lowerInflectionPoint"/>
          <t t-set="inflectionPoint" t-value="'lowerInflectionPoint'"/>
        </t>
        <tr>
          <td>
            <div t-on-click.stop="(ev) =&gt; this.toggleMenu('iconSet-lowerIcon', ev)">
              <div class="o-cf-icon-button o-cf-clickable-icon me-3">
                <t t-call="o-spreadsheet-Icon.{{icons[rule.icons.lower].template}}"/>
              </div>
            </div>
            <IconPicker t-if="state.openedMenu === 'iconSet-lowerIcon'" onIconPicked="(icon) =&gt; this.setIcon('lower', icon)"/>
          </td>
          <td>Else</td>
          <td/>
          <td/>
          <td/>
        </tr>
      </table>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-IconSetEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-IconSetEditor" xml:space="preserve">
    <div class="o-cf-iconset-rule">
      <t t-call="o-spreadsheet-IconSets"/>
      <t t-call="o-spreadsheet-IconSetInflexionPoints"/>
      <div class="d-flex flex-row">
        <div class="o-button-link py-1 ps-0 o-cf-iconset-reverse d-flex align-items-center" t-on-click="reverseIcons">
          <t t-call="o-spreadsheet-Icon.REFRESH"/>
          <div class="ms-1">Reverse icons</div>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-DataBarEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-DataBarEditor" xml:space="preserve">
    <div class="o-cf-data-bar-editor">
      <div class="o-section-subtitle">Color</div>
      <RoundColorPicker currentColor="colorNumberString(rule.color)" onColorPicked.bind="updateDataBarColor" disableNoColor="true"/>
      <div class="o-section-subtitle">Range of values</div>
      <SelectionInput ranges="getRangeValues()" class="'o-range'" isInvalid="false" hasSingleRange="true" onSelectionChanged.bind="onDataBarRangeUpdate" onSelectionConfirmed.bind="onDataBarRangeChange" required="false"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ColorScaleRuleEditorThreshold", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColorScaleRuleEditorThreshold" xml:space="preserve">
    <t t-set="fill_color">Fill Color</t>
    <div t-attf-class="o-threshold o-threshold-{{thresholdType}} d-flex align-items-center flex-row">
      <t t-if="thresholdType === 'midpoint'">
        <t t-set="type" t-value="threshold and threshold.type"/>
        <select class="o-input me-2" name="valueType" t-on-change="onMidpointChange" t-att-class="{ 'o-select-with-input': threshold and threshold.type !== 'value' }" t-on-click="closeMenus">
          <option value="none" t-att-selected="threshold === undefined">None</option>
          <option value="number" t-att-selected="type === 'number'">Fixed Number</option>
          <option value="percentage" t-att-selected="type === 'percentage'">Percentage</option>
          <option value="percentile" t-att-selected="type === 'percentile'">Percentile</option>
          <option value="formula" t-att-selected="type === 'formula'">Formula</option>
        </select>
      </t>
      <t t-else="">
        <select class="o-input me-2" name="valueType" t-on-change="(ev) =&gt; this.updateThresholdType(thresholdType, ev.target.value)" t-on-click="closeMenus" t-att-class="{ 'o-select-with-input': threshold?.type !== 'value' }">
          <option value="value" t-att-selected="threshold.type === 'value'">Cell values</option>
          <option value="number" t-att-selected="threshold.type === 'number'">Number</option>
          <option value="percentage" t-att-selected="threshold.type === 'percentage'">
            Percentage
          </option>
          <option value="percentile" t-att-selected="threshold.type === 'percentile'">
            Percentile
          </option>
          <option value="formula" t-att-selected="threshold.type === 'formula'">Formula</option>
        </select>
      </t>
      <div class="o-threshold-value me-2" t-if="threshold and threshold.type !== 'value'">
        <input t-if="threshold.type !== 'formula'" type="text" class="o-input" t-att-value="threshold.value" t-on-change="(ev) =&gt; this.updateThresholdValue(thresholdType, ev.target.value)" t-att-class="{ 'o-invalid': isValueInvalid(thresholdType), 'invisible': threshold === undefined }"/>
        <StandaloneComposer t-else="" t-props="getColorScaleComposerProps(thresholdType)"/>
      </div>
      <div t-attf-class="flex-shrink-0 ms-1 {{ threshold === undefined ? 'invisible' : ''}}">
        <RoundColorPicker currentColor="getThresholdColor(threshold)" onColorPicked="(color) =&gt; this.setColorScaleColor(thresholdType, color)" title="fill_color" disableNoColor="true"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ColorScaleRuleEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColorScaleRuleEditor" xml:space="preserve">
    <div class="o-cf-color-scale-editor">
      <div class="o-section-subtitle">Preview</div>
      <div class="o-cf-preview-display mb-4" t-attf-style="{{getPreviewGradient()}}">
        Preview text
      </div>
      <div class="o-section-subtitle">Minpoint</div>
      <t t-call="o-spreadsheet-ColorScaleRuleEditorThreshold">
        <t t-set="threshold" t-value="rule.minimum"/>
        <t t-set="thresholdType" t-value="'minimum'"/>
      </t>
      <div class="o-section-subtitle">MidPoint</div>
      <t t-call="o-spreadsheet-ColorScaleRuleEditorThreshold">
        <t t-set="threshold" t-value="rule.midpoint"/>
        <t t-set="thresholdType" t-value="'midpoint'"/>
      </t>
      <div class="o-section-subtitle">MaxPoint</div>
      <t t-call="o-spreadsheet-ColorScaleRuleEditorThreshold">
        <t t-set="threshold" t-value="rule.maximum"/>
        <t t-set="thresholdType" t-value="'maximum'"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ConditionalFormattingEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ConditionalFormattingEditor" xml:space="preserve">
    <div class="o-cf-ruleEditor">
      <Section class="'o-cf-range pb-0'" title.translate="Apply to range">
        <div class="o-selection-cf">
          <SelectionInput ranges="state.ranges" class="'o-range'" isInvalid="isRangeValid" onSelectionChanged.bind="onRangeUpdate" onSelectionConfirmed.bind="onRangeConfirmed" required="true"/>
        </div>
      </Section>
      <Section class="'pb-0'" title.translate="Format rules">
        <div class="o-cf-type-selector">
          <BadgeSelection choices="cfTypesValues" onChange.bind="changeRuleType" selectedValue="state.currentCFType"/>
        </div>
      </Section>
      <Section class="'o-cf-editor'">
        <t t-if="state.currentCFType === 'CellIsRule'" t-call="o-spreadsheet-CellIsRuleEditor">
          <t t-set="rule" t-value="state.rules.cellIs"/>
        </t>
        <t t-if="state.currentCFType === 'ColorScaleRule'" t-call="o-spreadsheet-ColorScaleRuleEditor">
          <t t-set="rule" t-value="state.rules.colorScale"/>
        </t>
        <t t-if="state.currentCFType === 'IconSetRule'" t-call="o-spreadsheet-IconSetEditor">
          <t t-set="rule" t-value="state.rules.iconSet"/>
        </t>
        <t t-if="state.currentCFType === 'DataBarRule'" t-call="o-spreadsheet-DataBarEditor">
          <t t-set="rule" t-value="state.rules.dataBar"/>
        </t>
      </Section>
      <Section class="'pt-1'">
        <div class="o-sidePanelButtons">
          <button t-on-click="props.onCancel" class="o-button o-cf-cancel">Cancel</button>
          <button t-on-click="onSave" class="o-button primary o-cf-save" t-att-disabled="state.errors.length !== 0">
            Save
          </button>
        </div>
      </Section>
      <Section>
        <ValidationMessages messages="errorMessages" msgType="'error'"/>
      </Section>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-CellIsRuleEditorPreview", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-CellIsRuleEditorPreview" xml:space="preserve">
    <div class="o-cf-preview-display" t-attf-style="font-weight:{{currentStyle.bold ?'bold':'normal'}};                        text-decoration:{{getTextDecoration(currentStyle)}};                        font-style:{{currentStyle.italic?'italic':'normal'}};                        color:{{currentStyle.textColor || '#000'}};                        background-color:{{currentStyle.fillColor}};">
      <t t-if="previewText" t-esc="previewText"/>
      <t t-else="">Preview text</t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-CellIsRuleEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-CellIsRuleEditor" xml:space="preserve">
    <t t-set="fill_color">Fill Color</t>
    <t t-set="text_color">Text Color</t>
    <div class="o-cf-cell-is-rule">
      <div class="o-section-subtitle">Format cells if...</div>
      <SelectMenu class="'o-cell-is-operator o-input mb-2'" menuItems="cfCriterionMenuItems" selectedValue="selectedCriterionName"/>

      <t t-if="criterionComponent" t-component="criterionComponent" t-key="state.rules.cellIs.operator" criterion="genericCriterion" onCriterionChanged.bind="onRuleValuesChanged"/>

      <div class="o-section-subtitle pt-3">Formatting style</div>

      <t t-call="o-spreadsheet-CellIsRuleEditorPreview">
        <t t-set="currentStyle" t-value="rule.style"/>
      </t>
      <div class="o-sidePanel-tools d-flex">
        <div class="o-hoverable-button o-menu-item-button" title="Bold" t-att-class="{active:rule.style.bold}" t-on-click="() =&gt; this.toggleStyle('bold')">
          <t t-call="o-spreadsheet-Icon.BOLD"/>
        </div>
        <div class="o-hoverable-button o-menu-item-button" title="Italic" t-att-class="{active:rule.style.italic}" t-on-click="() =&gt; this.toggleStyle('italic')">
          <t t-call="o-spreadsheet-Icon.ITALIC"/>
        </div>
        <div class="o-hoverable-button o-menu-item-button" title="Underline" t-att-class="{active:rule.style.underline}" t-on-click="(ev) =&gt; this.toggleStyle('underline', ev)">
          <t t-call="o-spreadsheet-Icon.UNDERLINE"/>
        </div>
        <div class="o-hoverable-button o-menu-item-button" title="Strikethrough" t-att-class="{active:rule.style.strikethrough}" t-on-click="(ev) =&gt; this.toggleStyle('strikethrough', ev)">
          <t t-call="o-spreadsheet-Icon.STRIKE"/>
        </div>
        <ColorPickerWidget currentColor="rule.style.textColor || '#000000'" toggleColorPicker="(ev) =&gt; this.toggleMenu('cellIsRule-textColor', ev)" showColorPicker="state.openedMenu === 'cellIsRule-textColor'" onColorPicked="(color) =&gt; this.setColor('textColor', color)" title="text_color" icon="'o-spreadsheet-Icon.TEXT_COLOR'" class="'o-hoverable-button o-menu-item-button'"/>
        <div class="o-divider"/>
        <ColorPickerWidget currentColor="rule.style.fillColor" toggleColorPicker="(ev) =&gt; this.toggleMenu('cellIsRule-fillColor', ev)" showColorPicker="state.openedMenu === 'cellIsRule-fillColor'" onColorPicked="(color) =&gt; this.setColor('fillColor', color)" title="fill_color" icon="'o-spreadsheet-Icon.FILL_COLOR'" class="'o-hoverable-button o-menu-item-button'"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o_spreadsheet.Section", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o_spreadsheet.Section" xml:space="preserve">
    <div class="o-section" t-att-class="props.class">
      <t t-if="props.slots.title or props.title">
        <div class="o-section-title">
          <t t-esc="props.title"/>
          <t t-slot="title"/>
        </div>
      </t>
      <t t-slot="default"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet.RoundColorPicker", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.RoundColorPicker" xml:space="preserve">
    <div class="o-round-color-picker-button rounded-circle" t-ref="colorPickerButton" t-on-click.stop="togglePicker" t-att-title="props.title" t-att-style="buttonStyle"/>
    <ColorPicker t-if="state.pickerOpened" anchorRect="colorPickerAnchorRect" onColorPicked.bind="onColorPicked" currentColor="props.currentColor" disableNoColor="props.disableNoColor"/>
  </t>

  `);
registerTemplate("o-spreadsheet.RadioSelection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.RadioSelection" xml:space="preserve">
    <div class="d-flex" t-att-class="{             'flex-row': props.direction === 'horizontal',             'flex-column': props.direction === 'vertical'}">
      <t t-foreach="props.choices" t-as="choice" t-key="choice.value">
        <label class="o-radio d-flex align-items-center me-4">
          <input t-att-class="{               'me-1': props.direction === 'horizontal',               'me-2': props.direction === 'vertical'}" type="radio" t-att-name="props.name" t-att-value="choice.value" t-att-checked="choice.value === props.selectedValue" t-on-change="() =&gt; props.onChange(choice.value)"/>
          <t t-esc="choice.label"/>
        </label>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SidePanelCollapsible", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SidePanelCollapsible" xml:space="preserve">
    <div class="" t-att-class="props.class">
      <div class="o_side_panel_collapsible_title o-fw-bold d-flex align-items-center">
        <div class="collapsor w-100 d-flex align-items-center ps-1" t-att-class="state.isCollapsed ? 'collapsed' : ''" t-on-click="() =&gt; this.toggle()">
          <span class="collapsor-arrow">
            <t t-call="o-spreadsheet-Icon.ANGLE_DOWN"/>
          </span>
          <div class="ps-2" t-esc="props.title"/>
        </div>
      </div>
      <Collapse isCollapsed="state.isCollapsed">
        <div class="pt-2">
          <t t-slot="content"/>
        </div>
      </Collapse>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Collapse", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Collapse" xml:space="preserve">
    <div t-ref="content" class="os-collapse">
      <t t-slot="default"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-CogWheelMenu", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-CogWheelMenu" xml:space="preserve">
    <span class="fa fa-cog os-cog-wheel-menu-icon o-button-icon" t-on-click="toggleMenu" t-ref="button"/>
    <MenuPopover t-if="menuState.isOpen" menuId="menuId" anchorRect="menuState.anchorRect" menuItems="menuState.menuItems" onClose="() =&gt; this.menuState.isOpen=false" width="160"/>
  </t>

  `);
registerTemplate("o-spreadsheet.Checkbox", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.Checkbox" xml:space="preserve">
    <label class="o-checkbox d-flex align-items-center" role="button" t-att-title="props.title" t-att-class="{'text-muted': props.disabled }" t-attf-class="{{props.className}}">
      <input class="me-2" type="checkbox" t-att-disabled="props.disabled" t-att-name="props.name" t-att-checked="props.value" t-on-change="onChange" t-on-click.stop=""/>
      <t t-if="props.label" t-esc="props.label"/>
    </label>
  </t>

  `);
registerTemplate("o-spreadsheet.BadgeSelection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.BadgeSelection" xml:space="preserve">
    <div class="d-flex w-100 o-badge-selection">
      <t t-foreach="props.choices" t-as="choice" t-key="choice.value">
        <button class="flex-grow-1 o-button" t-esc="choice.label" t-att-class="{ 'selected': props.selectedValue === choice.value }" t-on-click="() =&gt; props.onChange(choice.value)" t-att-data-id="choice.value"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-WaterfallChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-WaterfallChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props">
      <t t-set-slot="general-extension">
        <Section class="'o-vertical-axis-selection pt-0'" title.translate="Vertical axis position">
          <RadioSelection choices="axisChoices" selectedValue="props.definition.verticalAxisPosition" name="'axis'" onChange.bind="updateVerticalAxisPosition"/>
        </Section>
        <ChartLegend t-props="props"/>
        <Section class="'pt-0'" title.translate="Values">
          <ChartShowValues t-props="props"/>
        </Section>
      </t>
    </GeneralDesignEditor>
    <SidePanelCollapsible isInitiallyCollapsed="true" title.translate="Waterfall design">
      <t t-set-slot="content">
        <Section class="'pt-0'" title.translate="Options">
          <t t-set="firstValueAsSubtotal">Use first value as subtotal</t>
          <Checkbox className="'mb-2'" name="'firstValueAsSubtotal'" label="firstValueAsSubtotal" value="props.definition.firstValueAsSubtotal" onChange.bind="onUpdateFirstValueAsSubtotal"/>
          <t t-set="showSubTotalsLabel">Show subtotals at the end of series</t>
          <Checkbox className="'mb-2'" name="'showSubTotals'" label="showSubTotalsLabel" value="props.definition.showSubTotals" onChange.bind="onUpdateShowSubTotals"/>
          <t t-set="showConnectorLinesLabel">Show connector lines</t>
          <Checkbox name="'showConnectorLines'" label="showConnectorLinesLabel" value="props.definition.showConnectorLines" onChange.bind="onUpdateShowConnectorLines"/>
        </Section>
        <Section class="'pt-0'" title.translate="Colors">
          <div class="o-waterfall-positive-color d-flex align-items-center mb-2">
            <RoundColorPicker currentColor="positiveValuesColor" onColorPicked="(color) =&gt; this.updateColor('positiveValuesColor', color)"/>
            <span class="ps-2">Color of positive values</span>
          </div>
          <div class="o-waterfall-negative-color d-flex align-items-center mb-2">
            <RoundColorPicker currentColor="negativeValuesColor" onColorPicked="(color) =&gt; this.updateColor('negativeValuesColor', color)"/>
            <span class="ps-2">Color of negative values</span>
          </div>
          <div class="o-waterfall-subtotal-color d-flex align-items-center">
            <RoundColorPicker currentColor="subTotalValuesColor" onColorPicked="(color) =&gt; this.updateColor('subTotalValuesColor', color)"/>
            <span class="ps-2">Color of subtotals</span>
          </div>
        </Section>
      </t>
    </SidePanelCollapsible>
    <SidePanelCollapsible isInitiallyCollapsed="true" title.translate="Axes">
      <t t-set-slot="content">
        <AxisDesignEditor axesList="axesList" figureId="props.figureId" definition="props.definition" updateChart="props.updateChart"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-TreeMapChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TreeMapChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props"/>

    <SidePanelCollapsible isInitiallyCollapsed="false" title.translate="Tree map colors">
      <t t-set-slot="content">
        <Section class="'pt-0'">
          <BadgeSelection choices="coloringOptionChoices" onChange.bind="changeColoringOption" selectedValue="coloringOptions.type"/>

          <t t-if="coloringOptions.type === 'categoryColor'">
            <TreeMapCategoryColors figureId="props.figureId" definition="props.definition" onColorChanged.bind="onCategoryColorChange"/>
          </t>
          <t t-else="">
            <TreeMapColorScale figureId="props.figureId" definition="props.definition" onColorChanged.bind="onColorScaleChange"/>
          </t>
        </Section>
      </t>
    </SidePanelCollapsible>

    <SidePanelCollapsible isInitiallyCollapsed="false" title.translate="Headers and labels">
      <t t-set-slot="content">
        <Section title.translate="Headers" class="'pt-0 pb-0'">
          <Checkbox name="'showHeaders'" label.translate="Show headers" value="showHeaders" onChange="(showHeaders) =&gt; props.updateChart(this.props.figureId, { showHeaders })"/>
        </Section>
        <Section class="'pt-0'" t-if="showHeaders">
          <TextStyler class="'pt-0 o-header-style'" updateStyle="(headerDesign) =&gt; props.updateChart(this.props.figureId, { headerDesign })" style="props.definition.headerDesign || {}" defaultStyle="defaults.headerDesign" hasBackgroundColor="true"/>
        </Section>

        <Section title.translate="Labels" class="'pt-0 pb-0'">
          <div class="d-flex flex-row gap-4">
            <Checkbox name="'showLabels'" label.translate="Show labels" value="showLabels" onChange="(showLabels) =&gt; props.updateChart(this.props.figureId, { showLabels })"/>
            <ChartShowValues t-props="props" defaultValue="defaults.showValues"/>
          </div>
        </Section>
        <Section class="'pt-0'" t-if="showValues || showLabels">
          <TextStyler class="'pt-0 o-values-style'" updateStyle="(valuesDesign) =&gt; props.updateChart(this.props.figureId, { valuesDesign })" style="props.definition.valuesDesign || {}" defaultStyle="defaults.valuesDesign" hasVerticalAlign="true"/>
        </Section>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-TreeMapColorScale", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TreeMapColorScale" xml:space="preserve">
    <div class="o-min-color d-flex align-items-center mb-2 mt-4">
      <RoundColorPicker currentColor="coloringOptions.minColor" onColorPicked="(color) =&gt; this.setColorScaleColor('minColor', color)" disableNoColor="true"/>
      <span class="ps-2">Color of minimum values</span>
    </div>
    <div class="o-mid-color d-flex align-items-center mb-2">
      <RoundColorPicker currentColor="coloringOptions.midColor" onColorPicked="(color) =&gt; this.setColorScaleColor('midColor', color)"/>
      <span class="ps-2">Color of middle values</span>
    </div>
    <div class="o-max-color d-flex align-items-center">
      <RoundColorPicker currentColor="coloringOptions.maxColor" onColorPicked="(color) =&gt; this.setColorScaleColor('maxColor', color)" disableNoColor="true"/>
      <span class="ps-2">Color of maximum values</span>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-TreeMapCategoryColors", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TreeMapCategoryColors" xml:space="preserve">
    <div class="mt-3">
      <div class="o-fw-bold mb-2">Category</div>
      <t t-foreach="getTreeGroupAndColors()" t-as="group" t-key="group_index">
        <div class="d-flex align-items-center mb-2" t-att-data-id="group.label">
          <RoundColorPicker currentColor="group.color" onColorPicked="(color) =&gt; this.onGroupColorChanged(group_index, color)"/>
          <span class="ps-2">
            <span t-esc="'(#' + (group_index +1 ) + ')'" class="o-text-bolder pe-1"/>
            <span class="text-muted" t-esc="group.label"/>
          </span>
        </div>
      </t>

      <Checkbox name="'useValueBasedGradient'" label.translate="Use value-based gradient" value="coloringOptions.useValueBasedGradient" onChange.bind="useValueBasedGradient" className="'mt-4'"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SunburstChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SunburstChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props">
      <t t-set-slot="general-extension">
        <ChartLegend t-props="props"/>
      </t>
    </GeneralDesignEditor>

    <SidePanelCollapsible isInitiallyCollapsed="false" title.translate="Sunburst options">
      <t t-set-slot="content">
        <Section class="'pt-0 o-sunburst-colors'" title.translate="Colors">
          <t t-foreach="groupColors" t-as="item" t-key="item.label">
            <div class="d-flex align-items-center mb-2" t-att-data-id="item.label">
              <RoundColorPicker currentColor="item.color" onColorPicked="(color) =&gt; this.onGroupColorChanged(item_index, color)"/>
              <span class="ps-2">
                <span t-esc="'(#' + (item_index +1 ) + ')'" class="o-text-bolder pe-1"/>
                <span class="text-muted" t-esc="item.label"/>
              </span>
            </div>
          </t>
        </Section>
        <Section title.translate="Labels" class="'pt-0 pb-0'">
          <div class="d-flex flex-row gap-4">
            <Checkbox name="'showLabels'" label.translate="Show labels" value="showLabels" onChange="(showLabels) =&gt; props.updateChart(this.props.figureId, { showLabels })"/>
            <ChartShowValues t-props="props" defaultValue="defaults.showValues"/>
          </div>
        </Section>
        <Section class="'pt-0'" t-if="showValues || showLabels">
          <TextStyler class="'o-values-style'" updateStyle="(valuesDesign) =&gt; props.updateChart(this.props.figureId, { valuesDesign })" style="props.definition.valuesDesign || {}" defaultStyle="defaults.valuesDesign"/>
        </Section>
        <PieHoleSize value="props.definition.pieHolePercentage ?? 25" onValueChange.bind="onPieHoleSizeChange"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-ScorecardChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ScorecardChartDesignPanel" xml:space="preserve">
    <t t-set="color_up">Color Up</t>
    <t t-set="color_down">Color Down</t>
    <GeneralDesignEditor t-props="props" defaultChartTitleFontSize="defaultScorecardTitleFontSize">
      <t t-set-slot="general-extension">
        <Section class="'pt-1'" title.translate="Number formatting">
          <Checkbox name="'humanizeNumbers'" label="humanizeNumbersLabel" value="props.definition.humanize" onChange.bind="updateHumanizeNumbers"/>
        </Section>
      </t>
    </GeneralDesignEditor>
    <ChartTitle title="this.props.definition.keyDescr?.text ?? ''" updateTitle="(text) =&gt; this.setKeyText(text)" name.translate="Key Value Style" placeholder.translate="Add a key value description" updateStyle.bind="updateKeyStyle" style="keyStyle"/>
    <SidePanelCollapsible isInitiallyCollapsed="false" title.translate="Baseline">
      <t t-set-slot="content">
        <ChartTitle title="this.props.definition.baselineDescr?.text ?? ''" updateTitle="(text) =&gt; this.setBaselineText(text)" name.translate="Baseline Style" placeholder.translate="Add a baseline description" updateStyle.bind="updateBaselineStyle" style="baselineStyle"/>
        <Section class="'o-chart-baseline-color pt-0'" title="colorsSectionTitle">
          <div class="d-flex align-items-center mb-2">
            <RoundColorPicker currentColor="props.definition.baselineColorUp" onColorPicked="(color) =&gt; this.setColor(color, 'baselineColorUp')" title="color_up"/>
            <span class="ps-2">Color on value increase</span>
          </div>
          <div class="d-flex align-items-center">
            <RoundColorPicker currentColor="props.definition.baselineColorDown" onColorPicked="(color) =&gt; this.setColor(color, 'baselineColorDown')" title="color_down"/>
            <span class="ps-2">Color on value decrease</span>
          </div>
        </Section>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-ScorecardChartConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ScorecardChartConfigPanel" xml:space="preserve">
    <div>
      <Section class="'o-data-series'" title.translate="Key value">
        <SelectionInput ranges="[this.getKeyValueRange()]" isInvalid="isKeyValueInvalid" hasSingleRange="true" required="true" onSelectionChanged="(ranges) =&gt; this.onKeyValueRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.updateKeyValueRange()"/>
      </Section>
      <Section class="'o-data-labels'" title.translate="Baseline configuration">
        <div class="o-section-subtitle">Value</div>
        <SelectionInput ranges="[this.getBaselineRange()]" isInvalid="isBaselineInvalid" hasSingleRange="true" onSelectionChanged="(ranges) =&gt; this.onBaselineRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.updateBaselineRange()"/>
        <div class="o-section-subtitle">Format</div>
        <select t-att-value="props.definition.baselineMode" class="o-input" t-on-change="(ev) =&gt; this.updateBaselineMode(ev)">
          <option value="text">Absolute value</option>
          <option value="difference">Value change from key value</option>
          <option value="percentage">Percentage change from key value</option>
          <option value="progress">Progress bar</option>
        </select>
      </Section>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ScatterConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ScatterConfigPanel" xml:space="preserve">
    <div>
      <ChartDataSeries ranges="this.getDataSeriesRanges()" onSelectionChanged.bind="onDataSeriesRangesChanged" onSelectionConfirmed.bind="onDataSeriesConfirmed" onSelectionReordered.bind="onDataSeriesReordered" onSelectionRemoved.bind="onDataSeriesRemoved" canChangeDatasetOrientation="canChangeDatasetOrientation" datasetOrientation="datasetOrientation" onFlipAxis.bind="setDatasetOrientation"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged.bind="onLabelRangeChanged" onSelectionConfirmed.bind="onLabelRangeConfirmed" options="this.getLabelRangeOptions()"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-RadarChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-RadarChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props">
      <t t-set-slot="general-extension">
        <ChartLegend t-props="props"/>
        <Section class="'pt-0'" title.translate="Values">
          <ChartShowValues t-props="props"/>
          <ChartShowDataMarkers t-props="props"/>
        </Section>
      </t>
    </GeneralDesignEditor>
    <SeriesDesignEditor t-props="props"/>
  </t>

  `);
registerTemplate("o-spreadsheet-PieChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PieChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props">
      <t t-set-slot="general-extension">
        <ChartLegend t-props="props"/>
        <Section class="'pt-0'" title.translate="Values">
          <ChartShowValues t-props="props"/>
        </Section>
        <PieHoleSize t-if="props.definition.isDoughnut" value="props.definition.pieHolePercentage ?? 50" onValueChange.bind="onPieHoleSizeChange"/>
      </t>
    </GeneralDesignEditor>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPanel" xml:space="preserve">
    <div class="o-chart d-flex flex-column h-100" t-if="figureId">
      <div class="o-panel">
        <div class="o-panel-element o-panel-configuration" t-att-class="store.panel !== 'configuration' ? 'inactive' : ''" t-on-click="switchPanel.bind(this, 'configuration')">
          <i class="fa fa-sliders"/>
          Configuration
        </div>
        <div class="o-panel-element o-panel-design" t-att-class="store.panel !== 'design' ? 'inactive' : ''" t-on-click="switchPanel.bind(this, 'design')">
          <i class="fa fa-paint-brush"/>
          Design
        </div>
      </div>

      <t t-set="definition" t-value="getChartDefinition(this.figureId)"/>
      <div class="o-panel-content overflow-y-auto" t-ref="panelContent">
        <div t-att-class="store.panel !== 'configuration' ? 'd-none' : ''">
          <ChartTypePicker figureId="props.figureId" chartPanelStore="store"/>
          <t t-component="chartPanel.configuration" definition="definition" figureId="figureId" updateChart.bind="updateChart" canUpdateChart.bind="canUpdateChart" t-key="figureId + definition.type"/>
        </div>
        <div t-att-class="store.panel !== 'design' ? 'd-none' : ''">
          <t t-component="chartPanel.design" definition="definition" figureId="figureId" updateChart.bind="updateChart" canUpdateChart.bind="canUpdateChart" t-key="figureId + definition.type"/>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-LineChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-LineChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props">
      <t t-set-slot="general-extension">
        <ChartLegend t-props="props"/>
        <Section class="'pt-0'" title.translate="Values">
          <ChartShowValues t-props="props"/>
          <ChartShowDataMarkers t-props="props"/>
        </Section>
      </t>
    </GeneralDesignEditor>
    <SeriesWithAxisDesignEditor t-props="props"/>
    <SidePanelCollapsible isInitiallyCollapsed="true" title.translate="Axes">
      <t t-set-slot="content">
        <AxisDesignEditor axesList="axesList" figureId="props.figureId" definition="props.definition" updateChart="props.updateChart"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-LineConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-LineConfigPanel" xml:space="preserve">
    <div>
      <Section class="'pt-0'">
        <Checkbox name="'stacked'" label="stackedLabel" value="props.definition.stacked" onChange.bind="onUpdateStacked" className="'mb-2'"/>
        <Checkbox name="'cumulative'" label="chartTerms.CumulativeData" value="props.definition.cumulative" onChange.bind="onUpdateCumulative"/>
      </Section>
      <ChartDataSeries ranges="this.getDataSeriesRanges()" onSelectionChanged.bind="onDataSeriesRangesChanged" onSelectionConfirmed.bind="onDataSeriesConfirmed" onSelectionReordered.bind="onDataSeriesReordered" onSelectionRemoved.bind="onDataSeriesRemoved" canChangeDatasetOrientation="canChangeDatasetOrientation" datasetOrientation="datasetOrientation" onFlipAxis.bind="setDatasetOrientation"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged.bind="onLabelRangeChanged" onSelectionConfirmed.bind="onLabelRangeConfirmed" options="this.getLabelRangeOptions()"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-HierarchicalChartConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-HierarchicalChartConfigPanel" xml:space="preserve">
    <div>
      <ChartDataSeries ranges="this.getDataSeriesRanges()" onSelectionChanged.bind="onDataSeriesRangesChanged" onSelectionConfirmed.bind="onDataSeriesConfirmed" onSelectionReordered.bind="onDataSeriesReordered" onSelectionRemoved.bind="onDataSeriesRemoved" title.translate="Hierarchy"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged.bind="onLabelRangeChanged" onSelectionConfirmed.bind="onLabelRangeConfirmed" options="this.getLabelRangeOptions()" title.translate="Values"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GeoChartRegionSelectSection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GeoChartRegionSelectSection" xml:space="preserve">
    <Section class="'o-geo-region'" title.translate="Region">
      <select class="o-input" t-on-change="this.updateSelectedRegion">
        <t t-foreach="availableRegions" t-as="region" t-key="region.id">
          <option t-att-value="region.id" t-esc="region.label" t-att-selected="region.id === selectedRegion"/>
        </t>
      </select>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-GeoChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GeoChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props">
      <t t-set-slot="general-extension">
        <Section class="'pt-0'" title.translate="Legend position">
          <select t-att-value="props.definition.legendPosition ?? 'bottom-left'" class="o-input o-chart-legend-position" t-on-change="this.updateLegendPosition">
            <option value="none">None</option>
            <option value="top">Top left</option>
            <option value="right">Top right</option>
            <option value="bottom">Bottom right</option>
            <option value="left">Bottom left</option>
          </select>
        </Section>
      </t>
    </GeneralDesignEditor>

    <SidePanelCollapsible isInitiallyCollapsed="false" title.translate="Geo chart options">
      <t t-set-slot="content">
        <Section class="'pt-0 o-color-scale'" title.translate="Color Scale">
          <select class="o-input" t-on-change="this.updateColorScaleType">
            <option value="custom">Custom</option>
            <hr/>
            <t t-foreach="colorScalesChoices" t-as="colorScale" t-key="colorScale">
              <option t-att-value="colorScale" t-esc="colorScale_value" t-att-selected="colorScale === selectedColorScale"/>
            </t>
          </select>

          <t t-if="customColorScale">
            <div class="o-min-color d-flex align-items-center mb-2 mt-4">
              <RoundColorPicker currentColor="getCustomColorScaleColor('minColor')" onColorPicked="(color) =&gt; this.setCustomColorScaleColor('minColor', color)" disableNoColor="true"/>
              <span class="ps-2">Color of minimum values</span>
            </div>
            <div class="o-mid-color d-flex align-items-center mb-2">
              <RoundColorPicker currentColor="getCustomColorScaleColor('midColor')" onColorPicked="(color) =&gt; this.setCustomColorScaleColor('midColor', color)"/>
              <span class="ps-2">Color of middle values</span>
            </div>
            <div class="o-max-color d-flex align-items-center">
              <RoundColorPicker currentColor="getCustomColorScaleColor('maxColor')" onColorPicked="(color) =&gt; this.setCustomColorScaleColor('maxColor', color)" disableNoColor="true"/>
              <span class="ps-2">Color of maximum values</span>
            </div>
          </t>
        </Section>

        <Section class="'pt-0 o-missing-value'" title.translate="Countries without value">
          <RoundColorPicker currentColor="selectedMissingValueColor" onColorPicked.bind="updateMissingValueColor"/>
        </Section>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-GeoChartConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GeoChartConfigPanel" xml:space="preserve">
    <div>
      <GeoChartRegionSelectSection figureId="props.figureId" definition="props.definition" updateChart="props.updateChart"/>

      <ChartDataSeries ranges="dataRanges" onSelectionChanged.bind="onDataSeriesRangesChanged" onSelectionConfirmed.bind="onDataSeriesConfirmed" onSelectionReordered.bind="onDataSeriesReordered" onSelectionRemoved.bind="onDataSeriesRemoved" maxNumberOfUsedRanges="maxNumberOfUsedRanges" canChangeDatasetOrientation="canChangeDatasetOrientation" datasetOrientation="datasetOrientation" onFlipAxis.bind="setDatasetOrientation"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged="(ranges) =&gt; this.onLabelRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.onLabelRangeConfirmed()" options="this.getLabelRangeOptions()" title.translate="Territories"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GaugeChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GaugeChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props"/>
    <SidePanelCollapsible isInitiallyCollapsed="false" title.translate="Gauge Design">
      <t t-set-slot="content">
        <Section class="'pt-0'" title.translate="Range">
          <div class="o-subsection-left">
            <StandaloneComposer class="'o-data-range-min'" placeholder.translate="Value or formula" title.translate="Min value or formula" invalid="isRangeMinInvalid" composerContent="state.sectionRule.rangeMin" defaultRangeSheetId="sheetId" onConfirm="(str) =&gt; this.onConfirmGaugeRange('rangeMin', str)"/>
          </div>
          <div class="o-subsection-right">
            <StandaloneComposer class="'o-data-range-max'" placeholder.translate="Value or formula" title.translate="Max value or formula" invalid="isRangeMaxInvalid" composerContent="state.sectionRule.rangeMax" defaultRangeSheetId="sheetId" onConfirm="(str) =&gt; this.onConfirmGaugeRange('rangeMax', str)"/>
          </div>
        </Section>

        <Section title.translate="Thresholds">
          <t t-call="o-spreadsheet-GaugeChartColorSectionTemplate">
            <t t-set="sectionRule" t-value="state.sectionRule"/>
          </t>
        </Section>

        <ChartErrorSection t-if="designErrorMessages.length" messages="designErrorMessages"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-GaugeChartColorSectionTemplate", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GaugeChartColorSectionTemplate" xml:space="preserve">
    <div class="o-gauge-color-set">
      <table>
        <tr>
          <th class="o-gauge-color-set-colorPicker"/>
          <th class="o-gauge-color-set-text"/>
          <th class="o-gauge-color-set-operator"/>
          <th class="o-gauge-color-set-value">Value</th>
          <th class="o-gauge-color-set-type">Type</th>
        </tr>

        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplateRow">
          <t t-set="sectionColor" t-value="sectionRule.colors.lowerColor"/>
          <t t-set="sectionType" t-value="'lowerColor'"/>
          <t t-set="inflectionPoint" t-value="sectionRule.lowerInflectionPoint"/>
          <t t-set="isInvalid" t-value="isLowerInflectionPointInvalid"/>
          <t t-set="inflectionPointName" t-value="'lowerInflectionPoint'"/>
        </t>

        <t t-call="o-spreadsheet-GaugeChartColorSectionTemplateRow">
          <t t-set="sectionColor" t-value="sectionRule.colors.middleColor"/>
          <t t-set="sectionType" t-value="'middleColor'"/>
          <t t-set="inflectionPoint" t-value="sectionRule.upperInflectionPoint"/>
          <t t-set="isInvalid" t-value="isUpperInflectionPointInvalid"/>
          <t t-set="inflectionPointName" t-value="'upperInflectionPoint'"/>
        </t>

        <tr>
          <td>
            <RoundColorPicker currentColor="sectionRule.colors.upperColor" onColorPicked="(color) =&gt; this.updateSectionColor('upperColor', color)"/>
          </td>
          <td>Else</td>
          <td/>
          <td/>
          <td/>
        </tr>
      </table>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GaugeChartColorSectionTemplateRow", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GaugeChartColorSectionTemplateRow" xml:space="preserve">
    <tr>
      <td>
        <RoundColorPicker currentColor="sectionColor" onColorPicked="(color) =&gt; this.updateSectionColor(sectionType, color)"/>
      </td>
      <td>When value is</td>
      <td class="pe-2">
        <t t-set="below">below</t>
        <t t-set="belowOrEqualTo">below or equal to</t>
        <select class="o-input" name="operatorType" t-att-title="inflectionPoint.operator === '&lt;' ? below : belowOrEqualTo" t-model="inflectionPoint.operator" t-on-change="() =&gt; this.updateSectionRule(state.sectionRule)">
          <option title="below" value="&lt;">&lt;</option>
          <option title="below or equal to" value="&lt;=">&lt;=</option>
        </select>
      </td>
      <td class="pe-2">
        <StandaloneComposer t-props="getGaugeInflectionComposerProps(sectionType)"/>
      </td>
      <td>
        <select class="o-input" name="valueType" t-model="inflectionPoint.type" t-on-change="(ev) =&gt; this.updateSectionRule(state.sectionRule)">
          <option value="number">Number</option>
          <option value="percentage">Percentage</option>
        </select>
      </td>
    </tr>
  </t>

  `);
registerTemplate("o-spreadsheet-GaugeChartConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GaugeChartConfigPanel" xml:space="preserve">
    <div>
      <ChartDataSeries ranges="[this.getDataRange()]" onSelectionChanged="(ranges) =&gt; this.onDataRangeChanged(ranges)" onSelectionConfirmed="() =&gt; this.updateDataRange()" hasSingleRange="true"/>

      <ChartErrorSection t-if="configurationErrorMessages.length" messages="configurationErrorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FunnelChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FunnelChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props">
      <t t-set-slot="general-extension">
        <Section class="'pt-0'" title.translate="Values">
          <ChartShowValues t-props="props"/>
        </Section>
      </t>
    </GeneralDesignEditor>

    <SidePanelCollapsible isInitiallyCollapsed="false" title.translate="Funnel options">
      <t t-set-slot="content">
        <Section class="'o-funnel-colors pt-0'" title.translate="Funnel colors">
          <t t-foreach="getFunnelColorItems()" t-as="item" t-key="item_index">
            <div class="d-flex align-items-center mb-2" t-att-data-id="item_index">
              <RoundColorPicker currentColor="item.color" onColorPicked="(color) =&gt; this.updateFunnelItemColor(item_index, color)"/>
              <span class="ps-2" t-esc="item.label"/>
            </div>
          </t>
        </Section>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-ComboChartDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ComboChartDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props">
      <t t-set-slot="general-extension">
        <ChartLegend t-props="props"/>
        <Section class="'pt-0'" title.translate="Values">
          <ChartShowValues t-props="props"/>
          <ChartShowDataMarkers t-props="props"/>
        </Section>
      </t>
    </GeneralDesignEditor>
    <SeriesWithAxisDesignEditor t-props="props">
      <t t-set-slot="general-extension" t-slot-scope="scope">
        <t t-set="index" t-value="scope.index"/>
        <Section class="'pt-0 o-series-type-selection'" title.translate="Serie type">
          <RadioSelection choices="seriesTypeChoices" selectedValue="getDataSeriesType(index)" name="'seriesType'" onChange="(type) =&gt; this.updateDataSeriesType(index, type)"/>
        </Section>
      </t>
    </SeriesWithAxisDesignEditor>
    <SidePanelCollapsible isInitiallyCollapsed="true" title.translate="Axes">
      <t t-set-slot="content">
        <AxisDesignEditor axesList="axesList" figureId="props.figureId" definition="props.definition" updateChart="props.updateChart"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartWithAxisDesignPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartWithAxisDesignPanel" xml:space="preserve">
    <GeneralDesignEditor t-props="props">
      <t t-set-slot="general-extension">
        <ChartLegend t-props="props"/>
        <Section class="'pt-0'" title.translate="Values">
          <ChartShowValues t-props="props"/>
        </Section>
      </t>
    </GeneralDesignEditor>
    <SeriesWithAxisDesignEditor t-props="props"/>
    <SidePanelCollapsible isInitiallyCollapsed="true" title.translate="Axes">
      <t t-set-slot="content">
        <AxisDesignEditor axesList="axesList" figureId="props.figureId" definition="props.definition" updateChart="props.updateChart"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartTypePicker", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartTypePicker" xml:space="preserve">
    <t t-set="selectedChartProperties" t-value="getSelectedChartSubtypeProperties()"/>
    <Section title.translate="Chart type">
      <div class="position-relative">
        <select class="o-input o-type-selector" t-ref="selectRef" t-on-pointerdown.prevent="onPointerDown">
          <option t-esc="selectedChartProperties.displayName" t-att-value="selectedChartProperties.chartSubtype"/>
        </select>
        <div class="o-type-selector-preview position-absolute">
          <t t-call="{{selectedChartProperties.preview}}"/>
        </div>
      </div>
    </Section>
    <Popover t-if="state.popoverProps" t-props="state.popoverProps">
      <div t-ref="popoverRef" class="o-chart-select-popover px-3 pb-4" t-att-style="state.popoverStyle">
        <t t-foreach="categories" t-as="category" t-key="category">
          <t t-if="chartTypeByCategories[category]">
            <h5 class="my-3" t-esc="category_value"/>
            <div class="d-flex flex-wrap">
              <t t-foreach="chartTypeByCategories[category]" t-as="properties" t-key="properties.chartSubtype">
                <div class="o-chart-type-item" t-att-title="properties.displayName" t-on-click="() =&gt; this.onTypeChange(properties.chartSubtype)" t-att-data-id="properties.chartSubtype" t-att-class="{'selected': properties === selectedChartProperties}">
                  <t t-call="{{properties.preview}}"/>
                </div>
              </t>
            </div>
          </t>
        </t>
      </div>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartPreview.LINE_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.LINE_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
      <path stroke="#eb6d00" style="fill:none" d="M6,40 l12,-12 l6,6 l18,-18"/>
      <path stroke="#0074d9" style="fill:none" d="M6,25 l12,-12 l18,18 l6,-6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.STACKED_LINE_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.STACKED_LINE_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path stroke="#0074d9" style="fill:none" d="M3,30 l12,-12 l6,6 l18,-18"/>
      <path stroke="#eb6d00" style="fill:none" d="M3,40 l12,-12 l6,6 l18,-12"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.AREA_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.AREA_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#c4e4ff" d="M3,45 V25 l12,-12 l18,18 l6,-6 V45"/>
      <path fill="#ffe1c8" d="M3,45 V40 l12,-12 l6,6 l18,-18 V45"/>
      <path stroke="#eb6d00" style="fill:none" d="M3,40 l12,-12 l6,6 l18,-18"/>
      <path stroke="#0074d9" style="fill:none" d="M3,25 l12,-12 l18,18 l6,-6"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.STACKED_AREA_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.STACKED_AREA_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#c4e4ff" d="M3,45 h36 v-39 l-18,18 l-6,-6 l-12,12"/>
      <path stroke="#0074d9" style="fill:none" d="M3,30 l12,-12 l6,6 l18,-18"/>
      <path fill="#ffe1c8" d="M3,45 h36 v-23 l-18,12 l-6,-6 l-12,12"/>
      <path stroke="#eb6d00" style="fill:none" d="M3,40 l12,-12 l6,6 l18,-12"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.COLUMN_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.COLUMN_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#0074d9" d="M7,45 v-28 h6 v28"/>
      <path fill="#c4e4ff" d="M8,45 v-27 h4 v27"/>
      <path fill="#eb6d00" d="M14,45 v-14 h6 v14"/>
      <path fill="#ffe1c8" d="M15,45 v-13 h4 v13"/>
      <path fill="#0074d9" d="M26,45 v-22 h6 v22"/>
      <path fill="#c4e4ff" d="M27,45 v-21 h4 v21"/>
      <path fill="#eb6d00" d="M33,45 v-32 h6 v32"/>
      <path fill="#ffe1c8" d="M34,45 v-31 h4 v31"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.STACKED_COLUMN_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.STACKED_COLUMN_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#0074d9" d="M7,45 v-12 h8 v12"/>
      <path fill="#c4e4ff" d="M8,45 v-11 h6 v11"/>
      <path fill="#eb6d00" d="M7,33 v-14 h8 v14"/>
      <path fill="#ffe1c8" d="M8,33 v-13 h6 v13"/>

      <path fill="#0074d9" d="M20,45 v-8 h8 v8"/>
      <path fill="#c4e4ff" d="M21,45 v-7 h6 v7"/>
      <path fill="#eb6d00" d="M20,37 v-9 h8 v9"/>
      <path fill="#ffe1c8" d="M21,37 v-8 h6 v8"/>

      <path fill="#0074d9" d="M33,45 v-18 h8 v18"/>
      <path fill="#c4e4ff" d="M34,45 v-17 h6 v17"/>
      <path fill="#eb6d00" d="M33,27 v-16 h8 v16"/>
      <path fill="#ffe1c8" d="M34,27 v-15 h6 v15"/>

      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.BAR_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.BAR_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <g transform="matrix(0 1 -1 0 48 3)">
        <path fill="#0074d9" d="M7,45 v-28 h6 v28"/>
        <path fill="#c4e4ff" d="M8,45 v-27 h4 v27"/>
        <path fill="#eb6d00" d="M14,45 v-14 h6 v14"/>
        <path fill="#ffe1c8" d="M15,45 v-13 h4 v13"/>
        <path fill="#0074d9" d="M26,45 v-22 h6 v22"/>
        <path fill="#c4e4ff" d="M27,45 v-21 h4 v21"/>
        <path fill="#eb6d00" d="M33,45 v-32 h6 v32"/>
        <path fill="#ffe1c8" d="M34,45 v-31 h4 v31"/>
      </g>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.STACKED_BAR_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.STACKED_BAR_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <g transform="matrix(0 1 -1 0 48 1)">
        <path fill="#0074d9" d="M7,45 v-12 h8 v12"/>
        <path fill="#c4e4ff" d="M8,45 v-11 h6 v11"/>
        <path fill="#eb6d00" d="M7,33 v-14 h8 v14"/>
        <path fill="#ffe1c8" d="M8,33 v-13 h6 v13"/>
        <path fill="#0074d9" d="M20,45 v-8 h8 v8"/>
        <path fill="#c4e4ff" d="M21,45 v-7 h6 v7"/>
        <path fill="#eb6d00" d="M20,37 v-9 h8 v9"/>
        <path fill="#ffe1c8" d="M21,37 v-8 h6 v8"/>
        <path fill="#0074d9" d="M33,45 v-18 h8 v18"/>
        <path fill="#c4e4ff" d="M34,45 v-17 h6 v17"/>
        <path fill="#eb6d00" d="M33,27 v-16 h8 v16"/>
        <path fill="#ffe1c8" d="M34,27 v-15 h6 v15"/>
      </g>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.COMBO_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.COMBO_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#0074d9" d="M7,45 v-14 h6 v14"/>
      <path fill="#c4e4ff" d="M8,45 v-13 h4 v13"/>
      <path fill="#eb6d00" d="M14,45 v-28 h6 v28"/>
      <path fill="#ffe1c8" d="M15,45 v-27 h4 v27"/>
      <path fill="#0074d9" d="M26,45 v-22 h6 v22"/>
      <path fill="#c4e4ff" d="M27,45 v-21 h4 v21"/>
      <path fill="#eb6d00" d="M33,45 v-32 h6 v32"/>
      <path fill="#ffe1c8" d="M34,45 v-31 h4 v31"/>
      <path stroke="#888" style="fill:none;stroke-width:1.5;" d="M4,40 l14,-12 l6,6 l20,-18"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.PIE_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.PIE_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#ffe1c8" stroke="#eb6d00" d="M41.32, 34 A20 20, 0, 1, 1, 24, 4 v20"/>
      <path fill="#c4e4ff" stroke="#0074d9" d="M24,24 v-20 A20 20, 0, 0, 1, 41.32, 34 L24,24"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.DOUGHNUT_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.DOUGHNUT_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#ffe1c8" stroke="#eb6d00" d="M41.32, 34 A20 20, 0, 1, 1, 24, 4 v8 A12,12,0,1,0,34.4,30"/>
      <path fill="#c4e4ff" stroke="#0074d9" d="M24,12 v-8 A20 20, 0, 0, 1, 41.32, 34 L34.4,30 A12,12,0,0,0,24,12"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.SCATTER_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.SCATTER_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <circle fill="#0074d9" cx="10" cy="10" r="2"/>
      <circle fill="#0074d9" cx="15" cy="30" r="2"/>
      <circle fill="#0074d9" cx="25" cy="36" r="2"/>
      <circle fill="#0074d9" cx="32" cy="15" r="2"/>
      <circle fill="#eb6d00" cx="10" cy="40" r="2"/>
      <circle fill="#eb6d00" cx="18" cy="20" r="2"/>
      <circle fill="#eb6d00" cx="30" cy="25" r="2"/>
      <circle fill="#eb6d00" cx="40" cy="33" r="2"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.GAUGE_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.GAUGE_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview user-select-none">
      <path fill="#ccc" d="M2,32 A22,22,0,0,1,46,32 h-6 A16,16,0,0,0,8,32"/>
      <path fill="#6aa84f" d="M2,32 A22,22,0,0,1,35,13 L32,18.2 A16,16,0,0,0,8,32"/>
      <text x="17" y="32" style="font-size:12px;">62</text>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.SCORECARD_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.SCORECARD_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview user-select-none">
      <path fill="#ddd" d="M1,8 h46 v32 h-46"/>
      <path fill="#eee" d="M2,9 h44 v30 h-44"/>
      <text x="9" y="32" style="font-size:18px;">123</text>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.WATERFALL_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.WATERFALL_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#444" d="M5,45 v-26 h6 v26"/>
      <path fill="#fff" d="M6,45 v-25 h4 v25"/>
      <path fill="#eb6d00" d="M13,19 v7 h6 v-7"/>
      <path fill="#ffe1c8" d="M14,20 v5 h4 v-5"/>
      <path fill="#eb6d00" d="M21,25 v10 h6 v-10"/>
      <path fill="#ffe1c8" d="M22,26 v8 h4 v-8"/>
      <path fill="#0074d9" d="M29,35 v-24 h6 v24"/>
      <path fill="#c4e4ff" d="M30,34 v-22 h4 v22"/>
      <path fill="#444" d="M37,45 v-34 h6 v34"/>
      <path fill="#fff" d="M38,45 v-33 h4 v33"/>
      <path fill="#444" d="M11,20 v-1 h2 v1 M19,26 v-1 h2 v1 M27,35 v-1 h2 v1 M35,12 v-1 h2 v1"/>
      <path fill="#444" d="M2,2 v44 h1 v-44 M3,45 h42 v1 h-42"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.POPULATION_PYRAMID_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.POPULATION_PYRAMID_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#eb6d00" d="M23,43 v-6 h22 v6"/>
      <path fill="#ffe1c8" d="M23,42 v-4 h21 v4"/>
      <path fill="#eb6d00" d="M23,36 v-6 h18 v6"/>
      <path fill="#ffe1c8" d="M23,35 v-4 h17 v4"/>
      <path fill="#eb6d00" d="M23,29 v-6 h12 v6"/>
      <path fill="#ffe1c8" d="M23,28 v-4 h11 v4"/>
      <path fill="#eb6d00" d="M23,22 v-6 h8 v6"/>
      <path fill="#ffe1c8" d="M23,21 v-4 h7 v4"/>
      <path fill="#eb6d00" d="M23,15 v-6 h4 v6"/>
      <path fill="#ffe1c8" d="M23,14 v-4 h3 v4"/>

      <path fill="#0074d9" d="M24,43 v-6 h-20 v6"/>
      <path fill="#c4e4ff" d="M24,42 v-4 h-19 v4"/>
      <path fill="#0074d9" d="M24,36 v-6 h-18 v6"/>
      <path fill="#c4e4ff" d="M24,35 v-4 h-17 v4"/>
      <path fill="#0074d9" d="M24,29 v-6 h-12 v6"/>
      <path fill="#c4e4ff" d="M24,28 v-4 h-11 v4"/>
      <path fill="#0074d9" d="M24,22 v-6 h-6 v6"/>
      <path fill="#c4e4ff" d="M24,21 v-4 h-5 v4"/>
      <path fill="#0074d9" d="M24,15 v-6 h-4 v6"/>
      <path fill="#c4e4ff" d="M24,14 v-4 h-3 v4"/>

      <path fill="#444" d="M23,2 v43 h1 v-43 M2,45 h44 v1 h-44"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.RADAR_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.RADAR_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="none" stroke="#0074d9" d="m24 16 14.27 3.36-1.93 21.63-18.22-8.9-3.63-11.18Z"/>
      <path fill="none" stroke="#eb6d00" d="m24 4 7.61 17.53-4.67 6.52-12.34 8.89-7.72-18.5Z"/>
      <path fill="none" stroke="#444" d="M24 2v22l20.92-6.8L24 24l12.93 17.8L24 24 11.07 41.8 24 24 3.08 17.2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.FILLED_RADAR_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.FILLED_RADAR_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#0074d944" stroke="#0074d9" d="m24 16 14.27 3.36-1.93 21.63-18.22-8.9-3.63-11.18Z"/>
      <path fill="#eb6d0044" stroke="#eb6d00" d="m24 4 7.61 17.53-4.67 6.52-12.34 8.89-7.72-18.5Z"/>
      <path fill="none" stroke="#444" d="M24 2v22l20.92-6.8L24 24l12.93 17.8L24 24 11.07 41.8 24 24 3.08 17.2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.GEO_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.GEO_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" class="o-chart-preview" fill="none" stroke-width="0.5" stroke-linejoin="round">
      <circle cx="16" cy="16" r="13" fill="#c4e4ff"/>
      <path stroke="#eb6d00" fill="#ffe1c8" d="M12.225 16.293c0 6.8 4 9 5 9 3.5 0 2-5.293 3.5-6.793s5-.707 5-4.207-2-5-5-5c-5 0-8.5 1.5-8.5 7z"/>
      <path fill="#ffe1c8" d="M21.5 4.4c0 1.167-1.735 1.5-3 1.5-5.217 0-10.705 3.48-11.421 8.004C6.992 14.549 6.552 15 6 15H3.07 A 13 13 0 0 1 21.5 4.2                 M3.8 20.5c.785.262 2.126 1.285 3.44 1.517.57.101 1.153.464 1.299 1.023.303 1.16.548 1.992-.239 3.58 A 13 13 0 0 1 3.8 20.5"/>
      <path stroke="#eb6d00" d="M21.5 4.4c0 1.167-1.735 1.5-3 1.5-5.217 0-10.705 3.48-11.421 8.004C6.992 14.549 6.552 15 6 15H3.07                 M3.8 20.5c.785.262 2.126 1.285 3.44 1.517.57.101 1.153.464 1.299 1.023.303 1.16.548 1.992-.239 3.58"/>
      <circle cx="16" cy="16" r="13" stroke="#444"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.FUNNEL_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.FUNNEL_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path stroke="#0074d9" fill="#c4e4ff" d="M2.5,6.5 h44 l-5,7 h-34 l-5,-7 h1"/>
      <path stroke="#eb6d00" fill="#ffe1c8" d="M9.5,16.5 h30 l-3,7 h-25 l-3,-7 h1"/>
      <path stroke="#0074d9" fill="#c4e4ff" d="M12.5,26.5 h23 l-8,7 h-7 l-8,-7 h1"/>
      <path stroke="#eb6d00" fill="#ffe1c8" d="M21.5,35.5 h5 l-2.5,7 l-2.5,-7 h1"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.SUNBURST_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.SUNBURST_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#ffe1c8" stroke="#eb6d00" d="M24,12 v8A4,4,0,1,0,27.46,26 L41.32, 34 A20,20,0,0,1,8.679,36.856 L14.807,31.713 A12,12,0,0,1,24,12 M34.4,30 A12,12,0,0,1,14.807,31.713"/>
      <path fill="#c4e4ff" stroke="#0074d9" d="M24,20 v-16 A20 20, 0, 0, 1, 41.32, 34 L27.46,26 A4,4,0,0,0,24,20 M24,12 A12,12,0,0,1,34.4,30 M33.193,16.287 L39.321,11.144 M36,24 L44,24"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-ChartPreview.TREE_MAP_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartPreview.TREE_MAP_CHART" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" class="o-chart-preview">
      <path fill="#444" d="M2,4 h44 v5 h-44"/>
      <path fill="#444" d="M2,10 h28 v5 h-28"/>
      <path fill="#444" d="M31,10 h15 v5 h-15"/>
      <path fill="#0074d9" d="M2,16 h28 v14 h-28"/>
      <path fill="#c4e4ff" d="M3,17 h26 v12 h-26"/>
      <path fill="#0074d9" d="M2,31 h15 v12 h-15"/>
      <path fill="#c4e4ff" d="M3,32 h13 v10 h-13"/>
      <path fill="#0074d9" d="M18,31 h12 v12 h-12"/>
      <path fill="#c4e4ff" d="M19,32 h10 v10 h-10"/>
      <path fill="#eb6d00" d="M31,16 h15 v27 h-15"/>
      <path fill="#ffe1c8" d="M32,17 h13 v25 h-13"/>
    </svg>
  </t>

  `);
registerTemplate("o-spreadsheet.TextStyler", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.TextStyler" xml:space="preserve">
    <div class="o-chart-title-designer position-relative d-flex align-items-center" t-att-class="props.class">
      <ActionButton action="boldButtonAction" class="'o-hoverable-button'"/>
      <ActionButton action="italicButtonAction" class="'o-hoverable-button'"/>
      <div class="o-divider" t-if="props.hasHorizontalAlign || props.hasVerticalAlign"/>
      <div class="o-dropdown position-relative" t-if="props.hasHorizontalAlign">
        <ActionButton action="horizontalAlignButtonAction" hasTriangleDownIcon="true" t-on-click="(ev) =&gt; this.toggleDropdownTool('horizontalAlignTool', ev)" class="'o-hoverable-button'"/>
        <div class="o-dropdown-content position-absolute top-100 start-0 bg-white" t-if="state.activeTool === 'horizontalAlignTool'" t-att-style="dropdownStyle" t-on-click.stop="">
          <div class="o-dropdown-line d-flex">
            <t t-foreach="horizontalAlignActions" t-as="action" t-key="action_index">
              <ActionButton action="action" class="'o-hoverable-button'"/>
            </t>
          </div>
        </div>
      </div>
      <div class="o-dropdown position-relative" t-if="props.hasVerticalAlign">
        <ActionButton action="verticalAlignButtonAction" hasTriangleDownIcon="true" t-on-click="(ev) =&gt; this.toggleDropdownTool('verticalAlignTool', ev)" class="'o-hoverable-button'"/>
        <div class="o-dropdown-content position-absolute top-100 start-0 bg-white" t-if="state.activeTool === 'verticalAlignTool'" t-att-style="dropdownStyle" t-on-click.stop="">
          <div class="o-dropdown-line d-flex">
            <t t-foreach="verticalAlignActions" t-as="action" t-key="action_index">
              <ActionButton action="action" class="'o-hoverable-button'"/>
            </t>
          </div>
        </div>
      </div>
      <div class="o-divider"/>
      <FontSizeEditor currentFontSize="currentFontSize" onFontSizeChanged.bind="this.updateFontSize" class="'o-hoverable-button'"/>
      <div class="o-divider"/>
      <ColorPickerWidget currentColor="props.style.color ?? props.defaultStyle?.color" toggleColorPicker="(ev) =&gt; this.toggleDropdownTool('fillChartColorTool', ev)" showColorPicker="state.activeTool === 'fillChartColorTool'" onColorPicked.bind="onTextColorChange" title.translate="Text color" icon="'o-spreadsheet-Icon.TEXT_COLOR'" class="'o-hoverable-button o-menu-item-button'"/>
      <ColorPickerWidget t-if="props.hasBackgroundColor" currentColor="props.style.fillColor || props.defaultStyle?.fillColor" toggleColorPicker="(ev) =&gt; this.toggleDropdownTool('fillcolorTool', ev)" showColorPicker="state.activeTool === 'fillcolorTool'" onColorPicked.bind="onFillColorChange" title.translate="Fill color" icon="'o-spreadsheet-Icon.FILL_COLOR'" class="'o-hoverable-button o-menu-item-button'"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartShowValues", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartShowValues" xml:space="preserve">
    <Checkbox name="'showValues'" label.translate="Show values" value="props.definition.showValues ?? props.defaultValue" onChange="(showValues) =&gt; props.updateChart(this.props.figureId, { showValues })"/>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartShowDataMarkers", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartShowDataMarkers" xml:space="preserve">
    <Checkbox name="'showDataMarkers'" label.translate="Show data markers" value="!props.definition.hideDataMarkers" onChange="(showDataMarkers) =&gt; props.updateChart(this.props.figureId, { hideDataMarkers: !showDataMarkers })"/>
  </t>

  `);
registerTemplate("o-spreadsheet-SeriesWithAxisDesignEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SeriesWithAxisDesignEditor" xml:space="preserve">
    <SeriesDesignEditor t-props="props">
      <t t-set-slot="data-series-extension" t-slot-scope="scope">
        <t t-set="index" t-value="scope.index"/>
        <t t-slot="general-extension" index="index"/>
        <Section class="'pt-0 pb-0'">
          <Section class="'pt-0 px-0 o-vertical-axis-selection'" t-if="canHaveTwoVerticalAxis" title.translate="Vertical axis">
            <RadioSelection choices="axisChoices" selectedValue="getDataSerieAxis(index)" name="'axis'" onChange="(value) =&gt; this.updateDataSeriesAxis(index, value)"/>
          </Section>
          <Section class="'pt-0 px-0 o-show-trend-line'" t-if="!props.definition.horizontal" title.translate="Trend line">
            <t t-set="showTrendLineLabel">Show trend line</t>
            <t t-set="trend" t-value="getTrendLineConfiguration(index)"/>
            <t t-set="trendType" t-value="getTrendType(trend)"/>
            <Checkbox name="'showTrendLine'" label="showTrendLineLabel" value="trend !== undefined and trend.display" onChange="(display) =&gt; this.toggleDataTrend(index, display)"/>
            <div t-if="trend !== undefined and trend.display">
              <div class="d-flex py-2">
                <div class="w-100">
                  <span class="o-section-subtitle">Type</span>
                  <select class="o-input trend-type-selector" t-on-change="(ev) =&gt; this.onChangeTrendType(index, ev)">
                    <option value="linear" t-att-selected="trendType === 'linear'">Linear</option>
                    <option value="exponential" t-att-selected="trendType === 'exponential'">
                      Exponential
                    </option>
                    <option value="polynomial" t-att-selected="trendType === 'polynomial'">
                      Polynomial
                    </option>
                    <option value="logarithmic" t-att-selected="trendType === 'logarithmic'">
                      Logarithmic
                    </option>
                    <option value="trailingMovingAverage" t-att-selected="trendType === 'trailingMovingAverage'">
                      Trailing moving average
                    </option>
                  </select>
                </div>
                <div class="w-50 ms-3" t-if="trendType === 'trailingMovingAverage'">
                  <span class="o-section-subtitle">Window</span>
                  <input t-att-value="trend.window || this.defaultWindowSize" type="number" class="w-100 o-input trend-window-input" t-on-change="(ev) =&gt; this.onChangeMovingAverageWindow(index, ev)"/>
                </div>
                <div class="w-50 ms-3" t-if="trendType === 'polynomial'">
                  <span class="o-section-subtitle">Degree</span>
                  <select t-att-value="trend.order" class="o-input trend-order-input" t-on-change="(ev) =&gt; this.onChangePolynomialDegree(index, ev)">
                    <t t-foreach="getPolynomialDegrees(index)" t-as="degree" t-key="degree">
                      <option t-att-value="degree">
                        <t t-esc="degree"/>
                      </option>
                    </t>
                  </select>
                </div>
              </div>
              <div class="d-flex align-items-center">
                <span class="o-section-subtitle my-0 pe-2">Trend line color</span>
                <RoundColorPicker currentColor="getTrendLineColor(index)" onColorPicked="(ev) =&gt; this.updateTrendLineColor(index, ev)"/>
              </div>
            </div>
          </Section>
        </Section>
      </t>
    </SeriesDesignEditor>
  </t>

  `);
registerTemplate("o-spreadsheet-SeriesDesignEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SeriesDesignEditor" xml:space="preserve">
    <SidePanelCollapsible isInitiallyCollapsed="true" title.translate="Data Series">
      <t t-set-slot="content">
        <Section class="'pt-0 pb-0'">
          <select class="o-input data-series-selector" t-model="state.label" t-on-change="(ev) =&gt; this.updateEditedSeries(ev)">
            <t t-foreach="getDataSeries()" t-as="serie" t-key="serie_index">
              <option t-att-value="serie" t-att-selected="state.index === serie_index" t-esc="serie"/>
            </t>
          </select>
          <Section class="'px-0'">
            <div class="d-flex align-items-center">
              <span class="o-section-title mb-0 pe-2">Series color</span>
              <RoundColorPicker currentColor="getDataSeriesColor()" onColorPicked.bind="updateDataSeriesColor"/>
            </div>
          </Section>
          <Section class="'pt-0 px-0'" title.translate="Series name">
            <input class="o-input o-serie-label-editor" type="text" t-att-value="getDataSeriesLabel()" t-on-change="(ev) =&gt; this.updateDataSeriesLabel(ev)"/>
          </Section>
        </Section>
        <t t-slot="data-series-extension" index="state.index"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet.PieHoleSize", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.PieHoleSize" xml:space="preserve">
    <Section class="'pt-0'" title.translate="Center radius">
      <div class="d-flex flex-row">
        <input t-att-value="props.value" type="number" class="o-input o-pie-hole-size-input" min="0" max="95" t-on-change="(ev) =&gt; debouncedOnChange(ev.target.value)"/>
        %
      </div>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartLegend", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartLegend" xml:space="preserve">
    <Section class="'pt-0'" title.translate="Legend position">
      <select t-att-value="props.definition.legendPosition ?? 'top'" class="o-input o-chart-legend-position" t-on-change="this.updateLegendPosition">
        <option value="none">None</option>
        <option value="top">Top</option>
        <option value="bottom">Bottom</option>
        <option value="left">Left</option>
        <option value="right">Right</option>
      </select>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet.ChartLabelRange", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.ChartLabelRange" xml:space="preserve">
    <Section class="'o-data-labels'" title="props.title">
      <SelectionInput ranges="[props.range]" isInvalid="props.isInvalid" hasSingleRange="true" onSelectionChanged="(ranges) =&gt; props.onSelectionChanged(ranges)" onSelectionConfirmed="() =&gt; props.onSelectionConfirmed()"/>
      <t t-foreach="props.options" t-as="option" t-key="option.name">
        <Checkbox name="option.name" label="option.label" value="option.value" onChange="option.onChange" className="'mt-2'" disabled="option.disabled"/>
      </t>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-GenericChartConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GenericChartConfigPanel" xml:space="preserve">
    <div>
      <ChartDataSeries ranges="this.getDataSeriesRanges()" onSelectionChanged.bind="onDataSeriesRangesChanged" onSelectionConfirmed.bind="onDataSeriesConfirmed" onSelectionReordered.bind="onDataSeriesReordered" onSelectionRemoved.bind="onDataSeriesRemoved" maxNumberOfUsedRanges="maxNumberOfUsedRanges" datasetOrientation="datasetOrientation" canChangeDatasetOrientation="canChangeDatasetOrientation" onFlipAxis.bind="setDatasetOrientation"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged.bind="onLabelRangeChanged" onSelectionConfirmed.bind="onLabelRangeConfirmed" options="this.getLabelRangeOptions()"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GeneralDesignEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GeneralDesignEditor" xml:space="preserve">
    <SidePanelCollapsible isInitiallyCollapsed="false" title.translate="General">
      <t t-set-slot="content">
        <Section class="'o-chart-background-color pt-0 pb-0'" title.translate="Background color">
          <RoundColorPicker currentColor="props.definition.background" onColorPicked.bind="updateBackgroundColor"/>
        </Section>
        <ChartTitle title="title.text" updateTitle.bind="updateTitle" name.translate="Chart title" placeholder.translate="Add a Title" updateStyle.bind="updateChartTitleStyle" style="title" defaultStyle="{align: 'left', fontSize: this.props.defaultChartTitleFontSize}"/>
        <t t-slot="general-extension"/>
      </t>
    </SidePanelCollapsible>
  </t>

  `);
registerTemplate("o-spreadsheet.ChartErrorSection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.ChartErrorSection" xml:space="preserve">
    <Section>
      <ValidationMessages messages="props.messages" msgType="'error'"/>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet.ChartDataSeries", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.ChartDataSeries" xml:space="preserve">
    <Section class="'o-data-series'">
      <t t-set-slot="title">
        <div class="d-flex flex-row justify-content-between">
          <t t-esc="title"/>
          <div t-if="props.onFlipAxis and props.canChangeDatasetOrientation" class="d-flex">
            <span t-if="props.datasetOrientation !== 'rows'" title="Split dataset by rows" t-on-click="(ev) =&gt; props.onFlipAxis('rows')" class="p-1 o-hoverable-button o-split-by-rows">
              <t t-call="o-spreadsheet-Icon.INSERT_ROW_BEFORE"/>
            </span>
            <span t-else="" title="Split dataset by columns" t-on-click="(ev) =&gt; props.onFlipAxis('columns')" class="p-1 o-hoverable-button o-split-by-columns">
              <t t-call="o-spreadsheet-Icon.INSERT_COL_BEFORE"/>
            </span>
          </div>
        </div>
      </t>
      <SelectionInput ranges="ranges" required="true" hasSingleRange="props.hasSingleRange" onSelectionChanged="props.onSelectionChanged" onSelectionConfirmed="props.onSelectionConfirmed" onSelectionReordered="props.onSelectionReordered" onSelectionRemoved="props.onSelectionRemoved" colors="colors" disabledRanges="disabledRanges" disabledRangeTitle.translate="Excluded due to chart limits. Drag to swap with another range."/>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet.ChartTitle", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet.ChartTitle" xml:space="preserve">
    <Section class="'o-chart-title'" title="props.name">
      <input type="text" class="o-input" t-att-value="props.title" t-on-change="updateTitle" t-att-placeholder="props.placeholder"/>
      <TextStyler style="props.style" updateStyle="props.updateStyle" defaultStyle="props.defaultStyle" hasHorizontalAlign="true"/>
    </Section>
  </t>

  `);
registerTemplate("o-spreadsheet-AxisDesignEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-AxisDesignEditor" xml:space="preserve">
    <t t-set="editor_label">Axis title</t>
    <Section class="'py-0'">
      <BadgeSelection choices="badgeAxes" onChange.bind="(value) =&gt; state.currentAxis = value" selectedValue="state.currentAxis"/>
    </Section>
    <ChartTitle title="this.getAxisTitle()" updateTitle.bind="updateAxisTitle" updateStyle.bind="updateAxisTitleStyle" name="editor_label" style="axisTitleStyle" defaultStyle="{align: 'center', color: '', fontSize: defaultFontSize}"/>
  </t>

  `);
registerTemplate("o-spreadsheet-BarConfigPanel", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BarConfigPanel" xml:space="preserve">
    <div>
      <Section class="'pt-0'">
        <Checkbox name="'stacked'" label="stackedLabel" value="props.definition.stacked" onChange.bind="onUpdateStacked"/>
      </Section>
      <ChartDataSeries ranges="this.getDataSeriesRanges()" onSelectionChanged.bind="onDataSeriesRangesChanged" onSelectionConfirmed.bind="onDataSeriesConfirmed" onSelectionReordered.bind="onDataSeriesReordered" onSelectionRemoved.bind="onDataSeriesRemoved" canChangeDatasetOrientation="canChangeDatasetOrientation" datasetOrientation="datasetOrientation" onFlipAxis.bind="setDatasetOrientation"/>
      <ChartLabelRange range="this.getLabelRange()" isInvalid="isLabelInvalid" onSelectionChanged.bind="onLabelRangeChanged" onSelectionConfirmed.bind="onLabelRangeConfirmed" options="this.getLabelRangeOptions()"/>

      <ChartErrorSection t-if="errorMessages.length" messages="errorMessages"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SelectionInput", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SelectionInput" xml:space="preserve">
    <div class="o-selection" t-ref="o-selection">
      <div t-foreach="ranges" t-as="range" t-key="range.id" class="o-selection-input d-flex flex-row" t-att-style="dragAndDrop.itemsStyle[range.id]" t-att-class="props.class">
        <span t-if="ranges.length &gt; 1 and props.onSelectionReordered" title="Reorder range" t-on-pointerdown="(ev) =&gt; this.startDragAndDrop(range.id, ev)" class="o-drag-handle d-flex align-items-center mb-2 o-button-icon">
          <t t-call="o-spreadsheet-Icon.SHORT_THIN_DRAG_HANDLE"/>
        </span>
        <div class="position-relative w-100">
          <input type="text" spellcheck="false" placeholder="e.g. A1:A2" t-on-input="(ev) =&gt; this.onInputChanged(range.id, ev)" t-on-focus="() =&gt; this.focus(range.id)" t-on-keydown="onKeydown" t-att-value="range.xc" t-att-style="getColor(range)" class="o-input mb-2" t-att-class="{               'o-disabled-ranges' : range.disabled and !range.isFocused,               'o-focused' : range.isFocused,               'o-invalid border-danger position-relative': isInvalid || !range.isValidRange,               'text-decoration-underline': range.xc and range.isFocused and state.mode === 'select-range'             }" t-ref="{{range.isFocused ? 'focusedInput' : 'unfocusedInput' + range_index}}"/>
          <span t-if="isInvalid || !range.isValidRange" class="input-icon text-danger position-absolute d-flex align-items-center" title="This range is invalid">
            <t t-call="o-spreadsheet-Icon.ERROR"/>
          </span>
          <span class="input-icon o-disabled-ranges position-absolute d-flex align-items-center" t-if="!range.isFocused and range.disabled" t-att-title="props.disabledRangeTitle">
            <t t-call="o-spreadsheet-Icon.CIRCLE_INFO"/>
          </span>
        </div>
        <button class="border-0 bg-transparent fw-bold o-remove-selection o-button-icon pe-0" t-if="ranges.length &gt; 1" t-on-click="() =&gt; this.removeInput(range.id)">
          <t t-call="o-spreadsheet-Icon.TRASH_FILLED"/>
        </button>
      </div>
      <div class="d-flex flex-row w-100 o-selection-input">
        <button class="o-button o-add-selection" t-if="canAddRange" t-on-click="addEmptyInput">
          Add range
        </button>
        <div class="ms-auto" t-if="store.hasFocus">
          <button class="o-button o-selection-ko" t-if="isResettable" t-on-click="reset">
            Reset
          </button>
          <button class="o-button primary ms-2 o-selection-ok" t-if="store.hasFocus" t-att-disabled="!isConfirmable" t-on-click="confirm">
            Confirm
          </button>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Selection", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Selection" xml:space="preserve">
    <Highlight t-props="highlightProps"/>
  </t>

  `);
registerTemplate("o-spreadsheet-ScrollBar", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ScrollBar" xml:space="preserve">
    <div class="o-scrollbar" t-on-scroll="onScroll" t-ref="scrollbar" t-att-style="positionCss">
      <div t-att-style="sizeCss"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Popover", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Popover" xml:space="preserve">
    <t t-portal="'.o-spreadsheet'">
      <div class="o-popover rounded" t-att-class="props.class" t-ref="popover" t-on-wheel="props.onMouseWheel" t-att-style="popoverStyle" t-on-click.stop="">
        <div class="o-popover-content" t-ref="popoverContent">
          <t t-slot="default"/>
        </div>
      </div>
    </t>
  </t>

  `);
registerTemplate("o_spreadsheet.PivotHTMLRenderer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o_spreadsheet.PivotHTMLRenderer" xml:space="preserve">
    <div class="o_pivot_html_renderer">
      <Checkbox name="'missing_values'" label.translate="Display missing cells only" value="state.showMissingValuesOnly" onChange.bind="(value) =&gt; this.state.showMissingValuesOnly = value" className="'m-2'"/>
      <t t-set="tableData" t-value="getTableData()"/>
      <table class="o_pivot_html_renderer" t-if="tableData.values.length &gt; 0 or tableData.rows.length &gt; 0">
        <tr t-foreach="tableData.columns" t-as="row" t-key="row_index">
          <t t-if="row_index === 0">
            <th t-att-rowspan="tableData.columns.length"/>
          </t>
          <t t-foreach="row" t-as="cell" t-key="cell_index">
            <th t-att-colspan="cell.span" t-att-style="cell.style" t-att-class="{ o_missing_value: cell.isMissing }" t-on-click="() =&gt; props.onCellClicked(cell.formula)">
              <t t-esc="cell.value"/>
            </th>
          </t>
        </tr>
        <t t-foreach="tableData.rows" t-as="row" t-key="row_index">
          <tr>
            <th t-att-style="row.style" t-att-class="{ o_missing_value: row.isMissing }" t-on-click="() =&gt; props.onCellClicked(row.formula)">
              <t t-esc="row.value"/>
            </th>
            <t t-foreach="tableData.values" t-as="col" t-key="col_index">
              <td t-att-class="{ o_missing_value: col[row_index].isMissing }" t-on-click="() =&gt; props.onCellClicked(col[row_index].formula)">
                <t t-esc="col[row_index].value"/>
              </td>
            </t>
          </tr>
        </t>
      </table>
      <div class="alert alert-info" t-else="1">This pivot has no cell missing on this sheet</div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-PaintFormatButton", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-PaintFormatButton" xml:space="preserve">
    <span class="o-menu-item-button" title="Paint Format" t-att-class="{active: isActive}" t-attf-class="{{props.class}}" t-on-click="togglePaintFormat" t-on-dblclick="onDblClick">
      <span>
        <t t-call="o-spreadsheet-Icon.PAINT_FORMAT"/>
      </span>
    </span>
  </t>

  `);
registerTemplate("o-spreadsheet-Menu-Popover", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Menu-Popover" xml:space="preserve">
    <Popover t-if="props.menuItems" t-props="popoverProps">
      <div t-ref="menu" class="o-menu-wrapper" t-on-mouseover="() =&gt; this.onMouseOverMainMenu()">
        <Menu t-props="menuProps"/>
      </div>
      <MenuPopover t-if="subMenu.isOpen" t-key="subMenu.parentMenu.id" anchorRect="subMenuAnchorRect" menuItems="subMenu.menuItems" depth="props.depth + 1" maxHeight="props.maxHeight" onMenuClicked="props.onMenuClicked" onClose.bind="close" menuId="props.menuId" onMouseOver.bind="onMouseOverChildMenu" width="props.width"/>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-Menu", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Menu" xml:space="preserve">
    <div t-ref="menu" class="o-menu" t-att-style="menuStyle" t-on-scroll="props.onScroll" t-on-wheel.stop="" t-on-pointerdown.prevent="" t-on-click.stop="" t-on-contextmenu.prevent="">
      <t t-foreach="menuItemsAndSeparators" t-as="menuItem" t-key="menuItem_index">
        <div t-if="menuItem === 'separator'" class="o-separator"/>
        <t t-else="">
          <t t-set="isMenuRoot" t-value="isRoot(menuItem)"/>
          <t t-set="isMenuEnabled" t-value="isEnabled(menuItem)"/>
          <div t-att-title="getName(menuItem)" t-att-data-name="menuItem.id" t-on-click="(ev) =&gt; this.onClickMenu(menuItem, ev)" t-on-auxclick="(ev) =&gt; this.onClickMenu(menuItem, ev)" t-on-mouseover="(ev) =&gt; this.props.onMouseOver?.(menuItem, ev)" t-on-mouseenter="(ev) =&gt; this.onMouseEnter?.(menuItem, ev)" t-on-mouseleave="(ev) =&gt; this.onMouseLeave?.(menuItem)" class="o-menu-item d-flex justify-content-between align-items-center" t-att-class="{'disabled': !isMenuEnabled, 'o-menu-item-active': props.isActive?.(menuItem)}" t-att-style="getColor(menuItem)">
            <div class="d-flex w-100">
              <div t-if="childrenHaveIcon" class="o-menu-item-icon d-flex align-items-center flex-shrink-0" t-att-style="getIconColor(menuItem)">
                <t t-if="getIconName(menuItem)" t-call="{{getIconName(menuItem)}}"/>
              </div>
              <div class="o-menu-item-name align-middle text-truncate" t-esc="getName(menuItem)"/>
              <t t-set="description" t-value="menuItem.description(env)"/>
              <div t-if="description" class="o-menu-item-description ms-auto text-truncate" t-esc="description"/>
              <t t-set="secondaryIcon" t-value="menuItem.secondaryIcon(env)"/>
              <div t-if="isMenuRoot" class="o-menu-item-root align-middle ms-auto" t-call="o-spreadsheet-Icon.CARET_RIGHT"/>
              <div t-elif="secondaryIcon" class="o-menu-item-root align-middle ms-auto" t-call="{{secondaryIcon}}"/>
            </div>
          </div>
        </t>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-LinkEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-LinkEditor" xml:space="preserve">
    <div class="o-link-editor" t-on-click.stop="() =&gt; this.menu.isOpen=false" t-on-keydown="onKeyDown">
      <div class="o-section">
        <div class="o-section-title">Text</div>
        <div class="d-flex">
          <input type="text" title="Link label" placeholder="e.g. 'Link label'" class="o-input" t-model="link.label"/>
        </div>

        <div class="o-section-title mt-3">Link</div>
        <div class="o-link-url">
          <t t-if="link.isUrlEditable">
            <input class="o-input" type="text" placeholder="e.g. 'http://www.odoo.com'" title="Link URL" t-ref="urlInput" t-model="link.url"/>
          </t>
          <t t-else="">
            <input type="text" class="o-input" title="Link URL" t-att-value="getUrlRepresentation(link)" disabled="1"/>
          </t>
          <button t-if="link.url" t-on-click="removeLink" class="o-remove-url o-button-icon">
            ✖
          </button>
          <button t-if="!link.url" t-on-click.stop="openMenu" class="o-special-link o-button-icon" t-ref="linkEditorMenuButton">
            <t t-call="o-spreadsheet-Icon.LIST"/>
          </button>
        </div>
      </div>
      <MenuPopover t-if="menu.isOpen" anchorRect="menuButtonRect" menuItems="menuItems" onMenuClicked="(ev) =&gt; this.onSpecialLink(ev)" onClose="() =&gt; this.menu.isOpen=false"/>
      <div class="o-buttons">
        <button t-on-click="cancel" class="o-button o-cancel me-2">Cancel</button>
        <button t-on-click="save" class="o-button primary o-save" t-att-disabled="!link.url">
          Confirm
        </button>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-LinkDisplay", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-LinkDisplay" xml:space="preserve">
    <div class="o-link-tool d-flex align-items-center">

      <img t-if="link.isExternal" t-key="link.url" t-attf-src="https://www.google.com/s2/favicons?sz=16&amp;domain={{link.url}}"/>
      <a t-if="link.isExternal" class="o-link" t-att-href="link.url" target="_blank" t-on-click.prevent="openLink" t-att-title="link.url">
        <t t-esc="getUrlRepresentation(link)"/>
      </a>
      <a t-else="" class="o-link" t-on-click.prevent="openLink" t-on-auxclick.prevent="openLink" t-att-title="getUrlRepresentation(link)">
        <t t-esc="getUrlRepresentation(link)"/>
      </a>
      <span t-if="!env.model.getters.isReadonly()" class="o-link-icon o-unlink" t-on-click="unlink" title="Remove link">
        <t t-call="o-spreadsheet-Icon.UNLINK"/>
      </span>
      <span t-if="!env.model.getters.isReadonly()" class="o-link-icon o-edit-link" t-on-click="edit" title="Edit link">
        <t t-call="o-spreadsheet-Icon.EDIT"/>
      </span>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.CLEAR_AND_RELOAD", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CLEAR_AND_RELOAD" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M14 15H4V3h6v3h4M4 1.5A1.5 1.5 0 0 0 2.5 3v12a1.5 1.5 0 0 0 1.4 1.5h10a1.5 1.5 0 0 0 1.5-1.5V5l-3.5-3.5         "/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.EXPORT_XLSX", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.EXPORT_XLSX" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M0 1a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1m4-4V1H1v3m7 0V1H5v3M4 8V5H1v3m7 0V5H5v3m-3.5 2h2v4h3v-1.5l3 2.5-3 2.5V16h-5m9.5-6h6a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1h-6a1 1 0 0 1-1-1v-6a1 1 0 0 1 1-1m1.7 7 1.3-2 1.3 2h2l-2-3 2-3h-2L14 13l-1.3-2h-2l2 3-2 3"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.OPEN_READ_ONLY", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.OPEN_READ_ONLY" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M13 7V5c0-2.5-2-4-4-4S5 2.5 5 5v2h-.5C3.5 7 3 7.5 3 8.5v7c0 1 .5 1.5 1.5 1.5h9c1 0 1.5-.5 1.5-1.5v-7c0-1-.5-1.5-1.5-1.5m-7-2c0-1.5 1-2.5 2.5-2.5s2.5 1 2.5 2.5v2h-5V5m1 7a1.5 1.5 0 0 1 3 0 1.5 1.5 0 0 1-3 0"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.OPEN_DASHBOARD", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.OPEN_DASHBOARD" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M13 2.07A8 8 0 1 0 15.93 5L14.2 6A6 6 0 1 1 12 3.8m-2 3.47a2 2 0 1 0 .73.73l5.5-5.5-.6-.6M9.3 3.8a.6.6 0 1 1-.01-.01m1.81.51a.6.6 0 1 1-.01-.01M7.5 4.3a.6.6 0 1 1-.01-.01M5.9 5.4a.6.6 0 1 1-.01-.01M4.8 6.9a.6.6 0 1 1-.01-.01m8.71.61a.6.6 0 1 0-.01 0"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.OPEN_READ_WRITE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.OPEN_READ_WRITE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M13 7V5a4 4 0 0 0-8 0v2h-.5C3.5 7 3 7.5 3 8.5v7c0 1 .5 1.5 1.5 1.5h9c1 0 1.5-.5 1.5-1.5v-7c0-1-.5-1.5-1.5-1.5m-7-2a2 2 0 0 1 5 0v2h-5m1 5a1.5 1.5 0 0 1 3 0 1.5 1.5 0 0 1-3 0m6 3.5h-9v-7h9"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.IMPORT_XLSX", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.IMPORT_XLSX" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9 10a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1h-7a1 1 0 0 1-1-1m4-4v-3h-3v3m7 0v-3h-3v3m-1 4v-3h-3v3m7 0v-3h-3v3M.5 9h2v4h3v-1.5l3 2.5-3 2.5V15h-5M1 0h6a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1m1.7 7L4 5l1.3 2h2l-2-3 2-3h-2L4 3 2.7 1h-2l2 3-2 3"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNDO", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNDO" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M5.43 9.43 8 12H1V5l2.96 2.958A8.29 8.29 0 0 1 9.32 6c3.46 0 6.42 2.11 7.68 5l-2 1c-.94-2.39-3.13-3.92-5.68-4a6.57 6.57 0 0 0-3.89 1.43"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.REDO", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.REDO" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M12.57 9.43 10 12h7V5l-2.96 2.96A8.29 8.29 0 0 0 8.68 6C5.22 6 2.26 8.11 1 11l2 1c.94-2.39 3.13-3.92 5.68-4a6.58 6.58 0 0 1 3.89 1.43"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CLIPBOARD", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CLIPBOARD" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-clipboard"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.COPY", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.COPY" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-clone"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CUT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CUT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M3 2v2l4.5 5-1.2 1.3c-.4-.2-.8-.3-1.3-.3-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3c0-.5-.1-.9-.3-1.3L9 10.4l1.3 1.3c-.2.4-.3.8-.3 1.3 0 1.7 1.3 3 3 3s3-1.3 3-3-1.3-3-3-3c-.5 0-.9.1-1.3.3L10.4 9 15 4.4V2h-.4L9 7.6 3.4 2H3Zm2 12.5c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5 1.5.7 1.5 1.5-.7 1.5-1.5 1.5Zm9.5-1.5c0 .8-.7 1.5-1.5 1.5s-1.5-.7-1.5-1.5.7-1.5 1.5-1.5 1.5.7 1.5 1.5ZM9 8.5c.3 0 .5.2.5.5s-.2.5-.5.5-.5-.2-.5-.5.2-.5.5-.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.COPY_AS_IMAGE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.COPY_AS_IMAGE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="m 14,15 v 1.5 H 2.5147386 c -0.5522847,0 -1,-0.447715 -1,-1 V 3 H 3 V 14 c 0,0.552285 0.4477153,1 1,1 h 10"/>
      <path fill="currentColor" d="M 3.8194506,2.0480809 A 1.1084934,1.1763958 0 0 1 4.927944,0.87168505 H 15.273882 A 1.1084934,1.1763958 0 0 1 16.382375,2.0480809 V 13.027775 a 1.1084934,1.1763958 0 0 1 -1.108493,1.176396 H 4.927944 A 1.1084934,1.1763958 0 0 1 3.8194506,13.027775 V 2.0480809 H 4.927944 V 13.027775 H 15.273882 V 2.0480809 H 4.927944 M 12.3179,5.5772683 10.839908,9.1064553 9.7314149,7.93006 8.2534245,9.8907193 7.1449309,8.7143233 5.6669395,11.067114 H 14.534886 M 6.0364374,4.4008725 a 1.1084936,1.176396 0 0 1 2.2169871,0 1.1084936,1.176396 0 0 1 -2.2169871,0" id="path1-5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PASTE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PASTE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M14.5 2.5H11C10.7 1.6 10 1 9 1s-1.5.5-2 1.5H3.5C2.5 2.5 2 3 2 4v11c0 1 .5 1.5 1.5 1.5h11c1 0 1.5-.5 1.5-1.5V4c0-1-.5-1.5-1.5-1.5Zm-4.75.75c0 .5-.34.75-.75.75s-.75-.34-.75-.75.34-.75.75-.75.75.34.75.75ZM14.5 15h-11V4H5v2.5h8V4h1.5v11"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CLEAR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CLEAR" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M1.5 15a.75.75 0 0 0 0 1.5h15a.75.75 0 0 0 0-1.5M5.3 12.75c.1.1.3.2.5.2h4c.2 0 .4-.1.5-.2l5.5-5.5c.2-.3.2-.6 0-.8l-4.4-4.4c-.3-.2-.6-.2-.8 0l-4.8 4.8c-2.7 2.9-3.1 2.8-2.4 4M7 7.25l3.6 3.6-1 1-3.6.1-1.8-1.9"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FREEZE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FREEZE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 17.5h16a1 1 0 0 0 1-1v-15a1 1 0 0 0-1-1h-15a1 1 0 0 0-1 1v15a1 1 0 0 0 1 1m9-10.5v4.5H6V7m0 9v-3.5h4.5V16M5 16H3.5L5 14.5M5 13l-3 3v-1.5l3-3M2 13v-2l3-3v2m-3-.5v-2l3-3v2M2 6V4l2-2h1v1m11 13h-4.5v-3.5H16m0-1h-4.5V7H16m0-5v4h-4.5V2m-1 4H6V2h4.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNFREEZE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNFREEZE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 17.5h16a1 1 0 0 0 1-1v-15a1 1 0 0 0-1-1h-15a1 1 0 0 0-1 1v15a1 1 0 0 0 1 1M5 6H2V2h3m0 9.5H2V7h3m0 9H2v-3.5h3M10.5 7v4.5H6V7m0 9v-3.5h4.5V16m5.5 0h-4.5v-3.5H16m0-1h-4.5V7H16m0-5v4h-4.5V2m-1 4H6V2h4.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SHOW", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SHOW" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-eye"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FORMULA", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FORMULA" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M7 14.25q-.25.75-.75 1.25T5 16q-.75 0-1.5-.5Q3 15 3 14.25q0-.5.25-.75t.75-.25q.25 0 .25.75v.5H5q.5 0 .5-.5l1.25-6.5H5V6h2l.5-2.25q.25-.75.75-1.25T9.5 2q1 0 1.5.5t.5 1q0 .5-.25.75t-.5.25q-.5 0-.75-.25t-.25-.5V3H9.5q-.25 0-.5.5L8.5 6H10v1.5H8.25m1.25 1H15v1h-4l2 2-2 2h4v1H9V14l2.5-2.5L9 9"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.HIDE_ROW", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.HIDE_ROW" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2H2v3.5h14V2H2v9h14V7H2v9h14v-3.5H2M1 12l4-5h2l-4 5m2 0 4-5h2l-4 5m2 0 4-5h2l-4 5m2 0 4-5v4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNHIDE_ROW", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNHIDE_ROW" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M17.5 16a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2zH16v-3.5H2V16h14V2H2v3.5h14"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.HIDE_COL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.HIDE_COL" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M16 .5A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2A1.5 1.5 0 0 1 2 .5h14V2h-3.5v14H16V2H7v14h4V2H2v14h3.5V2M6 1l5 4v2L6 3m0 2 5 4v2L6 7m0 2 5 4v2l-5-4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNHIDE_COL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNHIDE_COL" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M16 .5A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2A1.5 1.5 0 0 1 2 .5h14V2h-3.5v14H16V2H2V16h3.5V2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_ROW", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_ROW" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2H2v3.5h14V2H2v9h14V7H2v9h14v-3.5H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_ROW_BEFORE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_ROW_BEFORE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M3.5 14.5A1.5 1.5 0 0 0 5 16h10a1.5 1.5 0 0 0 1.5-1.5v-7h-3V5h3V1.5A1.5 1.5 0 0 0 15 0H5a1.5 1.5 0 0 0-1.5 1.5v2h-3V9h3M15 12.5v2H5v-2M15 9v2H5V9m10-7.5v2H5v-2M12 5v2.5H2V5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_ROW_AFTER", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_ROW_AFTER" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M3.5 1.5A1.5 1.5 0 0 1 5 0h10a1.5 1.5 0 0 1 1.5 1.5v7h-3V11h3v3.5A1.5 1.5 0 0 1 15 16H5a1.5 1.5 0 0 1-1.5-1.5v-2h-3V7h3M15 3.5v-2H5v2M15 7V5H5v2m10 7.5v-2H5v2m7-3.5V8.5H2V11"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_COL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_COL" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2H2v14h3.5V2H2h5v14h4V2H2h10.5v14H16V2H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_COL_AFTER", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_COL_AFTER" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2.5 3A1.5 1.5 0 0 0 1 4.5v10A1.5 1.5 0 0 0 2.5 16h7v-3H12v3h3.5a1.5 1.5 0 0 0 1.5-1.5v-10A1.5 1.5 0 0 0 15.5 3h-2V0H8v3M4.5 14.5h-2v-10h2m3.5 10H6v-10h2m7.5 10h-2v-10h2m-3.5 7H9.5v-10H12"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_COL_BEFORE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_COL_BEFORE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M15.5 3A1.5 1.5 0 0 1 17 4.5v10a1.5 1.5 0 0 1-1.5 1.5h-7v-3H6v3H2.5A1.5 1.5 0 0 1 1 14.5v-10A1.5 1.5 0 0 1 2.5 3h2V0H10v3m3.5 11.5h2v-10h-2m-3.5 10h2v-10h-2m-7.5 10h2v-10h-2m3.5 7h2.5v-10H6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_CELL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_CELL" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2v14a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2H2v14h14V2H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_CELL_SHIFT_DOWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_CELL_SHIFT_DOWN" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M5 2.5A1.5 1.5 0 0 1 6.5 1h10A1.5 1.5 0 0 1 18 2.5v13a1.5 1.5 0 0 1-1.5 1.5h-10A1.5 1.5 0 0 1 5 15.5v-5h5.25v-3H5m11.5-2v-3h-4.75v3m-1.5 0v-3H6.5v3m10 5v-3h-4.75v3m-1.5 5v-3H6.5v3m10 0v-3h-4.75v3M0 12.5l2.5 4 2.5-4H3.25v-6h-1.5v6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_CELL_SHIFT_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_CELL_SHIFT_RIGHT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2.5 5A1.5 1.5 0 0 0 1 6.5v10A1.5 1.5 0 0 0 2.5 18h13a1.5 1.5 0 0 0 1.5-1.5v-10A1.5 1.5 0 0 0 15.5 5h-5v5.25h-3V5m-2 11.5h-3v-4.75h3m0-1.5h-3V6.5h3m5 10h-3v-4.75h3m5-1.5h-3V6.5h3m0 10h-3v-4.75h3M12.5 0l4 2.5-4 2.5V3.25h-6v-1.5h6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DELETE_CELL_SHIFT_UP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DELETE_CELL_SHIFT_UP" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M5 2.5A1.5 1.5 0 0 1 6.5 1h10A1.5 1.5 0 0 1 18 2.5v13a1.5 1.5 0 0 1-1.5 1.5h-10A1.5 1.5 0 0 1 5 15.5v-5h5.25v-3H5m11.5-2v-3h-4.75v3m-1.5 0v-3H6.5v3m10 5v-3h-4.75v3m-1.5 5v-3H6.5v3m10 0v-3h-4.75v3M0 10l2.5-4L5 10H3.25v6h-1.5v-6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DELETE_CELL_SHIFT_LEFT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DELETE_CELL_SHIFT_LEFT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2.5 5A1.5 1.5 0 0 0 1 6.5v10A1.5 1.5 0 0 0 2.5 18h13a1.5 1.5 0 0 0 1.5-1.5v-10A1.5 1.5 0 0 0 15.5 5h-5v5.25h-3V5m-2 11.5h-3v-4.75h3m0-1.5h-3V6.5h3m5 10h-3v-4.75h3m5-1.5h-3V6.5h3m0 10h-3v-4.75h3M10 0 6 2.5 10 5V3.25h6v-1.5h-6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_CHART", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_CHART" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-bar-chart"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_IMAGE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_IMAGE" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-file-image-o"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_LINK", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_LINK" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-link"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_CHECKBOX", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_CHECKBOX" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-check-square-o"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_DROPDOWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_DROPDOWN" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M6 3.5a5 5.5 0 0 0 0 11h6a5 5.5 0 0 0 0-11H6V5h6a3.5 4 0 0 1 0 8H6a3.5 4 0 0 1 0-8m5 6 3-3H8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_SHEET", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_SHEET" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M17.5 5.5V16a1.5 1.5 0 0 1-1.5 1.5H2A1.5 1.5 0 0 1 .5 16V2A1.5 1.5 0 0 1 2 .5h10.5M2 5.5h3.5V2H2m5.25 3.5h3.5V2h-3.5M2 10.75h3.5v-3.5H2m5.25 3.5h3.5v-3.5h-3.5m5.25 3.5H16v-3.5h-3.5M2 16h3.5v-3.5H2M7.25 16h3.5v-3.5h-3.5M12.5 16H16v-3.5h-3.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PAINT_FORMAT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PAINT_FORMAT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9,0 L1,0 C0.45,0 0,0.45 0,1 L0,4 C0,4.55 0.45,5 1,5 L9,5 C9.55,5 10,4.55 10,4 L10,3 L11,3 L11,6 L4,6 L4,14 L6,14 L6,8 L13,8 L13,2 L10,2 L10,1 C10,0.45 9.55,0 9,0 Z" transform="translate(3 2)"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CONDITIONAL_FORMAT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CONDITIONAL_FORMAT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M12.25.5c2 0 3.5 1.5 3.5 3.5v6.5c0 .5 0 2-2 2h-2.5v4c0 .5-.5 1-1 1h-2.5c-.5 0-1-.5-1-1v-4h-2.5c-1 0-2-1-2-2V.5m12 3a1.5 1.5 0 0 0-1.5-1.5h-3v2h-1.5V2h-1v4h-2V2h-1.5v8.5h10.5m-12-3h12.5V9H2.25"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CLEAR_FORMAT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CLEAR_FORMAT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2.12 4.05 7.28 9.2l-2.43 5.3h2.5l1.64-3.58 4.59 4.58 1.27-1.27L3.4 2.77 2.12 4.05ZM5.67 2.5l2 2h1.76l-.55 1.21 1.71 1.71 1.34-2.92h3.92v-2H5.67"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BOLD", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BOLD" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M13.5 6.5C13.5 4.57 11.93 3 10 3H4.5v12h6.25c1.79 0 3.25-1.46 3.25-3.25 0-1.3-.77-2.41-1.87-2.93.83-.58 1.37-1.44 1.37-2.32M9.5 5c.83 0 1.5.67 1.5 1.5S10.33 8 9.5 8h-2V5h2m-2 8v-3H10c.83 0 1.5.67 1.5 1.5S10.83 13 10 13H7.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ITALIC", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ITALIC" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M7 3v2h2.58l-3.66 8H3v2h8v-2H8.42l3.66-8H15V3"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNDERLINE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNDERLINE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9 15c2.76 0 5-2.24 5-5V3h-2v7c0 1.75-1.5 3-3 3s-3-1.242-3-3V3H4v7c0 2.76 2.24 5 5 5Zm-6 1v2h12v-2H3"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.STRIKE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.STRIKE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M4.89 6.06c0-.46.1-.87.3-1.25.2-.38.46-.7.84-.97s.78-.47 1.28-.62A5.71 5.71 0 0 1 8.93 3c.61 0 1.16.08 1.65.25.5.17.92.4 1.27.7.35.3.62.66.81 1.07.19.41.28.87.28 1.36h-2.26a1.85 1.85 0 0 0-.11-.64 1.26 1.26 0 0 0-.33-.51 1.53 1.53 0 0 0-.56-.33A2.42 2.42 0 0 0 8.89 4.8c-.3 0-.55.03-.77.1a1.52 1.52 0 0 0-.54.27 1.14 1.14 0 0 0-.43.9c0 .36.18.66.55.91l.06.04C8.02 7.19 8.5 7.5 9 8H6s-.79-.62-.82-.69c-.19-.36-.29-.77-.29-1.25M16 9H2v2h7.22c.14.05.3.1.41.15.28.12.5.26.65.38.16.13.26.27.32.42.06.15.08.33.08.51 0 .18-.03.34-.1.49a1.02 1.02 0 0 1-.31.39 1.6 1.6 0 0 1-.53.26 2.71 2.71 0 0 1-.76.09c-.33 0-.62-.03-.89-.1a1.8 1.8 0 0 1-.68-.31 1.45 1.45 0 0 1-.44-.56c-.11-.23-.19-.57-.19-.74H4.55c0 .25.06.69.18 1.02a3.15 3.15 0 0 0 1.22 1.6c.28.2.58.36.92.49.33.13.67.23 1.04.29.36.06.72.09 1.08.09.6 0 1.15-.07 1.64-.21a3.88 3.88 0 0 0 1.25-.59 2.69 2.69 0 0 0 .8-.95c.19-.38.28-.81.28-1.29 0-.45-.08-.86-.23-1.211a2.26 2.26 0 0 0-.13-.25L16 11V9"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.TEXT_COLOR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.TEXT_COLOR" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M10 1H8L3.5 13h2l1.12-3h4.75l1.12 3h2L10 1ZM7.38 8 9 3.67 10.62 8H7.38"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FILL_COLOR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FILL_COLOR" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M14.5 8.87S13 10.49 13 11.49c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5c0-.99-1.5-2.62-1.5-2.62m-1.79-2.08L5.91 0 4.85 1.06l1.59 1.59-4.15 4.14a.996.996 0 0 0 0 1.41l4.5 4.5c.2.2.45.3.71.3.26 0 .51-.1.71-.29l4.5-4.5c.39-.39.39-1.03 0-1.42M4.21 7 7.5 3.71 10.79 7H4.21"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.MERGE_CELL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.MERGE_CELL" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M3 6H1V2h7v2H3v2m7-2V2h7v4h-2V4h-5m0 10h5v-2h2v4h-7v-2m-9-2h2v2h5v2H1v-4m0-4h4V6l3 3-3 3v-2H1V8m9 1 3-3v2h4v2h-4v2l-3-3"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_LEFT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_LEFT" xml:space="preserve">
    <svg class="o-icon align-left">
      <path fill="currentColor" d="M2 16h10v-2H2v2M12 6H2v2h10V6M2 2v2h14V2H2m0 10h14v-2H2v2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_CENTER", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_CENTER" xml:space="preserve">
    <svg class="o-icon align-center">
      <path fill="currentColor" d="M4 14v2h10v-2H4m0-8v2h10V6H4m-2 6h14v-2H2v2M2 2v2h14V2H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.IRREGULARITY_MAP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.IRREGULARITY_MAP" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-align-center fa-rotate-270"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_RIGHT" xml:space="preserve">
    <svg class="o-icon align-right">
      <path fill="currentColor" d="M6 16h10v-2H6v2m-4-4h14v-2H2v2M2 2v2h14V2H2m4 6h10V6H6v2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_TOP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_TOP" xml:space="preserve">
    <svg class="o-icon align-top">
      <path d="M3 2h12v2H3m2.5 5H8v7h2V9h2.5L9 5.5" fill="currentColor"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_MIDDLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_MIDDLE" xml:space="preserve">
    <svg class="o-icon align-middle">
      <path d="M12.5 3H10V0H8v3H5.5L9 6.5M5.5 15H8v3h2v-3h2.5L9 11.5M3 8v2h12V8" fill="currentColor"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ALIGN_BOTTOM", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ALIGN_BOTTOM" xml:space="preserve">
    <svg class="o-icon align-bottom">
      <path d="M5.5 9H8V2h2v7h2.5L9 12.5M3 14v2h12v-2" fill="currentColor"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.WRAPPING_OVERFLOW", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.WRAPPING_OVERFLOW" xml:space="preserve">
    <svg class="o-icon wrapping-overflow">
      <path d="M13 8H6v2h7v2l3-3-3-3M2 2h2v14H2M9 2h2v4H9m0 6h2v4H9" fill="currentColor"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.WRAPPING_WRAP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.WRAPPING_WRAP" xml:space="preserve">
    <svg class="o-icon wrapping-wrap">
      <path fill="currentColor" d="M6 5v2h3.75c.75 0 1.5.67 1.5 1.5 0 .75-.75 1.5-1.5 1.5H8V8l-3 3 3 3v-2h1.5c2 0 3.5-1.5 3.5-3.5S11.5 5 9.5 5M2 2h2v14H2M14 2M14,2,h2v14h-2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.WRAPPING_CLIP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.WRAPPING_CLIP" xml:space="preserve">
    <svg class="o-icon wrapping-clip">
      <path fill="currentColor" d="M2 2h2v14H2M14 2h2v14h-2v-6H6V8h8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDERS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDERS" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M2 2v14h14V2H2m6 12H4v-4h4v4m0-6H4V4h4v4m6 6h-4v-4h4v4m0-6h-4V4h4v4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_HV", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_HV" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M2 16h2v-2H2v2M4 5H2v2h2V5m1 11h2v-2H5v2m8-14h-2v2h2V2M4 2H2v2h2V2m3 0H5v2h2V2M2 13h2v-2H2v2m9 3h2v-2h-2v2m3-14v2h2V2h-2m0 5h2V5h-2v2m0 9h2v-2h-2v2m0-3h2v-2h-2v2" opacity=".54"/>
      <path d="M10 2H8v6H2v2h6v6h2v-6h6V8h-6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_H", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_H" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M8 16h2v-2H8v2M5 4h2V2H5v2m3 9h2v-2H8v2m-3 3h2v-2H5v2M2 7h2V5H2v2m0 9h2v-2H2v2M2 4h2V2H2v2m0 9h2v-2H2v2m12 0h2v-2h-2v2m0 3h2v-2h-2v2m0-9h2V5h-2v2m0-5v2h2V2h-2M8 4h2V2H8v2m3 0h2V2h-2v2M8 7h2V5H8v2m3 9h2v-2h-2v2" opacity=".54"/>
      <path d="M2 10h14V8H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_V", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_V" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M5 16h2v-2H5v2M2 7h2V5H2v2m0-3h2V2H2v2m3 6h2V8H5v2m0-6h2V2H5v2M2 16h2v-2H2v2m0-6h2V8H2v2m0 3h2v-2H2v2M14 2v2h2V2h-2m0 8h2V8h-2v2m0 6h2v-2h-2v2m0-9h2V5h-2v2m0 6h2v-2h-2v2m-3 3h2v-2h-2v2m0-6h2V8h-2v2m0-6h2V2h-2v2" opacity=".54"/>
      <path d="M8 16h2V2H8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_EXTERNAL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_EXTERNAL" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M10 5H8v2h2V5m3 3h-2v2h2V8m-3 0H8v2h2V8m0 3H8v2h2v-2M7 8H5v2h2V8" opacity=".54"/>
      <path d="M2 2h14v14H2V2m12 12V4H4v10h10"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_LEFT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_LEFT" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M8 10h2V8H8v2m0-3h2V5H8v2m0 6h2v-2H8v2m0 3h2v-2H8v2m-3 0h2v-2H5v2M5 4h2V2H5v2m0 6h2V8H5v2m9 6h2v-2h-2v2m0-6h2V8h-2v2m0 3h2v-2h-2v2m0-6h2V5h-2v2M8 4h2V2H8v2m6-2v2h2V2h-2m-3 14h2v-2h-2v2m0-6h2V8h-2v2m0-6h2V2h-2v2" opacity=".54"/>
      <path d="M2 16h2V2H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_TOP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_TOP" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M5 10h2V8H5v2m-3 6h2v-2H2v2m6 0h2v-2H8v2m0-3h2v-2H8v2m-3 3h2v-2H5v2m-3-3h2v-2H2v2m6-3h2V8H8v2M2 7h2V5H2v2m0 3h2V8H2v2m12 0h2V8h-2v2m0 3h2v-2h-2v2m0-6h2V5h-2v2M8 7h2V5H8v2m3 9h2v-2h-2v2m0-6h2V8h-2v2m3 6h2v-2h-2v2" opacity=".54"/>
      <path d="M2 2v2h14V2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_RIGHT" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M2 4h2V2H2v2m3 0h2V2H5v2m0 6h2V8H5v2m0 6h2v-2H5v2M2 7h2V5H2v2m0 3h2V8H2v2m0 6h2v-2H2v2m0-3h2v-2H2v2m9-3h2V8h-2v2m-3 6h2v-2H8v2m3 0h2v-2h-2v2M8 4h2V2H8v2m3 0h2V2h-2v2m-3 9h2v-2H8v2m0-6h2V5H8v2m0 3h2V8H8v2" opacity=".54"/>
      <path d="M14 2v14h2V2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_BOTTOM", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_BOTTOM" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M7 2H5v2h2V2m3 6H8v2h2V8m0 3H8v2h2v-2m3-3h-2v2h2V8M7 8H5v2h2V8m6-6h-2v2h2V2m-3 3H8v2h2V5m0-3H8v2h2V2m-6 9H2v2h2v-2m10 2h2v-2h-2v2m0-6h2V5h-2v2m0 3h2V8h-2v2m0-8v2h2V2h-2M4 2H2v2h2V2m0 3H2v2h2V5m0 3H2v2h2V8" opacity=".54"/>
      <path d="M2 16h14v-2H2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_CLEAR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_CLEAR" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M8 16h2v-2H8v2m-3-6h2V8H5v2m0-6h2V2H5v2m3 9h2v-2H8v2m-3 3h2v-2H5v2M2 7h2V5H2v2m0 9h2v-2H2v2M2 4h2V2H2v2m0 6h2V8H2v2m6 0h2V8H8v2m-6 3h2v-2H2v2m12 0h2v-2h-2v2m0 3h2v-2h-2v2m0-6h2V8h-2v2m0-3h2V5h-2v2m0-5v2h2V2h-2M8 4h2V2H8v2m3 0h2V2h-2v2M8 7h2V5H8v2m3 9h2v-2h-2v2m0-6h2V8h-2v2" opacity=".54"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_TYPE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_TYPE" xml:space="preserve">
    <svg class="o-icon">
      <g fill="currentColor" transform="translate(2 2)">
        <polygon points="0 0 0 2 14 2 14 0"/>
        <polygon points="0 6 0 8 5 8 5 6"/>
        <polygon points="9 6 9 8 14 8 14 6"/>
        <polygon points="0 12 0 14 2 14 2 12"/>
        <polygon points="4 12 4 14 6 14 6 12"/>
        <polygon points="8 12 8 14 10 14 10 12"/>
        <polygon points="12 12 12 14 14 14 14 12"/>
      </g>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_COLOR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_COLOR" xml:space="preserve">
    <svg class="o-icon">
      <g fill="currentColor" transform="translate(4 2)">
        <polygon points="0 12 0 9 7 2 10 5 3 12"/>
        <polygon points="8 1 9 0 12 3 11 4"/>
      </g>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.BORDER_NO_COLOR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.BORDER_NO_COLOR" xml:space="preserve">
    <svg class="o-icon">
      <g fill="currentColor">
        <polygon points="4 12 4 9 11 2 14 5 7 12"/>
        <polygon points="12 1 13 0 16 3 15 4"/>
      </g>
      <g>
        <rect x="0" y="14" width="18" height="4" stroke="black" fill="none"/>
      </g>
    </svg>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.PLUS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PLUS" xml:space="preserve">
    <svg class="o-icon plus" viewBox="0 0 18 18">
      <path fill="currentColor" d="M8 0h2v8h8v2h-8v8H8v-8H0V8h8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.MINUS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.MINUS" xml:space="preserve">
    <svg class="o-icon minus" viewBox="0 0 18 18">
      <path fill="currentColor" d="M0 8h18v2H0z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.LIST", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.LIST" xml:space="preserve">
    <svg class="o-icon" viewBox="0 0 384 384">
      <rect x="0" y="277.333" width="384" height="42.667" fill="currentColor"/>
      <rect x="0" y="170.667" width="384" height="42.667" fill="currentColor"/>
      <rect x="0" y="64" width="384" height="42.667" fill="currentColor"/>
    </svg>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.EDIT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.EDIT" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-pencil-square-o"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNLINK", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNLINK" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-chain-broken"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CARET_UP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CARET_UP" xml:space="preserve">
    <div class="o-icon fa-small">
      <i class="fa fa-caret-up"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CARET_DOWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CARET_DOWN" xml:space="preserve">
    <div class="o-icon fa-small">
      <i class="fa fa-caret-down"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CARET_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CARET_RIGHT" xml:space="preserve">
    <div class="o-icon fa-small">
      <i class="fa fa-caret-right"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CARET_LEFT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CARET_LEFT" xml:space="preserve">
    <div class="o-icon fa-small">
      <i class="fa fa-caret-left"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.TRASH", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.TRASH" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-trash-o"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.TRASH_FILLED", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.TRASH_FILLED" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-trash"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.REFRESH", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.REFRESH" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-refresh"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.EXCHANGE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.EXCHANGE" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-exchange"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ARROW_DOWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ARROW_DOWN" xml:space="preserve">
    <svg class="o-icon arrow-down" viewBox="0 0 448 512">
      <path fill="currentColor" d="M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ARROW_UP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ARROW_UP" xml:space="preserve">
    <svg class="o-icon arrow-up" width="10" height="10" focusable="false" viewBox="0 0 448 512">
      <path fill="currentColor" d="M34.9 289.5l-22.2-22.2c-9.4-9.4-9.4-24.6 0-33.9L207 39c9.4-9.4 24.6-9.4 33.9 0l194.3 194.3c9.4 9.4 9.4 24.6 0 33.9L413 289.4c-9.5 9.5-25 9.3-34.3-.4L264 168.6V456c0 13.3-10.7 24-24 24h-32c-13.3 0-24-10.7-24-24V168.6L69.2 289.1c-9.3 9.8-24.8 10-34.3.4z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ARROW_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ARROW_RIGHT" xml:space="preserve">
    <svg class="o-icon arrow-right" width="10" height="10" focusable="false" viewBox="0 0 448 512">
      <path fill="#F0AD4E" d="M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z"/>
    </svg>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.SMILE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SMILE" xml:space="preserve">
    <svg class="o-icon smile" width="10" height="10" focusable="false" viewBox="0 0 496 512">
      <path fill="#6AA84F" d="M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160 0c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm4 72.6c-20.8 25-51.5 39.4-84 39.4s-63.2-14.3-84-39.4c-8.5-10.2-23.7-11.5-33.8-3.1-10.2 8.5-11.5 23.6-3.1 33.8 30 36 74.1 56.6 120.9 56.6s90.9-20.6 120.9-56.6c8.5-10.2 7.1-25.3-3.1-33.8-10.1-8.4-25.3-7.1-33.8 3.1z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.MEH", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.MEH" xml:space="preserve">
    <svg class="o-icon meh" width="10" height="10" focusable="false" viewBox="0 0 496 512">
      <path fill="#F0AD4E" d="M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm8 144H160c-13.2 0-24 10.8-24 24s10.8 24 24 24h176c13.2 0 24-10.8 24-24s-10.8-24-24-24z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FROWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FROWN" xml:space="preserve">
    <svg class="o-icon frown" width="10" height="10" focusable="false" viewBox="0 0 496 512">
      <path fill="#E06666" d="M248 8C111 8 0 119 0 256s111 248 248 248 248-111 248-248S385 8 248 8zm0 448c-110.3 0-200-89.7-200-200S137.7 56 248 56s200 89.7 200 200-89.7 200-200 200zm-80-216c17.7 0 32-14.3 32-32s-14.3-32-32-32-32 14.3-32 32 14.3 32 32 32zm160-64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-80 128c-40.2 0-78 17.7-103.8 48.6-8.5 10.2-7.1 25.3 3.1 33.8 10.2 8.4 25.3 7.1 33.8-3.1 16.6-19.9 41-31.4 66.9-31.4s50.3 11.4 66.9 31.4c8.1 9.7 23.1 11.9 33.8 3.1 10.2-8.5 11.5-23.6 3.1-33.8C326 321.7 288.2 304 248 304z"/>
    </svg>
  </t>

  `);
registerTemplate("o-spreadsheet-Icon.GREEN_DOT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.GREEN_DOT" xml:space="preserve">
    <svg class="o-icon green-dot" width="10" height="10" focusable="false" viewBox="0 0 512 512">
      <path fill="#6AA84F" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.YELLOW_DOT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.YELLOW_DOT" xml:space="preserve">
    <svg class="o-icon yellow-dot" width="10" height="10" focusable="false" viewBox="0 0 512 512">
      <path fill="#F0AD4E" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.RED_DOT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.RED_DOT" xml:space="preserve">
    <svg class="o-icon red-dot" width="10" height="10" focusable="false" viewBox="0 0 512 512">
      <path fill="#E06666" d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SMALL_DOT_RIGHT_ALIGN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SMALL_DOT_RIGHT_ALIGN" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" style="color: currentcolor;" width="10" height="10" viewBox="0 0 18 18">
      <circle fill="currentColor" cx="14" cy="9" r="4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SORT_RANGE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SORT_RANGE" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9 3.5h8v2H9M9 8h6v2H9m0 2.5h3v2H9M6 6l1-1-3-3-3 3 1 1 1-1v8l-1-1-1 1 3 3 3-3-1-1-1 1V5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SORT_ASCENDING", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SORT_ASCENDING" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-sort-alpha-asc"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SORT_DESCENDING", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SORT_DESCENDING" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-sort-alpha-desc"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DATA_CLEANUP", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DATA_CLEANUP" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-magic"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FILTER_ICON", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FILTER_ICON" xml:space="preserve">
    <svg class="o-icon filter-icon" viewBox="0 0 850 850">
      <path fill="currentColor" d="M 339.667 681 L 510.333 681 L 510.333 595.667 L 339.667 595.667 L 339.667 681 Z M 41 169 L 41 254.333 L 809 254.333 L 809 169 L 41 169 Z M 169 467.667 L 681 467.667 L 681 382.333 L 169 382.333 L 169 467.667 Z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FILTER_ICON_ACTIVE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FILTER_ICON_ACTIVE" xml:space="preserve">
    <div class="o-icon filter-icon-active">
      <i class="fa fa-filter"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SEARCH", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SEARCH" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-search"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CHECK", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CHECK" xml:space="preserve">
    <svg class="o-icon" viewBox="0 0 24 24">
      <path fill="currentColor" d="M18.707 7.293a1 1 0 0 1 0 1.414L11.414 16a1.8 2 0 0 1-2.828 0l-3.293-3.293a1 1 0 1 1 1.414-1.414L10 14.586l7.293-7.293a1 1 0 0 1 1.414 0z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PERCENT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PERCENT" xml:space="preserve">
    <span class="o-text-icon">%</span>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DECRASE_DECIMAL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DECRASE_DECIMAL" xml:space="preserve">
    <span class="o-text-icon">.0</span>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INCREASE_DECIMAL", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INCREASE_DECIMAL" xml:space="preserve">
    <span class="o-text-icon">.00</span>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.NUMBER_FORMATS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.NUMBER_FORMATS" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <path d="M0 6h2v8h2V4H0m9 0H5v2h4v2H6.5A1.5 1.5 0 0 0 5 9.5V14h6v-2H7v-2h2.5A1.5 1.5 0 0 0 11 8.5v-3A1.5 1.5 0 0 0 9.5 4M12 4v2h4v2h-2v2h2v2h-4v2h4.5a1.5 1.5 0 0 0 1.5-1.5v-2A1.5 1.5 0 0 0 16.5 9 1.5 1.5 0 0 0 18 7.5v-2A1.5 1.5 0 0 0 16.5 4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.FONT_SIZE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.FONT_SIZE" xml:space="preserve">
    <svg class="o-icon" fill="currentColor">
      <text x="2" y="15" class="small-text">A</text>
      <text x="6" y="15" class="heavy-text">A</text>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.TRIANGLE_EXCLAMATION", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.TRIANGLE_EXCLAMATION" xml:space="preserve">
    <div class="o-icon fa-small">
      <i class="fa fa-exclamation-triangle"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SPLIT_TEXT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SPLIT_TEXT" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M14 6v2h-4v2h4v2l3-3m-9 1V8H4V6L1 9l3 3v-2m3.5-6.5h3V7H12V3.5h3V2H3v1.5h3V7h1.5m3 7.5h-3V11H6v3.5H3V16h12v-1.5h-3V11h-1.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ERROR", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ERROR" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-exclamation-circle"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DISPLAY_HEADER", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DISPLAY_HEADER" xml:space="preserve">
    <svg class="o-icon" width="18" height="18">
      <path fill="currentColor" d="M.75.5h16.5v17H.75m1.5-12H.75V7h1.5v1.5H.75V10h1.5v1.5H.75V13h1.5v1.5H.75V16h1.5v1.5h1.5V16h1.5v1.5h1.5V16h1.5v1.5h1.5V16h1.5v1.5h1.5V16h1.5v1.5h1.5V16h1.5v-1.5h-1.5V13h1.5v-1.5h-1.5V10h1.5V8.5h-1.5V7h1.5V5.5M2.75 2.25v1.5h2v-1.5m2.5 0v1.5h7v-1.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.COG", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.COG" xml:space="preserve">
    <svg fill="currentColor" viewBox="0 0 16 16">
      <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
      <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PLUS_IN_BOX", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PLUS_IN_BOX" xml:space="preserve">
    <svg class="o-icon" width="18" height="18" style="fill:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5">
      <path stroke="currentColor" d="M1.5,1.5h15v15h-15v-15M9,5v8M5,9h8"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.GROUP_ROWS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.GROUP_ROWS" xml:space="preserve">
    <svg class="o-icon" width="18" height="18">
      <path fill="currentColor" d="M6 2.5A1.5 1.5 0 0 1 7.5 1H16a1.5 1.5 0 0 1 1.5 1.5V15a1.5 1.5 0 0 1-1.5 1.5H7.5A1.5 1.5 0 0 1 6 15M7.5 2.5v2H16v-2M7.5 6v2H16V6M7.5 9.5v2H16v-2M7.5 13v2H16v-2M2 5.75V13h3v-1.5H3.5V5.75h1.25V3l-1 1v.75H3M.25 1.25v4.5h4.5v-4.5m-3.5 1h2.5v2.5h-2.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNGROUP_ROWS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNGROUP_ROWS" xml:space="preserve">
    <svg class="o-icon" width="18" height="18">
      <path fill="currentColor" d="M6 2.5A1.5 1.5 0 0 1 7.5 1H16a1.5 1.5 0 0 1 1.5 1.5V15a1.5 1.5 0 0 1-1.5 1.5H7.5A1.5 1.5 0 0 1 6 15M7.5 2.5v2H16v-2M7.5 6v2H16V6M7.5 9.5v2H16v-2M7.5 13v2H16v-2M2 5.75V13h3v-1.5H3.5V5.75M0 5.25.75 6l2-2 2 2 .75-.75-2-2 2-2L4.75.5l-2 2-2-2-.75.75 2 2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.GROUP_COLUMNS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.GROUP_COLUMNS" xml:space="preserve">
    <svg class="o-icon" width="18" height="18">
      <path fill="currentColor" d="M2.75 6a1.5 1.5 0 0 0-1.5 1.5V16a1.5 1.5 0 0 0 1.5 1.5h12.5a1.5 1.5 0 0 0 1.5-1.5V7.5a1.5 1.5 0 0 0-1.5-1.5M2.75 7.5h2V16h-2m3.5-8.5h2V16h-2m3.5-8.5h2V16h-2m3.5-8.5h2V16h-2M6 2h7.25v3h-1.5V3.5H6v1.25H3.25l1-1H5V3M1.5.25H6v4.5H1.5m1-3.5v2.5H5v-2.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNGROUP_COLUMNS", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNGROUP_COLUMNS" xml:space="preserve">
    <svg class="o-icon" width="18" height="18">
      <path fill="currentColor" d="M2.75 6a1.5 1.5 0 0 0-1.5 1.5V16a1.5 1.5 0 0 0 1.5 1.5h12.5a1.5 1.5 0 0 0 1.5-1.5V7.5a1.5 1.5 0 0 0-1.5-1.5M2.75 7.5h2V16h-2m3.5-8.5h2V16h-2m3.5-8.5h2V16h-2m3.5-8.5h2V16h-2M6 2h7.25v3h-1.5V3.5H6M5.5 0l.75.75-2 2 2 2-.75.75-2-2-2 2-.75-.75 2-2-2-2L1.5 0l2 2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DATA_VALIDATION", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DATA_VALIDATION" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M.5 2A1.5 1.5 0 0 1 2 .5h14A1.5 1.5 0 0 1 17.5 2v7H11V7H7v4s-.5 0-1.5 1h-1v5h-3a1.5 1.5 0 0 1-1-1M6 6V2H2v4m9 0V2H7v4m9 0V2h-4v4m-6 5V7H2v4m14-2V7h-4v2m-7.5 6.5V12H2v3.5"/>
      <path stroke="currentColor" style="fill:none; stroke-linecap:round; stroke-width:1.5" d="M8,13 l3 3 l6 -5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.THIN_DRAG_HANDLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.THIN_DRAG_HANDLE" xml:space="preserve">
    <svg class="o-icon" viewBox="0 0 4 16" fill="currentColor">
      <circle cx="2" cy="3.5" r="1"/>
      <circle cx="2" cy="6.5" r="1"/>
      <circle cx="2" cy="9.5" r="1"/>
      <circle cx="2" cy="12.5" r="1"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.SHORT_THIN_DRAG_HANDLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.SHORT_THIN_DRAG_HANDLE" xml:space="preserve">
    <svg class="o-icon" viewBox="0 0 4 12" fill="currentColor">
      <circle cx="2" cy="3.5" r="1"/>
      <circle cx="2" cy="6.5" r="1"/>
      <circle cx="2" cy="9.5" r="1"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.EDIT_TABLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.EDIT_TABLE" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18">
      <path fill="currentColor" d="M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15H7l1.5-1.5H7v-2.75h3.5v.75l2.25-2.25H12v-2.5h3.5v.75c.1-.2.45-.05.5.02l1 1V2.5A1.5 1.5 0 0 0 15.5 1m-13 1.5h13v2.75h-13m0 1.5h3v2.5h-3M7 6.75h3.5v2.5H7m-4.5 1.5h3v2.75h-3 M8.2 15.7v1.8h1.8l5.4-5.4-1.8-1.8-5.4 5.4Zm8.8-5.2a.5.5 0 0 0 0-.7l-1.1-1.1a.5.5 0 0 0-.7 0l-.9.9 1.8 1.8.9-.9Z"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DELETE_TABLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DELETE_TABLE" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18">
      <path fill="currentColor" d="M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15H7l1.5-1.5H7V6.75h3.5v.75L12 9V6.75h3.5l1.5 1.5V2.5A1.5 1.5 0 0 0 15.5 1m-13 1.5h13v2.75h-13m0 1.5h3v2.5h-3m0 1.5h3v2.75h-3m10-2.25 3-3 1.5 1.5-3 3 3 3-1.5 1.5-3-3-3 3-1.5-1.5 3-3-3-3 1.5-1.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PAINT_TABLE", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PAINT_TABLE" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18">
      <path fill="currentColor" d="M2.5 1A1.5 1.5 0 0 0 1 2.5v11A1.5 1.5 0 0 0 2.5 15h5c0-.5 0-1 .5-1.5H7v-2.75h3.5v.75l2.25-2.25H12v-2.5h3.5v.75c1-.7 1.5-.4 1.5-.4V2.5A1.5 1.5 0 0 0 15.5 1m-13 1.5h13v2.75h-13m0 1.5h3v2.5h-3M7 6.75h3.5v2.5H7m-4.5 1.5h3v2.75h-3m7.5-.3c.7-.3 1.5-.1 2.1.6.6.7.8 1.4.5 1.9-.6 1.4-3.7 1.6-4 1.7l-.6.1.3-.5s.5-.8.5-2.1c0-.7.5-1.4 1.1-1.7Zm6.7-5.1a.9.9 0 0 1 1 1c-.1 1.3-2.5 3.7-4.3 5.3a3.9 3.9 0 0 0-.6-1.1c-.4-.4-.8-.7-1.3-.8 1.5-1.7 4-4.3 5.4-4.4"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.CIRCLE_INFO", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.CIRCLE_INFO" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 18 18">
      <path fill="currentColor" d="M9 .55a8.4 8.4 0 1 0 8.4 8.4A8.4 8.4 0 0 0 9 .55M7.6 4.155a1.4 1.4 0 1 1 1.4 1.4 1.4 1.4 0 0 1-1.4-1.4m4.9 8.995a.7.7 0 0 1-.7.7H6.9a.7.7 0 1 1 0-1.4h1.4v-4.2h-.7a.7.7 0 0 1 0-1.4h2.8v5.6h1.4a.7.7 0 0 1 .7.7"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.PIVOT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.PIVOT" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 18 18">
      <path fill="currentColor" d="M17 2v14H1V6h4V2h12m-1 1H6v3h10M2 7v2h3V7m-3 3v2h3v-2m-3 3v2h3v-2m1-6v2h6V7m-6 3v2h6v-2m-6 3v2h6v-2m1-6v2h3V7m-3 3v2h3v-2m-3 3v2h3v-2"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.UNUSED_PIVOT_WARNING", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.UNUSED_PIVOT_WARNING" xml:space="preserve">
    <div class="o-unused-pivot-icon text-warning" title="This pivot is not used">
      <t t-call="o-spreadsheet-Icon.TRIANGLE_EXCLAMATION"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.ANGLE_DOWN", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.ANGLE_DOWN" xml:space="preserve">
    <div class="o-icon">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 224 256">
        <path d="M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z" transform="translate(0, 9) scale(0.5,0.5)"/>
      </svg>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.INSERT_PIVOT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.INSERT_PIVOT" xml:space="preserve">
    <svg class="o-icon">
      <defs>
        <mask id="a">
          <path fill="#fff" d="M0 0h18v18H0z"/>
          <path d="M18 26a3.5 3 0 0 1 0-18"/>
        </mask>
      </defs>
      <path fill="currentColor" d="M17 2v14H1V6h4V2h12m-1 1H6v3h10M2 7v2h3V7m-3 3v2h3v-2m-3 3v2h3v-2m1-6v2h6V7m-6 3v2h6v-2m-6 3v2h6v-2m1-6v2h3V7m-3 3v2h3v-2m-3 3v2h3v-2" mask="url(#a)"/>
      <path fill="currentColor" d="M13 13v-3a.75.5 0 0 1 1.5 0v3h3a.5.75 0 0 1 0 1.5h-3v3a.75.5 0 0 1-1.5 0v-3h-3a.5.75 0 0 1 0-1.5"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.MOVE_SHEET_LEFT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.MOVE_SHEET_LEFT" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 18 18">
      <path fill="currentColor" d="M16 2.5 V15.5 a1.5,1.5 0 1 1 -3 0 V2.5 a1.5 1.5 0 1 1 3 0 M12 10 H5 v2 l-3 -3 3 -3 v2 H12"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.MOVE_SHEET_RIGHT", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.MOVE_SHEET_RIGHT" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 18 18">
      <path fill="currentColor" d="M5 2.5 V15.5 a1.5,1.5 0 1 1 -3 0 V2.5 a1.5 1.5 0 1 1 3 0 M6 10 H13 v2 l3 -3 -3 -3 v2 H6"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.RENAME_SHEET", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.RENAME_SHEET" xml:space="preserve">
    <svg xmlns="http://www.w3.org/2000/svg" class="o-icon" viewBox="0 0 18 18">
      <path fill="currentColor" d="         M 9 5 H3 a 1.5 1.5 0 0 0 -1.5 1.5 v5 a1.5 1.5 0 0 0 1.5 1.5 H9 v-1.5 H3.5 a.5 .5 0 0 1 -.5 -.5 v-4 a.5 .5 0 0 1 .5 -.5 H9         M 13 5 H15 a1.5 1.5 0 0 1 1.5 1.5 v5 a1.5 1.5 0 0 1 -1.5 1.5 H13 v-1.5 h1.5 a.5 .5 0 0 0 .5 -.5 v-4 a.5 .5 0 0 0 -.5 -.5 h-1.5         M 10.25 3 h-2 v-1.5 h5.5 v1.5 h-2 v12 h2 v1.5 h-5.5 v-1.5 h2       "/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.HIDE_SHEET", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.HIDE_SHEET" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-eye-slash"/>
    </div>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.DOWNLOAD", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Icon.DOWNLOAD" xml:space="preserve">
    <div class="o-icon">
      <i class="fa fa-download"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-IconPicker", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-IconPicker" xml:space="preserve">
    <div class="o-icon-picker">
      <t t-foreach="iconSets" t-as="iconSet" t-key="iconSet">
        <div class="o-cf-icon-line">
          <div class="o-icon-picker-item p-1" t-on-click="() =&gt; this.onIconClick(iconSets[iconSet].good)">
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].good].template}}"/>
          </div>
          <div class="o-icon-picker-item p-1" t-on-click="() =&gt; this.onIconClick(iconSets[iconSet].neutral)">
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].neutral].template}}"/>
          </div>
          <div class="o-icon-picker-item p-1" t-on-click="() =&gt; this.onIconClick(iconSets[iconSet].bad)">
            <t t-call="o-spreadsheet-Icon.{{icons[iconSets[iconSet].bad].template}}"/>
          </div>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Highlight", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Highlight" xml:space="preserve">
    <div class="o-highlight" t-ref="highlight">
      <t t-if="!env.isMobile()" t-foreach="['n', 's', 'w', 'e']" t-as="orientation" t-key="orientation">
        <Border onMoveHighlight.bind="this.onMoveHighlight" isMoving="highlightState.shiftingMode === &quot;isMoving&quot;" orientation="orientation" zone="props.range.zone"/>
      </t>
      <t t-foreach="cornerOrientations" t-as="orientation" t-key="orientation">
        <Corner onResizeHighlight.bind="onResizeHighlight" isResizing="highlightState.shiftingMode === &quot;isResizing&quot;" orientation="orientation" zone="props.range.zone" color="props.color"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Corner", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Corner" xml:space="preserve">
    <div class="o-corner d-flex justify-content-center align-items-center" t-on-pointerdown.prevent="onMouseDown" t-on-touchstart.prevent.stop="" t-att-style="handlerStyle">
      <div t-att-style="buttonLook" class="o-corner-button" t-att-class="{           'o-resizing': props.isResizing,           'o-corner-nw': props.orientation === 'nw',           'o-corner-ne': props.orientation === 'ne',           'o-corner-sw': props.orientation === 'sw',           'o-corner-se': props.orientation === 'se',         }"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Border", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Border" xml:space="preserve">
    <div class="o-border" t-on-pointerdown.prevent="onMouseDown" t-att-style="style" t-att-class="{           'o-moving': props.isMoving,           'o-border-n': props.orientation === 'n',           'o-border-s': props.orientation === 's',           'o-border-w': props.orientation === 'w',           'o-border-e': props.orientation === 'e',         }"/>
  </t>

  `);
registerTemplate("o-spreadsheet-UnhideRowHeaders", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-UnhideRowHeaders" xml:space="preserve">
    <t t-foreach="props.headersGroups" t-as="hiddenItem" t-key="hiddenItem_index">
      <t t-if="isVisible(hiddenItem[0]-1)">
        <div class="position-absolute w-100 pe-none" t-att-style="getUnhidePreviousButtonStyle(hiddenItem[0]-1)">
          <div class="o-unhide rounded end-0 position-absolute pe-auto" t-att-data-index="hiddenItem_index" t-attf-style="bottom: 2px;" t-att-data-direction="'up'" t-on-click="() =&gt; this.unhide(hiddenItem)">
            <t t-call="o-spreadsheet-Icon.CARET_UP"/>
          </div>
        </div>
      </t>
      <t t-if="isVisible(hiddenItem.at(-1)+1)">
        <div class="position-absolute w-100 pe-none" t-att-style="getUnhideNextButtonStyle(hiddenItem.at(-1)+1)">
          <div class="o-unhide rounded end-0 position-absolute pe-auto" t-att-data-index="hiddenItem_index" t-att-data-direction="'down'" t-attf-style="top: 1px;" t-on-click="() =&gt; this.unhide(hiddenItem)">
            <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
          </div>
        </div>
      </t>
    </t>
  </t>

  `);
registerTemplate("o-spreadsheet-UnhideColumnHeaders", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-UnhideColumnHeaders" xml:space="preserve">
    <t t-foreach="props.headersGroups" t-as="hiddenItem" t-key="hiddenItem_index">
      <t t-if="isVisible(hiddenItem[0]-1)">
        <div class="position-absolute d-flex align-items-center pe-none h-100" t-att-style="getUnhidePreviousButtonStyle(hiddenItem[0]-1)">
          <div class="o-unhide position-absolute rounded pe-auto" t-att-data-index="hiddenItem_index" t-att-data-direction="'left'" t-attf-style="right: 1px;" t-on-click="() =&gt; this.unhide(hiddenItem)">
            <t t-call="o-spreadsheet-Icon.CARET_LEFT"/>
          </div>
        </div>
      </t>
      <t t-if="isVisible(hiddenItem.at(-1)+1)">
        <div class="position-absolute d-flex align-items-center pe-none h-100" t-att-style="getUnhideNextButtonStyle(hiddenItem.at(-1)+1)">
          <div class="o-unhide position-absolute rounded pe-auto" t-att-data-index="hiddenItem_index" t-att-data-direction="'right'" t-attf-style="left: 1px;" t-on-click="() =&gt; this.unhide(hiddenItem)">
            <t t-call="o-spreadsheet-Icon.CARET_RIGHT"/>
          </div>
        </div>
      </t>
    </t>
  </t>

  `);
registerTemplate("o-spreadsheet-HeadersOverlay", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-HeadersOverlay" xml:space="preserve">
    <div class="o-overlay">
      <ColResizer onOpenContextMenu="props.onOpenContextMenu"/>
      <RowResizer onOpenContextMenu="props.onOpenContextMenu"/>
      <div class="all" t-on-pointerdown.self="selectAll"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-RowResizer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-RowResizer" xml:space="preserve">
    <div class="o-row-resizer" t-ref="rowResizer" t-on-pointermove.self="onMouseMove" t-on-mouseleave="onMouseLeave" t-on-pointerdown.self.prevent="select" t-on-click="onClick" t-on-pointerup.self="onMouseUp" t-on-contextmenu.self="onContextMenu" t-att-class="{'o-grab': state.waitingForMove, 'o-dragging': state.isMoving}">
      <div t-if="state.isMoving" class="dragging-row-line" t-attf-style="top:{{state.draggerLinePosition}}px;"/>
      <div t-if="state.isMoving" class="dragging-row-shadow" t-attf-style="top:{{state.draggerShadowPosition}}px; height:{{state.draggerShadowThickness}}px;"/>
      <t t-if="state.resizerIsActive">
        <div class="o-handle" t-on-pointerdown="onMouseDown" t-on-dblclick="onDblClick" t-on-contextmenu.prevent="" t-attf-style="top:{{state.draggerLinePosition - 2}}px;">
          <div class="dragging-resizer" t-if="state.isResizing"/>
        </div>
      </t>
      <t t-if="env.model.getters.getHiddenRowsGroups(sheetId).length">
        <t t-if="hasFrozenPane">
          <div class="position-relative pe-none overflow-hidden" t-att-style="frozenContainerStyle">
            <UnhideRowHeaders t-props="frozenUnhideHeadersProps"/>
          </div>
        </t>
        <div class="pe-none overflow-hidden flex-shrink-0 position-relative h-100">
          <UnhideRowHeaders t-props="mainUnhideHeadersProps"/>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ColResizer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColResizer" xml:space="preserve">
    <div class="o-col-resizer d-flex" t-ref="colResizer" t-on-pointermove.self="onMouseMove" t-on-mouseleave="onMouseLeave" t-on-pointerdown.self.prevent="select" t-on-click="onClick" t-on-pointerup.self="onMouseUp" t-on-contextmenu.self="onContextMenu" t-att-class="{'o-grab': state.waitingForMove, 'o-dragging': state.isMoving, }">
      <div t-if="state.isMoving" class="dragging-col-line" t-attf-style="left:{{state.draggerLinePosition}}px;"/>
      <div t-if="state.isMoving" class="dragging-col-shadow" t-attf-style="left:{{state.draggerShadowPosition}}px; width:{{state.draggerShadowThickness}}px"/>
      <t t-if="state.resizerIsActive">
        <div class="o-handle" t-on-pointerdown="onMouseDown" t-on-dblclick="onDblClick" t-on-contextmenu.prevent="" t-attf-style="left:{{state.draggerLinePosition - 2}}px;">
          <div class="dragging-resizer" t-if="state.isResizing"/>
        </div>
      </t>
      <t t-if="env.model.getters.getHiddenColsGroups(sheetId).length">
        <t t-if="hasFrozenPane">
          <div class="position-relative pe-none h-100 flex-shrink-0" t-att-style="frozenContainerStyle">
            <UnhideColumnHeaders t-props="frozenUnhideHeadersProps"/>
          </div>
        </t>
        <div class="pe-none overflow-hidden flex-shrink-0 position-relative w-100">
          <UnhideColumnHeaders t-props="mainUnhideHeadersProps"/>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-HeaderGroupContainer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-HeaderGroupContainer" xml:space="preserve">
    <div class="o-header-group-container d-flex w-100 h-100 overflow-hidden" t-att-class="{         'flex-column': props.dimension === 'ROW',         'flex-row': props.dimension === 'COL',       }" t-if="props.layers.length" t-on-contextmenu.prevent="onContextMenu">
      <div class="o-header-group-frozen-pane flex-shrink-0 overflow-hidden position-relative" t-att-class="{           'o-group-rows': props.dimension === 'ROW',           'o-group-columns': props.dimension === 'COL',         }" t-if="hasFrozenPane" t-att-style="frozenPaneContainerStyle">
        <t t-foreach="props.layers" t-as="layer" t-key="layer_index">
          <t t-foreach="layer" t-as="group" t-key="group.start + '-' + group.end">
            <t t-component="groupComponent" group=" group" layerOffset="getLayerOffset(layer_index)" openContextMenu.bind="openContextMenu"/>
          </t>
        </t>
      </div>
      <div class="o-header-group-frozen-pane-border" t-att-class="{           'o-group-rows': props.dimension === 'ROW',           'o-group-columns': props.dimension === 'COL',         }" t-if="hasFrozenPane"/>

      <div class="o-header-group-main-pane flex-shrink-0 position-relative h-100 w-100 overflow-hidden" t-att-class="{           'o-group-rows': hasFrozenPane and props.dimension === 'ROW',           'o-group-columns': hasFrozenPane and props.dimension === 'COL',         }">
        <div class="o-header-group-scroll-container position-relative" t-att-style="scrollContainerStyle">
          <t t-foreach="props.layers" t-as="layer" t-key="layer_index">
            <t t-foreach="layer" t-as="group" t-key="group.start + '-' + group.end">
              <t t-component="groupComponent" group="group" layerOffset="getLayerOffset(layer_index)" openContextMenu.bind="openContextMenu"/>
            </t>
          </t>
        </div>
      </div>

      <MenuPopover t-if="menu.isOpen" menuItems="menu.menuItems" anchorRect="menu.anchorRect" onClose.bind="this.closeMenu"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-HeaderGroup", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-HeaderGroup" xml:space="preserve">
    <div class="o-header-group position-absolute" t-att-style="groupBoxStyle" t-att-data-id="props.group.start + '-' + props.group.end" t-on-click="toggleGroup" t-on-contextmenu.stop.prevent="onContextMenu">
      <div class="o-header-group-header position-absolute d-flex align-items-center justify-content-center overflow-hidden" t-att-style="groupHeaderStyle">
        <div class="o-group-fold-button user-select-none rounded d-flex align-items-center justify-content-center" t-att-style="groupButtonStyle">
          <t t-call="{{groupButtonIcon}}"/>
        </div>
      </div>
      <div class="o-group-border position-absolute" t-if="!isGroupFolded" t-att-style="groupBorderStyle"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GridPopover", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GridPopover" xml:space="preserve">
    <Popover t-if="cellPopover.isOpen" positioning="cellPopover.cellCorner" maxHeight="cellPopover.Component.size and cellPopover.Component.size.maxHeight" maxWidth="cellPopover.Component.size and cellPopover.Component.size.maxHidth" anchorRect="cellPopover.anchorRect" containerRect="env.getPopoverContainerRect()" onMouseWheel="props.onMouseWheel" zIndex="zIndex">
      <t t-component="cellPopover.Component" t-props="{...cellPopover.props, onClosed : () =&gt; props.onClosePopover()}"/>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-GridOverlay", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GridOverlay" xml:space="preserve">
    <div class="position-absolute" t-att-style="style">
      <FiguresContainer onFigureDeleted="props.onFigureDeleted"/>
    </div>
    <div t-ref="gridOverlay" class="o-grid-overlay overflow-hidden" t-att-class="{'o-paint-format-cursor': isPaintingFormat}" t-att-style="style" t-on-pointerdown="onPointerDown" t-on-pointermove="onPointerMove" t-on-click="onClick" t-on-dblclick.self="onDoubleClick" t-on-contextmenu.stop.prevent="onContextMenu">
      <GridAddRowsFooter t-if="!env.model.getters.isReadonly()" t-key="env.model.getters.getActiveSheetId()" focusGrid="props.onFigureDeleted"/>
      <t t-slot="default"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-GridAddRowsFooter", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GridAddRowsFooter" xml:space="preserve">
    <div class="o-grid-add-rows mt-2 ms-2 w-100 d-flex position-relative align-items-center" t-att-style="addRowsPosition" t-on-pointerdown.stop.prevent="">
      <button t-on-click="onConfirm" t-att-disabled="state.errorFlag" class="o-button flex-grow-0 me-2">
        Add
      </button>
      <input type="text" class="o-grid-add-rows-input o-input mt-0 me-2" t-ref="inputRef" value="100" t-on-click.stop="" t-on-keydown.stop="onKeydown" t-on-pointerdown.stop="" t-on-input.stop="onInput"/>
      <span>more rows at the bottom</span>
      <ValidationMessages t-if="state.errorFlag" messages="errorMessages" msgType="'error'"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Grid", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Grid" xml:space="preserve">
    <div class="o-grid w-100 h-100" tabindex="-1" composerFocusableElement="true" t-on-click="focusDefaultElement" t-on-keydown="onKeydown" t-on-wheel.prevent="onMouseWheel" t-ref="grid">
      <GridOverlay onCellClicked.bind="onCellClicked" onCellDoubleClicked.bind="onCellDoubleClicked" onCellRightClicked.bind="onCellRightClicked" onGridResized.bind="onGridResized" onGridMoved.bind="moveCanvas" gridOverlayDimensions="gridOverlayDimensions" onFigureDeleted.bind="focusDefaultElement" getGridSize="props.getGridSize"/>
      <HeadersOverlay onOpenContextMenu="(type, x, y) =&gt; this.toggleContextMenu(type, x, y)"/>
      <GridComposer gridDims="env.model.getters.getSheetViewDimensionWithHeaders()" onInputContextMenu.bind="onInputContextMenu"/>
      <canvas t-ref="canvas"/>
      <t t-set="focused" t-value="focusedClients"/>
      <t t-foreach="env.model.getters.getClientsToDisplay()" t-as="client" t-key="getClientPositionKey(client)">
        <ClientTag name="client.name" color="client.color" col="client.position.col" row="client.position.row" active="isCellHovered(client.position.col, client.position.row) || focused.has(client.id)"/>
      </t>
      <GridPopover t-if="!menuState.isOpen" gridRect="getGridRect()" onMouseWheel.bind="onMouseWheel" onClosePopover.bind="onClosePopover"/>
      <t t-if="env.model.getters.isGridSelectionActive() and !env.isMobile()">
        <Autofill position="getAutofillPosition()" isVisible="isAutofillVisible"/>
      </t>
      <t t-foreach="highlights" t-as="highlight" t-key="highlight_index">
        <t t-if="highlight.interactive and highlight.range.sheetId === env.model.getters.getActiveSheetId()">
          <Highlight range="highlight.range" color="highlight.color"/>
        </t>
      </t>
      <Selection t-if="displaySelectionHandler"/>
      <MenuPopover t-if="menuState.isOpen" menuItems="menuState.menuItems" anchorRect="menuState.anchorRect" onClose="() =&gt; this.closeMenu()"/>
      <t t-foreach="staticTables" t-as="table" t-key="table.id">
        <TableResizer table="table"/>
      </t>
      <VerticalScrollBar topOffset="HEADER_HEIGHT"/>
      <HorizontalScrollBar leftOffset="HEADER_WIDTH"/>
      <div class="o-scrollbar corner"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FullScreenChart", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FullScreenChart" xml:space="preserve">
    <div class="position-absolute o-fullscreen-chart-overlay w-100 h-100 d-flex" t-if="figureUI" t-on-click="exitFullScreen">
      <button class="o-exit top-0 end-0 position-absolute o-button primary m-1" t-on-click="exitFullScreen">
        Exit fullscreen
      </button>
      <div class="flex-fill">
        <div class="o-fullscreen-chart o-figure position-relative" tabindex="1" t-ref="fullScreenChart" t-on-click.stop="" t-on-keydown="(ev) =&gt; this.onKeyDown(ev)">
          <t t-component="chartComponent" figureUI="this.figureUI" isFullScreen="true" t-key="this.figureUI.id"/>
          <div class="position-absolute top-0 end-0">
            <ChartDashboardMenu figureUI="figureUI"/>
          </div>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FontSizeEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FontSizeEditor" xml:space="preserve">
    <div class="o-dropdown" t-ref="FontSizeEditor">
      <div class=" o-font-size-editor d-flex align-items-center" t-att-class="props.class" title="Font Size" t-on-click="this.toggleFontList">
        <input type="number" min="1" max="400" class="o-font-size o-number-input bg-transparent border-0" t-on-keydown="onInputKeydown" t-on-wheel.prevent.stop="" t-on-click.stop="props.onFocusInput" t-on-focus.stop="onInputFocused" t-att-value="props.currentFontSize" t-on-change="setSizeFromInput" t-ref="inputFontSize"/>
        <span>
          <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
        </span>
      </div>
      <Popover t-if="dropdown.isOpen" t-props="popoverProps">
        <div class="o-text-options bg-white" t-on-click.stop="" t-ref="fontSizeList">
          <t t-foreach="fontSizes" t-as="fontSize" t-key="fontSize">
            <div t-esc="fontSize" t-att-data-size="fontSize" t-on-click="() =&gt; this.setSizeFromList(fontSize)"/>
          </t>
        </div>
      </Popover>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FilterMenuValueList", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FilterMenuValueList" xml:space="preserve">
    <div class="o-filter-menu-actions d-flex">
      <div class="o-button-link me-4" t-on-click="selectAll">Select all</div>
      <div class="o-button-link me-4" t-on-click="clearAll">Clear</div>
    </div>
    <div class="position-relative">
      <input class="w-100 o-input my-2" t-ref="filterMenuSearchBar" type="text" t-on-input="updateSearch" placeholder="Search..." t-on-keydown="onKeyDown"/>
      <i class="o-search-icon position-absolute">
        <t t-call="o-spreadsheet-Icon.SEARCH"/>
      </i>
    </div>
    <div class="o-filter-menu-list d-flex flex-column" t-ref="filterValueList" t-on-click="this.clearScrolledToValue" t-on-scroll="this.clearScrolledToValue">
      <t t-foreach="state.displayedValues" t-as="value" t-key="value.string">
        <FilterMenuValueItem onClick="() =&gt; this.checkValue(value)" onMouseMove="() =&gt; this.onMouseMove(value)" value="value.string" isChecked="value.checked" isSelected="value.string === state.selectedValue" scrolledTo="value.scrolledTo"/>
      </t>
      <div t-if="state.hasMoreValues" class="o-filter-load-more o-button-link d-flex justify-content-center py-1" t-on-click="this.loadMoreValues">
        Load more...
      </div>
      <div t-if="state.displayedValues.length === 0" class="o-filter-menu-no-values d-flex align-items-center justify-content-center w-100 h-100 ">
        No results
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FilterMenuValueItem", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FilterMenuValueItem" xml:space="preserve">
    <div t-on-pointermove="this.props.onMouseMove" class="o-filter-menu-item o-filter-menu-value" t-ref="menuValueItem" t-att-class="{'selected': this.props.isSelected}">
      <t t-set="value">
        <t t-if="this.props.value === ''">(Blanks)</t>
        <t t-else="" t-esc="this.props.value"/>
      </t>

      <Checkbox name="value.toString()" value="this.props.isChecked" onChange="this.props.onClick" className="'p-2 w-100 pe-auto text-truncate'" label="value.toString()"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FilterMenuCriterion", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FilterMenuCriterion" xml:space="preserve">
    <SelectMenu class="'o-filter-criterion-type o-input m-1 mb-2'" menuItems="criterionMenuItems" selectedValue="selectedCriterionName"/>

    <t t-if="criterionComponent" t-component="criterionComponent" t-key="selectedCriterionName" criterion="state.criterion" onCriterionChanged.bind="onCriterionChanged" disableFormulas="true"/>
  </t>

  `);
registerTemplate("o-spreadsheet-FilterMenu", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FilterMenu" xml:space="preserve">
    <div class="o-filter-menu d-flex flex-column bg-white" t-on-wheel.stop="">
      <t t-if="isSortable">
        <div>
          <div class="o-filter-menu-item o-sort-item py-2 mb-1" t-on-click="() =&gt; this.sortFilterZone('asc')">
            Sort ascending (A ⟶ Z)
          </div>
          <div class="o-filter-menu-item o-sort-item py-2" t-on-click="() =&gt; this.sortFilterZone('desc')">
            Sort descending (Z ⟶ A)
          </div>
        </div>
      </t>
      <div class="o-filter-menu-content">
        <div class="o-separator"/>
        <SidePanelCollapsible isInitiallyCollapsed="filterValueType !== 'criterion'" title.translate="Filter by criterion">
          <t t-set-slot="content">
            <FilterMenuCriterion filterPosition="props.filterPosition" onCriterionChanged.bind="onCriterionChanged" criterionOperators="criterionOperators"/>
            <div class="mb-3"/>
          </t>
        </SidePanelCollapsible>

        <SidePanelCollapsible isInitiallyCollapsed="filterValueType === 'criterion'" title.translate="Filter by values">
          <t t-set-slot="content">
            <FilterMenuValueList filterPosition="props.filterPosition" onUpdateHiddenValues.bind="onUpdateHiddenValues"/>
          </t>
        </SidePanelCollapsible>

        <div class="o-filter-menu-buttons d-flex justify-content-end">
          <button class="o-button o-filter-menu-cancel me-2" t-on-click="cancel">Cancel</button>
          <button class="o-button primary o-filter-menu-confirm" t-on-click="confirm">
            Confirm
          </button>
        </div>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ImageFigure", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ImageFigure" xml:space="preserve">
    <img t-att-src="getImagePath" class="w-100 h-100"/>
  </t>

  `);
registerTemplate("o-spreadsheet-FiguresContainer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FiguresContainer" xml:space="preserve">
    <div class="position-absolute">
      <t t-foreach="containers" t-as="container" t-key="container.type">
        <div class="o-figure-container position-absolute pe-none overflow-hidden" t-att-style="container.style" t-att-data-id="container.type + 'Container'">
          <div class="o-figure-viewport-inverse w-0 h-0 overflow-visible position-absolute" t-att-style="container.inverseViewportStyle">
            <t t-foreach="container.figures" t-as="figureUI" t-key="figureUI.id">
              <FigureComponent onFigureDeleted="this.props.onFigureDeleted" figureUI="figureUI" style="getFigureStyle(figureUI)" onMouseDown="(ev) =&gt; this.startDraggingFigure(figureUI, ev)" onClickAnchor="(dirX, dirY, ev) =&gt; this.startResize(figureUI, dirX, dirY, ev)"/>
            </t>
          </div>
        </div>
      </t>
    </div>
    <div class="o-figure-container position-absolute pe-none overflow-hidden" t-if="dnd.horizontalSnap" t-att-style="dnd.horizontalSnap.containerStyle" t-att-data-id="'HorizontalSnapContainer'">
      <div class="o-figure-snap-line horizontal" t-att-style="dnd.horizontalSnap.lineStyle"/>
    </div>
    <div class="o-figure-container position-absolute pe-none overflow-hidden" t-if="dnd.verticalSnap" t-att-style="dnd.verticalSnap.containerStyle" t-att-data-id="'VerticalSnapContainer'">
      <div class="o-figure-snap-line vertical" t-att-style="dnd.verticalSnap.lineStyle"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartFigure", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartFigure" xml:space="preserve">
    <div class="o-chart-container w-100 h-100" t-on-dblclick="onDoubleClick">
      <t t-component="chartComponent" figureUI="this.props.figureUI" t-key="this.props.figureUI.id"/>
    </div>
    <div t-if="env.isDashboard()" class="position-absolute top-0 end-0">
      <ChartDashboardMenu figureUI="props.figureUI"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FigureComponent", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FigureComponent" xml:space="preserve">
    <div class="o-figure-wrapper pe-auto" t-att-style="wrapperStyle">
      <div class="o-figure w-100 h-100" t-on-pointerdown.stop="(ev) =&gt; this.onMouseDown(ev)" t-on-click="onClick" t-on-contextmenu.prevent.stop="(ev) =&gt; !env.model.getters.isReadonly() and this.onContextMenu(ev)" t-ref="figure" t-att-style="props.style" t-att-data-id="props.figureUI.id" tabindex="0" t-on-keydown="(ev) =&gt; this.onKeyDown(ev)" t-on-keyup.stop="">
        <t t-component="figureRegistry.get(props.figureUI.tag).Component" t-key="props.figureUI.id" onFigureDeleted="props.onFigureDeleted" figureUI="props.figureUI"/>
        <div class="o-figure-menu position-absolute m-2" t-if="!env.isDashboard()">
          <div class="o-figure-menu-item" t-if="!env.model.getters.isReadonly()" t-on-click="showMenu" t-ref="menuButton" t-on-contextmenu.prevent.stop="showMenu">
            <t t-call="o-spreadsheet-Icon.LIST"/>
          </div>
          <MenuPopover t-if="menuState.isOpen" anchorRect="menuState.anchorRect" menuItems="menuState.menuItems" onClose="() =&gt; this.menuState.isOpen=false"/>
        </div>
      </div>
      <div class="o-figure-border w-100 h-100 position-absolute pe-none" t-att-style="borderStyle"/>
      <t t-if="isSelected and !env.isMobile()">
        <div class="o-fig-anchor o-top" t-att-style="this.getResizerPosition('top')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(0,-1, ev)"/>
        <div class="o-fig-anchor o-topRight" t-att-style="this.getResizerPosition('top right')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(1,-1, ev)"/>
        <div class="o-fig-anchor o-right" t-att-style="this.getResizerPosition('right')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(1,0, ev)"/>
        <div class="o-fig-anchor o-bottomRight" t-att-style="this.getResizerPosition('bottom right')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(1,1, ev)"/>
        <div class="o-fig-anchor o-bottom" t-att-style="this.getResizerPosition('bottom')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(0,1, ev)"/>
        <div class="o-fig-anchor o-bottomLeft" t-att-style="this.getResizerPosition('bottom left')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(-1,1, ev)"/>
        <div class="o-fig-anchor o-left" t-att-style="this.getResizerPosition('left')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(-1,0, ev)"/>
        <div class="o-fig-anchor o-topLeft" t-att-style="this.getResizerPosition('top left')" t-on-pointerdown="(ev) =&gt; this.clickAnchor(-1,-1, ev)"/>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ScorecardChart", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ScorecardChart" xml:space="preserve">
    <canvas class="o-figure-canvas o-scorecard w-100 h-100 d-block" t-ref="chartContainer" t-att-title="title"/>
  </t>

  `);
registerTemplate("o-spreadsheet-GaugeChartComponent", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GaugeChartComponent" xml:space="preserve">
    <canvas class="o-figure-canvas o-gauge-chart w-100 h-100 d-block" t-ref="chartContainer"/>
  </t>

  `);
registerTemplate("spreadsheet.ChartDashboardMenu", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="spreadsheet.ChartDashboardMenu" xml:space="preserve">
    <div class="o-dashboard-chart-select position-absolute top-0 end-0" t-on-click.stop="">
      <div class="d-flex flex-row px-1" t-att-style="backgroundColor">
        <t t-foreach="getMenuItems()" t-as="item" t-key="item.id">
          <button t-attf-class=" {{item.iconClass}} {{item.isSelected ? 'active' : ''}}" class="o-chart-dashboard-item btn mt-1 me-1 p-1 " t-att-title="item.label" t-on-click="item.onClick" t-att-data-id="item.id"/>
        </t>
        <button class="o-chart-dashboard-item btn mt-1 p-1 fa fa-ellipsis-v" t-on-click="openContextMenu"/>
      </div>
      <MenuPopover t-if="menuState.isOpen" anchorRect="menuState.anchorRect" menuItems="menuState.menuItems" onClose="() =&gt; this.menuState.isOpen=false"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ChartJsComponent", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ChartJsComponent" xml:space="preserve">
    <canvas class="o-figure-canvas w-100 h-100" t-att-style="canvasStyle" t-ref="graphContainer"/>
  </t>

  `);
registerTemplate("o-spreadsheet-ErrorToolTip", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ErrorToolTip" xml:space="preserve">
    <div class="o-error-tooltip">
      <t t-if="evaluationError">
        <div class="o-error-tooltip-title fw-bold text-danger">Error</div>
        <div class="o-error-tooltip-message">
          <t t-esc="evaluationError.message"/>
          <div class="fst-italic" t-if="errorOriginPositionString">
            Caused by
            <span t-esc="errorOriginPositionString" class="o-button-link" t-on-click="selectCell" title="Click to select the cell"/>
          </div>
        </div>
      </t>
      <t t-if="dataValidationErrorMessage">
        <div class="o-error-tooltip-title fw-bold text-danger">Invalid</div>
        <div class="o-error-tooltip-message">
          <t t-esc="dataValidationErrorMessage"/>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SpreadsheetDashboard", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SpreadsheetDashboard" xml:space="preserve">
    <div class="o-grid o-two-columns" t-ref="dashboard" tabindex="-1" t-on-wheel="onMouseWheel">
      <div class="mx-auto h-100 position-relative" t-ref="grid" t-att-style="gridContainer">
        <GridOverlay onGridResized.bind="onGridResized" onGridMoved.bind="moveCanvas" gridOverlayDimensions="gridOverlayDimensions" getGridSize="props.getGridSize">
          <div t-foreach="getClickableCells()" t-as="clickableCell" t-key="clickableCell_index" class="o-dashboard-clickable-cell" t-att-title="clickableCell.title" t-on-click="(ev) =&gt; this.selectClickableCell(ev, clickableCell)" t-on-auxclick="(ev) =&gt; this.selectClickableCell(ev, clickableCell)" t-on-contextmenu.prevent="" t-att-style="getCellClickableStyle(clickableCell.coordinates)"/>
        </GridOverlay>
        <canvas t-ref="canvas"/>
        <GridPopover gridRect="getGridRect()" onMouseWheel.bind="onMouseWheel" onClosePopover.bind="onClosePopover"/>
      </div>
      <VerticalScrollBar/>
      <HorizontalScrollBar/>
      <div class="o-scrollbar corner"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-TopBarComposer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TopBarComposer" xml:space="preserve">
    <div class="o-topbar-composer-container w-100">
      <div class="o-topbar-composer position-relative bg-white user-select-text d-flex" t-att-class="{           'o-topbar-composer-readonly': env.model.getters.isReadonly(),         }" t-on-click.stop="" t-att-style="containerStyle">
        <Composer focus="focus" inputStyle="composerStyle" onComposerContentFocused.bind="onFocus" composerStore="composerStore" placeholder="composerStore.placeholder"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-StandaloneComposer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-StandaloneComposer" xml:space="preserve">
    <div class="o-standalone-composer" t-on-click.stop="" t-att-class="containerClass" t-att-title="props.title">
      <Composer focus="focus" inputStyle="composerStyle" onComposerContentFocused.bind="onFocus" composerStore="standaloneComposerStore" placeholder="props.placeholder" delimitation="spreadsheetRect"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-SpeechBubble", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-SpeechBubble" xml:space="preserve">
    <t t-portal="'.o-spreadsheet'">
      <div class="o-speech-bubble position-absolute px-3" t-ref="bubble">
        <div class="o-speech-content text-truncate pb-1" t-esc="props.content"/>
      </div>
    </t>
  </t>

  `);
registerTemplate("o-spreadsheet-GridComposer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-GridComposer" xml:space="preserve">
    <div class="o-cell-reference" t-if="shouldDisplayCellReference" t-att-style="cellReferenceStyle" t-esc="cellReference"/>
    <div class="o-grid-composer" t-att-style="containerStyle" t-ref="gridComposer">
      <Composer t-props="composerProps"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-FunctionDescriptionProvider", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-FunctionDescriptionProvider" xml:space="preserve">
    <div class="o-formula-assistant-container user-select-none shadow">
      <t t-set="context" t-value="getContext()"/>
      <div class="o-formula-assistant" t-if="context.functionDescription.name">
        <div class="o-formula-assistant-head d-flex flex-row justify-content-between">
          <div>
            <span t-esc="context.functionDescription.name"/>
            (
            <t t-foreach="context.functionDescription.args" t-as="arg" t-key="arg.name">
              <span t-if="arg_index &gt; '0'" t-esc="formulaArgSeparator"/>
              <span t-att-class="{ 'o-formula-assistant-focus': context.argsToFocus.includes(arg_index) }">
                <span>
                  <span t-if="arg.optional || arg.repeating || arg.default">[</span>
                  <span t-esc="arg.name"/>
                  <span t-if="arg.repeating">, ...</span>
                  <span t-if="arg.optional || arg.repeating || arg.default">]</span>
                </span>
              </span>
            </t>
            )
          </div>
          <i class="fa fa-caret-up px-2 align-self-start" t-att-class="state.isCollapsed ? 'collapsed' : ''" t-on-click="() =&gt; this.toggle()"/>
        </div>

        <Collapse isCollapsed="state.isCollapsed">
          <div class="o-formula-assistant-core pb-3 m-3">
            <div class="o-formula-assistant-gray">ABOUT</div>
            <div t-esc="context.functionDescription.description"/>
          </div>

          <t t-foreach="context.functionDescription.args" t-as="arg" t-key="arg.name">
            <div class="o-formula-assistant-arg p-3 pt-0 display-flex flex-column" t-att-class="{                   'o-formula-assistant-gray': context.argsToFocus.length &gt; 0,                   'o-formula-assistant-focus': context.argsToFocus.includes(arg_index),                 }">
              <div>
                <span t-esc="arg.name"/>
                <span t-if="arg.optional || arg.repeating || arg.default "> - [optional] </span>
                <span t-if="arg.default">
                  <span>default: </span>
                  <t t-esc="arg.defaultValue"/>
                </span>
                <span t-if="arg.repeating">repeatable</span>
              </div>
              <div class="o-formula-assistant-arg-description" t-esc="arg.description"/>
            </div>
          </t>
        </Collapse>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Composer", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Composer" xml:space="preserve">
    <div class="o-composer-container w-100 h-100">
      <t t-set="autoCompleteProposals" t-value="props.composerStore.autoCompleteProposals"/>
      <t t-set="assistantIsAvailable" t-value="props.showAssistant and (autoCompleteProposals.length or functionDescriptionState.showDescription)"/>
      <div class="d-flex flex-row position-relative">
        <span t-if="props.focus !== 'inactive' and assistantIsAvailable and assistant.forcedClosed" role="button" title="Show formula help" t-on-click="openAssistant" t-on-pointerdown.prevent.stop="" t-on-click.prevent.stop="" t-on-pointerup.prevent.stop="" class="fa-stack position-absolute translate-middle force-open-assistant fs-4">
          <i class="fa fa-circle fa-stack-1x fa-inverse"/>
          <i class="fa fa-question-circle fa-stack-1x"/>
        </span>
        <div class="o-composer w-100 text-start" t-att-class="{ 'text-muted': env.model.getters.isReadonly(), 'active': props.focus !== 'inactive' }" t-att-style="props.inputStyle" t-ref="o_composer" tabindex="1" t-att-contenteditable="env.model.getters.isReadonly() ? 'false' : 'true'" t-att-placeHolder="props.placeholder" t-att-inputmode="props.inputMode" spellcheck="false" t-on-keydown="onKeydown" t-on-mousewheel.stop="" t-on-input="onInput" t-on-pointerdown="onMousedown" t-on-pointerup="onMouseup" t-on-click="onClick" t-on-keyup="onKeyup" t-on-paste="onPaste" t-on-compositionstart="onCompositionStart" t-on-compositionend="onCompositionEnd" t-on-dblclick="onDblClick" t-on-contextmenu="onContextMenu" t-on-blur="onBlur" t-on-wheel="onWheel"/>
      </div>
      <div class="o-composer-assistant-container shadow position-absolute z-1" t-att-style="assistantContainerStyle" t-if="props.focus !== 'inactive' and !assistant.forcedClosed and assistantIsAvailable" t-on-wheel.stop="" t-on-pointerdown.prevent.stop="" t-on-pointerup.prevent.stop="" t-on-click.prevent.stop="">
        <span role="button" t-on-click="closeAssistant" class="fa-stack position-absolute top-0 start-100 translate-middle fs-4">
          <i class="fa fa-circle fa-stack-1x fa-inverse"/>
          <i class="fa fa-times-circle fa-stack-1x text-muted"/>
        </span>
        <div class="o-composer-assistant overflow-auto" t-att-style="assistantStyle">
          <FunctionDescriptionProvider t-if="functionDescriptionState.showDescription" functionDescription="functionDescriptionState.functionDescription" argsToFocus="functionDescriptionState.argsToFocus"/>
          <div t-if="functionDescriptionState.showDescription and autoCompleteProposals.length" class="border-top"/>
          <TextValueProvider t-if="autoCompleteProposals.length" proposals="autoCompleteProposals" selectedIndex="props.composerStore.autoCompleteSelectedIndex" onValueSelected.bind="this.autoComplete" onValueHovered.bind="props.composerStore.selectAutoCompleteIndex"/>
        </div>
      </div>
      <SpeechBubble t-if="displaySpeechBubble" content="props.composerStore.hoveredContentEvaluation" anchorRect="composerState.hoveredRect"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-TextValueProvider", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-TextValueProvider" xml:space="preserve">
    <div t-ref="autoCompleteList" t-att-class="{           'o-autocomplete-dropdown': props.proposals.length}">
      <t t-foreach="props.proposals" t-as="proposal" t-key="proposal.text + proposal_index">
        <div class="d-flex flex-column text-start" t-att-class="{'o-autocomplete-value-focus': props.selectedIndex === proposal_index}" t-on-click="() =&gt; this.props.onValueSelected(proposal.text)" t-on-pointermove="() =&gt; this.props.onValueHovered(proposal_index)">
          <div class="o-autocomplete-value text-truncate">
            <t t-set="htmlContent" t-value="proposal.htmlContent || [{ value: proposal.text}]"/>
            <span t-foreach="htmlContent" t-as="content" t-key="content_index" t-att-class="content.classes?.join(' ')" t-att-style="getCss(content)" t-esc="content.value"/>
          </div>
          <div class="o-autocomplete-description text-truncate" t-esc="proposal.description" t-if="props.selectedIndex === proposal_index || proposal.alwaysExpanded"/>
        </div>
      </t>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ColorPickerWidget", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColorPickerWidget" xml:space="preserve">
    <div class="o-color-picker-widget">
      <span class="o-color-picker-button" t-ref="colorPickerButton" t-on-click.stop="props.toggleColorPicker" t-att-title="props.title" t-att-class="props.class ? props.class : 'o-color-picker-button-style'" t-att-disabled="props.disabled">
        <span t-att-style="iconStyle">
          <t t-call="{{props.icon}}"/>
        </span>
      </span>
      <ColorPicker t-if="props.showColorPicker" anchorRect="colorPickerAnchorRect" onColorPicked="props.onColorPicked" currentColor="props.currentColor" maxHeight="props.dropdownMaxHeight"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ColorPicker", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ColorPicker" xml:space="preserve">
    <Popover t-props="popoverProps">
      <div class="o-color-picker" t-on-click.stop="" t-att-style="colorPickerStyle">
        <div class="o-color-picker-section-name">Standard</div>
        <div class="colors-grid">
          <div t-foreach="COLORS" t-as="color" t-key="color" class="o-color-picker-line-item" t-att-data-color="color" t-on-click="() =&gt; this.onColorClick(color)" t-attf-style="background-color:{{color}};">
            <div t-if="isSameColor(props.currentColor, color)" align="center" t-attf-style="color:{{checkmarkColor}}">
              ✓
            </div>
          </div>
        </div>
        <div class="o-separator"/>
        <div class="o-color-picker-section-name o-color-picker-toggler" t-on-click="toggleColorPicker">
          <span>Custom</span>
        </div>
        <div class="colors-grid o-color-picker-toggler" t-on-click.stop="toggleColorPicker">
          <div class="o-color-picker-line-item o-color-picker-toggler-button">
            <div class="o-color-picker-toggler-sign">
              <t t-call="o-spreadsheet-Icon.PLUS"/>
            </div>
          </div>
          <div t-foreach="env.model.getters.getCustomColors()" t-as="color" t-key="color" class="o-color-picker-line-item" t-att-data-color="color" t-attf-style="background-color:{{color}};" t-on-click="() =&gt; this.onColorClick(color)">
            <div t-if="isSameColor(props.currentColor, color)" align="center" t-attf-style="color:{{checkmarkColor}}">
              ✓
            </div>
          </div>
        </div>
        <div t-if="state.showGradient" class="o-custom-selector">
          <div class="o-gradient" t-on-click.stop="" t-on-pointerdown="dragGradientPointer" t-att-style="gradientHueStyle">
            <div class="saturation w-100 h-100 position-absolute pe-none"/>
            <div class="lightness w-100 h-100 position-absolute pe-none"/>
            <div class="magnifier pe-none" t-att-style="pointerStyle"/>
          </div>
          <div class="o-hue-container" t-on-pointerdown="dragHuePointer">
            <div class="o-hue-picker" t-on-click.stop=""/>
            <div class="o-hue-slider pe-none" t-att-style="sliderStyle">
              <t t-call="o-spreadsheet-Icon.CARET_UP"/>
            </div>
          </div>
          <div class="o-custom-input-preview">
            <input type="text" t-att-class="{'o-wrong-color': !isHexColorInputValid }" t-on-click.stop="" t-att-value="state.customHexColor" t-on-input="setHexColor"/>
            <div class="o-color-preview" t-att-style="colorPreviewStyle"/>
          </div>
          <div class="o-custom-input-buttons">
            <button class="o-add-button" t-att-class="{'o-disabled': !state.customHexColor or !isHexColorInputValid}" t-on-click.stop="addCustomColor">
              Add
            </button>
          </div>
        </div>
        <t t-if="!props.disableNoColor">
          <div class="o-separator"/>
          <div class="o-buttons">
            <button t-on-click="resetColor" class="o-cancel">No Color</button>
          </div>
        </t>
      </div>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-ClientTag", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ClientTag" xml:space="preserve">
    <div t-if="props.active" class="o-client-tag" t-att-style="tagStyle" t-esc="props.name"/>
  </t>

  `);
registerTemplate("o-spreadsheet-BottomBar", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BottomBar" xml:space="preserve">
    <div class="o-spreadsheet-bottom-bar o-two-columns d-flex flex-fill align-items-center overflow-hidden" t-on-click="props.onClick" t-ref="bottomBar" t-on-contextmenu.prevent="">
      <Ripple class="'add-sheet-container'">
        <div class="o-sheet-item o-add-sheet me-2 p-1" t-if="!env.model.getters.isReadonly()" t-on-click="clickAddSheet">
          <t t-call="o-spreadsheet-Icon.PLUS"/>
        </div>
      </Ripple>
      <Ripple>
        <div class="o-sheet-item o-list-sheets me-2 p-1" composerFocusableElement="true" tabindex="-1" t-on-click="clickListSheets">
          <t t-call="o-spreadsheet-Icon.LIST"/>
        </div>
      </Ripple>
      <div class="o-all-sheets position-relative d-flex h-100 flex-fill overflow-hidden">
        <div class="o-bottom-bar-fade-in position-absolute h-100 w-100 pe-none" t-if="state.isSheetListScrollableLeft"/>
        <div class="o-sheet-list d-flex w-100 px-1" t-ref="sheetList" t-on-wheel="onWheel" t-on-scroll="onScroll">
          <t t-foreach="getVisibleSheets()" t-as="sheet" t-key="sheet.id">
            <BottomBarSheet style="getSheetStyle(sheet.id)" sheetId="sheet.id" openContextMenu="(registry, ev) =&gt; this.onSheetContextMenu(sheet.id, registry, ev)" onMouseDown="(ev) =&gt; this.onSheetMouseDown(sheet.id, ev)"/>
          </t>
        </div>
        <div class="o-bottom-bar-fade-out position-absolute h-100 w-100 pe-none" t-if="state.isSheetListScrollableRight"/>
      </div>
      <t t-if="!env.isSmall">
        <div class="o-bottom-bar-arrows d-flex h-100 me-4 align-items-center ms-3" t-if="state.isSheetListScrollableLeft || state.isSheetListScrollableRight">
          <Ripple ignoreClickPosition="true" width="20" height="20" offsetX="1" allowOverflow="true" enabled="state.isSheetListScrollableLeft">
            <div class="o-bottom-bar-arrow o-bottom-bar-arrow-left d-flex align-items-center" t-att-class="{'o-disabled': !state.isSheetListScrollableLeft}" t-on-click="onArrowLeft">
              <t t-call="o-spreadsheet-Icon.CARET_LEFT"/>
            </div>
          </Ripple>
          <Ripple ignoreClickPosition="true" width="20" height="20" offsetX="-1" allowOverflow="true" enabled="state.isSheetListScrollableRight">
            <div class="o-bottom-bar-arrow o-bottom-bar-arrow-right d-flex align-items-center" t-att-class="{'o-disabled': !state.isSheetListScrollableRight}" t-on-click="onArrowRight">
              <t t-call="o-spreadsheet-Icon.CARET_RIGHT"/>
            </div>
          </Ripple>
        </div>
        <BottomBarStatistic openContextMenu="(x, y, registry) =&gt; this.openContextMenu(x, y, 'listSelectionStatistics', registry)" closeContextMenu="() =&gt; this.closeContextMenuWithId('listSelectionStatistics')"/>
      </t>

      <MenuPopover t-if="menuState.isOpen" anchorRect="menuState.anchorRect" menuItems="menuState.menuItems" maxHeight="menuMaxHeight" onClose="() =&gt; this.closeMenu()" menuId="menuState.menuId"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-BottomBarStatistic", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BottomBarStatistic" xml:space="preserve">
    <t t-set="selectedStatistic" t-value="getSelectedStatistic()"/>
    <Ripple class="'ms-auto bottom-statistics'" t-if="selectedStatistic !== undefined">
      <div class="o-selection-statistic text-truncate user-select-none me-4 bg-white rounded shadow d-flex align-items-center" t-on-click="listSelectionStatistics">
        <t t-esc="selectedStatistic"/>
        <span class="ms-2">
          <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
        </span>
      </div>
    </Ripple>
  </t>

  `);
registerTemplate("o-spreadsheet-BottomBarSheet", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BottomBarSheet" xml:space="preserve">
    <Ripple>
      <div class="o-sheet d-flex align-items-center user-select-none text-nowrap " tabindex="-1" composerFocusableElement="true" t-on-pointerdown="(ev) =&gt; this.onMouseDown(ev)" t-on-click="onClick" t-on-contextmenu.prevent="(ev) =&gt; this.onContextMenu(ev)" t-ref="sheetDiv" t-att-style="props.style" t-att-title="sheetName" t-att-data-id="props.sheetId" t-att-class="{active: isSheetActive}">
        <span class="o-sheet-name" t-att-class="{'o-sheet-name-editable': state.isEditing }" t-ref="sheetNameSpan" t-esc="sheetName" t-on-pointerdown="(ev) =&gt; this.onMouseEventSheetName(ev)" t-on-dblclick="() =&gt; this.onDblClick()" t-on-focusout="() =&gt; this.onFocusOut()" t-on-keydown="(ev) =&gt; this.onKeyDown(ev)" t-att-contenteditable="state.isEditing ? 'true': 'false'"/>
        <span class="o-sheet-icon ms-1" tabindex="-1" t-on-click.stop="(ev) =&gt; this.onIconClick(ev)">
          <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
        </span>
        <div t-if="sheetColorStyle" class="o-sheet-color position-absolute" t-att-style="sheetColorStyle"/>
      </div>
    </Ripple>
    <ColorPicker t-if="state.pickerOpened" anchorRect="colorPickerAnchorRect" onColorPicked.bind="onColorPicked" currentColor="props.currentColor"/>
  </t>

  `);
registerTemplate("o-spreadsheet-BorderEditorWidget", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BorderEditorWidget" xml:space="preserve">
    <div class="d-flex position-relative" title="Borders">
      <span t-ref="borderEditorButton" t-on-click.stop="toggleBorderEditor" t-att-class="props.class ? props.class : ''" t-att-disabled="props.disabled">
        <span t-att-style="iconStyle">
          <t t-call="o-spreadsheet-Icon.BORDERS"/>
        </span>
      </span>
      <BorderEditor t-if="isActive" onBorderColorPicked.bind="onBorderColorPicked" onBorderStylePicked.bind="onBorderStylePicked" onBorderPositionPicked.bind="onBorderPositionPicked" currentBorderColor="state.currentColor" currentBorderStyle="state.currentStyle" currentBorderPosition="state.currentPosition" maxHeight="dropdownMaxHeight" anchorRect="borderEditorAnchorRect"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-BorderEditor", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-BorderEditor" xml:space="preserve">
    <t t-set="border_color">Border Color</t>
    <Popover t-props="popoverProps">
      <div class="d-flex o-border-selector" t-on-click.stop="" t-att-class="props.class ? props.class : ''">
        <div class="o-border-selector-section">
          <div t-foreach="BORDER_POSITIONS" t-as="borderPositionsRow" t-key="borderPositionsRow" class="d-flex o-dropdown-button o-dropdown-line">
            <span t-foreach="borderPositionsRow" t-as="borderPosition" t-key="borderPosition" class="o-line-item o-hoverable-button" t-att-class="{active:props.currentBorderPosition === borderPosition[0]}" t-att-name="borderPosition[0]" t-on-click.stop="() =&gt; this.setBorderPosition(borderPosition[0])">
              <t t-call="{{borderPosition[1]}}"/>
            </span>
          </div>
        </div>
        <div class="o-divider"/>
        <div class="o-border-selector-section">
          <div class="m-0 p-0 d-flex align-items-center justify-content-center o-with-color o-hoverable-button" title="Border color" t-on-click.stop="(ev) =&gt; this.toggleDropdownTool('borderColorTool')">
            <ColorPickerWidget currentColor="props.currentBorderColor" toggleColorPicker="(ev) =&gt; this.toggleDropdownTool('borderColorTool')" showColorPicker="state.activeTool === 'borderColorTool'" onColorPicked="(color) =&gt; this.setBorderColor(color)" title="border_color" icon="props.currentBorderColor === '' ? 'o-spreadsheet-Icon.BORDER_NO_COLOR' : 'o-spreadsheet-Icon.BORDER_COLOR'" dropdownMaxHeight="this.props.dropdownMaxHeight" class="'o-dropdown-button o-border-picker-button'"/>
            <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
          </div>
          <div class="o-border-style-tool d-flex align-items-center justify-content-center o-hoverable-button" title="Line style" t-ref="lineStyleButton" t-on-click.stop="(ev) =&gt; this.toggleDropdownTool('borderTypeTool')">
            <t t-call="o-spreadsheet-Icon.BORDER_TYPE"/>
            <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
            <Popover t-props="lineStylePickerPopoverProps" t-if="state.activeTool === 'borderTypeTool'">
              <div class="o-border-style-dropdown">
                <t t-foreach="borderStyles" t-as="borderStyle" t-key="borderStyle">
                  <div t-att-title="borderStyle" t-on-click.stop="() =&gt; this.setBorderStyle(borderStyle)">
                    <div class="d-flex o-dropdown-border-type">
                      <div class="o-dropdown-border-check">
                        <t t-if="props.currentBorderStyle === borderStyle" t-call="o-spreadsheet-Icon.CHECK"/>
                      </div>
                      <div t-attf-class="o-style-preview o-style-{{borderStyle}}"/>
                    </div>
                  </div>
                </t>
              </div>
            </Popover>
          </div>
        </div>
      </div>
    </Popover>
  </t>

  `);
registerTemplate("o-spreadsheet-Autofill", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Autofill" xml:space="preserve">
    <div class="o-autofill" t-att-style="style"/>
    <div class="o-autofill-handler" t-att-style="handlerStyle" t-on-pointerdown="onMouseDown" t-on-dblclick="onDblClick"/>
    <t t-set="tooltip" t-value="getTooltip()"/>
    <div t-if="tooltip" class="o-autofill-nextvalue" t-att-style="styleNextValue">
      <t t-component="tooltip.component" t-props="tooltip.props"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-Ripple", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-Ripple" xml:space="preserve">
    <div class="o-ripple-container position-relative" t-att-class="props.class" t-on-click="onClick">
      <div class="position-absolute w-100 h-100">
        <t t-foreach="state.ripples" t-as="ripple" t-key="ripple.id">
          <RippleEffect t-props="getRippleEffectProps(ripple.id)"/>
        </t>
      </div>
      <div class="position-relative" t-ref="childContainer">
        <t t-slot="default"/>
      </div>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-RippleEffect", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-RippleEffect" xml:space="preserve">
    <div class="position-absolute" t-att-class="{ 'overflow-hidden': !props.allowOverflow }" t-att-style="props.style">
      <div class="o-ripple position-relative pe-none" t-ref="ripple" t-att-style="rippleStyle"/>
    </div>
  </t>

  `);
registerTemplate("o-spreadsheet-ActionButton", `/spreadsheet/static/src/o_spreadsheet/o_spreadsheet.xml`, `<t t-name="o-spreadsheet-ActionButton" xml:space="preserve">
    <span t-if="isVisible" class="o-menu-item-button" t-att-title="title" t-att-class="{'o-disabled': !isEnabled, active: isActive}" t-attf-class="{{props.class}}" t-on-click="onClick">
      <span t-if="iconTitle" t-att-style="buttonStyle">
        <t t-call="{{iconTitle}}"/>
      </span>
      <t t-if="props.hasTriangleDownIcon">
        <t t-call="o-spreadsheet-Icon.CARET_DOWN"/>
      </t>
    </span>
  </t>
`);
registerTemplate("spreadsheet.SpreadsheetComponent", `/spreadsheet/static/src/actions/spreadsheet_component.xml`, `<div t-name="spreadsheet.SpreadsheetComponent" class="o_spreadsheet_container o_field_highlight" xml:space="preserve">
        <Spreadsheet model="model"/>
    </div>
`);
registerTemplateExtension("o-spreadsheet-FigureComponent", `/spreadsheet/static/src/chart/odoo_menu/figure_component.xml`, `<div t-name="spreadsheet.FigureComponent" t-inherit="o-spreadsheet-FigureComponent" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//div[hasclass('o-figure-menu-item')]" position="before">
            <div t-if="hasOdooMenu and !env.isDashboard()" class="o-figure-menu-item o-chart-external-link" t-custom-click="(ev, isMiddleClick) =&gt; this.navigateToOdooMenu(isMiddleClick)">
                <span class="fa fa-external-link"/>
            </div>
        </xpath>
        <xpath expr="//div[hasclass('o-figure')]" position="attributes">
            <attribute name="t-on-click">() =&gt; this.onClick()</attribute>
            <attribute name="t-att-role">env.isDashboard() and hasOdooMenu ? "button" : ""</attribute>
        </xpath>
    </div>
`);
registerTemplate("spreadsheet.ShareButton", `/spreadsheet/static/src/components/share_button/share_button.xml`, `<t t-name="spreadsheet.ShareButton" xml:space="preserve">
    <Dropdown menuClass="'spreadsheet_share_dropdown d-flex flex-column h-auto'" position="'bottom-end'" onOpened.bind="onOpened" disabled="!props.model">
      <button t-att-class="togglerClass">
        <i class="fa fa-share-alt"/>
        Share
      </button>
      <t t-set-slot="content">
        <t t-if="state.url">
          <div class="d-flex px-3">
            <div class="align-self-center d-flex justify-content-center align-items-center flex-shrink-0">
              <i class="fa fa-globe fa-2x" title="Share to web"/>
            </div>
            <div class="flex-grow-1 px-3">
              <div class="lead">Spreadsheet published</div>
              <div>Frozen version - Anyone can view</div>
            </div>
          </div>
          <div class=" px-3 o_field_widget o_readonly_modifier o_field_CopyClipboardChar">
            <div class="d-grid rounded-2 overflow-hidden">
              <span t-out="state.url"/>
              <CopyButton className="'o_btn_char_copy btn-sm'" content="state.url" successText="copiedText" icon="'fa-clipboard'"/>
            </div>
          </div>
        </t>
        <div t-else="" class="d-flex align-items-center justify-content-center h-100">
          <i class="fa fa-circle-o-notch fa-spin px-2"/><span>Generating sharing link</span>
        </div>
      </t>
    </Dropdown>
  </t>
`);
registerTemplate("spreadsheet.DateFilterDropdown", `/spreadsheet/static/src/global_filters/components/date_filter_dropdown/date_filter_dropdown.xml`, `<t t-name="spreadsheet.DateFilterDropdown" xml:space="preserve">
        <t t-foreach="dateOptions" t-as="option" t-key="option.id">
            <DropdownItem tag="'div'" class="{ 'selected': isSelected(option), 'd-flex justify-content-between o-date-filter-dropdown': true }" closingMode="'none'" attrs="{ 'data-id': option.id }" onSelected="() =&gt; this.update(option)">

                <div class="o-date-option-label" t-esc="option.label"/>
                <t t-if="option.type === 'range'">
                    <div class="d-flex flex-row">
                        <DateTimeInput type="'date'" value="dateFrom()" onChange="(dateFrom) =&gt; this.setDateFrom(dateFrom)"/>
                        <span class="d-flex align-items-center">to</span>
                        <DateTimeInput type="'date'" value="dateTo()" onChange="(dateTo) =&gt; this.setDateTo(dateTo)"/>
                    </div>
                </t>
                <t t-elif="isMonthQuarterYear(option)">
                    <div class="d-flex justify-content-between">
                        <button class="btn-previous fa fa-caret-left" t-on-click="() =&gt; this.selectPrevious(option.type)"/>
                        <input class="o_input" type="text" t-att-value="getDescription(option.type)" readonly="true"/>
                        <button class="btn-next fa fa-caret-right" t-on-click="() =&gt; this.selectNext(option.type)"/>
                    </div>
                </t>
            </DropdownItem>
            <div class="dropdown-divider" t-if="option.separator"/>
        </t>
    </t>
`);
registerTemplate("spreadsheet.DateFilterValue", `/spreadsheet/static/src/global_filters/components/date_filter_value/date_filter_value.xml`, `<t t-name="spreadsheet.DateFilterValue" xml:space="preserve">
        <Dropdown navigationOptions="{ 'shouldFocusChildInput': false }">
            <input class="o_input w-100 o-date-filter-input" readonly="true" t-att-value="inputValue"/>
            <t t-set-slot="content">
                <DateFilterDropdown value="props.value" update.bind="props.update"/>
            </t>
        </Dropdown>
    </t>
`);
registerTemplate("spreadsheet.DefaultDateValue", `/spreadsheet/static/src/global_filters/components/default_date_value/default_date_value.xml`, `<t t-name="spreadsheet.DefaultDateValue" xml:space="preserve">
        <Dropdown>
            <input class="o_input w-100 o-date-filter-input" readonly="true" t-att-value="currentFormattedValue"/>
            <t t-set-slot="content">
                <t t-foreach="dateOptions" t-as="option" t-key="option.id">
                    <DropdownItem class="{ 'selected': option.id === props.value }" attrs="{ 'data-id': option.id }" onSelected="() =&gt; props.update(option.id)">
                        <span t-esc="option.label"/>
                    </DropdownItem>
                    <div class="dropdown-divider" t-if="option.separator"/>
                </t>
            </t>
        </Dropdown>
    </t>
`);
registerTemplate("spreadsheet.TextFilterValue", `/spreadsheet/static/src/global_filters/components/filter_text_value/filter_text_value.xml`, `<t t-name="spreadsheet.TextFilterValue" xml:space="preserve">
        <div class="o_input o-global-filter-text-value d-flex flex-wrap gap-1">
            <TagsList tags="tags"/>
            <AutoComplete sources="sources" input="inputRef" onChange.bind="onInputChange" inputDebounceDelay="0"/>
        </div>
    </t>
`);
registerTemplate("spreadsheet.FilterValue", `/spreadsheet/static/src/global_filters/components/filter_value/filter_value.xml`, `<t t-name="spreadsheet.FilterValue" xml:space="preserve">
        <div class="o-filter-value d-flex align-items-start w-100" t-att-title="props.showTitle and filter.label">
            <div t-if="isSetOperator" class="w-100"/>
            <div t-elif="isTextualOperator || filter.type === 'text'" class="w-100">
                <TextFilterValue value="filterValue?.strings" options="textAllowedValues" onValueChanged="(value) =&gt; this.onTextInput(filter.id, value)"/>
            </div>
            <div t-elif="filter.type === 'selection'" class="w-100">
                <SelectionFilterValue resModel="filter.resModel" field="filter.selectionField" value="filterValue?.selectionValues ?? []" onValueChanged="(value) =&gt; this.onSelectionInput(filter.id, value)"/>
            </div>
            <div t-elif="filter.type === 'date'" class="w-100">
                <DateFilterValue value="filterValue" update.bind="(value) =&gt; this.onDateInput(filter.id, value)"/>
            </div>
            <span t-elif="filter.type === 'relation'" class="w-100">
                <MultiRecordSelector t-if="isValid" resModel="filter.modelName" resIds="filterValue?.ids ?? []" domain="relationalAllowedDomain" update="(resIds) =&gt; this.onTagSelected(filter.id, resIds)"/>
                <ValidationMessages t-else="1" messages="[invalidModel]" msgType="'error'"/>
            </span>
            <i t-if="props.showClear and getters.isGlobalFilterActive(filter.id)" class="fa fa-times btn btn-link text-muted ms-1 mt-1" title="Clear" t-on-click="() =&gt; this.clear(filter.id)"/>
        </div>
    </t>
`);
registerTemplate("spreadsheet_dashboard.FiltersSearchDialog", `/spreadsheet/static/src/global_filters/components/filters_search_dialog/filters_search_dialog.xml`, `<t t-name="spreadsheet_dashboard.FiltersSearchDialog" xml:space="preserve">
        <Dialog title.translate="Global Filters" size="md">
            <div class="d-flex flex-column o-filters-search-dialog">
                <div t-foreach="state.activeFilters" t-as="item" t-key="item_index" class="d-flex o-filter-item align-items-center">
                    <div class="me-1 w-25">
                        <t t-esc="getTranslatedFilterLabel(item.globalFilter)"/>
                    </div>
                    <t t-set="operators" t-value="getOperators(item.globalFilter)"/>
                    <div t-if="!operators?.length" class="w-25 me-3"/>
                    <select t-else="" class="o_input w-25 pe-3 me-3 text-truncate" t-on-change="(ev) =&gt; this.updateOperator(item, ev.target.value)">
                        <t t-foreach="operators" t-as="operator" t-key="operator">
                            <option class="text-black" t-att-value="operator" t-att-selected="item.value?.operator === operator" t-esc="getOperatorLabel(operator)"/>
                        </t>
                    </select>
                    <FilterValue filter="item.globalFilter" model="props.model" setGlobalFilterValue="(id, value) =&gt; this.setGlobalFilterValue(item, value)" globalFilterValue="item.value"/>
                    <button class="btn btn-link px-2 text-danger fs-4" t-on-click="() =&gt; this.removeFilter(item.globalFilter.id)">
                        <i class="fa fa-trash"/>
                    </button>
                </div>
                <div class="d-flex">
                    <Dropdown t-if="hasUnusedGlobalFilters">
                        <a href="#" class="pt-2 o-add-global-filter">
                            Add filter
                        </a>
                        <t t-set-slot="content">
                            <t t-foreach="unusedGlobalFilters" t-as="filter" t-key="filter.id">
                                <DropdownItem onSelected="() =&gt; this.activateFilter(filter)">
                                    <span class="o-add-global-filter-label" t-esc="getTranslatedFilterLabel(filter)"/>
                                </DropdownItem>
                            </t>
                        </t>
                    </Dropdown>
                    <a href="#" t-if="props.openFiltersEditor" class="pt-2 ps-4 o-edit-global-filters" t-on-click="() =&gt; this.props.openFiltersEditor()">
                        <i class="fa fa-pencil"/>
                        Edit filters
                    </a>
                </div>
            </div>
            <t t-set-slot="footer">
                <button class="btn btn-primary" t-on-click="onConfirm">Filter</button>
                <button class="btn btn-secondary" t-on-click="onDiscard">Discard</button>
            </t>
        </Dialog>
    </t>

`);
registerTemplate("spreadsheet.SelectionFilterValue", `/spreadsheet/static/src/global_filters/components/selection_filter_value/selection_filter_value.xml`, `<t t-name="spreadsheet.SelectionFilterValue" xml:space="preserve">
        <div class="o_input o-global-filter-selection-value d-flex flex-wrap gap-1">
            <TagsList tags="tags"/>
            <AutoComplete input="inputRef" sources="sources"/>
        </div>
    </t>
`);
registerTemplate("o-spreadsheet-Icon.SEE_RECORDS", `/spreadsheet/static/src/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.SEE_RECORDS" xml:space="preserve">
    <svg class="o-icon">
      <path fill="currentColor" d="M9.05 11.25c-1.49 0-2.7-1.21-2.7-2.7s1.21-2.7 2.7-2.7 2.7 1.21 2.7 2.7-1.21 2.7-2.7 2.7m0-1.8c.5 0 .9-.4.9-.9s-.4-.9-.9-.9-.9.4-.9.9.4.9.9.9M9 3.15c-3.75 0-6.7 2.1-8 5.06 1.3 2.97 4.25 5.74 8 5.74s6.7-2.77 8-5.74c-1.3-2.96-4.25-5.06-8-5.06m0 9c-2.84 0-4.78-1.66-6.02-3.94C4.22 5.94 6.16 4.95 9 4.95s4.8.99 6.03 3.26c-1.23 2.27-3.19 3.94-6.03 3.94"/>
    </svg>
  </t>
  `);
registerTemplate("o-spreadsheet-Icon.GLOBAL_FILTERS", `/spreadsheet/static/src/o_spreadsheet/icons.xml`, `<t t-name="o-spreadsheet-Icon.GLOBAL_FILTERS" xml:space="preserve">
    <svg width="20" height="20" viewbox="0 0 20 20">
      <path fill="currentColor" d="M1 3h12L7 9M5.5 6h3v11l-3-3M14 4h4v2h-4m-3 3h7v2h-7m0 3h7v2h-7"/>
    </svg>
  </t>
`);
registerTemplateExtension("o-spreadsheet-FullScreenChart", `/spreadsheet_dashboard/static/src/bundle/chart/full_screen_chart/full_screen_chart.xml`, `<div t-name="spreadsheet.FullScreenChart" t-inherit="o-spreadsheet-FullScreenChart" t-inherit-mode="extension" xml:space="preserve">
        <xpath expr="//div[hasclass('o-figure')]" position="attributes">
            <attribute name="t-att-role">hasOdooMenu ? "button" : ""</attribute>
        </xpath>
    </div>
`);
registerTemplate("spreadsheet_dashboard.DashboardAction", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_action.xml`, `<div t-name="spreadsheet_dashboard.DashboardAction" class="o_action o_spreadsheet_dashboard_action o_field_highlight" xml:space="preserve">
        <ControlPanel display="controlPanelDisplay">
            <t t-set-slot="layout-actions" t-if="!state.activeDashboard?.isSample">
                <t t-set="status" t-value="state.activeDashboard and state.activeDashboard.status"/>
                <div class="d-flex flex-wrap">
                    <DashboardSearchBar t-if="status === Status.Loaded and state.activeDashboard.model.getters.getGlobalFilters().length" t-key="activeDashboardId" model="state.activeDashboard.model"/>
                </div>
            </t>
            <t t-set-slot="control-panel-navigation-additional" t-if="!state.activeDashboard?.isSample">
                <SpreadsheetShareButton t-key="activeDashboardId" model="state.activeDashboard?.model" onSpreadsheetShared.bind="shareSpreadsheet" togglerClass="'btn-light'"/>
                <a t-if="state.activeDashboard" title="Toggle favorite" t-on-click="toggleFavorite" t-attf-class="o_dashboard_star fa fa-lg fa-star{{!state.activeDashboard.isFavorite ? '-o' : ' favorite_button_enabled'}}"/>
            </t>
        </ControlPanel>
        <t t-set="dashboard" t-value="state.activeDashboard"/>
        <div class="o_content o_component_with_search_panel" t-att-class="{ o_mobile_dashboard: env.isSmall }">

            <t t-if="env.isSmall">
                <DashboardMobileSearchPanel onDashboardSelected="(dashboardId) =&gt; this.openDashboard(dashboardId)" activeDashboard="dashboard" groups="getDashboardGroups()"/>
            </t>
            <t t-else="">
                <t t-if="state.sidebarExpanded" t-call="spreadsheet_dashboard.DashboardAction.Expanded"/>
                <t t-else="" t-call="spreadsheet_dashboard.DashboardAction.Collapsed"/>
            </t>

            <h3 t-if="!dashboard" class="dashboard-loading-status">No available dashboard</h3>
            <t t-else="">
                <t t-set="status" t-value="dashboard.status"/>
                <h3 t-if="status === Status.Loading" class="dashboard-loading-status">Loading...</h3>
                <div t-elif="status === Status.Error" class="dashboard-loading-status error">
                    An error occured while loading the dashboard
                </div>
                <t t-else="">
                    <div class="o_renderer" t-att-class="{'o-sample-dashboard': dashboard.isSample}">
                        <SpreadsheetComponent model="dashboard.model" t-key="dashboard.id"/>
                    </div>
                </t>
            </t>
        </div>
    </div>

    `);
registerTemplate("spreadsheet_dashboard.DashboardAction.Collapsed", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_action.xml`, `<t t-name="spreadsheet_dashboard.DashboardAction.Collapsed" xml:space="preserve">
        <div class="bg-view h-100 o_search_panel_sidebar cursor-pointer" t-on-click="toggleSidebar">
            <div class="d-flex">
                <button class="btn btn-light btn-sm m-1 mb-2 p-2">
                    <i class="fa fa-angle-double-right"/>
                </button>
                <div class="mx-auto" t-if="state.activeDashboard">
                    <span class="fw-bolder" t-esc="activeDashboardGroupName"/>
                    /
                    <t t-esc="state.activeDashboard.displayName"/>
                </div>
            </div>
        </div>
    </t>

    `);
registerTemplate("spreadsheet_dashboard.DashboardAction.Expanded", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_action.xml`, `<t t-name="spreadsheet_dashboard.DashboardAction.Expanded" xml:space="preserve">
        <div class="o_spreadsheet_dashboard_search_panel o_search_panel flex-grow-0 border-end flex-shrink-0 pe-2 pb-5 ps-4 h-100 bg-view overflow-auto position-relative">
            <button t-if="!env.isSmall and state.activeDashboard" class="btn btn-light btn-sm end-0 m-1 mb-2 position-absolute px-2 py-1 top-0 z-1" t-on-click="toggleSidebar">
                <i class="fa fa-fw fa-angle-double-left"/>
            </button>
            <div class="mt-2"/>
            <section t-foreach="getDashboardGroups()" t-as="group" t-key="group.id" class="o_search_panel_section o_search_panel_category">
                <header class="o_search_panel_section_header pt-4 pb-2 text-uppercase o_cursor_default user-select-none">
                    <b t-esc="group.name"/>
                </header>
                <ul class="list-group d-block o_search_panel_field">
                    <li t-foreach="group.dashboards" t-as="dashboard" t-key="dashboard.id" t-on-click="() =&gt; this.openDashboard(dashboard.id)" t-att-data-name="dashboard.displayName" t-att-title="dashboard.displayName" class="o_search_panel_category_value list-group-item cursor-pointer border-0 d-flex justify-content-between align-items-center" t-att-class="{'active': dashboard.id === state.activeDashboard.id}">
                        <div class="o_dashboard_name">
                            <t t-esc="dashboard.displayName"/>
                        </div>
                        <t t-set="comp" t-value="dashboardButton"/>
                        <t t-if="comp">
                            <t t-component="comp" t-props="{ dashboardId: dashboard.id, onClick: this.editDashboard.bind(this) }"/>
                        </t>
                    </li>
                </ul>
            </section>
        </div>
    </t>
`);
registerTemplate("spreadsheet_dashboard.DashboardDateFilter", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_date_filter/dashboard_date_filter.xml`, `<t t-name="spreadsheet_dashboard.DashboardDateFilter" xml:space="preserve">
        <Dropdown navigationOptions="{ 'shouldFocusChildInput': false }">
            <button class="btn btn-secondary o-btn-date-filter">
                <i class="fa fa-calendar me-2"/>
                <span class="o-date-filter-value" t-esc="inputValue"/>
            </button>
            <t t-set-slot="content">
                <DateFilterDropdown value="props.value" update="props.update"/>
            </t>
        </Dropdown>
        <button class="btn btn-secondary ms-1 btn-previous-date" t-on-click="this.selectPrevious" t-att-disabled="this.props.value === undefined">
            <i class="fa fa-caret-left"/>
        </button>
        <button class="btn btn-secondary ms-1 btn-next-date" t-on-click="this.selectNext" t-att-disabled="this.props.value === undefined">
            <i class="fa fa-caret-right"/>
        </button>
    </t>
`);
registerTemplate("spreadsheet_dashboard.DashboardFacet", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_facet/dashboard_facet.xml`, `<t t-name="spreadsheet_dashboard.DashboardFacet" xml:space="preserve">
        <div class="o_searchview_facet position-relative d-inline-flex align-items-stretch rounded-2 bg-200 text-nowrap opacity-trigger-hover mw-100 o_facet_with_domain" tabindex="0">
            <div class="position-absolute start-0 top-0 bottom-0 end-0 bg-view border rounded-2 shadow opacity-0 opacity-100-hover"/>
            <div class="o_searchview_facet_label position-relative rounded-start-2 px-1 rounded-end-0 p-0 btn btn-primary" t-on-click.stop="props.onClick">
                <small class="px-1" t-esc="props.facet.title"/>
                <span class="position-absolute start-0 top-0 bottom-0 end-0 bg-inherit opacity-0 opacity-100-hover">
                    <i class="fa fa-fw fa-cog"/>
                </span>
            </div>
            <div class="o_facet_values position-relative d-flex flex-wrap align-items-center ps-2 rounded-end-2 text-wrap overflow-hidden">
                <span><small class="o_facet_values_sep small mx-1 opacity-50" t-esc="props.facet.operator" t-att-title="props.facet.operator"/></span>
                <span t-foreach="props.facet.values" t-as="value" t-key="value_index">
                    <em t-if="!value_first" class="o_facet_values_sep small fw-bold mx-1 opacity-50" t-esc="props.facet.separator"/>
                    <small class="o_facet_value text-truncate" t-esc="value" t-att-title="value"/>
                </span>
            </div>
            <button class="o_facet_remove oi oi-close btn btn-link py-0 px-2 text-danger d-print-none" title="Remove" t-on-click.stop="props.clearFilter"/>
        </div>
    </t>
`);
registerTemplate("spreadsheet_dashboard.DashboardSearchBar", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/dashboard_search_bar/dashboard_search_bar.xml`, `<t t-name="spreadsheet_dashboard.DashboardSearchBar" xml:space="preserve">
        <div class="o_sp_dashboard_search d-flex input-group mt-1 mt-md-0">
            <div class="o_searchview form-control d-flex align-items-center py-1 border-end-0" t-on-click="openDialog">
                <button class="btn border-0 p-0">
                    <i class="oi oi-search me-2"/>
                </button>
                <div class="d-flex flex-grow-1 flex-wrap gap-1 mw-100">
                    <t t-foreach="facets" t-as="facet" t-key="facet.id">
                        <DashboardFacet facet="facet" clearFilter="() =&gt; this.clearFilter(facet.id)" onClick.bind="openDialog"/>
                    </t>
                </div>
            </div>
            <button class="o_searchview_dropdown_toggler btn btn-outline-secondary o-dropdown-caret rounded-start-0 o-dropdown dropdown-toggle dropdown" t-on-click="openDialog"/>
            <div class="o_sp_date_filter_button ms-2 d-flex" t-if="firstDateFilter">
                <DashboardDateFilter value="firstDateFilterValue" update.bind="updateFirstDateFilter"/>
            </div>
        </div>
    </t>
`);
registerTemplate("spreadsheet_dashboard.DashboardMobileSearchPanel", `/spreadsheet_dashboard/static/src/bundle/dashboard_action/mobile_search_panel/mobile_search_panel.xml`, `<div t-name="spreadsheet_dashboard.DashboardMobileSearchPanel" class="o_search_panel o_search_panel_summary btn w-100 overflow-visible border-bottom" xml:space="preserve">
        <t t-if="state.isOpen">
            <t t-portal="'body'">
                <div class="o_spreadsheet_dashboard_search_panel o_search_panel o_searchview o_mobile_search">
                    <div class="o_mobile_search_header">
                        <button type="button" class="o_mobile_search_button btn" t-on-click="() =&gt; this.state.isOpen = false">
                            <i class="oi oi-arrow-left"/>
                            <strong class="ml8">BACK</strong>
                        </button>
                    </div>
                    <div class="o_mobile_search_content">
                        <div class="o_search_panel flex-grow-0 flex-shrink-0 border-end pe-2 pb-5 ps-4 h-100 bg-view overflow-auto">
                            <section t-foreach="props.groups" t-as="group" t-key="group.id" class="o_search_panel_section o_search_panel_category">
                                <header class="o_search_panel_section_header pt-4 pb-2 text-uppercase cursor-default">
                                    <b t-esc="group.name"/>
                                </header>
                                <ul class="list-group d-block o_search_panel_field">
                                    <li t-foreach="group.dashboards" t-as="dashboard" t-key="dashboard.id" t-on-click="() =&gt; this.onDashboardSelected(dashboard.id)" class="o_search_panel_category_value list-group-item py-1 o_cursor_pointer border-0 ps-0 pe-2">
                                        <header class="list-group-item list-group-item-action d-flex align-items-center p-0 border-0" t-att-class="{'active text-900 fw-bold': dashboard.id === props.activeDashboard.id}">
                                            <div class="o_search_panel_label d-flex align-items-center overflow-hidden w-100 o_cursor_pointer mb-0">

                                                <button class="o_toggle_fold btn p-0 flex-shrink-0 text-center"/>
                                                <span t-esc="dashboard.displayName" class="o_search_panel_label_title text-truncate"/>
                                            </div>

                                        </header>
                                    </li>
                                </ul>
                            </section>
                        </div>
                    </div>
                </div>
            </t>
        </t>
        <div t-elif="props.groups.length" t-on-click="openDashboardSelection" class="d-flex align-items-center">
            <i class="fa fa-fw fa-filter"/>
            <div t-esc="searchBarText" class="o_search_panel_current_selection text-truncate ms-2 me-auto"/>
        </div>
    </div>
`);
                    });
